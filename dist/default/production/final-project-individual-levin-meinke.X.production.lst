

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 15:46:33 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    85   000000                     
    86                           ; Generated 21/07/2023 GMT
    87                           ; 
    88                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    89                           ; All rights reserved.
    90                           ; 
    91                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    92                           ; 
    93                           ; Redistribution and use in source and binary forms, with or without modification, are
    94                           ; permitted provided that the following conditions are met:
    95                           ; 
    96                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    97                           ;        conditions and the following disclaimer.
    98                           ; 
    99                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   100                           ;        of conditions and the following disclaimer in the documentation and/or other
   101                           ;        materials provided with the distribution. Publication is not required when
   102                           ;        this file is used in an embedded application.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F67K40 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120   000000                     
   121                           	psect	smallconst
   122   000E00                     __psmallconst:
   123                           	callstack 0
   124   000E00  00                 	db	0
   125   000E01                     _dp_l:
   126                           	callstack 0
   127   000E01  0000               	dw	0
   128   000E03  0000               	dw	0
   129   000E05  CFDC               	dw	53212
   130   000E07  35D1               	dw	13777
   131   000E09                     __end_of_dp_l:
   132                           	callstack 0
   133   000E09                     _dp_h:
   134                           	callstack 0
   135   000E09  0000               	dw	0
   136   000E0B  0000               	dw	0
   137   000E0D  C000               	dw	49152
   138   000E0F  3F15               	dw	16149
   139   000E11                     __end_of_dp_h:
   140                           	callstack 0
   141   000E11                     _bp:
   142                           	callstack 0
   143   000E11  0000               	dw	0
   144   000E13  3F80               	dw	16256
   145   000E15  0000               	dw	0
   146   000E17  3FC0               	dw	16320
   147   000E19                     __end_of_bp:
   148                           	callstack 0
   149   000E19  A570               	dw	42352
   150   000E1B  36EC               	dw	14060
   151   000E1D                     __end_of_ivln2_l:
   152                           	callstack 0
   153   000E1D  AA3B               	dw	43579
   154   000E1F  3FB8               	dw	16312
   155   000E21                     __end_of_ivln2:
   156                           	callstack 0
   157   000E21  384F               	dw	14415
   158   000E23  3F76               	dw	16246
   159   000E25                     __end_of_cp:
   160                           	callstack 0
   161   000E25  AA3C               	dw	43580
   162   000E27  3338               	dw	13112
   163   000E29                     __end_of_ovt:
   164                           	callstack 0
   165   000E29  BE8C               	dw	48780
   166   000E2B  35BF               	dw	13759
   167   000E2D                     __end_of_lg2_l:
   168                           	callstack 0
   169   000E2D  7200               	dw	29184
   170   000E2F  3F31               	dw	16177
   171   000E31                     __end_of_lg2_h:
   172                           	callstack 0
   173   000E31  7218               	dw	29208
   174   000E33  3F31               	dw	16177
   175   000E35                     __end_of_lg2:
   176                           	callstack 0
   177   000E35  BB4C               	dw	47948
   178   000E37  3331               	dw	13105
   179   000E39                     __end_of_P5:
   180                           	callstack 0
   181   000E39  EA0E               	dw	59918
   182   000E3B  B5DD               	dw	46557
   183   000E3D                     __end_of_P4:
   184                           	callstack 0
   185   000E3D  B355               	dw	45909
   186   000E3F  388A               	dw	14474
   187   000E41                     __end_of_P3:
   188                           	callstack 0
   189   000E41  0B61               	dw	2913
   190   000E43  BB36               	dw	47926
   191   000E45                     __end_of_P2:
   192                           	callstack 0
   193   000E45  AAAB               	dw	43691
   194   000E47  3E2A               	dw	15914
   195   000E49                     __end_of_P1:
   196                           	callstack 0
   197   000E49  F142               	dw	61762
   198   000E4B  3E53               	dw	15955
   199   000E4D                     __end_of_L6:
   200                           	callstack 0
   201   000E4D  3255               	dw	12885
   202   000E4F  3E6C               	dw	15980
   203   000E51                     __end_of_L5:
   204                           	callstack 0
   205   000E51  A305               	dw	41733
   206   000E53  3E8B               	dw	16011
   207   000E55                     __end_of_L4:
   208                           	callstack 0
   209   000E55  AAAB               	dw	43691
   210   000E57  3EAA               	dw	16042
   211   000E59                     __end_of_L3:
   212                           	callstack 0
   213   000E59  6DB7               	dw	28087
   214   000E5B  3EDB               	dw	16091
   215   000E5D                     __end_of_L2:
   216                           	callstack 0
   217   000E5D  999A               	dw	39322
   218   000E5F  3F19               	dw	16153
   219   000E61                     __end_of_L1:
   220                           	callstack 0
   221   000E61  0000               	dw	0
   222   000E63  4B80               	dw	19328
   223   000E65                     __end_of_two24:
   224                           	callstack 0
   225   000E65  AA00               	dw	43520
   226   000E67  3FB8               	dw	16312
   227   000E69                     __end_of_ivln2_h:
   228                           	callstack 0
   229   000E69  23C6               	dw	9158
   230   000E6B  B8F6               	dw	47350
   231   000E6D                     __end_of_cp_l:
   232                           	callstack 0
   233   000E6D  4000               	dw	16384
   234   000E6F  3F76               	dw	16246
   235   000E71                     __end_of_cp_h:
   236                           	callstack 0
   237   000000                     _TX4REG	set	3812
   238   000000                     _RC4STAbits	set	3815
   239   000000                     _SP4BRGH	set	3814
   240   000000                     _TRISFbits	set	3974
   241   000000                     _LATHbits	set	3968
   242   000000                     _TRISAbits	set	3969
   243   000000                     _TRISGbits	set	3975
   244   000000                     _SSP2CON2bits	set	3802
   245   000000                     _RX4PPS	set	3605
   246   000000                     _SSP2CLKPPS	set	3612
   247   000000                     _SSP2DATPPS	set	3613
   248   000000                     _ANSELDbits	set	3751
   249   000000                     _SSP2ADD	set	3798
   250   000000                     _SSP2CON1bits	set	3801
   251   000000                     _LATAbits	set	3961
   252   000000                     _LATGbits	set	3967
   253   000000                     _LATCbits	set	3963
   254   000000                     _LATEbits	set	3965
   255   000000                     _PORTBbits	set	3978
   256   000000                     _TRISHbits	set	3976
   257   000000                     _T2PR	set	4028
   258   000000                     _T2CONbits	set	4029
   259   000000                     _CCPR2H	set	4006
   260   000000                     _CCPR1H	set	4010
   261   000000                     _TRISCbits	set	3971
   262   000000                     _TRISDbits	set	3972
   263   000000                     _TRISEbits	set	3973
   264   000000                     _RC4REG	set	3811
   265   000000                     _SP4BRGL	set	3813
   266   000000                     _TX4STAbits	set	3816
   267   000000                     _BAUD4CONbits	set	3817
   268   000000                     _SSP2CON2	set	3802
   269   000000                     _CCPR4H	set	3873
   270   000000                     _CCPR3H	set	3877
   271   000000                     _SSP2STAT	set	3800
   272   000000                     _ANSELFbits	set	3764
   273   000000                     _SSP2BUF	set	3797
   274   000000                     _PIE0bits	set	3625
   275   000000                     _PIE2bits	set	3627
   276   000000                     _RC7PPS	set	3689
   277   000000                     _RD5PPS	set	3695
   278   000000                     _RE2PPS	set	3700
   279   000000                     _RD6PPS	set	3696
   280   000000                     _RE4PPS	set	3702
   281   000000                     _RG6PPS	set	3720
   282   000000                     _TMR0L	set	4051
   283   000000                     _TMR0H	set	4052
   284   000000                     _T0CON0bits	set	4053
   285   000000                     _T0CON1bits	set	4054
   286   000000                     _T2CLKCONbits	set	4031
   287   000000                     _T2HLTbits	set	4030
   288   000000                     _CCP1CONbits	set	4011
   289   000000                     _CCPTMRS0bits	set	4013
   290   000000                     _CCP2CONbits	set	4007
   291   000000                     _ADREFbits	set	3928
   292   000000                     _CCP3CONbits	set	3878
   293   000000                     _CCP4CONbits	set	3874
   294   000000                     _INTCONbits	set	4082
   295   000000                     _PIE4bits	set	3629
   296   000000                     _PIR4bits	set	3639
   297   000000                     _RC0PPS	set	3682
   298   000000                     _ADPCH	set	3935
   299   000000                     _ADRESH	set	3940
   300   000000                     _ADCON0bits	set	3936
   301   000E71                     STR_2:
   302                           
   303                           ; BSR set to: 14
   304   000E71  67                 	db	103	;'g'
   305   000E72  72                 	db	114	;'r'
   306   000E73  65                 	db	101	;'e'
   307   000E74  65                 	db	101	;'e'
   308   000E75  6E                 	db	110	;'n'
   309   000E76  72                 	db	114	;'r'
   310   000E77  20                 	db	32
   311   000E78  3D                 	db	61	;'='
   312   000E79  20                 	db	32
   313   000E7A  25                 	db	37
   314   000E7B  66                 	db	102	;'f'
   315   000E7C  20                 	db	32
   316   000E7D  0D                 	db	13
   317   000E7E  0A                 	db	10
   318   000E7F  00                 	db	0
   319   000E80                     STR_3:
   320                           
   321                           ; BSR set to: 14
   322   000E80  62                 	db	98	;'b'
   323   000E81  6C                 	db	108	;'l'
   324   000E82  75                 	db	117	;'u'
   325   000E83  65                 	db	101	;'e'
   326   000E84  72                 	db	114	;'r'
   327   000E85  20                 	db	32
   328   000E86  3D                 	db	61	;'='
   329   000E87  20                 	db	32
   330   000E88  25                 	db	37
   331   000E89  66                 	db	102	;'f'
   332   000E8A  20                 	db	32
   333   000E8B  0D                 	db	13
   334   000E8C  0A                 	db	10
   335   000E8D  00                 	db	0
   336   000E8E                     STR_1:
   337                           
   338                           ; BSR set to: 14
   339   000E8E  72                 	db	114	;'r'
   340   000E8F  65                 	db	101	;'e'
   341   000E90  64                 	db	100	;'d'
   342   000E91  72                 	db	114	;'r'
   343   000E92  20                 	db	32
   344   000E93  3D                 	db	61	;'='
   345   000E94  20                 	db	32
   346   000E95  25                 	db	37
   347   000E96  66                 	db	102	;'f'
   348   000E97  20                 	db	32
   349   000E98  0D                 	db	13
   350   000E99  0A                 	db	10
   351   000E9A  00                 	db	0
   352   000E9B                     STR_4:
   353                           
   354                           ; BSR set to: 14
   355   000E9B  69                 	db	105	;'i'
   356   000E9C  6E                 	db	110	;'n'
   357   000E9D  66                 	db	102	;'f'
   358   000E9E  00                 	db	0
   359   000E9F                     STR_7:
   360                           
   361                           ; BSR set to: 14
   362   000E9F  6E                 	db	110	;'n'
   363   000EA0  61                 	db	97	;'a'
   364   000EA1  6E                 	db	110	;'n'
   365   000EA2  00                 	db	0
   366   000EA3  00                 	db	0	; dummy byte at the end
   367   000000                     
   368                           ; #config settings
   369                           
   370                           	psect	cinit
   371   00832C                     __pcinit:
   372                           	callstack 0
   373   00832C                     start_initialization:
   374                           	callstack 0
   375   00832C                     __initialization:
   376                           	callstack 0
   377                           
   378                           ; Clear objects allocated to BANK4 (80 bytes)
   379   00832C  EE04  F000         	lfsr	0,__pbssBANK4
   380   008330  0E50               	movlw	80
   381   008332                     clear_0:
   382   008332  6AEE               	clrf	postinc0,c
   383   008334  06E8               	decf	wreg,f,c
   384   008336  E1FD               	bnz	clear_0
   385                           
   386                           ; Clear objects allocated to BANK1 (60 bytes)
   387   008338  EE01  F0B8         	lfsr	0,__pbssBANK1
   388   00833C  0E3C               	movlw	60
   389   00833E                     clear_1:
   390   00833E  6AEE               	clrf	postinc0,c
   391   008340  06E8               	decf	wreg,f,c
   392   008342  E1FD               	bnz	clear_1
   393                           
   394                           ; Clear objects allocated to BANK0 (38 bytes)
   395   008344  EE00  F0BC         	lfsr	0,__pbssBANK0
   396   008348  0E26               	movlw	38
   397   00834A                     clear_2:
   398   00834A  6AEE               	clrf	postinc0,c
   399   00834C  06E8               	decf	wreg,f,c
   400   00834E  E1FD               	bnz	clear_2
   401                           
   402                           ; Clear objects allocated to COMRAM (1 bytes)
   403   008350  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   404   008352                     end_of_initialization:
   405                           	callstack 0
   406   008352                     __end_of__initialization:
   407                           	callstack 0
   408   008352  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   409   008354  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   410   008356  0100               	movlb	0
   411   008358  EFC8  F027         	goto	_main	;jump to C main() function
   412                           
   413                           	psect	bssCOMRAM
   414   00005D                     __pbssCOMRAM:
   415                           	callstack 0
   416   00005D                     _TxBufWriteCnt:
   417                           	callstack 0
   418   00005D                     	ds	1
   419                           
   420                           	psect	bssBANK0
   421   0000BC                     __pbssBANK0:
   422                           	callstack 0
   423   0000BC                     _EUSART4RXbuf:
   424                           	callstack 0
   425   0000BC                     	ds	20
   426   0000D0                     floorf@F521:
   427                           	callstack 0
   428   0000D0                     	ds	4
   429   0000D4                     ___fpclassifyf@F465:
   430                           	callstack 0
   431   0000D4                     	ds	4
   432   0000D8                     _errno:
   433                           	callstack 0
   434   0000D8                     	ds	2
   435   0000DA                     _width:
   436                           	callstack 0
   437   0000DA                     	ds	2
   438   0000DC                     _prec:
   439                           	callstack 0
   440   0000DC                     	ds	2
   441   0000DE                     _flags:
   442                           	callstack 0
   443   0000DE                     	ds	1
   444   0000DF                     _TxBufReadCnt:
   445                           	callstack 0
   446   0000DF                     	ds	1
   447   0000E0                     _RxBufReadCnt:
   448                           	callstack 0
   449   0000E0                     	ds	1
   450   0000E1                     _RxBufWriteCnt:
   451                           	callstack 0
   452   0000E1                     	ds	1
   453                           
   454                           	psect	bssBANK1
   455   0001B8                     __pbssBANK1:
   456                           	callstack 0
   457   0001B8                     _EUSART4TXbuf:
   458                           	callstack 0
   459   0001B8                     	ds	60
   460                           
   461                           	psect	bssBANK4
   462   000400                     __pbssBANK4:
   463                           	callstack 0
   464   000400                     _dbuf:
   465                           	callstack 0
   466   000400                     	ds	80
   467                           
   468                           	psect	cstackBANK3
   469   000300                     __pcstackBANK3:
   470                           	callstack 0
   471   000300                     main@clear_val:
   472                           	callstack 0
   473                           
   474                           ; 20 bytes @ 0x0
   475   000300                     	ds	20
   476   000314                     main@red_val:
   477                           	callstack 0
   478                           
   479                           ; 20 bytes @ 0x14
   480   000314                     	ds	20
   481   000328                     main@green_val:
   482                           	callstack 0
   483                           
   484                           ; 20 bytes @ 0x28
   485   000328                     	ds	20
   486   00033C                     main@blue_val:
   487                           	callstack 0
   488                           
   489                           ; 20 bytes @ 0x3C
   490   00033C                     	ds	20
   491   000350                     main@actions:
   492                           	callstack 0
   493                           
   494                           ; 40 bytes @ 0x50
   495   000350                     	ds	40
   496   000378                     main@timings:
   497                           	callstack 0
   498                           
   499                           ; 40 bytes @ 0x78
   500   000378                     	ds	40
   501   0003A0                     main@lum_threshold:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0xA0
   505   0003A0                     	ds	2
   506   0003A2                     main@redm:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0xA2
   510   0003A2                     	ds	2
   511   0003A4                     main@greenm:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0xA4
   515   0003A4                     	ds	2
   516   0003A6                     main@bluem:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0xA6
   520   0003A6                     	ds	2
   521   0003A8                     main@measured_time:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xA8
   525   0003A8                     	ds	2
   526   0003AA                     main@actions_completed:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xAA
   530   0003AA                     	ds	2
   531   0003AC                     main@upcoming_action:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0xAC
   535   0003AC                     	ds	2
   536   0003AE                     main@lum:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0xAE
   540   0003AE                     	ds	2
   541   0003B0                     main@going_forward:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0xB0
   545   0003B0                     	ds	1
   546   0003B1                     main@i:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0xB1
   550   0003B1                     	ds	1
   551   0003B2                     main@action_to_do:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0xB2
   555   0003B2                     	ds	2
   556   0003B4                     main@motorL:
   557                           	callstack 0
   558                           
   559                           ; 9 bytes @ 0xB4
   560   0003B4                     	ds	9
   561   0003BD                     main@motorR:
   562                           	callstack 0
   563                           
   564                           ; 9 bytes @ 0xBD
   565   0003BD                     	ds	9
   566   0003C6                     main@pmL:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0xC6
   570   0003C6                     	ds	2
   571   0003C8                     main@pmR:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0xC8
   575   0003C8                     	ds	2
   576                           
   577                           	psect	cstackBANK2
   578   000200                     __pcstackBANK2:
   579                           	callstack 0
   580   000200                     decide_action@clear_val:
   581                           	callstack 0
   582                           
   583                           ; 20 bytes @ 0x0
   584   000200                     	ds	20
   585   000214                     decide_action@red_val:
   586                           	callstack 0
   587                           
   588                           ; 20 bytes @ 0x14
   589   000214                     	ds	20
   590   000228                     decide_action@green_val:
   591                           	callstack 0
   592                           
   593                           ; 20 bytes @ 0x28
   594   000228                     	ds	20
   595   00023C                     decide_action@blue_val:
   596                           	callstack 0
   597                           
   598                           ; 20 bytes @ 0x3C
   599   00023C                     	ds	20
   600   000250                     _decide_action$3166:
   601                           	callstack 0
   602                           
   603                           ; 4 bytes @ 0x50
   604   000250                     	ds	4
   605   000254                     decide_action@pred_val:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x54
   609   000254                     	ds	2
   610   000256                     decide_action@pblue_val:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x56
   614   000256                     	ds	2
   615   000258                     decide_action@pgreen_val:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x58
   619   000258                     	ds	2
   620   00025A                     decide_action@rgb_comp:
   621                           	callstack 0
   622                           
   623                           ; 32 bytes @ 0x5A
   624   00025A                     	ds	32
   625   00027A                     decide_action@action:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x7A
   629   00027A                     	ds	1
   630   00027B                     decide_action@total:
   631                           	callstack 0
   632                           
   633                           ; 4 bytes @ 0x7B
   634   00027B                     	ds	4
   635   00027F                     decide_action@i:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x7F
   639   00027F                     	ds	1
   640   000280                     decide_action@red:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x80
   644   000280                     	ds	4
   645   000284                     decide_action@green:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0x84
   649   000284                     	ds	4
   650   000288                     decide_action@blue:
   651                           	callstack 0
   652                           
   653                           ; 4 bytes @ 0x88
   654   000288                     	ds	4
   655   00028C                     decide_action@red_r:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0x8C
   659   00028C                     	ds	4
   660   000290                     decide_action@green_r:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x90
   664   000290                     	ds	4
   665   000294                     decide_action@blue_r:
   666                           	callstack 0
   667                           
   668                           ; 4 bytes @ 0x94
   669   000294                     	ds	4
   670   000298                     _decide_action$3167:
   671                           	callstack 0
   672                           
   673                           ; 4 bytes @ 0x98
   674   000298                     	ds	4
   675   00029C                     _decide_action$3168:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x9C
   679   00029C                     	ds	4
   680   0002A0                     _decide_action$3169:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0xA0
   684   0002A0                     	ds	4
   685   0002A4                     _decide_action$3170:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0xA4
   689   0002A4                     	ds	4
   690   0002A8                     _decide_action$3171:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0xA8
   694   0002A8                     	ds	4
   695   0002AC                     _decide_action$3172:
   696                           	callstack 0
   697                           
   698                           ; 4 bytes @ 0xAC
   699   0002AC                     	ds	4
   700   0002B0                     _decide_action$3173:
   701                           	callstack 0
   702                           
   703                           ; 4 bytes @ 0xB0
   704   0002B0                     	ds	4
   705                           
   706                           	psect	cstackBANK1
   707   000100                     __pcstackBANK1:
   708                           	callstack 0
   709   000100                     _powf$3179:
   710                           	callstack 0
   711                           
   712                           ; 4 bytes @ 0x0
   713   000100                     	ds	4
   714   000104                     _powf$3180:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x4
   718   000104                     	ds	4
   719   000108                     _powf$3184:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x8
   723   000108                     	ds	4
   724   00010C                     _powf$3185:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0xC
   728   00010C                     	ds	4
   729   000110                     _powf$3186:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x10
   733   000110                     	ds	4
   734   000114                     _powf$3187:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x14
   738   000114                     	ds	4
   739   000118                     _powf$3188:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x18
   743   000118                     	ds	4
   744   00011C                     powf@t2:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x1C
   748   00011C                     	ds	4
   749   000120                     powf@z_h:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x20
   753   000120                     	ds	4
   754   000124                     powf@z_l:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0x24
   758   000124                     	ds	4
   759   000128                     powf@i:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0x28
   763   000128                     	ds	4
   764   00012C                     powf@y1:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x2C
   768   00012C                     	ds	4
   769   000130                     powf@s_l:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x30
   773   000130                     	ds	4
   774   000134                     powf@t_l:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x34
   778   000134                     	ds	4
   779   000138                     _powf$3178:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x38
   783   000138                     	ds	4
   784   00013C                     _powf$3182:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x3C
   788   00013C                     	ds	4
   789   000140                     _powf$3183:
   790                           	callstack 0
   791                           
   792                           ; 4 bytes @ 0x40
   793   000140                     	ds	4
   794   000144                     powf@w:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x44
   798   000144                     	ds	4
   799   000148                     _powf$3174:
   800                           	callstack 0
   801                           
   802                           ; 4 bytes @ 0x48
   803   000148                     	ds	4
   804   00014C                     _powf$3176:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0x4C
   808   00014C                     	ds	4
   809   000150                     powf@r:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x50
   813   000150                     	ds	4
   814   000154                     powf@yisint:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x54
   818   000154                     	ds	4
   819   000158                     _powf$3175:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x58
   823   000158                     	ds	4
   824   00015C                     _powf$3181:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0x5C
   828   00015C                     	ds	4
   829   000160                     powf@s:
   830                           	callstack 0
   831                           
   832                           ; 4 bytes @ 0x60
   833   000160                     	ds	4
   834   000164                     powf@sn:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x64
   838   000164                     	ds	4
   839   000168                     powf@hx:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x68
   843   000168                     	ds	4
   844   00016C                     powf@p_l:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x6C
   848   00016C                     	ds	4
   849   000170                     powf@t_h:
   850                           	callstack 0
   851                           
   852                           ; 4 bytes @ 0x70
   853   000170                     	ds	4
   854   000174                     powf@s_h:
   855                           	callstack 0
   856                           
   857                           ; 4 bytes @ 0x74
   858   000174                     	ds	4
   859   000178                     powf@ax:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x78
   863   000178                     	ds	4
   864   00017C                     powf@u:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x7C
   868   00017C                     	ds	4
   869   000180                     powf@v:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x80
   873   000180                     	ds	4
   874   000184                     powf@hy:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x84
   878   000184                     	ds	4
   879   000188                     powf@n:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0x88
   883   000188                     	ds	4
   884   00018C                     powf@t1:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x8C
   888   00018C                     	ds	4
   889   000190                     powf@s2:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x90
   893   000190                     	ds	4
   894   000194                     powf@iy:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x94
   898   000194                     	ds	4
   899   000198                     powf@is:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0x98
   903   000198                     	ds	4
   904   00019C                     _powf$3177:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x9C
   908   00019C                     	ds	4
   909   0001A0                     powf@p_h:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0xA0
   913   0001A0                     	ds	4
   914   0001A4                     powf@k:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0xA4
   918   0001A4                     	ds	4
   919   0001A8                     powf@j:
   920                           	callstack 0
   921                           
   922                           ; 4 bytes @ 0xA8
   923   0001A8                     	ds	4
   924   0001AC                     powf@ix:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0xAC
   928   0001AC                     	ds	4
   929   0001B0                     powf@t:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0xB0
   933   0001B0                     	ds	4
   934   0001B4                     powf@z:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0xB4
   938   0001B4                     	ds	4
   939                           
   940                           	psect	cstackBANK0
   941   000060                     __pcstackBANK0:
   942                           	callstack 0
   943   000060                     ?_powf:
   944                           	callstack 0
   945   000060                     efgtoa@fp:
   946                           	callstack 0
   947   000060                     powf@x:
   948                           	callstack 0
   949                           
   950                           ; 4 bytes @ 0x0
   951   000060                     	ds	1
   952   000061                     efgtoa@f:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x1
   956   000061                     	ds	3
   957   000064                     powf@y:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x4
   961   000064                     	ds	1
   962   000065                     efgtoa@c:
   963                           	callstack 0
   964                           
   965                           ; 1 bytes @ 0x5
   966   000065                     	ds	1
   967   000066                     efgtoa@ne:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x6
   971   000066                     	ds	2
   972   000068                     ??_powf:
   973   000068                     efgtoa@p:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x8
   977   000068                     	ds	2
   978   00006A                     efgtoa@t:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0xA
   982   00006A                     	ds	2
   983   00006C                     _efgtoa$2679:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0xC
   987   00006C                     	ds	2
   988   00006E                     efgtoa@pp:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0xE
   992   00006E                     	ds	1
   993   00006F                     efgtoa@mode:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0xF
   997   00006F                     	ds	1
   998   000070                     efgtoa@nmode:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x10
  1002   000070                     	ds	1
  1003   000071                     efgtoa@d:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x11
  1007   000071                     	ds	2
  1008   000073                     efgtoa@m:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x13
  1012   000073                     	ds	2
  1013   000075                     efgtoa@e:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x15
  1017   000075                     	ds	2
  1018   000077                     efgtoa@w:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x17
  1022   000077                     	ds	2
  1023   000079                     efgtoa@ou:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x19
  1027   000079                     	ds	4
  1028   00007D                     efgtoa@i:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x1D
  1032   00007D                     	ds	2
  1033   00007F                     efgtoa@h:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x1F
  1037   00007F                     	ds	4
  1038   000083                     efgtoa@l:
  1039                           	callstack 0
  1040                           
  1041                           ; 4 bytes @ 0x23
  1042   000083                     	ds	4
  1043   000087                     efgtoa@sign:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x27
  1047   000087                     	ds	1
  1048   000088                     efgtoa@g:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x28
  1052   000088                     	ds	4
  1053   00008C                     efgtoa@n:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x2C
  1057   00008C                     	ds	2
  1058   00008E                     efgtoa@u:
  1059                           	callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x2E
  1062   00008E                     	ds	4
  1063   000092                     vfpfcnvrt@fp:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x32
  1067   000092                     	ds	1
  1068   000093                     vfpfcnvrt@fmt:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0x33
  1072   000093                     	ds	1
  1073   000094                     vfpfcnvrt@ap:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0x34
  1077   000094                     	ds	1
  1078   000095                     vfpfcnvrt@convarg:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x35
  1082   000095                     	ds	4
  1083   000099                     vfpfcnvrt@c:
  1084                           	callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x39
  1087   000099                     	ds	1
  1088   00009A                     vfpfcnvrt@cp:
  1089                           	callstack 0
  1090                           
  1091                           ; 1 bytes @ 0x3A
  1092   00009A                     	ds	1
  1093   00009B                     ?_vfprintf:
  1094                           	callstack 0
  1095   00009B                     vfprintf@fp:
  1096                           	callstack 0
  1097                           
  1098                           ; 1 bytes @ 0x3B
  1099   00009B                     	ds	1
  1100   00009C                     vfprintf@fmt:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x3C
  1104   00009C                     	ds	1
  1105   00009D                     vfprintf@ap:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x3D
  1109   00009D                     	ds	1
  1110   00009E                     ?_sprintf:
  1111                           	callstack 0
  1112   00009E                     sprintf@s:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x3E
  1116   00009E                     	ds	2
  1117   0000A0                     sprintf@fmt:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x40
  1121   0000A0                     	ds	5
  1122   0000A5                     sprintf@ap:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x45
  1126   0000A5                     	ds	1
  1127   0000A6                     sprintf@f:
  1128                           	callstack 0
  1129                           
  1130                           ; 12 bytes @ 0x46
  1131   0000A6                     	ds	12
  1132   0000B2                     decide_action@red_unsigned:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x52
  1136   0000B2                     	ds	2
  1137   0000B4                     decide_action@green_unsigned:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x54
  1141   0000B4                     	ds	2
  1142   0000B6                     decide_action@blue_unsigned:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x56
  1146   0000B6                     	ds	2
  1147   0000B8                     ??_main:
  1148                           
  1149                           ; 1 bytes @ 0x58
  1150   0000B8                     	ds	4
  1151                           
  1152                           	psect	cstackCOMRAM
  1153   000001                     __pcstackCOMRAM:
  1154                           	callstack 0
  1155   000001                     i2sendCharSerial4@charToSend:
  1156                           	callstack 0
  1157                           
  1158                           ; 1 bytes @ 0x0
  1159   000001                     	ds	1
  1160   000002                     ??_color_click_toggleLED:
  1161   000002                     ??_invert_action:
  1162   000002                     ??_I2C_2_Master_Idle:
  1163   000002                     ?_get16bitTMR0val:
  1164                           	callstack 0
  1165   000002                     ?___fpclassifyf:
  1166                           	callstack 0
  1167   000002                     ?___wmul:
  1168                           	callstack 0
  1169   000002                     ?___fladd:
  1170                           	callstack 0
  1171   000002                     ?_labs:
  1172                           	callstack 0
  1173   000002                     ?___flneg:
  1174                           	callstack 0
  1175   000002                     ?___fltol:
  1176                           	callstack 0
  1177   000002                     ?___xxtofl:
  1178                           	callstack 0
  1179   000002                     sendCharSerial4@charToSend:
  1180                           	callstack 0
  1181   000002                     initDCmotorsPWM@PWMperiod:
  1182                           	callstack 0
  1183   000002                     ___wmul@multiplier:
  1184                           	callstack 0
  1185   000002                     memcpy@d1:
  1186                           	callstack 0
  1187   000002                     fputc@c:
  1188                           	callstack 0
  1189   000002                     strcpy@dest:
  1190                           	callstack 0
  1191   000002                     ___fleq@ff1:
  1192                           	callstack 0
  1193   000002                     ___flneg@f1:
  1194                           	callstack 0
  1195   000002                     ___fltol@f1:
  1196                           	callstack 0
  1197   000002                     ___fladd@b:
  1198                           	callstack 0
  1199   000002                     ___xxtofl@val:
  1200                           	callstack 0
  1201   000002                     ___fpclassifyf@x:
  1202                           	callstack 0
  1203   000002                     labs@a:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x1
  1207   000002                     	ds	1
  1208   000003                     ??_I2C_2_Master_Read:
  1209   000003                     I2C_2_Master_Write@data_byte:
  1210                           	callstack 0
  1211   000003                     sendStringSerial4@string:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x2
  1215   000003                     	ds	1
  1216   000004                     ??_get16bitTMR0val:
  1217   000004                     color_writetoaddr@value:
  1218                           	callstack 0
  1219   000004                     invert_action@input_action:
  1220                           	callstack 0
  1221   000004                     I2C_2_Master_Read@ack:
  1222                           	callstack 0
  1223   000004                     fputc@fp:
  1224                           	callstack 0
  1225   000004                     strcpy@src:
  1226                           	callstack 0
  1227   000004                     ___wmul@multiplicand:
  1228                           	callstack 0
  1229   000004                     memcpy@s1:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x3
  1233   000004                     	ds	1
  1234   000005                     ??_fputc:
  1235   000005                     ??_strcpy:
  1236   000005                     color_writetoaddr@address:
  1237                           	callstack 0
  1238   000005                     I2C_2_Master_Read@tmp:
  1239                           	callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x4
  1242   000005                     	ds	1
  1243   000006                     ??___fpclassifyf:
  1244   000006                     ??_labs:
  1245   000006                     ??_color_click_init:
  1246   000006                     ??___fltol:
  1247   000006                     ??___xxtofl:
  1248   000006                     ?_color_read_Clear:
  1249                           	callstack 0
  1250   000006                     ?_color_read_Red:
  1251                           	callstack 0
  1252   000006                     ?_color_read_Green:
  1253                           	callstack 0
  1254   000006                     ?_color_read_Blue:
  1255                           	callstack 0
  1256   000006                     get16bitTMR0val@timer_val:
  1257                           	callstack 0
  1258   000006                     ___wmul@product:
  1259                           	callstack 0
  1260   000006                     memcpy@n:
  1261                           	callstack 0
  1262   000006                     strcpy@d:
  1263                           	callstack 0
  1264   000006                     ___fleq@ff2:
  1265                           	callstack 0
  1266   000006                     ___fladd@a:
  1267                           	callstack 0
  1268                           
  1269                           ; 4 bytes @ 0x5
  1270   000006                     	ds	2
  1271   000008                     ??_color_read_Clear:
  1272   000008                     ??_color_read_Red:
  1273   000008                     ??_color_read_Green:
  1274   000008                     ??_color_read_Blue:
  1275   000008                     ?___lwdiv:
  1276                           	callstack 0
  1277   000008                     memcpy@tmp:
  1278                           	callstack 0
  1279   000008                     ___lwdiv@dividend:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x7
  1283   000008                     	ds	1
  1284   000009                     memcpy@d:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x8
  1288   000009                     	ds	1
  1289   00000A                     ??___fladd:
  1290   00000A                     ??___fleq:
  1291   00000A                     ___fltol@sign1:
  1292                           	callstack 0
  1293   00000A                     ___xxtofl@sign:
  1294                           	callstack 0
  1295   00000A                     ___lwdiv@divisor:
  1296                           	callstack 0
  1297   00000A                     ___fpclassifyf@e:
  1298                           	callstack 0
  1299   00000A                     fputs@s:
  1300                           	callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x9
  1303   00000A                     	ds	1
  1304   00000B                     ___fltol@exp1:
  1305                           	callstack 0
  1306   00000B                     ___xxtofl@exp:
  1307                           	callstack 0
  1308   00000B                     color_read_Clear@tmp:
  1309                           	callstack 0
  1310   00000B                     color_read_Red@tmp:
  1311                           	callstack 0
  1312   00000B                     color_read_Green@tmp:
  1313                           	callstack 0
  1314   00000B                     color_read_Blue@tmp:
  1315                           	callstack 0
  1316   00000B                     memcpy@s:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0xA
  1320   00000B                     	ds	1
  1321   00000C                     fputs@fp:
  1322                           	callstack 0
  1323   00000C                     ___lwdiv@quotient:
  1324                           	callstack 0
  1325   00000C                     ___xxtofl@arg:
  1326                           	callstack 0
  1327   00000C                     ___fpclassifyf@u:
  1328                           	callstack 0
  1329                           
  1330                           ; 4 bytes @ 0xB
  1331   00000C                     	ds	1
  1332   00000D                     fputs@c:
  1333                           	callstack 0
  1334                           
  1335                           ; 1 bytes @ 0xC
  1336   00000D                     	ds	1
  1337   00000E                     ___lwdiv@counter:
  1338                           	callstack 0
  1339   00000E                     ___fladd@signs:
  1340                           	callstack 0
  1341   00000E                     fputs@i:
  1342                           	callstack 0
  1343                           
  1344                           ; 2 bytes @ 0xD
  1345   00000E                     	ds	1
  1346   00000F                     ___fladd@aexp:
  1347                           	callstack 0
  1348   00000F                     setMotorPWM@m:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0xE
  1352   00000F                     	ds	1
  1353   000010                     ___fladd@bexp:
  1354                           	callstack 0
  1355   000010                     pad@fp:
  1356                           	callstack 0
  1357                           
  1358                           ; 1 bytes @ 0xF
  1359   000010                     	ds	1
  1360   000011                     ??_setMotorPWM:
  1361   000011                     ___fladd@grs:
  1362                           	callstack 0
  1363   000011                     pad@buf:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x10
  1367   000011                     	ds	1
  1368   000012                     ?_sqrtf:
  1369                           	callstack 0
  1370   000012                     ?___flmul:
  1371                           	callstack 0
  1372   000012                     ___flmul@b:
  1373                           	callstack 0
  1374   000012                     sqrtf@x:
  1375                           	callstack 0
  1376                           
  1377                           ; 4 bytes @ 0x11
  1378   000012                     	ds	1
  1379   000013                     setMotorPWM@posDuty:
  1380                           	callstack 0
  1381   000013                     pad@p:
  1382                           	callstack 0
  1383                           
  1384                           ; 2 bytes @ 0x12
  1385   000013                     	ds	1
  1386   000014                     setMotorPWM@negDuty:
  1387                           	callstack 0
  1388                           
  1389                           ; 1 bytes @ 0x13
  1390   000014                     	ds	1
  1391   000015                     ??_pad:
  1392   000015                     fullSpeedAhead@mL:
  1393                           	callstack 0
  1394   000015                     stop@mL:
  1395                           	callstack 0
  1396                           
  1397                           ; 2 bytes @ 0x14
  1398   000015                     	ds	1
  1399   000016                     ??_sqrtf:
  1400   000016                     pad@i:
  1401                           	callstack 0
  1402   000016                     ___flmul@a:
  1403                           	callstack 0
  1404                           
  1405                           ; 4 bytes @ 0x15
  1406   000016                     	ds	1
  1407   000017                     fullSpeedAhead@mR:
  1408                           	callstack 0
  1409   000017                     stop@mR:
  1410                           	callstack 0
  1411                           
  1412                           ; 2 bytes @ 0x16
  1413   000017                     	ds	2
  1414   000019                     ??_fullSpeedAhead:
  1415   000019                     turn_left_90@mL:
  1416                           	callstack 0
  1417   000019                     turn_right_90@mL:
  1418                           	callstack 0
  1419   000019                     turn_left_135@mL:
  1420                           	callstack 0
  1421   000019                     turn_right_135@mL:
  1422                           	callstack 0
  1423   000019                     reverse_after_read@mL:
  1424                           	callstack 0
  1425   000019                     reverse_one_square@mL:
  1426                           	callstack 0
  1427   000019                     inch_forward@mL:
  1428                           	callstack 0
  1429                           
  1430                           ; 2 bytes @ 0x18
  1431   000019                     	ds	1
  1432   00001A                     ??___flmul:
  1433                           
  1434                           ; 1 bytes @ 0x19
  1435   00001A                     	ds	1
  1436   00001B                     turn_left_90@mR:
  1437                           	callstack 0
  1438   00001B                     turn_right_90@mR:
  1439                           	callstack 0
  1440   00001B                     turn_left_135@mR:
  1441                           	callstack 0
  1442   00001B                     turn_right_135@mR:
  1443                           	callstack 0
  1444   00001B                     reverse_after_read@mR:
  1445                           	callstack 0
  1446   00001B                     reverse_one_square@mR:
  1447                           	callstack 0
  1448   00001B                     inch_forward@mR:
  1449                           	callstack 0
  1450   00001B                     sqrtf@s:
  1451                           	callstack 0
  1452                           
  1453                           ; 4 bytes @ 0x1A
  1454   00001B                     	ds	2
  1455   00001D                     ??_turn_left_90:
  1456   00001D                     ??_turn_right_90:
  1457   00001D                     ??_turn_left_135:
  1458   00001D                     ??_turn_right_135:
  1459   00001D                     ??_reverse_after_read:
  1460   00001D                     ??_reverse_one_square:
  1461   00001D                     ??_inch_forward:
  1462                           
  1463                           ; 1 bytes @ 0x1C
  1464   00001D                     	ds	1
  1465   00001E                     ___flmul@sign:
  1466                           	callstack 0
  1467                           
  1468                           ; 1 bytes @ 0x1D
  1469   00001E                     	ds	1
  1470   00001F                     ___flmul@aexp:
  1471                           	callstack 0
  1472   00001F                     sqrtf@i:
  1473                           	callstack 0
  1474                           
  1475                           ; 4 bytes @ 0x1E
  1476   00001F                     	ds	1
  1477   000020                     ___flmul@grs:
  1478                           	callstack 0
  1479                           
  1480                           ; 4 bytes @ 0x1F
  1481   000020                     	ds	3
  1482   000023                     sqrtf@q:
  1483                           	callstack 0
  1484                           
  1485                           ; 4 bytes @ 0x22
  1486   000023                     	ds	1
  1487   000024                     ___flmul@bexp:
  1488                           	callstack 0
  1489                           
  1490                           ; 1 bytes @ 0x23
  1491   000024                     	ds	1
  1492   000025                     ___flmul@prod:
  1493                           	callstack 0
  1494                           
  1495                           ; 4 bytes @ 0x24
  1496   000025                     	ds	2
  1497   000027                     sqrtf@t:
  1498                           	callstack 0
  1499                           
  1500                           ; 4 bytes @ 0x26
  1501   000027                     	ds	2
  1502   000029                     ___flmul@temp:
  1503                           	callstack 0
  1504                           
  1505                           ; 2 bytes @ 0x28
  1506   000029                     	ds	2
  1507   00002B                     ?___fldiv:
  1508                           	callstack 0
  1509   00002B                     ?_scalbnf:
  1510                           	callstack 0
  1511   00002B                     ___fldiv@b:
  1512                           	callstack 0
  1513   00002B                     scalbnf@x:
  1514                           	callstack 0
  1515   00002B                     sqrtf@m:
  1516                           	callstack 0
  1517                           
  1518                           ; 4 bytes @ 0x2A
  1519   00002B                     	ds	4
  1520   00002F                     scalbnf@n:
  1521                           	callstack 0
  1522   00002F                     ___fldiv@a:
  1523                           	callstack 0
  1524   00002F                     sqrtf@r:
  1525                           	callstack 0
  1526                           
  1527                           ; 4 bytes @ 0x2E
  1528   00002F                     	ds	2
  1529   000031                     ??_scalbnf:
  1530                           
  1531                           ; 1 bytes @ 0x30
  1532   000031                     	ds	2
  1533   000033                     ??___fldiv:
  1534   000033                     sqrtf@ix:
  1535                           	callstack 0
  1536                           
  1537                           ; 4 bytes @ 0x32
  1538   000033                     	ds	2
  1539   000035                     scalbnf@u:
  1540                           	callstack 0
  1541                           
  1542                           ; 4 bytes @ 0x34
  1543   000035                     	ds	2
  1544   000037                     ___fldiv@rem:
  1545                           	callstack 0
  1546                           
  1547                           ; 4 bytes @ 0x36
  1548   000037                     	ds	2
  1549   000039                     scalbnf@y:
  1550                           	callstack 0
  1551                           
  1552                           ; 4 bytes @ 0x38
  1553   000039                     	ds	2
  1554   00003B                     ___fldiv@sign:
  1555                           	callstack 0
  1556                           
  1557                           ; 1 bytes @ 0x3A
  1558   00003B                     	ds	1
  1559   00003C                     ___fldiv@new_exp:
  1560                           	callstack 0
  1561                           
  1562                           ; 2 bytes @ 0x3B
  1563   00003C                     	ds	2
  1564   00003E                     ___fldiv@grs:
  1565                           	callstack 0
  1566                           
  1567                           ; 4 bytes @ 0x3D
  1568   00003E                     	ds	4
  1569   000042                     ___fldiv@bexp:
  1570                           	callstack 0
  1571                           
  1572                           ; 1 bytes @ 0x41
  1573   000042                     	ds	1
  1574   000043                     ___fldiv@aexp:
  1575                           	callstack 0
  1576                           
  1577                           ; 1 bytes @ 0x42
  1578   000043                     	ds	1
  1579   000044                     ?___flsub:
  1580                           	callstack 0
  1581   000044                     ?_floorf:
  1582                           	callstack 0
  1583   000044                     ___flsub@b:
  1584                           	callstack 0
  1585   000044                     floorf@x:
  1586                           	callstack 0
  1587                           
  1588                           ; 4 bytes @ 0x43
  1589   000044                     	ds	4
  1590   000048                     ??_floorf:
  1591   000048                     ___flsub@a:
  1592                           	callstack 0
  1593                           
  1594                           ; 4 bytes @ 0x47
  1595   000048                     	ds	4
  1596   00004C                     ___flge@ff1:
  1597                           	callstack 0
  1598                           
  1599                           ; 4 bytes @ 0x4B
  1600   00004C                     	ds	2
  1601   00004E                     floorf@m:
  1602                           	callstack 0
  1603                           
  1604                           ; 4 bytes @ 0x4D
  1605   00004E                     	ds	2
  1606   000050                     ___flge@ff2:
  1607                           	callstack 0
  1608                           
  1609                           ; 4 bytes @ 0x4F
  1610   000050                     	ds	2
  1611   000052                     floorf@e:
  1612                           	callstack 0
  1613                           
  1614                           ; 2 bytes @ 0x51
  1615   000052                     	ds	2
  1616   000054                     ??___flge:
  1617   000054                     floorf@u:
  1618                           	callstack 0
  1619                           
  1620                           ; 4 bytes @ 0x53
  1621   000054                     	ds	4
  1622   000058                     ??_efgtoa:
  1623                           
  1624                           ; 1 bytes @ 0x57
  1625   000058                     	ds	2
  1626   00005A                     ??_vfpfcnvrt:
  1627                           
  1628                           ; 1 bytes @ 0x59
  1629   00005A                     	ds	2
  1630   00005C                     vfprintf@cfmt:
  1631                           	callstack 0
  1632                           
  1633                           ; 1 bytes @ 0x5B
  1634   00005C                     	ds	1
  1635   00005D                     
  1636                           ; 1 bytes @ 0x5C
  1637 ;;
  1638 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1639 ;;
  1640 ;; *************** function _main *****************
  1641 ;; Defined at:
  1642 ;;		line 23 in file "main.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  i               1  177[BANK3 ] unsigned char 
  1647 ;;  timings        40  120[BANK3 ] unsigned int [20]
  1648 ;;  actions        40   80[BANK3 ] int [20]
  1649 ;;  blue_val       20   60[BANK3 ] unsigned char [20]
  1650 ;;  green_val      20   40[BANK3 ] unsigned char [20]
  1651 ;;  red_val        20   20[BANK3 ] unsigned char [20]
  1652 ;;  clear_val      20    0[BANK3 ] unsigned char [20]
  1653 ;;  motorR          9  189[BANK3 ] struct DC_motor
  1654 ;;  motorL          9  180[BANK3 ] struct DC_motor
  1655 ;;  pmR             2  200[BANK3 ] PTR struct DC_motor
  1656 ;;		 -> main@motorR(9), 
  1657 ;;  pmL             2  198[BANK3 ] PTR struct DC_motor
  1658 ;;		 -> main@motorL(9), 
  1659 ;;  action_to_do    2  178[BANK3 ] int 
  1660 ;;  lum             2  174[BANK3 ] unsigned int 
  1661 ;;  upcoming_act    2  172[BANK3 ] int 
  1662 ;;  actions_comp    2  170[BANK3 ] int 
  1663 ;;  measured_tim    2  168[BANK3 ] unsigned int 
  1664 ;;  PWMcycle        2    0        unsigned int 
  1665 ;;  bluem           2  166[BANK3 ] unsigned int 
  1666 ;;  greenm          2  164[BANK3 ] unsigned int 
  1667 ;;  redm            2  162[BANK3 ] unsigned int 
  1668 ;;  lum_threshol    2  160[BANK3 ] unsigned int 
  1669 ;;  pgreen_val      2    0        PTR unsigned char 
  1670 ;;		 -> main@green_val(20), 
  1671 ;;  pblue_val       2    0        PTR unsigned char 
  1672 ;;		 -> main@blue_val(20), 
  1673 ;;  pred_val        2    0        PTR unsigned char 
  1674 ;;		 -> main@red_val(20), 
  1675 ;;  pclear_val      2    0        PTR unsigned char 
  1676 ;;		 -> main@clear_val(20), 
  1677 ;;  previously_m    2    0        unsigned int 
  1678 ;;  going_forwar    1  176[BANK3 ] _Bool 
  1679 ;;  action          1    0        unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1690 ;;      Locals:         0       0       0       0     202       0       0       0       0       0       0       0       
      +0       0       0
  1691 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1692 ;;      Totals:         0       4       0       0     202       0       0       0       0       0       0       0       
      +0       0       0
  1693 ;;Total ram usage:      206 bytes
  1694 ;; Hardware stack levels required when called: 11
  1695 ;; This function calls:
  1696 ;;		_ADC_init
  1697 ;;		_I2C_2_Master_Init
  1698 ;;		_Interrupts_init
  1699 ;;		_Timer0_init
  1700 ;;		_color_click_init
  1701 ;;		_color_click_toggleLED
  1702 ;;		_color_read_Blue
  1703 ;;		_color_read_Clear
  1704 ;;		_color_read_Green
  1705 ;;		_color_read_Red
  1706 ;;		_color_writetoaddr
  1707 ;;		_decide_action
  1708 ;;		_fullSpeedAhead
  1709 ;;		_get16bitTMR0val
  1710 ;;		_inch_forward
  1711 ;;		_initDCmotorsPWM
  1712 ;;		_initUSART4
  1713 ;;		_invert_action
  1714 ;;		_resetTimer0
  1715 ;;		_reverse_after_read
  1716 ;;		_reverse_one_square
  1717 ;;		_stop
  1718 ;;		_turn_left_135
  1719 ;;		_turn_left_90
  1720 ;;		_turn_right_135
  1721 ;;		_turn_right_90
  1722 ;; This function is called by:
  1723 ;;		Startup code after reset
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text0
  1728   004F90                     __ptext0:
  1729                           	callstack 0
  1730   004F90                     _main:
  1731                           	callstack 20
  1732   004F90                     
  1733                           ;main.c: 25:     Timer0_init();
  1734   004F90  EC12  F042         	call	_Timer0_init	;wreg free
  1735                           
  1736                           ;main.c: 26:     ADC_init();
  1737   004F94  EC40  F042         	call	_ADC_init	;wreg free
  1738   004F98                     
  1739                           ;main.c: 27:     Interrupts_init();
  1740   004F98  EC6B  F042         	call	_Interrupts_init	;wreg free
  1741   004F9C                     
  1742                           ;main.c: 28:     I2C_2_Master_Init();
  1743   004F9C  ECC6  F041         	call	_I2C_2_Master_Init	;wreg free
  1744   004FA0                     
  1745                           ;main.c: 29:     color_click_init();
  1746   004FA0  EC8F  F040         	call	_color_click_init	;wreg free
  1747   004FA4                     
  1748                           ;main.c: 30:     initDCmotorsPWM(99);
  1749   004FA4  0E00               	movlw	0
  1750   004FA6  6E03               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1751   004FA8  0E63               	movlw	99
  1752   004FAA  6E02               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1753   004FAC  EC23  F03E         	call	_initDCmotorsPWM	;wreg free
  1754   004FB0                     
  1755                           ;main.c: 31:     initUSART4();
  1756   004FB0  EC22  F042         	call	_initUSART4	;wreg free
  1757   004FB4                     
  1758                           ;main.c: 34:     color_click_toggleLED();
  1759   004FB4  EC69  F03F         	call	_color_click_toggleLED	;wreg free
  1760   004FB8                     
  1761                           ;main.c: 37:     LATHbits.LATH3=1;
  1762   004FB8  8680               	bsf	128,3,c	;volatile
  1763   004FBA                     
  1764                           ;main.c: 38:     TRISHbits.TRISH3=0;
  1765   004FBA  9688               	bcf	136,3,c	;volatile
  1766   004FBC                     
  1767                           ;main.c: 41:     TRISFbits.TRISF2=1;
  1768   004FBC  8486               	bsf	134,2,c	;volatile
  1769   004FBE                     
  1770                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1771   004FBE  010E               	movlb	14	; () banked
  1772   004FC0  95B4               	bcf	180,2,b	;volatile
  1773   004FC2                     
  1774                           ; BSR set to: 14
  1775                           ;main.c: 48:     motorL.power=0;
  1776   004FC2  0E00               	movlw	0
  1777   004FC4  0103               	movlb	3	; () banked
  1778   004FC6  6FB4               	movwf	main@motorL& (0+255),b
  1779   004FC8                     
  1780                           ; BSR set to: 3
  1781                           ;main.c: 49:     motorL.direction=1;
  1782   004FC8  0E01               	movlw	1
  1783   004FCA  6FB5               	movwf	(main@motorL+1)& (0+255),b
  1784   004FCC                     
  1785                           ; BSR set to: 3
  1786                           ;main.c: 50:     motorL.brakemode=1;
  1787   004FCC  0E01               	movlw	1
  1788   004FCE  6FB6               	movwf	(main@motorL+2)& (0+255),b
  1789   004FD0                     
  1790                           ; BSR set to: 3
  1791                           ;main.c: 51:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1792   004FD0  0EAA               	movlw	170
  1793   004FD2  6FB9               	movwf	(main@motorL+5)& (0+255),b
  1794   004FD4  0E0F               	movlw	15
  1795   004FD6  6FBA               	movwf	(main@motorL+6)& (0+255),b
  1796   004FD8                     
  1797                           ; BSR set to: 3
  1798                           ;main.c: 52:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1799   004FD8  0EA6               	movlw	166
  1800   004FDA  6FBB               	movwf	(main@motorL+7)& (0+255),b
  1801   004FDC  0E0F               	movlw	15
  1802   004FDE  6FBC               	movwf	(main@motorL+8)& (0+255),b
  1803   004FE0                     
  1804                           ; BSR set to: 3
  1805                           ;main.c: 53:     motorL.PWMperiod=PWMcycle;
  1806   004FE0  0E00               	movlw	0
  1807   004FE2  6FB8               	movwf	(main@motorL+4)& (0+255),b
  1808   004FE4  0E63               	movlw	99
  1809   004FE6  6FB7               	movwf	(main@motorL+3)& (0+255),b
  1810   004FE8                     
  1811                           ; BSR set to: 3
  1812                           ;main.c: 55:     motorR.power=0;
  1813   004FE8  0E00               	movlw	0
  1814   004FEA  6FBD               	movwf	main@motorR& (0+255),b
  1815   004FEC                     
  1816                           ; BSR set to: 3
  1817                           ;main.c: 56:     motorR.direction=1;
  1818   004FEC  0E01               	movlw	1
  1819   004FEE  6FBE               	movwf	(main@motorR+1)& (0+255),b
  1820   004FF0                     
  1821                           ; BSR set to: 3
  1822                           ;main.c: 57:     motorR.brakemode=1;
  1823   004FF0  0E01               	movlw	1
  1824   004FF2  6FBF               	movwf	(main@motorR+2)& (0+255),b
  1825   004FF4                     
  1826                           ; BSR set to: 3
  1827                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1828   004FF4  0E25               	movlw	37
  1829   004FF6  6FC2               	movwf	(main@motorR+5)& (0+255),b
  1830   004FF8  0E0F               	movlw	15
  1831   004FFA  6FC3               	movwf	(main@motorR+6)& (0+255),b
  1832   004FFC                     
  1833                           ; BSR set to: 3
  1834                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1835   004FFC  0E21               	movlw	33
  1836   004FFE  6FC4               	movwf	(main@motorR+7)& (0+255),b
  1837   005000  0E0F               	movlw	15
  1838   005002  6FC5               	movwf	(main@motorR+8)& (0+255),b
  1839   005004                     
  1840                           ; BSR set to: 3
  1841                           ;main.c: 60:     motorR.PWMperiod=PWMcycle;
  1842   005004  0E00               	movlw	0
  1843   005006  6FC1               	movwf	(main@motorR+4)& (0+255),b
  1844   005008  0E63               	movlw	99
  1845   00500A  6FC0               	movwf	(main@motorR+3)& (0+255),b
  1846   00500C                     
  1847                           ; BSR set to: 3
  1848                           ;main.c: 63:     struct DC_motor *pmL= &motorL;
  1849   00500C  0EB4               	movlw	low main@motorL
  1850   00500E  6FC6               	movwf	main@pmL& (0+255),b
  1851   005010  0E03               	movlw	high main@motorL
  1852   005012  6FC7               	movwf	(main@pmL+1)& (0+255),b
  1853   005014                     
  1854                           ; BSR set to: 3
  1855                           ;main.c: 64:     struct DC_motor *pmR= &motorR;
  1856   005014  0EBD               	movlw	low main@motorR
  1857   005016  6FC8               	movwf	main@pmR& (0+255),b
  1858   005018  0E03               	movlw	high main@motorR
  1859   00501A  6FC9               	movwf	(main@pmR+1)& (0+255),b
  1860   00501C                     
  1861                           ; BSR set to: 3
  1862                           ;main.c: 80:     unsigned int lum;;main.c: 81:     unsigned int lum_threshold;;main.c: 8
      +                          2:     unsigned int redm, greenm, bluem;;main.c: 83:     char action;;main.c: 84:     _B
      +                          ool going_forward = 0;
  1863   00501C  0E00               	movlw	0
  1864   00501E  6FB0               	movwf	main@going_forward& (0+255),b
  1865   005020                     
  1866                           ; BSR set to: 3
  1867                           ;main.c: 85:     unsigned int previously_measured_time, measured_time;;main.c: 86:     i
      +                          nt action_to_do;;main.c: 87:     unsigned int timings[20];;main.c: 88:     int actions[2
      +                          0];;main.c: 89:     int actions_completed = 0;
  1868   005020  0E00               	movlw	0
  1869   005022  6FAB               	movwf	(main@actions_completed+1)& (0+255),b
  1870   005024  0E00               	movlw	0
  1871   005026  6FAA               	movwf	main@actions_completed& (0+255),b
  1872   005028                     
  1873                           ; BSR set to: 3
  1874                           ;main.c: 102:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1875   005028  0EA3               	movlw	163
  1876   00502A  0100               	movlb	0	; () banked
  1877   00502C  6FB9               	movwf	(??_main+1)& (0+255),b
  1878   00502E  0E57               	movlw	87
  1879   005030  6FB8               	movwf	??_main& (0+255),b
  1880   005032  0E02               	movlw	2
  1881   005034                     u9337:
  1882   005034  2EE8               	decfsz	wreg,f,c
  1883   005036  D7FE               	bra	u9337
  1884   005038  2FB8               	decfsz	??_main& (0+255),f,b
  1885   00503A  D7FC               	bra	u9337
  1886   00503C  2FB9               	decfsz	(??_main+1)& (0+255),f,b
  1887   00503E  D7FA               	bra	u9337
  1888   005040  0000               	nop	
  1889   005042                     
  1890                           ;main.c: 104:     lum = color_read_Clear();
  1891   005042  EC3F  F040         	call	_color_read_Clear	;wreg free
  1892   005046  C006  F3AE         	movff	?_color_read_Clear,main@lum
  1893   00504A  C007  F3AF         	movff	?_color_read_Clear+1,main@lum+1
  1894   00504E                     
  1895                           ;main.c: 105:     lum_threshold = lum + 10;
  1896   00504E  0E0A               	movlw	10
  1897   005050  0103               	movlb	3	; () banked
  1898   005052  25AE               	addwf	main@lum& (0+255),w,b
  1899   005054  6FA0               	movwf	main@lum_threshold& (0+255),b
  1900   005056  0E00               	movlw	0
  1901   005058  21AF               	addwfc	(main@lum+1)& (0+255),w,b
  1902   00505A  6FA1               	movwf	(main@lum_threshold+1)& (0+255),b
  1903   00505C                     l8416:
  1904                           
  1905                           ;main.c: 218:         if(!going_forward){
  1906   00505C  0103               	movlb	3	; () banked
  1907   00505E  51B0               	movf	main@going_forward& (0+255),w,b
  1908   005060  A4D8               	btfss	status,2,c
  1909   005062  EF35  F028         	goto	u9101
  1910   005066  EF37  F028         	goto	u9100
  1911   00506A                     u9101:
  1912   00506A  EF46  F028         	goto	l8424
  1913   00506E                     u9100:
  1914   00506E                     
  1915                           ; BSR set to: 3
  1916                           ;main.c: 221:             resetTimer0();
  1917   00506E  EC71  F042         	call	_resetTimer0	;wreg free
  1918   005072                     
  1919                           ;main.c: 222:             fullSpeedAhead(pmL, pmR);
  1920   005072  C3C6  F015         	movff	main@pmL,fullSpeedAhead@mL
  1921   005076  C3C7  F016         	movff	main@pmL+1,fullSpeedAhead@mL+1
  1922   00507A  C3C8  F017         	movff	main@pmR,fullSpeedAhead@mR
  1923   00507E  C3C9  F018         	movff	main@pmR+1,fullSpeedAhead@mR+1
  1924   005082  EC13  F03D         	call	_fullSpeedAhead	;wreg free
  1925   005086                     
  1926                           ;main.c: 223:             going_forward = 1;
  1927   005086  0E01               	movlw	1
  1928   005088  0103               	movlb	3	; () banked
  1929   00508A  6FB0               	movwf	main@going_forward& (0+255),b
  1930   00508C                     l8424:
  1931                           
  1932                           ; BSR set to: 3
  1933                           ;main.c: 226:         lum = color_read_Clear();
  1934   00508C  EC3F  F040         	call	_color_read_Clear	;wreg free
  1935   005090  C006  F3AE         	movff	?_color_read_Clear,main@lum
  1936   005094  C007  F3AF         	movff	?_color_read_Clear+1,main@lum+1
  1937   005098                     
  1938                           ;main.c: 228:         if (lum > lum_threshold){
  1939   005098  0103               	movlb	3	; () banked
  1940   00509A  51AE               	movf	main@lum& (0+255),w,b
  1941   00509C  5DA0               	subwf	main@lum_threshold& (0+255),w,b
  1942   00509E  51AF               	movf	(main@lum+1)& (0+255),w,b
  1943   0050A0  59A1               	subwfb	(main@lum_threshold+1)& (0+255),w,b
  1944   0050A2  B0D8               	btfsc	status,0,c
  1945   0050A4  EF56  F028         	goto	u9111
  1946   0050A8  EF58  F028         	goto	u9110
  1947   0050AC                     u9111:
  1948   0050AC  EF2E  F028         	goto	l8416
  1949   0050B0                     u9110:
  1950   0050B0                     
  1951                           ; BSR set to: 3
  1952                           ;main.c: 230:             measured_time = get16bitTMR0val();
  1953   0050B0  EC31  F042         	call	_get16bitTMR0val	;wreg free
  1954   0050B4  C002  F3A8         	movff	?_get16bitTMR0val,main@measured_time
  1955   0050B8  C003  F3A9         	movff	?_get16bitTMR0val+1,main@measured_time+1
  1956   0050BC                     
  1957                           ;main.c: 231:             stop(pmL, pmR);
  1958   0050BC  C3C6  F015         	movff	main@pmL,stop@mL
  1959   0050C0  C3C7  F016         	movff	main@pmL+1,stop@mL+1
  1960   0050C4  C3C8  F017         	movff	main@pmR,stop@mR
  1961   0050C8  C3C9  F018         	movff	main@pmR+1,stop@mR+1
  1962   0050CC  EC74  F03E         	call	_stop	;wreg free
  1963   0050D0                     
  1964                           ;main.c: 232:             _delay((unsigned long)((250)*(64000000/4000.0)));
  1965   0050D0  0E15               	movlw	21
  1966   0050D2  0100               	movlb	0	; () banked
  1967   0050D4  6FB9               	movwf	(??_main+1)& (0+255),b
  1968   0050D6  0E4B               	movlw	75
  1969   0050D8  6FB8               	movwf	??_main& (0+255),b
  1970   0050DA  0EBE               	movlw	190
  1971   0050DC                     u9347:
  1972   0050DC  2EE8               	decfsz	wreg,f,c
  1973   0050DE  D7FE               	bra	u9347
  1974   0050E0  2FB8               	decfsz	??_main& (0+255),f,b
  1975   0050E2  D7FC               	bra	u9347
  1976   0050E4  2FB9               	decfsz	(??_main+1)& (0+255),f,b
  1977   0050E6  D7FA               	bra	u9347
  1978   0050E8  0000               	nop	
  1979   0050EA                     l8434:
  1980                           
  1981                           ;main.c: 236:                 lum = color_read_Clear();
  1982   0050EA  EC3F  F040         	call	_color_read_Clear	;wreg free
  1983   0050EE  C006  F3AE         	movff	?_color_read_Clear,main@lum
  1984   0050F2  C007  F3AF         	movff	?_color_read_Clear+1,main@lum+1
  1985   0050F6                     
  1986                           ;main.c: 237:                 if(lum < 80){
  1987   0050F6  0103               	movlb	3	; () banked
  1988   0050F8  51AF               	movf	(main@lum+1)& (0+255),w,b
  1989   0050FA  E107               	bnz	u9121
  1990   0050FC  0E50               	movlw	80
  1991   0050FE  5DAE               	subwf	main@lum& (0+255),w,b
  1992   005100  B0D8               	btfsc	status,0,c
  1993   005102  EF85  F028         	goto	u9121
  1994   005106  EF87  F028         	goto	u9120
  1995   00510A                     u9121:
  1996   00510A  EFA0  F028         	goto	l8442
  1997   00510E                     u9120:
  1998   00510E                     
  1999                           ; BSR set to: 3
  2000                           ;main.c: 238:                 inch_forward(pmL, pmR);
  2001   00510E  C3C6  F019         	movff	main@pmL,inch_forward@mL
  2002   005112  C3C7  F01A         	movff	main@pmL+1,inch_forward@mL+1
  2003   005116  C3C8  F01B         	movff	main@pmR,inch_forward@mR
  2004   00511A  C3C9  F01C         	movff	main@pmR+1,inch_forward@mR+1
  2005   00511E  EC9E  F03C         	call	_inch_forward	;wreg free
  2006   005122                     
  2007                           ;main.c: 239:                 _delay((unsigned long)((100)*(64000000/4000.0)));
  2008   005122  0E09               	movlw	9
  2009   005124  0100               	movlb	0	; () banked
  2010   005126  6FB9               	movwf	(??_main+1)& (0+255),b
  2011   005128  0E1E               	movlw	30
  2012   00512A  6FB8               	movwf	??_main& (0+255),b
  2013   00512C  0EE4               	movlw	228
  2014   00512E                     u9357:
  2015   00512E  2EE8               	decfsz	wreg,f,c
  2016   005130  D7FE               	bra	u9357
  2017   005132  2FB8               	decfsz	??_main& (0+255),f,b
  2018   005134  D7FC               	bra	u9357
  2019   005136  2FB9               	decfsz	(??_main+1)& (0+255),f,b
  2020   005138  D7FA               	bra	u9357
  2021   00513A  0000               	nop	
  2022                           
  2023                           ;main.c: 240:                 }
  2024   00513C  EF75  F028         	goto	l8434
  2025   005140                     l8442:
  2026                           
  2027                           ; BSR set to: 3
  2028                           ;main.c: 247:             going_forward = 0;
  2029   005140  0E00               	movlw	0
  2030   005142  6FB0               	movwf	main@going_forward& (0+255),b
  2031   005144                     
  2032                           ; BSR set to: 3
  2033                           ;main.c: 250:             timings[actions_completed] = measured_time;
  2034   005144  90D8               	bcf	status,0,c
  2035   005146  35AA               	rlcf	main@actions_completed& (0+255),w,b
  2036   005148  6ED9               	movwf	fsr2l,c
  2037   00514A  35AB               	rlcf	(main@actions_completed+1)& (0+255),w,b
  2038   00514C  6EDA               	movwf	fsr2h,c
  2039   00514E  0E78               	movlw	low main@timings
  2040   005150  26D9               	addwf	fsr2l,f,c
  2041   005152  0E03               	movlw	high main@timings
  2042   005154  22DA               	addwfc	fsr2h,f,c
  2043   005156  C3A8  FFDE         	movff	main@measured_time,postinc2
  2044   00515A  C3A9  FFDD         	movff	main@measured_time+1,postdec2
  2045   00515E                     
  2046                           ; BSR set to: 3
  2047                           ;main.c: 253:             color_writetoaddr(0x01, 0xD5);
  2048   00515E  0ED5               	movlw	213
  2049   005160  6E04               	movwf	color_writetoaddr@value^0,c
  2050   005162  0E01               	movlw	1
  2051   005164  EC02  F042         	call	_color_writetoaddr
  2052   005168                     
  2053                           ;main.c: 254:             color_writetoaddr(0x03, 0xAB);
  2054   005168  0EAB               	movlw	171
  2055   00516A  6E04               	movwf	color_writetoaddr@value^0,c
  2056   00516C  0E03               	movlw	3
  2057   00516E  EC02  F042         	call	_color_writetoaddr
  2058   005172                     
  2059                           ;main.c: 255:             _delay((unsigned long)((200)*(64000000/4000.0)));
  2060   005172  0E11               	movlw	17
  2061   005174  0100               	movlb	0	; () banked
  2062   005176  6FB9               	movwf	(??_main+1)& (0+255),b
  2063   005178  0E3C               	movlw	60
  2064   00517A  6FB8               	movwf	??_main& (0+255),b
  2065   00517C  0ECB               	movlw	203
  2066   00517E                     u9367:
  2067   00517E  2EE8               	decfsz	wreg,f,c
  2068   005180  D7FE               	bra	u9367
  2069   005182  2FB8               	decfsz	??_main& (0+255),f,b
  2070   005184  D7FC               	bra	u9367
  2071   005186  2FB9               	decfsz	(??_main+1)& (0+255),f,b
  2072   005188  D7FA               	bra	u9367
  2073   00518A                     
  2074                           ;main.c: 257:             redm = color_read_Red();
  2075   00518A  ECEF  F03F         	call	_color_read_Red	;wreg free
  2076   00518E  C006  F3A2         	movff	?_color_read_Red,main@redm
  2077   005192  C007  F3A3         	movff	?_color_read_Red+1,main@redm+1
  2078   005196                     
  2079                           ;main.c: 258:             greenm = color_read_Green();
  2080   005196  EC17  F040         	call	_color_read_Green	;wreg free
  2081   00519A  C006  F3A4         	movff	?_color_read_Green,main@greenm
  2082   00519E  C007  F3A5         	movff	?_color_read_Green+1,main@greenm+1
  2083   0051A2                     
  2084                           ;main.c: 259:             bluem = color_read_Blue();
  2085   0051A2  EC67  F040         	call	_color_read_Blue	;wreg free
  2086   0051A6  C006  F3A6         	movff	?_color_read_Blue,main@bluem
  2087   0051AA  C007  F3A7         	movff	?_color_read_Blue+1,main@bluem+1
  2088   0051AE                     
  2089                           ;main.c: 261:             action_to_do = decide_action(redm, greenm, bluem);
  2090   0051AE  C3A2  F0B2         	movff	main@redm,decide_action@red_unsigned
  2091   0051B2  C3A3  F0B3         	movff	main@redm+1,decide_action@red_unsigned+1
  2092   0051B6  C3A4  F0B4         	movff	main@greenm,decide_action@green_unsigned
  2093   0051BA  C3A5  F0B5         	movff	main@greenm+1,decide_action@green_unsigned+1
  2094   0051BE  C3A6  F0B6         	movff	main@bluem,decide_action@blue_unsigned
  2095   0051C2  C3A7  F0B7         	movff	main@bluem+1,decide_action@blue_unsigned+1
  2096   0051C6  EC92  F019         	call	_decide_action	;wreg free
  2097   0051CA  0100               	movlb	0	; () banked
  2098   0051CC  6FB8               	movwf	??_main& (0+255),b
  2099   0051CE  51B8               	movf	??_main& (0+255),w,b
  2100   0051D0  0103               	movlb	3	; () banked
  2101   0051D2  6FB2               	movwf	main@action_to_do& (0+255),b
  2102   0051D4  6BB3               	clrf	(main@action_to_do+1)& (0+255),b
  2103   0051D6                     
  2104                           ; BSR set to: 3
  2105                           ;main.c: 264:             actions[actions_completed] = action_to_do;
  2106   0051D6  90D8               	bcf	status,0,c
  2107   0051D8  35AA               	rlcf	main@actions_completed& (0+255),w,b
  2108   0051DA  6ED9               	movwf	fsr2l,c
  2109   0051DC  35AB               	rlcf	(main@actions_completed+1)& (0+255),w,b
  2110   0051DE  6EDA               	movwf	fsr2h,c
  2111   0051E0  0E50               	movlw	low main@actions
  2112   0051E2  26D9               	addwf	fsr2l,f,c
  2113   0051E4  0E03               	movlw	high main@actions
  2114   0051E6  22DA               	addwfc	fsr2h,f,c
  2115   0051E8  C3B2  FFDE         	movff	main@action_to_do,postinc2
  2116   0051EC  C3B3  FFDD         	movff	main@action_to_do+1,postdec2
  2117   0051F0                     
  2118                           ; BSR set to: 3
  2119                           ;main.c: 267:             actions_completed += 1;
  2120   0051F0  4BAA               	infsnz	main@actions_completed& (0+255),f,b
  2121   0051F2  2BAB               	incf	(main@actions_completed+1)& (0+255),f,b
  2122   0051F4                     
  2123                           ; BSR set to: 3
  2124                           ;main.c: 270:             if(action_to_do == 0){
  2125   0051F4  51B2               	movf	main@action_to_do& (0+255),w,b
  2126   0051F6  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2127   0051F8  A4D8               	btfss	status,2,c
  2128   0051FA  EF01  F029         	goto	u9131
  2129   0051FE  EF03  F029         	goto	u9130
  2130   005202                     u9131:
  2131   005202  EF19  F029         	goto	l8468
  2132   005206                     u9130:
  2133   005206                     
  2134                           ; BSR set to: 3
  2135                           ;main.c: 271:                 reverse_after_read(pmL, pmR);
  2136   005206  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  2137   00520A  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2138   00520E  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  2139   005212  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2140   005216  EC40  F038         	call	_reverse_after_read	;wreg free
  2141                           
  2142                           ;main.c: 272:                 turn_right_90(pmL, pmR);
  2143   00521A  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2144   00521E  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2145   005222  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2146   005226  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2147   00522A  ECB4  F03B         	call	_turn_right_90	;wreg free
  2148                           
  2149                           ;main.c: 273:             }
  2150   00522E  EF20  F02A         	goto	l8496
  2151   005232                     l8468:
  2152                           
  2153                           ; BSR set to: 3
  2154   005232  05B2               	decf	main@action_to_do& (0+255),w,b
  2155   005234  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2156   005236  A4D8               	btfss	status,2,c
  2157   005238  EF20  F029         	goto	u9141
  2158   00523C  EF22  F029         	goto	u9140
  2159   005240                     u9141:
  2160   005240  EF38  F029         	goto	l8472
  2161   005244                     u9140:
  2162   005244                     
  2163                           ; BSR set to: 3
  2164                           ;main.c: 275:                 reverse_after_read(pmL, pmR);
  2165   005244  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  2166   005248  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2167   00524C  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  2168   005250  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2169   005254  EC40  F038         	call	_reverse_after_read	;wreg free
  2170                           
  2171                           ;main.c: 276:                 turn_left_90(pmL, pmR);
  2172   005258  C3C6  F019         	movff	main@pmL,turn_left_90@mL
  2173   00525C  C3C7  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  2174   005260  C3C8  F01B         	movff	main@pmR,turn_left_90@mR
  2175   005264  C3C9  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  2176   005268  EC29  F03C         	call	_turn_left_90	;wreg free
  2177                           
  2178                           ;main.c: 277:             }
  2179   00526C  EF20  F02A         	goto	l8496
  2180   005270                     l8472:
  2181                           
  2182                           ; BSR set to: 3
  2183   005270  0E02               	movlw	2
  2184   005272  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2185   005274  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2186   005276  A4D8               	btfss	status,2,c
  2187   005278  EF40  F029         	goto	u9151
  2188   00527C  EF42  F029         	goto	u9150
  2189   005280                     u9151:
  2190   005280  EF62  F029         	goto	l8476
  2191   005284                     u9150:
  2192   005284                     
  2193                           ; BSR set to: 3
  2194                           ;main.c: 279:                 reverse_after_read(pmL, pmR);
  2195   005284  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  2196   005288  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2197   00528C  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  2198   005290  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2199   005294  EC40  F038         	call	_reverse_after_read	;wreg free
  2200                           
  2201                           ;main.c: 280:                 turn_right_90(pmL, pmR);
  2202   005298  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2203   00529C  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2204   0052A0  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2205   0052A4  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2206   0052A8  ECB4  F03B         	call	_turn_right_90	;wreg free
  2207                           
  2208                           ;main.c: 281:                 turn_right_90(pmL, pmR);
  2209   0052AC  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2210   0052B0  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2211   0052B4  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2212   0052B8  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2213   0052BC  ECB4  F03B         	call	_turn_right_90	;wreg free
  2214                           
  2215                           ;main.c: 282:             }
  2216   0052C0  EF20  F02A         	goto	l8496
  2217   0052C4                     l8476:
  2218                           
  2219                           ; BSR set to: 3
  2220   0052C4  0E03               	movlw	3
  2221   0052C6  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2222   0052C8  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2223   0052CA  A4D8               	btfss	status,2,c
  2224   0052CC  EF6A  F029         	goto	u9161
  2225   0052D0  EF6C  F029         	goto	u9160
  2226   0052D4                     u9161:
  2227   0052D4  EF8C  F029         	goto	l8480
  2228   0052D8                     u9160:
  2229   0052D8                     
  2230                           ; BSR set to: 3
  2231                           ;main.c: 284:                 reverse_after_read(pmL, pmR);
  2232   0052D8  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  2233   0052DC  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2234   0052E0  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  2235   0052E4  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2236   0052E8  EC40  F038         	call	_reverse_after_read	;wreg free
  2237                           
  2238                           ;main.c: 285:                 reverse_one_square(pmL, pmR);
  2239   0052EC  C3C6  F019         	movff	main@pmL,reverse_one_square@mL
  2240   0052F0  C3C7  F01A         	movff	main@pmL+1,reverse_one_square@mL+1
  2241   0052F4  C3C8  F01B         	movff	main@pmR,reverse_one_square@mR
  2242   0052F8  C3C9  F01C         	movff	main@pmR+1,reverse_one_square@mR+1
  2243   0052FC  ECC8  F039         	call	_reverse_one_square	;wreg free
  2244                           
  2245                           ;main.c: 286:                 turn_right_90(pmL, pmR);
  2246   005300  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2247   005304  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2248   005308  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2249   00530C  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2250   005310  ECB4  F03B         	call	_turn_right_90	;wreg free
  2251                           
  2252                           ;main.c: 287:             }
  2253   005314  EF20  F02A         	goto	l8496
  2254   005318                     l8480:
  2255                           
  2256                           ; BSR set to: 3
  2257   005318  0E04               	movlw	4
  2258   00531A  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2259   00531C  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2260   00531E  A4D8               	btfss	status,2,c
  2261   005320  EF94  F029         	goto	u9171
  2262   005324  EF96  F029         	goto	u9170
  2263   005328                     u9171:
  2264   005328  EFB6  F029         	goto	l8484
  2265   00532C                     u9170:
  2266   00532C                     
  2267                           ; BSR set to: 3
  2268                           ;main.c: 289:                 reverse_after_read(pmL, pmR);
  2269   00532C  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  2270   005330  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2271   005334  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  2272   005338  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2273   00533C  EC40  F038         	call	_reverse_after_read	;wreg free
  2274                           
  2275                           ;main.c: 290:                 reverse_one_square(pmL, pmR);
  2276   005340  C3C6  F019         	movff	main@pmL,reverse_one_square@mL
  2277   005344  C3C7  F01A         	movff	main@pmL+1,reverse_one_square@mL+1
  2278   005348  C3C8  F01B         	movff	main@pmR,reverse_one_square@mR
  2279   00534C  C3C9  F01C         	movff	main@pmR+1,reverse_one_square@mR+1
  2280   005350  ECC8  F039         	call	_reverse_one_square	;wreg free
  2281                           
  2282                           ;main.c: 291:                 turn_left_90(pmL, pmR);
  2283   005354  C3C6  F019         	movff	main@pmL,turn_left_90@mL
  2284   005358  C3C7  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  2285   00535C  C3C8  F01B         	movff	main@pmR,turn_left_90@mR
  2286   005360  C3C9  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  2287   005364  EC29  F03C         	call	_turn_left_90	;wreg free
  2288                           
  2289                           ;main.c: 292:             }
  2290   005368  EF20  F02A         	goto	l8496
  2291   00536C                     l8484:
  2292                           
  2293                           ; BSR set to: 3
  2294   00536C  0E05               	movlw	5
  2295   00536E  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2296   005370  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2297   005372  A4D8               	btfss	status,2,c
  2298   005374  EFBE  F029         	goto	u9181
  2299   005378  EFC0  F029         	goto	u9180
  2300   00537C                     u9181:
  2301   00537C  EFD6  F029         	goto	l8488
  2302   005380                     u9180:
  2303   005380                     
  2304                           ; BSR set to: 3
  2305                           ;main.c: 294:                 reverse_after_read(pmL, pmR);
  2306   005380  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  2307   005384  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2308   005388  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  2309   00538C  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2310   005390  EC40  F038         	call	_reverse_after_read	;wreg free
  2311                           
  2312                           ;main.c: 295:                 turn_left_135(pmL, pmR);
  2313   005394  C3C6  F019         	movff	main@pmL,turn_left_135@mL
  2314   005398  C3C7  F01A         	movff	main@pmL+1,turn_left_135@mL+1
  2315   00539C  C3C8  F01B         	movff	main@pmR,turn_left_135@mR
  2316   0053A0  C3C9  F01C         	movff	main@pmR+1,turn_left_135@mR+1
  2317   0053A4  EC3E  F03B         	call	_turn_left_135	;wreg free
  2318                           
  2319                           ;main.c: 296:             }
  2320   0053A8  EF20  F02A         	goto	l8496
  2321   0053AC                     l8488:
  2322                           
  2323                           ; BSR set to: 3
  2324   0053AC  0E06               	movlw	6
  2325   0053AE  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2326   0053B0  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2327   0053B2  A4D8               	btfss	status,2,c
  2328   0053B4  EFDE  F029         	goto	u9191
  2329   0053B8  EFE0  F029         	goto	u9190
  2330   0053BC                     u9191:
  2331   0053BC  EFF6  F029         	goto	l8492
  2332   0053C0                     u9190:
  2333   0053C0                     
  2334                           ; BSR set to: 3
  2335                           ;main.c: 298:                 reverse_after_read(pmL, pmR);
  2336   0053C0  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  2337   0053C4  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2338   0053C8  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  2339   0053CC  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2340   0053D0  EC40  F038         	call	_reverse_after_read	;wreg free
  2341                           
  2342                           ;main.c: 299:                 turn_right_135(pmL, pmR);
  2343   0053D4  C3C6  F019         	movff	main@pmL,turn_right_135@mL
  2344   0053D8  C3C7  F01A         	movff	main@pmL+1,turn_right_135@mL+1
  2345   0053DC  C3C8  F01B         	movff	main@pmR,turn_right_135@mR
  2346   0053E0  C3C9  F01C         	movff	main@pmR+1,turn_right_135@mR+1
  2347   0053E4  ECC8  F03A         	call	_turn_right_135	;wreg free
  2348                           
  2349                           ;main.c: 300:             }
  2350   0053E8  EF20  F02A         	goto	l8496
  2351   0053EC                     l8492:
  2352                           
  2353                           ; BSR set to: 3
  2354   0053EC  0E07               	movlw	7
  2355   0053EE  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2356   0053F0  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2357   0053F2  A4D8               	btfss	status,2,c
  2358   0053F4  EFFE  F029         	goto	u9201
  2359   0053F8  EF00  F02A         	goto	u9200
  2360   0053FC                     u9201:
  2361   0053FC  EF20  F02A         	goto	l375
  2362   005400                     u9200:
  2363   005400                     
  2364                           ; BSR set to: 3
  2365                           ;main.c: 304:                 reverse_after_read(pmL, pmR);
  2366   005400  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  2367   005404  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2368   005408  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  2369   00540C  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2370   005410  EC40  F038         	call	_reverse_after_read	;wreg free
  2371                           
  2372                           ;main.c: 305:                 turn_right_90(pmL, pmR);
  2373   005414  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2374   005418  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2375   00541C  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2376   005420  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2377   005424  ECB4  F03B         	call	_turn_right_90	;wreg free
  2378                           
  2379                           ;main.c: 306:                 turn_right_90(pmL, pmR);
  2380   005428  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2381   00542C  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2382   005430  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2383   005434  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2384   005438  ECB4  F03B         	call	_turn_right_90	;wreg free
  2385                           
  2386                           ;main.c: 307:                 break;
  2387   00543C  EF2B  F02A         	goto	l8498
  2388   005440                     l375:
  2389   005440                     l8496:
  2390                           
  2391                           ;main.c: 309:         _delay((unsigned long)((5)*(64000000/4000.0)));
  2392   005440  0E68               	movlw	104
  2393   005442  0100               	movlb	0	; () banked
  2394   005444  6FB8               	movwf	??_main& (0+255),b
  2395   005446  0EE4               	movlw	228
  2396   005448                     u9377:
  2397   005448  2EE8               	decfsz	wreg,f,c
  2398   00544A  D7FE               	bra	u9377
  2399   00544C  2FB8               	decfsz	??_main& (0+255),f,b
  2400   00544E  D7FC               	bra	u9377
  2401   005450  0000               	nop	
  2402   005452  EF2E  F028         	goto	l8416
  2403   005456                     l8498:
  2404                           
  2405                           ;main.c: 317:     int upcoming_action = actions_completed - 2;
  2406   005456  0EFE               	movlw	254
  2407   005458  0103               	movlb	3	; () banked
  2408   00545A  25AA               	addwf	main@actions_completed& (0+255),w,b
  2409   00545C  6FAC               	movwf	main@upcoming_action& (0+255),b
  2410   00545E  0EFF               	movlw	255
  2411   005460  21AB               	addwfc	(main@actions_completed+1)& (0+255),w,b
  2412   005462  6FAD               	movwf	(main@upcoming_action+1)& (0+255),b
  2413   005464                     
  2414                           ; BSR set to: 3
  2415                           ;main.c: 320:     going_forward = 0;
  2416   005464  0E00               	movlw	0
  2417   005466  6FB0               	movwf	main@going_forward& (0+255),b
  2418   005468                     
  2419                           ; BSR set to: 3
  2420                           ;main.c: 323:     for(char i = 0; i < 20; i +=1){
  2421   005468  0E00               	movlw	0
  2422   00546A  6FB1               	movwf	main@i& (0+255),b
  2423   00546C  0E13               	movlw	19
  2424   00546E  65B1               	cpfsgt	main@i& (0+255),b
  2425   005470  EF3C  F02A         	goto	u9211
  2426   005474  EF3E  F02A         	goto	u9210
  2427   005478                     u9211:
  2428   005478  EF40  F02A         	goto	l8506
  2429   00547C                     u9210:
  2430   00547C  EF54  F02B         	goto	l386
  2431   005480                     l8506:
  2432                           
  2433                           ; BSR set to: 3
  2434                           ;main.c: 324:         timings[i] -= 150;
  2435   005480  51B1               	movf	main@i& (0+255),w,b
  2436   005482  0D02               	mullw	2
  2437   005484  0E78               	movlw	low main@timings
  2438   005486  24F3               	addwf	243,w,c
  2439   005488  6ED9               	movwf	fsr2l,c
  2440   00548A  0E03               	movlw	high main@timings
  2441   00548C  20F4               	addwfc	prodh,w,c
  2442   00548E  6EDA               	movwf	fsr2h,c
  2443   005490  0E96               	movlw	150
  2444   005492  5EDE               	subwf	postinc2,f,c
  2445   005494  0E00               	movlw	0
  2446   005496  5ADD               	subwfb	postdec2,f,c
  2447   005498                     
  2448                           ; BSR set to: 3
  2449                           ;main.c: 325:         if(i > 7){
  2450   005498  0E07               	movlw	7
  2451   00549A  65B1               	cpfsgt	main@i& (0+255),b
  2452   00549C  EF52  F02A         	goto	u9221
  2453   0054A0  EF54  F02A         	goto	u9220
  2454   0054A4                     u9221:
  2455   0054A4  EF60  F02A         	goto	l8512
  2456   0054A8                     u9220:
  2457   0054A8                     
  2458                           ; BSR set to: 3
  2459                           ;main.c: 326:               timings[i] -= 300;
  2460   0054A8  51B1               	movf	main@i& (0+255),w,b
  2461   0054AA  0D02               	mullw	2
  2462   0054AC  0E78               	movlw	low main@timings
  2463   0054AE  24F3               	addwf	243,w,c
  2464   0054B0  6ED9               	movwf	fsr2l,c
  2465   0054B2  0E03               	movlw	high main@timings
  2466   0054B4  20F4               	addwfc	prodh,w,c
  2467   0054B6  6EDA               	movwf	fsr2h,c
  2468   0054B8  0E2C               	movlw	44
  2469   0054BA  5EDE               	subwf	postinc2,f,c
  2470   0054BC  0E01               	movlw	1
  2471   0054BE  5ADD               	subwfb	postdec2,f,c
  2472   0054C0                     l8512:
  2473                           
  2474                           ; BSR set to: 3
  2475                           ;main.c: 328:     }
  2476   0054C0  2BB1               	incf	main@i& (0+255),f,b
  2477   0054C2                     
  2478                           ; BSR set to: 3
  2479   0054C2  0E13               	movlw	19
  2480   0054C4  65B1               	cpfsgt	main@i& (0+255),b
  2481   0054C6  EF67  F02A         	goto	u9231
  2482   0054CA  EF69  F02A         	goto	u9230
  2483   0054CE                     u9231:
  2484   0054CE  EF40  F02A         	goto	l8506
  2485   0054D2                     u9230:
  2486   0054D2  EF54  F02B         	goto	l386
  2487   0054D6                     l8516:
  2488                           
  2489                           ; BSR set to: 3
  2490                           ;main.c: 333:         if(!going_forward){
  2491   0054D6  51B0               	movf	main@going_forward& (0+255),w,b
  2492   0054D8  A4D8               	btfss	status,2,c
  2493   0054DA  EF71  F02A         	goto	u9241
  2494   0054DE  EF73  F02A         	goto	u9240
  2495   0054E2                     u9241:
  2496   0054E2  EF82  F02A         	goto	l8524
  2497   0054E6                     u9240:
  2498   0054E6                     
  2499                           ; BSR set to: 3
  2500                           ;main.c: 334:             resetTimer0();
  2501   0054E6  EC71  F042         	call	_resetTimer0	;wreg free
  2502   0054EA                     
  2503                           ;main.c: 335:             fullSpeedAhead(pmL, pmR);
  2504   0054EA  C3C6  F015         	movff	main@pmL,fullSpeedAhead@mL
  2505   0054EE  C3C7  F016         	movff	main@pmL+1,fullSpeedAhead@mL+1
  2506   0054F2  C3C8  F017         	movff	main@pmR,fullSpeedAhead@mR
  2507   0054F6  C3C9  F018         	movff	main@pmR+1,fullSpeedAhead@mR+1
  2508   0054FA  EC13  F03D         	call	_fullSpeedAhead	;wreg free
  2509   0054FE                     
  2510                           ;main.c: 336:             going_forward = 1;
  2511   0054FE  0E01               	movlw	1
  2512   005500  0103               	movlb	3	; () banked
  2513   005502  6FB0               	movwf	main@going_forward& (0+255),b
  2514   005504                     l8524:
  2515                           
  2516                           ; BSR set to: 3
  2517                           ;main.c: 339:         measured_time = get16bitTMR0val();
  2518   005504  EC31  F042         	call	_get16bitTMR0val	;wreg free
  2519   005508  C002  F3A8         	movff	?_get16bitTMR0val,main@measured_time
  2520   00550C  C003  F3A9         	movff	?_get16bitTMR0val+1,main@measured_time+1
  2521   005510                     
  2522                           ;main.c: 340:         if(measured_time > timings[upcoming_action + 1]){
  2523   005510  C3AC  F0B8         	movff	main@upcoming_action,??_main
  2524   005514  C3AD  F0B9         	movff	main@upcoming_action+1,??_main+1
  2525   005518  90D8               	bcf	status,0,c
  2526   00551A  0100               	movlb	0	; () banked
  2527   00551C  37B8               	rlcf	??_main& (0+255),f,b
  2528   00551E  37B9               	rlcf	(??_main+1)& (0+255),f,b
  2529   005520  0E02               	movlw	2
  2530   005522  27B8               	addwf	??_main& (0+255),f,b
  2531   005524  0E00               	movlw	0
  2532   005526  23B9               	addwfc	(??_main+1)& (0+255),f,b
  2533   005528  0E78               	movlw	low main@timings
  2534   00552A  25B8               	addwf	??_main& (0+255),w,b
  2535   00552C  6ED9               	movwf	fsr2l,c
  2536   00552E  0E03               	movlw	high main@timings
  2537   005530  21B9               	addwfc	(??_main+1)& (0+255),w,b
  2538   005532  6EDA               	movwf	fsr2h,c
  2539   005534  0103               	movlb	3	; () banked
  2540   005536  51A8               	movf	main@measured_time& (0+255),w,b
  2541   005538  5CDE               	subwf	postinc2,w,c
  2542   00553A  51A9               	movf	(main@measured_time+1)& (0+255),w,b
  2543   00553C  58DE               	subwfb	postinc2,w,c
  2544   00553E  B0D8               	btfsc	status,0,c
  2545   005540  EFA4  F02A         	goto	u9251
  2546   005544  EFA6  F02A         	goto	u9250
  2547   005548                     u9251:
  2548   005548  EF4B  F02B         	goto	l8562
  2549   00554C                     u9250:
  2550   00554C                     
  2551                           ; BSR set to: 3
  2552                           ;main.c: 341:             stop(pmL, pmR);
  2553   00554C  C3C6  F015         	movff	main@pmL,stop@mL
  2554   005550  C3C7  F016         	movff	main@pmL+1,stop@mL+1
  2555   005554  C3C8  F017         	movff	main@pmR,stop@mR
  2556   005558  C3C9  F018         	movff	main@pmR+1,stop@mR+1
  2557   00555C  EC74  F03E         	call	_stop	;wreg free
  2558   005560                     
  2559                           ;main.c: 342:             going_forward = 0;
  2560   005560  0E00               	movlw	0
  2561   005562  0103               	movlb	3	; () banked
  2562   005564  6FB0               	movwf	main@going_forward& (0+255),b
  2563   005566                     
  2564                           ; BSR set to: 3
  2565                           ;main.c: 343:             action_to_do = invert_action(actions[upcoming_action]);
  2566   005566  90D8               	bcf	status,0,c
  2567   005568  35AC               	rlcf	main@upcoming_action& (0+255),w,b
  2568   00556A  6ED9               	movwf	fsr2l,c
  2569   00556C  35AD               	rlcf	(main@upcoming_action+1)& (0+255),w,b
  2570   00556E  6EDA               	movwf	fsr2h,c
  2571   005570  0E50               	movlw	low main@actions
  2572   005572  26D9               	addwf	fsr2l,f,c
  2573   005574  0E03               	movlw	high main@actions
  2574   005576  22DA               	addwfc	fsr2h,f,c
  2575   005578  50DF               	movf	indf2,w,c
  2576   00557A  ECC1  F03E         	call	_invert_action
  2577   00557E  0100               	movlb	0	; () banked
  2578   005580  6FB8               	movwf	??_main& (0+255),b
  2579   005582  51B8               	movf	??_main& (0+255),w,b
  2580   005584  0103               	movlb	3	; () banked
  2581   005586  6FB2               	movwf	main@action_to_do& (0+255),b
  2582   005588  6BB3               	clrf	(main@action_to_do+1)& (0+255),b
  2583   00558A                     
  2584                           ; BSR set to: 3
  2585                           ;main.c: 345:             if(action_to_do == 0){
  2586   00558A  51B2               	movf	main@action_to_do& (0+255),w,b
  2587   00558C  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2588   00558E  A4D8               	btfss	status,2,c
  2589   005590  EFCC  F02A         	goto	u9261
  2590   005594  EFCE  F02A         	goto	u9260
  2591   005598                     u9261:
  2592   005598  EFDA  F02A         	goto	l8538
  2593   00559C                     u9260:
  2594   00559C                     
  2595                           ; BSR set to: 3
  2596                           ;main.c: 346:                 turn_right_90(pmL, pmR);
  2597   00559C  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2598   0055A0  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2599   0055A4  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2600   0055A8  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2601   0055AC  ECB4  F03B         	call	_turn_right_90	;wreg free
  2602                           
  2603                           ;main.c: 347:             }
  2604   0055B0  EF47  F02B         	goto	l8560
  2605   0055B4                     l8538:
  2606                           
  2607                           ; BSR set to: 3
  2608   0055B4  05B2               	decf	main@action_to_do& (0+255),w,b
  2609   0055B6  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2610   0055B8  A4D8               	btfss	status,2,c
  2611   0055BA  EFE1  F02A         	goto	u9271
  2612   0055BE  EFE3  F02A         	goto	u9270
  2613   0055C2                     u9271:
  2614   0055C2  EFEF  F02A         	goto	l8542
  2615   0055C6                     u9270:
  2616   0055C6                     
  2617                           ; BSR set to: 3
  2618                           ;main.c: 349:                 turn_left_90(pmL, pmR);
  2619   0055C6  C3C6  F019         	movff	main@pmL,turn_left_90@mL
  2620   0055CA  C3C7  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  2621   0055CE  C3C8  F01B         	movff	main@pmR,turn_left_90@mR
  2622   0055D2  C3C9  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  2623   0055D6  EC29  F03C         	call	_turn_left_90	;wreg free
  2624                           
  2625                           ;main.c: 350:             }
  2626   0055DA  EF47  F02B         	goto	l8560
  2627   0055DE                     l8542:
  2628                           
  2629                           ; BSR set to: 3
  2630   0055DE  0E02               	movlw	2
  2631   0055E0  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2632   0055E2  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2633   0055E4  A4D8               	btfss	status,2,c
  2634   0055E6  EFF7  F02A         	goto	u9281
  2635   0055EA  EFF9  F02A         	goto	u9280
  2636   0055EE                     u9281:
  2637   0055EE  EF0F  F02B         	goto	l8546
  2638   0055F2                     u9280:
  2639   0055F2                     
  2640                           ; BSR set to: 3
  2641                           ;main.c: 352:                 turn_right_90(pmL, pmR);
  2642   0055F2  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2643   0055F6  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2644   0055FA  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2645   0055FE  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2646   005602  ECB4  F03B         	call	_turn_right_90	;wreg free
  2647                           
  2648                           ;main.c: 353:                 turn_right_90(pmL, pmR);
  2649   005606  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2650   00560A  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2651   00560E  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2652   005612  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2653   005616  ECB4  F03B         	call	_turn_right_90	;wreg free
  2654                           
  2655                           ;main.c: 354:             }
  2656   00561A  EF47  F02B         	goto	l8560
  2657   00561E                     l8546:
  2658                           
  2659                           ; BSR set to: 3
  2660   00561E  0E05               	movlw	5
  2661   005620  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2662   005622  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2663   005624  A4D8               	btfss	status,2,c
  2664   005626  EF17  F02B         	goto	u9291
  2665   00562A  EF19  F02B         	goto	u9290
  2666   00562E                     u9291:
  2667   00562E  EF25  F02B         	goto	l8550
  2668   005632                     u9290:
  2669   005632                     
  2670                           ; BSR set to: 3
  2671                           ;main.c: 356:                 turn_right_135(pmL, pmR);
  2672   005632  C3C6  F019         	movff	main@pmL,turn_right_135@mL
  2673   005636  C3C7  F01A         	movff	main@pmL+1,turn_right_135@mL+1
  2674   00563A  C3C8  F01B         	movff	main@pmR,turn_right_135@mR
  2675   00563E  C3C9  F01C         	movff	main@pmR+1,turn_right_135@mR+1
  2676   005642  ECC8  F03A         	call	_turn_right_135	;wreg free
  2677                           
  2678                           ;main.c: 357:             }
  2679   005646  EF47  F02B         	goto	l8560
  2680   00564A                     l8550:
  2681                           
  2682                           ; BSR set to: 3
  2683   00564A  0E06               	movlw	6
  2684   00564C  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2685   00564E  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2686   005650  A4D8               	btfss	status,2,c
  2687   005652  EF2D  F02B         	goto	u9301
  2688   005656  EF2F  F02B         	goto	u9300
  2689   00565A                     u9301:
  2690   00565A  EF3B  F02B         	goto	l8554
  2691   00565E                     u9300:
  2692   00565E                     
  2693                           ; BSR set to: 3
  2694                           ;main.c: 359:                 turn_left_135(pmL, pmR);
  2695   00565E  C3C6  F019         	movff	main@pmL,turn_left_135@mL
  2696   005662  C3C7  F01A         	movff	main@pmL+1,turn_left_135@mL+1
  2697   005666  C3C8  F01B         	movff	main@pmR,turn_left_135@mR
  2698   00566A  C3C9  F01C         	movff	main@pmR+1,turn_left_135@mR+1
  2699   00566E  EC3E  F03B         	call	_turn_left_135	;wreg free
  2700                           
  2701                           ;main.c: 360:             }
  2702   005672  EF47  F02B         	goto	l8560
  2703   005676                     l8554:
  2704                           
  2705                           ; BSR set to: 3
  2706   005676  0E08               	movlw	8
  2707   005678  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2708   00567A  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2709   00567C  A4D8               	btfss	status,2,c
  2710   00567E  EF43  F02B         	goto	u9311
  2711   005682  EF45  F02B         	goto	u9310
  2712   005686                     u9311:
  2713   005686  EF47  F02B         	goto	l397
  2714   00568A                     u9310:
  2715   00568A  EF47  F02B         	goto	l8560
  2716   00568E                     l397:
  2717   00568E                     l8560:
  2718                           
  2719                           ;main.c: 367:         upcoming_action -=1 ;
  2720   00568E  0103               	movlb	3	; () banked
  2721   005690  07AC               	decf	main@upcoming_action& (0+255),f,b
  2722   005692  A0D8               	btfss	status,0,c
  2723   005694  07AD               	decf	(main@upcoming_action+1)& (0+255),f,b
  2724   005696                     l8562:
  2725                           
  2726                           ; BSR set to: 3
  2727                           ;main.c: 369:     _delay((unsigned long)((10)*(64000000/4000.0)));
  2728   005696  0ED0               	movlw	208
  2729   005698  0100               	movlb	0	; () banked
  2730   00569A  6FB8               	movwf	??_main& (0+255),b
  2731   00569C  0EC9               	movlw	201
  2732   00569E                     u9387:
  2733   00569E  2EE8               	decfsz	wreg,f,c
  2734   0056A0  D7FE               	bra	u9387
  2735   0056A2  2FB8               	decfsz	??_main& (0+255),f,b
  2736   0056A4  D7FC               	bra	u9387
  2737   0056A6  D000               	nop2	
  2738   0056A8                     l386:
  2739                           
  2740                           ;main.c: 332:     while(upcoming_action >= 0){
  2741   0056A8  0103               	movlb	3	; () banked
  2742   0056AA  BFAD               	btfsc	(main@upcoming_action+1)& (0+255),7,b
  2743   0056AC  EF5C  F02B         	goto	u9320
  2744   0056B0  EF5A  F02B         	goto	u9321
  2745   0056B4                     u9321:
  2746   0056B4  EF6B  F02A         	goto	l8516
  2747   0056B8                     u9320:
  2748   0056B8                     
  2749                           ; BSR set to: 3
  2750                           ;main.c: 371:     stop(pmL, pmR);
  2751   0056B8  C3C6  F015         	movff	main@pmL,stop@mL
  2752   0056BC  C3C7  F016         	movff	main@pmL+1,stop@mL+1
  2753   0056C0  C3C8  F017         	movff	main@pmR,stop@mR
  2754   0056C4  C3C9  F018         	movff	main@pmR+1,stop@mR+1
  2755   0056C8  EC74  F03E         	call	_stop	;wreg free
  2756   0056CC  EF12  F000         	goto	start
  2757   0056D0                     __end_of_main:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _turn_right_90 *****************
  2761 ;; Defined at:
  2762 ;;		line 143 in file "dc_motor.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2765 ;;		 -> main@motorL(9), 
  2766 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2767 ;;		 -> main@motorR(9), 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2781 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2782 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2783 ;;Total ram usage:        6 bytes
  2784 ;; Hardware stack levels used: 1
  2785 ;; Hardware stack levels required when called: 5
  2786 ;; This function calls:
  2787 ;;		_setMotorPWM
  2788 ;;		_stop
  2789 ;; This function is called by:
  2790 ;;		_main
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text1
  2795   007768                     __ptext1:
  2796                           	callstack 0
  2797   007768                     _turn_right_90:
  2798                           	callstack 25
  2799   007768                     
  2800                           ;dc_motor.c: 144:     mL->direction = 0;
  2801   007768  EE20 F001          	lfsr	2,1
  2802   00776C  5019               	movf	turn_right_90@mL^0,w,c
  2803   00776E  26D9               	addwf	fsr2l,f,c
  2804   007770  501A               	movf	(turn_right_90@mL+1)^0,w,c
  2805   007772  22DA               	addwfc	fsr2h,f,c
  2806   007774  6ADF               	clrf	indf2,c
  2807                           
  2808                           ;dc_motor.c: 145:     mR->direction = 1;
  2809   007776  EE20 F001          	lfsr	2,1
  2810   00777A  501B               	movf	turn_right_90@mR^0,w,c
  2811   00777C  26D9               	addwf	fsr2l,f,c
  2812   00777E  501C               	movf	(turn_right_90@mR+1)^0,w,c
  2813   007780  22DA               	addwfc	fsr2h,f,c
  2814   007782  0E01               	movlw	1
  2815   007784  6EDF               	movwf	indf2,c
  2816                           
  2817                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2818   007786  EFFB  F03B         	goto	l226
  2819   00778A                     l6178:
  2820                           
  2821                           ;dc_motor.c: 148:         if ((mL->power) < 70) (mL->power) += 1;
  2822   00778A  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2823   00778E  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2824   007792  0E46               	movlw	70
  2825   007794  60DF               	cpfslt	indf2,c
  2826   007796  EFCF  F03B         	goto	u6241
  2827   00779A  EFD1  F03B         	goto	u6240
  2828   00779E                     u6241:
  2829   00779E  EFD6  F03B         	goto	l6182
  2830   0077A2                     u6240:
  2831   0077A2  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2832   0077A6  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2833   0077AA  2ADF               	incf	indf2,f,c
  2834   0077AC                     l6182:
  2835                           
  2836                           ;dc_motor.c: 149:         if ((mR->power) < 70) (mR->power) += 1;
  2837   0077AC  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2838   0077B0  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2839   0077B4  0E46               	movlw	70
  2840   0077B6  60DF               	cpfslt	indf2,c
  2841   0077B8  EFE0  F03B         	goto	u6251
  2842   0077BC  EFE2  F03B         	goto	u6250
  2843   0077C0                     u6251:
  2844   0077C0  EFE7  F03B         	goto	l6186
  2845   0077C4                     u6250:
  2846   0077C4  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2847   0077C8  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2848   0077CC  2ADF               	incf	indf2,f,c
  2849   0077CE                     l6186:
  2850                           
  2851                           ;dc_motor.c: 151:         setMotorPWM(mL);
  2852   0077CE  C019  F00F         	movff	turn_right_90@mL,setMotorPWM@m
  2853   0077D2  C01A  F010         	movff	turn_right_90@mL+1,setMotorPWM@m+1
  2854   0077D6  EC8A  F037         	call	_setMotorPWM	;wreg free
  2855   0077DA                     
  2856                           ;dc_motor.c: 152:         setMotorPWM(mR);
  2857   0077DA  C01B  F00F         	movff	turn_right_90@mR,setMotorPWM@m
  2858   0077DE  C01C  F010         	movff	turn_right_90@mR+1,setMotorPWM@m+1
  2859   0077E2  EC8A  F037         	call	_setMotorPWM	;wreg free
  2860   0077E6                     
  2861                           ;dc_motor.c: 153:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2862   0077E6  0E15               	movlw	21
  2863   0077E8  6E1D               	movwf	??_turn_right_90^0,c
  2864   0077EA  0EC6               	movlw	198
  2865   0077EC                     u9397:
  2866   0077EC  2EE8               	decfsz	wreg,f,c
  2867   0077EE  D7FE               	bra	u9397
  2868   0077F0  2E1D               	decfsz	??_turn_right_90^0,f,c
  2869   0077F2  D7FC               	bra	u9397
  2870   0077F4  D000               	nop2	
  2871   0077F6                     l226:
  2872                           
  2873                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2874   0077F6  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2875   0077FA  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2876   0077FE  0E45               	movlw	69
  2877   007800  64DF               	cpfsgt	indf2,c
  2878   007802  EF05  F03C         	goto	u6261
  2879   007806  EF07  F03C         	goto	u6260
  2880   00780A                     u6261:
  2881   00780A  EFC5  F03B         	goto	l6178
  2882   00780E                     u6260:
  2883   00780E  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2884   007812  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2885   007816  0E45               	movlw	69
  2886   007818  64DF               	cpfsgt	indf2,c
  2887   00781A  EF11  F03C         	goto	u6271
  2888   00781E  EF13  F03C         	goto	u6270
  2889   007822                     u6271:
  2890   007822  EFC5  F03B         	goto	l6178
  2891   007826                     u6270:
  2892   007826                     
  2893                           ;dc_motor.c: 155:     _delay((unsigned long)((450)*(64000000/4000.0)));
  2894   007826  0E25               	movlw	37
  2895   007828  6E1E               	movwf	(??_turn_right_90+1)^0,c
  2896   00782A  0E87               	movlw	135
  2897   00782C  6E1D               	movwf	??_turn_right_90^0,c
  2898   00782E  0E8C               	movlw	140
  2899   007830                     u9407:
  2900   007830  2EE8               	decfsz	wreg,f,c
  2901   007832  D7FE               	bra	u9407
  2902   007834  2E1D               	decfsz	??_turn_right_90^0,f,c
  2903   007836  D7FC               	bra	u9407
  2904   007838  2E1E               	decfsz	(??_turn_right_90+1)^0,f,c
  2905   00783A  D7FA               	bra	u9407
  2906   00783C                     
  2907                           ;dc_motor.c: 156:     stop(mL, mR);
  2908   00783C  C019  F015         	movff	turn_right_90@mL,stop@mL
  2909   007840  C01A  F016         	movff	turn_right_90@mL+1,stop@mL+1
  2910   007844  C01B  F017         	movff	turn_right_90@mR,stop@mR
  2911   007848  C01C  F018         	movff	turn_right_90@mR+1,stop@mR+1
  2912   00784C  EC74  F03E         	call	_stop	;wreg free
  2913   007850  0012               	return		;funcret
  2914   007852                     __end_of_turn_right_90:
  2915                           	callstack 0
  2916                           
  2917 ;; *************** function _turn_right_135 *****************
  2918 ;; Defined at:
  2919 ;;		line 177 in file "dc_motor.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2922 ;;		 -> main@motorL(9), 
  2923 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2924 ;;		 -> main@motorR(9), 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2936 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2940 ;;Total ram usage:        6 bytes
  2941 ;; Hardware stack levels used: 1
  2942 ;; Hardware stack levels required when called: 5
  2943 ;; This function calls:
  2944 ;;		_setMotorPWM
  2945 ;;		_stop
  2946 ;; This function is called by:
  2947 ;;		_main
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text2
  2952   007590                     __ptext2:
  2953                           	callstack 0
  2954   007590                     _turn_right_135:
  2955                           	callstack 25
  2956   007590                     
  2957                           ;dc_motor.c: 178:     mL->direction = 0;
  2958   007590  EE20 F001          	lfsr	2,1
  2959   007594  5019               	movf	turn_right_135@mL^0,w,c
  2960   007596  26D9               	addwf	fsr2l,f,c
  2961   007598  501A               	movf	(turn_right_135@mL+1)^0,w,c
  2962   00759A  22DA               	addwfc	fsr2h,f,c
  2963   00759C  6ADF               	clrf	indf2,c
  2964                           
  2965                           ;dc_motor.c: 179:     mR->direction = 1;
  2966   00759E  EE20 F001          	lfsr	2,1
  2967   0075A2  501B               	movf	turn_right_135@mR^0,w,c
  2968   0075A4  26D9               	addwf	fsr2l,f,c
  2969   0075A6  501C               	movf	(turn_right_135@mR+1)^0,w,c
  2970   0075A8  22DA               	addwfc	fsr2h,f,c
  2971   0075AA  0E01               	movlw	1
  2972   0075AC  6EDF               	movwf	indf2,c
  2973                           
  2974                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2975   0075AE  EF0F  F03B         	goto	l242
  2976   0075B2                     l6222:
  2977                           
  2978                           ;dc_motor.c: 182:         if ((mL->power) < 70) (mL->power) += 1;
  2979   0075B2  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2980   0075B6  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2981   0075BA  0E46               	movlw	70
  2982   0075BC  60DF               	cpfslt	indf2,c
  2983   0075BE  EFE3  F03A         	goto	u6321
  2984   0075C2  EFE5  F03A         	goto	u6320
  2985   0075C6                     u6321:
  2986   0075C6  EFEA  F03A         	goto	l6226
  2987   0075CA                     u6320:
  2988   0075CA  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2989   0075CE  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2990   0075D2  2ADF               	incf	indf2,f,c
  2991   0075D4                     l6226:
  2992                           
  2993                           ;dc_motor.c: 183:         if ((mR->power) < 70) (mR->power) += 1;
  2994   0075D4  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2995   0075D8  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2996   0075DC  0E46               	movlw	70
  2997   0075DE  60DF               	cpfslt	indf2,c
  2998   0075E0  EFF4  F03A         	goto	u6331
  2999   0075E4  EFF6  F03A         	goto	u6330
  3000   0075E8                     u6331:
  3001   0075E8  EFFB  F03A         	goto	l6230
  3002   0075EC                     u6330:
  3003   0075EC  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  3004   0075F0  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  3005   0075F4  2ADF               	incf	indf2,f,c
  3006   0075F6                     l6230:
  3007                           
  3008                           ;dc_motor.c: 185:         setMotorPWM(mL);
  3009   0075F6  C019  F00F         	movff	turn_right_135@mL,setMotorPWM@m
  3010   0075FA  C01A  F010         	movff	turn_right_135@mL+1,setMotorPWM@m+1
  3011   0075FE  EC8A  F037         	call	_setMotorPWM	;wreg free
  3012   007602                     
  3013                           ;dc_motor.c: 186:         setMotorPWM(mR);
  3014   007602  C01B  F00F         	movff	turn_right_135@mR,setMotorPWM@m
  3015   007606  C01C  F010         	movff	turn_right_135@mR+1,setMotorPWM@m+1
  3016   00760A  EC8A  F037         	call	_setMotorPWM	;wreg free
  3017   00760E                     
  3018                           ;dc_motor.c: 187:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3019   00760E  0E15               	movlw	21
  3020   007610  6E1D               	movwf	??_turn_right_135^0,c
  3021   007612  0EC6               	movlw	198
  3022   007614                     u9417:
  3023   007614  2EE8               	decfsz	wreg,f,c
  3024   007616  D7FE               	bra	u9417
  3025   007618  2E1D               	decfsz	??_turn_right_135^0,f,c
  3026   00761A  D7FC               	bra	u9417
  3027   00761C  D000               	nop2	
  3028   00761E                     l242:
  3029                           
  3030                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  3031   00761E  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  3032   007622  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  3033   007626  0E45               	movlw	69
  3034   007628  64DF               	cpfsgt	indf2,c
  3035   00762A  EF19  F03B         	goto	u6341
  3036   00762E  EF1B  F03B         	goto	u6340
  3037   007632                     u6341:
  3038   007632  EFD9  F03A         	goto	l6222
  3039   007636                     u6340:
  3040   007636  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  3041   00763A  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  3042   00763E  0E45               	movlw	69
  3043   007640  64DF               	cpfsgt	indf2,c
  3044   007642  EF25  F03B         	goto	u6351
  3045   007646  EF27  F03B         	goto	u6350
  3046   00764A                     u6351:
  3047   00764A  EFD9  F03A         	goto	l6222
  3048   00764E                     u6350:
  3049   00764E                     
  3050                           ;dc_motor.c: 189:     _delay((unsigned long)((700)*(64000000/4000.0)));
  3051   00764E  0E39               	movlw	57
  3052   007650  6E1E               	movwf	(??_turn_right_135+1)^0,c
  3053   007652  0ED2               	movlw	210
  3054   007654  6E1D               	movwf	??_turn_right_135^0,c
  3055   007656  0E4C               	movlw	76
  3056   007658                     u9427:
  3057   007658  2EE8               	decfsz	wreg,f,c
  3058   00765A  D7FE               	bra	u9427
  3059   00765C  2E1D               	decfsz	??_turn_right_135^0,f,c
  3060   00765E  D7FC               	bra	u9427
  3061   007660  2E1E               	decfsz	(??_turn_right_135+1)^0,f,c
  3062   007662  D7FA               	bra	u9427
  3063   007664  D000               	nop2	
  3064   007666                     
  3065                           ;dc_motor.c: 190:     stop(mL, mR);
  3066   007666  C019  F015         	movff	turn_right_135@mL,stop@mL
  3067   00766A  C01A  F016         	movff	turn_right_135@mL+1,stop@mL+1
  3068   00766E  C01B  F017         	movff	turn_right_135@mR,stop@mR
  3069   007672  C01C  F018         	movff	turn_right_135@mR+1,stop@mR+1
  3070   007676  EC74  F03E         	call	_stop	;wreg free
  3071   00767A  0012               	return		;funcret
  3072   00767C                     __end_of_turn_right_135:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _turn_left_90 *****************
  3076 ;; Defined at:
  3077 ;;		line 126 in file "dc_motor.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  3080 ;;		 -> main@motorL(9), 
  3081 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  3082 ;;		 -> main@motorR(9), 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3096 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3097 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3098 ;;Total ram usage:        6 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 5
  3101 ;; This function calls:
  3102 ;;		_setMotorPWM
  3103 ;;		_stop
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text3
  3110   007852                     __ptext3:
  3111                           	callstack 0
  3112   007852                     _turn_left_90:
  3113                           	callstack 25
  3114   007852                     
  3115                           ;dc_motor.c: 127:     mL->direction = 1;
  3116   007852  EE20 F001          	lfsr	2,1
  3117   007856  5019               	movf	turn_left_90@mL^0,w,c
  3118   007858  26D9               	addwf	fsr2l,f,c
  3119   00785A  501A               	movf	(turn_left_90@mL+1)^0,w,c
  3120   00785C  22DA               	addwfc	fsr2h,f,c
  3121   00785E  0E01               	movlw	1
  3122   007860  6EDF               	movwf	indf2,c
  3123                           
  3124                           ;dc_motor.c: 128:     mR->direction = 0;
  3125   007862  EE20 F001          	lfsr	2,1
  3126   007866  501B               	movf	turn_left_90@mR^0,w,c
  3127   007868  26D9               	addwf	fsr2l,f,c
  3128   00786A  501C               	movf	(turn_left_90@mR+1)^0,w,c
  3129   00786C  22DA               	addwfc	fsr2h,f,c
  3130   00786E  6ADF               	clrf	indf2,c
  3131                           
  3132                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  3133   007870  EF70  F03C         	goto	l218
  3134   007874                     l6156:
  3135                           
  3136                           ;dc_motor.c: 131:         if ((mL->power) < 70) (mL->power) += 1;
  3137   007874  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  3138   007878  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  3139   00787C  0E46               	movlw	70
  3140   00787E  60DF               	cpfslt	indf2,c
  3141   007880  EF44  F03C         	goto	u6201
  3142   007884  EF46  F03C         	goto	u6200
  3143   007888                     u6201:
  3144   007888  EF4B  F03C         	goto	l6160
  3145   00788C                     u6200:
  3146   00788C  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  3147   007890  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  3148   007894  2ADF               	incf	indf2,f,c
  3149   007896                     l6160:
  3150                           
  3151                           ;dc_motor.c: 132:         if ((mR->power) < 70) (mR->power) += 1;
  3152   007896  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  3153   00789A  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  3154   00789E  0E46               	movlw	70
  3155   0078A0  60DF               	cpfslt	indf2,c
  3156   0078A2  EF55  F03C         	goto	u6211
  3157   0078A6  EF57  F03C         	goto	u6210
  3158   0078AA                     u6211:
  3159   0078AA  EF5C  F03C         	goto	l6164
  3160   0078AE                     u6210:
  3161   0078AE  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  3162   0078B2  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  3163   0078B6  2ADF               	incf	indf2,f,c
  3164   0078B8                     l6164:
  3165                           
  3166                           ;dc_motor.c: 134:         setMotorPWM(mL);
  3167   0078B8  C019  F00F         	movff	turn_left_90@mL,setMotorPWM@m
  3168   0078BC  C01A  F010         	movff	turn_left_90@mL+1,setMotorPWM@m+1
  3169   0078C0  EC8A  F037         	call	_setMotorPWM	;wreg free
  3170   0078C4                     
  3171                           ;dc_motor.c: 135:         setMotorPWM(mR);
  3172   0078C4  C01B  F00F         	movff	turn_left_90@mR,setMotorPWM@m
  3173   0078C8  C01C  F010         	movff	turn_left_90@mR+1,setMotorPWM@m+1
  3174   0078CC  EC8A  F037         	call	_setMotorPWM	;wreg free
  3175   0078D0                     
  3176                           ;dc_motor.c: 136:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3177   0078D0  0E15               	movlw	21
  3178   0078D2  6E1D               	movwf	??_turn_left_90^0,c
  3179   0078D4  0EC6               	movlw	198
  3180   0078D6                     u9437:
  3181   0078D6  2EE8               	decfsz	wreg,f,c
  3182   0078D8  D7FE               	bra	u9437
  3183   0078DA  2E1D               	decfsz	??_turn_left_90^0,f,c
  3184   0078DC  D7FC               	bra	u9437
  3185   0078DE  D000               	nop2	
  3186   0078E0                     l218:
  3187                           
  3188                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  3189   0078E0  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  3190   0078E4  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  3191   0078E8  0E45               	movlw	69
  3192   0078EA  64DF               	cpfsgt	indf2,c
  3193   0078EC  EF7A  F03C         	goto	u6221
  3194   0078F0  EF7C  F03C         	goto	u6220
  3195   0078F4                     u6221:
  3196   0078F4  EF3A  F03C         	goto	l6156
  3197   0078F8                     u6220:
  3198   0078F8  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  3199   0078FC  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  3200   007900  0E45               	movlw	69
  3201   007902  64DF               	cpfsgt	indf2,c
  3202   007904  EF86  F03C         	goto	u6231
  3203   007908  EF88  F03C         	goto	u6230
  3204   00790C                     u6231:
  3205   00790C  EF3A  F03C         	goto	l6156
  3206   007910                     u6230:
  3207   007910                     
  3208                           ;dc_motor.c: 138:     _delay((unsigned long)((450)*(64000000/4000.0)));
  3209   007910  0E25               	movlw	37
  3210   007912  6E1E               	movwf	(??_turn_left_90+1)^0,c
  3211   007914  0E87               	movlw	135
  3212   007916  6E1D               	movwf	??_turn_left_90^0,c
  3213   007918  0E8C               	movlw	140
  3214   00791A                     u9447:
  3215   00791A  2EE8               	decfsz	wreg,f,c
  3216   00791C  D7FE               	bra	u9447
  3217   00791E  2E1D               	decfsz	??_turn_left_90^0,f,c
  3218   007920  D7FC               	bra	u9447
  3219   007922  2E1E               	decfsz	(??_turn_left_90+1)^0,f,c
  3220   007924  D7FA               	bra	u9447
  3221   007926                     
  3222                           ;dc_motor.c: 139:     stop(mL, mR);
  3223   007926  C019  F015         	movff	turn_left_90@mL,stop@mL
  3224   00792A  C01A  F016         	movff	turn_left_90@mL+1,stop@mL+1
  3225   00792E  C01B  F017         	movff	turn_left_90@mR,stop@mR
  3226   007932  C01C  F018         	movff	turn_left_90@mR+1,stop@mR+1
  3227   007936  EC74  F03E         	call	_stop	;wreg free
  3228   00793A  0012               	return		;funcret
  3229   00793C                     __end_of_turn_left_90:
  3230                           	callstack 0
  3231                           
  3232 ;; *************** function _turn_left_135 *****************
  3233 ;; Defined at:
  3234 ;;		line 160 in file "dc_motor.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  3237 ;;		 -> main@motorL(9), 
  3238 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  3239 ;;		 -> main@motorR(9), 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3251 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3253 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3254 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3255 ;;Total ram usage:        6 bytes
  3256 ;; Hardware stack levels used: 1
  3257 ;; Hardware stack levels required when called: 5
  3258 ;; This function calls:
  3259 ;;		_setMotorPWM
  3260 ;;		_stop
  3261 ;; This function is called by:
  3262 ;;		_main
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text4
  3267   00767C                     __ptext4:
  3268                           	callstack 0
  3269   00767C                     _turn_left_135:
  3270                           	callstack 25
  3271   00767C                     
  3272                           ;dc_motor.c: 161:     mL->direction = 1;
  3273   00767C  EE20 F001          	lfsr	2,1
  3274   007680  5019               	movf	turn_left_135@mL^0,w,c
  3275   007682  26D9               	addwf	fsr2l,f,c
  3276   007684  501A               	movf	(turn_left_135@mL+1)^0,w,c
  3277   007686  22DA               	addwfc	fsr2h,f,c
  3278   007688  0E01               	movlw	1
  3279   00768A  6EDF               	movwf	indf2,c
  3280                           
  3281                           ;dc_motor.c: 162:     mR->direction = 0;
  3282   00768C  EE20 F001          	lfsr	2,1
  3283   007690  501B               	movf	turn_left_135@mR^0,w,c
  3284   007692  26D9               	addwf	fsr2l,f,c
  3285   007694  501C               	movf	(turn_left_135@mR+1)^0,w,c
  3286   007696  22DA               	addwfc	fsr2h,f,c
  3287   007698  6ADF               	clrf	indf2,c
  3288                           
  3289                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  3290   00769A  EF85  F03B         	goto	l234
  3291   00769E                     l6200:
  3292                           
  3293                           ;dc_motor.c: 165:         if ((mL->power) < 70) (mL->power) += 1;
  3294   00769E  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3295   0076A2  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3296   0076A6  0E46               	movlw	70
  3297   0076A8  60DF               	cpfslt	indf2,c
  3298   0076AA  EF59  F03B         	goto	u6281
  3299   0076AE  EF5B  F03B         	goto	u6280
  3300   0076B2                     u6281:
  3301   0076B2  EF60  F03B         	goto	l6204
  3302   0076B6                     u6280:
  3303   0076B6  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3304   0076BA  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3305   0076BE  2ADF               	incf	indf2,f,c
  3306   0076C0                     l6204:
  3307                           
  3308                           ;dc_motor.c: 166:         if ((mR->power) < 70) (mR->power) += 1;
  3309   0076C0  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3310   0076C4  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3311   0076C8  0E46               	movlw	70
  3312   0076CA  60DF               	cpfslt	indf2,c
  3313   0076CC  EF6A  F03B         	goto	u6291
  3314   0076D0  EF6C  F03B         	goto	u6290
  3315   0076D4                     u6291:
  3316   0076D4  EF71  F03B         	goto	l6208
  3317   0076D8                     u6290:
  3318   0076D8  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3319   0076DC  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3320   0076E0  2ADF               	incf	indf2,f,c
  3321   0076E2                     l6208:
  3322                           
  3323                           ;dc_motor.c: 168:         setMotorPWM(mL);
  3324   0076E2  C019  F00F         	movff	turn_left_135@mL,setMotorPWM@m
  3325   0076E6  C01A  F010         	movff	turn_left_135@mL+1,setMotorPWM@m+1
  3326   0076EA  EC8A  F037         	call	_setMotorPWM	;wreg free
  3327   0076EE                     
  3328                           ;dc_motor.c: 169:         setMotorPWM(mR);
  3329   0076EE  C01B  F00F         	movff	turn_left_135@mR,setMotorPWM@m
  3330   0076F2  C01C  F010         	movff	turn_left_135@mR+1,setMotorPWM@m+1
  3331   0076F6  EC8A  F037         	call	_setMotorPWM	;wreg free
  3332   0076FA                     
  3333                           ;dc_motor.c: 170:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3334   0076FA  0E15               	movlw	21
  3335   0076FC  6E1D               	movwf	??_turn_left_135^0,c
  3336   0076FE  0EC6               	movlw	198
  3337   007700                     u9457:
  3338   007700  2EE8               	decfsz	wreg,f,c
  3339   007702  D7FE               	bra	u9457
  3340   007704  2E1D               	decfsz	??_turn_left_135^0,f,c
  3341   007706  D7FC               	bra	u9457
  3342   007708  D000               	nop2	
  3343   00770A                     l234:
  3344                           
  3345                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  3346   00770A  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3347   00770E  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3348   007712  0E45               	movlw	69
  3349   007714  64DF               	cpfsgt	indf2,c
  3350   007716  EF8F  F03B         	goto	u6301
  3351   00771A  EF91  F03B         	goto	u6300
  3352   00771E                     u6301:
  3353   00771E  EF4F  F03B         	goto	l6200
  3354   007722                     u6300:
  3355   007722  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3356   007726  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3357   00772A  0E45               	movlw	69
  3358   00772C  64DF               	cpfsgt	indf2,c
  3359   00772E  EF9B  F03B         	goto	u6311
  3360   007732  EF9D  F03B         	goto	u6310
  3361   007736                     u6311:
  3362   007736  EF4F  F03B         	goto	l6200
  3363   00773A                     u6310:
  3364   00773A                     
  3365                           ;dc_motor.c: 172:     _delay((unsigned long)((700)*(64000000/4000.0)));
  3366   00773A  0E39               	movlw	57
  3367   00773C  6E1E               	movwf	(??_turn_left_135+1)^0,c
  3368   00773E  0ED2               	movlw	210
  3369   007740  6E1D               	movwf	??_turn_left_135^0,c
  3370   007742  0E4C               	movlw	76
  3371   007744                     u9467:
  3372   007744  2EE8               	decfsz	wreg,f,c
  3373   007746  D7FE               	bra	u9467
  3374   007748  2E1D               	decfsz	??_turn_left_135^0,f,c
  3375   00774A  D7FC               	bra	u9467
  3376   00774C  2E1E               	decfsz	(??_turn_left_135+1)^0,f,c
  3377   00774E  D7FA               	bra	u9467
  3378   007750  D000               	nop2	
  3379   007752                     
  3380                           ;dc_motor.c: 173:     stop(mL, mR);
  3381   007752  C019  F015         	movff	turn_left_135@mL,stop@mL
  3382   007756  C01A  F016         	movff	turn_left_135@mL+1,stop@mL+1
  3383   00775A  C01B  F017         	movff	turn_left_135@mR,stop@mR
  3384   00775E  C01C  F018         	movff	turn_left_135@mR+1,stop@mR+1
  3385   007762  EC74  F03E         	call	_stop	;wreg free
  3386   007766  0012               	return		;funcret
  3387   007768                     __end_of_turn_left_135:
  3388                           	callstack 0
  3389                           
  3390 ;; *************** function _reverse_one_square *****************
  3391 ;; Defined at:
  3392 ;;		line 210 in file "dc_motor.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  3395 ;;		 -> main@motorL(9), 
  3396 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  3397 ;;		 -> main@motorR(9), 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3411 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3412 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3413 ;;Total ram usage:        6 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; Hardware stack levels required when called: 5
  3416 ;; This function calls:
  3417 ;;		_setMotorPWM
  3418 ;;		_stop
  3419 ;; This function is called by:
  3420 ;;		_main
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text5
  3425   007390                     __ptext5:
  3426                           	callstack 0
  3427   007390                     _reverse_one_square:
  3428                           	callstack 25
  3429   007390                     
  3430                           ;dc_motor.c: 211:     mL->direction = 0;
  3431   007390  EE20 F001          	lfsr	2,1
  3432   007394  5019               	movf	reverse_one_square@mL^0,w,c
  3433   007396  26D9               	addwf	fsr2l,f,c
  3434   007398  501A               	movf	(reverse_one_square@mL+1)^0,w,c
  3435   00739A  22DA               	addwfc	fsr2h,f,c
  3436   00739C  6ADF               	clrf	indf2,c
  3437                           
  3438                           ;dc_motor.c: 212:     mR->direction = 0;
  3439   00739E  EE20 F001          	lfsr	2,1
  3440   0073A2  501B               	movf	reverse_one_square@mR^0,w,c
  3441   0073A4  26D9               	addwf	fsr2l,f,c
  3442   0073A6  501C               	movf	(reverse_one_square@mR+1)^0,w,c
  3443   0073A8  22DA               	addwfc	fsr2h,f,c
  3444   0073AA  6ADF               	clrf	indf2,c
  3445                           
  3446                           ;dc_motor.c: 214:     while ((mL->power) < 70 || (mR->power) < 70){
  3447   0073AC  EF0E  F03A         	goto	l258
  3448   0073B0                     l6268:
  3449                           
  3450                           ;dc_motor.c: 215:         if ((mL->power) < 70) (mL->power) += 1;
  3451   0073B0  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  3452   0073B4  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  3453   0073B8  0E46               	movlw	70
  3454   0073BA  60DF               	cpfslt	indf2,c
  3455   0073BC  EFE2  F039         	goto	u6401
  3456   0073C0  EFE4  F039         	goto	u6400
  3457   0073C4                     u6401:
  3458   0073C4  EFE9  F039         	goto	l6272
  3459   0073C8                     u6400:
  3460   0073C8  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  3461   0073CC  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  3462   0073D0  2ADF               	incf	indf2,f,c
  3463   0073D2                     l6272:
  3464                           
  3465                           ;dc_motor.c: 216:         if ((mR->power) < 70) (mR->power) += 1;
  3466   0073D2  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  3467   0073D6  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  3468   0073DA  0E46               	movlw	70
  3469   0073DC  60DF               	cpfslt	indf2,c
  3470   0073DE  EFF3  F039         	goto	u6411
  3471   0073E2  EFF5  F039         	goto	u6410
  3472   0073E6                     u6411:
  3473   0073E6  EFFA  F039         	goto	l6276
  3474   0073EA                     u6410:
  3475   0073EA  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  3476   0073EE  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  3477   0073F2  2ADF               	incf	indf2,f,c
  3478   0073F4                     l6276:
  3479                           
  3480                           ;dc_motor.c: 218:         setMotorPWM(mL);
  3481   0073F4  C019  F00F         	movff	reverse_one_square@mL,setMotorPWM@m
  3482   0073F8  C01A  F010         	movff	reverse_one_square@mL+1,setMotorPWM@m+1
  3483   0073FC  EC8A  F037         	call	_setMotorPWM	;wreg free
  3484   007400                     
  3485                           ;dc_motor.c: 219:         setMotorPWM(mR);
  3486   007400  C01B  F00F         	movff	reverse_one_square@mR,setMotorPWM@m
  3487   007404  C01C  F010         	movff	reverse_one_square@mR+1,setMotorPWM@m+1
  3488   007408  EC8A  F037         	call	_setMotorPWM	;wreg free
  3489   00740C                     
  3490                           ;dc_motor.c: 220:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3491   00740C  0E15               	movlw	21
  3492   00740E  6E1D               	movwf	??_reverse_one_square^0,c
  3493   007410  0EC6               	movlw	198
  3494   007412                     u9477:
  3495   007412  2EE8               	decfsz	wreg,f,c
  3496   007414  D7FE               	bra	u9477
  3497   007416  2E1D               	decfsz	??_reverse_one_square^0,f,c
  3498   007418  D7FC               	bra	u9477
  3499   00741A  D000               	nop2	
  3500   00741C                     l258:
  3501                           
  3502                           ;dc_motor.c: 214:     while ((mL->power) < 70 || (mR->power) < 70){
  3503   00741C  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  3504   007420  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  3505   007424  0E45               	movlw	69
  3506   007426  64DF               	cpfsgt	indf2,c
  3507   007428  EF18  F03A         	goto	u6421
  3508   00742C  EF1A  F03A         	goto	u6420
  3509   007430                     u6421:
  3510   007430  EFD8  F039         	goto	l6268
  3511   007434                     u6420:
  3512   007434  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  3513   007438  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  3514   00743C  0E45               	movlw	69
  3515   00743E  64DF               	cpfsgt	indf2,c
  3516   007440  EF24  F03A         	goto	u6431
  3517   007444  EF26  F03A         	goto	u6430
  3518   007448                     u6431:
  3519   007448  EFD8  F039         	goto	l6268
  3520   00744C                     u6430:
  3521   00744C                     
  3522                           ;dc_motor.c: 222:     _delay((unsigned long)((500)*(64000000/4000.0)));
  3523   00744C  0E29               	movlw	41
  3524   00744E  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  3525   007450  0E96               	movlw	150
  3526   007452  6E1D               	movwf	??_reverse_one_square^0,c
  3527   007454  0E7F               	movlw	127
  3528   007456                     u9487:
  3529   007456  2EE8               	decfsz	wreg,f,c
  3530   007458  D7FE               	bra	u9487
  3531   00745A  2E1D               	decfsz	??_reverse_one_square^0,f,c
  3532   00745C  D7FC               	bra	u9487
  3533   00745E  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  3534   007460  D7FA               	bra	u9487
  3535   007462  0000               	nop	
  3536   007464                     
  3537                           ;dc_motor.c: 223:     stop(mL, mR);
  3538   007464  C019  F015         	movff	reverse_one_square@mL,stop@mL
  3539   007468  C01A  F016         	movff	reverse_one_square@mL+1,stop@mL+1
  3540   00746C  C01B  F017         	movff	reverse_one_square@mR,stop@mR
  3541   007470  C01C  F018         	movff	reverse_one_square@mR+1,stop@mR+1
  3542   007474  EC74  F03E         	call	_stop	;wreg free
  3543   007478                     
  3544                           ;dc_motor.c: 224:     _delay((unsigned long)((250)*(64000000/4000.0)));
  3545   007478  0E15               	movlw	21
  3546   00747A  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  3547   00747C  0E4B               	movlw	75
  3548   00747E  6E1D               	movwf	??_reverse_one_square^0,c
  3549   007480  0EBE               	movlw	190
  3550   007482                     u9497:
  3551   007482  2EE8               	decfsz	wreg,f,c
  3552   007484  D7FE               	bra	u9497
  3553   007486  2E1D               	decfsz	??_reverse_one_square^0,f,c
  3554   007488  D7FC               	bra	u9497
  3555   00748A  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  3556   00748C  D7FA               	bra	u9497
  3557   00748E  D000               	nop2	
  3558   007490  0012               	return		;funcret
  3559   007492                     __end_of_reverse_one_square:
  3560                           	callstack 0
  3561                           
  3562 ;; *************** function _reverse_after_read *****************
  3563 ;; Defined at:
  3564 ;;		line 193 in file "dc_motor.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  3567 ;;		 -> main@motorL(9), 
  3568 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  3569 ;;		 -> main@motorR(9), 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1    wreg      void 
  3574 ;; Registers used:
  3575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3583 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3584 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3585 ;;Total ram usage:        6 bytes
  3586 ;; Hardware stack levels used: 1
  3587 ;; Hardware stack levels required when called: 5
  3588 ;; This function calls:
  3589 ;;		_setMotorPWM
  3590 ;;		_stop
  3591 ;; This function is called by:
  3592 ;;		_main
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text6
  3597   007080                     __ptext6:
  3598                           	callstack 0
  3599   007080                     _reverse_after_read:
  3600                           	callstack 25
  3601   007080                     
  3602                           ;dc_motor.c: 194:     mL->direction = 1;
  3603   007080  EE20 F001          	lfsr	2,1
  3604   007084  5019               	movf	reverse_after_read@mL^0,w,c
  3605   007086  26D9               	addwf	fsr2l,f,c
  3606   007088  501A               	movf	(reverse_after_read@mL+1)^0,w,c
  3607   00708A  22DA               	addwfc	fsr2h,f,c
  3608   00708C  0E01               	movlw	1
  3609   00708E  6EDF               	movwf	indf2,c
  3610                           
  3611                           ;dc_motor.c: 195:     mR->direction = 1;
  3612   007090  EE20 F001          	lfsr	2,1
  3613   007094  501B               	movf	reverse_after_read@mR^0,w,c
  3614   007096  26D9               	addwf	fsr2l,f,c
  3615   007098  501C               	movf	(reverse_after_read@mR+1)^0,w,c
  3616   00709A  22DA               	addwfc	fsr2h,f,c
  3617   00709C  0E01               	movlw	1
  3618   00709E  6EDF               	movwf	indf2,c
  3619                           
  3620                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  3621   0070A0  EF88  F038         	goto	l250
  3622   0070A4                     l6244:
  3623                           
  3624                           ;dc_motor.c: 198:         if ((mL->power) < 70) (mL->power) += 1;
  3625   0070A4  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  3626   0070A8  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  3627   0070AC  0E46               	movlw	70
  3628   0070AE  60DF               	cpfslt	indf2,c
  3629   0070B0  EF5C  F038         	goto	u6361
  3630   0070B4  EF5E  F038         	goto	u6360
  3631   0070B8                     u6361:
  3632   0070B8  EF63  F038         	goto	l6248
  3633   0070BC                     u6360:
  3634   0070BC  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  3635   0070C0  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  3636   0070C4  2ADF               	incf	indf2,f,c
  3637   0070C6                     l6248:
  3638                           
  3639                           ;dc_motor.c: 199:         if ((mR->power) < 70) (mR->power) += 1;
  3640   0070C6  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  3641   0070CA  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  3642   0070CE  0E46               	movlw	70
  3643   0070D0  60DF               	cpfslt	indf2,c
  3644   0070D2  EF6D  F038         	goto	u6371
  3645   0070D6  EF6F  F038         	goto	u6370
  3646   0070DA                     u6371:
  3647   0070DA  EF74  F038         	goto	l6252
  3648   0070DE                     u6370:
  3649   0070DE  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  3650   0070E2  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  3651   0070E6  2ADF               	incf	indf2,f,c
  3652   0070E8                     l6252:
  3653                           
  3654                           ;dc_motor.c: 201:         setMotorPWM(mL);
  3655   0070E8  C019  F00F         	movff	reverse_after_read@mL,setMotorPWM@m
  3656   0070EC  C01A  F010         	movff	reverse_after_read@mL+1,setMotorPWM@m+1
  3657   0070F0  EC8A  F037         	call	_setMotorPWM	;wreg free
  3658   0070F4                     
  3659                           ;dc_motor.c: 202:         setMotorPWM(mR);
  3660   0070F4  C01B  F00F         	movff	reverse_after_read@mR,setMotorPWM@m
  3661   0070F8  C01C  F010         	movff	reverse_after_read@mR+1,setMotorPWM@m+1
  3662   0070FC  EC8A  F037         	call	_setMotorPWM	;wreg free
  3663   007100                     
  3664                           ;dc_motor.c: 203:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3665   007100  0E15               	movlw	21
  3666   007102  6E1D               	movwf	??_reverse_after_read^0,c
  3667   007104  0EC6               	movlw	198
  3668   007106                     u9507:
  3669   007106  2EE8               	decfsz	wreg,f,c
  3670   007108  D7FE               	bra	u9507
  3671   00710A  2E1D               	decfsz	??_reverse_after_read^0,f,c
  3672   00710C  D7FC               	bra	u9507
  3673   00710E  D000               	nop2	
  3674   007110                     l250:
  3675                           
  3676                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  3677   007110  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  3678   007114  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  3679   007118  0E45               	movlw	69
  3680   00711A  64DF               	cpfsgt	indf2,c
  3681   00711C  EF92  F038         	goto	u6381
  3682   007120  EF94  F038         	goto	u6380
  3683   007124                     u6381:
  3684   007124  EF52  F038         	goto	l6244
  3685   007128                     u6380:
  3686   007128  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  3687   00712C  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  3688   007130  0E45               	movlw	69
  3689   007132  64DF               	cpfsgt	indf2,c
  3690   007134  EF9E  F038         	goto	u6391
  3691   007138  EFA0  F038         	goto	u6390
  3692   00713C                     u6391:
  3693   00713C  EF52  F038         	goto	l6244
  3694   007140                     u6390:
  3695   007140                     
  3696                           ;dc_motor.c: 205:     _delay((unsigned long)((225)*(64000000/4000.0)));
  3697   007140  0E13               	movlw	19
  3698   007142  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  3699   007144  0E44               	movlw	68
  3700   007146  6E1D               	movwf	??_reverse_after_read^0,c
  3701   007148  0E44               	movlw	68
  3702   00714A                     u9517:
  3703   00714A  2EE8               	decfsz	wreg,f,c
  3704   00714C  D7FE               	bra	u9517
  3705   00714E  2E1D               	decfsz	??_reverse_after_read^0,f,c
  3706   007150  D7FC               	bra	u9517
  3707   007152  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  3708   007154  D7FA               	bra	u9517
  3709   007156  D000               	nop2	
  3710   007158                     
  3711                           ;dc_motor.c: 206:     stop(mL, mR);
  3712   007158  C019  F015         	movff	reverse_after_read@mL,stop@mL
  3713   00715C  C01A  F016         	movff	reverse_after_read@mL+1,stop@mL+1
  3714   007160  C01B  F017         	movff	reverse_after_read@mR,stop@mR
  3715   007164  C01C  F018         	movff	reverse_after_read@mR+1,stop@mR+1
  3716   007168  EC74  F03E         	call	_stop	;wreg free
  3717   00716C                     
  3718                           ;dc_motor.c: 207:     _delay((unsigned long)((250)*(64000000/4000.0)));
  3719   00716C  0E15               	movlw	21
  3720   00716E  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  3721   007170  0E4B               	movlw	75
  3722   007172  6E1D               	movwf	??_reverse_after_read^0,c
  3723   007174  0EBE               	movlw	190
  3724   007176                     u9527:
  3725   007176  2EE8               	decfsz	wreg,f,c
  3726   007178  D7FE               	bra	u9527
  3727   00717A  2E1D               	decfsz	??_reverse_after_read^0,f,c
  3728   00717C  D7FC               	bra	u9527
  3729   00717E  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  3730   007180  D7FA               	bra	u9527
  3731   007182  D000               	nop2	
  3732   007184  0012               	return		;funcret
  3733   007186                     __end_of_reverse_after_read:
  3734                           	callstack 0
  3735                           
  3736 ;; *************** function _resetTimer0 *****************
  3737 ;; Defined at:
  3738 ;;		line 34 in file "timers.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;		None
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;		None
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, status,2
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3756 ;;Total ram usage:        0 bytes
  3757 ;; Hardware stack levels used: 1
  3758 ;; Hardware stack levels required when called: 2
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_main
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text7
  3767   0084E2                     __ptext7:
  3768                           	callstack 0
  3769   0084E2                     _resetTimer0:
  3770                           	callstack 28
  3771   0084E2                     
  3772                           ;timers.c: 35:     TMR0H = 0;
  3773   0084E2  0E00               	movlw	0
  3774   0084E4  6ED4               	movwf	212,c	;volatile
  3775                           
  3776                           ;timers.c: 36:     TMR0L = 0;
  3777   0084E6  0E00               	movlw	0
  3778   0084E8  6ED3               	movwf	211,c	;volatile
  3779   0084EA  0012               	return		;funcret
  3780   0084EC                     __end_of_resetTimer0:
  3781                           	callstack 0
  3782                           
  3783 ;; *************** function _invert_action *****************
  3784 ;; Defined at:
  3785 ;;		line 187 in file "color.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  input_action    1    wreg     unsigned char 
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;  input_action    1    3[COMRAM] unsigned char 
  3790 ;;  output_actio    1    0        unsigned char 
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  1    wreg      unsigned char 
  3793 ;; Registers used:
  3794 ;;		wreg, status,2, status,0
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;Total ram usage:        3 bytes
  3805 ;; Hardware stack levels used: 1
  3806 ;; Hardware stack levels required when called: 2
  3807 ;; This function calls:
  3808 ;;		Nothing
  3809 ;; This function is called by:
  3810 ;;		_main
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text8
  3815   007D82                     __ptext8:
  3816                           	callstack 0
  3817   007D82                     _invert_action:
  3818                           	callstack 28
  3819                           
  3820                           ;incstack = 0
  3821                           ;invert_action@input_action stored from wreg
  3822   007D82  6E04               	movwf	invert_action@input_action^0,c
  3823   007D84                     
  3824                           ;color.c: 188:     char output_action;;color.c: 189:     switch(input_action){
  3825   007D84  EFD2  F03E         	goto	l6094
  3826   007D88                     l6076:
  3827                           
  3828                           ;color.c: 192:             break;
  3829   007D88  EFFB  F03E         	goto	l93
  3830   007D8C                     l6078:
  3831                           
  3832                           ;color.c: 195:             break;
  3833   007D8C  EFFB  F03E         	goto	l93
  3834   007D90                     l6080:
  3835                           
  3836                           ;color.c: 198:             break;
  3837   007D90  EFFB  F03E         	goto	l93
  3838   007D94                     l6082:
  3839                           
  3840                           ;color.c: 201:             break;
  3841   007D94  EFFB  F03E         	goto	l93
  3842   007D98                     l6084:
  3843                           
  3844                           ;color.c: 204:             break;
  3845   007D98  EFFB  F03E         	goto	l93
  3846   007D9C                     l6086:
  3847                           
  3848                           ;color.c: 207:             break;
  3849   007D9C  EFFB  F03E         	goto	l93
  3850   007DA0                     l6088:
  3851                           
  3852                           ;color.c: 210:             break;
  3853   007DA0  EFFB  F03E         	goto	l93
  3854   007DA4                     l6094:
  3855   007DA4  5004               	movf	invert_action@input_action^0,w,c
  3856   007DA6  6E02               	movwf	??_invert_action^0,c
  3857   007DA8  6A03               	clrf	(??_invert_action+1)^0,c
  3858                           
  3859                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3860                           ; Switch size 1, requested type "simple"
  3861                           ; Number of cases is 1, Range of values is 0 to 0
  3862                           ; switch strategies available:
  3863                           ; Name         Instructions Cycles
  3864                           ; simple_byte            4     3 (average)
  3865                           ;	Chosen strategy is simple_byte
  3866   007DAA  5003               	movf	(??_invert_action+1)^0,w,c
  3867   007DAC  0A00               	xorlw	0	; case 0
  3868   007DAE  B4D8               	btfsc	status,2,c
  3869   007DB0  EFDC  F03E         	goto	l8646
  3870   007DB4  EFFB  F03E         	goto	l93
  3871   007DB8                     l8646:
  3872                           
  3873                           ; Switch size 1, requested type "simple"
  3874                           ; Number of cases is 7, Range of values is 0 to 6
  3875                           ; switch strategies available:
  3876                           ; Name         Instructions Cycles
  3877                           ; simple_byte           22    12 (average)
  3878                           ;	Chosen strategy is simple_byte
  3879   007DB8  5002               	movf	??_invert_action^0,w,c
  3880   007DBA  0A00               	xorlw	0	; case 0
  3881   007DBC  B4D8               	btfsc	status,2,c
  3882   007DBE  EFC4  F03E         	goto	l6076
  3883   007DC2  0A01               	xorlw	1	; case 1
  3884   007DC4  B4D8               	btfsc	status,2,c
  3885   007DC6  EFC6  F03E         	goto	l6078
  3886   007DCA  0A03               	xorlw	3	; case 2
  3887   007DCC  B4D8               	btfsc	status,2,c
  3888   007DCE  EFC8  F03E         	goto	l6080
  3889   007DD2  0A01               	xorlw	1	; case 3
  3890   007DD4  B4D8               	btfsc	status,2,c
  3891   007DD6  EFCA  F03E         	goto	l6082
  3892   007DDA  0A07               	xorlw	7	; case 4
  3893   007DDC  B4D8               	btfsc	status,2,c
  3894   007DDE  EFCC  F03E         	goto	l6084
  3895   007DE2  0A01               	xorlw	1	; case 5
  3896   007DE4  B4D8               	btfsc	status,2,c
  3897   007DE6  EFCE  F03E         	goto	l6086
  3898   007DEA  0A03               	xorlw	3	; case 6
  3899   007DEC  B4D8               	btfsc	status,2,c
  3900   007DEE  EFD0  F03E         	goto	l6088
  3901   007DF2  EFFB  F03E         	goto	l93
  3902   007DF6                     l93:
  3903   007DF6  0012               	return		;funcret
  3904   007DF8                     __end_of_invert_action:
  3905                           	callstack 0
  3906                           
  3907 ;; *************** function _initUSART4 *****************
  3908 ;; Defined at:
  3909 ;;		line 4 in file "serial.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3927 ;;Total ram usage:        0 bytes
  3928 ;; Hardware stack levels used: 1
  3929 ;; Hardware stack levels required when called: 2
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_main
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text9
  3938   008444                     __ptext9:
  3939                           	callstack 0
  3940   008444                     _initUSART4:
  3941                           	callstack 28
  3942   008444                     
  3943                           ;serial.c: 8:     RC0PPS = 0x12;
  3944   008444  0E12               	movlw	18
  3945   008446  010E               	movlb	14	; () banked
  3946   008448  6F62               	movwf	98,b	;volatile
  3947                           
  3948                           ;serial.c: 9:     RX4PPS = 0x11;
  3949   00844A  0E11               	movlw	17
  3950   00844C  6F15               	movwf	21,b	;volatile
  3951   00844E                     
  3952                           ; BSR set to: 14
  3953                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  3954   00844E  97E9               	bcf	233,3,b	;volatile
  3955   008450                     
  3956                           ; BSR set to: 14
  3957                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  3958   008450  95E8               	bcf	232,2,b	;volatile
  3959                           
  3960                           ;serial.c: 15:     SP4BRGL = 51;
  3961   008452  0E33               	movlw	51
  3962   008454  6FE5               	movwf	229,b	;volatile
  3963                           
  3964                           ;serial.c: 16:     SP4BRGH = 0;
  3965   008456  0E00               	movlw	0
  3966   008458  6FE6               	movwf	230,b	;volatile
  3967   00845A                     
  3968                           ; BSR set to: 14
  3969                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  3970   00845A  89E7               	bsf	231,4,b	;volatile
  3971   00845C                     
  3972                           ; BSR set to: 14
  3973                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  3974   00845C  8BE8               	bsf	232,5,b	;volatile
  3975   00845E                     
  3976                           ; BSR set to: 14
  3977                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  3978   00845E  8FE7               	bsf	231,7,b	;volatile
  3979   008460                     
  3980                           ; BSR set to: 14
  3981   008460  0012               	return		;funcret
  3982   008462                     __end_of_initUSART4:
  3983                           	callstack 0
  3984                           
  3985 ;; *************** function _initDCmotorsPWM *****************
  3986 ;; Defined at:
  3987 ;;		line 6 in file "dc_motor.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;  PWMperiod       2    1[COMRAM] int 
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4005 ;;Total ram usage:        2 bytes
  4006 ;; Hardware stack levels used: 1
  4007 ;; Hardware stack levels required when called: 2
  4008 ;; This function calls:
  4009 ;;		Nothing
  4010 ;; This function is called by:
  4011 ;;		_main
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text10
  4016   007C46                     __ptext10:
  4017                           	callstack 0
  4018   007C46                     _initDCmotorsPWM:
  4019                           	callstack 28
  4020   007C46                     
  4021                           ;dc_motor.c: 10:     RE2PPS=0x05;
  4022   007C46  0E05               	movlw	5
  4023   007C48  010E               	movlb	14	; () banked
  4024   007C4A  6F74               	movwf	116,b	;volatile
  4025                           
  4026                           ;dc_motor.c: 11:     RE4PPS=0x06;
  4027   007C4C  0E06               	movlw	6
  4028   007C4E  6F76               	movwf	118,b	;volatile
  4029                           
  4030                           ;dc_motor.c: 12:     RC7PPS=0x07;
  4031   007C50  0E07               	movlw	7
  4032   007C52  6F69               	movwf	105,b	;volatile
  4033                           
  4034                           ;dc_motor.c: 13:     RG6PPS=0x08;
  4035   007C54  0E08               	movlw	8
  4036   007C56  6F88               	movwf	136,b	;volatile
  4037                           
  4038                           ;dc_motor.c: 16:     T2CONbits.CKPS=0b100;
  4039   007C58  50BD               	movf	189,w,c	;volatile
  4040   007C5A  0B8F               	andlw	-113
  4041   007C5C  0940               	iorlw	64
  4042   007C5E  6EBD               	movwf	189,c	;volatile
  4043                           
  4044                           ;dc_motor.c: 17:     T2HLTbits.MODE=0b00000;
  4045   007C60  0EE0               	movlw	-32
  4046   007C62  16BE               	andwf	190,f,c	;volatile
  4047                           
  4048                           ;dc_motor.c: 18:     T2CLKCONbits.CS=0b0001;
  4049   007C64  50BF               	movf	191,w,c	;volatile
  4050   007C66  0BF0               	andlw	-16
  4051   007C68  0901               	iorlw	1
  4052   007C6A  6EBF               	movwf	191,c	;volatile
  4053                           
  4054                           ;dc_motor.c: 22:     T2PR=99;
  4055   007C6C  0E63               	movlw	99
  4056   007C6E  6EBC               	movwf	188,c	;volatile
  4057   007C70                     
  4058                           ; BSR set to: 14
  4059                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  4060   007C70  8EBD               	bsf	189,7,c	;volatile
  4061                           
  4062                           ;dc_motor.c: 27:     CCPR1H=0;
  4063   007C72  0E00               	movlw	0
  4064   007C74  6EAA               	movwf	170,c	;volatile
  4065                           
  4066                           ;dc_motor.c: 28:     CCPR2H=0;
  4067   007C76  0E00               	movlw	0
  4068   007C78  6EA6               	movwf	166,c	;volatile
  4069                           
  4070                           ;dc_motor.c: 29:     CCPR3H=0;
  4071   007C7A  0E00               	movlw	0
  4072   007C7C  010F               	movlb	15	; () banked
  4073   007C7E  6F25               	movwf	37,b	;volatile
  4074                           
  4075                           ;dc_motor.c: 30:     CCPR4H=0;
  4076   007C80  0E00               	movlw	0
  4077   007C82  6F21               	movwf	33,b	;volatile
  4078                           
  4079                           ;dc_motor.c: 33:     CCPTMRS0bits.C1TSEL=0;
  4080   007C84  0EFC               	movlw	-4
  4081   007C86  16AD               	andwf	173,f,c	;volatile
  4082                           
  4083                           ;dc_motor.c: 34:     CCPTMRS0bits.C2TSEL=0;
  4084   007C88  0EF3               	movlw	-13
  4085   007C8A  16AD               	andwf	173,f,c	;volatile
  4086                           
  4087                           ;dc_motor.c: 35:     CCPTMRS0bits.C3TSEL=0;
  4088   007C8C  0ECF               	movlw	-49
  4089   007C8E  16AD               	andwf	173,f,c	;volatile
  4090                           
  4091                           ;dc_motor.c: 36:     CCPTMRS0bits.C4TSEL=0;
  4092   007C90  0E3F               	movlw	-193
  4093   007C92  16AD               	andwf	173,f,c	;volatile
  4094   007C94                     
  4095                           ; BSR set to: 15
  4096                           ;dc_motor.c: 39:     CCP1CONbits.FMT=1;
  4097   007C94  88AB               	bsf	171,4,c	;volatile
  4098                           
  4099                           ;dc_motor.c: 40:     CCP1CONbits.CCP1MODE=0b1100;
  4100   007C96  50AB               	movf	171,w,c	;volatile
  4101   007C98  0BF0               	andlw	-16
  4102   007C9A  090C               	iorlw	12
  4103   007C9C  6EAB               	movwf	171,c	;volatile
  4104   007C9E                     
  4105                           ; BSR set to: 15
  4106                           ;dc_motor.c: 41:     CCP1CONbits.EN=1;
  4107   007C9E  8EAB               	bsf	171,7,c	;volatile
  4108   007CA0                     
  4109                           ; BSR set to: 15
  4110                           ;dc_motor.c: 43:     CCP2CONbits.FMT=1;
  4111   007CA0  88A7               	bsf	167,4,c	;volatile
  4112                           
  4113                           ;dc_motor.c: 44:     CCP2CONbits.CCP2MODE=0b1100;
  4114   007CA2  50A7               	movf	167,w,c	;volatile
  4115   007CA4  0BF0               	andlw	-16
  4116   007CA6  090C               	iorlw	12
  4117   007CA8  6EA7               	movwf	167,c	;volatile
  4118   007CAA                     
  4119                           ; BSR set to: 15
  4120                           ;dc_motor.c: 45:     CCP2CONbits.EN=1;
  4121   007CAA  8EA7               	bsf	167,7,c	;volatile
  4122   007CAC                     
  4123                           ; BSR set to: 15
  4124                           ;dc_motor.c: 47:     CCP3CONbits.FMT=1;
  4125   007CAC  8926               	bsf	38,4,b	;volatile
  4126                           
  4127                           ;dc_motor.c: 48:     CCP3CONbits.CCP3MODE=0b1100;
  4128   007CAE  5126               	movf	38,w,b	;volatile
  4129   007CB0  0BF0               	andlw	-16
  4130   007CB2  090C               	iorlw	12
  4131   007CB4  6F26               	movwf	38,b	;volatile
  4132   007CB6                     
  4133                           ; BSR set to: 15
  4134                           ;dc_motor.c: 49:     CCP3CONbits.EN=1;
  4135   007CB6  8F26               	bsf	38,7,b	;volatile
  4136   007CB8                     
  4137                           ; BSR set to: 15
  4138                           ;dc_motor.c: 51:     CCP4CONbits.FMT=1;
  4139   007CB8  8922               	bsf	34,4,b	;volatile
  4140                           
  4141                           ;dc_motor.c: 52:     CCP4CONbits.CCP4MODE=0b1100;
  4142   007CBA  5122               	movf	34,w,b	;volatile
  4143   007CBC  0BF0               	andlw	-16
  4144   007CBE  090C               	iorlw	12
  4145   007CC0  6F22               	movwf	34,b	;volatile
  4146   007CC2                     
  4147                           ; BSR set to: 15
  4148                           ;dc_motor.c: 53:     CCP4CONbits.EN=1;
  4149   007CC2  8F22               	bsf	34,7,b	;volatile
  4150                           
  4151                           ;dc_motor.c: 56:     RE2PPS=0x05;
  4152   007CC4  0E05               	movlw	5
  4153   007CC6  010E               	movlb	14	; () banked
  4154   007CC8  6F74               	movwf	116,b	;volatile
  4155                           
  4156                           ;dc_motor.c: 57:     RE4PPS=0x06;
  4157   007CCA  0E06               	movlw	6
  4158   007CCC  6F76               	movwf	118,b	;volatile
  4159                           
  4160                           ;dc_motor.c: 58:     RC7PPS=0x07;
  4161   007CCE  0E07               	movlw	7
  4162   007CD0  6F69               	movwf	105,b	;volatile
  4163                           
  4164                           ;dc_motor.c: 59:     RG6PPS=0x08;
  4165   007CD2  0E08               	movlw	8
  4166   007CD4  6F88               	movwf	136,b	;volatile
  4167   007CD6                     
  4168                           ; BSR set to: 14
  4169                           ;dc_motor.c: 62:     TRISEbits.TRISE2=0;
  4170   007CD6  9485               	bcf	133,2,c	;volatile
  4171   007CD8                     
  4172                           ; BSR set to: 14
  4173                           ;dc_motor.c: 63:     TRISEbits.TRISE4=0;
  4174   007CD8  9885               	bcf	133,4,c	;volatile
  4175   007CDA                     
  4176                           ; BSR set to: 14
  4177                           ;dc_motor.c: 64:     TRISCbits.TRISC7=0;
  4178   007CDA  9E83               	bcf	131,7,c	;volatile
  4179   007CDC                     
  4180                           ; BSR set to: 14
  4181                           ;dc_motor.c: 65:     TRISGbits.TRISG6=0;
  4182   007CDC  9C87               	bcf	135,6,c	;volatile
  4183   007CDE                     
  4184                           ; BSR set to: 14
  4185                           ;dc_motor.c: 68:     LATEbits.LATE2=0;
  4186   007CDE  947D               	bcf	125,2,c	;volatile
  4187   007CE0                     
  4188                           ; BSR set to: 14
  4189                           ;dc_motor.c: 69:     LATCbits.LATC7=0;
  4190   007CE0  9E7B               	bcf	123,7,c	;volatile
  4191   007CE2                     
  4192                           ; BSR set to: 14
  4193                           ;dc_motor.c: 70:     LATEbits.LATE4=0;
  4194   007CE2  987D               	bcf	125,4,c	;volatile
  4195   007CE4                     
  4196                           ; BSR set to: 14
  4197                           ;dc_motor.c: 71:     LATGbits.LATG6=0;
  4198   007CE4  9C7F               	bcf	127,6,c	;volatile
  4199   007CE6                     
  4200                           ; BSR set to: 14
  4201   007CE6  0012               	return		;funcret
  4202   007CE8                     __end_of_initDCmotorsPWM:
  4203                           	callstack 0
  4204                           
  4205 ;; *************** function _inch_forward *****************
  4206 ;; Defined at:
  4207 ;;		line 227 in file "dc_motor.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  4210 ;;		 -> main@motorL(9), 
  4211 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  4212 ;;		 -> main@motorR(9), 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4224 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4226 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4227 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4228 ;;Total ram usage:        6 bytes
  4229 ;; Hardware stack levels used: 1
  4230 ;; Hardware stack levels required when called: 5
  4231 ;; This function calls:
  4232 ;;		_setMotorPWM
  4233 ;;		_stop
  4234 ;; This function is called by:
  4235 ;;		_main
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text11
  4240   00793C                     __ptext11:
  4241                           	callstack 0
  4242   00793C                     _inch_forward:
  4243                           	callstack 25
  4244   00793C                     
  4245                           ;dc_motor.c: 228:     mL->direction = 0;
  4246   00793C  EE20 F001          	lfsr	2,1
  4247   007940  5019               	movf	inch_forward@mL^0,w,c
  4248   007942  26D9               	addwf	fsr2l,f,c
  4249   007944  501A               	movf	(inch_forward@mL+1)^0,w,c
  4250   007946  22DA               	addwfc	fsr2h,f,c
  4251   007948  6ADF               	clrf	indf2,c
  4252                           
  4253                           ;dc_motor.c: 229:     mR->direction = 0;
  4254   00794A  EE20 F001          	lfsr	2,1
  4255   00794E  501B               	movf	inch_forward@mR^0,w,c
  4256   007950  26D9               	addwf	fsr2l,f,c
  4257   007952  501C               	movf	(inch_forward@mR+1)^0,w,c
  4258   007954  22DA               	addwfc	fsr2h,f,c
  4259   007956  6ADF               	clrf	indf2,c
  4260                           
  4261                           ;dc_motor.c: 231:     while ((mL->power) < 20 || (mR->power) < 20){
  4262   007958  EFE4  F03C         	goto	l266
  4263   00795C                     l6292:
  4264                           
  4265                           ;dc_motor.c: 232:         if ((mL->power) < 20) (mL->power) += 1;
  4266   00795C  C019  FFD9         	movff	inch_forward@mL,fsr2l
  4267   007960  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  4268   007964  0E14               	movlw	20
  4269   007966  60DF               	cpfslt	indf2,c
  4270   007968  EFB8  F03C         	goto	u6441
  4271   00796C  EFBA  F03C         	goto	u6440
  4272   007970                     u6441:
  4273   007970  EFBF  F03C         	goto	l6296
  4274   007974                     u6440:
  4275   007974  C019  FFD9         	movff	inch_forward@mL,fsr2l
  4276   007978  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  4277   00797C  2ADF               	incf	indf2,f,c
  4278   00797E                     l6296:
  4279                           
  4280                           ;dc_motor.c: 233:         if ((mR->power) < 20) (mR->power) += 1;
  4281   00797E  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  4282   007982  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  4283   007986  0E14               	movlw	20
  4284   007988  60DF               	cpfslt	indf2,c
  4285   00798A  EFC9  F03C         	goto	u6451
  4286   00798E  EFCB  F03C         	goto	u6450
  4287   007992                     u6451:
  4288   007992  EFD0  F03C         	goto	l6300
  4289   007996                     u6450:
  4290   007996  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  4291   00799A  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  4292   00799E  2ADF               	incf	indf2,f,c
  4293   0079A0                     l6300:
  4294                           
  4295                           ;dc_motor.c: 235:         setMotorPWM(mL);
  4296   0079A0  C019  F00F         	movff	inch_forward@mL,setMotorPWM@m
  4297   0079A4  C01A  F010         	movff	inch_forward@mL+1,setMotorPWM@m+1
  4298   0079A8  EC8A  F037         	call	_setMotorPWM	;wreg free
  4299   0079AC                     
  4300                           ;dc_motor.c: 236:         setMotorPWM(mR);
  4301   0079AC  C01B  F00F         	movff	inch_forward@mR,setMotorPWM@m
  4302   0079B0  C01C  F010         	movff	inch_forward@mR+1,setMotorPWM@m+1
  4303   0079B4  EC8A  F037         	call	_setMotorPWM	;wreg free
  4304   0079B8                     
  4305                           ;dc_motor.c: 237:         _delay((unsigned long)((1)*(64000000/4000.0)));
  4306   0079B8  0E15               	movlw	21
  4307   0079BA  6E1D               	movwf	??_inch_forward^0,c
  4308   0079BC  0EC6               	movlw	198
  4309   0079BE                     u9537:
  4310   0079BE  2EE8               	decfsz	wreg,f,c
  4311   0079C0  D7FE               	bra	u9537
  4312   0079C2  2E1D               	decfsz	??_inch_forward^0,f,c
  4313   0079C4  D7FC               	bra	u9537
  4314   0079C6  D000               	nop2	
  4315   0079C8                     l266:
  4316                           
  4317                           ;dc_motor.c: 231:     while ((mL->power) < 20 || (mR->power) < 20){
  4318   0079C8  C019  FFD9         	movff	inch_forward@mL,fsr2l
  4319   0079CC  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  4320   0079D0  0E13               	movlw	19
  4321   0079D2  64DF               	cpfsgt	indf2,c
  4322   0079D4  EFEE  F03C         	goto	u6461
  4323   0079D8  EFF0  F03C         	goto	u6460
  4324   0079DC                     u6461:
  4325   0079DC  EFAE  F03C         	goto	l6292
  4326   0079E0                     u6460:
  4327   0079E0  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  4328   0079E4  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  4329   0079E8  0E13               	movlw	19
  4330   0079EA  64DF               	cpfsgt	indf2,c
  4331   0079EC  EFFA  F03C         	goto	u6471
  4332   0079F0  EFFC  F03C         	goto	u6470
  4333   0079F4                     u6471:
  4334   0079F4  EFAE  F03C         	goto	l6292
  4335   0079F8                     u6470:
  4336   0079F8                     
  4337                           ;dc_motor.c: 239:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4338   0079F8  0E05               	movlw	5
  4339   0079FA  6E1E               	movwf	(??_inch_forward+1)^0,c
  4340   0079FC  0E0F               	movlw	15
  4341   0079FE  6E1D               	movwf	??_inch_forward^0,c
  4342   007A00  0EF1               	movlw	241
  4343   007A02                     u9547:
  4344   007A02  2EE8               	decfsz	wreg,f,c
  4345   007A04  D7FE               	bra	u9547
  4346   007A06  2E1D               	decfsz	??_inch_forward^0,f,c
  4347   007A08  D7FC               	bra	u9547
  4348   007A0A  2E1E               	decfsz	(??_inch_forward+1)^0,f,c
  4349   007A0C  D7FA               	bra	u9547
  4350   007A0E  0000               	nop	
  4351   007A10                     
  4352                           ;dc_motor.c: 240:     stop(mL, mR);
  4353   007A10  C019  F015         	movff	inch_forward@mL,stop@mL
  4354   007A14  C01A  F016         	movff	inch_forward@mL+1,stop@mL+1
  4355   007A18  C01B  F017         	movff	inch_forward@mR,stop@mR
  4356   007A1C  C01C  F018         	movff	inch_forward@mR+1,stop@mR+1
  4357   007A20  EC74  F03E         	call	_stop	;wreg free
  4358   007A24  0012               	return		;funcret
  4359   007A26                     __end_of_inch_forward:
  4360                           	callstack 0
  4361                           
  4362 ;; *************** function _stop *****************
  4363 ;; Defined at:
  4364 ;;		line 114 in file "dc_motor.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  4367 ;;		 -> main@motorL(9), 
  4368 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  4369 ;;		 -> main@motorR(9), 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;		None
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4381 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4384 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4385 ;;Total ram usage:        4 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; Hardware stack levels required when called: 4
  4388 ;; This function calls:
  4389 ;;		_setMotorPWM
  4390 ;; This function is called by:
  4391 ;;		_turn_left_90
  4392 ;;		_turn_right_90
  4393 ;;		_turn_left_135
  4394 ;;		_turn_right_135
  4395 ;;		_reverse_after_read
  4396 ;;		_reverse_one_square
  4397 ;;		_inch_forward
  4398 ;;		_main
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text12
  4403   007CE8                     __ptext12:
  4404                           	callstack 0
  4405   007CE8                     _stop:
  4406                           	callstack 25
  4407   007CE8                     
  4408                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  4409   007CE8  EFA8  F03E         	goto	l5836
  4410   007CEC                     l5822:
  4411                           
  4412                           ;dc_motor.c: 116:         if ((mL->power) > 0) (mL->power) -= 1;
  4413   007CEC  C015  FFD9         	movff	stop@mL,fsr2l
  4414   007CF0  C016  FFDA         	movff	stop@mL+1,fsr2h
  4415   007CF4  50DF               	movf	indf2,w,c
  4416   007CF6  B4D8               	btfsc	status,2,c
  4417   007CF8  EF80  F03E         	goto	u6011
  4418   007CFC  EF82  F03E         	goto	u6010
  4419   007D00                     u6011:
  4420   007D00  EF87  F03E         	goto	l5826
  4421   007D04                     u6010:
  4422   007D04  C015  FFD9         	movff	stop@mL,fsr2l
  4423   007D08  C016  FFDA         	movff	stop@mL+1,fsr2h
  4424   007D0C  06DF               	decf	indf2,f,c
  4425   007D0E                     l5826:
  4426                           
  4427                           ;dc_motor.c: 117:         if ((mR->power) > 0) (mR->power) -= 1;
  4428   007D0E  C017  FFD9         	movff	stop@mR,fsr2l
  4429   007D12  C018  FFDA         	movff	stop@mR+1,fsr2h
  4430   007D16  50DF               	movf	indf2,w,c
  4431   007D18  B4D8               	btfsc	status,2,c
  4432   007D1A  EF91  F03E         	goto	u6021
  4433   007D1E  EF93  F03E         	goto	u6020
  4434   007D22                     u6021:
  4435   007D22  EF98  F03E         	goto	l5830
  4436   007D26                     u6020:
  4437   007D26  C017  FFD9         	movff	stop@mR,fsr2l
  4438   007D2A  C018  FFDA         	movff	stop@mR+1,fsr2h
  4439   007D2E  06DF               	decf	indf2,f,c
  4440   007D30                     l5830:
  4441                           
  4442                           ;dc_motor.c: 119:         setMotorPWM(mL);
  4443   007D30  C015  F00F         	movff	stop@mL,setMotorPWM@m
  4444   007D34  C016  F010         	movff	stop@mL+1,setMotorPWM@m+1
  4445   007D38  EC8A  F037         	call	_setMotorPWM	;wreg free
  4446   007D3C                     
  4447                           ;dc_motor.c: 120:         setMotorPWM(mR);
  4448   007D3C  C017  F00F         	movff	stop@mR,setMotorPWM@m
  4449   007D40  C018  F010         	movff	stop@mR+1,setMotorPWM@m+1
  4450   007D44  EC8A  F037         	call	_setMotorPWM	;wreg free
  4451   007D48                     
  4452                           ;dc_motor.c: 121:         _delay((unsigned long)((25)*(64000000/4000000.0)));
  4453   007D48  0E85               	movlw	133
  4454   007D4A                     u9557:
  4455   007D4A  2EE8               	decfsz	wreg,f,c
  4456   007D4C  D7FE               	bra	u9557
  4457   007D4E  0000               	nop	
  4458   007D50                     l5836:
  4459                           
  4460                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  4461   007D50  C015  FFD9         	movff	stop@mL,fsr2l
  4462   007D54  C016  FFDA         	movff	stop@mL+1,fsr2h
  4463   007D58  50DF               	movf	indf2,w,c
  4464   007D5A  A4D8               	btfss	status,2,c
  4465   007D5C  EFB2  F03E         	goto	u6031
  4466   007D60  EFB4  F03E         	goto	u6030
  4467   007D64                     u6031:
  4468   007D64  EF76  F03E         	goto	l5822
  4469   007D68                     u6030:
  4470   007D68  C017  FFD9         	movff	stop@mR,fsr2l
  4471   007D6C  C018  FFDA         	movff	stop@mR+1,fsr2h
  4472   007D70  50DF               	movf	indf2,w,c
  4473   007D72  A4D8               	btfss	status,2,c
  4474   007D74  EFBE  F03E         	goto	u6041
  4475   007D78  EFC0  F03E         	goto	u6040
  4476   007D7C                     u6041:
  4477   007D7C  EF76  F03E         	goto	l5822
  4478   007D80                     u6040:
  4479   007D80  0012               	return		;funcret
  4480   007D82                     __end_of_stop:
  4481                           	callstack 0
  4482                           
  4483 ;; *************** function _get16bitTMR0val *****************
  4484 ;; Defined at:
  4485 ;;		line 27 in file "timers.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;		None
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  timer_val       2    5[COMRAM] unsigned int 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  2    1[COMRAM] unsigned int 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2, status,0
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4501 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4502 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4503 ;;Total ram usage:        6 bytes
  4504 ;; Hardware stack levels used: 1
  4505 ;; Hardware stack levels required when called: 2
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_main
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text13
  4514   008462                     __ptext13:
  4515                           	callstack 0
  4516   008462                     _get16bitTMR0val:
  4517                           	callstack 28
  4518   008462                     
  4519                           ;timers.c: 29:     unsigned int timer_val = TMR0L;
  4520   008462  CFD3 F006          	movff	4051,get16bitTMR0val@timer_val	;volatile
  4521   008466  6A07               	clrf	(get16bitTMR0val@timer_val+1)^0,c
  4522   008468                     
  4523                           ;timers.c: 30:     timer_val |= (TMR0H << 8);
  4524   008468  50D4               	movf	212,w,c	;volatile
  4525   00846A  6E05               	movwf	(??_get16bitTMR0val+1)^0,c
  4526   00846C  6A04               	clrf	??_get16bitTMR0val^0,c
  4527   00846E  5004               	movf	??_get16bitTMR0val^0,w,c
  4528   008470  1206               	iorwf	get16bitTMR0val@timer_val^0,f,c
  4529   008472  5005               	movf	(??_get16bitTMR0val+1)^0,w,c
  4530   008474  1207               	iorwf	(get16bitTMR0val@timer_val+1)^0,f,c
  4531   008476                     
  4532                           ;timers.c: 31:     return timer_val;
  4533   008476  C006  F002         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  4534   00847A  C007  F003         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  4535   00847E  0012               	return		;funcret
  4536   008480                     __end_of_get16bitTMR0val:
  4537                           	callstack 0
  4538                           
  4539 ;; *************** function _fullSpeedAhead *****************
  4540 ;; Defined at:
  4541 ;;		line 99 in file "dc_motor.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  4544 ;;		 -> main@motorL(9), 
  4545 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  4546 ;;		 -> main@motorR(9), 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4558 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4560 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4561 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4562 ;;Total ram usage:        5 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 4
  4565 ;; This function calls:
  4566 ;;		_setMotorPWM
  4567 ;; This function is called by:
  4568 ;;		_main
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text14
  4573   007A26                     __ptext14:
  4574                           	callstack 0
  4575   007A26                     _fullSpeedAhead:
  4576                           	callstack 26
  4577   007A26                     
  4578                           ;dc_motor.c: 100:     mL->direction = 0;
  4579   007A26  EE20 F001          	lfsr	2,1
  4580   007A2A  5015               	movf	fullSpeedAhead@mL^0,w,c
  4581   007A2C  26D9               	addwf	fsr2l,f,c
  4582   007A2E  5016               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4583   007A30  22DA               	addwfc	fsr2h,f,c
  4584   007A32  6ADF               	clrf	indf2,c
  4585                           
  4586                           ;dc_motor.c: 101:     mR->direction = 0;
  4587   007A34  EE20 F001          	lfsr	2,1
  4588   007A38  5017               	movf	fullSpeedAhead@mR^0,w,c
  4589   007A3A  26D9               	addwf	fsr2l,f,c
  4590   007A3C  5018               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4591   007A3E  22DA               	addwfc	fsr2h,f,c
  4592   007A40  6ADF               	clrf	indf2,c
  4593                           
  4594                           ;dc_motor.c: 103:     while ((mL->power) < 70 || (mR->power) < 70){
  4595   007A42  EF58  F03D         	goto	l202
  4596   007A46                     l6138:
  4597                           
  4598                           ;dc_motor.c: 104:         if ((mL->power) < 70) (mL->power) += 1;
  4599   007A46  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4600   007A4A  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4601   007A4E  0E46               	movlw	70
  4602   007A50  60DF               	cpfslt	indf2,c
  4603   007A52  EF2D  F03D         	goto	u6161
  4604   007A56  EF2F  F03D         	goto	u6160
  4605   007A5A                     u6161:
  4606   007A5A  EF34  F03D         	goto	l6142
  4607   007A5E                     u6160:
  4608   007A5E  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4609   007A62  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4610   007A66  2ADF               	incf	indf2,f,c
  4611   007A68                     l6142:
  4612                           
  4613                           ;dc_motor.c: 105:         if ((mR->power) < 70) (mR->power) += 1;
  4614   007A68  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4615   007A6C  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4616   007A70  0E46               	movlw	70
  4617   007A72  60DF               	cpfslt	indf2,c
  4618   007A74  EF3E  F03D         	goto	u6171
  4619   007A78  EF40  F03D         	goto	u6170
  4620   007A7C                     u6171:
  4621   007A7C  EF45  F03D         	goto	l6146
  4622   007A80                     u6170:
  4623   007A80  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4624   007A84  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4625   007A88  2ADF               	incf	indf2,f,c
  4626   007A8A                     l6146:
  4627                           
  4628                           ;dc_motor.c: 107:         setMotorPWM(mL);
  4629   007A8A  C015  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4630   007A8E  C016  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4631   007A92  EC8A  F037         	call	_setMotorPWM	;wreg free
  4632   007A96                     
  4633                           ;dc_motor.c: 108:         setMotorPWM(mR);
  4634   007A96  C017  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4635   007A9A  C018  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4636   007A9E  EC8A  F037         	call	_setMotorPWM	;wreg free
  4637   007AA2                     
  4638                           ;dc_motor.c: 109:         _delay((unsigned long)((2)*(64000000/4000.0)));
  4639   007AA2  0E2A               	movlw	42
  4640   007AA4  6E19               	movwf	??_fullSpeedAhead^0,c
  4641   007AA6  0E8E               	movlw	142
  4642   007AA8                     u9567:
  4643   007AA8  2EE8               	decfsz	wreg,f,c
  4644   007AAA  D7FE               	bra	u9567
  4645   007AAC  2E19               	decfsz	??_fullSpeedAhead^0,f,c
  4646   007AAE  D7FC               	bra	u9567
  4647   007AB0                     l202:
  4648                           
  4649                           ;dc_motor.c: 103:     while ((mL->power) < 70 || (mR->power) < 70){
  4650   007AB0  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4651   007AB4  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4652   007AB8  0E45               	movlw	69
  4653   007ABA  64DF               	cpfsgt	indf2,c
  4654   007ABC  EF62  F03D         	goto	u6181
  4655   007AC0  EF64  F03D         	goto	u6180
  4656   007AC4                     u6181:
  4657   007AC4  EF23  F03D         	goto	l6138
  4658   007AC8                     u6180:
  4659   007AC8  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4660   007ACC  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4661   007AD0  0E45               	movlw	69
  4662   007AD2  64DF               	cpfsgt	indf2,c
  4663   007AD4  EF6E  F03D         	goto	u6191
  4664   007AD8  EF70  F03D         	goto	u6190
  4665   007ADC                     u6191:
  4666   007ADC  EF23  F03D         	goto	l6138
  4667   007AE0                     u6190:
  4668   007AE0  0012               	return		;funcret
  4669   007AE2                     __end_of_fullSpeedAhead:
  4670                           	callstack 0
  4671                           
  4672 ;; *************** function _setMotorPWM *****************
  4673 ;; Defined at:
  4674 ;;		line 76 in file "dc_motor.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;  m               2   14[COMRAM] PTR struct DC_motor
  4677 ;;		 -> main@motorR(9), main@motorL(9), 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  negDuty         1   19[COMRAM] unsigned char 
  4680 ;;  posDuty         1   18[COMRAM] unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4693 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4694 ;;Total ram usage:        6 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; Hardware stack levels required when called: 3
  4697 ;; This function calls:
  4698 ;;		___lwdiv
  4699 ;;		___wmul
  4700 ;; This function is called by:
  4701 ;;		_fullSpeedAhead
  4702 ;;		_stop
  4703 ;;		_turn_left_90
  4704 ;;		_turn_right_90
  4705 ;;		_turn_left_135
  4706 ;;		_turn_right_135
  4707 ;;		_reverse_after_read
  4708 ;;		_reverse_one_square
  4709 ;;		_inch_forward
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text15
  4714   006F14                     __ptext15:
  4715                           	callstack 0
  4716   006F14                     _setMotorPWM:
  4717                           	callstack 25
  4718   006F14                     
  4719                           ;dc_motor.c: 76: void setMotorPWM(struct DC_motor *m);dc_motor.c: 77: {;dc_motor.c: 78: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 80:     if(m->brakemode) {
  4720   006F14  EE20 F002          	lfsr	2,2
  4721   006F18  500F               	movf	setMotorPWM@m^0,w,c
  4722   006F1A  26D9               	addwf	fsr2l,f,c
  4723   006F1C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4724   006F1E  22DA               	addwfc	fsr2h,f,c
  4725   006F20  50DF               	movf	indf2,w,c
  4726   006F22  B4D8               	btfsc	status,2,c
  4727   006F24  EF96  F037         	goto	u5191
  4728   006F28  EF98  F037         	goto	u5190
  4729   006F2C                     u5191:
  4730   006F2C  EFCC  F037         	goto	l5234
  4731   006F30                     u5190:
  4732   006F30                     
  4733                           ;dc_motor.c: 81:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  4734   006F30  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  4735   006F34  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4736   006F38  50DF               	movf	indf2,w,c
  4737   006F3A  6E11               	movwf	??_setMotorPWM^0,c
  4738   006F3C  5011               	movf	??_setMotorPWM^0,w,c
  4739   006F3E  6E02               	movwf	___wmul@multiplier^0,c
  4740   006F40  6A03               	clrf	(___wmul@multiplier+1)^0,c
  4741   006F42  EE20 F003          	lfsr	2,3
  4742   006F46  500F               	movf	setMotorPWM@m^0,w,c
  4743   006F48  26D9               	addwf	fsr2l,f,c
  4744   006F4A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4745   006F4C  22DA               	addwfc	fsr2h,f,c
  4746   006F4E  CFDE F004          	movff	postinc2,___wmul@multiplicand
  4747   006F52  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  4748   006F56  ECEF  F041         	call	___wmul	;wreg free
  4749   006F5A  C002  F008         	movff	?___wmul,___lwdiv@dividend
  4750   006F5E  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  4751   006F62  0E00               	movlw	0
  4752   006F64  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  4753   006F66  0E64               	movlw	100
  4754   006F68  6E0A               	movwf	___lwdiv@divisor^0,c
  4755   006F6A  ECFC  F03E         	call	___lwdiv	;wreg free
  4756   006F6E  EE20 F003          	lfsr	2,3
  4757   006F72  500F               	movf	setMotorPWM@m^0,w,c
  4758   006F74  26D9               	addwf	fsr2l,f,c
  4759   006F76  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4760   006F78  22DA               	addwfc	fsr2h,f,c
  4761   006F7A  50DF               	movf	indf2,w,c
  4762   006F7C  6E12               	movwf	(??_setMotorPWM+1)^0,c
  4763   006F7E  5008               	movf	?___lwdiv^0,w,c
  4764   006F80  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  4765   006F82  6E13               	movwf	setMotorPWM@posDuty^0,c
  4766   006F84                     
  4767                           ;dc_motor.c: 82:         negDuty=m->PWMperiod;
  4768   006F84  EE20 F003          	lfsr	2,3
  4769   006F88  500F               	movf	setMotorPWM@m^0,w,c
  4770   006F8A  26D9               	addwf	fsr2l,f,c
  4771   006F8C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4772   006F8E  22DA               	addwfc	fsr2h,f,c
  4773   006F90  50DF               	movf	indf2,w,c
  4774   006F92  6E14               	movwf	setMotorPWM@negDuty^0,c
  4775                           
  4776                           ;dc_motor.c: 83:     }
  4777   006F94  EFEF  F037         	goto	l5238
  4778   006F98                     l5234:
  4779                           
  4780                           ;dc_motor.c: 85:         posDuty=0;
  4781   006F98  0E00               	movlw	0
  4782   006F9A  6E13               	movwf	setMotorPWM@posDuty^0,c
  4783   006F9C                     
  4784                           ;dc_motor.c: 86:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  4785   006F9C  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  4786   006FA0  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4787   006FA4  50DF               	movf	indf2,w,c
  4788   006FA6  6E11               	movwf	??_setMotorPWM^0,c
  4789   006FA8  5011               	movf	??_setMotorPWM^0,w,c
  4790   006FAA  6E02               	movwf	___wmul@multiplier^0,c
  4791   006FAC  6A03               	clrf	(___wmul@multiplier+1)^0,c
  4792   006FAE  EE20 F003          	lfsr	2,3
  4793   006FB2  500F               	movf	setMotorPWM@m^0,w,c
  4794   006FB4  26D9               	addwf	fsr2l,f,c
  4795   006FB6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4796   006FB8  22DA               	addwfc	fsr2h,f,c
  4797   006FBA  CFDE F004          	movff	postinc2,___wmul@multiplicand
  4798   006FBE  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  4799   006FC2  ECEF  F041         	call	___wmul	;wreg free
  4800   006FC6  C002  F008         	movff	?___wmul,___lwdiv@dividend
  4801   006FCA  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  4802   006FCE  0E00               	movlw	0
  4803   006FD0  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  4804   006FD2  0E64               	movlw	100
  4805   006FD4  6E0A               	movwf	___lwdiv@divisor^0,c
  4806   006FD6  ECFC  F03E         	call	___lwdiv	;wreg free
  4807   006FDA  5008               	movf	?___lwdiv^0,w,c
  4808   006FDC  6E14               	movwf	setMotorPWM@negDuty^0,c
  4809   006FDE                     l5238:
  4810                           
  4811                           ;dc_motor.c: 89:     if (m->direction) {
  4812   006FDE  EE20 F001          	lfsr	2,1
  4813   006FE2  500F               	movf	setMotorPWM@m^0,w,c
  4814   006FE4  26D9               	addwf	fsr2l,f,c
  4815   006FE6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4816   006FE8  22DA               	addwfc	fsr2h,f,c
  4817   006FEA  50DF               	movf	indf2,w,c
  4818   006FEC  B4D8               	btfsc	status,2,c
  4819   006FEE  EFFB  F037         	goto	u5201
  4820   006FF2  EFFD  F037         	goto	u5200
  4821   006FF6                     u5201:
  4822   006FF6  EF1F  F038         	goto	l5242
  4823   006FFA                     u5200:
  4824   006FFA                     
  4825                           ;dc_motor.c: 90:         *(m->posDutyHighByte)=posDuty;
  4826   006FFA  EE20 F005          	lfsr	2,5
  4827   006FFE  500F               	movf	setMotorPWM@m^0,w,c
  4828   007000  26D9               	addwf	fsr2l,f,c
  4829   007002  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4830   007004  22DA               	addwfc	fsr2h,f,c
  4831   007006  CFDE F011          	movff	postinc2,??_setMotorPWM
  4832   00700A  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4833   00700E  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4834   007012  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4835   007016  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  4836                           
  4837                           ;dc_motor.c: 91:         *(m->negDutyHighByte)=negDuty;
  4838   00701A  EE20 F007          	lfsr	2,7
  4839   00701E  500F               	movf	setMotorPWM@m^0,w,c
  4840   007020  26D9               	addwf	fsr2l,f,c
  4841   007022  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4842   007024  22DA               	addwfc	fsr2h,f,c
  4843   007026  CFDE F011          	movff	postinc2,??_setMotorPWM
  4844   00702A  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4845   00702E  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4846   007032  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4847   007036  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  4848                           
  4849                           ;dc_motor.c: 92:     } else {
  4850   00703A  EF3F  F038         	goto	l199
  4851   00703E                     l5242:
  4852                           
  4853                           ;dc_motor.c: 93:         *(m->posDutyHighByte)=negDuty;
  4854   00703E  EE20 F005          	lfsr	2,5
  4855   007042  500F               	movf	setMotorPWM@m^0,w,c
  4856   007044  26D9               	addwf	fsr2l,f,c
  4857   007046  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4858   007048  22DA               	addwfc	fsr2h,f,c
  4859   00704A  CFDE F011          	movff	postinc2,??_setMotorPWM
  4860   00704E  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4861   007052  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4862   007056  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4863   00705A  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  4864                           
  4865                           ;dc_motor.c: 94:         *(m->negDutyHighByte)=posDuty;
  4866   00705E  EE20 F007          	lfsr	2,7
  4867   007062  500F               	movf	setMotorPWM@m^0,w,c
  4868   007064  26D9               	addwf	fsr2l,f,c
  4869   007066  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4870   007068  22DA               	addwfc	fsr2h,f,c
  4871   00706A  CFDE F011          	movff	postinc2,??_setMotorPWM
  4872   00706E  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4873   007072  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4874   007076  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4875   00707A  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  4876   00707E                     l199:
  4877   00707E  0012               	return		;funcret
  4878   007080                     __end_of_setMotorPWM:
  4879                           	callstack 0
  4880                           
  4881 ;; *************** function ___wmul *****************
  4882 ;; Defined at:
  4883 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  multiplier      2    1[COMRAM] unsigned int 
  4886 ;;  multiplicand    2    3[COMRAM] unsigned int 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;  product         2    5[COMRAM] unsigned int 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  2    1[COMRAM] unsigned int 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2, status,0, prodl, prodh
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4898 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4899 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4901 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4902 ;;Total ram usage:        6 bytes
  4903 ;; Hardware stack levels used: 1
  4904 ;; Hardware stack levels required when called: 2
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_setMotorPWM
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text16
  4913   0083DE                     __ptext16:
  4914                           	callstack 0
  4915   0083DE                     ___wmul:
  4916                           	callstack 25
  4917   0083DE  5002               	movf	___wmul@multiplier^0,w,c
  4918   0083E0  0204               	mulwf	___wmul@multiplicand^0,c
  4919   0083E2  CFF3 F006          	movff	prodl,___wmul@product
  4920   0083E6  CFF4 F007          	movff	prodh,___wmul@product+1
  4921   0083EA  5002               	movf	___wmul@multiplier^0,w,c
  4922   0083EC  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  4923   0083EE  50F3               	movf	243,w,c
  4924   0083F0  2607               	addwf	(___wmul@product+1)^0,f,c
  4925   0083F2  5003               	movf	(___wmul@multiplier+1)^0,w,c
  4926   0083F4  0204               	mulwf	___wmul@multiplicand^0,c
  4927   0083F6  50F3               	movf	243,w,c
  4928   0083F8  2607               	addwf	(___wmul@product+1)^0,f,c
  4929   0083FA  C006  F002         	movff	___wmul@product,?___wmul
  4930   0083FE  C007  F003         	movff	___wmul@product+1,?___wmul+1
  4931   008402  0012               	return		;funcret
  4932   008404                     __end_of___wmul:
  4933                           	callstack 0
  4934                           
  4935 ;; *************** function ___lwdiv *****************
  4936 ;; Defined at:
  4937 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  dividend        2    7[COMRAM] unsigned int 
  4940 ;;  divisor         2    9[COMRAM] unsigned int 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;  quotient        2   11[COMRAM] unsigned int 
  4943 ;;  counter         1   13[COMRAM] unsigned char 
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  2    7[COMRAM] unsigned int 
  4946 ;; Registers used:
  4947 ;;		wreg, status,2, status,0
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4954 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4956 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4957 ;;Total ram usage:        7 bytes
  4958 ;; Hardware stack levels used: 1
  4959 ;; Hardware stack levels required when called: 2
  4960 ;; This function calls:
  4961 ;;		Nothing
  4962 ;; This function is called by:
  4963 ;;		_setMotorPWM
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text17
  4968   007DF8                     __ptext17:
  4969                           	callstack 0
  4970   007DF8                     ___lwdiv:
  4971                           	callstack 25
  4972   007DF8  0E00               	movlw	0
  4973   007DFA  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  4974   007DFC  0E00               	movlw	0
  4975   007DFE  6E0C               	movwf	___lwdiv@quotient^0,c
  4976   007E00  500A               	movf	___lwdiv@divisor^0,w,c
  4977   007E02  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4978   007E04  B4D8               	btfsc	status,2,c
  4979   007E06  EF07  F03F         	goto	u5001
  4980   007E0A  EF09  F03F         	goto	u5000
  4981   007E0E                     u5001:
  4982   007E0E  EF31  F03F         	goto	l1056
  4983   007E12                     u5000:
  4984   007E12  0E01               	movlw	1
  4985   007E14  6E0E               	movwf	___lwdiv@counter^0,c
  4986   007E16  EF11  F03F         	goto	l5072
  4987   007E1A                     l5070:
  4988   007E1A  90D8               	bcf	status,0,c
  4989   007E1C  360A               	rlcf	___lwdiv@divisor^0,f,c
  4990   007E1E  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4991   007E20  2A0E               	incf	___lwdiv@counter^0,f,c
  4992   007E22                     l5072:
  4993   007E22  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  4994   007E24  EF16  F03F         	goto	u5011
  4995   007E28  EF18  F03F         	goto	u5010
  4996   007E2C                     u5011:
  4997   007E2C  EF0D  F03F         	goto	l5070
  4998   007E30                     u5010:
  4999   007E30                     l5074:
  5000   007E30  90D8               	bcf	status,0,c
  5001   007E32  360C               	rlcf	___lwdiv@quotient^0,f,c
  5002   007E34  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5003   007E36  500A               	movf	___lwdiv@divisor^0,w,c
  5004   007E38  5C08               	subwf	___lwdiv@dividend^0,w,c
  5005   007E3A  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  5006   007E3C  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5007   007E3E  A0D8               	btfss	status,0,c
  5008   007E40  EF24  F03F         	goto	u5021
  5009   007E44  EF26  F03F         	goto	u5020
  5010   007E48                     u5021:
  5011   007E48  EF2B  F03F         	goto	l5082
  5012   007E4C                     u5020:
  5013   007E4C  500A               	movf	___lwdiv@divisor^0,w,c
  5014   007E4E  5E08               	subwf	___lwdiv@dividend^0,f,c
  5015   007E50  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  5016   007E52  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5017   007E54  800C               	bsf	___lwdiv@quotient^0,0,c
  5018   007E56                     l5082:
  5019   007E56  90D8               	bcf	status,0,c
  5020   007E58  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5021   007E5A  320A               	rrcf	___lwdiv@divisor^0,f,c
  5022   007E5C  2E0E               	decfsz	___lwdiv@counter^0,f,c
  5023   007E5E  EF18  F03F         	goto	l5074
  5024   007E62                     l1056:
  5025   007E62  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  5026   007E66  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5027   007E6A  0012               	return		;funcret
  5028   007E6C                     __end_of___lwdiv:
  5029                           	callstack 0
  5030                           
  5031 ;; *************** function _decide_action *****************
  5032 ;; Defined at:
  5033 ;;		line 114 in file "color.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  red_unsigned    2   82[BANK0 ] unsigned int 
  5036 ;;  green_unsign    2   84[BANK0 ] unsigned int 
  5037 ;;  blue_unsigne    2   86[BANK0 ] unsigned int 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  i               1  127[BANK2 ] unsigned char 
  5040 ;;  rgb_comp       32   90[BANK2 ] float [8]
  5041 ;;  blue_val       20   60[BANK2 ] unsigned char [20]
  5042 ;;  green_val      20   40[BANK2 ] unsigned char [20]
  5043 ;;  red_val        20   20[BANK2 ] unsigned char [20]
  5044 ;;  clear_val      20    0[BANK2 ] unsigned char [20]
  5045 ;;  blue_r          4  148[BANK2 ] float 
  5046 ;;  green_r         4  144[BANK2 ] float 
  5047 ;;  red_r           4  140[BANK2 ] float 
  5048 ;;  blue            4  136[BANK2 ] float 
  5049 ;;  green           4  132[BANK2 ] float 
  5050 ;;  red             4  128[BANK2 ] float 
  5051 ;;  total           4  123[BANK2 ] float 
  5052 ;;  pgreen_val      2   88[BANK2 ] PTR unsigned char 
  5053 ;;		 -> decide_action@green_val(20), 
  5054 ;;  pblue_val       2   86[BANK2 ] PTR unsigned char 
  5055 ;;		 -> decide_action@blue_val(20), 
  5056 ;;  pred_val        2   84[BANK2 ] PTR unsigned char 
  5057 ;;		 -> decide_action@red_val(20), 
  5058 ;;  pclear_val      2    0        PTR unsigned char 
  5059 ;;		 -> decide_action@clear_val(20), 
  5060 ;;  action          1  122[BANK2 ] unsigned char 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      unsigned char 
  5063 ;; Registers used:
  5064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5070 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5071 ;;      Locals:         0       0       0     180       0       0       0       0       0       0       0       0       
      +0       0       0
  5072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5073 ;;      Totals:         0       6       0     180       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;Total ram usage:      186 bytes
  5075 ;; Hardware stack levels used: 1
  5076 ;; Hardware stack levels required when called: 10
  5077 ;; This function calls:
  5078 ;;		___fladd
  5079 ;;		___fldiv
  5080 ;;		___flge
  5081 ;;		___flsub
  5082 ;;		___xxtofl
  5083 ;;		_color_writetoaddr
  5084 ;;		_powf
  5085 ;;		_sendStringSerial4
  5086 ;;		_sprintf
  5087 ;;		_sqrtf
  5088 ;; This function is called by:
  5089 ;;		_main
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text18
  5094   003324                     __ptext18:
  5095                           	callstack 0
  5096   003324                     _decide_action:
  5097                           	callstack 20
  5098   003324                     
  5099                           ;color.c: 126:     pred_val = &red_val[0];
  5100   003324  0E14               	movlw	low decide_action@red_val
  5101   003326  0102               	movlb	2	; () banked
  5102   003328  6F54               	movwf	decide_action@pred_val& (0+255),b
  5103   00332A  0E02               	movlw	high decide_action@red_val
  5104   00332C  6F55               	movwf	(decide_action@pred_val+1)& (0+255),b
  5105                           
  5106                           ;color.c: 127:     pgreen_val = &green_val[0];
  5107   00332E  0E28               	movlw	low decide_action@green_val
  5108   003330  6F58               	movwf	decide_action@pgreen_val& (0+255),b
  5109   003332  0E02               	movlw	high decide_action@green_val
  5110   003334  6F59               	movwf	(decide_action@pgreen_val+1)& (0+255),b
  5111                           
  5112                           ;color.c: 128:     pblue_val = &blue_val[0];
  5113   003336  0E3C               	movlw	low decide_action@blue_val
  5114   003338  6F56               	movwf	decide_action@pblue_val& (0+255),b
  5115   00333A  0E02               	movlw	high decide_action@blue_val
  5116   00333C  6F57               	movwf	(decide_action@pblue_val+1)& (0+255),b
  5117   00333E                     
  5118                           ; BSR set to: 2
  5119                           ;color.c: 130:     float red, green, blue;;color.c: 131:     float red_r, green_r, blue_
      +                          r;;color.c: 132:     float rgb_comp[8];;color.c: 133:     char action;;color.c: 135:    
      +                           red = (float)red_unsigned;
  5120   00333E  C0B2  F002         	movff	decide_action@red_unsigned,___xxtofl@val
  5121   003342  C0B3  F003         	movff	decide_action@red_unsigned+1,___xxtofl@val+1
  5122   003346  6A04               	clrf	(___xxtofl@val+2)^0,c
  5123   003348  6A05               	clrf	(___xxtofl@val+3)^0,c
  5124   00334A  0E00               	movlw	0
  5125   00334C  ECB0  F036         	call	___xxtofl
  5126   003350  C002  F280         	movff	?___xxtofl,decide_action@red
  5127   003354  C003  F281         	movff	?___xxtofl+1,decide_action@red+1
  5128   003358  C004  F282         	movff	?___xxtofl+2,decide_action@red+2
  5129   00335C  C005  F283         	movff	?___xxtofl+3,decide_action@red+3
  5130   003360                     
  5131                           ;color.c: 136:     green = (float)green_unsigned;
  5132   003360  C0B4  F002         	movff	decide_action@green_unsigned,___xxtofl@val
  5133   003364  C0B5  F003         	movff	decide_action@green_unsigned+1,___xxtofl@val+1
  5134   003368  6A04               	clrf	(___xxtofl@val+2)^0,c
  5135   00336A  6A05               	clrf	(___xxtofl@val+3)^0,c
  5136   00336C  0E00               	movlw	0
  5137   00336E  ECB0  F036         	call	___xxtofl
  5138   003372  C002  F284         	movff	?___xxtofl,decide_action@green
  5139   003376  C003  F285         	movff	?___xxtofl+1,decide_action@green+1
  5140   00337A  C004  F286         	movff	?___xxtofl+2,decide_action@green+2
  5141   00337E  C005  F287         	movff	?___xxtofl+3,decide_action@green+3
  5142   003382                     
  5143                           ;color.c: 137:     blue = (float)blue_unsigned;
  5144   003382  C0B6  F002         	movff	decide_action@blue_unsigned,___xxtofl@val
  5145   003386  C0B7  F003         	movff	decide_action@blue_unsigned+1,___xxtofl@val+1
  5146   00338A  6A04               	clrf	(___xxtofl@val+2)^0,c
  5147   00338C  6A05               	clrf	(___xxtofl@val+3)^0,c
  5148   00338E  0E00               	movlw	0
  5149   003390  ECB0  F036         	call	___xxtofl
  5150   003394  C002  F288         	movff	?___xxtofl,decide_action@blue
  5151   003398  C003  F289         	movff	?___xxtofl+1,decide_action@blue+1
  5152   00339C  C004  F28A         	movff	?___xxtofl+2,decide_action@blue+2
  5153   0033A0  C005  F28B         	movff	?___xxtofl+3,decide_action@blue+3
  5154   0033A4                     
  5155                           ;color.c: 140:     if(red < 666){red = 0;} else{red -= 699;}
  5156   0033A4  C280  F04C         	movff	decide_action@red,___flge@ff1
  5157   0033A8  C281  F04D         	movff	decide_action@red+1,___flge@ff1+1
  5158   0033AC  C282  F04E         	movff	decide_action@red+2,___flge@ff1+2
  5159   0033B0  C283  F04F         	movff	decide_action@red+3,___flge@ff1+3
  5160   0033B4  0E00               	movlw	0
  5161   0033B6  6E50               	movwf	___flge@ff2^0,c
  5162   0033B8  0E80               	movlw	128
  5163   0033BA  6E51               	movwf	(___flge@ff2+1)^0,c
  5164   0033BC  0E26               	movlw	38
  5165   0033BE  6E52               	movwf	(___flge@ff2+2)^0,c
  5166   0033C0  0E44               	movlw	68
  5167   0033C2  6E53               	movwf	(___flge@ff2+3)^0,c
  5168   0033C4  EC46  F039         	call	___flge	;wreg free
  5169   0033C8  B0D8               	btfsc	status,0,c
  5170   0033CA  EFE9  F019         	goto	u9051
  5171   0033CE  EFEB  F019         	goto	u9050
  5172   0033D2                     u9051:
  5173   0033D2  EFF6  F019         	goto	l8174
  5174   0033D6                     u9050:
  5175   0033D6  0E00               	movlw	0
  5176   0033D8  0102               	movlb	2	; () banked
  5177   0033DA  6F80               	movwf	decide_action@red& (0+255),b
  5178   0033DC  0E00               	movlw	0
  5179   0033DE  6F81               	movwf	(decide_action@red+1)& (0+255),b
  5180   0033E0  0E00               	movlw	0
  5181   0033E2  6F82               	movwf	(decide_action@red+2)& (0+255),b
  5182   0033E4  0E00               	movlw	0
  5183   0033E6  6F83               	movwf	(decide_action@red+3)& (0+255),b
  5184   0033E8  EF10  F01A         	goto	l73
  5185   0033EC                     l8174:
  5186   0033EC  C280  F044         	movff	decide_action@red,___flsub@b
  5187   0033F0  C281  F045         	movff	decide_action@red+1,___flsub@b+1
  5188   0033F4  C282  F046         	movff	decide_action@red+2,___flsub@b+2
  5189   0033F8  C283  F047         	movff	decide_action@red+3,___flsub@b+3
  5190   0033FC  0E00               	movlw	0
  5191   0033FE  6E48               	movwf	___flsub@a^0,c
  5192   003400  0EC0               	movlw	192
  5193   003402  6E49               	movwf	(___flsub@a+1)^0,c
  5194   003404  0E2E               	movlw	46
  5195   003406  6E4A               	movwf	(___flsub@a+2)^0,c
  5196   003408  0E44               	movlw	68
  5197   00340A  6E4B               	movwf	(___flsub@a+3)^0,c
  5198   00340C  ECD7  F040         	call	___flsub	;wreg free
  5199   003410  C044  F280         	movff	?___flsub,decide_action@red
  5200   003414  C045  F281         	movff	?___flsub+1,decide_action@red+1
  5201   003418  C046  F282         	movff	?___flsub+2,decide_action@red+2
  5202   00341C  C047  F283         	movff	?___flsub+3,decide_action@red+3
  5203   003420                     l73:
  5204                           
  5205                           ;color.c: 141:     if(green < 446){green = 0;} else{green -= 443;}
  5206   003420  C284  F04C         	movff	decide_action@green,___flge@ff1
  5207   003424  C285  F04D         	movff	decide_action@green+1,___flge@ff1+1
  5208   003428  C286  F04E         	movff	decide_action@green+2,___flge@ff1+2
  5209   00342C  C287  F04F         	movff	decide_action@green+3,___flge@ff1+3
  5210   003430  0E00               	movlw	0
  5211   003432  6E50               	movwf	___flge@ff2^0,c
  5212   003434  0E00               	movlw	0
  5213   003436  6E51               	movwf	(___flge@ff2+1)^0,c
  5214   003438  0EDF               	movlw	223
  5215   00343A  6E52               	movwf	(___flge@ff2+2)^0,c
  5216   00343C  0E43               	movlw	67
  5217   00343E  6E53               	movwf	(___flge@ff2+3)^0,c
  5218   003440  EC46  F039         	call	___flge	;wreg free
  5219   003444  B0D8               	btfsc	status,0,c
  5220   003446  EF27  F01A         	goto	u9061
  5221   00344A  EF29  F01A         	goto	u9060
  5222   00344E                     u9061:
  5223   00344E  EF34  F01A         	goto	l8178
  5224   003452                     u9060:
  5225   003452  0E00               	movlw	0
  5226   003454  0102               	movlb	2	; () banked
  5227   003456  6F84               	movwf	decide_action@green& (0+255),b
  5228   003458  0E00               	movlw	0
  5229   00345A  6F85               	movwf	(decide_action@green+1)& (0+255),b
  5230   00345C  0E00               	movlw	0
  5231   00345E  6F86               	movwf	(decide_action@green+2)& (0+255),b
  5232   003460  0E00               	movlw	0
  5233   003462  6F87               	movwf	(decide_action@green+3)& (0+255),b
  5234   003464  EF4E  F01A         	goto	l75
  5235   003468                     l8178:
  5236   003468  C284  F044         	movff	decide_action@green,___flsub@b
  5237   00346C  C285  F045         	movff	decide_action@green+1,___flsub@b+1
  5238   003470  C286  F046         	movff	decide_action@green+2,___flsub@b+2
  5239   003474  C287  F047         	movff	decide_action@green+3,___flsub@b+3
  5240   003478  0E00               	movlw	0
  5241   00347A  6E48               	movwf	___flsub@a^0,c
  5242   00347C  0E80               	movlw	128
  5243   00347E  6E49               	movwf	(___flsub@a+1)^0,c
  5244   003480  0EDD               	movlw	221
  5245   003482  6E4A               	movwf	(___flsub@a+2)^0,c
  5246   003484  0E43               	movlw	67
  5247   003486  6E4B               	movwf	(___flsub@a+3)^0,c
  5248   003488  ECD7  F040         	call	___flsub	;wreg free
  5249   00348C  C044  F284         	movff	?___flsub,decide_action@green
  5250   003490  C045  F285         	movff	?___flsub+1,decide_action@green+1
  5251   003494  C046  F286         	movff	?___flsub+2,decide_action@green+2
  5252   003498  C047  F287         	movff	?___flsub+3,decide_action@green+3
  5253   00349C                     l75:
  5254                           
  5255                           ;color.c: 142:     if(blue < 295){blue = 0;} else{blue -= 315;}
  5256   00349C  C288  F04C         	movff	decide_action@blue,___flge@ff1
  5257   0034A0  C289  F04D         	movff	decide_action@blue+1,___flge@ff1+1
  5258   0034A4  C28A  F04E         	movff	decide_action@blue+2,___flge@ff1+2
  5259   0034A8  C28B  F04F         	movff	decide_action@blue+3,___flge@ff1+3
  5260   0034AC  0E00               	movlw	0
  5261   0034AE  6E50               	movwf	___flge@ff2^0,c
  5262   0034B0  0E80               	movlw	128
  5263   0034B2  6E51               	movwf	(___flge@ff2+1)^0,c
  5264   0034B4  0E93               	movlw	147
  5265   0034B6  6E52               	movwf	(___flge@ff2+2)^0,c
  5266   0034B8  0E43               	movlw	67
  5267   0034BA  6E53               	movwf	(___flge@ff2+3)^0,c
  5268   0034BC  EC46  F039         	call	___flge	;wreg free
  5269   0034C0  B0D8               	btfsc	status,0,c
  5270   0034C2  EF65  F01A         	goto	u9071
  5271   0034C6  EF67  F01A         	goto	u9070
  5272   0034CA                     u9071:
  5273   0034CA  EF72  F01A         	goto	l8182
  5274   0034CE                     u9070:
  5275   0034CE  0E00               	movlw	0
  5276   0034D0  0102               	movlb	2	; () banked
  5277   0034D2  6F88               	movwf	decide_action@blue& (0+255),b
  5278   0034D4  0E00               	movlw	0
  5279   0034D6  6F89               	movwf	(decide_action@blue+1)& (0+255),b
  5280   0034D8  0E00               	movlw	0
  5281   0034DA  6F8A               	movwf	(decide_action@blue+2)& (0+255),b
  5282   0034DC  0E00               	movlw	0
  5283   0034DE  6F8B               	movwf	(decide_action@blue+3)& (0+255),b
  5284   0034E0  EF8C  F01A         	goto	l77
  5285   0034E4                     l8182:
  5286   0034E4  C288  F044         	movff	decide_action@blue,___flsub@b
  5287   0034E8  C289  F045         	movff	decide_action@blue+1,___flsub@b+1
  5288   0034EC  C28A  F046         	movff	decide_action@blue+2,___flsub@b+2
  5289   0034F0  C28B  F047         	movff	decide_action@blue+3,___flsub@b+3
  5290   0034F4  0E00               	movlw	0
  5291   0034F6  6E48               	movwf	___flsub@a^0,c
  5292   0034F8  0E80               	movlw	128
  5293   0034FA  6E49               	movwf	(___flsub@a+1)^0,c
  5294   0034FC  0E9D               	movlw	157
  5295   0034FE  6E4A               	movwf	(___flsub@a+2)^0,c
  5296   003500  0E43               	movlw	67
  5297   003502  6E4B               	movwf	(___flsub@a+3)^0,c
  5298   003504  ECD7  F040         	call	___flsub	;wreg free
  5299   003508  C044  F288         	movff	?___flsub,decide_action@blue
  5300   00350C  C045  F289         	movff	?___flsub+1,decide_action@blue+1
  5301   003510  C046  F28A         	movff	?___flsub+2,decide_action@blue+2
  5302   003514  C047  F28B         	movff	?___flsub+3,decide_action@blue+3
  5303   003518                     l77:
  5304                           
  5305                           ;color.c: 144:     red = red/1621;
  5306   003518  C280  F02B         	movff	decide_action@red,___fldiv@b
  5307   00351C  C281  F02C         	movff	decide_action@red+1,___fldiv@b+1
  5308   003520  C282  F02D         	movff	decide_action@red+2,___fldiv@b+2
  5309   003524  C283  F02E         	movff	decide_action@red+3,___fldiv@b+3
  5310   003528  0E00               	movlw	0
  5311   00352A  6E2F               	movwf	___fldiv@a^0,c
  5312   00352C  0EA0               	movlw	160
  5313   00352E  6E30               	movwf	(___fldiv@a+1)^0,c
  5314   003530  0ECA               	movlw	202
  5315   003532  6E31               	movwf	(___fldiv@a+2)^0,c
  5316   003534  0E44               	movlw	68
  5317   003536  6E32               	movwf	(___fldiv@a+3)^0,c
  5318   003538  ECCC  F031         	call	___fldiv	;wreg free
  5319   00353C  C02B  F280         	movff	?___fldiv,decide_action@red
  5320   003540  C02C  F281         	movff	?___fldiv+1,decide_action@red+1
  5321   003544  C02D  F282         	movff	?___fldiv+2,decide_action@red+2
  5322   003548  C02E  F283         	movff	?___fldiv+3,decide_action@red+3
  5323                           
  5324                           ;color.c: 145:     green = green/1191;
  5325   00354C  C284  F02B         	movff	decide_action@green,___fldiv@b
  5326   003550  C285  F02C         	movff	decide_action@green+1,___fldiv@b+1
  5327   003554  C286  F02D         	movff	decide_action@green+2,___fldiv@b+2
  5328   003558  C287  F02E         	movff	decide_action@green+3,___fldiv@b+3
  5329   00355C  0E00               	movlw	0
  5330   00355E  6E2F               	movwf	___fldiv@a^0,c
  5331   003560  0EE0               	movlw	224
  5332   003562  6E30               	movwf	(___fldiv@a+1)^0,c
  5333   003564  0E94               	movlw	148
  5334   003566  6E31               	movwf	(___fldiv@a+2)^0,c
  5335   003568  0E44               	movlw	68
  5336   00356A  6E32               	movwf	(___fldiv@a+3)^0,c
  5337   00356C  ECCC  F031         	call	___fldiv	;wreg free
  5338   003570  C02B  F284         	movff	?___fldiv,decide_action@green
  5339   003574  C02C  F285         	movff	?___fldiv+1,decide_action@green+1
  5340   003578  C02D  F286         	movff	?___fldiv+2,decide_action@green+2
  5341   00357C  C02E  F287         	movff	?___fldiv+3,decide_action@green+3
  5342                           
  5343                           ;color.c: 146:     blue = blue/885;
  5344   003580  C288  F02B         	movff	decide_action@blue,___fldiv@b
  5345   003584  C289  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  5346   003588  C28A  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  5347   00358C  C28B  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  5348   003590  0E00               	movlw	0
  5349   003592  6E2F               	movwf	___fldiv@a^0,c
  5350   003594  0E40               	movlw	64
  5351   003596  6E30               	movwf	(___fldiv@a+1)^0,c
  5352   003598  0E5D               	movlw	93
  5353   00359A  6E31               	movwf	(___fldiv@a+2)^0,c
  5354   00359C  0E44               	movlw	68
  5355   00359E  6E32               	movwf	(___fldiv@a+3)^0,c
  5356   0035A0  ECCC  F031         	call	___fldiv	;wreg free
  5357   0035A4  C02B  F288         	movff	?___fldiv,decide_action@blue
  5358   0035A8  C02C  F289         	movff	?___fldiv+1,decide_action@blue+1
  5359   0035AC  C02D  F28A         	movff	?___fldiv+2,decide_action@blue+2
  5360   0035B0  C02E  F28B         	movff	?___fldiv+3,decide_action@blue+3
  5361                           
  5362                           ;color.c: 148:     float total = red + green + blue;
  5363   0035B4  C284  F006         	movff	decide_action@green,___fladd@a
  5364   0035B8  C285  F007         	movff	decide_action@green+1,___fladd@a+1
  5365   0035BC  C286  F008         	movff	decide_action@green+2,___fladd@a+2
  5366   0035C0  C287  F009         	movff	decide_action@green+3,___fladd@a+3
  5367   0035C4  C280  F002         	movff	decide_action@red,___fladd@b
  5368   0035C8  C281  F003         	movff	decide_action@red+1,___fladd@b+1
  5369   0035CC  C282  F004         	movff	decide_action@red+2,___fladd@b+2
  5370   0035D0  C283  F005         	movff	decide_action@red+3,___fladd@b+3
  5371   0035D4  EC68  F02B         	call	___fladd	;wreg free
  5372   0035D8  C002  F250         	movff	?___fladd,_decide_action$3166
  5373   0035DC  C003  F251         	movff	?___fladd+1,_decide_action$3166+1
  5374   0035E0  C004  F252         	movff	?___fladd+2,_decide_action$3166+2
  5375   0035E4  C005  F253         	movff	?___fladd+3,_decide_action$3166+3
  5376                           
  5377                           ;color.c: 148:     float total = red + green + blue;
  5378   0035E8  C250  F002         	movff	_decide_action$3166,___fladd@b
  5379   0035EC  C251  F003         	movff	_decide_action$3166+1,___fladd@b+1
  5380   0035F0  C252  F004         	movff	_decide_action$3166+2,___fladd@b+2
  5381   0035F4  C253  F005         	movff	_decide_action$3166+3,___fladd@b+3
  5382   0035F8  C288  F006         	movff	decide_action@blue,___fladd@a
  5383   0035FC  C289  F007         	movff	decide_action@blue+1,___fladd@a+1
  5384   003600  C28A  F008         	movff	decide_action@blue+2,___fladd@a+2
  5385   003604  C28B  F009         	movff	decide_action@blue+3,___fladd@a+3
  5386   003608  EC68  F02B         	call	___fladd	;wreg free
  5387   00360C  C002  F27B         	movff	?___fladd,decide_action@total
  5388   003610  C003  F27C         	movff	?___fladd+1,decide_action@total+1
  5389   003614  C004  F27D         	movff	?___fladd+2,decide_action@total+2
  5390   003618  C005  F27E         	movff	?___fladd+3,decide_action@total+3
  5391                           
  5392                           ;color.c: 150:     red_r = red / total;
  5393   00361C  C280  F02B         	movff	decide_action@red,___fldiv@b
  5394   003620  C281  F02C         	movff	decide_action@red+1,___fldiv@b+1
  5395   003624  C282  F02D         	movff	decide_action@red+2,___fldiv@b+2
  5396   003628  C283  F02E         	movff	decide_action@red+3,___fldiv@b+3
  5397   00362C  C27B  F02F         	movff	decide_action@total,___fldiv@a
  5398   003630  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  5399   003634  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  5400   003638  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  5401   00363C  ECCC  F031         	call	___fldiv	;wreg free
  5402   003640  C02B  F28C         	movff	?___fldiv,decide_action@red_r
  5403   003644  C02C  F28D         	movff	?___fldiv+1,decide_action@red_r+1
  5404   003648  C02D  F28E         	movff	?___fldiv+2,decide_action@red_r+2
  5405   00364C  C02E  F28F         	movff	?___fldiv+3,decide_action@red_r+3
  5406                           
  5407                           ;color.c: 151:     green_r = green / total;
  5408   003650  C284  F02B         	movff	decide_action@green,___fldiv@b
  5409   003654  C285  F02C         	movff	decide_action@green+1,___fldiv@b+1
  5410   003658  C286  F02D         	movff	decide_action@green+2,___fldiv@b+2
  5411   00365C  C287  F02E         	movff	decide_action@green+3,___fldiv@b+3
  5412   003660  C27B  F02F         	movff	decide_action@total,___fldiv@a
  5413   003664  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  5414   003668  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  5415   00366C  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  5416   003670  ECCC  F031         	call	___fldiv	;wreg free
  5417   003674  C02B  F290         	movff	?___fldiv,decide_action@green_r
  5418   003678  C02C  F291         	movff	?___fldiv+1,decide_action@green_r+1
  5419   00367C  C02D  F292         	movff	?___fldiv+2,decide_action@green_r+2
  5420   003680  C02E  F293         	movff	?___fldiv+3,decide_action@green_r+3
  5421                           
  5422                           ;color.c: 152:     blue_r = blue / total;
  5423   003684  C288  F02B         	movff	decide_action@blue,___fldiv@b
  5424   003688  C289  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  5425   00368C  C28A  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  5426   003690  C28B  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  5427   003694  C27B  F02F         	movff	decide_action@total,___fldiv@a
  5428   003698  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  5429   00369C  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  5430   0036A0  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  5431   0036A4  ECCC  F031         	call	___fldiv	;wreg free
  5432   0036A8  C02B  F294         	movff	?___fldiv,decide_action@blue_r
  5433   0036AC  C02C  F295         	movff	?___fldiv+1,decide_action@blue_r+1
  5434   0036B0  C02D  F296         	movff	?___fldiv+2,decide_action@blue_r+2
  5435   0036B4  C02E  F297         	movff	?___fldiv+3,decide_action@blue_r+3
  5436   0036B8                     
  5437                           ;color.c: 154:     sprintf(red_val,"redr = %f \r\n",red_r);
  5438   0036B8  0E14               	movlw	low decide_action@red_val
  5439   0036BA  0100               	movlb	0	; () banked
  5440   0036BC  6F9E               	movwf	sprintf@s& (0+255),b
  5441   0036BE  0E02               	movlw	high decide_action@red_val
  5442   0036C0  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  5443   0036C2  0E8E               	movlw	low STR_1
  5444   0036C4  6FA0               	movwf	sprintf@fmt& (0+255),b
  5445   0036C6  C28C  F0A1         	movff	decide_action@red_r,?_sprintf+3
  5446   0036CA  C28D  F0A2         	movff	decide_action@red_r+1,?_sprintf+4
  5447   0036CE  C28E  F0A3         	movff	decide_action@red_r+2,?_sprintf+5
  5448   0036D2  C28F  F0A4         	movff	decide_action@red_r+3,?_sprintf+6
  5449   0036D6  EC1B  F041         	call	_sprintf	;wreg free
  5450   0036DA                     
  5451                           ;color.c: 155:     sendStringSerial4(pred_val);
  5452   0036DA  C254  F003         	movff	decide_action@pred_val,sendStringSerial4@string
  5453   0036DE  C255  F004         	movff	decide_action@pred_val+1,sendStringSerial4@string+1
  5454   0036E2  ECAE  F041         	call	_sendStringSerial4	;wreg free
  5455   0036E6                     
  5456                           ;color.c: 156:     sprintf(green_val,"greenr = %f \r\n",green_r);
  5457   0036E6  0E28               	movlw	low decide_action@green_val
  5458   0036E8  0100               	movlb	0	; () banked
  5459   0036EA  6F9E               	movwf	sprintf@s& (0+255),b
  5460   0036EC  0E02               	movlw	high decide_action@green_val
  5461   0036EE  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  5462   0036F0  0E71               	movlw	low STR_2
  5463   0036F2  6FA0               	movwf	sprintf@fmt& (0+255),b
  5464   0036F4  C290  F0A1         	movff	decide_action@green_r,?_sprintf+3
  5465   0036F8  C291  F0A2         	movff	decide_action@green_r+1,?_sprintf+4
  5466   0036FC  C292  F0A3         	movff	decide_action@green_r+2,?_sprintf+5
  5467   003700  C293  F0A4         	movff	decide_action@green_r+3,?_sprintf+6
  5468   003704  EC1B  F041         	call	_sprintf	;wreg free
  5469   003708                     
  5470                           ;color.c: 157:     sendStringSerial4(pgreen_val);
  5471   003708  C258  F003         	movff	decide_action@pgreen_val,sendStringSerial4@string
  5472   00370C  C259  F004         	movff	decide_action@pgreen_val+1,sendStringSerial4@string+1
  5473   003710  ECAE  F041         	call	_sendStringSerial4	;wreg free
  5474   003714                     
  5475                           ;color.c: 158:     sprintf(blue_val,"bluer = %f \r\n",blue_r);
  5476   003714  0E3C               	movlw	low decide_action@blue_val
  5477   003716  0100               	movlb	0	; () banked
  5478   003718  6F9E               	movwf	sprintf@s& (0+255),b
  5479   00371A  0E02               	movlw	high decide_action@blue_val
  5480   00371C  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  5481   00371E  0E80               	movlw	low STR_3
  5482   003720  6FA0               	movwf	sprintf@fmt& (0+255),b
  5483   003722  C294  F0A1         	movff	decide_action@blue_r,?_sprintf+3
  5484   003726  C295  F0A2         	movff	decide_action@blue_r+1,?_sprintf+4
  5485   00372A  C296  F0A3         	movff	decide_action@blue_r+2,?_sprintf+5
  5486   00372E  C297  F0A4         	movff	decide_action@blue_r+3,?_sprintf+6
  5487   003732  EC1B  F041         	call	_sprintf	;wreg free
  5488   003736                     
  5489                           ;color.c: 159:     sendStringSerial4(pblue_val);
  5490   003736  C256  F003         	movff	decide_action@pblue_val,sendStringSerial4@string
  5491   00373A  C257  F004         	movff	decide_action@pblue_val+1,sendStringSerial4@string+1
  5492   00373E  ECAE  F041         	call	_sendStringSerial4	;wreg free
  5493   003742                     
  5494                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  5495   003742  0E73               	movlw	115
  5496   003744  6E06               	movwf	___fladd@a^0,c
  5497   003746  0E68               	movlw	104
  5498   003748  6E07               	movwf	(___fladd@a+1)^0,c
  5499   00374A  0E91               	movlw	145
  5500   00374C  6E08               	movwf	(___fladd@a+2)^0,c
  5501   00374E  0EBD               	movlw	189
  5502   003750  6E09               	movwf	(___fladd@a+3)^0,c
  5503   003752  C290  F002         	movff	decide_action@green_r,___fladd@b
  5504   003756  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5505   00375A  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5506   00375E  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5507   003762  EC68  F02B         	call	___fladd	;wreg free
  5508   003766  C002  F298         	movff	?___fladd,_decide_action$3167
  5509   00376A  C003  F299         	movff	?___fladd+1,_decide_action$3167+1
  5510   00376E  C004  F29A         	movff	?___fladd+2,_decide_action$3167+2
  5511   003772  C005  F29B         	movff	?___fladd+3,_decide_action$3167+3
  5512   003776                     
  5513                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  5514   003776  0E64               	movlw	100
  5515   003778  6E06               	movwf	___fladd@a^0,c
  5516   00377A  0E3B               	movlw	59
  5517   00377C  6E07               	movwf	(___fladd@a+1)^0,c
  5518   00377E  0E3F               	movlw	63
  5519   003780  6E08               	movwf	(___fladd@a+2)^0,c
  5520   003782  0EBF               	movlw	191
  5521   003784  6E09               	movwf	(___fladd@a+3)^0,c
  5522   003786  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5523   00378A  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5524   00378E  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5525   003792  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5526   003796  EC68  F02B         	call	___fladd	;wreg free
  5527   00379A  C002  F29C         	movff	?___fladd,_decide_action$3168
  5528   00379E  C003  F29D         	movff	?___fladd+1,_decide_action$3168+1
  5529   0037A2  C004  F29E         	movff	?___fladd+2,_decide_action$3168+2
  5530   0037A6  C005  F29F         	movff	?___fladd+3,_decide_action$3168+3
  5531   0037AA                     
  5532                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  5533   0037AA  0E00               	movlw	0
  5534   0037AC  0100               	movlb	0	; () banked
  5535   0037AE  6F64               	movwf	powf@y& (0+255),b
  5536   0037B0  0E00               	movlw	0
  5537   0037B2  6F65               	movwf	(powf@y+1)& (0+255),b
  5538   0037B4  0E00               	movlw	0
  5539   0037B6  6F66               	movwf	(powf@y+2)& (0+255),b
  5540   0037B8  0E40               	movlw	64
  5541   0037BA  6F67               	movwf	(powf@y+3)& (0+255),b
  5542   0037BC  C298  F060         	movff	_decide_action$3167,powf@x
  5543   0037C0  C299  F061         	movff	_decide_action$3167+1,powf@x+1
  5544   0037C4  C29A  F062         	movff	_decide_action$3167+2,powf@x+2
  5545   0037C8  C29B  F063         	movff	_decide_action$3167+3,powf@x+3
  5546   0037CC  EC52  F007         	call	_powf	;wreg free
  5547   0037D0  C060  F2A0         	movff	?_powf,_decide_action$3169
  5548   0037D4  C061  F2A1         	movff	?_powf+1,_decide_action$3169+1
  5549   0037D8  C062  F2A2         	movff	?_powf+2,_decide_action$3169+2
  5550   0037DC  C063  F2A3         	movff	?_powf+3,_decide_action$3169+3
  5551   0037E0                     
  5552                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  5553   0037E0  0E00               	movlw	0
  5554   0037E2  0100               	movlb	0	; () banked
  5555   0037E4  6F64               	movwf	powf@y& (0+255),b
  5556   0037E6  0E00               	movlw	0
  5557   0037E8  6F65               	movwf	(powf@y+1)& (0+255),b
  5558   0037EA  0E00               	movlw	0
  5559   0037EC  6F66               	movwf	(powf@y+2)& (0+255),b
  5560   0037EE  0E40               	movlw	64
  5561   0037F0  6F67               	movwf	(powf@y+3)& (0+255),b
  5562   0037F2  C29C  F060         	movff	_decide_action$3168,powf@x
  5563   0037F6  C29D  F061         	movff	_decide_action$3168+1,powf@x+1
  5564   0037FA  C29E  F062         	movff	_decide_action$3168+2,powf@x+2
  5565   0037FE  C29F  F063         	movff	_decide_action$3168+3,powf@x+3
  5566   003802  EC52  F007         	call	_powf	;wreg free
  5567   003806  C060  F2A4         	movff	?_powf,_decide_action$3170
  5568   00380A  C061  F2A5         	movff	?_powf+1,_decide_action$3170+1
  5569   00380E  C062  F2A6         	movff	?_powf+2,_decide_action$3170+2
  5570   003812  C063  F2A7         	movff	?_powf+3,_decide_action$3170+3
  5571   003816                     
  5572                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  5573   003816  0E35               	movlw	53
  5574   003818  6E06               	movwf	___fladd@a^0,c
  5575   00381A  0E5E               	movlw	94
  5576   00381C  6E07               	movwf	(___fladd@a+1)^0,c
  5577   00381E  0E3A               	movlw	58
  5578   003820  6E08               	movwf	(___fladd@a+2)^0,c
  5579   003822  0EBE               	movlw	190
  5580   003824  6E09               	movwf	(___fladd@a+3)^0,c
  5581   003826  C294  F002         	movff	decide_action@blue_r,___fladd@b
  5582   00382A  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5583   00382E  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5584   003832  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5585   003836  EC68  F02B         	call	___fladd	;wreg free
  5586   00383A  C002  F2A8         	movff	?___fladd,_decide_action$3171
  5587   00383E  C003  F2A9         	movff	?___fladd+1,_decide_action$3171+1
  5588   003842  C004  F2AA         	movff	?___fladd+2,_decide_action$3171+2
  5589   003846  C005  F2AB         	movff	?___fladd+3,_decide_action$3171+3
  5590   00384A                     
  5591                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  5592   00384A  C2A0  F006         	movff	_decide_action$3169,___fladd@a
  5593   00384E  C2A1  F007         	movff	_decide_action$3169+1,___fladd@a+1
  5594   003852  C2A2  F008         	movff	_decide_action$3169+2,___fladd@a+2
  5595   003856  C2A3  F009         	movff	_decide_action$3169+3,___fladd@a+3
  5596   00385A  C2A4  F002         	movff	_decide_action$3170,___fladd@b
  5597   00385E  C2A5  F003         	movff	_decide_action$3170+1,___fladd@b+1
  5598   003862  C2A6  F004         	movff	_decide_action$3170+2,___fladd@b+2
  5599   003866  C2A7  F005         	movff	_decide_action$3170+3,___fladd@b+3
  5600   00386A  EC68  F02B         	call	___fladd	;wreg free
  5601   00386E  C002  F2AC         	movff	?___fladd,_decide_action$3172
  5602   003872  C003  F2AD         	movff	?___fladd+1,_decide_action$3172+1
  5603   003876  C004  F2AE         	movff	?___fladd+2,_decide_action$3172+2
  5604   00387A  C005  F2AF         	movff	?___fladd+3,_decide_action$3172+3
  5605   00387E                     
  5606                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  5607   00387E  0E00               	movlw	0
  5608   003880  0100               	movlb	0	; () banked
  5609   003882  6F64               	movwf	powf@y& (0+255),b
  5610   003884  0E00               	movlw	0
  5611   003886  6F65               	movwf	(powf@y+1)& (0+255),b
  5612   003888  0E00               	movlw	0
  5613   00388A  6F66               	movwf	(powf@y+2)& (0+255),b
  5614   00388C  0E40               	movlw	64
  5615   00388E  6F67               	movwf	(powf@y+3)& (0+255),b
  5616   003890  C2A8  F060         	movff	_decide_action$3171,powf@x
  5617   003894  C2A9  F061         	movff	_decide_action$3171+1,powf@x+1
  5618   003898  C2AA  F062         	movff	_decide_action$3171+2,powf@x+2
  5619   00389C  C2AB  F063         	movff	_decide_action$3171+3,powf@x+3
  5620   0038A0  EC52  F007         	call	_powf	;wreg free
  5621   0038A4  C060  F2B0         	movff	?_powf,_decide_action$3173
  5622   0038A8  C061  F2B1         	movff	?_powf+1,_decide_action$3173+1
  5623   0038AC  C062  F2B2         	movff	?_powf+2,_decide_action$3173+2
  5624   0038B0  C063  F2B3         	movff	?_powf+3,_decide_action$3173+3
  5625   0038B4                     
  5626                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  5627   0038B4  C2AC  F002         	movff	_decide_action$3172,___fladd@b
  5628   0038B8  C2AD  F003         	movff	_decide_action$3172+1,___fladd@b+1
  5629   0038BC  C2AE  F004         	movff	_decide_action$3172+2,___fladd@b+2
  5630   0038C0  C2AF  F005         	movff	_decide_action$3172+3,___fladd@b+3
  5631   0038C4  C2B0  F006         	movff	_decide_action$3173,___fladd@a
  5632   0038C8  C2B1  F007         	movff	_decide_action$3173+1,___fladd@a+1
  5633   0038CC  C2B2  F008         	movff	_decide_action$3173+2,___fladd@a+2
  5634   0038D0  C2B3  F009         	movff	_decide_action$3173+3,___fladd@a+3
  5635   0038D4  EC68  F02B         	call	___fladd	;wreg free
  5636   0038D8  C002  F012         	movff	?___fladd,sqrtf@x
  5637   0038DC  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5638   0038E0  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5639   0038E4  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5640   0038E8  ECDD  F02F         	call	_sqrtf	;wreg free
  5641   0038EC  C012  F25A         	movff	?_sqrtf,decide_action@rgb_comp
  5642   0038F0  C013  F25B         	movff	?_sqrtf+1,decide_action@rgb_comp+1
  5643   0038F4  C014  F25C         	movff	?_sqrtf+2,decide_action@rgb_comp+2
  5644   0038F8  C015  F25D         	movff	?_sqrtf+3,decide_action@rgb_comp+3
  5645   0038FC                     
  5646                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  5647   0038FC  0E35               	movlw	53
  5648   0038FE  6E06               	movwf	___fladd@a^0,c
  5649   003900  0E5E               	movlw	94
  5650   003902  6E07               	movwf	(___fladd@a+1)^0,c
  5651   003904  0EFA               	movlw	250
  5652   003906  6E08               	movwf	(___fladd@a+2)^0,c
  5653   003908  0EBE               	movlw	190
  5654   00390A  6E09               	movwf	(___fladd@a+3)^0,c
  5655   00390C  C290  F002         	movff	decide_action@green_r,___fladd@b
  5656   003910  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5657   003914  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5658   003918  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5659   00391C  EC68  F02B         	call	___fladd	;wreg free
  5660   003920  C002  F298         	movff	?___fladd,_decide_action$3167
  5661   003924  C003  F299         	movff	?___fladd+1,_decide_action$3167+1
  5662   003928  C004  F29A         	movff	?___fladd+2,_decide_action$3167+2
  5663   00392C  C005  F29B         	movff	?___fladd+3,_decide_action$3167+3
  5664   003930                     
  5665                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  5666   003930  0E2B               	movlw	43
  5667   003932  6E06               	movwf	___fladd@a^0,c
  5668   003934  0E87               	movlw	135
  5669   003936  6E07               	movwf	(___fladd@a+1)^0,c
  5670   003938  0E16               	movlw	22
  5671   00393A  6E08               	movwf	(___fladd@a+2)^0,c
  5672   00393C  0EBE               	movlw	190
  5673   00393E  6E09               	movwf	(___fladd@a+3)^0,c
  5674   003940  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5675   003944  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5676   003948  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5677   00394C  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5678   003950  EC68  F02B         	call	___fladd	;wreg free
  5679   003954  C002  F29C         	movff	?___fladd,_decide_action$3168
  5680   003958  C003  F29D         	movff	?___fladd+1,_decide_action$3168+1
  5681   00395C  C004  F29E         	movff	?___fladd+2,_decide_action$3168+2
  5682   003960  C005  F29F         	movff	?___fladd+3,_decide_action$3168+3
  5683   003964                     
  5684                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  5685   003964  0E00               	movlw	0
  5686   003966  0100               	movlb	0	; () banked
  5687   003968  6F64               	movwf	powf@y& (0+255),b
  5688   00396A  0E00               	movlw	0
  5689   00396C  6F65               	movwf	(powf@y+1)& (0+255),b
  5690   00396E  0E00               	movlw	0
  5691   003970  6F66               	movwf	(powf@y+2)& (0+255),b
  5692   003972  0E40               	movlw	64
  5693   003974  6F67               	movwf	(powf@y+3)& (0+255),b
  5694   003976  C298  F060         	movff	_decide_action$3167,powf@x
  5695   00397A  C299  F061         	movff	_decide_action$3167+1,powf@x+1
  5696   00397E  C29A  F062         	movff	_decide_action$3167+2,powf@x+2
  5697   003982  C29B  F063         	movff	_decide_action$3167+3,powf@x+3
  5698   003986  EC52  F007         	call	_powf	;wreg free
  5699   00398A  C060  F2A0         	movff	?_powf,_decide_action$3169
  5700   00398E  C061  F2A1         	movff	?_powf+1,_decide_action$3169+1
  5701   003992  C062  F2A2         	movff	?_powf+2,_decide_action$3169+2
  5702   003996  C063  F2A3         	movff	?_powf+3,_decide_action$3169+3
  5703   00399A                     
  5704                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  5705   00399A  0E00               	movlw	0
  5706   00399C  0100               	movlb	0	; () banked
  5707   00399E  6F64               	movwf	powf@y& (0+255),b
  5708   0039A0  0E00               	movlw	0
  5709   0039A2  6F65               	movwf	(powf@y+1)& (0+255),b
  5710   0039A4  0E00               	movlw	0
  5711   0039A6  6F66               	movwf	(powf@y+2)& (0+255),b
  5712   0039A8  0E40               	movlw	64
  5713   0039AA  6F67               	movwf	(powf@y+3)& (0+255),b
  5714   0039AC  C29C  F060         	movff	_decide_action$3168,powf@x
  5715   0039B0  C29D  F061         	movff	_decide_action$3168+1,powf@x+1
  5716   0039B4  C29E  F062         	movff	_decide_action$3168+2,powf@x+2
  5717   0039B8  C29F  F063         	movff	_decide_action$3168+3,powf@x+3
  5718   0039BC  EC52  F007         	call	_powf	;wreg free
  5719   0039C0  C060  F2A4         	movff	?_powf,_decide_action$3170
  5720   0039C4  C061  F2A5         	movff	?_powf+1,_decide_action$3170+1
  5721   0039C8  C062  F2A6         	movff	?_powf+2,_decide_action$3170+2
  5722   0039CC  C063  F2A7         	movff	?_powf+3,_decide_action$3170+3
  5723   0039D0                     
  5724                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  5725   0039D0  0E23               	movlw	35
  5726   0039D2  6E06               	movwf	___fladd@a^0,c
  5727   0039D4  0EDB               	movlw	219
  5728   0039D6  6E07               	movwf	(___fladd@a+1)^0,c
  5729   0039D8  0EB9               	movlw	185
  5730   0039DA  6E08               	movwf	(___fladd@a+2)^0,c
  5731   0039DC  0EBE               	movlw	190
  5732   0039DE  6E09               	movwf	(___fladd@a+3)^0,c
  5733   0039E0  C294  F002         	movff	decide_action@blue_r,___fladd@b
  5734   0039E4  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5735   0039E8  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5736   0039EC  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5737   0039F0  EC68  F02B         	call	___fladd	;wreg free
  5738   0039F4  C002  F2A8         	movff	?___fladd,_decide_action$3171
  5739   0039F8  C003  F2A9         	movff	?___fladd+1,_decide_action$3171+1
  5740   0039FC  C004  F2AA         	movff	?___fladd+2,_decide_action$3171+2
  5741   003A00  C005  F2AB         	movff	?___fladd+3,_decide_action$3171+3
  5742   003A04                     
  5743                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  5744   003A04  C2A0  F006         	movff	_decide_action$3169,___fladd@a
  5745   003A08  C2A1  F007         	movff	_decide_action$3169+1,___fladd@a+1
  5746   003A0C  C2A2  F008         	movff	_decide_action$3169+2,___fladd@a+2
  5747   003A10  C2A3  F009         	movff	_decide_action$3169+3,___fladd@a+3
  5748   003A14  C2A4  F002         	movff	_decide_action$3170,___fladd@b
  5749   003A18  C2A5  F003         	movff	_decide_action$3170+1,___fladd@b+1
  5750   003A1C  C2A6  F004         	movff	_decide_action$3170+2,___fladd@b+2
  5751   003A20  C2A7  F005         	movff	_decide_action$3170+3,___fladd@b+3
  5752   003A24  EC68  F02B         	call	___fladd	;wreg free
  5753   003A28  C002  F2AC         	movff	?___fladd,_decide_action$3172
  5754   003A2C  C003  F2AD         	movff	?___fladd+1,_decide_action$3172+1
  5755   003A30  C004  F2AE         	movff	?___fladd+2,_decide_action$3172+2
  5756   003A34  C005  F2AF         	movff	?___fladd+3,_decide_action$3172+3
  5757   003A38                     
  5758                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  5759   003A38  0E00               	movlw	0
  5760   003A3A  0100               	movlb	0	; () banked
  5761   003A3C  6F64               	movwf	powf@y& (0+255),b
  5762   003A3E  0E00               	movlw	0
  5763   003A40  6F65               	movwf	(powf@y+1)& (0+255),b
  5764   003A42  0E00               	movlw	0
  5765   003A44  6F66               	movwf	(powf@y+2)& (0+255),b
  5766   003A46  0E40               	movlw	64
  5767   003A48  6F67               	movwf	(powf@y+3)& (0+255),b
  5768   003A4A  C2A8  F060         	movff	_decide_action$3171,powf@x
  5769   003A4E  C2A9  F061         	movff	_decide_action$3171+1,powf@x+1
  5770   003A52  C2AA  F062         	movff	_decide_action$3171+2,powf@x+2
  5771   003A56  C2AB  F063         	movff	_decide_action$3171+3,powf@x+3
  5772   003A5A  EC52  F007         	call	_powf	;wreg free
  5773   003A5E  C060  F2B0         	movff	?_powf,_decide_action$3173
  5774   003A62  C061  F2B1         	movff	?_powf+1,_decide_action$3173+1
  5775   003A66  C062  F2B2         	movff	?_powf+2,_decide_action$3173+2
  5776   003A6A  C063  F2B3         	movff	?_powf+3,_decide_action$3173+3
  5777   003A6E                     
  5778                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  5779   003A6E  C2AC  F002         	movff	_decide_action$3172,___fladd@b
  5780   003A72  C2AD  F003         	movff	_decide_action$3172+1,___fladd@b+1
  5781   003A76  C2AE  F004         	movff	_decide_action$3172+2,___fladd@b+2
  5782   003A7A  C2AF  F005         	movff	_decide_action$3172+3,___fladd@b+3
  5783   003A7E  C2B0  F006         	movff	_decide_action$3173,___fladd@a
  5784   003A82  C2B1  F007         	movff	_decide_action$3173+1,___fladd@a+1
  5785   003A86  C2B2  F008         	movff	_decide_action$3173+2,___fladd@a+2
  5786   003A8A  C2B3  F009         	movff	_decide_action$3173+3,___fladd@a+3
  5787   003A8E  EC68  F02B         	call	___fladd	;wreg free
  5788   003A92  C002  F012         	movff	?___fladd,sqrtf@x
  5789   003A96  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5790   003A9A  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5791   003A9E  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5792   003AA2  ECDD  F02F         	call	_sqrtf	;wreg free
  5793   003AA6  C012  F25E         	movff	?_sqrtf,decide_action@rgb_comp+4
  5794   003AAA  C013  F25F         	movff	?_sqrtf+1,decide_action@rgb_comp+5
  5795   003AAE  C014  F260         	movff	?_sqrtf+2,decide_action@rgb_comp+6
  5796   003AB2  C015  F261         	movff	?_sqrtf+3,decide_action@rgb_comp+7
  5797   003AB6                     
  5798                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5799   003AB6  0E50               	movlw	80
  5800   003AB8  6E06               	movwf	___fladd@a^0,c
  5801   003ABA  0E8D               	movlw	141
  5802   003ABC  6E07               	movwf	(___fladd@a+1)^0,c
  5803   003ABE  0ED7               	movlw	215
  5804   003AC0  6E08               	movwf	(___fladd@a+2)^0,c
  5805   003AC2  0EBE               	movlw	190
  5806   003AC4  6E09               	movwf	(___fladd@a+3)^0,c
  5807   003AC6  C290  F002         	movff	decide_action@green_r,___fladd@b
  5808   003ACA  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5809   003ACE  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5810   003AD2  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5811   003AD6  EC68  F02B         	call	___fladd	;wreg free
  5812   003ADA  C002  F298         	movff	?___fladd,_decide_action$3167
  5813   003ADE  C003  F299         	movff	?___fladd+1,_decide_action$3167+1
  5814   003AE2  C004  F29A         	movff	?___fladd+2,_decide_action$3167+2
  5815   003AE6  C005  F29B         	movff	?___fladd+3,_decide_action$3167+3
  5816   003AEA                     
  5817                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5818   003AEA  0EAE               	movlw	174
  5819   003AEC  6E06               	movwf	___fladd@a^0,c
  5820   003AEE  0E47               	movlw	71
  5821   003AF0  6E07               	movwf	(___fladd@a+1)^0,c
  5822   003AF2  0EE1               	movlw	225
  5823   003AF4  6E08               	movwf	(___fladd@a+2)^0,c
  5824   003AF6  0EBD               	movlw	189
  5825   003AF8  6E09               	movwf	(___fladd@a+3)^0,c
  5826   003AFA  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5827   003AFE  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5828   003B02  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5829   003B06  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5830   003B0A  EC68  F02B         	call	___fladd	;wreg free
  5831   003B0E  C002  F29C         	movff	?___fladd,_decide_action$3168
  5832   003B12  C003  F29D         	movff	?___fladd+1,_decide_action$3168+1
  5833   003B16  C004  F29E         	movff	?___fladd+2,_decide_action$3168+2
  5834   003B1A  C005  F29F         	movff	?___fladd+3,_decide_action$3168+3
  5835   003B1E                     
  5836                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5837   003B1E  0E00               	movlw	0
  5838   003B20  0100               	movlb	0	; () banked
  5839   003B22  6F64               	movwf	powf@y& (0+255),b
  5840   003B24  0E00               	movlw	0
  5841   003B26  6F65               	movwf	(powf@y+1)& (0+255),b
  5842   003B28  0E00               	movlw	0
  5843   003B2A  6F66               	movwf	(powf@y+2)& (0+255),b
  5844   003B2C  0E40               	movlw	64
  5845   003B2E  6F67               	movwf	(powf@y+3)& (0+255),b
  5846   003B30  C298  F060         	movff	_decide_action$3167,powf@x
  5847   003B34  C299  F061         	movff	_decide_action$3167+1,powf@x+1
  5848   003B38  C29A  F062         	movff	_decide_action$3167+2,powf@x+2
  5849   003B3C  C29B  F063         	movff	_decide_action$3167+3,powf@x+3
  5850   003B40  EC52  F007         	call	_powf	;wreg free
  5851   003B44  C060  F2A0         	movff	?_powf,_decide_action$3169
  5852   003B48  C061  F2A1         	movff	?_powf+1,_decide_action$3169+1
  5853   003B4C  C062  F2A2         	movff	?_powf+2,_decide_action$3169+2
  5854   003B50  C063  F2A3         	movff	?_powf+3,_decide_action$3169+3
  5855   003B54                     
  5856                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5857   003B54  0E00               	movlw	0
  5858   003B56  0100               	movlb	0	; () banked
  5859   003B58  6F64               	movwf	powf@y& (0+255),b
  5860   003B5A  0E00               	movlw	0
  5861   003B5C  6F65               	movwf	(powf@y+1)& (0+255),b
  5862   003B5E  0E00               	movlw	0
  5863   003B60  6F66               	movwf	(powf@y+2)& (0+255),b
  5864   003B62  0E40               	movlw	64
  5865   003B64  6F67               	movwf	(powf@y+3)& (0+255),b
  5866   003B66  C29C  F060         	movff	_decide_action$3168,powf@x
  5867   003B6A  C29D  F061         	movff	_decide_action$3168+1,powf@x+1
  5868   003B6E  C29E  F062         	movff	_decide_action$3168+2,powf@x+2
  5869   003B72  C29F  F063         	movff	_decide_action$3168+3,powf@x+3
  5870   003B76  EC52  F007         	call	_powf	;wreg free
  5871   003B7A  C060  F2A4         	movff	?_powf,_decide_action$3170
  5872   003B7E  C061  F2A5         	movff	?_powf+1,_decide_action$3170+1
  5873   003B82  C062  F2A6         	movff	?_powf+2,_decide_action$3170+2
  5874   003B86  C063  F2A7         	movff	?_powf+3,_decide_action$3170+3
  5875   003B8A                     
  5876                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5877   003B8A  0EC5               	movlw	197
  5878   003B8C  6E06               	movwf	___fladd@a^0,c
  5879   003B8E  0E20               	movlw	32
  5880   003B90  6E07               	movwf	(___fladd@a+1)^0,c
  5881   003B92  0EF0               	movlw	240
  5882   003B94  6E08               	movwf	(___fladd@a+2)^0,c
  5883   003B96  0EBE               	movlw	190
  5884   003B98  6E09               	movwf	(___fladd@a+3)^0,c
  5885   003B9A  C294  F002         	movff	decide_action@blue_r,___fladd@b
  5886   003B9E  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5887   003BA2  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5888   003BA6  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5889   003BAA  EC68  F02B         	call	___fladd	;wreg free
  5890   003BAE  C002  F2A8         	movff	?___fladd,_decide_action$3171
  5891   003BB2  C003  F2A9         	movff	?___fladd+1,_decide_action$3171+1
  5892   003BB6  C004  F2AA         	movff	?___fladd+2,_decide_action$3171+2
  5893   003BBA  C005  F2AB         	movff	?___fladd+3,_decide_action$3171+3
  5894   003BBE                     
  5895                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5896   003BBE  C2A0  F006         	movff	_decide_action$3169,___fladd@a
  5897   003BC2  C2A1  F007         	movff	_decide_action$3169+1,___fladd@a+1
  5898   003BC6  C2A2  F008         	movff	_decide_action$3169+2,___fladd@a+2
  5899   003BCA  C2A3  F009         	movff	_decide_action$3169+3,___fladd@a+3
  5900   003BCE  C2A4  F002         	movff	_decide_action$3170,___fladd@b
  5901   003BD2  C2A5  F003         	movff	_decide_action$3170+1,___fladd@b+1
  5902   003BD6  C2A6  F004         	movff	_decide_action$3170+2,___fladd@b+2
  5903   003BDA  C2A7  F005         	movff	_decide_action$3170+3,___fladd@b+3
  5904   003BDE  EC68  F02B         	call	___fladd	;wreg free
  5905   003BE2  C002  F2AC         	movff	?___fladd,_decide_action$3172
  5906   003BE6  C003  F2AD         	movff	?___fladd+1,_decide_action$3172+1
  5907   003BEA  C004  F2AE         	movff	?___fladd+2,_decide_action$3172+2
  5908   003BEE  C005  F2AF         	movff	?___fladd+3,_decide_action$3172+3
  5909   003BF2                     
  5910                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5911   003BF2  0E00               	movlw	0
  5912   003BF4  0100               	movlb	0	; () banked
  5913   003BF6  6F64               	movwf	powf@y& (0+255),b
  5914   003BF8  0E00               	movlw	0
  5915   003BFA  6F65               	movwf	(powf@y+1)& (0+255),b
  5916   003BFC  0E00               	movlw	0
  5917   003BFE  6F66               	movwf	(powf@y+2)& (0+255),b
  5918   003C00  0E40               	movlw	64
  5919   003C02  6F67               	movwf	(powf@y+3)& (0+255),b
  5920   003C04  C2A8  F060         	movff	_decide_action$3171,powf@x
  5921   003C08  C2A9  F061         	movff	_decide_action$3171+1,powf@x+1
  5922   003C0C  C2AA  F062         	movff	_decide_action$3171+2,powf@x+2
  5923   003C10  C2AB  F063         	movff	_decide_action$3171+3,powf@x+3
  5924   003C14  EC52  F007         	call	_powf	;wreg free
  5925   003C18  C060  F2B0         	movff	?_powf,_decide_action$3173
  5926   003C1C  C061  F2B1         	movff	?_powf+1,_decide_action$3173+1
  5927   003C20  C062  F2B2         	movff	?_powf+2,_decide_action$3173+2
  5928   003C24  C063  F2B3         	movff	?_powf+3,_decide_action$3173+3
  5929   003C28                     
  5930                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5931   003C28  C2AC  F002         	movff	_decide_action$3172,___fladd@b
  5932   003C2C  C2AD  F003         	movff	_decide_action$3172+1,___fladd@b+1
  5933   003C30  C2AE  F004         	movff	_decide_action$3172+2,___fladd@b+2
  5934   003C34  C2AF  F005         	movff	_decide_action$3172+3,___fladd@b+3
  5935   003C38  C2B0  F006         	movff	_decide_action$3173,___fladd@a
  5936   003C3C  C2B1  F007         	movff	_decide_action$3173+1,___fladd@a+1
  5937   003C40  C2B2  F008         	movff	_decide_action$3173+2,___fladd@a+2
  5938   003C44  C2B3  F009         	movff	_decide_action$3173+3,___fladd@a+3
  5939   003C48  EC68  F02B         	call	___fladd	;wreg free
  5940   003C4C  C002  F012         	movff	?___fladd,sqrtf@x
  5941   003C50  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5942   003C54  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5943   003C58  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5944   003C5C  ECDD  F02F         	call	_sqrtf	;wreg free
  5945   003C60  C012  F262         	movff	?_sqrtf,decide_action@rgb_comp+8
  5946   003C64  C013  F263         	movff	?_sqrtf+1,decide_action@rgb_comp+9
  5947   003C68  C014  F264         	movff	?_sqrtf+2,decide_action@rgb_comp+10
  5948   003C6C  C015  F265         	movff	?_sqrtf+3,decide_action@rgb_comp+11
  5949   003C70                     
  5950                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  5951   003C70  0E66               	movlw	102
  5952   003C72  6E06               	movwf	___fladd@a^0,c
  5953   003C74  0E66               	movlw	102
  5954   003C76  6E07               	movwf	(___fladd@a+1)^0,c
  5955   003C78  0EA6               	movlw	166
  5956   003C7A  6E08               	movwf	(___fladd@a+2)^0,c
  5957   003C7C  0EBE               	movlw	190
  5958   003C7E  6E09               	movwf	(___fladd@a+3)^0,c
  5959   003C80  C290  F002         	movff	decide_action@green_r,___fladd@b
  5960   003C84  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5961   003C88  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5962   003C8C  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5963   003C90  EC68  F02B         	call	___fladd	;wreg free
  5964   003C94  C002  F298         	movff	?___fladd,_decide_action$3167
  5965   003C98  C003  F299         	movff	?___fladd+1,_decide_action$3167+1
  5966   003C9C  C004  F29A         	movff	?___fladd+2,_decide_action$3167+2
  5967   003CA0  C005  F29B         	movff	?___fladd+3,_decide_action$3167+3
  5968   003CA4                     
  5969                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  5970   003CA4  0E75               	movlw	117
  5971   003CA6  6E06               	movwf	___fladd@a^0,c
  5972   003CA8  0E93               	movlw	147
  5973   003CAA  6E07               	movwf	(___fladd@a+1)^0,c
  5974   003CAC  0ED8               	movlw	216
  5975   003CAE  6E08               	movwf	(___fladd@a+2)^0,c
  5976   003CB0  0EBE               	movlw	190
  5977   003CB2  6E09               	movwf	(___fladd@a+3)^0,c
  5978   003CB4  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5979   003CB8  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5980   003CBC  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5981   003CC0  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5982   003CC4  EC68  F02B         	call	___fladd	;wreg free
  5983   003CC8  C002  F29C         	movff	?___fladd,_decide_action$3168
  5984   003CCC  C003  F29D         	movff	?___fladd+1,_decide_action$3168+1
  5985   003CD0  C004  F29E         	movff	?___fladd+2,_decide_action$3168+2
  5986   003CD4  C005  F29F         	movff	?___fladd+3,_decide_action$3168+3
  5987   003CD8                     
  5988                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  5989   003CD8  0E00               	movlw	0
  5990   003CDA  0100               	movlb	0	; () banked
  5991   003CDC  6F64               	movwf	powf@y& (0+255),b
  5992   003CDE  0E00               	movlw	0
  5993   003CE0  6F65               	movwf	(powf@y+1)& (0+255),b
  5994   003CE2  0E00               	movlw	0
  5995   003CE4  6F66               	movwf	(powf@y+2)& (0+255),b
  5996   003CE6  0E40               	movlw	64
  5997   003CE8  6F67               	movwf	(powf@y+3)& (0+255),b
  5998   003CEA  C298  F060         	movff	_decide_action$3167,powf@x
  5999   003CEE  C299  F061         	movff	_decide_action$3167+1,powf@x+1
  6000   003CF2  C29A  F062         	movff	_decide_action$3167+2,powf@x+2
  6001   003CF6  C29B  F063         	movff	_decide_action$3167+3,powf@x+3
  6002   003CFA  EC52  F007         	call	_powf	;wreg free
  6003   003CFE  C060  F2A0         	movff	?_powf,_decide_action$3169
  6004   003D02  C061  F2A1         	movff	?_powf+1,_decide_action$3169+1
  6005   003D06  C062  F2A2         	movff	?_powf+2,_decide_action$3169+2
  6006   003D0A  C063  F2A3         	movff	?_powf+3,_decide_action$3169+3
  6007   003D0E                     
  6008                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6009   003D0E  0E00               	movlw	0
  6010   003D10  0100               	movlb	0	; () banked
  6011   003D12  6F64               	movwf	powf@y& (0+255),b
  6012   003D14  0E00               	movlw	0
  6013   003D16  6F65               	movwf	(powf@y+1)& (0+255),b
  6014   003D18  0E00               	movlw	0
  6015   003D1A  6F66               	movwf	(powf@y+2)& (0+255),b
  6016   003D1C  0E40               	movlw	64
  6017   003D1E  6F67               	movwf	(powf@y+3)& (0+255),b
  6018   003D20  C29C  F060         	movff	_decide_action$3168,powf@x
  6019   003D24  C29D  F061         	movff	_decide_action$3168+1,powf@x+1
  6020   003D28  C29E  F062         	movff	_decide_action$3168+2,powf@x+2
  6021   003D2C  C29F  F063         	movff	_decide_action$3168+3,powf@x+3
  6022   003D30  EC52  F007         	call	_powf	;wreg free
  6023   003D34  C060  F2A4         	movff	?_powf,_decide_action$3170
  6024   003D38  C061  F2A5         	movff	?_powf+1,_decide_action$3170+1
  6025   003D3C  C062  F2A6         	movff	?_powf+2,_decide_action$3170+2
  6026   003D40  C063  F2A7         	movff	?_powf+3,_decide_action$3170+3
  6027   003D44                     
  6028                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6029   003D44  0E25               	movlw	37
  6030   003D46  6E06               	movwf	___fladd@a^0,c
  6031   003D48  0E06               	movlw	6
  6032   003D4A  6E07               	movwf	(___fladd@a+1)^0,c
  6033   003D4C  0E81               	movlw	129
  6034   003D4E  6E08               	movwf	(___fladd@a+2)^0,c
  6035   003D50  0EBE               	movlw	190
  6036   003D52  6E09               	movwf	(___fladd@a+3)^0,c
  6037   003D54  C294  F002         	movff	decide_action@blue_r,___fladd@b
  6038   003D58  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6039   003D5C  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6040   003D60  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6041   003D64  EC68  F02B         	call	___fladd	;wreg free
  6042   003D68  C002  F2A8         	movff	?___fladd,_decide_action$3171
  6043   003D6C  C003  F2A9         	movff	?___fladd+1,_decide_action$3171+1
  6044   003D70  C004  F2AA         	movff	?___fladd+2,_decide_action$3171+2
  6045   003D74  C005  F2AB         	movff	?___fladd+3,_decide_action$3171+3
  6046   003D78                     
  6047                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6048   003D78  C2A0  F006         	movff	_decide_action$3169,___fladd@a
  6049   003D7C  C2A1  F007         	movff	_decide_action$3169+1,___fladd@a+1
  6050   003D80  C2A2  F008         	movff	_decide_action$3169+2,___fladd@a+2
  6051   003D84  C2A3  F009         	movff	_decide_action$3169+3,___fladd@a+3
  6052   003D88  C2A4  F002         	movff	_decide_action$3170,___fladd@b
  6053   003D8C  C2A5  F003         	movff	_decide_action$3170+1,___fladd@b+1
  6054   003D90  C2A6  F004         	movff	_decide_action$3170+2,___fladd@b+2
  6055   003D94  C2A7  F005         	movff	_decide_action$3170+3,___fladd@b+3
  6056   003D98  EC68  F02B         	call	___fladd	;wreg free
  6057   003D9C  C002  F2AC         	movff	?___fladd,_decide_action$3172
  6058   003DA0  C003  F2AD         	movff	?___fladd+1,_decide_action$3172+1
  6059   003DA4  C004  F2AE         	movff	?___fladd+2,_decide_action$3172+2
  6060   003DA8  C005  F2AF         	movff	?___fladd+3,_decide_action$3172+3
  6061   003DAC                     
  6062                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6063   003DAC  0E00               	movlw	0
  6064   003DAE  0100               	movlb	0	; () banked
  6065   003DB0  6F64               	movwf	powf@y& (0+255),b
  6066   003DB2  0E00               	movlw	0
  6067   003DB4  6F65               	movwf	(powf@y+1)& (0+255),b
  6068   003DB6  0E00               	movlw	0
  6069   003DB8  6F66               	movwf	(powf@y+2)& (0+255),b
  6070   003DBA  0E40               	movlw	64
  6071   003DBC  6F67               	movwf	(powf@y+3)& (0+255),b
  6072   003DBE  C2A8  F060         	movff	_decide_action$3171,powf@x
  6073   003DC2  C2A9  F061         	movff	_decide_action$3171+1,powf@x+1
  6074   003DC6  C2AA  F062         	movff	_decide_action$3171+2,powf@x+2
  6075   003DCA  C2AB  F063         	movff	_decide_action$3171+3,powf@x+3
  6076   003DCE  EC52  F007         	call	_powf	;wreg free
  6077   003DD2  C060  F2B0         	movff	?_powf,_decide_action$3173
  6078   003DD6  C061  F2B1         	movff	?_powf+1,_decide_action$3173+1
  6079   003DDA  C062  F2B2         	movff	?_powf+2,_decide_action$3173+2
  6080   003DDE  C063  F2B3         	movff	?_powf+3,_decide_action$3173+3
  6081   003DE2                     
  6082                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6083   003DE2  C2AC  F002         	movff	_decide_action$3172,___fladd@b
  6084   003DE6  C2AD  F003         	movff	_decide_action$3172+1,___fladd@b+1
  6085   003DEA  C2AE  F004         	movff	_decide_action$3172+2,___fladd@b+2
  6086   003DEE  C2AF  F005         	movff	_decide_action$3172+3,___fladd@b+3
  6087   003DF2  C2B0  F006         	movff	_decide_action$3173,___fladd@a
  6088   003DF6  C2B1  F007         	movff	_decide_action$3173+1,___fladd@a+1
  6089   003DFA  C2B2  F008         	movff	_decide_action$3173+2,___fladd@a+2
  6090   003DFE  C2B3  F009         	movff	_decide_action$3173+3,___fladd@a+3
  6091   003E02  EC68  F02B         	call	___fladd	;wreg free
  6092   003E06  C002  F012         	movff	?___fladd,sqrtf@x
  6093   003E0A  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6094   003E0E  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6095   003E12  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6096   003E16  ECDD  F02F         	call	_sqrtf	;wreg free
  6097   003E1A  C012  F266         	movff	?_sqrtf,decide_action@rgb_comp+12
  6098   003E1E  C013  F267         	movff	?_sqrtf+1,decide_action@rgb_comp+13
  6099   003E22  C014  F268         	movff	?_sqrtf+2,decide_action@rgb_comp+14
  6100   003E26  C015  F269         	movff	?_sqrtf+3,decide_action@rgb_comp+15
  6101   003E2A                     
  6102                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  6103   003E2A  0EF0               	movlw	240
  6104   003E2C  6E06               	movwf	___fladd@a^0,c
  6105   003E2E  0EA7               	movlw	167
  6106   003E30  6E07               	movwf	(___fladd@a+1)^0,c
  6107   003E32  0E86               	movlw	134
  6108   003E34  6E08               	movwf	(___fladd@a+2)^0,c
  6109   003E36  0EBE               	movlw	190
  6110   003E38  6E09               	movwf	(___fladd@a+3)^0,c
  6111   003E3A  C290  F002         	movff	decide_action@green_r,___fladd@b
  6112   003E3E  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6113   003E42  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6114   003E46  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6115   003E4A  EC68  F02B         	call	___fladd	;wreg free
  6116   003E4E  C002  F298         	movff	?___fladd,_decide_action$3167
  6117   003E52  C003  F299         	movff	?___fladd+1,_decide_action$3167+1
  6118   003E56  C004  F29A         	movff	?___fladd+2,_decide_action$3167+2
  6119   003E5A  C005  F29B         	movff	?___fladd+3,_decide_action$3167+3
  6120   003E5E                     
  6121                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  6122   003E5E  0E08               	movlw	8
  6123   003E60  6E06               	movwf	___fladd@a^0,c
  6124   003E62  0EAC               	movlw	172
  6125   003E64  6E07               	movwf	(___fladd@a+1)^0,c
  6126   003E66  0EDC               	movlw	220
  6127   003E68  6E08               	movwf	(___fladd@a+2)^0,c
  6128   003E6A  0EBE               	movlw	190
  6129   003E6C  6E09               	movwf	(___fladd@a+3)^0,c
  6130   003E6E  C28C  F002         	movff	decide_action@red_r,___fladd@b
  6131   003E72  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6132   003E76  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6133   003E7A  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6134   003E7E  EC68  F02B         	call	___fladd	;wreg free
  6135   003E82  C002  F29C         	movff	?___fladd,_decide_action$3168
  6136   003E86  C003  F29D         	movff	?___fladd+1,_decide_action$3168+1
  6137   003E8A  C004  F29E         	movff	?___fladd+2,_decide_action$3168+2
  6138   003E8E  C005  F29F         	movff	?___fladd+3,_decide_action$3168+3
  6139   003E92                     
  6140                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  6141   003E92  0E00               	movlw	0
  6142   003E94  0100               	movlb	0	; () banked
  6143   003E96  6F64               	movwf	powf@y& (0+255),b
  6144   003E98  0E00               	movlw	0
  6145   003E9A  6F65               	movwf	(powf@y+1)& (0+255),b
  6146   003E9C  0E00               	movlw	0
  6147   003E9E  6F66               	movwf	(powf@y+2)& (0+255),b
  6148   003EA0  0E40               	movlw	64
  6149   003EA2  6F67               	movwf	(powf@y+3)& (0+255),b
  6150   003EA4  C298  F060         	movff	_decide_action$3167,powf@x
  6151   003EA8  C299  F061         	movff	_decide_action$3167+1,powf@x+1
  6152   003EAC  C29A  F062         	movff	_decide_action$3167+2,powf@x+2
  6153   003EB0  C29B  F063         	movff	_decide_action$3167+3,powf@x+3
  6154   003EB4  EC52  F007         	call	_powf	;wreg free
  6155   003EB8  C060  F2A0         	movff	?_powf,_decide_action$3169
  6156   003EBC  C061  F2A1         	movff	?_powf+1,_decide_action$3169+1
  6157   003EC0  C062  F2A2         	movff	?_powf+2,_decide_action$3169+2
  6158   003EC4  C063  F2A3         	movff	?_powf+3,_decide_action$3169+3
  6159   003EC8                     
  6160                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  6161   003EC8  0E00               	movlw	0
  6162   003ECA  0100               	movlb	0	; () banked
  6163   003ECC  6F64               	movwf	powf@y& (0+255),b
  6164   003ECE  0E00               	movlw	0
  6165   003ED0  6F65               	movwf	(powf@y+1)& (0+255),b
  6166   003ED2  0E00               	movlw	0
  6167   003ED4  6F66               	movwf	(powf@y+2)& (0+255),b
  6168   003ED6  0E40               	movlw	64
  6169   003ED8  6F67               	movwf	(powf@y+3)& (0+255),b
  6170   003EDA  C29C  F060         	movff	_decide_action$3168,powf@x
  6171   003EDE  C29D  F061         	movff	_decide_action$3168+1,powf@x+1
  6172   003EE2  C29E  F062         	movff	_decide_action$3168+2,powf@x+2
  6173   003EE6  C29F  F063         	movff	_decide_action$3168+3,powf@x+3
  6174   003EEA  EC52  F007         	call	_powf	;wreg free
  6175   003EEE  C060  F2A4         	movff	?_powf,_decide_action$3170
  6176   003EF2  C061  F2A5         	movff	?_powf+1,_decide_action$3170+1
  6177   003EF6  C062  F2A6         	movff	?_powf+2,_decide_action$3170+2
  6178   003EFA  C063  F2A7         	movff	?_powf+3,_decide_action$3170+3
  6179   003EFE                     
  6180                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  6181   003EFE  0E08               	movlw	8
  6182   003F00  6E06               	movwf	___fladd@a^0,c
  6183   003F02  0EAC               	movlw	172
  6184   003F04  6E07               	movwf	(___fladd@a+1)^0,c
  6185   003F06  0E9C               	movlw	156
  6186   003F08  6E08               	movwf	(___fladd@a+2)^0,c
  6187   003F0A  0EBE               	movlw	190
  6188   003F0C  6E09               	movwf	(___fladd@a+3)^0,c
  6189   003F0E  C294  F002         	movff	decide_action@blue_r,___fladd@b
  6190   003F12  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6191   003F16  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6192   003F1A  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6193   003F1E  EC68  F02B         	call	___fladd	;wreg free
  6194   003F22  C002  F2A8         	movff	?___fladd,_decide_action$3171
  6195   003F26  C003  F2A9         	movff	?___fladd+1,_decide_action$3171+1
  6196   003F2A  C004  F2AA         	movff	?___fladd+2,_decide_action$3171+2
  6197   003F2E  C005  F2AB         	movff	?___fladd+3,_decide_action$3171+3
  6198   003F32                     
  6199                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  6200   003F32  C2A0  F006         	movff	_decide_action$3169,___fladd@a
  6201   003F36  C2A1  F007         	movff	_decide_action$3169+1,___fladd@a+1
  6202   003F3A  C2A2  F008         	movff	_decide_action$3169+2,___fladd@a+2
  6203   003F3E  C2A3  F009         	movff	_decide_action$3169+3,___fladd@a+3
  6204   003F42  C2A4  F002         	movff	_decide_action$3170,___fladd@b
  6205   003F46  C2A5  F003         	movff	_decide_action$3170+1,___fladd@b+1
  6206   003F4A  C2A6  F004         	movff	_decide_action$3170+2,___fladd@b+2
  6207   003F4E  C2A7  F005         	movff	_decide_action$3170+3,___fladd@b+3
  6208   003F52  EC68  F02B         	call	___fladd	;wreg free
  6209   003F56  C002  F2AC         	movff	?___fladd,_decide_action$3172
  6210   003F5A  C003  F2AD         	movff	?___fladd+1,_decide_action$3172+1
  6211   003F5E  C004  F2AE         	movff	?___fladd+2,_decide_action$3172+2
  6212   003F62  C005  F2AF         	movff	?___fladd+3,_decide_action$3172+3
  6213   003F66                     
  6214                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  6215   003F66  0E00               	movlw	0
  6216   003F68  0100               	movlb	0	; () banked
  6217   003F6A  6F64               	movwf	powf@y& (0+255),b
  6218   003F6C  0E00               	movlw	0
  6219   003F6E  6F65               	movwf	(powf@y+1)& (0+255),b
  6220   003F70  0E00               	movlw	0
  6221   003F72  6F66               	movwf	(powf@y+2)& (0+255),b
  6222   003F74  0E40               	movlw	64
  6223   003F76  6F67               	movwf	(powf@y+3)& (0+255),b
  6224   003F78  C2A8  F060         	movff	_decide_action$3171,powf@x
  6225   003F7C  C2A9  F061         	movff	_decide_action$3171+1,powf@x+1
  6226   003F80  C2AA  F062         	movff	_decide_action$3171+2,powf@x+2
  6227   003F84  C2AB  F063         	movff	_decide_action$3171+3,powf@x+3
  6228   003F88  EC52  F007         	call	_powf	;wreg free
  6229   003F8C  C060  F2B0         	movff	?_powf,_decide_action$3173
  6230   003F90  C061  F2B1         	movff	?_powf+1,_decide_action$3173+1
  6231   003F94  C062  F2B2         	movff	?_powf+2,_decide_action$3173+2
  6232   003F98  C063  F2B3         	movff	?_powf+3,_decide_action$3173+3
  6233   003F9C                     
  6234                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  6235   003F9C  C2AC  F002         	movff	_decide_action$3172,___fladd@b
  6236   003FA0  C2AD  F003         	movff	_decide_action$3172+1,___fladd@b+1
  6237   003FA4  C2AE  F004         	movff	_decide_action$3172+2,___fladd@b+2
  6238   003FA8  C2AF  F005         	movff	_decide_action$3172+3,___fladd@b+3
  6239   003FAC  C2B0  F006         	movff	_decide_action$3173,___fladd@a
  6240   003FB0  C2B1  F007         	movff	_decide_action$3173+1,___fladd@a+1
  6241   003FB4  C2B2  F008         	movff	_decide_action$3173+2,___fladd@a+2
  6242   003FB8  C2B3  F009         	movff	_decide_action$3173+3,___fladd@a+3
  6243   003FBC  EC68  F02B         	call	___fladd	;wreg free
  6244   003FC0  C002  F012         	movff	?___fladd,sqrtf@x
  6245   003FC4  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6246   003FC8  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6247   003FCC  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6248   003FD0  ECDD  F02F         	call	_sqrtf	;wreg free
  6249   003FD4  C012  F26A         	movff	?_sqrtf,decide_action@rgb_comp+16
  6250   003FD8  C013  F26B         	movff	?_sqrtf+1,decide_action@rgb_comp+17
  6251   003FDC  C014  F26C         	movff	?_sqrtf+2,decide_action@rgb_comp+18
  6252   003FE0  C015  F26D         	movff	?_sqrtf+3,decide_action@rgb_comp+19
  6253   003FE4                     
  6254                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  6255   003FE4  0EBA               	movlw	186
  6256   003FE6  6E06               	movwf	___fladd@a^0,c
  6257   003FE8  0E49               	movlw	73
  6258   003FEA  6E07               	movwf	(___fladd@a+1)^0,c
  6259   003FEC  0E0C               	movlw	12
  6260   003FEE  6E08               	movwf	(___fladd@a+2)^0,c
  6261   003FF0  0EBE               	movlw	190
  6262   003FF2  6E09               	movwf	(___fladd@a+3)^0,c
  6263   003FF4  C290  F002         	movff	decide_action@green_r,___fladd@b
  6264   003FF8  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6265   003FFC  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6266   004000  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6267   004004  EC68  F02B         	call	___fladd	;wreg free
  6268   004008  C002  F298         	movff	?___fladd,_decide_action$3167
  6269   00400C  C003  F299         	movff	?___fladd+1,_decide_action$3167+1
  6270   004010  C004  F29A         	movff	?___fladd+2,_decide_action$3167+2
  6271   004014  C005  F29B         	movff	?___fladd+3,_decide_action$3167+3
  6272   004018                     
  6273                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  6274   004018  0EE7               	movlw	231
  6275   00401A  6E06               	movwf	___fladd@a^0,c
  6276   00401C  0EFB               	movlw	251
  6277   00401E  6E07               	movwf	(___fladd@a+1)^0,c
  6278   004020  0E29               	movlw	41
  6279   004022  6E08               	movwf	(___fladd@a+2)^0,c
  6280   004024  0EBF               	movlw	191
  6281   004026  6E09               	movwf	(___fladd@a+3)^0,c
  6282   004028  C28C  F002         	movff	decide_action@red_r,___fladd@b
  6283   00402C  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6284   004030  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6285   004034  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6286   004038  EC68  F02B         	call	___fladd	;wreg free
  6287   00403C  C002  F29C         	movff	?___fladd,_decide_action$3168
  6288   004040  C003  F29D         	movff	?___fladd+1,_decide_action$3168+1
  6289   004044  C004  F29E         	movff	?___fladd+2,_decide_action$3168+2
  6290   004048  C005  F29F         	movff	?___fladd+3,_decide_action$3168+3
  6291   00404C                     
  6292                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  6293   00404C  0E00               	movlw	0
  6294   00404E  0100               	movlb	0	; () banked
  6295   004050  6F64               	movwf	powf@y& (0+255),b
  6296   004052  0E00               	movlw	0
  6297   004054  6F65               	movwf	(powf@y+1)& (0+255),b
  6298   004056  0E00               	movlw	0
  6299   004058  6F66               	movwf	(powf@y+2)& (0+255),b
  6300   00405A  0E40               	movlw	64
  6301   00405C  6F67               	movwf	(powf@y+3)& (0+255),b
  6302   00405E  C298  F060         	movff	_decide_action$3167,powf@x
  6303   004062  C299  F061         	movff	_decide_action$3167+1,powf@x+1
  6304   004066  C29A  F062         	movff	_decide_action$3167+2,powf@x+2
  6305   00406A  C29B  F063         	movff	_decide_action$3167+3,powf@x+3
  6306   00406E  EC52  F007         	call	_powf	;wreg free
  6307   004072  C060  F2A0         	movff	?_powf,_decide_action$3169
  6308   004076  C061  F2A1         	movff	?_powf+1,_decide_action$3169+1
  6309   00407A  C062  F2A2         	movff	?_powf+2,_decide_action$3169+2
  6310   00407E  C063  F2A3         	movff	?_powf+3,_decide_action$3169+3
  6311   004082                     
  6312                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  6313   004082  0E00               	movlw	0
  6314   004084  0100               	movlb	0	; () banked
  6315   004086  6F64               	movwf	powf@y& (0+255),b
  6316   004088  0E00               	movlw	0
  6317   00408A  6F65               	movwf	(powf@y+1)& (0+255),b
  6318   00408C  0E00               	movlw	0
  6319   00408E  6F66               	movwf	(powf@y+2)& (0+255),b
  6320   004090  0E40               	movlw	64
  6321   004092  6F67               	movwf	(powf@y+3)& (0+255),b
  6322   004094  C29C  F060         	movff	_decide_action$3168,powf@x
  6323   004098  C29D  F061         	movff	_decide_action$3168+1,powf@x+1
  6324   00409C  C29E  F062         	movff	_decide_action$3168+2,powf@x+2
  6325   0040A0  C29F  F063         	movff	_decide_action$3168+3,powf@x+3
  6326   0040A4  EC52  F007         	call	_powf	;wreg free
  6327   0040A8  C060  F2A4         	movff	?_powf,_decide_action$3170
  6328   0040AC  C061  F2A5         	movff	?_powf+1,_decide_action$3170+1
  6329   0040B0  C062  F2A6         	movff	?_powf+2,_decide_action$3170+2
  6330   0040B4  C063  F2A7         	movff	?_powf+3,_decide_action$3170+3
  6331   0040B8                     
  6332                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  6333   0040B8  0E83               	movlw	131
  6334   0040BA  6E06               	movwf	___fladd@a^0,c
  6335   0040BC  0EC0               	movlw	192
  6336   0040BE  6E07               	movwf	(___fladd@a+1)^0,c
  6337   0040C0  0E4A               	movlw	74
  6338   0040C2  6E08               	movwf	(___fladd@a+2)^0,c
  6339   0040C4  0EBE               	movlw	190
  6340   0040C6  6E09               	movwf	(___fladd@a+3)^0,c
  6341   0040C8  C294  F002         	movff	decide_action@blue_r,___fladd@b
  6342   0040CC  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6343   0040D0  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6344   0040D4  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6345   0040D8  EC68  F02B         	call	___fladd	;wreg free
  6346   0040DC  C002  F2A8         	movff	?___fladd,_decide_action$3171
  6347   0040E0  C003  F2A9         	movff	?___fladd+1,_decide_action$3171+1
  6348   0040E4  C004  F2AA         	movff	?___fladd+2,_decide_action$3171+2
  6349   0040E8  C005  F2AB         	movff	?___fladd+3,_decide_action$3171+3
  6350   0040EC                     
  6351                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  6352   0040EC  C2A0  F006         	movff	_decide_action$3169,___fladd@a
  6353   0040F0  C2A1  F007         	movff	_decide_action$3169+1,___fladd@a+1
  6354   0040F4  C2A2  F008         	movff	_decide_action$3169+2,___fladd@a+2
  6355   0040F8  C2A3  F009         	movff	_decide_action$3169+3,___fladd@a+3
  6356   0040FC  C2A4  F002         	movff	_decide_action$3170,___fladd@b
  6357   004100  C2A5  F003         	movff	_decide_action$3170+1,___fladd@b+1
  6358   004104  C2A6  F004         	movff	_decide_action$3170+2,___fladd@b+2
  6359   004108  C2A7  F005         	movff	_decide_action$3170+3,___fladd@b+3
  6360   00410C  EC68  F02B         	call	___fladd	;wreg free
  6361   004110  C002  F2AC         	movff	?___fladd,_decide_action$3172
  6362   004114  C003  F2AD         	movff	?___fladd+1,_decide_action$3172+1
  6363   004118  C004  F2AE         	movff	?___fladd+2,_decide_action$3172+2
  6364   00411C  C005  F2AF         	movff	?___fladd+3,_decide_action$3172+3
  6365   004120                     
  6366                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  6367   004120  0E00               	movlw	0
  6368   004122  0100               	movlb	0	; () banked
  6369   004124  6F64               	movwf	powf@y& (0+255),b
  6370   004126  0E00               	movlw	0
  6371   004128  6F65               	movwf	(powf@y+1)& (0+255),b
  6372   00412A  0E00               	movlw	0
  6373   00412C  6F66               	movwf	(powf@y+2)& (0+255),b
  6374   00412E  0E40               	movlw	64
  6375   004130  6F67               	movwf	(powf@y+3)& (0+255),b
  6376   004132  C2A8  F060         	movff	_decide_action$3171,powf@x
  6377   004136  C2A9  F061         	movff	_decide_action$3171+1,powf@x+1
  6378   00413A  C2AA  F062         	movff	_decide_action$3171+2,powf@x+2
  6379   00413E  C2AB  F063         	movff	_decide_action$3171+3,powf@x+3
  6380   004142  EC52  F007         	call	_powf	;wreg free
  6381   004146  C060  F2B0         	movff	?_powf,_decide_action$3173
  6382   00414A  C061  F2B1         	movff	?_powf+1,_decide_action$3173+1
  6383   00414E  C062  F2B2         	movff	?_powf+2,_decide_action$3173+2
  6384   004152  C063  F2B3         	movff	?_powf+3,_decide_action$3173+3
  6385   004156                     
  6386                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  6387   004156  C2AC  F002         	movff	_decide_action$3172,___fladd@b
  6388   00415A  C2AD  F003         	movff	_decide_action$3172+1,___fladd@b+1
  6389   00415E  C2AE  F004         	movff	_decide_action$3172+2,___fladd@b+2
  6390   004162  C2AF  F005         	movff	_decide_action$3172+3,___fladd@b+3
  6391   004166  C2B0  F006         	movff	_decide_action$3173,___fladd@a
  6392   00416A  C2B1  F007         	movff	_decide_action$3173+1,___fladd@a+1
  6393   00416E  C2B2  F008         	movff	_decide_action$3173+2,___fladd@a+2
  6394   004172  C2B3  F009         	movff	_decide_action$3173+3,___fladd@a+3
  6395   004176  EC68  F02B         	call	___fladd	;wreg free
  6396   00417A  C002  F012         	movff	?___fladd,sqrtf@x
  6397   00417E  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6398   004182  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6399   004186  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6400   00418A  ECDD  F02F         	call	_sqrtf	;wreg free
  6401   00418E  C012  F26E         	movff	?_sqrtf,decide_action@rgb_comp+20
  6402   004192  C013  F26F         	movff	?_sqrtf+1,decide_action@rgb_comp+21
  6403   004196  C014  F270         	movff	?_sqrtf+2,decide_action@rgb_comp+22
  6404   00419A  C015  F271         	movff	?_sqrtf+3,decide_action@rgb_comp+23
  6405   00419E                     
  6406                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  6407   00419E  0E5A               	movlw	90
  6408   0041A0  6E06               	movwf	___fladd@a^0,c
  6409   0041A2  0E64               	movlw	100
  6410   0041A4  6E07               	movwf	(___fladd@a+1)^0,c
  6411   0041A6  0EBB               	movlw	187
  6412   0041A8  6E08               	movwf	(___fladd@a+2)^0,c
  6413   0041AA  0EBE               	movlw	190
  6414   0041AC  6E09               	movwf	(___fladd@a+3)^0,c
  6415   0041AE  C290  F002         	movff	decide_action@green_r,___fladd@b
  6416   0041B2  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6417   0041B6  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6418   0041BA  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6419   0041BE  EC68  F02B         	call	___fladd	;wreg free
  6420   0041C2  C002  F298         	movff	?___fladd,_decide_action$3167
  6421   0041C6  C003  F299         	movff	?___fladd+1,_decide_action$3167+1
  6422   0041CA  C004  F29A         	movff	?___fladd+2,_decide_action$3167+2
  6423   0041CE  C005  F29B         	movff	?___fladd+3,_decide_action$3167+3
  6424   0041D2                     
  6425                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  6426   0041D2  0E83               	movlw	131
  6427   0041D4  6E06               	movwf	___fladd@a^0,c
  6428   0041D6  0EC0               	movlw	192
  6429   0041D8  6E07               	movwf	(___fladd@a+1)^0,c
  6430   0041DA  0E8A               	movlw	138
  6431   0041DC  6E08               	movwf	(___fladd@a+2)^0,c
  6432   0041DE  0EBE               	movlw	190
  6433   0041E0  6E09               	movwf	(___fladd@a+3)^0,c
  6434   0041E2  C28C  F002         	movff	decide_action@red_r,___fladd@b
  6435   0041E6  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6436   0041EA  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6437   0041EE  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6438   0041F2  EC68  F02B         	call	___fladd	;wreg free
  6439   0041F6  C002  F29C         	movff	?___fladd,_decide_action$3168
  6440   0041FA  C003  F29D         	movff	?___fladd+1,_decide_action$3168+1
  6441   0041FE  C004  F29E         	movff	?___fladd+2,_decide_action$3168+2
  6442   004202  C005  F29F         	movff	?___fladd+3,_decide_action$3168+3
  6443   004206                     
  6444                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  6445   004206  0E00               	movlw	0
  6446   004208  0100               	movlb	0	; () banked
  6447   00420A  6F64               	movwf	powf@y& (0+255),b
  6448   00420C  0E00               	movlw	0
  6449   00420E  6F65               	movwf	(powf@y+1)& (0+255),b
  6450   004210  0E00               	movlw	0
  6451   004212  6F66               	movwf	(powf@y+2)& (0+255),b
  6452   004214  0E40               	movlw	64
  6453   004216  6F67               	movwf	(powf@y+3)& (0+255),b
  6454   004218  C298  F060         	movff	_decide_action$3167,powf@x
  6455   00421C  C299  F061         	movff	_decide_action$3167+1,powf@x+1
  6456   004220  C29A  F062         	movff	_decide_action$3167+2,powf@x+2
  6457   004224  C29B  F063         	movff	_decide_action$3167+3,powf@x+3
  6458   004228  EC52  F007         	call	_powf	;wreg free
  6459   00422C  C060  F2A0         	movff	?_powf,_decide_action$3169
  6460   004230  C061  F2A1         	movff	?_powf+1,_decide_action$3169+1
  6461   004234  C062  F2A2         	movff	?_powf+2,_decide_action$3169+2
  6462   004238  C063  F2A3         	movff	?_powf+3,_decide_action$3169+3
  6463   00423C                     
  6464                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  6465   00423C  0E00               	movlw	0
  6466   00423E  0100               	movlb	0	; () banked
  6467   004240  6F64               	movwf	powf@y& (0+255),b
  6468   004242  0E00               	movlw	0
  6469   004244  6F65               	movwf	(powf@y+1)& (0+255),b
  6470   004246  0E00               	movlw	0
  6471   004248  6F66               	movwf	(powf@y+2)& (0+255),b
  6472   00424A  0E40               	movlw	64
  6473   00424C  6F67               	movwf	(powf@y+3)& (0+255),b
  6474   00424E  C29C  F060         	movff	_decide_action$3168,powf@x
  6475   004252  C29D  F061         	movff	_decide_action$3168+1,powf@x+1
  6476   004256  C29E  F062         	movff	_decide_action$3168+2,powf@x+2
  6477   00425A  C29F  F063         	movff	_decide_action$3168+3,powf@x+3
  6478   00425E  EC52  F007         	call	_powf	;wreg free
  6479   004262  C060  F2A4         	movff	?_powf,_decide_action$3170
  6480   004266  C061  F2A5         	movff	?_powf+1,_decide_action$3170+1
  6481   00426A  C062  F2A6         	movff	?_powf+2,_decide_action$3170+2
  6482   00426E  C063  F2A7         	movff	?_powf+3,_decide_action$3170+3
  6483   004272                     
  6484                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  6485   004272  0E23               	movlw	35
  6486   004274  6E06               	movwf	___fladd@a^0,c
  6487   004276  0EDB               	movlw	219
  6488   004278  6E07               	movwf	(___fladd@a+1)^0,c
  6489   00427A  0EB9               	movlw	185
  6490   00427C  6E08               	movwf	(___fladd@a+2)^0,c
  6491   00427E  0EBE               	movlw	190
  6492   004280  6E09               	movwf	(___fladd@a+3)^0,c
  6493   004282  C294  F002         	movff	decide_action@blue_r,___fladd@b
  6494   004286  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6495   00428A  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6496   00428E  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6497   004292  EC68  F02B         	call	___fladd	;wreg free
  6498   004296  C002  F2A8         	movff	?___fladd,_decide_action$3171
  6499   00429A  C003  F2A9         	movff	?___fladd+1,_decide_action$3171+1
  6500   00429E  C004  F2AA         	movff	?___fladd+2,_decide_action$3171+2
  6501   0042A2  C005  F2AB         	movff	?___fladd+3,_decide_action$3171+3
  6502   0042A6                     
  6503                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  6504   0042A6  C2A0  F006         	movff	_decide_action$3169,___fladd@a
  6505   0042AA  C2A1  F007         	movff	_decide_action$3169+1,___fladd@a+1
  6506   0042AE  C2A2  F008         	movff	_decide_action$3169+2,___fladd@a+2
  6507   0042B2  C2A3  F009         	movff	_decide_action$3169+3,___fladd@a+3
  6508   0042B6  C2A4  F002         	movff	_decide_action$3170,___fladd@b
  6509   0042BA  C2A5  F003         	movff	_decide_action$3170+1,___fladd@b+1
  6510   0042BE  C2A6  F004         	movff	_decide_action$3170+2,___fladd@b+2
  6511   0042C2  C2A7  F005         	movff	_decide_action$3170+3,___fladd@b+3
  6512   0042C6  EC68  F02B         	call	___fladd	;wreg free
  6513   0042CA  C002  F2AC         	movff	?___fladd,_decide_action$3172
  6514   0042CE  C003  F2AD         	movff	?___fladd+1,_decide_action$3172+1
  6515   0042D2  C004  F2AE         	movff	?___fladd+2,_decide_action$3172+2
  6516   0042D6  C005  F2AF         	movff	?___fladd+3,_decide_action$3172+3
  6517   0042DA                     
  6518                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  6519   0042DA  0E00               	movlw	0
  6520   0042DC  0100               	movlb	0	; () banked
  6521   0042DE  6F64               	movwf	powf@y& (0+255),b
  6522   0042E0  0E00               	movlw	0
  6523   0042E2  6F65               	movwf	(powf@y+1)& (0+255),b
  6524   0042E4  0E00               	movlw	0
  6525   0042E6  6F66               	movwf	(powf@y+2)& (0+255),b
  6526   0042E8  0E40               	movlw	64
  6527   0042EA  6F67               	movwf	(powf@y+3)& (0+255),b
  6528   0042EC  C2A8  F060         	movff	_decide_action$3171,powf@x
  6529   0042F0  C2A9  F061         	movff	_decide_action$3171+1,powf@x+1
  6530   0042F4  C2AA  F062         	movff	_decide_action$3171+2,powf@x+2
  6531   0042F8  C2AB  F063         	movff	_decide_action$3171+3,powf@x+3
  6532   0042FC  EC52  F007         	call	_powf	;wreg free
  6533   004300  C060  F2B0         	movff	?_powf,_decide_action$3173
  6534   004304  C061  F2B1         	movff	?_powf+1,_decide_action$3173+1
  6535   004308  C062  F2B2         	movff	?_powf+2,_decide_action$3173+2
  6536   00430C  C063  F2B3         	movff	?_powf+3,_decide_action$3173+3
  6537   004310                     
  6538                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  6539   004310  C2AC  F002         	movff	_decide_action$3172,___fladd@b
  6540   004314  C2AD  F003         	movff	_decide_action$3172+1,___fladd@b+1
  6541   004318  C2AE  F004         	movff	_decide_action$3172+2,___fladd@b+2
  6542   00431C  C2AF  F005         	movff	_decide_action$3172+3,___fladd@b+3
  6543   004320  C2B0  F006         	movff	_decide_action$3173,___fladd@a
  6544   004324  C2B1  F007         	movff	_decide_action$3173+1,___fladd@a+1
  6545   004328  C2B2  F008         	movff	_decide_action$3173+2,___fladd@a+2
  6546   00432C  C2B3  F009         	movff	_decide_action$3173+3,___fladd@a+3
  6547   004330  EC68  F02B         	call	___fladd	;wreg free
  6548   004334  C002  F012         	movff	?___fladd,sqrtf@x
  6549   004338  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6550   00433C  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6551   004340  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6552   004344  ECDD  F02F         	call	_sqrtf	;wreg free
  6553   004348  C012  F272         	movff	?_sqrtf,decide_action@rgb_comp+24
  6554   00434C  C013  F273         	movff	?_sqrtf+1,decide_action@rgb_comp+25
  6555   004350  C014  F274         	movff	?_sqrtf+2,decide_action@rgb_comp+26
  6556   004354  C015  F275         	movff	?_sqrtf+3,decide_action@rgb_comp+27
  6557   004358                     
  6558                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  6559   004358  0E1F               	movlw	31
  6560   00435A  6E06               	movwf	___fladd@a^0,c
  6561   00435C  0E85               	movlw	133
  6562   00435E  6E07               	movwf	(___fladd@a+1)^0,c
  6563   004360  0EAB               	movlw	171
  6564   004362  6E08               	movwf	(___fladd@a+2)^0,c
  6565   004364  0EBE               	movlw	190
  6566   004366  6E09               	movwf	(___fladd@a+3)^0,c
  6567   004368  C290  F002         	movff	decide_action@green_r,___fladd@b
  6568   00436C  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6569   004370  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6570   004374  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6571   004378  EC68  F02B         	call	___fladd	;wreg free
  6572   00437C  C002  F298         	movff	?___fladd,_decide_action$3167
  6573   004380  C003  F299         	movff	?___fladd+1,_decide_action$3167+1
  6574   004384  C004  F29A         	movff	?___fladd+2,_decide_action$3167+2
  6575   004388  C005  F29B         	movff	?___fladd+3,_decide_action$3167+3
  6576   00438C                     
  6577                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  6578   00438C  0EB0               	movlw	176
  6579   00438E  6E06               	movwf	___fladd@a^0,c
  6580   004390  0E72               	movlw	114
  6581   004392  6E07               	movwf	(___fladd@a+1)^0,c
  6582   004394  0EA8               	movlw	168
  6583   004396  6E08               	movwf	(___fladd@a+2)^0,c
  6584   004398  0EBE               	movlw	190
  6585   00439A  6E09               	movwf	(___fladd@a+3)^0,c
  6586   00439C  C28C  F002         	movff	decide_action@red_r,___fladd@b
  6587   0043A0  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6588   0043A4  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6589   0043A8  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6590   0043AC  EC68  F02B         	call	___fladd	;wreg free
  6591   0043B0  C002  F29C         	movff	?___fladd,_decide_action$3168
  6592   0043B4  C003  F29D         	movff	?___fladd+1,_decide_action$3168+1
  6593   0043B8  C004  F29E         	movff	?___fladd+2,_decide_action$3168+2
  6594   0043BC  C005  F29F         	movff	?___fladd+3,_decide_action$3168+3
  6595   0043C0                     
  6596                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  6597   0043C0  0E00               	movlw	0
  6598   0043C2  0100               	movlb	0	; () banked
  6599   0043C4  6F64               	movwf	powf@y& (0+255),b
  6600   0043C6  0E00               	movlw	0
  6601   0043C8  6F65               	movwf	(powf@y+1)& (0+255),b
  6602   0043CA  0E00               	movlw	0
  6603   0043CC  6F66               	movwf	(powf@y+2)& (0+255),b
  6604   0043CE  0E40               	movlw	64
  6605   0043D0  6F67               	movwf	(powf@y+3)& (0+255),b
  6606   0043D2  C298  F060         	movff	_decide_action$3167,powf@x
  6607   0043D6  C299  F061         	movff	_decide_action$3167+1,powf@x+1
  6608   0043DA  C29A  F062         	movff	_decide_action$3167+2,powf@x+2
  6609   0043DE  C29B  F063         	movff	_decide_action$3167+3,powf@x+3
  6610   0043E2  EC52  F007         	call	_powf	;wreg free
  6611   0043E6  C060  F2A0         	movff	?_powf,_decide_action$3169
  6612   0043EA  C061  F2A1         	movff	?_powf+1,_decide_action$3169+1
  6613   0043EE  C062  F2A2         	movff	?_powf+2,_decide_action$3169+2
  6614   0043F2  C063  F2A3         	movff	?_powf+3,_decide_action$3169+3
  6615   0043F6                     
  6616                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  6617   0043F6  0E00               	movlw	0
  6618   0043F8  0100               	movlb	0	; () banked
  6619   0043FA  6F64               	movwf	powf@y& (0+255),b
  6620   0043FC  0E00               	movlw	0
  6621   0043FE  6F65               	movwf	(powf@y+1)& (0+255),b
  6622   004400  0E00               	movlw	0
  6623   004402  6F66               	movwf	(powf@y+2)& (0+255),b
  6624   004404  0E40               	movlw	64
  6625   004406  6F67               	movwf	(powf@y+3)& (0+255),b
  6626   004408  C29C  F060         	movff	_decide_action$3168,powf@x
  6627   00440C  C29D  F061         	movff	_decide_action$3168+1,powf@x+1
  6628   004410  C29E  F062         	movff	_decide_action$3168+2,powf@x+2
  6629   004414  C29F  F063         	movff	_decide_action$3168+3,powf@x+3
  6630   004418  EC52  F007         	call	_powf	;wreg free
  6631   00441C  C060  F2A4         	movff	?_powf,_decide_action$3170
  6632   004420  C061  F2A5         	movff	?_powf+1,_decide_action$3170+1
  6633   004424  C062  F2A6         	movff	?_powf+2,_decide_action$3170+2
  6634   004428  C063  F2A7         	movff	?_powf+3,_decide_action$3170+3
  6635   00442C                     
  6636                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  6637   00442C  0E1F               	movlw	31
  6638   00442E  6E06               	movwf	___fladd@a^0,c
  6639   004430  0E85               	movlw	133
  6640   004432  6E07               	movwf	(___fladd@a+1)^0,c
  6641   004434  0EAB               	movlw	171
  6642   004436  6E08               	movwf	(___fladd@a+2)^0,c
  6643   004438  0EBE               	movlw	190
  6644   00443A  6E09               	movwf	(___fladd@a+3)^0,c
  6645   00443C  C294  F002         	movff	decide_action@blue_r,___fladd@b
  6646   004440  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6647   004444  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6648   004448  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6649   00444C  EC68  F02B         	call	___fladd	;wreg free
  6650   004450  C002  F2A8         	movff	?___fladd,_decide_action$3171
  6651   004454  C003  F2A9         	movff	?___fladd+1,_decide_action$3171+1
  6652   004458  C004  F2AA         	movff	?___fladd+2,_decide_action$3171+2
  6653   00445C  C005  F2AB         	movff	?___fladd+3,_decide_action$3171+3
  6654   004460                     
  6655                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  6656   004460  C2A0  F006         	movff	_decide_action$3169,___fladd@a
  6657   004464  C2A1  F007         	movff	_decide_action$3169+1,___fladd@a+1
  6658   004468  C2A2  F008         	movff	_decide_action$3169+2,___fladd@a+2
  6659   00446C  C2A3  F009         	movff	_decide_action$3169+3,___fladd@a+3
  6660   004470  C2A4  F002         	movff	_decide_action$3170,___fladd@b
  6661   004474  C2A5  F003         	movff	_decide_action$3170+1,___fladd@b+1
  6662   004478  C2A6  F004         	movff	_decide_action$3170+2,___fladd@b+2
  6663   00447C  C2A7  F005         	movff	_decide_action$3170+3,___fladd@b+3
  6664   004480  EC68  F02B         	call	___fladd	;wreg free
  6665   004484  C002  F2AC         	movff	?___fladd,_decide_action$3172
  6666   004488  C003  F2AD         	movff	?___fladd+1,_decide_action$3172+1
  6667   00448C  C004  F2AE         	movff	?___fladd+2,_decide_action$3172+2
  6668   004490  C005  F2AF         	movff	?___fladd+3,_decide_action$3172+3
  6669   004494                     
  6670                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  6671   004494  0E00               	movlw	0
  6672   004496  0100               	movlb	0	; () banked
  6673   004498  6F64               	movwf	powf@y& (0+255),b
  6674   00449A  0E00               	movlw	0
  6675   00449C  6F65               	movwf	(powf@y+1)& (0+255),b
  6676   00449E  0E00               	movlw	0
  6677   0044A0  6F66               	movwf	(powf@y+2)& (0+255),b
  6678   0044A2  0E40               	movlw	64
  6679   0044A4  6F67               	movwf	(powf@y+3)& (0+255),b
  6680   0044A6  C2A8  F060         	movff	_decide_action$3171,powf@x
  6681   0044AA  C2A9  F061         	movff	_decide_action$3171+1,powf@x+1
  6682   0044AE  C2AA  F062         	movff	_decide_action$3171+2,powf@x+2
  6683   0044B2  C2AB  F063         	movff	_decide_action$3171+3,powf@x+3
  6684   0044B6  EC52  F007         	call	_powf	;wreg free
  6685   0044BA  C060  F2B0         	movff	?_powf,_decide_action$3173
  6686   0044BE  C061  F2B1         	movff	?_powf+1,_decide_action$3173+1
  6687   0044C2  C062  F2B2         	movff	?_powf+2,_decide_action$3173+2
  6688   0044C6  C063  F2B3         	movff	?_powf+3,_decide_action$3173+3
  6689   0044CA                     
  6690                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  6691   0044CA  C2AC  F002         	movff	_decide_action$3172,___fladd@b
  6692   0044CE  C2AD  F003         	movff	_decide_action$3172+1,___fladd@b+1
  6693   0044D2  C2AE  F004         	movff	_decide_action$3172+2,___fladd@b+2
  6694   0044D6  C2AF  F005         	movff	_decide_action$3172+3,___fladd@b+3
  6695   0044DA  C2B0  F006         	movff	_decide_action$3173,___fladd@a
  6696   0044DE  C2B1  F007         	movff	_decide_action$3173+1,___fladd@a+1
  6697   0044E2  C2B2  F008         	movff	_decide_action$3173+2,___fladd@a+2
  6698   0044E6  C2B3  F009         	movff	_decide_action$3173+3,___fladd@a+3
  6699   0044EA  EC68  F02B         	call	___fladd	;wreg free
  6700   0044EE  C002  F012         	movff	?___fladd,sqrtf@x
  6701   0044F2  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6702   0044F6  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6703   0044FA  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6704   0044FE  ECDD  F02F         	call	_sqrtf	;wreg free
  6705   004502  C012  F276         	movff	?_sqrtf,decide_action@rgb_comp+28
  6706   004506  C013  F277         	movff	?_sqrtf+1,decide_action@rgb_comp+29
  6707   00450A  C014  F278         	movff	?_sqrtf+2,decide_action@rgb_comp+30
  6708   00450E  C015  F279         	movff	?_sqrtf+3,decide_action@rgb_comp+31
  6709   004512                     
  6710                           ;color.c: 172:     action = 0;
  6711   004512  0E00               	movlw	0
  6712   004514  0102               	movlb	2	; () banked
  6713   004516  6F7A               	movwf	decide_action@action& (0+255),b
  6714   004518                     
  6715                           ; BSR set to: 2
  6716                           ;color.c: 173:     for(char i = 0; i < 8; i +=1){
  6717   004518  0E00               	movlw	0
  6718   00451A  6F7F               	movwf	decide_action@i& (0+255),b
  6719   00451C                     l8328:
  6720                           
  6721                           ; BSR set to: 2
  6722   00451C  0E07               	movlw	7
  6723   00451E  657F               	cpfsgt	decide_action@i& (0+255),b
  6724   004520  EF94  F022         	goto	u9081
  6725   004524  EF96  F022         	goto	u9080
  6726   004528                     u9081:
  6727   004528  EF98  F022         	goto	l8332
  6728   00452C                     u9080:
  6729   00452C  EFC7  F022         	goto	l8340
  6730   004530                     l8332:
  6731                           
  6732                           ; BSR set to: 2
  6733                           ;color.c: 174:         if(rgb_comp[i] < rgb_comp[action]){
  6734   004530  517F               	movf	decide_action@i& (0+255),w,b
  6735   004532  0D04               	mullw	4
  6736   004534  0E5A               	movlw	low decide_action@rgb_comp
  6737   004536  24F3               	addwf	243,w,c
  6738   004538  6ED9               	movwf	fsr2l,c
  6739   00453A  0E02               	movlw	high decide_action@rgb_comp
  6740   00453C  20F4               	addwfc	prodh,w,c
  6741   00453E  6EDA               	movwf	fsr2h,c
  6742   004540  CFDE F04C          	movff	postinc2,___flge@ff1
  6743   004544  CFDE F04D          	movff	postinc2,___flge@ff1+1
  6744   004548  CFDE F04E          	movff	postinc2,___flge@ff1+2
  6745   00454C  CFDE F04F          	movff	postinc2,___flge@ff1+3
  6746   004550  517A               	movf	decide_action@action& (0+255),w,b
  6747   004552  0D04               	mullw	4
  6748   004554  0E5A               	movlw	low decide_action@rgb_comp
  6749   004556  24F3               	addwf	243,w,c
  6750   004558  6ED9               	movwf	fsr2l,c
  6751   00455A  0E02               	movlw	high decide_action@rgb_comp
  6752   00455C  20F4               	addwfc	prodh,w,c
  6753   00455E  6EDA               	movwf	fsr2h,c
  6754   004560  CFDE F050          	movff	postinc2,___flge@ff2
  6755   004564  CFDE F051          	movff	postinc2,___flge@ff2+1
  6756   004568  CFDE F052          	movff	postinc2,___flge@ff2+2
  6757   00456C  CFDE F053          	movff	postinc2,___flge@ff2+3
  6758   004570  EC46  F039         	call	___flge	;wreg free
  6759   004574  B0D8               	btfsc	status,0,c
  6760   004576  EFBF  F022         	goto	u9091
  6761   00457A  EFC1  F022         	goto	u9090
  6762   00457E                     u9091:
  6763   00457E  EFC3  F022         	goto	l8336
  6764   004582                     u9090:
  6765   004582                     
  6766                           ;color.c: 175:             action = i;
  6767   004582  C27F  F27A         	movff	decide_action@i,decide_action@action
  6768   004586                     l8336:
  6769                           
  6770                           ;color.c: 177:     }
  6771   004586  0102               	movlb	2	; () banked
  6772   004588  2B7F               	incf	decide_action@i& (0+255),f,b
  6773   00458A  EF8E  F022         	goto	l8328
  6774   00458E                     l8340:
  6775                           
  6776                           ; BSR set to: 2
  6777                           ;color.c: 180:     color_writetoaddr(0x01, 0xFF);
  6778   00458E  0EFF               	movlw	255
  6779   004590  6E04               	movwf	color_writetoaddr@value^0,c
  6780   004592  0E01               	movlw	1
  6781   004594  EC02  F042         	call	_color_writetoaddr
  6782                           
  6783                           ;color.c: 181:     color_writetoaddr(0x03, 0xFF);
  6784   004598  0EFF               	movlw	255
  6785   00459A  6E04               	movwf	color_writetoaddr@value^0,c
  6786   00459C  0E03               	movlw	3
  6787   00459E  EC02  F042         	call	_color_writetoaddr
  6788   0045A2                     
  6789                           ;color.c: 183:     return action;
  6790   0045A2  0102               	movlb	2	; () banked
  6791   0045A4  517A               	movf	decide_action@action& (0+255),w,b
  6792   0045A6                     
  6793                           ; BSR set to: 2
  6794   0045A6  0012               	return		;funcret
  6795   0045A8                     __end_of_decide_action:
  6796                           	callstack 0
  6797                           
  6798 ;; *************** function _sprintf *****************
  6799 ;; Defined at:
  6800 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  s               2   62[BANK0 ] PTR unsigned char 
  6803 ;;		 -> decide_action@blue_val(20), decide_action@green_val(20), decide_action@red_val(20), 
  6804 ;;  fmt             1   64[BANK0 ] PTR const unsigned char 
  6805 ;;		 -> STR_3(14), STR_2(15), STR_1(13), 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  f              12   70[BANK0 ] struct _IO_FILE
  6808 ;;  ret             2    0        int 
  6809 ;;  ap              1   69[BANK0 ] PTR void [1]
  6810 ;;		 -> ?_sprintf(2), 
  6811 ;; Return value:  Size  Location     Type
  6812 ;;                  2   62[BANK0 ] int 
  6813 ;; Registers used:
  6814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6815 ;; Tracked objects:
  6816 ;;		On entry : 0/0
  6817 ;;		On exit  : 0/0
  6818 ;;		Unchanged: 0/0
  6819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6820 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6821 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6823 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6824 ;;Total ram usage:       20 bytes
  6825 ;; Hardware stack levels used: 1
  6826 ;; Hardware stack levels required when called: 9
  6827 ;; This function calls:
  6828 ;;		_vfprintf
  6829 ;; This function is called by:
  6830 ;;		_decide_action
  6831 ;; This function uses a non-reentrant model
  6832 ;;
  6833                           
  6834                           	psect	text19
  6835   008236                     __ptext19:
  6836                           	callstack 0
  6837   008236                     _sprintf:
  6838                           	callstack 20
  6839   008236  0EA1               	movlw	low (?_sprintf+3)
  6840   008238  0100               	movlb	0	; () banked
  6841   00823A  6FA5               	movwf	sprintf@ap& (0+255),b
  6842   00823C  C09E  F0A6         	movff	sprintf@s,sprintf@f
  6843   008240  C09F  F0A7         	movff	sprintf@s+1,sprintf@f+1
  6844   008244                     
  6845                           ; BSR set to: 0
  6846   008244  0E00               	movlw	0
  6847   008246  6FAA               	movwf	(sprintf@f+4)& (0+255),b
  6848   008248  0E00               	movlw	0
  6849   00824A  6FA9               	movwf	(sprintf@f+3)& (0+255),b
  6850   00824C                     
  6851                           ; BSR set to: 0
  6852   00824C  0E00               	movlw	0
  6853   00824E  6FB1               	movwf	(sprintf@f+11)& (0+255),b
  6854   008250  0E00               	movlw	0
  6855   008252  6FB0               	movwf	(sprintf@f+10)& (0+255),b
  6856   008254                     
  6857                           ; BSR set to: 0
  6858   008254  0EA6               	movlw	low sprintf@f
  6859   008256  6F9B               	movwf	vfprintf@fp& (0+255),b
  6860   008258  C0A0  F09C         	movff	sprintf@fmt,vfprintf@fmt
  6861   00825C  0EA5               	movlw	low sprintf@ap
  6862   00825E  6F9D               	movwf	vfprintf@ap& (0+255),b
  6863   008260  ECB4  F040         	call	_vfprintf	;wreg free
  6864   008264  0100               	movlb	0	; () banked
  6865   008266  51A9               	movf	(sprintf@f+3)& (0+255),w,b
  6866   008268  259E               	addwf	sprintf@s& (0+255),w,b
  6867   00826A  6ED9               	movwf	fsr2l,c
  6868   00826C  51AA               	movf	(sprintf@f+4)& (0+255),w,b
  6869   00826E  219F               	addwfc	(sprintf@s+1)& (0+255),w,b
  6870   008270  6EDA               	movwf	fsr2h,c
  6871   008272  6ADF               	clrf	indf2,c
  6872   008274                     
  6873                           ; BSR set to: 0
  6874   008274  0012               	return		;funcret
  6875   008276                     __end_of_sprintf:
  6876                           	callstack 0
  6877                           
  6878 ;; *************** function _vfprintf *****************
  6879 ;; Defined at:
  6880 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;  fp              1   59[BANK0 ] PTR struct _IO_FILE
  6883 ;;		 -> sprintf@f(12), 
  6884 ;;  fmt             1   60[BANK0 ] PTR const unsigned char 
  6885 ;;		 -> STR_3(14), STR_2(15), STR_1(13), 
  6886 ;;  ap              1   61[BANK0 ] PTR PTR void 
  6887 ;;		 -> sprintf@ap(1), 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;  cfmt            1   91[COMRAM] PTR unsigned char 
  6890 ;;		 -> STR_3(14), STR_2(15), STR_1(13), 
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  2   59[BANK0 ] int 
  6893 ;; Registers used:
  6894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6900 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6903 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6904 ;;Total ram usage:        4 bytes
  6905 ;; Hardware stack levels used: 1
  6906 ;; Hardware stack levels required when called: 8
  6907 ;; This function calls:
  6908 ;;		_vfpfcnvrt
  6909 ;; This function is called by:
  6910 ;;		_sprintf
  6911 ;; This function uses a non-reentrant model
  6912 ;;
  6913                           
  6914                           	psect	text20
  6915   008168                     __ptext20:
  6916                           	callstack 0
  6917   008168                     _vfprintf:
  6918                           	callstack 20
  6919   008168                     
  6920                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6921   008168  C09C  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  6922                           
  6923                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6924   00816C  EFC1  F040         	goto	l7680
  6925   008170                     l7678:
  6926                           
  6927                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6928   008170  C09B  F092         	movff	vfprintf@fp,vfpfcnvrt@fp
  6929   008174  0E5C               	movlw	low vfprintf@cfmt
  6930   008176  0100               	movlb	0	; () banked
  6931   008178  6F93               	movwf	vfpfcnvrt@fmt& (0+255),b
  6932   00817A  C09D  F094         	movff	vfprintf@ap,vfpfcnvrt@ap
  6933   00817E  ECBC  F035         	call	_vfpfcnvrt	;wreg free
  6934   008182                     l7680:
  6935                           
  6936                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6937   008182  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  6938   008186                     	if	1	;There is more than 1 active tblptr byte
  6939   008186  0E0E               	movlw	high __smallconst
  6940   008188  6EF7               	movwf	tblptrh,c
  6941   00818A                     	endif
  6942   00818A                     	if	0	;tblptru may be non-zero
  6943   00818A                     	endif
  6944   00818A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6945   00818A  0E00               	movlw	low (__smallconst shr (0+16))
  6946   00818C  6EF8               	movwf	tblptru,c
  6947   00818E                     	endif
  6948   00818E  0008               	tblrd		*
  6949   008190  50F5               	movf	tablat,w,c
  6950   008192  0900               	iorlw	0
  6951   008194  A4D8               	btfss	status,2,c
  6952   008196  EFCF  F040         	goto	u8391
  6953   00819A  EFD1  F040         	goto	u8390
  6954   00819E                     u8391:
  6955   00819E  EFB8  F040         	goto	l7678
  6956   0081A2                     u8390:
  6957   0081A2                     
  6958                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6959   0081A2  0E00               	movlw	0
  6960   0081A4  0100               	movlb	0	; () banked
  6961   0081A6  6F9C               	movwf	(?_vfprintf+1)& (0+255),b
  6962   0081A8  0E00               	movlw	0
  6963   0081AA  6F9B               	movwf	?_vfprintf& (0+255),b
  6964   0081AC                     
  6965                           ; BSR set to: 0
  6966   0081AC  0012               	return		;funcret
  6967   0081AE                     __end_of_vfprintf:
  6968                           	callstack 0
  6969                           
  6970 ;; *************** function _vfpfcnvrt *****************
  6971 ;; Defined at:
  6972 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  fp              1   50[BANK0 ] PTR struct _IO_FILE
  6975 ;;		 -> sprintf@f(12), 
  6976 ;;  fmt             1   51[BANK0 ] PTR PTR unsigned char 
  6977 ;;		 -> vfprintf@cfmt(1), 
  6978 ;;  ap              1   52[BANK0 ] PTR PTR void 
  6979 ;;		 -> sprintf@ap(1), 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;  convarg         4   53[BANK0 ] struct .
  6982 ;;  cp              1   58[BANK0 ] PTR unsigned char 
  6983 ;;		 -> STR_3(14), STR_2(15), STR_1(13), 
  6984 ;;  c               1   57[BANK0 ] unsigned char 
  6985 ;;  done            1    0        _Bool 
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  1    wreg      void 
  6988 ;; Registers used:
  6989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6995 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6996 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6997 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6998 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6999 ;;Total ram usage:       11 bytes
  7000 ;; Hardware stack levels used: 1
  7001 ;; Hardware stack levels required when called: 7
  7002 ;; This function calls:
  7003 ;;		_efgtoa
  7004 ;;		_fputc
  7005 ;; This function is called by:
  7006 ;;		_vfprintf
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text21
  7011   006B78                     __ptext21:
  7012                           	callstack 0
  7013   006B78                     _vfpfcnvrt:
  7014                           	callstack 20
  7015   006B78                     
  7016                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  7017   006B78  0100               	movlb	0	; () banked
  7018   006B7A  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7019   006B7C  6ED9               	movwf	fsr2l,c
  7020   006B7E  6ADA               	clrf	fsr2h,c
  7021   006B80  CFDF FFF6          	movff	indf2,tblptrl
  7022   006B84                     	if	1	;There is more than 1 active tblptr byte
  7023   006B84  0E0E               	movlw	high __smallconst
  7024   006B86  6EF7               	movwf	tblptrh,c
  7025   006B88                     	endif
  7026   006B88                     	if	0	;tblptru may be non-zero
  7027   006B88                     	endif
  7028   006B88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7029   006B88  0E00               	movlw	low (__smallconst shr (0+16))
  7030   006B8A  6EF8               	movwf	tblptru,c
  7031   006B8C                     	endif
  7032   006B8C  0008               	tblrd		*
  7033   006B8E  50F5               	movf	tablat,w,c
  7034   006B90  0A25               	xorlw	37
  7035   006B92  A4D8               	btfss	status,2,c
  7036   006B94  EFCE  F035         	goto	u8371
  7037   006B98  EFD0  F035         	goto	u8370
  7038   006B9C                     u8371:
  7039   006B9C  EF9C  F036         	goto	l7658
  7040   006BA0                     u8370:
  7041   006BA0                     
  7042                           ; BSR set to: 0
  7043                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  7044   006BA0  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7045   006BA2  6ED9               	movwf	fsr2l,c
  7046   006BA4  6ADA               	clrf	fsr2h,c
  7047   006BA6  2ADF               	incf	indf2,f,c
  7048   006BA8                     
  7049                           ; BSR set to: 0
  7050                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  7051   006BA8  0E00               	movlw	0
  7052   006BAA  6FDB               	movwf	(_width+1)& (0+255),b
  7053   006BAC  0E00               	movlw	0
  7054   006BAE  6FDA               	movwf	_width& (0+255),b
  7055   006BB0  C0DA  F0DE         	movff	_width,_flags
  7056   006BB4                     
  7057                           ; BSR set to: 0
  7058                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  7059   006BB4  69DC               	setf	_prec& (0+255),b
  7060   006BB6  69DD               	setf	(_prec+1)& (0+255),b
  7061   006BB8                     
  7062                           ; BSR set to: 0
  7063                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  7064   006BB8  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7065   006BBA  6ED9               	movwf	fsr2l,c
  7066   006BBC  6ADA               	clrf	fsr2h,c
  7067   006BBE  50DF               	movf	indf2,w,c
  7068   006BC0  6F9A               	movwf	vfpfcnvrt@cp& (0+255),b
  7069   006BC2                     
  7070                           ; BSR set to: 0
  7071                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  7072   006BC2  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7073   006BC6                     	if	1	;There is more than 1 active tblptr byte
  7074   006BC6  0E0E               	movlw	high __smallconst
  7075   006BC8  6EF7               	movwf	tblptrh,c
  7076   006BCA                     	endif
  7077   006BCA                     	if	0	;tblptru may be non-zero
  7078   006BCA                     	endif
  7079   006BCA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7080   006BCA  0E00               	movlw	low (__smallconst shr (0+16))
  7081   006BCC  6EF8               	movwf	tblptru,c
  7082   006BCE                     	endif
  7083   006BCE  0008               	tblrd		*
  7084   006BD0  CFF5 F099          	movff	tablat,vfpfcnvrt@c
  7085                           
  7086                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  7087   006BD4  EFF7  F035         	goto	l7632
  7088   006BD8                     l7624:
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  7092   006BD8  2B9A               	incf	vfpfcnvrt@cp& (0+255),f,b
  7093                           
  7094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  7095   006BDA  EF10  F036         	goto	l7634
  7096   006BDE                     l7626:
  7097                           
  7098                           ; BSR set to: 0
  7099                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  7100   006BDE  0E6C               	movlw	108
  7101   006BE0  6F99               	movwf	vfpfcnvrt@c& (0+255),b
  7102                           
  7103                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  7104   006BE2  EF10  F036         	goto	l7634
  7105   006BE6                     l7628:
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  7109   006BE6  0E00               	movlw	0
  7110   006BE8  6F99               	movwf	vfpfcnvrt@c& (0+255),b
  7111                           
  7112                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  7113   006BEA  EF10  F036         	goto	l7634
  7114   006BEE                     l7632:
  7115                           
  7116                           ; BSR set to: 0
  7117   006BEE  5199               	movf	vfpfcnvrt@c& (0+255),w,b
  7118   006BF0  6E5A               	movwf	??_vfpfcnvrt^0,c
  7119   006BF2  6A5B               	clrf	(??_vfpfcnvrt+1)^0,c
  7120                           
  7121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7122                           ; Switch size 1, requested type "simple"
  7123                           ; Number of cases is 1, Range of values is 0 to 0
  7124                           ; switch strategies available:
  7125                           ; Name         Instructions Cycles
  7126                           ; simple_byte            4     3 (average)
  7127                           ;	Chosen strategy is simple_byte
  7128   006BF4  505B               	movf	(??_vfpfcnvrt+1)^0,w,c
  7129   006BF6  0A00               	xorlw	0	; case 0
  7130   006BF8  B4D8               	btfsc	status,2,c
  7131   006BFA  EF01  F036         	goto	l8648
  7132   006BFE  EFF3  F035         	goto	l7628
  7133   006C02                     l8648:
  7134                           
  7135                           ; BSR set to: 0
  7136                           ; Switch size 1, requested type "simple"
  7137                           ; Number of cases is 3, Range of values is 76 to 108
  7138                           ; switch strategies available:
  7139                           ; Name         Instructions Cycles
  7140                           ; simple_byte           10     6 (average)
  7141                           ;	Chosen strategy is simple_byte
  7142   006C02  505A               	movf	??_vfpfcnvrt^0,w,c
  7143   006C04  0A4C               	xorlw	76	; case 76
  7144   006C06  B4D8               	btfsc	status,2,c
  7145   006C08  EFEC  F035         	goto	l7624
  7146   006C0C  0A2A               	xorlw	42	; case 102
  7147   006C0E  B4D8               	btfsc	status,2,c
  7148   006C10  EFEF  F035         	goto	l7626
  7149   006C14  0A0A               	xorlw	10	; case 108
  7150   006C16  B4D8               	btfsc	status,2,c
  7151   006C18  EFEC  F035         	goto	l7624
  7152   006C1C  EFF3  F035         	goto	l7628
  7153   006C20                     l7634:
  7154                           
  7155                           ; BSR set to: 0
  7156   006C20  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7157   006C24                     	if	1	;There is more than 1 active tblptr byte
  7158   006C24  0E0E               	movlw	high __smallconst
  7159   006C26  6EF7               	movwf	tblptrh,c
  7160   006C28                     	endif
  7161   006C28                     	if	0	;tblptru may be non-zero
  7162   006C28                     	endif
  7163   006C28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7164   006C28  0E00               	movlw	low (__smallconst shr (0+16))
  7165   006C2A  6EF8               	movwf	tblptru,c
  7166   006C2C                     	endif
  7167   006C2C  0008               	tblrd		*
  7168   006C2E  50F5               	movf	tablat,w,c
  7169   006C30  0A66               	xorlw	102
  7170   006C32  A4D8               	btfss	status,2,c
  7171   006C34  EF1E  F036         	goto	u8381
  7172   006C38  EF20  F036         	goto	u8380
  7173   006C3C                     u8381:
  7174   006C3C  EF95  F036         	goto	l7654
  7175   006C40                     u8380:
  7176   006C40  EF4A  F036         	goto	l7642
  7177   006C44                     l7636:
  7178                           
  7179                           ; BSR set to: 0
  7180                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7181   006C44  5194               	movf	vfpfcnvrt@ap& (0+255),w,b
  7182   006C46  6ED9               	movwf	fsr2l,c
  7183   006C48  6ADA               	clrf	fsr2h,c
  7184   006C4A  CFDF F05A          	movff	indf2,??_vfpfcnvrt
  7185   006C4E  0E04               	movlw	4
  7186   006C50  26DF               	addwf	indf2,f,c
  7187   006C52  505A               	movf	??_vfpfcnvrt^0,w,c
  7188   006C54  6ED9               	movwf	fsr2l,c
  7189   006C56  6ADA               	clrf	fsr2h,c
  7190   006C58  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg
  7191   006C5C  CFDE F096          	movff	postinc2,vfpfcnvrt@convarg+1
  7192   006C60  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg+2
  7193   006C64  CFDE F098          	movff	postinc2,vfpfcnvrt@convarg+3
  7194                           
  7195                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  7196   006C68  EF5F  F036         	goto	l7644
  7197   006C6C                     l7638:
  7198                           
  7199                           ; BSR set to: 0
  7200                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7201   006C6C  5194               	movf	vfpfcnvrt@ap& (0+255),w,b
  7202   006C6E  6ED9               	movwf	fsr2l,c
  7203   006C70  6ADA               	clrf	fsr2h,c
  7204   006C72  CFDF F05A          	movff	indf2,??_vfpfcnvrt
  7205   006C76  0E04               	movlw	4
  7206   006C78  26DF               	addwf	indf2,f,c
  7207   006C7A  505A               	movf	??_vfpfcnvrt^0,w,c
  7208   006C7C  6ED9               	movwf	fsr2l,c
  7209   006C7E  6ADA               	clrf	fsr2h,c
  7210   006C80  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg
  7211   006C84  CFDE F096          	movff	postinc2,vfpfcnvrt@convarg+1
  7212   006C88  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg+2
  7213   006C8C  CFDE F098          	movff	postinc2,vfpfcnvrt@convarg+3
  7214                           
  7215                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  7216   006C90  EF5F  F036         	goto	l7644
  7217   006C94                     l7642:
  7218                           
  7219                           ; BSR set to: 0
  7220   006C94  5199               	movf	vfpfcnvrt@c& (0+255),w,b
  7221   006C96  6E5A               	movwf	??_vfpfcnvrt^0,c
  7222   006C98  6A5B               	clrf	(??_vfpfcnvrt+1)^0,c
  7223                           
  7224                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7225                           ; Switch size 1, requested type "simple"
  7226                           ; Number of cases is 1, Range of values is 0 to 0
  7227                           ; switch strategies available:
  7228                           ; Name         Instructions Cycles
  7229                           ; simple_byte            4     3 (average)
  7230                           ;	Chosen strategy is simple_byte
  7231   006C9A  505B               	movf	(??_vfpfcnvrt+1)^0,w,c
  7232   006C9C  0A00               	xorlw	0	; case 0
  7233   006C9E  B4D8               	btfsc	status,2,c
  7234   006CA0  EF54  F036         	goto	l8650
  7235   006CA4  EF5F  F036         	goto	l7644
  7236   006CA8                     l8650:
  7237                           
  7238                           ; BSR set to: 0
  7239                           ; Switch size 1, requested type "simple"
  7240                           ; Number of cases is 2, Range of values is 76 to 108
  7241                           ; switch strategies available:
  7242                           ; Name         Instructions Cycles
  7243                           ; simple_byte            7     4 (average)
  7244                           ;	Chosen strategy is simple_byte
  7245   006CA8  505A               	movf	??_vfpfcnvrt^0,w,c
  7246   006CAA  0A4C               	xorlw	76	; case 76
  7247   006CAC  B4D8               	btfsc	status,2,c
  7248   006CAE  EF36  F036         	goto	l7638
  7249   006CB2  0A20               	xorlw	32	; case 108
  7250   006CB4  B4D8               	btfsc	status,2,c
  7251   006CB6  EF22  F036         	goto	l7636
  7252   006CBA  EF5F  F036         	goto	l7644
  7253   006CBE                     l7644:
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  7257   006CBE  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7258   006CC0  6ED9               	movwf	fsr2l,c
  7259   006CC2  6ADA               	clrf	fsr2h,c
  7260   006CC4  299A               	incf	vfpfcnvrt@cp& (0+255),w,b
  7261   006CC6  6EDF               	movwf	indf2,c
  7262                           
  7263                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  7264   006CC8  EF7D  F036         	goto	l7652
  7265   006CCC                     l7646:
  7266                           
  7267                           ; BSR set to: 0
  7268                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  7269   006CCC  C092  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  7270   006CD0  C095  F061         	movff	vfpfcnvrt@convarg,efgtoa@f
  7271   006CD4  C096  F062         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  7272   006CD8  C097  F063         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  7273   006CDC  C098  F064         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  7274   006CE0  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7275   006CE4                     	if	1	;There is more than 1 active tblptr byte
  7276   006CE4  0E0E               	movlw	high __smallconst
  7277   006CE6  6EF7               	movwf	tblptrh,c
  7278   006CE8                     	endif
  7279   006CE8                     	if	0	;tblptru may be non-zero
  7280   006CE8                     	endif
  7281   006CE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7282   006CE8  0E00               	movlw	low (__smallconst shr (0+16))
  7283   006CEA  6EF8               	movwf	tblptru,c
  7284   006CEC                     	endif
  7285   006CEC  0008               	tblrd		*
  7286   006CEE  CFF5 F065          	movff	tablat,efgtoa@c
  7287   006CF2  ECD4  F022         	call	_efgtoa	;wreg free
  7288   006CF6  EFAF  F036         	goto	l1345
  7289   006CFA                     l7652:
  7290                           
  7291                           ; BSR set to: 0
  7292   006CFA  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7293   006CFE                     	if	1	;There is more than 1 active tblptr byte
  7294   006CFE  0E0E               	movlw	high __smallconst
  7295   006D00  6EF7               	movwf	tblptrh,c
  7296   006D02                     	endif
  7297   006D02                     	if	0	;tblptru may be non-zero
  7298   006D02                     	endif
  7299   006D02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7300   006D02  0E00               	movlw	low (__smallconst shr (0+16))
  7301   006D04  6EF8               	movwf	tblptru,c
  7302   006D06                     	endif
  7303   006D06  0008               	tblrd		*
  7304   006D08  50F5               	movf	tablat,w,c
  7305   006D0A  6E5A               	movwf	??_vfpfcnvrt^0,c
  7306   006D0C  6A5B               	clrf	(??_vfpfcnvrt+1)^0,c
  7307                           
  7308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7309                           ; Switch size 1, requested type "simple"
  7310                           ; Number of cases is 1, Range of values is 0 to 0
  7311                           ; switch strategies available:
  7312                           ; Name         Instructions Cycles
  7313                           ; simple_byte            4     3 (average)
  7314                           ;	Chosen strategy is simple_byte
  7315   006D0E  505B               	movf	(??_vfpfcnvrt+1)^0,w,c
  7316   006D10  0A00               	xorlw	0	; case 0
  7317   006D12  B4D8               	btfsc	status,2,c
  7318   006D14  EF8E  F036         	goto	l8652
  7319   006D18  EF95  F036         	goto	l7654
  7320   006D1C                     l8652:
  7321                           
  7322                           ; BSR set to: 0
  7323                           ; Switch size 1, requested type "simple"
  7324                           ; Number of cases is 1, Range of values is 102 to 102
  7325                           ; switch strategies available:
  7326                           ; Name         Instructions Cycles
  7327                           ; simple_byte            4     3 (average)
  7328                           ;	Chosen strategy is simple_byte
  7329   006D1C  505A               	movf	??_vfpfcnvrt^0,w,c
  7330   006D1E  0A66               	xorlw	102	; case 102
  7331   006D20  B4D8               	btfsc	status,2,c
  7332   006D22  EF66  F036         	goto	l7646
  7333   006D26  EF95  F036         	goto	l7654
  7334   006D2A                     l7654:
  7335                           
  7336                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7337   006D2A  0100               	movlb	0	; () banked
  7338   006D2C  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7339   006D2E  6ED9               	movwf	fsr2l,c
  7340   006D30  6ADA               	clrf	fsr2h,c
  7341   006D32  2ADF               	incf	indf2,f,c
  7342   006D34  EFAF  F036         	goto	l1345
  7343   006D38                     l7658:
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7347   006D38  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7348   006D3A  6ED9               	movwf	fsr2l,c
  7349   006D3C  6ADA               	clrf	fsr2h,c
  7350   006D3E  CFDF FFF6          	movff	indf2,tblptrl
  7351   006D42                     	if	1	;There is more than 1 active tblptr byte
  7352   006D42  0E0E               	movlw	high __smallconst
  7353   006D44  6EF7               	movwf	tblptrh,c
  7354   006D46                     	endif
  7355   006D46                     	if	0	;tblptru may be non-zero
  7356   006D46                     	endif
  7357   006D46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7358   006D46  0E00               	movlw	low (__smallconst shr (0+16))
  7359   006D48  6EF8               	movwf	tblptru,c
  7360   006D4A                     	endif
  7361   006D4A  0008               	tblrd		*
  7362   006D4C  50F5               	movf	tablat,w,c
  7363   006D4E  6E02               	movwf	fputc@c^0,c
  7364   006D50  6A03               	clrf	(fputc@c+1)^0,c
  7365   006D52  C092  F004         	movff	vfpfcnvrt@fp,fputc@fp
  7366   006D56  EC71  F03D         	call	_fputc	;wreg free
  7367   006D5A  EF95  F036         	goto	l7654
  7368   006D5E                     l1345:
  7369   006D5E  0012               	return		;funcret
  7370   006D60                     __end_of_vfpfcnvrt:
  7371                           	callstack 0
  7372                           
  7373 ;; *************** function _efgtoa *****************
  7374 ;; Defined at:
  7375 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  7378 ;;		 -> sprintf@f(12), 
  7379 ;;  f               4    1[BANK0 ] PTR struct _IO_FILE
  7380 ;;  c               1    5[BANK0 ] unsigned char 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  u               4   46[BANK0 ] struct flui
  7383 ;;  g               4   40[BANK0 ] struct flui
  7384 ;;  l               4   35[BANK0 ] struct flui
  7385 ;;  h               4   31[BANK0 ] struct flui
  7386 ;;  ou              4   25[BANK0 ] struct flui
  7387 ;;  n               2   44[BANK0 ] int 
  7388 ;;  i               2   29[BANK0 ] int 
  7389 ;;  w               2   23[BANK0 ] int 
  7390 ;;  e               2   21[BANK0 ] int 
  7391 ;;  m               2   19[BANK0 ] int 
  7392 ;;  d               2   17[BANK0 ] int 
  7393 ;;  t               2   10[BANK0 ] int 
  7394 ;;  p               2    8[BANK0 ] int 
  7395 ;;  ne              2    6[BANK0 ] int 
  7396 ;;  sign            1   39[BANK0 ] unsigned char 
  7397 ;;  nmode           1   16[BANK0 ] unsigned char 
  7398 ;;  mode            1   15[BANK0 ] unsigned char 
  7399 ;;  pp              1   14[BANK0 ] unsigned char 
  7400 ;;  esign           1    0        unsigned char 
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  1    wreg      void 
  7403 ;; Registers used:
  7404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7405 ;; Tracked objects:
  7406 ;;		On entry : 0/0
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7410 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7411 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7412 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7413 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7414 ;;Total ram usage:       52 bytes
  7415 ;; Hardware stack levels used: 1
  7416 ;; Hardware stack levels required when called: 6
  7417 ;; This function calls:
  7418 ;;		___fladd
  7419 ;;		___fldiv
  7420 ;;		___fleq
  7421 ;;		___flge
  7422 ;;		___flmul
  7423 ;;		___flneg
  7424 ;;		___flsub
  7425 ;;		___fltol
  7426 ;;		___fpclassifyf
  7427 ;;		_floorf
  7428 ;;		_labs
  7429 ;;		_memcpy
  7430 ;;		_pad
  7431 ;;		_strcpy
  7432 ;; This function is called by:
  7433 ;;		_vfpfcnvrt
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text22
  7438   0045A8                     __ptext22:
  7439                           	callstack 0
  7440   0045A8                     _efgtoa:
  7441                           	callstack 20
  7442   0045A8                     
  7443                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  7444   0045A8  0E00               	movlw	0
  7445   0045AA  0100               	movlb	0	; () banked
  7446   0045AC  6F87               	movwf	efgtoa@sign& (0+255),b
  7447   0045AE                     
  7448                           ; BSR set to: 0
  7449                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  7450   0045AE  C061  F088         	movff	efgtoa@f,efgtoa@g
  7451   0045B2  C062  F089         	movff	efgtoa@f+1,efgtoa@g+1
  7452   0045B6  C063  F08A         	movff	efgtoa@f+2,efgtoa@g+2
  7453   0045BA  C064  F08B         	movff	efgtoa@f+3,efgtoa@g+3
  7454   0045BE                     
  7455                           ; BSR set to: 0
  7456                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  7457   0045BE  BF8B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7458   0045C0  EFE6  F022         	goto	u8050
  7459   0045C4  EFE4  F022         	goto	u8051
  7460   0045C8                     u8051:
  7461   0045C8  EFFA  F022         	goto	l7400
  7462   0045CC                     u8050:
  7463   0045CC                     
  7464                           ; BSR set to: 0
  7465                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  7466   0045CC  0E01               	movlw	1
  7467   0045CE  6F87               	movwf	efgtoa@sign& (0+255),b
  7468   0045D0                     
  7469                           ; BSR set to: 0
  7470                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  7471   0045D0  C088  F002         	movff	efgtoa@g,___flneg@f1
  7472   0045D4  C089  F003         	movff	efgtoa@g+1,___flneg@f1+1
  7473   0045D8  C08A  F004         	movff	efgtoa@g+2,___flneg@f1+2
  7474   0045DC  C08B  F005         	movff	efgtoa@g+3,___flneg@f1+3
  7475   0045E0  EC7A  F041         	call	___flneg	;wreg free
  7476   0045E4  C002  F088         	movff	?___flneg,efgtoa@g
  7477   0045E8  C003  F089         	movff	?___flneg+1,efgtoa@g+1
  7478   0045EC  C004  F08A         	movff	?___flneg+2,efgtoa@g+2
  7479   0045F0  C005  F08B         	movff	?___flneg+3,efgtoa@g+3
  7480   0045F4                     l7400:
  7481                           
  7482                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  7483   0045F4  0E00               	movlw	0
  7484   0045F6  0100               	movlb	0	; () banked
  7485   0045F8  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  7486   0045FA  0E00               	movlw	0
  7487   0045FC  6F8C               	movwf	efgtoa@n& (0+255),b
  7488   0045FE                     
  7489                           ; BSR set to: 0
  7490                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  7491   0045FE  C0DA  F077         	movff	_width,efgtoa@w
  7492   004602  C0DB  F078         	movff	_width+1,efgtoa@w+1
  7493   004606                     
  7494                           ; BSR set to: 0
  7495                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  7496   004606  5187               	movf	efgtoa@sign& (0+255),w,b
  7497   004608  B4D8               	btfsc	status,2,c
  7498   00460A  EF09  F023         	goto	u8061
  7499   00460E  EF0B  F023         	goto	u8060
  7500   004612                     u8061:
  7501   004612  EF1F  F023         	goto	l7414
  7502   004616                     u8060:
  7503   004616                     
  7504                           ; BSR set to: 0
  7505                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  7506   004616  5187               	movf	efgtoa@sign& (0+255),w,b
  7507   004618  A4D8               	btfss	status,2,c
  7508   00461A  EF11  F023         	goto	u8071
  7509   00461E  EF13  F023         	goto	u8070
  7510   004622                     u8071:
  7511   004622  EF19  F023         	goto	l7410
  7512   004626                     u8070:
  7513   004626                     
  7514                           ; BSR set to: 0
  7515   004626  0E00               	movlw	0
  7516   004628  6F6D               	movwf	(_efgtoa$2679+1)& (0+255),b
  7517   00462A  0E2B               	movlw	43
  7518   00462C  6F6C               	movwf	_efgtoa$2679& (0+255),b
  7519   00462E  EF1D  F023         	goto	l7412
  7520   004632                     l7410:
  7521                           
  7522                           ; BSR set to: 0
  7523   004632  0E00               	movlw	0
  7524   004634  6F6D               	movwf	(_efgtoa$2679+1)& (0+255),b
  7525   004636  0E2D               	movlw	45
  7526   004638  6F6C               	movwf	_efgtoa$2679& (0+255),b
  7527   00463A                     l7412:
  7528                           
  7529                           ; BSR set to: 0
  7530   00463A  C06C  F087         	movff	_efgtoa$2679,efgtoa@sign
  7531   00463E                     l7414:
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  7535   00463E  C088  F002         	movff	efgtoa@g,___fpclassifyf@x
  7536   004642  C089  F003         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7537   004646  C08A  F004         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7538   00464A  C08B  F005         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7539   00464E  EC49  F03A         	call	___fpclassifyf	;wreg free
  7540   004652  0402               	decf	?___fpclassifyf^0,w,c
  7541   004654  1003               	iorwf	(?___fpclassifyf+1)^0,w,c
  7542   004656  A4D8               	btfss	status,2,c
  7543   004658  EF30  F023         	goto	u8081
  7544   00465C  EF32  F023         	goto	u8080
  7545   004660                     u8081:
  7546   004660  EF61  F023         	goto	l7432
  7547   004664                     u8080:
  7548   004664                     
  7549                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  7550   004664  0100               	movlb	0	; () banked
  7551   004666  5187               	movf	efgtoa@sign& (0+255),w,b
  7552   004668  B4D8               	btfsc	status,2,c
  7553   00466A  EF39  F023         	goto	u8091
  7554   00466E  EF3B  F023         	goto	u8090
  7555   004672                     u8091:
  7556   004672  EF44  F023         	goto	l7424
  7557   004676                     u8090:
  7558   004676                     
  7559                           ; BSR set to: 0
  7560                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  7561   004676  C087  F400         	movff	efgtoa@sign,_dbuf
  7562   00467A                     
  7563                           ; BSR set to: 0
  7564                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  7565   00467A  0777               	decf	efgtoa@w& (0+255),f,b
  7566   00467C  A0D8               	btfss	status,0,c
  7567   00467E  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  7568   004680                     
  7569                           ; BSR set to: 0
  7570                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  7571   004680  0E00               	movlw	0
  7572   004682  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  7573   004684  0E01               	movlw	1
  7574   004686  6F8C               	movwf	efgtoa@n& (0+255),b
  7575   004688                     l7424:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  7579   004688  0E00               	movlw	low _dbuf
  7580   00468A  258C               	addwf	efgtoa@n& (0+255),w,b
  7581   00468C  6E02               	movwf	strcpy@dest^0,c
  7582   00468E  0E04               	movlw	high _dbuf
  7583   004690  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7584   004692  6E03               	movwf	(strcpy@dest+1)^0,c
  7585   004694  0E9B               	movlw	low STR_4
  7586   004696  6E04               	movwf	strcpy@src^0,c
  7587   004698  EC5B  F041         	call	_strcpy	;wreg free
  7588   00469C                     l7426:
  7589                           
  7590                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  7591   00469C  0100               	movlb	0	; () banked
  7592   00469E  0EFD               	movlw	253
  7593   0046A0  2777               	addwf	efgtoa@w& (0+255),f,b
  7594   0046A2  0EFF               	movlw	255
  7595   0046A4  2378               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7596   0046A6                     
  7597                           ; BSR set to: 0
  7598                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  7599   0046A6  C060  F010         	movff	efgtoa@fp,pad@fp
  7600   0046AA  0E00               	movlw	low _dbuf
  7601   0046AC  6E11               	movwf	pad@buf^0,c
  7602   0046AE  0E04               	movlw	high _dbuf
  7603   0046B0  6E12               	movwf	(pad@buf+1)^0,c
  7604   0046B2  C077  F013         	movff	efgtoa@w,pad@p
  7605   0046B6  C078  F014         	movff	efgtoa@w+1,pad@p+1
  7606   0046BA  EC36  F03F         	call	_pad	;wreg free
  7607   0046BE  EFC7  F027         	goto	l1285
  7608   0046C2                     l7432:
  7609                           
  7610                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  7611   0046C2  C088  F002         	movff	efgtoa@g,___fpclassifyf@x
  7612   0046C6  C089  F003         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7613   0046CA  C08A  F004         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7614   0046CE  C08B  F005         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7615   0046D2  EC49  F03A         	call	___fpclassifyf	;wreg free
  7616   0046D6  5002               	movf	?___fpclassifyf^0,w,c
  7617   0046D8  1003               	iorwf	(?___fpclassifyf+1)^0,w,c
  7618   0046DA  A4D8               	btfss	status,2,c
  7619   0046DC  EF72  F023         	goto	u8101
  7620   0046E0  EF74  F023         	goto	u8100
  7621   0046E4                     u8101:
  7622   0046E4  EF92  F023         	goto	l7450
  7623   0046E8                     u8100:
  7624   0046E8                     
  7625                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  7626   0046E8  0100               	movlb	0	; () banked
  7627   0046EA  5187               	movf	efgtoa@sign& (0+255),w,b
  7628   0046EC  B4D8               	btfsc	status,2,c
  7629   0046EE  EF7B  F023         	goto	u8111
  7630   0046F2  EF7D  F023         	goto	u8110
  7631   0046F6                     u8111:
  7632   0046F6  EF86  F023         	goto	l7442
  7633   0046FA                     u8110:
  7634   0046FA                     
  7635                           ; BSR set to: 0
  7636                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  7637   0046FA  C087  F400         	movff	efgtoa@sign,_dbuf
  7638   0046FE                     
  7639                           ; BSR set to: 0
  7640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  7641   0046FE  0777               	decf	efgtoa@w& (0+255),f,b
  7642   004700  A0D8               	btfss	status,0,c
  7643   004702  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  7644   004704                     
  7645                           ; BSR set to: 0
  7646                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  7647   004704  0E00               	movlw	0
  7648   004706  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  7649   004708  0E01               	movlw	1
  7650   00470A  6F8C               	movwf	efgtoa@n& (0+255),b
  7651   00470C                     l7442:
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  7655   00470C  0E00               	movlw	low _dbuf
  7656   00470E  258C               	addwf	efgtoa@n& (0+255),w,b
  7657   004710  6E02               	movwf	strcpy@dest^0,c
  7658   004712  0E04               	movlw	high _dbuf
  7659   004714  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7660   004716  6E03               	movwf	(strcpy@dest+1)^0,c
  7661   004718  0E9F               	movlw	low STR_7
  7662   00471A  6E04               	movwf	strcpy@src^0,c
  7663   00471C  EC5B  F041         	call	_strcpy	;wreg free
  7664   004720  EF4E  F023         	goto	l7426
  7665   004724                     l7450:
  7666                           
  7667                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  7668   004724  0E00               	movlw	0
  7669   004726  0100               	movlb	0	; () banked
  7670   004728  6F8E               	movwf	efgtoa@u& (0+255),b
  7671   00472A  0E00               	movlw	0
  7672   00472C  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  7673   00472E  0E80               	movlw	128
  7674   004730  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  7675   004732  0E3F               	movlw	63
  7676   004734  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  7677                           
  7678                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  7679   004736  0E00               	movlw	0
  7680   004738  6F76               	movwf	(efgtoa@e+1)& (0+255),b
  7681   00473A  0E00               	movlw	0
  7682   00473C  6F75               	movwf	efgtoa@e& (0+255),b
  7683   00473E                     
  7684                           ; BSR set to: 0
  7685                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  7686   00473E  C088  F002         	movff	efgtoa@g,___fleq@ff1
  7687   004742  C089  F003         	movff	efgtoa@g+1,___fleq@ff1+1
  7688   004746  C08A  F004         	movff	efgtoa@g+2,___fleq@ff1+2
  7689   00474A  C08B  F005         	movff	efgtoa@g+3,___fleq@ff1+3
  7690   00474E  0E00               	movlw	0
  7691   004750  6E06               	movwf	___fleq@ff2^0,c
  7692   004752  0E00               	movlw	0
  7693   004754  6E07               	movwf	(___fleq@ff2+1)^0,c
  7694   004756  0E00               	movlw	0
  7695   004758  6E08               	movwf	(___fleq@ff2+2)^0,c
  7696   00475A  0E00               	movlw	0
  7697   00475C  6E09               	movwf	(___fleq@ff2+3)^0,c
  7698   00475E  ECCE  F03D         	call	___fleq	;wreg free
  7699   004762  B0D8               	btfsc	status,0,c
  7700   004764  EFB6  F023         	goto	u8121
  7701   004768  EFB8  F023         	goto	u8120
  7702   00476C                     u8121:
  7703   00476C  EF97  F024         	goto	l1288
  7704   004770                     u8120:
  7705   004770  EFC5  F023         	goto	l7458
  7706   004774                     l1290:
  7707                           
  7708                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  7709   004774  C079  F08E         	movff	efgtoa@ou,efgtoa@u
  7710   004778  C07A  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  7711   00477C  C07B  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  7712   004780  C07C  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  7713   004784                     
  7714                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  7715   004784  0100               	movlb	0	; () banked
  7716   004786  4B75               	infsnz	efgtoa@e& (0+255),f,b
  7717   004788  2B76               	incf	(efgtoa@e+1)& (0+255),f,b
  7718   00478A                     l7458:
  7719                           
  7720                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  7721   00478A  C08E  F012         	movff	efgtoa@u,___flmul@b
  7722   00478E  C08F  F013         	movff	efgtoa@u+1,___flmul@b+1
  7723   004792  C090  F014         	movff	efgtoa@u+2,___flmul@b+2
  7724   004796  C091  F015         	movff	efgtoa@u+3,___flmul@b+3
  7725   00479A  0E00               	movlw	0
  7726   00479C  6E16               	movwf	___flmul@a^0,c
  7727   00479E  0E00               	movlw	0
  7728   0047A0  6E17               	movwf	(___flmul@a+1)^0,c
  7729   0047A2  0E20               	movlw	32
  7730   0047A4  6E18               	movwf	(___flmul@a+2)^0,c
  7731   0047A6  0E41               	movlw	65
  7732   0047A8  6E19               	movwf	(___flmul@a+3)^0,c
  7733   0047AA  ECC8  F02D         	call	___flmul	;wreg free
  7734   0047AE  C012  F079         	movff	?___flmul,efgtoa@ou
  7735   0047B2  C013  F07A         	movff	?___flmul+1,efgtoa@ou+1
  7736   0047B6  C014  F07B         	movff	?___flmul+2,efgtoa@ou+2
  7737   0047BA  C015  F07C         	movff	?___flmul+3,efgtoa@ou+3
  7738   0047BE  0100               	movlb	0	; () banked
  7739   0047C0  5179               	movf	efgtoa@ou& (0+255),w,b
  7740   0047C2  5D88               	subwf	efgtoa@g& (0+255),w,b
  7741   0047C4  6E02               	movwf	labs@a^0,c
  7742   0047C6  517A               	movf	(efgtoa@ou+1)& (0+255),w,b
  7743   0047C8  5989               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7744   0047CA  6E03               	movwf	(labs@a+1)^0,c
  7745   0047CC  517B               	movf	(efgtoa@ou+2)& (0+255),w,b
  7746   0047CE  598A               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7747   0047D0  6E04               	movwf	(labs@a+2)^0,c
  7748   0047D2  517C               	movf	(efgtoa@ou+3)& (0+255),w,b
  7749   0047D4  598B               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7750   0047D6  6E05               	movwf	(labs@a+3)^0,c
  7751   0047D8  EC9C  F03F         	call	_labs	;wreg free
  7752   0047DC  BE05               	btfsc	(?_labs+3)^0,7,c
  7753   0047DE  EFFC  F023         	goto	u8131
  7754   0047E2  5005               	movf	(?_labs+3)^0,w,c
  7755   0047E4  1004               	iorwf	(?_labs+2)^0,w,c
  7756   0047E6  1003               	iorwf	(?_labs+1)^0,w,c
  7757   0047E8  E109               	bnz	u8130
  7758   0047EA  0E02               	movlw	2
  7759   0047EC  5C02               	subwf	?_labs^0,w,c
  7760   0047EE  A0D8               	btfss	status,0,c
  7761   0047F0  EFFC  F023         	goto	u8131
  7762   0047F4  EFFE  F023         	goto	u8130
  7763   0047F8                     u8131:
  7764   0047F8  EFBA  F023         	goto	l1290
  7765   0047FC                     u8130:
  7766   0047FC  C079  F04C         	movff	efgtoa@ou,___flge@ff1
  7767   004800  C07A  F04D         	movff	efgtoa@ou+1,___flge@ff1+1
  7768   004804  C07B  F04E         	movff	efgtoa@ou+2,___flge@ff1+2
  7769   004808  C07C  F04F         	movff	efgtoa@ou+3,___flge@ff1+3
  7770   00480C  C088  F050         	movff	efgtoa@g,___flge@ff2
  7771   004810  C089  F051         	movff	efgtoa@g+1,___flge@ff2+1
  7772   004814  C08A  F052         	movff	efgtoa@g+2,___flge@ff2+2
  7773   004818  C08B  F053         	movff	efgtoa@g+3,___flge@ff2+3
  7774   00481C  EC46  F039         	call	___flge	;wreg free
  7775   004820  A0D8               	btfss	status,0,c
  7776   004822  EF15  F024         	goto	u8141
  7777   004826  EF17  F024         	goto	u8140
  7778   00482A                     u8141:
  7779   00482A  EFBA  F023         	goto	l1290
  7780   00482E                     u8140:
  7781   00482E                     
  7782                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  7783   00482E  0100               	movlb	0	; () banked
  7784   004830  518E               	movf	efgtoa@u& (0+255),w,b
  7785   004832  5D88               	subwf	efgtoa@g& (0+255),w,b
  7786   004834  6E02               	movwf	labs@a^0,c
  7787   004836  518F               	movf	(efgtoa@u+1)& (0+255),w,b
  7788   004838  5989               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7789   00483A  6E03               	movwf	(labs@a+1)^0,c
  7790   00483C  5190               	movf	(efgtoa@u+2)& (0+255),w,b
  7791   00483E  598A               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7792   004840  6E04               	movwf	(labs@a+2)^0,c
  7793   004842  5191               	movf	(efgtoa@u+3)& (0+255),w,b
  7794   004844  598B               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7795   004846  6E05               	movwf	(labs@a+3)^0,c
  7796   004848  EC9C  F03F         	call	_labs	;wreg free
  7797   00484C  BE05               	btfsc	(?_labs+3)^0,7,c
  7798   00484E  EF36  F024         	goto	u8150
  7799   004852  5005               	movf	(?_labs+3)^0,w,c
  7800   004854  1004               	iorwf	(?_labs+2)^0,w,c
  7801   004856  1003               	iorwf	(?_labs+1)^0,w,c
  7802   004858  E107               	bnz	u8151
  7803   00485A  0E02               	movlw	2
  7804   00485C  5C02               	subwf	?_labs^0,w,c
  7805   00485E  B0D8               	btfsc	status,0,c
  7806   004860  EF34  F024         	goto	u8151
  7807   004864  EF36  F024         	goto	u8150
  7808   004868                     u8151:
  7809   004868  EF7E  F024         	goto	l7476
  7810   00486C                     u8150:
  7811   00486C                     l7466:
  7812                           
  7813                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  7814   00486C  C08E  F088         	movff	efgtoa@u,efgtoa@g
  7815   004870  C08F  F089         	movff	efgtoa@u+1,efgtoa@g+1
  7816   004874  C090  F08A         	movff	efgtoa@u+2,efgtoa@g+2
  7817   004878  C091  F08B         	movff	efgtoa@u+3,efgtoa@g+3
  7818                           
  7819                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  7820   00487C  EF97  F024         	goto	l1288
  7821   004880                     l7468:
  7822                           
  7823                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  7824   004880  C08E  F02B         	movff	efgtoa@u,___fldiv@b
  7825   004884  C08F  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  7826   004888  C090  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  7827   00488C  C091  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  7828   004890  0E00               	movlw	0
  7829   004892  6E2F               	movwf	___fldiv@a^0,c
  7830   004894  0E00               	movlw	0
  7831   004896  6E30               	movwf	(___fldiv@a+1)^0,c
  7832   004898  0E20               	movlw	32
  7833   00489A  6E31               	movwf	(___fldiv@a+2)^0,c
  7834   00489C  0E41               	movlw	65
  7835   00489E  6E32               	movwf	(___fldiv@a+3)^0,c
  7836   0048A0  ECCC  F031         	call	___fldiv	;wreg free
  7837   0048A4  C02B  F08E         	movff	?___fldiv,efgtoa@u
  7838   0048A8  C02C  F08F         	movff	?___fldiv+1,efgtoa@u+1
  7839   0048AC  C02D  F090         	movff	?___fldiv+2,efgtoa@u+2
  7840   0048B0  C02E  F091         	movff	?___fldiv+3,efgtoa@u+3
  7841   0048B4                     
  7842                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  7843   0048B4  0100               	movlb	0	; () banked
  7844   0048B6  0775               	decf	efgtoa@e& (0+255),f,b
  7845   0048B8  A0D8               	btfss	status,0,c
  7846   0048BA  0776               	decf	(efgtoa@e+1)& (0+255),f,b
  7847   0048BC                     
  7848                           ; BSR set to: 0
  7849                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  7850   0048BC  518E               	movf	efgtoa@u& (0+255),w,b
  7851   0048BE  5D88               	subwf	efgtoa@g& (0+255),w,b
  7852   0048C0  6E02               	movwf	labs@a^0,c
  7853   0048C2  518F               	movf	(efgtoa@u+1)& (0+255),w,b
  7854   0048C4  5989               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7855   0048C6  6E03               	movwf	(labs@a+1)^0,c
  7856   0048C8  5190               	movf	(efgtoa@u+2)& (0+255),w,b
  7857   0048CA  598A               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7858   0048CC  6E04               	movwf	(labs@a+2)^0,c
  7859   0048CE  5191               	movf	(efgtoa@u+3)& (0+255),w,b
  7860   0048D0  598B               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7861   0048D2  6E05               	movwf	(labs@a+3)^0,c
  7862   0048D4  EC9C  F03F         	call	_labs	;wreg free
  7863   0048D8  BE05               	btfsc	(?_labs+3)^0,7,c
  7864   0048DA  EF7C  F024         	goto	u8160
  7865   0048DE  5005               	movf	(?_labs+3)^0,w,c
  7866   0048E0  1004               	iorwf	(?_labs+2)^0,w,c
  7867   0048E2  1003               	iorwf	(?_labs+1)^0,w,c
  7868   0048E4  E107               	bnz	u8161
  7869   0048E6  0E02               	movlw	2
  7870   0048E8  5C02               	subwf	?_labs^0,w,c
  7871   0048EA  B0D8               	btfsc	status,0,c
  7872   0048EC  EF7A  F024         	goto	u8161
  7873   0048F0  EF7C  F024         	goto	u8160
  7874   0048F4                     u8161:
  7875   0048F4  EF7E  F024         	goto	l7476
  7876   0048F8                     u8160:
  7877   0048F8  EF36  F024         	goto	l7466
  7878   0048FC                     l7476:
  7879                           
  7880                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  7881   0048FC  C088  F04C         	movff	efgtoa@g,___flge@ff1
  7882   004900  C089  F04D         	movff	efgtoa@g+1,___flge@ff1+1
  7883   004904  C08A  F04E         	movff	efgtoa@g+2,___flge@ff1+2
  7884   004908  C08B  F04F         	movff	efgtoa@g+3,___flge@ff1+3
  7885   00490C  C08E  F050         	movff	efgtoa@u,___flge@ff2
  7886   004910  C08F  F051         	movff	efgtoa@u+1,___flge@ff2+1
  7887   004914  C090  F052         	movff	efgtoa@u+2,___flge@ff2+2
  7888   004918  C091  F053         	movff	efgtoa@u+3,___flge@ff2+3
  7889   00491C  EC46  F039         	call	___flge	;wreg free
  7890   004920  A0D8               	btfss	status,0,c
  7891   004922  EF95  F024         	goto	u8171
  7892   004926  EF97  F024         	goto	u8170
  7893   00492A                     u8171:
  7894   00492A  EF40  F024         	goto	l7468
  7895   00492E                     u8170:
  7896   00492E                     l1288:
  7897                           
  7898                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  7899   00492E  C065  F06F         	movff	efgtoa@c,efgtoa@mode
  7900                           
  7901                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  7902   004932  C06F  F070         	movff	efgtoa@mode,efgtoa@nmode
  7903   004936                     
  7904                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  7905   004936  0100               	movlb	0	; () banked
  7906   004938  BFDD               	btfsc	(_prec+1)& (0+255),7,b
  7907   00493A  EFA1  F024         	goto	u8181
  7908   00493E  EFA3  F024         	goto	u8180
  7909   004942                     u8181:
  7910   004942  EFA9  F024         	goto	l7482
  7911   004946                     u8180:
  7912   004946                     
  7913                           ; BSR set to: 0
  7914   004946  C0DC  F068         	movff	_prec,efgtoa@p
  7915   00494A  C0DD  F069         	movff	_prec+1,efgtoa@p+1
  7916   00494E  EFAD  F024         	goto	l7484
  7917   004952                     l7482:
  7918                           
  7919                           ; BSR set to: 0
  7920   004952  0E00               	movlw	0
  7921   004954  6F69               	movwf	(efgtoa@p+1)& (0+255),b
  7922   004956  0E06               	movlw	6
  7923   004958  6F68               	movwf	efgtoa@p& (0+255),b
  7924   00495A                     l7484:
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  7928   00495A  C068  F073         	movff	efgtoa@p,efgtoa@m
  7929   00495E  C069  F074         	movff	efgtoa@p+1,efgtoa@m+1
  7930   004962                     
  7931                           ; BSR set to: 0
  7932                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  7933   004962  4B73               	infsnz	efgtoa@m& (0+255),f,b
  7934   004964  2B74               	incf	(efgtoa@m+1)& (0+255),f,b
  7935   004966                     
  7936                           ; BSR set to: 0
  7937                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  7938   004966  0E66               	movlw	102
  7939   004968  1970               	xorwf	efgtoa@nmode& (0+255),w,b
  7940   00496A  A4D8               	btfss	status,2,c
  7941   00496C  EFBA  F024         	goto	u8191
  7942   004970  EFBC  F024         	goto	u8190
  7943   004974                     u8191:
  7944   004974  EFDC  F024         	goto	l7498
  7945   004978                     u8190:
  7946   004978                     
  7947                           ; BSR set to: 0
  7948                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  7949   004978  BF76               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7950   00497A  EFC3  F024         	goto	u8200
  7951   00497E  EFC1  F024         	goto	u8201
  7952   004982                     u8201:
  7953   004982  EFCF  F024         	goto	l7494
  7954   004986                     u8200:
  7955   004986                     
  7956                           ; BSR set to: 0
  7957                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  7958   004986  0E00               	movlw	0
  7959   004988  6F8E               	movwf	efgtoa@u& (0+255),b
  7960   00498A  0E00               	movlw	0
  7961   00498C  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  7962   00498E  0E80               	movlw	128
  7963   004990  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  7964   004992  0E3F               	movlw	63
  7965   004994  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  7966                           
  7967                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  7968   004996  0E00               	movlw	0
  7969   004998  6F76               	movwf	(efgtoa@e+1)& (0+255),b
  7970   00499A  0E00               	movlw	0
  7971   00499C  6F75               	movwf	efgtoa@e& (0+255),b
  7972   00499E                     l7494:
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  7976   00499E  0E67               	movlw	103
  7977   0049A0  196F               	xorwf	efgtoa@mode& (0+255),w,b
  7978   0049A2  B4D8               	btfsc	status,2,c
  7979   0049A4  EFD6  F024         	goto	u8211
  7980   0049A8  EFD8  F024         	goto	u8210
  7981   0049AC                     u8211:
  7982   0049AC  EFDC  F024         	goto	l7498
  7983   0049B0                     u8210:
  7984   0049B0                     
  7985                           ; BSR set to: 0
  7986                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  7987   0049B0  5175               	movf	efgtoa@e& (0+255),w,b
  7988   0049B2  2773               	addwf	efgtoa@m& (0+255),f,b
  7989   0049B4  5176               	movf	(efgtoa@e+1)& (0+255),w,b
  7990   0049B6  2374               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7991   0049B8                     l7498:
  7992                           
  7993                           ; BSR set to: 0
  7994                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  7995   0049B8  0E00               	movlw	0
  7996   0049BA  6F7E               	movwf	(efgtoa@i+1)& (0+255),b
  7997   0049BC  0E00               	movlw	0
  7998   0049BE  6F7D               	movwf	efgtoa@i& (0+255),b
  7999   0049C0                     
  8000                           ; BSR set to: 0
  8001                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  8002   0049C0  C088  F07F         	movff	efgtoa@g,efgtoa@h
  8003   0049C4  C089  F080         	movff	efgtoa@g+1,efgtoa@h+1
  8004   0049C8  C08A  F081         	movff	efgtoa@g+2,efgtoa@h+2
  8005   0049CC  C08B  F082         	movff	efgtoa@g+3,efgtoa@h+3
  8006   0049D0                     
  8007                           ; BSR set to: 0
  8008                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  8009   0049D0  C08E  F079         	movff	efgtoa@u,efgtoa@ou
  8010   0049D4  C08F  F07A         	movff	efgtoa@u+1,efgtoa@ou+1
  8011   0049D8  C090  F07B         	movff	efgtoa@u+2,efgtoa@ou+2
  8012   0049DC  C091  F07C         	movff	efgtoa@u+3,efgtoa@ou+3
  8013                           
  8014                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  8015   0049E0  EF6D  F025         	goto	l7512
  8016   0049E4                     l7504:
  8017                           
  8018                           ; BSR set to: 0
  8019                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  8020   0049E4  C07F  F02B         	movff	efgtoa@h,___fldiv@b
  8021   0049E8  C080  F02C         	movff	efgtoa@h+1,___fldiv@b+1
  8022   0049EC  C081  F02D         	movff	efgtoa@h+2,___fldiv@b+2
  8023   0049F0  C082  F02E         	movff	efgtoa@h+3,___fldiv@b+3
  8024   0049F4  C08E  F02F         	movff	efgtoa@u,___fldiv@a
  8025   0049F8  C08F  F030         	movff	efgtoa@u+1,___fldiv@a+1
  8026   0049FC  C090  F031         	movff	efgtoa@u+2,___fldiv@a+2
  8027   004A00  C091  F032         	movff	efgtoa@u+3,___fldiv@a+3
  8028   004A04  ECCC  F031         	call	___fldiv	;wreg free
  8029   004A08  C02B  F044         	movff	?___fldiv,floorf@x
  8030   004A0C  C02C  F045         	movff	?___fldiv+1,floorf@x+1
  8031   004A10  C02D  F046         	movff	?___fldiv+2,floorf@x+2
  8032   004A14  C02E  F047         	movff	?___fldiv+3,floorf@x+3
  8033   004A18  ECB3  F034         	call	_floorf	;wreg free
  8034   004A1C  C044  F083         	movff	?_floorf,efgtoa@l
  8035   004A20  C045  F084         	movff	?_floorf+1,efgtoa@l+1
  8036   004A24  C046  F085         	movff	?_floorf+2,efgtoa@l+2
  8037   004A28  C047  F086         	movff	?_floorf+3,efgtoa@l+3
  8038                           
  8039                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  8040   004A2C  C083  F002         	movff	efgtoa@l,___fltol@f1
  8041   004A30  C084  F003         	movff	efgtoa@l+1,___fltol@f1+1
  8042   004A34  C085  F004         	movff	efgtoa@l+2,___fltol@f1+2
  8043   004A38  C086  F005         	movff	efgtoa@l+3,___fltol@f1+3
  8044   004A3C  ECC3  F038         	call	___fltol	;wreg free
  8045   004A40  C002  F071         	movff	?___fltol,efgtoa@d
  8046   004A44  C003  F072         	movff	?___fltol+1,efgtoa@d+1
  8047   004A48                     
  8048                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  8049   004A48  C07F  F044         	movff	efgtoa@h,___flsub@b
  8050   004A4C  C080  F045         	movff	efgtoa@h+1,___flsub@b+1
  8051   004A50  C081  F046         	movff	efgtoa@h+2,___flsub@b+2
  8052   004A54  C082  F047         	movff	efgtoa@h+3,___flsub@b+3
  8053   004A58  C083  F016         	movff	efgtoa@l,___flmul@a
  8054   004A5C  C084  F017         	movff	efgtoa@l+1,___flmul@a+1
  8055   004A60  C085  F018         	movff	efgtoa@l+2,___flmul@a+2
  8056   004A64  C086  F019         	movff	efgtoa@l+3,___flmul@a+3
  8057   004A68  C08E  F012         	movff	efgtoa@u,___flmul@b
  8058   004A6C  C08F  F013         	movff	efgtoa@u+1,___flmul@b+1
  8059   004A70  C090  F014         	movff	efgtoa@u+2,___flmul@b+2
  8060   004A74  C091  F015         	movff	efgtoa@u+3,___flmul@b+3
  8061   004A78  ECC8  F02D         	call	___flmul	;wreg free
  8062   004A7C  C012  F048         	movff	?___flmul,___flsub@a
  8063   004A80  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8064   004A84  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8065   004A88  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8066   004A8C  ECD7  F040         	call	___flsub	;wreg free
  8067   004A90  C044  F07F         	movff	?___flsub,efgtoa@h
  8068   004A94  C045  F080         	movff	?___flsub+1,efgtoa@h+1
  8069   004A98  C046  F081         	movff	?___flsub+2,efgtoa@h+2
  8070   004A9C  C047  F082         	movff	?___flsub+3,efgtoa@h+3
  8071   004AA0                     
  8072                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  8073   004AA0  C08E  F02B         	movff	efgtoa@u,___fldiv@b
  8074   004AA4  C08F  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  8075   004AA8  C090  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  8076   004AAC  C091  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  8077   004AB0  0E00               	movlw	0
  8078   004AB2  6E2F               	movwf	___fldiv@a^0,c
  8079   004AB4  0E00               	movlw	0
  8080   004AB6  6E30               	movwf	(___fldiv@a+1)^0,c
  8081   004AB8  0E20               	movlw	32
  8082   004ABA  6E31               	movwf	(___fldiv@a+2)^0,c
  8083   004ABC  0E41               	movlw	65
  8084   004ABE  6E32               	movwf	(___fldiv@a+3)^0,c
  8085   004AC0  ECCC  F031         	call	___fldiv	;wreg free
  8086   004AC4  C02B  F08E         	movff	?___fldiv,efgtoa@u
  8087   004AC8  C02C  F08F         	movff	?___fldiv+1,efgtoa@u+1
  8088   004ACC  C02D  F090         	movff	?___fldiv+2,efgtoa@u+2
  8089   004AD0  C02E  F091         	movff	?___fldiv+3,efgtoa@u+3
  8090   004AD4                     
  8091                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  8092   004AD4  0100               	movlb	0	; () banked
  8093   004AD6  4B7D               	infsnz	efgtoa@i& (0+255),f,b
  8094   004AD8  2B7E               	incf	(efgtoa@i+1)& (0+255),f,b
  8095   004ADA                     l7512:
  8096                           
  8097                           ; BSR set to: 0
  8098                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  8099   004ADA  5173               	movf	efgtoa@m& (0+255),w,b
  8100   004ADC  5D7D               	subwf	efgtoa@i& (0+255),w,b
  8101   004ADE  517E               	movf	(efgtoa@i+1)& (0+255),w,b
  8102   004AE0  0A80               	xorlw	128
  8103   004AE2  6E58               	movwf	??_efgtoa^0,c
  8104   004AE4  5174               	movf	(efgtoa@m+1)& (0+255),w,b
  8105   004AE6  0A80               	xorlw	128
  8106   004AE8  5858               	subwfb	??_efgtoa^0,w,c
  8107   004AEA  A0D8               	btfss	status,0,c
  8108   004AEC  EF7A  F025         	goto	u8221
  8109   004AF0  EF7C  F025         	goto	u8220
  8110   004AF4                     u8221:
  8111   004AF4  EFF2  F024         	goto	l7504
  8112   004AF8                     u8220:
  8113   004AF8                     
  8114                           ; BSR set to: 0
  8115                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  8116   004AF8  C08E  F012         	movff	efgtoa@u,___flmul@b
  8117   004AFC  C08F  F013         	movff	efgtoa@u+1,___flmul@b+1
  8118   004B00  C090  F014         	movff	efgtoa@u+2,___flmul@b+2
  8119   004B04  C091  F015         	movff	efgtoa@u+3,___flmul@b+3
  8120   004B08  0E00               	movlw	0
  8121   004B0A  6E16               	movwf	___flmul@a^0,c
  8122   004B0C  0E00               	movlw	0
  8123   004B0E  6E17               	movwf	(___flmul@a+1)^0,c
  8124   004B10  0EA0               	movlw	160
  8125   004B12  6E18               	movwf	(___flmul@a+2)^0,c
  8126   004B14  0E40               	movlw	64
  8127   004B16  6E19               	movwf	(___flmul@a+3)^0,c
  8128   004B18  ECC8  F02D         	call	___flmul	;wreg free
  8129   004B1C  C012  F083         	movff	?___flmul,efgtoa@l
  8130   004B20  C013  F084         	movff	?___flmul+1,efgtoa@l+1
  8131   004B24  C014  F085         	movff	?___flmul+2,efgtoa@l+2
  8132   004B28  C015  F086         	movff	?___flmul+3,efgtoa@l+3
  8133   004B2C                     
  8134                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  8135   004B2C  C07F  F04C         	movff	efgtoa@h,___flge@ff1
  8136   004B30  C080  F04D         	movff	efgtoa@h+1,___flge@ff1+1
  8137   004B34  C081  F04E         	movff	efgtoa@h+2,___flge@ff1+2
  8138   004B38  C082  F04F         	movff	efgtoa@h+3,___flge@ff1+3
  8139   004B3C  C083  F050         	movff	efgtoa@l,___flge@ff2
  8140   004B40  C084  F051         	movff	efgtoa@l+1,___flge@ff2+1
  8141   004B44  C085  F052         	movff	efgtoa@l+2,___flge@ff2+2
  8142   004B48  C086  F053         	movff	efgtoa@l+3,___flge@ff2+3
  8143   004B4C  EC46  F039         	call	___flge	;wreg free
  8144   004B50  B0D8               	btfsc	status,0,c
  8145   004B52  EFAD  F025         	goto	u8231
  8146   004B56  EFAF  F025         	goto	u8230
  8147   004B5A                     u8231:
  8148   004B5A  EFBA  F025         	goto	l7520
  8149   004B5E                     u8230:
  8150   004B5E                     
  8151                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  8152   004B5E  0E00               	movlw	0
  8153   004B60  0100               	movlb	0	; () banked
  8154   004B62  6F83               	movwf	efgtoa@l& (0+255),b
  8155   004B64  0E00               	movlw	0
  8156   004B66  6F84               	movwf	(efgtoa@l+1)& (0+255),b
  8157   004B68  0E00               	movlw	0
  8158   004B6A  6F85               	movwf	(efgtoa@l+2)& (0+255),b
  8159   004B6C  0E00               	movlw	0
  8160   004B6E  6F86               	movwf	(efgtoa@l+3)& (0+255),b
  8161                           
  8162                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  8163   004B70  EFE3  F025         	goto	l7526
  8164   004B74                     l7520:
  8165                           
  8166                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  8167   004B74  C07F  F002         	movff	efgtoa@h,___fleq@ff1
  8168   004B78  C080  F003         	movff	efgtoa@h+1,___fleq@ff1+1
  8169   004B7C  C081  F004         	movff	efgtoa@h+2,___fleq@ff1+2
  8170   004B80  C082  F005         	movff	efgtoa@h+3,___fleq@ff1+3
  8171   004B84  C083  F006         	movff	efgtoa@l,___fleq@ff2
  8172   004B88  C084  F007         	movff	efgtoa@l+1,___fleq@ff2+1
  8173   004B8C  C085  F008         	movff	efgtoa@l+2,___fleq@ff2+2
  8174   004B90  C086  F009         	movff	efgtoa@l+3,___fleq@ff2+3
  8175   004B94  ECCE  F03D         	call	___fleq	;wreg free
  8176   004B98  A0D8               	btfss	status,0,c
  8177   004B9A  EFD1  F025         	goto	u8241
  8178   004B9E  EFD3  F025         	goto	u8240
  8179   004BA2                     u8241:
  8180   004BA2  EFE3  F025         	goto	l7526
  8181   004BA6                     u8240:
  8182   004BA6  0100               	movlb	0	; () banked
  8183   004BA8  B171               	btfsc	efgtoa@d& (0+255),0,b
  8184   004BAA  EFD9  F025         	goto	u8251
  8185   004BAE  EFDB  F025         	goto	u8250
  8186   004BB2                     u8251:
  8187   004BB2  EFE3  F025         	goto	l7526
  8188   004BB6                     u8250:
  8189   004BB6                     
  8190                           ; BSR set to: 0
  8191                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  8192   004BB6  0E00               	movlw	0
  8193   004BB8  6F83               	movwf	efgtoa@l& (0+255),b
  8194   004BBA  0E00               	movlw	0
  8195   004BBC  6F84               	movwf	(efgtoa@l+1)& (0+255),b
  8196   004BBE  0E00               	movlw	0
  8197   004BC0  6F85               	movwf	(efgtoa@l+2)& (0+255),b
  8198   004BC2  0E00               	movlw	0
  8199   004BC4  6F86               	movwf	(efgtoa@l+3)& (0+255),b
  8200   004BC6                     l7526:
  8201                           
  8202                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  8203   004BC6  C088  F002         	movff	efgtoa@g,___fladd@b
  8204   004BCA  C089  F003         	movff	efgtoa@g+1,___fladd@b+1
  8205   004BCE  C08A  F004         	movff	efgtoa@g+2,___fladd@b+2
  8206   004BD2  C08B  F005         	movff	efgtoa@g+3,___fladd@b+3
  8207   004BD6  C083  F006         	movff	efgtoa@l,___fladd@a
  8208   004BDA  C084  F007         	movff	efgtoa@l+1,___fladd@a+1
  8209   004BDE  C085  F008         	movff	efgtoa@l+2,___fladd@a+2
  8210   004BE2  C086  F009         	movff	efgtoa@l+3,___fladd@a+3
  8211   004BE6  EC68  F02B         	call	___fladd	;wreg free
  8212   004BEA  C002  F07F         	movff	?___fladd,efgtoa@h
  8213   004BEE  C003  F080         	movff	?___fladd+1,efgtoa@h+1
  8214   004BF2  C004  F081         	movff	?___fladd+2,efgtoa@h+2
  8215   004BF6  C005  F082         	movff	?___fladd+3,efgtoa@h+3
  8216   004BFA                     
  8217                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  8218   004BFA  C07F  F04C         	movff	efgtoa@h,___flge@ff1
  8219   004BFE  C080  F04D         	movff	efgtoa@h+1,___flge@ff1+1
  8220   004C02  C081  F04E         	movff	efgtoa@h+2,___flge@ff1+2
  8221   004C06  C082  F04F         	movff	efgtoa@h+3,___flge@ff1+3
  8222   004C0A  0E00               	movlw	0
  8223   004C0C  6E16               	movwf	___flmul@a^0,c
  8224   004C0E  0E00               	movlw	0
  8225   004C10  6E17               	movwf	(___flmul@a+1)^0,c
  8226   004C12  0E20               	movlw	32
  8227   004C14  6E18               	movwf	(___flmul@a+2)^0,c
  8228   004C16  0E41               	movlw	65
  8229   004C18  6E19               	movwf	(___flmul@a+3)^0,c
  8230   004C1A  C079  F012         	movff	efgtoa@ou,___flmul@b
  8231   004C1E  C07A  F013         	movff	efgtoa@ou+1,___flmul@b+1
  8232   004C22  C07B  F014         	movff	efgtoa@ou+2,___flmul@b+2
  8233   004C26  C07C  F015         	movff	efgtoa@ou+3,___flmul@b+3
  8234   004C2A  ECC8  F02D         	call	___flmul	;wreg free
  8235   004C2E  C012  F050         	movff	?___flmul,___flge@ff2
  8236   004C32  C013  F051         	movff	?___flmul+1,___flge@ff2+1
  8237   004C36  C014  F052         	movff	?___flmul+2,___flge@ff2+2
  8238   004C3A  C015  F053         	movff	?___flmul+3,___flge@ff2+3
  8239   004C3E  EC46  F039         	call	___flge	;wreg free
  8240   004C42  A0D8               	btfss	status,0,c
  8241   004C44  EF26  F026         	goto	u8261
  8242   004C48  EF28  F026         	goto	u8260
  8243   004C4C                     u8261:
  8244   004C4C  EF51  F026         	goto	l7538
  8245   004C50                     u8260:
  8246   004C50                     
  8247                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  8248   004C50  0100               	movlb	0	; () banked
  8249   004C52  4B75               	infsnz	efgtoa@e& (0+255),f,b
  8250   004C54  2B76               	incf	(efgtoa@e+1)& (0+255),f,b
  8251   004C56                     
  8252                           ; BSR set to: 0
  8253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  8254   004C56  C079  F012         	movff	efgtoa@ou,___flmul@b
  8255   004C5A  C07A  F013         	movff	efgtoa@ou+1,___flmul@b+1
  8256   004C5E  C07B  F014         	movff	efgtoa@ou+2,___flmul@b+2
  8257   004C62  C07C  F015         	movff	efgtoa@ou+3,___flmul@b+3
  8258   004C66  0E00               	movlw	0
  8259   004C68  6E16               	movwf	___flmul@a^0,c
  8260   004C6A  0E00               	movlw	0
  8261   004C6C  6E17               	movwf	(___flmul@a+1)^0,c
  8262   004C6E  0E20               	movlw	32
  8263   004C70  6E18               	movwf	(___flmul@a+2)^0,c
  8264   004C72  0E41               	movlw	65
  8265   004C74  6E19               	movwf	(___flmul@a+3)^0,c
  8266   004C76  ECC8  F02D         	call	___flmul	;wreg free
  8267   004C7A  C012  F079         	movff	?___flmul,efgtoa@ou
  8268   004C7E  C013  F07A         	movff	?___flmul+1,efgtoa@ou+1
  8269   004C82  C014  F07B         	movff	?___flmul+2,efgtoa@ou+2
  8270   004C86  C015  F07C         	movff	?___flmul+3,efgtoa@ou+3
  8271   004C8A                     
  8272                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  8273   004C8A  0E66               	movlw	102
  8274   004C8C  0100               	movlb	0	; () banked
  8275   004C8E  1970               	xorwf	efgtoa@nmode& (0+255),w,b
  8276   004C90  A4D8               	btfss	status,2,c
  8277   004C92  EF4D  F026         	goto	u8271
  8278   004C96  EF4F  F026         	goto	u8270
  8279   004C9A                     u8271:
  8280   004C9A  EF51  F026         	goto	l7538
  8281   004C9E                     u8270:
  8282   004C9E                     
  8283                           ; BSR set to: 0
  8284                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  8285   004C9E  4B73               	infsnz	efgtoa@m& (0+255),f,b
  8286   004CA0  2B74               	incf	(efgtoa@m+1)& (0+255),f,b
  8287   004CA2                     l7538:
  8288                           
  8289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  8290   004CA2  C079  F08E         	movff	efgtoa@ou,efgtoa@u
  8291   004CA6  C07A  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  8292   004CAA  C07B  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  8293   004CAE  C07C  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  8294   004CB2                     
  8295                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  8296   004CB2  C075  F066         	movff	efgtoa@e,efgtoa@ne
  8297   004CB6  C076  F067         	movff	efgtoa@e+1,efgtoa@ne+1
  8298   004CBA                     
  8299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  8300   004CBA  0E00               	movlw	0
  8301   004CBC  0100               	movlb	0	; () banked
  8302   004CBE  6F6E               	movwf	efgtoa@pp& (0+255),b
  8303   004CC0                     
  8304                           ; BSR set to: 0
  8305                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  8306   004CC0  0E00               	movlw	0
  8307   004CC2  6F6B               	movwf	(efgtoa@t+1)& (0+255),b
  8308   004CC4  0E00               	movlw	0
  8309   004CC6  6F6A               	movwf	efgtoa@t& (0+255),b
  8310   004CC8                     
  8311                           ; BSR set to: 0
  8312                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  8313   004CC8  0E00               	movlw	0
  8314   004CCA  6F7E               	movwf	(efgtoa@i+1)& (0+255),b
  8315   004CCC  0E00               	movlw	0
  8316   004CCE  6F7D               	movwf	efgtoa@i& (0+255),b
  8317                           
  8318                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8319   004CD0  EF4F  F027         	goto	l7588
  8320   004CD4                     l7548:
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  8324   004CD4  C07F  F02B         	movff	efgtoa@h,___fldiv@b
  8325   004CD8  C080  F02C         	movff	efgtoa@h+1,___fldiv@b+1
  8326   004CDC  C081  F02D         	movff	efgtoa@h+2,___fldiv@b+2
  8327   004CE0  C082  F02E         	movff	efgtoa@h+3,___fldiv@b+3
  8328   004CE4  C08E  F02F         	movff	efgtoa@u,___fldiv@a
  8329   004CE8  C08F  F030         	movff	efgtoa@u+1,___fldiv@a+1
  8330   004CEC  C090  F031         	movff	efgtoa@u+2,___fldiv@a+2
  8331   004CF0  C091  F032         	movff	efgtoa@u+3,___fldiv@a+3
  8332   004CF4  ECCC  F031         	call	___fldiv	;wreg free
  8333   004CF8  C02B  F044         	movff	?___fldiv,floorf@x
  8334   004CFC  C02C  F045         	movff	?___fldiv+1,floorf@x+1
  8335   004D00  C02D  F046         	movff	?___fldiv+2,floorf@x+2
  8336   004D04  C02E  F047         	movff	?___fldiv+3,floorf@x+3
  8337   004D08  ECB3  F034         	call	_floorf	;wreg free
  8338   004D0C  C044  F083         	movff	?_floorf,efgtoa@l
  8339   004D10  C045  F084         	movff	?_floorf+1,efgtoa@l+1
  8340   004D14  C046  F085         	movff	?_floorf+2,efgtoa@l+2
  8341   004D18  C047  F086         	movff	?_floorf+3,efgtoa@l+3
  8342                           
  8343                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  8344   004D1C  C083  F002         	movff	efgtoa@l,___fltol@f1
  8345   004D20  C084  F003         	movff	efgtoa@l+1,___fltol@f1+1
  8346   004D24  C085  F004         	movff	efgtoa@l+2,___fltol@f1+2
  8347   004D28  C086  F005         	movff	efgtoa@l+3,___fltol@f1+3
  8348   004D2C  ECC3  F038         	call	___fltol	;wreg free
  8349   004D30  BE03               	btfsc	(?___fltol+1)^0,7,c
  8350   004D32  EFA6  F026         	goto	u8280
  8351   004D36  5003               	movf	(?___fltol+1)^0,w,c
  8352   004D38  E107               	bnz	u8281
  8353   004D3A  0E0A               	movlw	10
  8354   004D3C  5C02               	subwf	?___fltol^0,w,c
  8355   004D3E  B0D8               	btfsc	status,0,c
  8356   004D40  EFA4  F026         	goto	u8281
  8357   004D44  EFA6  F026         	goto	u8280
  8358   004D48                     u8281:
  8359   004D48  EFB6  F026         	goto	l7552
  8360   004D4C                     u8280:
  8361   004D4C  C083  F002         	movff	efgtoa@l,___fltol@f1
  8362   004D50  C084  F003         	movff	efgtoa@l+1,___fltol@f1+1
  8363   004D54  C085  F004         	movff	efgtoa@l+2,___fltol@f1+2
  8364   004D58  C086  F005         	movff	efgtoa@l+3,___fltol@f1+3
  8365   004D5C  ECC3  F038         	call	___fltol	;wreg free
  8366   004D60  C002  F071         	movff	?___fltol,efgtoa@d
  8367   004D64  C003  F072         	movff	?___fltol+1,efgtoa@d+1
  8368   004D68  EFBB  F026         	goto	l1318
  8369   004D6C                     l7552:
  8370   004D6C  0E00               	movlw	0
  8371   004D6E  0100               	movlb	0	; () banked
  8372   004D70  6F72               	movwf	(efgtoa@d+1)& (0+255),b
  8373   004D72  0E09               	movlw	9
  8374   004D74  6F71               	movwf	efgtoa@d& (0+255),b
  8375   004D76                     l1318:
  8376                           
  8377                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  8378   004D76  0100               	movlb	0	; () banked
  8379   004D78  516E               	movf	efgtoa@pp& (0+255),w,b
  8380   004D7A  A4D8               	btfss	status,2,c
  8381   004D7C  EFC2  F026         	goto	u8291
  8382   004D80  EFC4  F026         	goto	u8290
  8383   004D84                     u8291:
  8384   004D84  EFEC  F026         	goto	l7572
  8385   004D88                     u8290:
  8386   004D88                     
  8387                           ; BSR set to: 0
  8388   004D88  BF67               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8389   004D8A  EFCB  F026         	goto	u8300
  8390   004D8E  EFC9  F026         	goto	u8301
  8391   004D92                     u8301:
  8392   004D92  EFEC  F026         	goto	l7572
  8393   004D96                     u8300:
  8394   004D96                     
  8395                           ; BSR set to: 0
  8396                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  8397   004D96  0E00               	movlw	low _dbuf
  8398   004D98  258C               	addwf	efgtoa@n& (0+255),w,b
  8399   004D9A  6ED9               	movwf	fsr2l,c
  8400   004D9C  0E04               	movlw	high _dbuf
  8401   004D9E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8402   004DA0  6EDA               	movwf	fsr2h,c
  8403   004DA2  0E2E               	movlw	46
  8404   004DA4  6EDF               	movwf	indf2,c
  8405   004DA6                     
  8406                           ; BSR set to: 0
  8407   004DA6  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  8408   004DA8  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  8409   004DAA                     
  8410                           ; BSR set to: 0
  8411                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  8412   004DAA  0777               	decf	efgtoa@w& (0+255),f,b
  8413   004DAC  A0D8               	btfss	status,0,c
  8414   004DAE  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  8415   004DB0                     
  8416                           ; BSR set to: 0
  8417                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  8418   004DB0  0E01               	movlw	1
  8419   004DB2  6F6E               	movwf	efgtoa@pp& (0+255),b
  8420   004DB4  EFEC  F026         	goto	l7572
  8421   004DB8                     l7564:
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  8425   004DB8  0E00               	movlw	low _dbuf
  8426   004DBA  258C               	addwf	efgtoa@n& (0+255),w,b
  8427   004DBC  6ED9               	movwf	fsr2l,c
  8428   004DBE  0E04               	movlw	high _dbuf
  8429   004DC0  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8430   004DC2  6EDA               	movwf	fsr2h,c
  8431   004DC4  0E30               	movlw	48
  8432   004DC6  6EDF               	movwf	indf2,c
  8433   004DC8                     
  8434                           ; BSR set to: 0
  8435   004DC8  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  8436   004DCA  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  8437   004DCC                     
  8438                           ; BSR set to: 0
  8439                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  8440   004DCC  0777               	decf	efgtoa@w& (0+255),f,b
  8441   004DCE  A0D8               	btfss	status,0,c
  8442   004DD0  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  8443   004DD2                     
  8444                           ; BSR set to: 0
  8445                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  8446   004DD2  076A               	decf	efgtoa@t& (0+255),f,b
  8447   004DD4  A0D8               	btfss	status,0,c
  8448   004DD6  076B               	decf	(efgtoa@t+1)& (0+255),f,b
  8449   004DD8                     l7572:
  8450                           
  8451                           ; BSR set to: 0
  8452                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  8453   004DD8  516A               	movf	efgtoa@t& (0+255),w,b
  8454   004DDA  116B               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8455   004DDC  A4D8               	btfss	status,2,c
  8456   004DDE  EFF3  F026         	goto	u8311
  8457   004DE2  EFF5  F026         	goto	u8310
  8458   004DE6                     u8311:
  8459   004DE6  EFDC  F026         	goto	l7564
  8460   004DEA                     u8310:
  8461   004DEA                     
  8462                           ; BSR set to: 0
  8463                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  8464   004DEA  0E00               	movlw	low _dbuf
  8465   004DEC  258C               	addwf	efgtoa@n& (0+255),w,b
  8466   004DEE  6ED9               	movwf	fsr2l,c
  8467   004DF0  0E04               	movlw	high _dbuf
  8468   004DF2  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8469   004DF4  6EDA               	movwf	fsr2h,c
  8470   004DF6  5171               	movf	efgtoa@d& (0+255),w,b
  8471   004DF8  0F30               	addlw	48
  8472   004DFA  6EDF               	movwf	indf2,c
  8473   004DFC                     
  8474                           ; BSR set to: 0
  8475   004DFC  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  8476   004DFE  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  8477   004E00                     
  8478                           ; BSR set to: 0
  8479                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  8480   004E00  0777               	decf	efgtoa@w& (0+255),f,b
  8481   004E02  A0D8               	btfss	status,0,c
  8482   004E04  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  8483   004E06                     
  8484                           ; BSR set to: 0
  8485                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  8486   004E06  C07F  F044         	movff	efgtoa@h,___flsub@b
  8487   004E0A  C080  F045         	movff	efgtoa@h+1,___flsub@b+1
  8488   004E0E  C081  F046         	movff	efgtoa@h+2,___flsub@b+2
  8489   004E12  C082  F047         	movff	efgtoa@h+3,___flsub@b+3
  8490   004E16  C083  F016         	movff	efgtoa@l,___flmul@a
  8491   004E1A  C084  F017         	movff	efgtoa@l+1,___flmul@a+1
  8492   004E1E  C085  F018         	movff	efgtoa@l+2,___flmul@a+2
  8493   004E22  C086  F019         	movff	efgtoa@l+3,___flmul@a+3
  8494   004E26  C08E  F012         	movff	efgtoa@u,___flmul@b
  8495   004E2A  C08F  F013         	movff	efgtoa@u+1,___flmul@b+1
  8496   004E2E  C090  F014         	movff	efgtoa@u+2,___flmul@b+2
  8497   004E32  C091  F015         	movff	efgtoa@u+3,___flmul@b+3
  8498   004E36  ECC8  F02D         	call	___flmul	;wreg free
  8499   004E3A  C012  F048         	movff	?___flmul,___flsub@a
  8500   004E3E  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8501   004E42  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8502   004E46  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8503   004E4A  ECD7  F040         	call	___flsub	;wreg free
  8504   004E4E  C044  F07F         	movff	?___flsub,efgtoa@h
  8505   004E52  C045  F080         	movff	?___flsub+1,efgtoa@h+1
  8506   004E56  C046  F081         	movff	?___flsub+2,efgtoa@h+2
  8507   004E5A  C047  F082         	movff	?___flsub+3,efgtoa@h+3
  8508   004E5E                     
  8509                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  8510   004E5E  C08E  F02B         	movff	efgtoa@u,___fldiv@b
  8511   004E62  C08F  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  8512   004E66  C090  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  8513   004E6A  C091  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  8514   004E6E  0E00               	movlw	0
  8515   004E70  6E2F               	movwf	___fldiv@a^0,c
  8516   004E72  0E00               	movlw	0
  8517   004E74  6E30               	movwf	(___fldiv@a+1)^0,c
  8518   004E76  0E20               	movlw	32
  8519   004E78  6E31               	movwf	(___fldiv@a+2)^0,c
  8520   004E7A  0E41               	movlw	65
  8521   004E7C  6E32               	movwf	(___fldiv@a+3)^0,c
  8522   004E7E  ECCC  F031         	call	___fldiv	;wreg free
  8523   004E82  C02B  F08E         	movff	?___fldiv,efgtoa@u
  8524   004E86  C02C  F08F         	movff	?___fldiv+1,efgtoa@u+1
  8525   004E8A  C02D  F090         	movff	?___fldiv+2,efgtoa@u+2
  8526   004E8E  C02E  F091         	movff	?___fldiv+3,efgtoa@u+3
  8527   004E92                     
  8528                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  8529   004E92  0100               	movlb	0	; () banked
  8530   004E94  0766               	decf	efgtoa@ne& (0+255),f,b
  8531   004E96  A0D8               	btfss	status,0,c
  8532   004E98  0767               	decf	(efgtoa@ne+1)& (0+255),f,b
  8533   004E9A                     
  8534                           ; BSR set to: 0
  8535                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  8536   004E9A  4B7D               	infsnz	efgtoa@i& (0+255),f,b
  8537   004E9C  2B7E               	incf	(efgtoa@i+1)& (0+255),f,b
  8538   004E9E                     l7588:
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8542   004E9E  5173               	movf	efgtoa@m& (0+255),w,b
  8543   004EA0  5D7D               	subwf	efgtoa@i& (0+255),w,b
  8544   004EA2  517E               	movf	(efgtoa@i+1)& (0+255),w,b
  8545   004EA4  0A80               	xorlw	128
  8546   004EA6  6E58               	movwf	??_efgtoa^0,c
  8547   004EA8  5174               	movf	(efgtoa@m+1)& (0+255),w,b
  8548   004EAA  0A80               	xorlw	128
  8549   004EAC  5858               	subwfb	??_efgtoa^0,w,c
  8550   004EAE  B0D8               	btfsc	status,0,c
  8551   004EB0  EF5C  F027         	goto	u8321
  8552   004EB4  EF5E  F027         	goto	u8320
  8553   004EB8                     u8321:
  8554   004EB8  EF6C  F027         	goto	l7592
  8555   004EBC                     u8320:
  8556   004EBC                     
  8557                           ; BSR set to: 0
  8558   004EBC  BF8D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8559   004EBE  EF6A  F027         	goto	u8331
  8560   004EC2  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  8561   004EC4  E109               	bnz	u8330
  8562   004EC6  0E4B               	movlw	75
  8563   004EC8  5D8C               	subwf	efgtoa@n& (0+255),w,b
  8564   004ECA  A0D8               	btfss	status,0,c
  8565   004ECC  EF6A  F027         	goto	u8331
  8566   004ED0  EF6C  F027         	goto	u8330
  8567   004ED4                     u8331:
  8568   004ED4  EF6A  F026         	goto	l7548
  8569   004ED8                     u8330:
  8570   004ED8                     l7592:
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  8574   004ED8  0E00               	movlw	0
  8575   004EDA  6F7E               	movwf	(efgtoa@i+1)& (0+255),b
  8576   004EDC  0E4F               	movlw	79
  8577   004EDE  6F7D               	movwf	efgtoa@i& (0+255),b
  8578   004EE0                     
  8579                           ; BSR set to: 0
  8580                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  8581   004EE0  0E00               	movlw	low _dbuf
  8582   004EE2  257D               	addwf	efgtoa@i& (0+255),w,b
  8583   004EE4  6ED9               	movwf	fsr2l,c
  8584   004EE6  0E04               	movlw	high _dbuf
  8585   004EE8  217E               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8586   004EEA  6EDA               	movwf	fsr2h,c
  8587   004EEC  6ADF               	clrf	indf2,c
  8588   004EEE                     
  8589                           ; BSR set to: 0
  8590                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  8591   004EEE  0E00               	movlw	low _dbuf
  8592   004EF0  6E58               	movwf	??_efgtoa^0,c
  8593   004EF2  0E04               	movlw	high _dbuf
  8594   004EF4  6E59               	movwf	(??_efgtoa+1)^0,c
  8595   004EF6  518C               	movf	efgtoa@n& (0+255),w,b
  8596   004EF8  5E58               	subwf	??_efgtoa^0,f,c
  8597   004EFA  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  8598   004EFC  5A59               	subwfb	(??_efgtoa+1)^0,f,c
  8599   004EFE  517D               	movf	efgtoa@i& (0+255),w,b
  8600   004F00  2458               	addwf	??_efgtoa^0,w,c
  8601   004F02  6E02               	movwf	memcpy@d1^0,c
  8602   004F04  517E               	movf	(efgtoa@i+1)& (0+255),w,b
  8603   004F06  2059               	addwfc	(??_efgtoa+1)^0,w,c
  8604   004F08  6E03               	movwf	(memcpy@d1+1)^0,c
  8605   004F0A  0E00               	movlw	low _dbuf
  8606   004F0C  6E04               	movwf	memcpy@s1^0,c
  8607   004F0E  0E04               	movlw	high _dbuf
  8608   004F10  6E05               	movwf	(memcpy@s1+1)^0,c
  8609   004F12  C08C  F006         	movff	efgtoa@n,memcpy@n
  8610   004F16  C08D  F007         	movff	efgtoa@n+1,memcpy@n+1
  8611   004F1A  ECC7  F03F         	call	_memcpy	;wreg free
  8612   004F1E                     
  8613                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  8614   004F1E  0100               	movlb	0	; () banked
  8615   004F20  518C               	movf	efgtoa@n& (0+255),w,b
  8616   004F22  5D7D               	subwf	efgtoa@i& (0+255),w,b
  8617   004F24  6F8C               	movwf	efgtoa@n& (0+255),b
  8618   004F26  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  8619   004F28  597E               	subwfb	(efgtoa@i+1)& (0+255),w,b
  8620   004F2A  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  8621   004F2C                     
  8622                           ; BSR set to: 0
  8623                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  8624   004F2C  5187               	movf	efgtoa@sign& (0+255),w,b
  8625   004F2E  A4D8               	btfss	status,2,c
  8626   004F30  EF9C  F027         	goto	u8341
  8627   004F34  EF9F  F027         	goto	u8340
  8628   004F38                     u8341:
  8629   004F38  0E01               	movlw	1
  8630   004F3A  EFA0  F027         	goto	u8350
  8631   004F3E                     u8340:
  8632   004F3E  0E00               	movlw	0
  8633   004F40                     u8350:
  8634   004F40  6F7D               	movwf	efgtoa@i& (0+255),b
  8635   004F42  6B7E               	clrf	(efgtoa@i+1)& (0+255),b
  8636   004F44                     
  8637                           ; BSR set to: 0
  8638                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  8639   004F44  5187               	movf	efgtoa@sign& (0+255),w,b
  8640   004F46  B4D8               	btfsc	status,2,c
  8641   004F48  EFA8  F027         	goto	u8361
  8642   004F4C  EFAA  F027         	goto	u8360
  8643   004F50                     u8361:
  8644   004F50  EFB5  F027         	goto	l7606
  8645   004F54                     u8360:
  8646   004F54                     
  8647                           ; BSR set to: 0
  8648                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  8649   004F54  078C               	decf	efgtoa@n& (0+255),f,b
  8650   004F56  A0D8               	btfss	status,0,c
  8651   004F58  078D               	decf	(efgtoa@n+1)& (0+255),f,b
  8652   004F5A  0E00               	movlw	low _dbuf
  8653   004F5C  258C               	addwf	efgtoa@n& (0+255),w,b
  8654   004F5E  6ED9               	movwf	fsr2l,c
  8655   004F60  0E04               	movlw	high _dbuf
  8656   004F62  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8657   004F64  6EDA               	movwf	fsr2h,c
  8658   004F66  C087  FFDF         	movff	efgtoa@sign,indf2
  8659   004F6A                     l7606:
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  8663   004F6A  517D               	movf	efgtoa@i& (0+255),w,b
  8664   004F6C  5F77               	subwf	efgtoa@w& (0+255),f,b
  8665   004F6E  517E               	movf	(efgtoa@i+1)& (0+255),w,b
  8666   004F70  5B78               	subwfb	(efgtoa@w+1)& (0+255),f,b
  8667   004F72                     
  8668                           ; BSR set to: 0
  8669                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  8670   004F72  C060  F010         	movff	efgtoa@fp,pad@fp
  8671   004F76  0E00               	movlw	low _dbuf
  8672   004F78  258C               	addwf	efgtoa@n& (0+255),w,b
  8673   004F7A  6E11               	movwf	pad@buf^0,c
  8674   004F7C  0E04               	movlw	high _dbuf
  8675   004F7E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8676   004F80  6E12               	movwf	(pad@buf+1)^0,c
  8677   004F82  C077  F013         	movff	efgtoa@w,pad@p
  8678   004F86  C078  F014         	movff	efgtoa@w+1,pad@p+1
  8679   004F8A  EC36  F03F         	call	_pad	;wreg free
  8680   004F8E                     l1285:
  8681   004F8E  0012               	return		;funcret
  8682   004F90                     __end_of_efgtoa:
  8683                           	callstack 0
  8684                           
  8685 ;; *************** function _strcpy *****************
  8686 ;; Defined at:
  8687 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;  dest            2    1[COMRAM] PTR unsigned char 
  8690 ;;		 -> dbuf(80), 
  8691 ;;  src             1    3[COMRAM] PTR const unsigned char 
  8692 ;;		 -> STR_7(4), STR_4(4), 
  8693 ;; Auto vars:     Size  Location     Type
  8694 ;;  d               2    5[COMRAM] PTR unsigned char 
  8695 ;;		 -> dbuf(80), 
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  2    1[COMRAM] PTR unsigned char 
  8698 ;; Registers used:
  8699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8705 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8706 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8708 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8709 ;;Total ram usage:        6 bytes
  8710 ;; Hardware stack levels used: 1
  8711 ;; Hardware stack levels required when called: 2
  8712 ;; This function calls:
  8713 ;;		Nothing
  8714 ;; This function is called by:
  8715 ;;		_efgtoa
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719                           	psect	text23
  8720   0082B6                     __ptext23:
  8721                           	callstack 0
  8722   0082B6                     _strcpy:
  8723                           	callstack 23
  8724   0082B6  C002  F006         	movff	strcpy@dest,strcpy@d
  8725   0082BA  C003  F007         	movff	strcpy@dest+1,strcpy@d+1
  8726   0082BE                     l7340:
  8727   0082BE  2A04               	incf	strcpy@src^0,f,c
  8728   0082C0  0404               	decf	strcpy@src^0,w,c
  8729   0082C2  6E05               	movwf	??_strcpy^0,c
  8730   0082C4  C005  FFF6         	movff	??_strcpy,tblptrl
  8731   0082C8                     	if	1	;There is more than 1 active tblptr byte
  8732   0082C8  0E0E               	movlw	high __smallconst
  8733   0082CA  6EF7               	movwf	tblptrh,c
  8734   0082CC                     	endif
  8735   0082CC                     	if	0	;tblptru may be non-zero
  8736   0082CC                     	endif
  8737   0082CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8738   0082CC  0E00               	movlw	low (__smallconst shr (0+16))
  8739   0082CE  6EF8               	movwf	tblptru,c
  8740   0082D0                     	endif
  8741   0082D0  C006  FFD9         	movff	strcpy@d,fsr2l
  8742   0082D4  C007  FFDA         	movff	strcpy@d+1,fsr2h
  8743   0082D8  4A06               	infsnz	strcpy@d^0,f,c
  8744   0082DA  2A07               	incf	(strcpy@d+1)^0,f,c
  8745   0082DC  0008               	tblrd		*
  8746   0082DE  CFF5 FFDF          	movff	tablat,indf2
  8747   0082E2  50DF               	movf	indf2,w,c
  8748   0082E4  A4D8               	btfss	status,2,c
  8749   0082E6  EF77  F041         	goto	u7921
  8750   0082EA  EF79  F041         	goto	u7920
  8751   0082EE                     u7921:
  8752   0082EE  EF5F  F041         	goto	l7340
  8753   0082F2                     u7920:
  8754   0082F2  0012               	return		;funcret
  8755   0082F4                     __end_of_strcpy:
  8756                           	callstack 0
  8757                           
  8758 ;; *************** function _pad *****************
  8759 ;; Defined at:
  8760 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;  fp              1   15[COMRAM] PTR struct _IO_FILE
  8763 ;;		 -> sprintf@f(12), 
  8764 ;;  buf             2   16[COMRAM] PTR unsigned char 
  8765 ;;		 -> dbuf(80), 
  8766 ;;  p               2   18[COMRAM] int 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  i               2   21[COMRAM] int 
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  1    wreg      void 
  8771 ;; Registers used:
  8772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8778 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8781 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8782 ;;Total ram usage:        8 bytes
  8783 ;; Hardware stack levels used: 1
  8784 ;; Hardware stack levels required when called: 5
  8785 ;; This function calls:
  8786 ;;		_fputc
  8787 ;;		_fputs
  8788 ;; This function is called by:
  8789 ;;		_efgtoa
  8790 ;; This function uses a non-reentrant model
  8791 ;;
  8792                           
  8793                           	psect	text24
  8794   007E6C                     __ptext24:
  8795                           	callstack 0
  8796   007E6C                     _pad:
  8797                           	callstack 20
  8798   007E6C                     
  8799                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  8800   007E6C  BE14               	btfsc	(pad@p+1)^0,7,c
  8801   007E6E  EF3D  F03F         	goto	u7830
  8802   007E72  EF3B  F03F         	goto	u7831
  8803   007E76                     u7831:
  8804   007E76  EF41  F03F         	goto	l1270
  8805   007E7A                     u7830:
  8806   007E7A                     
  8807                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  8808   007E7A  0E00               	movlw	0
  8809   007E7C  6E14               	movwf	(pad@p+1)^0,c
  8810   007E7E  0E00               	movlw	0
  8811   007E80  6E13               	movwf	pad@p^0,c
  8812   007E82                     l1270:
  8813                           
  8814                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  8815   007E82  0E00               	movlw	0
  8816   007E84  6E17               	movwf	(pad@i+1)^0,c
  8817   007E86  0E00               	movlw	0
  8818   007E88  6E16               	movwf	pad@i^0,c
  8819                           
  8820                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  8821   007E8A  EF51  F03F         	goto	l7312
  8822   007E8E                     l7308:
  8823                           
  8824                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  8825   007E8E  0E00               	movlw	0
  8826   007E90  6E03               	movwf	(fputc@c+1)^0,c
  8827   007E92  0E20               	movlw	32
  8828   007E94  6E02               	movwf	fputc@c^0,c
  8829   007E96  C010  F004         	movff	pad@fp,fputc@fp
  8830   007E9A  EC71  F03D         	call	_fputc	;wreg free
  8831   007E9E                     
  8832                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  8833   007E9E  4A16               	infsnz	pad@i^0,f,c
  8834   007EA0  2A17               	incf	(pad@i+1)^0,f,c
  8835   007EA2                     l7312:
  8836                           
  8837                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  8838   007EA2  5013               	movf	pad@p^0,w,c
  8839   007EA4  5C16               	subwf	pad@i^0,w,c
  8840   007EA6  5017               	movf	(pad@i+1)^0,w,c
  8841   007EA8  0A80               	xorlw	128
  8842   007EAA  6E15               	movwf	??_pad^0,c
  8843   007EAC  5014               	movf	(pad@p+1)^0,w,c
  8844   007EAE  0A80               	xorlw	128
  8845   007EB0  5815               	subwfb	??_pad^0,w,c
  8846   007EB2  A0D8               	btfss	status,0,c
  8847   007EB4  EF5E  F03F         	goto	u7841
  8848   007EB8  EF60  F03F         	goto	u7840
  8849   007EBC                     u7841:
  8850   007EBC  EF47  F03F         	goto	l7308
  8851   007EC0                     u7840:
  8852   007EC0                     
  8853                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  8854   007EC0  C011  F00A         	movff	pad@buf,fputs@s
  8855   007EC4  C012  F00B         	movff	pad@buf+1,fputs@s+1
  8856   007EC8  C010  F00C         	movff	pad@fp,fputs@fp
  8857   007ECC  EC3B  F041         	call	_fputs	;wreg free
  8858   007ED0  0012               	return		;funcret
  8859   007ED2                     __end_of_pad:
  8860                           	callstack 0
  8861                           
  8862 ;; *************** function _fputs *****************
  8863 ;; Defined at:
  8864 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8867 ;;		 -> dbuf(80), 
  8868 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  8869 ;;		 -> sprintf@f(12), 
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;  i               2   13[COMRAM] int 
  8872 ;;  c               1   12[COMRAM] unsigned char 
  8873 ;; Return value:  Size  Location     Type
  8874 ;;                  2    9[COMRAM] int 
  8875 ;; Registers used:
  8876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8877 ;; Tracked objects:
  8878 ;;		On entry : 0/0
  8879 ;;		On exit  : 0/0
  8880 ;;		Unchanged: 0/0
  8881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8882 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8883 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8885 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8886 ;;Total ram usage:        6 bytes
  8887 ;; Hardware stack levels used: 1
  8888 ;; Hardware stack levels required when called: 4
  8889 ;; This function calls:
  8890 ;;		_fputc
  8891 ;; This function is called by:
  8892 ;;		_pad
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896                           	psect	text25
  8897   008276                     __ptext25:
  8898                           	callstack 0
  8899   008276                     _fputs:
  8900                           	callstack 20
  8901   008276  0E00               	movlw	0
  8902   008278  6E0F               	movwf	(fputs@i+1)^0,c
  8903   00827A  0E00               	movlw	0
  8904   00827C  6E0E               	movwf	fputs@i^0,c
  8905   00827E  EF4A  F041         	goto	l6938
  8906   008282                     l6934:
  8907   008282  C00D  F002         	movff	fputs@c,fputc@c
  8908   008286  6A03               	clrf	(fputc@c+1)^0,c
  8909   008288  C00C  F004         	movff	fputs@fp,fputc@fp
  8910   00828C  EC71  F03D         	call	_fputc	;wreg free
  8911   008290  4A0E               	infsnz	fputs@i^0,f,c
  8912   008292  2A0F               	incf	(fputs@i+1)^0,f,c
  8913   008294                     l6938:
  8914   008294  500E               	movf	fputs@i^0,w,c
  8915   008296  240A               	addwf	fputs@s^0,w,c
  8916   008298  6ED9               	movwf	fsr2l,c
  8917   00829A  500F               	movf	(fputs@i+1)^0,w,c
  8918   00829C  200B               	addwfc	(fputs@s+1)^0,w,c
  8919   00829E  6EDA               	movwf	fsr2h,c
  8920   0082A0  50DF               	movf	indf2,w,c
  8921   0082A2  6E0D               	movwf	fputs@c^0,c
  8922   0082A4  500D               	movf	fputs@c^0,w,c
  8923   0082A6  A4D8               	btfss	status,2,c
  8924   0082A8  EF58  F041         	goto	u7241
  8925   0082AC  EF5A  F041         	goto	u7240
  8926   0082B0                     u7241:
  8927   0082B0  EF41  F041         	goto	l6934
  8928   0082B4                     u7240:
  8929   0082B4  0012               	return		;funcret
  8930   0082B6                     __end_of_fputs:
  8931                           	callstack 0
  8932                           
  8933 ;; *************** function _fputc *****************
  8934 ;; Defined at:
  8935 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;  c               2    1[COMRAM] int 
  8938 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  8939 ;;		 -> sprintf@f(12), 
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;		None
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  2    1[COMRAM] int 
  8944 ;; Registers used:
  8945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8946 ;; Tracked objects:
  8947 ;;		On entry : 0/0
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8951 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8953 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8954 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8955 ;;Total ram usage:        8 bytes
  8956 ;; Hardware stack levels used: 1
  8957 ;; Hardware stack levels required when called: 3
  8958 ;; This function calls:
  8959 ;;		_putch
  8960 ;; This function is called by:
  8961 ;;		_pad
  8962 ;;		_vfpfcnvrt
  8963 ;;		_fputs
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           	psect	text26
  8968   007AE2                     __ptext26:
  8969                           	callstack 0
  8970   007AE2                     _fputc:
  8971                           	callstack 23
  8972   007AE2  5004               	movf	fputc@fp^0,w,c
  8973   007AE4  B4D8               	btfsc	status,2,c
  8974   007AE6  EF77  F03D         	goto	u6811
  8975   007AEA  EF79  F03D         	goto	u6810
  8976   007AEE                     u6811:
  8977   007AEE  EF81  F03D         	goto	l6720
  8978   007AF2                     u6810:
  8979   007AF2  5004               	movf	fputc@fp^0,w,c
  8980   007AF4  A4D8               	btfss	status,2,c
  8981   007AF6  EF7F  F03D         	goto	u6821
  8982   007AFA  EF81  F03D         	goto	u6820
  8983   007AFE                     u6821:
  8984   007AFE  EF86  F03D         	goto	l6722
  8985   007B02                     u6820:
  8986   007B02                     l6720:
  8987   007B02  5002               	movf	fputc@c^0,w,c
  8988   007B04  EC85  F042         	call	_putch
  8989   007B08  EFCD  F03D         	goto	l1401
  8990   007B0C                     l6722:
  8991   007B0C  5004               	movf	fputc@fp^0,w,c
  8992   007B0E  6ED9               	movwf	fsr2l,c
  8993   007B10  6ADA               	clrf	fsr2h,c
  8994   007B12  0E0A               	movlw	10
  8995   007B14  26D9               	addwf	fsr2l,f,c
  8996   007B16  50DE               	movf	postinc2,w,c
  8997   007B18  10DE               	iorwf	postinc2,w,c
  8998   007B1A  B4D8               	btfsc	status,2,c
  8999   007B1C  EF92  F03D         	goto	u6831
  9000   007B20  EF94  F03D         	goto	u6830
  9001   007B24                     u6831:
  9002   007B24  EFAD  F03D         	goto	l6726
  9003   007B28                     u6830:
  9004   007B28  5004               	movf	fputc@fp^0,w,c
  9005   007B2A  6ED9               	movwf	fsr2l,c
  9006   007B2C  6ADA               	clrf	fsr2h,c
  9007   007B2E  0E0A               	movlw	10
  9008   007B30  26D9               	addwf	fsr2l,f,c
  9009   007B32  5004               	movf	fputc@fp^0,w,c
  9010   007B34  6EE1               	movwf	fsr1l,c
  9011   007B36  6AE2               	clrf	fsr1h,c
  9012   007B38  0E03               	movlw	3
  9013   007B3A  26E1               	addwf	fsr1l,f,c
  9014   007B3C  50DE               	movf	postinc2,w,c
  9015   007B3E  5CE6               	subwf	postinc1,w,c
  9016   007B40  50E6               	movf	postinc1,w,c
  9017   007B42  0A80               	xorlw	128
  9018   007B44  6E09               	movwf	(??_fputc+4)^0,c
  9019   007B46  50DE               	movf	postinc2,w,c
  9020   007B48  0A80               	xorlw	128
  9021   007B4A  5809               	subwfb	(??_fputc+4)^0,w,c
  9022   007B4C  B0D8               	btfsc	status,0,c
  9023   007B4E  EFAB  F03D         	goto	u6841
  9024   007B52  EFAD  F03D         	goto	u6840
  9025   007B56                     u6841:
  9026   007B56  EFCD  F03D         	goto	l1401
  9027   007B5A                     u6840:
  9028   007B5A                     l6726:
  9029   007B5A  5004               	movf	fputc@fp^0,w,c
  9030   007B5C  6ED9               	movwf	fsr2l,c
  9031   007B5E  6ADA               	clrf	fsr2h,c
  9032   007B60  0E03               	movlw	3
  9033   007B62  26D9               	addwf	fsr2l,f,c
  9034   007B64  CFDE F005          	movff	postinc2,??_fputc
  9035   007B68  CFDD F006          	movff	postdec2,??_fputc+1
  9036   007B6C  5004               	movf	fputc@fp^0,w,c
  9037   007B6E  6ED9               	movwf	fsr2l,c
  9038   007B70  6ADA               	clrf	fsr2h,c
  9039   007B72  CFDE F007          	movff	postinc2,??_fputc+2
  9040   007B76  CFDD F008          	movff	postdec2,??_fputc+3
  9041   007B7A  5005               	movf	??_fputc^0,w,c
  9042   007B7C  2407               	addwf	(??_fputc+2)^0,w,c
  9043   007B7E  6ED9               	movwf	fsr2l,c
  9044   007B80  5006               	movf	(??_fputc+1)^0,w,c
  9045   007B82  2008               	addwfc	(??_fputc+3)^0,w,c
  9046   007B84  6EDA               	movwf	fsr2h,c
  9047   007B86  C002  FFDF         	movff	fputc@c,indf2
  9048   007B8A  5004               	movf	fputc@fp^0,w,c
  9049   007B8C  6ED9               	movwf	fsr2l,c
  9050   007B8E  6ADA               	clrf	fsr2h,c
  9051   007B90  0E03               	movlw	3
  9052   007B92  26D9               	addwf	fsr2l,f,c
  9053   007B94  2ADE               	incf	postinc2,f,c
  9054   007B96  0E00               	movlw	0
  9055   007B98  22DD               	addwfc	postdec2,f,c
  9056   007B9A                     l1401:
  9057   007B9A  0012               	return		;funcret
  9058   007B9C                     __end_of_fputc:
  9059                           	callstack 0
  9060                           
  9061 ;; *************** function _putch *****************
  9062 ;; Defined at:
  9063 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;  c               1    wreg     unsigned char 
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;  c               1    0[COMRAM] unsigned char 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  1    wreg      void 
  9070 ;; Registers used:
  9071 ;;		wreg
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9081 ;;Total ram usage:        0 bytes
  9082 ;; Hardware stack levels used: 1
  9083 ;; Hardware stack levels required when called: 2
  9084 ;; This function calls:
  9085 ;;		Nothing
  9086 ;; This function is called by:
  9087 ;;		_fputc
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           	psect	text27
  9092   00850A                     __ptext27:
  9093                           	callstack 0
  9094   00850A                     _putch:
  9095                           	callstack 23
  9096   00850A  0012               	return		;funcret
  9097   00850C                     __end_of_putch:
  9098                           	callstack 0
  9099                           
  9100 ;; *************** function _memcpy *****************
  9101 ;; Defined at:
  9102 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  9103 ;; Parameters:    Size  Location     Type
  9104 ;;  d1              2    1[COMRAM] PTR void 
  9105 ;;		 -> dbuf(80), 
  9106 ;;  s1              2    3[COMRAM] PTR const void 
  9107 ;;		 -> dbuf(80), 
  9108 ;;  n               2    5[COMRAM] unsigned int 
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;  s               2   10[COMRAM] PTR const unsigned char 
  9111 ;;		 -> dbuf(80), 
  9112 ;;  d               2    8[COMRAM] PTR unsigned char 
  9113 ;;		 -> dbuf(80), 
  9114 ;;  tmp             1    7[COMRAM] unsigned char 
  9115 ;; Return value:  Size  Location     Type
  9116 ;;                  2    1[COMRAM] PTR void 
  9117 ;; Registers used:
  9118 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9119 ;; Tracked objects:
  9120 ;;		On entry : 0/0
  9121 ;;		On exit  : 0/0
  9122 ;;		Unchanged: 0/0
  9123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9124 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9125 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9127 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9128 ;;Total ram usage:       11 bytes
  9129 ;; Hardware stack levels used: 1
  9130 ;; Hardware stack levels required when called: 2
  9131 ;; This function calls:
  9132 ;;		Nothing
  9133 ;; This function is called by:
  9134 ;;		_efgtoa
  9135 ;; This function uses a non-reentrant model
  9136 ;;
  9137                           
  9138                           	psect	text28
  9139   007F8E                     __ptext28:
  9140                           	callstack 0
  9141   007F8E                     _memcpy:
  9142                           	callstack 23
  9143   007F8E  C004  F00B         	movff	memcpy@s1,memcpy@s
  9144   007F92  C005  F00C         	movff	memcpy@s1+1,memcpy@s+1
  9145   007F96  C002  F009         	movff	memcpy@d1,memcpy@d
  9146   007F9A  C003  F00A         	movff	memcpy@d1+1,memcpy@d+1
  9147   007F9E  EFE1  F03F         	goto	l7388
  9148   007FA2                     l7380:
  9149   007FA2  C00B  FFD9         	movff	memcpy@s,fsr2l
  9150   007FA6  C00C  FFDA         	movff	memcpy@s+1,fsr2h
  9151   007FAA  50DF               	movf	indf2,w,c
  9152   007FAC  6E08               	movwf	memcpy@tmp^0,c
  9153   007FAE  4A0B               	infsnz	memcpy@s^0,f,c
  9154   007FB0  2A0C               	incf	(memcpy@s+1)^0,f,c
  9155   007FB2  C009  FFD9         	movff	memcpy@d,fsr2l
  9156   007FB6  C00A  FFDA         	movff	memcpy@d+1,fsr2h
  9157   007FBA  C008  FFDF         	movff	memcpy@tmp,indf2
  9158   007FBE  4A09               	infsnz	memcpy@d^0,f,c
  9159   007FC0  2A0A               	incf	(memcpy@d+1)^0,f,c
  9160   007FC2                     l7388:
  9161   007FC2  0606               	decf	memcpy@n^0,f,c
  9162   007FC4  A0D8               	btfss	status,0,c
  9163   007FC6  0607               	decf	(memcpy@n+1)^0,f,c
  9164   007FC8  2806               	incf	memcpy@n^0,w,c
  9165   007FCA  E106               	bnz	u8041
  9166   007FCC  2807               	incf	(memcpy@n+1)^0,w,c
  9167   007FCE  A4D8               	btfss	status,2,c
  9168   007FD0  EFEC  F03F         	goto	u8041
  9169   007FD4  EFEE  F03F         	goto	u8040
  9170   007FD8                     u8041:
  9171   007FD8  EFD1  F03F         	goto	l7380
  9172   007FDC                     u8040:
  9173   007FDC  0012               	return		;funcret
  9174   007FDE                     __end_of_memcpy:
  9175                           	callstack 0
  9176                           
  9177 ;; *************** function _labs *****************
  9178 ;; Defined at:
  9179 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;  a               4    1[COMRAM] long 
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;		None
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  4    1[COMRAM] long 
  9186 ;; Registers used:
  9187 ;;		wreg, status,2, status,0
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9193 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9195 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9196 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9197 ;;Total ram usage:        8 bytes
  9198 ;; Hardware stack levels used: 1
  9199 ;; Hardware stack levels required when called: 2
  9200 ;; This function calls:
  9201 ;;		Nothing
  9202 ;; This function is called by:
  9203 ;;		_efgtoa
  9204 ;; This function uses a non-reentrant model
  9205 ;;
  9206                           
  9207                           	psect	text29
  9208   007F38                     __ptext29:
  9209                           	callstack 0
  9210   007F38                     _labs:
  9211                           	callstack 23
  9212   007F38  BE05               	btfsc	(labs@a+3)^0,7,c
  9213   007F3A  EFA1  F03F         	goto	u7931
  9214   007F3E  EFA3  F03F         	goto	u7930
  9215   007F42                     u7931:
  9216   007F42  EFAD  F03F         	goto	l7346
  9217   007F46                     u7930:
  9218   007F46  C002  F002         	movff	labs@a,?_labs
  9219   007F4A  C003  F003         	movff	labs@a+1,?_labs+1
  9220   007F4E  C004  F004         	movff	labs@a+2,?_labs+2
  9221   007F52  C005  F005         	movff	labs@a+3,?_labs+3
  9222   007F56  EFC6  F03F         	goto	l1383
  9223   007F5A                     l7346:
  9224   007F5A  C002  F006         	movff	labs@a,??_labs
  9225   007F5E  C003  F007         	movff	labs@a+1,??_labs+1
  9226   007F62  C004  F008         	movff	labs@a+2,??_labs+2
  9227   007F66  C005  F009         	movff	labs@a+3,??_labs+3
  9228   007F6A  1E06               	comf	??_labs^0,f,c
  9229   007F6C  1E07               	comf	(??_labs+1)^0,f,c
  9230   007F6E  1E08               	comf	(??_labs+2)^0,f,c
  9231   007F70  1E09               	comf	(??_labs+3)^0,f,c
  9232   007F72  2A06               	incf	??_labs^0,f,c
  9233   007F74  0E00               	movlw	0
  9234   007F76  2207               	addwfc	(??_labs+1)^0,f,c
  9235   007F78  2208               	addwfc	(??_labs+2)^0,f,c
  9236   007F7A  2209               	addwfc	(??_labs+3)^0,f,c
  9237   007F7C  C006  F002         	movff	??_labs,?_labs
  9238   007F80  C007  F003         	movff	??_labs+1,?_labs+1
  9239   007F84  C008  F004         	movff	??_labs+2,?_labs+2
  9240   007F88  C009  F005         	movff	??_labs+3,?_labs+3
  9241   007F8C                     l1383:
  9242   007F8C  0012               	return		;funcret
  9243   007F8E                     __end_of_labs:
  9244                           	callstack 0
  9245                           
  9246 ;; *************** function _floorf *****************
  9247 ;; Defined at:
  9248 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;  x               4   67[COMRAM] float 
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;  u               4   83[COMRAM] struct .
  9253 ;;  m               4   77[COMRAM] unsigned long 
  9254 ;;  e               2   81[COMRAM] int 
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  4   67[COMRAM] float 
  9257 ;; Registers used:
  9258 ;;		wreg, status,2, status,0
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/0
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9265 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9266 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9267 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9268 ;;Total ram usage:       20 bytes
  9269 ;; Hardware stack levels used: 1
  9270 ;; Hardware stack levels required when called: 2
  9271 ;; This function calls:
  9272 ;;		Nothing
  9273 ;; This function is called by:
  9274 ;;		_efgtoa
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278                           	psect	text30
  9279   006966                     __ptext30:
  9280                           	callstack 0
  9281   006966                     _floorf:
  9282                           	callstack 23
  9283   006966  C0D0  F054         	movff	floorf@F521,floorf@u
  9284   00696A  C0D1  F055         	movff	floorf@F521+1,floorf@u+1
  9285   00696E  C0D2  F056         	movff	floorf@F521+2,floorf@u+2
  9286   006972  C0D3  F057         	movff	floorf@F521+3,floorf@u+3
  9287   006976  C044  F054         	movff	floorf@x,floorf@u
  9288   00697A  C045  F055         	movff	floorf@x+1,floorf@u+1
  9289   00697E  C046  F056         	movff	floorf@x+2,floorf@u+2
  9290   006982  C047  F057         	movff	floorf@x+3,floorf@u+3
  9291   006986  0E81               	movlw	129
  9292   006988  6E48               	movwf	??_floorf^0,c
  9293   00698A  0EFF               	movlw	255
  9294   00698C  6E49               	movwf	(??_floorf+1)^0,c
  9295   00698E  C054  F04A         	movff	floorf@u,??_floorf+2
  9296   006992  C055  F04B         	movff	floorf@u+1,??_floorf+3
  9297   006996  C056  F04C         	movff	floorf@u+2,??_floorf+4
  9298   00699A  C057  F04D         	movff	floorf@u+3,??_floorf+5
  9299   00699E  0E18               	movlw	24
  9300   0069A0  EFD7  F034         	goto	u7940
  9301   0069A4                     u7945:
  9302   0069A4  90D8               	bcf	status,0,c
  9303   0069A6  324D               	rrcf	(??_floorf+5)^0,f,c
  9304   0069A8  324C               	rrcf	(??_floorf+4)^0,f,c
  9305   0069AA  324B               	rrcf	(??_floorf+3)^0,f,c
  9306   0069AC  324A               	rrcf	(??_floorf+2)^0,f,c
  9307   0069AE                     u7940:
  9308   0069AE  2EE8               	decfsz	wreg,f,c
  9309   0069B0  EFD2  F034         	goto	u7945
  9310   0069B4  504A               	movf	(??_floorf+2)^0,w,c
  9311   0069B6  2448               	addwf	??_floorf^0,w,c
  9312   0069B8  6E52               	movwf	floorf@e^0,c
  9313   0069BA  0E00               	movlw	0
  9314   0069BC  2049               	addwfc	(??_floorf+1)^0,w,c
  9315   0069BE  6E53               	movwf	(floorf@e+1)^0,c
  9316   0069C0  BE53               	btfsc	(floorf@e+1)^0,7,c
  9317   0069C2  EFEC  F034         	goto	u7951
  9318   0069C6  5053               	movf	(floorf@e+1)^0,w,c
  9319   0069C8  E109               	bnz	u7950
  9320   0069CA  0E17               	movlw	23
  9321   0069CC  5C52               	subwf	floorf@e^0,w,c
  9322   0069CE  A0D8               	btfss	status,0,c
  9323   0069D0  EFEC  F034         	goto	u7951
  9324   0069D4  EFEE  F034         	goto	u7950
  9325   0069D8                     u7951:
  9326   0069D8  EFF8  F034         	goto	l7356
  9327   0069DC                     u7950:
  9328   0069DC                     l7354:
  9329   0069DC  C044  F044         	movff	floorf@x,?_floorf
  9330   0069E0  C045  F045         	movff	floorf@x+1,?_floorf+1
  9331   0069E4  C046  F046         	movff	floorf@x+2,?_floorf+2
  9332   0069E8  C047  F047         	movff	floorf@x+3,?_floorf+3
  9333   0069EC  EFBB  F035         	goto	l1369
  9334   0069F0                     l7356:
  9335   0069F0  BE53               	btfsc	(floorf@e+1)^0,7,c
  9336   0069F2  EFFD  F034         	goto	u7961
  9337   0069F6  EFFF  F034         	goto	u7960
  9338   0069FA                     u7961:
  9339   0069FA  EF6F  F035         	goto	l7366
  9340   0069FE                     u7960:
  9341   0069FE  C052  F048         	movff	floorf@e,??_floorf
  9342   006A02  0EFF               	movlw	255
  9343   006A04  6E49               	movwf	(??_floorf+1)^0,c
  9344   006A06  0EFF               	movlw	255
  9345   006A08  6E4A               	movwf	(??_floorf+2)^0,c
  9346   006A0A  0E7F               	movlw	127
  9347   006A0C  6E4B               	movwf	(??_floorf+3)^0,c
  9348   006A0E  0E00               	movlw	0
  9349   006A10  6E4C               	movwf	(??_floorf+4)^0,c
  9350   006A12                     u7975:
  9351   006A12  6648               	tstfsz	??_floorf^0,c
  9352   006A14  EF0E  F035         	goto	u7976
  9353   006A18  EF16  F035         	goto	u7977
  9354   006A1C                     u7976:
  9355   006A1C  344C               	rlcf	(??_floorf+4)^0,w,c
  9356   006A1E  324C               	rrcf	(??_floorf+4)^0,f,c
  9357   006A20  324B               	rrcf	(??_floorf+3)^0,f,c
  9358   006A22  324A               	rrcf	(??_floorf+2)^0,f,c
  9359   006A24  3249               	rrcf	(??_floorf+1)^0,f,c
  9360   006A26  2E48               	decfsz	??_floorf^0,f,c
  9361   006A28  EF09  F035         	goto	u7975
  9362   006A2C                     u7977:
  9363   006A2C  C049  F04E         	movff	??_floorf+1,floorf@m
  9364   006A30  C04A  F04F         	movff	??_floorf+2,floorf@m+1
  9365   006A34  C04B  F050         	movff	??_floorf+3,floorf@m+2
  9366   006A38  C04C  F051         	movff	??_floorf+4,floorf@m+3
  9367   006A3C  504E               	movf	floorf@m^0,w,c
  9368   006A3E  1454               	andwf	floorf@u^0,w,c
  9369   006A40  6E48               	movwf	??_floorf^0,c
  9370   006A42  504F               	movf	(floorf@m+1)^0,w,c
  9371   006A44  1455               	andwf	(floorf@u+1)^0,w,c
  9372   006A46  6E49               	movwf	(??_floorf+1)^0,c
  9373   006A48  5050               	movf	(floorf@m+2)^0,w,c
  9374   006A4A  1456               	andwf	(floorf@u+2)^0,w,c
  9375   006A4C  6E4A               	movwf	(??_floorf+2)^0,c
  9376   006A4E  5051               	movf	(floorf@m+3)^0,w,c
  9377   006A50  1457               	andwf	(floorf@u+3)^0,w,c
  9378   006A52  6E4B               	movwf	(??_floorf+3)^0,c
  9379   006A54  5048               	movf	??_floorf^0,w,c
  9380   006A56  1049               	iorwf	(??_floorf+1)^0,w,c
  9381   006A58  104A               	iorwf	(??_floorf+2)^0,w,c
  9382   006A5A  104B               	iorwf	(??_floorf+3)^0,w,c
  9383   006A5C  A4D8               	btfss	status,2,c
  9384   006A5E  EF33  F035         	goto	u7981
  9385   006A62  EF35  F035         	goto	u7980
  9386   006A66                     u7981:
  9387   006A66  EF37  F035         	goto	l7362
  9388   006A6A                     u7980:
  9389   006A6A  EFEE  F034         	goto	l7354
  9390   006A6E                     l7362:
  9391   006A6E  C054  F048         	movff	floorf@u,??_floorf
  9392   006A72  C055  F049         	movff	floorf@u+1,??_floorf+1
  9393   006A76  C056  F04A         	movff	floorf@u+2,??_floorf+2
  9394   006A7A  C057  F04B         	movff	floorf@u+3,??_floorf+3
  9395   006A7E  0E20               	movlw	32
  9396   006A80  EF47  F035         	goto	u7990
  9397   006A84                     u7995:
  9398   006A84  90D8               	bcf	status,0,c
  9399   006A86  324B               	rrcf	(??_floorf+3)^0,f,c
  9400   006A88  324A               	rrcf	(??_floorf+2)^0,f,c
  9401   006A8A  3249               	rrcf	(??_floorf+1)^0,f,c
  9402   006A8C  3248               	rrcf	??_floorf^0,f,c
  9403   006A8E                     u7990:
  9404   006A8E  2EE8               	decfsz	wreg,f,c
  9405   006A90  EF42  F035         	goto	u7995
  9406   006A94  5048               	movf	??_floorf^0,w,c
  9407   006A96  1049               	iorwf	(??_floorf+1)^0,w,c
  9408   006A98  104A               	iorwf	(??_floorf+2)^0,w,c
  9409   006A9A  104B               	iorwf	(??_floorf+3)^0,w,c
  9410   006A9C  B4D8               	btfsc	status,2,c
  9411   006A9E  EF53  F035         	goto	u8001
  9412   006AA2  EF55  F035         	goto	u8000
  9413   006AA6                     u8001:
  9414   006AA6  EF5D  F035         	goto	l1372
  9415   006AAA                     u8000:
  9416   006AAA  504E               	movf	floorf@m^0,w,c
  9417   006AAC  2654               	addwf	floorf@u^0,f,c
  9418   006AAE  504F               	movf	(floorf@m+1)^0,w,c
  9419   006AB0  2255               	addwfc	(floorf@u+1)^0,f,c
  9420   006AB2  5050               	movf	(floorf@m+2)^0,w,c
  9421   006AB4  2256               	addwfc	(floorf@u+2)^0,f,c
  9422   006AB6  5051               	movf	(floorf@m+3)^0,w,c
  9423   006AB8  2257               	addwfc	(floorf@u+3)^0,f,c
  9424   006ABA                     l1372:
  9425   006ABA  1C4E               	comf	floorf@m^0,w,c
  9426   006ABC  6E48               	movwf	??_floorf^0,c
  9427   006ABE  1C4F               	comf	(floorf@m+1)^0,w,c
  9428   006AC0  6E49               	movwf	(??_floorf+1)^0,c
  9429   006AC2  1C50               	comf	(floorf@m+2)^0,w,c
  9430   006AC4  6E4A               	movwf	(??_floorf+2)^0,c
  9431   006AC6  1C51               	comf	(floorf@m+3)^0,w,c
  9432   006AC8  6E4B               	movwf	(??_floorf+3)^0,c
  9433   006ACA  5048               	movf	??_floorf^0,w,c
  9434   006ACC  1654               	andwf	floorf@u^0,f,c
  9435   006ACE  5049               	movf	(??_floorf+1)^0,w,c
  9436   006AD0  1655               	andwf	(floorf@u+1)^0,f,c
  9437   006AD2  504A               	movf	(??_floorf+2)^0,w,c
  9438   006AD4  1656               	andwf	(floorf@u+2)^0,f,c
  9439   006AD6  504B               	movf	(??_floorf+3)^0,w,c
  9440   006AD8  1657               	andwf	(floorf@u+3)^0,f,c
  9441   006ADA  EFB3  F035         	goto	l7374
  9442   006ADE                     l7366:
  9443   006ADE  C054  F048         	movff	floorf@u,??_floorf
  9444   006AE2  C055  F049         	movff	floorf@u+1,??_floorf+1
  9445   006AE6  C056  F04A         	movff	floorf@u+2,??_floorf+2
  9446   006AEA  C057  F04B         	movff	floorf@u+3,??_floorf+3
  9447   006AEE  0E20               	movlw	32
  9448   006AF0  EF7F  F035         	goto	u8010
  9449   006AF4                     u8015:
  9450   006AF4  90D8               	bcf	status,0,c
  9451   006AF6  324B               	rrcf	(??_floorf+3)^0,f,c
  9452   006AF8  324A               	rrcf	(??_floorf+2)^0,f,c
  9453   006AFA  3249               	rrcf	(??_floorf+1)^0,f,c
  9454   006AFC  3248               	rrcf	??_floorf^0,f,c
  9455   006AFE                     u8010:
  9456   006AFE  2EE8               	decfsz	wreg,f,c
  9457   006B00  EF7A  F035         	goto	u8015
  9458   006B04  5048               	movf	??_floorf^0,w,c
  9459   006B06  1049               	iorwf	(??_floorf+1)^0,w,c
  9460   006B08  104A               	iorwf	(??_floorf+2)^0,w,c
  9461   006B0A  104B               	iorwf	(??_floorf+3)^0,w,c
  9462   006B0C  A4D8               	btfss	status,2,c
  9463   006B0E  EF8B  F035         	goto	u8021
  9464   006B12  EF8D  F035         	goto	u8020
  9465   006B16                     u8021:
  9466   006B16  EF97  F035         	goto	l7370
  9467   006B1A                     u8020:
  9468   006B1A  0E00               	movlw	0
  9469   006B1C  6E54               	movwf	floorf@u^0,c
  9470   006B1E  0E00               	movlw	0
  9471   006B20  6E55               	movwf	(floorf@u+1)^0,c
  9472   006B22  0E00               	movlw	0
  9473   006B24  6E56               	movwf	(floorf@u+2)^0,c
  9474   006B26  0E00               	movlw	0
  9475   006B28  6E57               	movwf	(floorf@u+3)^0,c
  9476   006B2A  EFB3  F035         	goto	l7374
  9477   006B2E                     l7370:
  9478   006B2E  90D8               	bcf	status,0,c
  9479   006B30  3454               	rlcf	floorf@u^0,w,c
  9480   006B32  6E48               	movwf	??_floorf^0,c
  9481   006B34  3455               	rlcf	(floorf@u+1)^0,w,c
  9482   006B36  6E49               	movwf	(??_floorf+1)^0,c
  9483   006B38  3456               	rlcf	(floorf@u+2)^0,w,c
  9484   006B3A  6E4A               	movwf	(??_floorf+2)^0,c
  9485   006B3C  3457               	rlcf	(floorf@u+3)^0,w,c
  9486   006B3E  6E4B               	movwf	(??_floorf+3)^0,c
  9487   006B40  5048               	movf	??_floorf^0,w,c
  9488   006B42  1049               	iorwf	(??_floorf+1)^0,w,c
  9489   006B44  104A               	iorwf	(??_floorf+2)^0,w,c
  9490   006B46  104B               	iorwf	(??_floorf+3)^0,w,c
  9491   006B48  B4D8               	btfsc	status,2,c
  9492   006B4A  EFA9  F035         	goto	u8031
  9493   006B4E  EFAB  F035         	goto	u8030
  9494   006B52                     u8031:
  9495   006B52  EFB3  F035         	goto	l7374
  9496   006B56                     u8030:
  9497   006B56  0E00               	movlw	0
  9498   006B58  6E54               	movwf	floorf@u^0,c
  9499   006B5A  0E00               	movlw	0
  9500   006B5C  6E55               	movwf	(floorf@u+1)^0,c
  9501   006B5E  0E80               	movlw	128
  9502   006B60  6E56               	movwf	(floorf@u+2)^0,c
  9503   006B62  0EBF               	movlw	191
  9504   006B64  6E57               	movwf	(floorf@u+3)^0,c
  9505   006B66                     l7374:
  9506   006B66  C054  F044         	movff	floorf@u,?_floorf
  9507   006B6A  C055  F045         	movff	floorf@u+1,?_floorf+1
  9508   006B6E  C056  F046         	movff	floorf@u+2,?_floorf+2
  9509   006B72  C057  F047         	movff	floorf@u+3,?_floorf+3
  9510   006B76                     l1369:
  9511   006B76  0012               	return		;funcret
  9512   006B78                     __end_of_floorf:
  9513                           	callstack 0
  9514                           
  9515 ;; *************** function ___fpclassifyf *****************
  9516 ;; Defined at:
  9517 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  9518 ;; Parameters:    Size  Location     Type
  9519 ;;  x               4    1[COMRAM] float 
  9520 ;; Auto vars:     Size  Location     Type
  9521 ;;  u               4   11[COMRAM] struct .
  9522 ;;  e               2    9[COMRAM] int 
  9523 ;; Return value:  Size  Location     Type
  9524 ;;                  2    1[COMRAM] int 
  9525 ;; Registers used:
  9526 ;;		wreg, status,2, status,0
  9527 ;; Tracked objects:
  9528 ;;		On entry : 0/0
  9529 ;;		On exit  : 0/0
  9530 ;;		Unchanged: 0/0
  9531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9532 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9533 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9534 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9535 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9536 ;;Total ram usage:       14 bytes
  9537 ;; Hardware stack levels used: 1
  9538 ;; Hardware stack levels required when called: 2
  9539 ;; This function calls:
  9540 ;;		Nothing
  9541 ;; This function is called by:
  9542 ;;		_efgtoa
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546                           	psect	text31
  9547   007492                     __ptext31:
  9548                           	callstack 0
  9549   007492                     ___fpclassifyf:
  9550                           	callstack 23
  9551   007492  C0D4  F00C         	movff	___fpclassifyf@F465,___fpclassifyf@u
  9552   007496  C0D5  F00D         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  9553   00749A  C0D6  F00E         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  9554   00749E  C0D7  F00F         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  9555   0074A2  C002  F00C         	movff	___fpclassifyf@x,___fpclassifyf@u
  9556   0074A6  C003  F00D         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9557   0074AA  C004  F00E         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9558   0074AE  C005  F00F         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9559   0074B2  C00C  F006         	movff	___fpclassifyf@u,??___fpclassifyf
  9560   0074B6  C00D  F007         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9561   0074BA  C00E  F008         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9562   0074BE  C00F  F009         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9563   0074C2  0E18               	movlw	24
  9564   0074C4  EF69  F03A         	goto	u7850
  9565   0074C8                     u7855:
  9566   0074C8  90D8               	bcf	status,0,c
  9567   0074CA  3209               	rrcf	(??___fpclassifyf+3)^0,f,c
  9568   0074CC  3208               	rrcf	(??___fpclassifyf+2)^0,f,c
  9569   0074CE  3207               	rrcf	(??___fpclassifyf+1)^0,f,c
  9570   0074D0  3206               	rrcf	??___fpclassifyf^0,f,c
  9571   0074D2                     u7850:
  9572   0074D2  2EE8               	decfsz	wreg,f,c
  9573   0074D4  EF64  F03A         	goto	u7855
  9574   0074D8  5006               	movf	??___fpclassifyf^0,w,c
  9575   0074DA  6E0A               	movwf	___fpclassifyf@e^0,c
  9576   0074DC  6A0B               	clrf	(___fpclassifyf@e+1)^0,c
  9577   0074DE  500A               	movf	___fpclassifyf@e^0,w,c
  9578   0074E0  100B               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9579   0074E2  A4D8               	btfss	status,2,c
  9580   0074E4  EF76  F03A         	goto	u7861
  9581   0074E8  EF78  F03A         	goto	u7860
  9582   0074EC                     u7861:
  9583   0074EC  EF98  F03A         	goto	l7328
  9584   0074F0                     u7860:
  9585   0074F0  90D8               	bcf	status,0,c
  9586   0074F2  340C               	rlcf	___fpclassifyf@u^0,w,c
  9587   0074F4  6E06               	movwf	??___fpclassifyf^0,c
  9588   0074F6  340D               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9589   0074F8  6E07               	movwf	(??___fpclassifyf+1)^0,c
  9590   0074FA  340E               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9591   0074FC  6E08               	movwf	(??___fpclassifyf+2)^0,c
  9592   0074FE  340F               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9593   007500  6E09               	movwf	(??___fpclassifyf+3)^0,c
  9594   007502  5006               	movf	??___fpclassifyf^0,w,c
  9595   007504  1007               	iorwf	(??___fpclassifyf+1)^0,w,c
  9596   007506  1008               	iorwf	(??___fpclassifyf+2)^0,w,c
  9597   007508  1009               	iorwf	(??___fpclassifyf+3)^0,w,c
  9598   00750A  A4D8               	btfss	status,2,c
  9599   00750C  EF8A  F03A         	goto	u7871
  9600   007510  EF8C  F03A         	goto	u7870
  9601   007514                     u7871:
  9602   007514  EF92  F03A         	goto	l7324
  9603   007518                     u7870:
  9604   007518  0E00               	movlw	0
  9605   00751A  6E03               	movwf	(?___fpclassifyf+1)^0,c
  9606   00751C  0E02               	movlw	2
  9607   00751E  6E02               	movwf	?___fpclassifyf^0,c
  9608   007520  EFC7  F03A         	goto	l1362
  9609   007524                     l7324:
  9610   007524  0E00               	movlw	0
  9611   007526  6E03               	movwf	(?___fpclassifyf+1)^0,c
  9612   007528  0E03               	movlw	3
  9613   00752A  6E02               	movwf	?___fpclassifyf^0,c
  9614   00752C  EFC7  F03A         	goto	l1362
  9615   007530                     l7328:
  9616   007530  280A               	incf	___fpclassifyf@e^0,w,c
  9617   007532  100B               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9618   007534  A4D8               	btfss	status,2,c
  9619   007536  EF9F  F03A         	goto	u7881
  9620   00753A  EFA1  F03A         	goto	u7880
  9621   00753E                     u7881:
  9622   00753E  EFC3  F03A         	goto	l7334
  9623   007542                     u7880:
  9624   007542  C00C  F006         	movff	___fpclassifyf@u,??___fpclassifyf
  9625   007546  C00D  F007         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9626   00754A  C00E  F008         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9627   00754E  C00F  F009         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9628   007552  0E09               	movlw	9
  9629   007554                     u7895:
  9630   007554  90D8               	bcf	status,0,c
  9631   007556  3606               	rlcf	??___fpclassifyf^0,f,c
  9632   007558  3607               	rlcf	(??___fpclassifyf+1)^0,f,c
  9633   00755A  3608               	rlcf	(??___fpclassifyf+2)^0,f,c
  9634   00755C  3609               	rlcf	(??___fpclassifyf+3)^0,f,c
  9635   00755E  2EE8               	decfsz	wreg,f,c
  9636   007560  EFAA  F03A         	goto	u7895
  9637   007564  5006               	movf	??___fpclassifyf^0,w,c
  9638   007566  1007               	iorwf	(??___fpclassifyf+1)^0,w,c
  9639   007568  1008               	iorwf	(??___fpclassifyf+2)^0,w,c
  9640   00756A  1009               	iorwf	(??___fpclassifyf+3)^0,w,c
  9641   00756C  B4D8               	btfsc	status,2,c
  9642   00756E  EFBB  F03A         	goto	u7901
  9643   007572  EFBE  F03A         	goto	u7900
  9644   007576                     u7901:
  9645   007576  0E01               	movlw	1
  9646   007578  EFBF  F03A         	goto	u7910
  9647   00757C                     u7900:
  9648   00757C  0E00               	movlw	0
  9649   00757E                     u7910:
  9650   00757E  6E02               	movwf	?___fpclassifyf^0,c
  9651   007580  6A03               	clrf	(?___fpclassifyf+1)^0,c
  9652   007582  EFC7  F03A         	goto	l1362
  9653   007586                     l7334:
  9654   007586  0E00               	movlw	0
  9655   007588  6E03               	movwf	(?___fpclassifyf+1)^0,c
  9656   00758A  0E04               	movlw	4
  9657   00758C  6E02               	movwf	?___fpclassifyf^0,c
  9658   00758E                     l1362:
  9659   00758E  0012               	return		;funcret
  9660   007590                     __end_of___fpclassifyf:
  9661                           	callstack 0
  9662                           
  9663 ;; *************** function ___fltol *****************
  9664 ;; Defined at:
  9665 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;  f1              4    1[COMRAM] int 
  9668 ;; Auto vars:     Size  Location     Type
  9669 ;;  exp1            1   10[COMRAM] unsigned char 
  9670 ;;  sign1           1    9[COMRAM] unsigned char 
  9671 ;; Return value:  Size  Location     Type
  9672 ;;                  4    1[COMRAM] long 
  9673 ;; Registers used:
  9674 ;;		wreg, status,2, status,0
  9675 ;; Tracked objects:
  9676 ;;		On entry : 0/0
  9677 ;;		On exit  : 0/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9683 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9684 ;;Total ram usage:       10 bytes
  9685 ;; Hardware stack levels used: 1
  9686 ;; Hardware stack levels required when called: 2
  9687 ;; This function calls:
  9688 ;;		Nothing
  9689 ;; This function is called by:
  9690 ;;		_efgtoa
  9691 ;; This function uses a non-reentrant model
  9692 ;;
  9693                           
  9694                           	psect	text32
  9695   007186                     __ptext32:
  9696                           	callstack 0
  9697   007186                     ___fltol:
  9698                           	callstack 23
  9699   007186  3404               	rlcf	(___fltol@f1+2)^0,w,c
  9700   007188  3405               	rlcf	(___fltol@f1+3)^0,w,c
  9701   00718A  6E0B               	movwf	___fltol@exp1^0,c
  9702   00718C  500B               	movf	___fltol@exp1^0,w,c
  9703   00718E  A4D8               	btfss	status,2,c
  9704   007190  EFCC  F038         	goto	u7761
  9705   007194  EFCE  F038         	goto	u7760
  9706   007198                     u7761:
  9707   007198  EFD8  F038         	goto	l7266
  9708   00719C                     u7760:
  9709   00719C                     l7262:
  9710   00719C  0E00               	movlw	0
  9711   00719E  6E02               	movwf	?___fltol^0,c
  9712   0071A0  0E00               	movlw	0
  9713   0071A2  6E03               	movwf	(?___fltol+1)^0,c
  9714   0071A4  0E00               	movlw	0
  9715   0071A6  6E04               	movwf	(?___fltol+2)^0,c
  9716   0071A8  0E00               	movlw	0
  9717   0071AA  6E05               	movwf	(?___fltol+3)^0,c
  9718   0071AC  EF45  F039         	goto	l862
  9719   0071B0                     l7266:
  9720   0071B0  C002  F006         	movff	___fltol@f1,??___fltol
  9721   0071B4  C003  F007         	movff	___fltol@f1+1,??___fltol+1
  9722   0071B8  C004  F008         	movff	___fltol@f1+2,??___fltol+2
  9723   0071BC  C005  F009         	movff	___fltol@f1+3,??___fltol+3
  9724   0071C0  0E20               	movlw	32
  9725   0071C2  EFE8  F038         	goto	u7770
  9726   0071C6                     u7775:
  9727   0071C6  90D8               	bcf	status,0,c
  9728   0071C8  3209               	rrcf	(??___fltol+3)^0,f,c
  9729   0071CA  3208               	rrcf	(??___fltol+2)^0,f,c
  9730   0071CC  3207               	rrcf	(??___fltol+1)^0,f,c
  9731   0071CE  3206               	rrcf	??___fltol^0,f,c
  9732   0071D0                     u7770:
  9733   0071D0  2EE8               	decfsz	wreg,f,c
  9734   0071D2  EFE3  F038         	goto	u7775
  9735   0071D6  5006               	movf	??___fltol^0,w,c
  9736   0071D8  6E0A               	movwf	___fltol@sign1^0,c
  9737   0071DA  8E04               	bsf	(___fltol@f1+2)^0,7,c
  9738   0071DC  0EFF               	movlw	255
  9739   0071DE  1602               	andwf	___fltol@f1^0,f,c
  9740   0071E0  0EFF               	movlw	255
  9741   0071E2  1603               	andwf	(___fltol@f1+1)^0,f,c
  9742   0071E4  0EFF               	movlw	255
  9743   0071E6  1604               	andwf	(___fltol@f1+2)^0,f,c
  9744   0071E8  0E00               	movlw	0
  9745   0071EA  1605               	andwf	(___fltol@f1+3)^0,f,c
  9746   0071EC  0E96               	movlw	150
  9747   0071EE  5E0B               	subwf	___fltol@exp1^0,f,c
  9748   0071F0  BE0B               	btfsc	___fltol@exp1^0,7,c
  9749   0071F2  EFFF  F038         	goto	u7780
  9750   0071F6  EFFD  F038         	goto	u7781
  9751   0071FA                     u7781:
  9752   0071FA  EF15  F039         	goto	l7286
  9753   0071FE                     u7780:
  9754   0071FE  500B               	movf	___fltol@exp1^0,w,c
  9755   007200  0A80               	xorlw	128
  9756   007202  0F97               	addlw	151
  9757   007204  B0D8               	btfsc	status,0,c
  9758   007206  EF07  F039         	goto	u7791
  9759   00720A  EF09  F039         	goto	u7790
  9760   00720E                     u7791:
  9761   00720E  EF0B  F039         	goto	l7282
  9762   007212                     u7790:
  9763   007212  EFCE  F038         	goto	l7262
  9764   007216                     l7282:
  9765   007216  90D8               	bcf	status,0,c
  9766   007218  3205               	rrcf	(___fltol@f1+3)^0,f,c
  9767   00721A  3204               	rrcf	(___fltol@f1+2)^0,f,c
  9768   00721C  3203               	rrcf	(___fltol@f1+1)^0,f,c
  9769   00721E  3202               	rrcf	___fltol@f1^0,f,c
  9770   007220  3E0B               	incfsz	___fltol@exp1^0,f,c
  9771   007222  EF0B  F039         	goto	l7282
  9772   007226  EF2D  F039         	goto	l7296
  9773   00722A                     l7286:
  9774   00722A  0E1F               	movlw	31
  9775   00722C  640B               	cpfsgt	___fltol@exp1^0,c
  9776   00722E  EF1B  F039         	goto	u7801
  9777   007232  EF1D  F039         	goto	u7800
  9778   007236                     u7801:
  9779   007236  EF25  F039         	goto	l7294
  9780   00723A                     u7800:
  9781   00723A  EFCE  F038         	goto	l7262
  9782   00723E                     l7292:
  9783   00723E  90D8               	bcf	status,0,c
  9784   007240  3602               	rlcf	___fltol@f1^0,f,c
  9785   007242  3603               	rlcf	(___fltol@f1+1)^0,f,c
  9786   007244  3604               	rlcf	(___fltol@f1+2)^0,f,c
  9787   007246  3605               	rlcf	(___fltol@f1+3)^0,f,c
  9788   007248  060B               	decf	___fltol@exp1^0,f,c
  9789   00724A                     l7294:
  9790   00724A  500B               	movf	___fltol@exp1^0,w,c
  9791   00724C  A4D8               	btfss	status,2,c
  9792   00724E  EF2B  F039         	goto	u7811
  9793   007252  EF2D  F039         	goto	u7810
  9794   007256                     u7811:
  9795   007256  EF1F  F039         	goto	l7292
  9796   00725A                     u7810:
  9797   00725A                     l7296:
  9798   00725A  500A               	movf	___fltol@sign1^0,w,c
  9799   00725C  B4D8               	btfsc	status,2,c
  9800   00725E  EF33  F039         	goto	u7821
  9801   007262  EF35  F039         	goto	u7820
  9802   007266                     u7821:
  9803   007266  EF3D  F039         	goto	l7300
  9804   00726A                     u7820:
  9805   00726A  1E05               	comf	(___fltol@f1+3)^0,f,c
  9806   00726C  1E04               	comf	(___fltol@f1+2)^0,f,c
  9807   00726E  1E03               	comf	(___fltol@f1+1)^0,f,c
  9808   007270  6C02               	negf	___fltol@f1^0,c
  9809   007272  0E00               	movlw	0
  9810   007274  2203               	addwfc	(___fltol@f1+1)^0,f,c
  9811   007276  2204               	addwfc	(___fltol@f1+2)^0,f,c
  9812   007278  2205               	addwfc	(___fltol@f1+3)^0,f,c
  9813   00727A                     l7300:
  9814   00727A  C002  F002         	movff	___fltol@f1,?___fltol
  9815   00727E  C003  F003         	movff	___fltol@f1+1,?___fltol+1
  9816   007282  C004  F004         	movff	___fltol@f1+2,?___fltol+2
  9817   007286  C005  F005         	movff	___fltol@f1+3,?___fltol+3
  9818   00728A                     l862:
  9819   00728A  0012               	return		;funcret
  9820   00728C                     __end_of___fltol:
  9821                           	callstack 0
  9822                           
  9823 ;; *************** function ___fleq *****************
  9824 ;; Defined at:
  9825 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  9826 ;; Parameters:    Size  Location     Type
  9827 ;;  ff1             4    1[COMRAM] long 
  9828 ;;  ff2             4    5[COMRAM] long 
  9829 ;; Auto vars:     Size  Location     Type
  9830 ;;		None
  9831 ;; Return value:  Size  Location     Type
  9832 ;;		None               void
  9833 ;; Registers used:
  9834 ;;		wreg, status,2, status,0
  9835 ;; Tracked objects:
  9836 ;;		On entry : 0/0
  9837 ;;		On exit  : 0/0
  9838 ;;		Unchanged: 0/0
  9839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9840 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9842 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9843 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9844 ;;Total ram usage:       12 bytes
  9845 ;; Hardware stack levels used: 1
  9846 ;; Hardware stack levels required when called: 2
  9847 ;; This function calls:
  9848 ;;		Nothing
  9849 ;; This function is called by:
  9850 ;;		_efgtoa
  9851 ;; This function uses a non-reentrant model
  9852 ;;
  9853                           
  9854                           	psect	text33
  9855   007B9C                     __ptext33:
  9856                           	callstack 0
  9857   007B9C                     ___fleq:
  9858                           	callstack 23
  9859   007B9C  0E00               	movlw	0
  9860   007B9E  1402               	andwf	___fleq@ff1^0,w,c
  9861   007BA0  6E0A               	movwf	??___fleq^0,c
  9862   007BA2  0E00               	movlw	0
  9863   007BA4  1403               	andwf	(___fleq@ff1+1)^0,w,c
  9864   007BA6  6E0B               	movwf	(??___fleq+1)^0,c
  9865   007BA8  0E80               	movlw	128
  9866   007BAA  1404               	andwf	(___fleq@ff1+2)^0,w,c
  9867   007BAC  6E0C               	movwf	(??___fleq+2)^0,c
  9868   007BAE  0E7F               	movlw	127
  9869   007BB0  1405               	andwf	(___fleq@ff1+3)^0,w,c
  9870   007BB2  6E0D               	movwf	(??___fleq+3)^0,c
  9871   007BB4  500A               	movf	??___fleq^0,w,c
  9872   007BB6  100B               	iorwf	(??___fleq+1)^0,w,c
  9873   007BB8  100C               	iorwf	(??___fleq+2)^0,w,c
  9874   007BBA  100D               	iorwf	(??___fleq+3)^0,w,c
  9875   007BBC  A4D8               	btfss	status,2,c
  9876   007BBE  EFE3  F03D         	goto	u7671
  9877   007BC2  EFE5  F03D         	goto	u7670
  9878   007BC6                     u7671:
  9879   007BC6  EFED  F03D         	goto	l7218
  9880   007BCA                     u7670:
  9881   007BCA  0E00               	movlw	0
  9882   007BCC  6E02               	movwf	___fleq@ff1^0,c
  9883   007BCE  0E00               	movlw	0
  9884   007BD0  6E03               	movwf	(___fleq@ff1+1)^0,c
  9885   007BD2  0E00               	movlw	0
  9886   007BD4  6E04               	movwf	(___fleq@ff1+2)^0,c
  9887   007BD6  0E00               	movlw	0
  9888   007BD8  6E05               	movwf	(___fleq@ff1+3)^0,c
  9889   007BDA                     l7218:
  9890   007BDA  0E00               	movlw	0
  9891   007BDC  1406               	andwf	___fleq@ff2^0,w,c
  9892   007BDE  6E0A               	movwf	??___fleq^0,c
  9893   007BE0  0E00               	movlw	0
  9894   007BE2  1407               	andwf	(___fleq@ff2+1)^0,w,c
  9895   007BE4  6E0B               	movwf	(??___fleq+1)^0,c
  9896   007BE6  0E80               	movlw	128
  9897   007BE8  1408               	andwf	(___fleq@ff2+2)^0,w,c
  9898   007BEA  6E0C               	movwf	(??___fleq+2)^0,c
  9899   007BEC  0E7F               	movlw	127
  9900   007BEE  1409               	andwf	(___fleq@ff2+3)^0,w,c
  9901   007BF0  6E0D               	movwf	(??___fleq+3)^0,c
  9902   007BF2  500A               	movf	??___fleq^0,w,c
  9903   007BF4  100B               	iorwf	(??___fleq+1)^0,w,c
  9904   007BF6  100C               	iorwf	(??___fleq+2)^0,w,c
  9905   007BF8  100D               	iorwf	(??___fleq+3)^0,w,c
  9906   007BFA  A4D8               	btfss	status,2,c
  9907   007BFC  EF02  F03E         	goto	u7681
  9908   007C00  EF04  F03E         	goto	u7680
  9909   007C04                     u7681:
  9910   007C04  EF0C  F03E         	goto	l7222
  9911   007C08                     u7680:
  9912   007C08  0E00               	movlw	0
  9913   007C0A  6E06               	movwf	___fleq@ff2^0,c
  9914   007C0C  0E00               	movlw	0
  9915   007C0E  6E07               	movwf	(___fleq@ff2+1)^0,c
  9916   007C10  0E00               	movlw	0
  9917   007C12  6E08               	movwf	(___fleq@ff2+2)^0,c
  9918   007C14  0E00               	movlw	0
  9919   007C16  6E09               	movwf	(___fleq@ff2+3)^0,c
  9920   007C18                     l7222:
  9921   007C18  5006               	movf	___fleq@ff2^0,w,c
  9922   007C1A  1802               	xorwf	___fleq@ff1^0,w,c
  9923   007C1C  E10F               	bnz	u7690
  9924   007C1E  5007               	movf	(___fleq@ff2+1)^0,w,c
  9925   007C20  1803               	xorwf	(___fleq@ff1+1)^0,w,c
  9926   007C22  E10C               	bnz	u7690
  9927   007C24  5008               	movf	(___fleq@ff2+2)^0,w,c
  9928   007C26  1804               	xorwf	(___fleq@ff1+2)^0,w,c
  9929   007C28  E109               	bnz	u7690
  9930   007C2A  5009               	movf	(___fleq@ff2+3)^0,w,c
  9931   007C2C  1805               	xorwf	(___fleq@ff1+3)^0,w,c
  9932   007C2E  B4D8               	btfsc	status,2,c
  9933   007C30  EF1C  F03E         	goto	u7691
  9934   007C34  EF1E  F03E         	goto	u7690
  9935   007C38                     u7691:
  9936   007C38  EF21  F03E         	goto	l7226
  9937   007C3C                     u7690:
  9938   007C3C  90D8               	bcf	status,0,c
  9939   007C3E  EF22  F03E         	goto	l824
  9940   007C42                     l7226:
  9941   007C42  80D8               	bsf	status,0,c
  9942   007C44                     l824:
  9943   007C44  0012               	return		;funcret
  9944   007C46                     __end_of___fleq:
  9945                           	callstack 0
  9946                           
  9947 ;; *************** function _sendStringSerial4 *****************
  9948 ;; Defined at:
  9949 ;;		line 38 in file "serial.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;  string          2    2[COMRAM] PTR unsigned char 
  9952 ;;		 -> decide_action@blue_val(20), decide_action@green_val(20), decide_action@red_val(20), 
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;		None
  9955 ;; Return value:  Size  Location     Type
  9956 ;;                  1    wreg      void 
  9957 ;; Registers used:
  9958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9959 ;; Tracked objects:
  9960 ;;		On entry : 0/0
  9961 ;;		On exit  : 0/0
  9962 ;;		Unchanged: 0/0
  9963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9968 ;;Total ram usage:        2 bytes
  9969 ;; Hardware stack levels used: 1
  9970 ;; Hardware stack levels required when called: 3
  9971 ;; This function calls:
  9972 ;;		_sendCharSerial4
  9973 ;; This function is called by:
  9974 ;;		_decide_action
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978                           	psect	text34
  9979   00835C                     __ptext34:
  9980                           	callstack 0
  9981   00835C                     _sendStringSerial4:
  9982                           	callstack 26
  9983   00835C                     
  9984                           ;serial.c: 40:     while(*string != 0){
  9985   00835C  EFB9  F041         	goto	l5396
  9986   008360                     l5392:
  9987                           
  9988                           ;serial.c: 41:   sendCharSerial4(*string++);
  9989   008360  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  9990   008364  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9991   008368  50DF               	movf	indf2,w,c
  9992   00836A  EC4D  F042         	call	_sendCharSerial4
  9993   00836E  4A03               	infsnz	sendStringSerial4@string^0,f,c
  9994   008370  2A04               	incf	(sendStringSerial4@string+1)^0,f,c
  9995   008372                     l5396:
  9996                           
  9997                           ;serial.c: 40:     while(*string != 0){
  9998   008372  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  9999   008376  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 10000   00837A  50DF               	movf	indf2,w,c
 10001   00837C  A4D8               	btfss	status,2,c
 10002   00837E  EFC3  F041         	goto	u5421
 10003   008382  EFC5  F041         	goto	u5420
 10004   008386                     u5421:
 10005   008386  EFB0  F041         	goto	l5392
 10006   00838A                     u5420:
 10007   00838A  0012               	return		;funcret
 10008   00838C                     __end_of_sendStringSerial4:
 10009                           	callstack 0
 10010                           
 10011 ;; *************** function _sendCharSerial4 *****************
 10012 ;; Defined at:
 10013 ;;		line 31 in file "serial.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;  charToSend      1    wreg     unsigned char 
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;  charToSend      1    1[COMRAM] unsigned char 
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  1    wreg      void 
 10020 ;; Registers used:
 10021 ;;		wreg
 10022 ;; Tracked objects:
 10023 ;;		On entry : 0/0
 10024 ;;		On exit  : 0/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10031 ;;Total ram usage:        1 bytes
 10032 ;; Hardware stack levels used: 1
 10033 ;; Hardware stack levels required when called: 2
 10034 ;; This function calls:
 10035 ;;		Nothing
 10036 ;; This function is called by:
 10037 ;;		_sendStringSerial4
 10038 ;; This function uses a non-reentrant model
 10039 ;;
 10040                           
 10041                           	psect	text35
 10042   00849A                     __ptext35:
 10043                           	callstack 0
 10044   00849A                     _sendCharSerial4:
 10045                           	callstack 26
 10046                           
 10047                           ;incstack = 0
 10048                           ;sendCharSerial4@charToSend stored from wreg
 10049   00849A  6E02               	movwf	sendCharSerial4@charToSend^0,c
 10050   00849C                     l500:
 10051   00849C  010E               	movlb	14	; () banked
 10052   00849E  A537               	btfss	55,2,b	;volatile
 10053   0084A0  EF54  F042         	goto	u5211
 10054   0084A4  EF56  F042         	goto	u5210
 10055   0084A8                     u5211:
 10056   0084A8  EF4E  F042         	goto	l500
 10057   0084AC                     u5210:
 10058   0084AC                     
 10059                           ; BSR set to: 14
 10060                           ;serial.c: 33:     TX4REG = charToSend;
 10061   0084AC  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 10062   0084B0                     
 10063                           ; BSR set to: 14
 10064   0084B0  0012               	return		;funcret
 10065   0084B2                     __end_of_sendCharSerial4:
 10066                           	callstack 0
 10067                           
 10068 ;; *************** function _powf *****************
 10069 ;; Defined at:
 10070 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\powf.c"
 10071 ;; Parameters:    Size  Location     Type
 10072 ;;  x               4    0[BANK0 ] float 
 10073 ;;  y               4    4[BANK0 ] float 
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;  s2              4  144[BANK1 ] float 
 10076 ;;  s_h             4  116[BANK1 ] struct fui
 10077 ;;  t_h             4  112[BANK1 ] struct fui
 10078 ;;  t_l             4   52[BANK1 ] float 
 10079 ;;  s_l             4   48[BANK1 ] float 
 10080 ;;  z               4  180[BANK1 ] struct fui
 10081 ;;  t               4  176[BANK1 ] struct fui
 10082 ;;  ix              4  172[BANK1 ] struct fui
 10083 ;;  j               4  168[BANK1 ] long 
 10084 ;;  k               4  164[BANK1 ] long 
 10085 ;;  p_h             4  160[BANK1 ] struct fui
 10086 ;;  is              4  152[BANK1 ] struct fui
 10087 ;;  iy              4  148[BANK1 ] long 
 10088 ;;  t1              4  140[BANK1 ] struct fui
 10089 ;;  n               4  136[BANK1 ] long 
 10090 ;;  hy              4  132[BANK1 ] struct fui
 10091 ;;  v               4  128[BANK1 ] float 
 10092 ;;  u               4  124[BANK1 ] float 
 10093 ;;  ax              4  120[BANK1 ] struct fui
 10094 ;;  p_l             4  108[BANK1 ] float 
 10095 ;;  hx              4  104[BANK1 ] struct fui
 10096 ;;  sn              4  100[BANK1 ] unsigned long 
 10097 ;;  s               4   96[BANK1 ] float 
 10098 ;;  yisint          4   84[BANK1 ] long 
 10099 ;;  r               4   80[BANK1 ] float 
 10100 ;;  w               4   68[BANK1 ] float 
 10101 ;;  y1              4   44[BANK1 ] struct fui
 10102 ;;  i               4   40[BANK1 ] long 
 10103 ;;  z_l             4   36[BANK1 ] float 
 10104 ;;  z_h             4   32[BANK1 ] float 
 10105 ;;  t2              4   28[BANK1 ] float 
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  4    0[BANK0 ] float 
 10108 ;; Registers used:
 10109 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10110 ;; Tracked objects:
 10111 ;;		On entry : 0/0
 10112 ;;		On exit  : 0/0
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10115 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10116 ;;      Locals:         0       0     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10117 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10118 ;;      Totals:         0      17     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10119 ;;Total ram usage:      201 bytes
 10120 ;; Hardware stack levels used: 1
 10121 ;; Hardware stack levels required when called: 4
 10122 ;; This function calls:
 10123 ;;		___fladd
 10124 ;;		___fldiv
 10125 ;;		___flge
 10126 ;;		___flmul
 10127 ;;		___flneg
 10128 ;;		___flsub
 10129 ;;		___xxtofl
 10130 ;;		_scalbnf
 10131 ;;		_sqrtf
 10132 ;; This function is called by:
 10133 ;;		_decide_action
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137                           	psect	text36
 10138   000EA4                     __ptext36:
 10139                           	callstack 0
 10140   000EA4                     _powf:
 10141                           	callstack 25
 10142   000EA4  C060  F168         	movff	powf@x,powf@hx
 10143   000EA8  C061  F169         	movff	powf@x+1,powf@hx+1
 10144   000EAC  C062  F16A         	movff	powf@x+2,powf@hx+2
 10145   000EB0  C063  F16B         	movff	powf@x+3,powf@hx+3
 10146   000EB4  C064  F184         	movff	powf@y,powf@hy
 10147   000EB8  C065  F185         	movff	powf@y+1,powf@hy+1
 10148   000EBC  C066  F186         	movff	powf@y+2,powf@hy+2
 10149   000EC0  C067  F187         	movff	powf@y+3,powf@hy+3
 10150   000EC4  0EFF               	movlw	255
 10151   000EC6  0101               	movlb	1	; () banked
 10152   000EC8  1568               	andwf	powf@hx& (0+255),w,b
 10153   000ECA  6FAC               	movwf	powf@ix& (0+255),b
 10154   000ECC  0EFF               	movlw	255
 10155   000ECE  1569               	andwf	(powf@hx+1)& (0+255),w,b
 10156   000ED0  6FAD               	movwf	(powf@ix+1)& (0+255),b
 10157   000ED2  0EFF               	movlw	255
 10158   000ED4  156A               	andwf	(powf@hx+2)& (0+255),w,b
 10159   000ED6  6FAE               	movwf	(powf@ix+2)& (0+255),b
 10160   000ED8  0E7F               	movlw	127
 10161   000EDA  156B               	andwf	(powf@hx+3)& (0+255),w,b
 10162   000EDC  6FAF               	movwf	(powf@ix+3)& (0+255),b
 10163   000EDE  0EFF               	movlw	255
 10164   000EE0  1584               	andwf	powf@hy& (0+255),w,b
 10165   000EE2  6F94               	movwf	powf@iy& (0+255),b
 10166   000EE4  0EFF               	movlw	255
 10167   000EE6  1585               	andwf	(powf@hy+1)& (0+255),w,b
 10168   000EE8  6F95               	movwf	(powf@iy+1)& (0+255),b
 10169   000EEA  0EFF               	movlw	255
 10170   000EEC  1586               	andwf	(powf@hy+2)& (0+255),w,b
 10171   000EEE  6F96               	movwf	(powf@iy+2)& (0+255),b
 10172   000EF0  0E7F               	movlw	127
 10173   000EF2  1587               	andwf	(powf@hy+3)& (0+255),w,b
 10174   000EF4  6F97               	movwf	(powf@iy+3)& (0+255),b
 10175   000EF6  5194               	movf	powf@iy& (0+255),w,b
 10176   000EF8  1195               	iorwf	(powf@iy+1)& (0+255),w,b
 10177   000EFA  1196               	iorwf	(powf@iy+2)& (0+255),w,b
 10178   000EFC  1197               	iorwf	(powf@iy+3)& (0+255),w,b
 10179   000EFE  A4D8               	btfss	status,2,c
 10180   000F00  EF84  F007         	goto	u8471
 10181   000F04  EF86  F007         	goto	u8470
 10182   000F08                     u8471:
 10183   000F08  EF91  F007         	goto	l7748
 10184   000F0C                     u8470:
 10185   000F0C                     
 10186                           ; BSR set to: 1
 10187   000F0C  0E00               	movlw	0
 10188   000F0E  0100               	movlb	0	; () banked
 10189   000F10  6F60               	movwf	?_powf& (0+255),b
 10190   000F12  0E00               	movlw	0
 10191   000F14  6F61               	movwf	(?_powf+1)& (0+255),b
 10192   000F16  0E80               	movlw	128
 10193   000F18  6F62               	movwf	(?_powf+2)& (0+255),b
 10194   000F1A  0E3F               	movlw	63
 10195   000F1C  6F63               	movwf	(?_powf+3)& (0+255),b
 10196   000F1E  EF91  F019         	goto	l1469
 10197   000F22                     l7748:
 10198                           
 10199                           ; BSR set to: 1
 10200   000F22  0E80               	movlw	128
 10201   000F24  196A               	xorwf	(powf@hx+2)& (0+255),w,b
 10202   000F26  E109               	bnz	u8481
 10203   000F28  0E3F               	movlw	63
 10204   000F2A  196B               	xorwf	(powf@hx+3)& (0+255),w,b
 10205   000F2C  1168               	iorwf	powf@hx& (0+255),w,b
 10206   000F2E  1169               	iorwf	(powf@hx+1)& (0+255),w,b
 10207   000F30  A4D8               	btfss	status,2,c
 10208   000F32  EF9D  F007         	goto	u8481
 10209   000F36  EF9F  F007         	goto	u8480
 10210   000F3A                     u8481:
 10211   000F3A  EFAA  F007         	goto	l7754
 10212   000F3E                     u8480:
 10213   000F3E                     
 10214                           ; BSR set to: 1
 10215   000F3E  0E00               	movlw	0
 10216   000F40  0100               	movlb	0	; () banked
 10217   000F42  6F60               	movwf	?_powf& (0+255),b
 10218   000F44  0E00               	movlw	0
 10219   000F46  6F61               	movwf	(?_powf+1)& (0+255),b
 10220   000F48  0E80               	movlw	128
 10221   000F4A  6F62               	movwf	(?_powf+2)& (0+255),b
 10222   000F4C  0E3F               	movlw	63
 10223   000F4E  6F63               	movwf	(?_powf+3)& (0+255),b
 10224   000F50  EF91  F019         	goto	l1469
 10225   000F54                     l7754:
 10226                           
 10227                           ; BSR set to: 1
 10228   000F54  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10229   000F56  EFBB  F007         	goto	u8490
 10230   000F5A  05AC               	decf	powf@ix& (0+255),w,b
 10231   000F5C  0E00               	movlw	0
 10232   000F5E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
 10233   000F60  0E80               	movlw	128
 10234   000F62  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
 10235   000F64  0E7F               	movlw	127
 10236   000F66  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
 10237   000F68  B0D8               	btfsc	status,0,c
 10238   000F6A  EFB9  F007         	goto	u8491
 10239   000F6E  EFBB  F007         	goto	u8490
 10240   000F72                     u8491:
 10241   000F72  EFCC  F007         	goto	l7758
 10242   000F76                     u8490:
 10243   000F76                     
 10244                           ; BSR set to: 1
 10245   000F76  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
 10246   000F78  EFCA  F007         	goto	u8501
 10247   000F7C  0594               	decf	powf@iy& (0+255),w,b
 10248   000F7E  0E00               	movlw	0
 10249   000F80  5995               	subwfb	(powf@iy+1)& (0+255),w,b
 10250   000F82  0E80               	movlw	128
 10251   000F84  5996               	subwfb	(powf@iy+2)& (0+255),w,b
 10252   000F86  0E7F               	movlw	127
 10253   000F88  5997               	subwfb	(powf@iy+3)& (0+255),w,b
 10254   000F8A  A0D8               	btfss	status,0,c
 10255   000F8C  EFCA  F007         	goto	u8501
 10256   000F90  EFCC  F007         	goto	u8500
 10257   000F94                     u8501:
 10258   000F94  EFE8  F007         	goto	l7762
 10259   000F98                     u8500:
 10260   000F98                     l7758:
 10261                           
 10262                           ; BSR set to: 1
 10263   000F98  C060  F002         	movff	powf@x,___fladd@b
 10264   000F9C  C061  F003         	movff	powf@x+1,___fladd@b+1
 10265   000FA0  C062  F004         	movff	powf@x+2,___fladd@b+2
 10266   000FA4  C063  F005         	movff	powf@x+3,___fladd@b+3
 10267   000FA8  C064  F006         	movff	powf@y,___fladd@a
 10268   000FAC  C065  F007         	movff	powf@y+1,___fladd@a+1
 10269   000FB0  C066  F008         	movff	powf@y+2,___fladd@a+2
 10270   000FB4  C067  F009         	movff	powf@y+3,___fladd@a+3
 10271   000FB8  EC68  F02B         	call	___fladd	;wreg free
 10272   000FBC  C002  F060         	movff	?___fladd,?_powf
 10273   000FC0  C003  F061         	movff	?___fladd+1,?_powf+1
 10274   000FC4  C004  F062         	movff	?___fladd+2,?_powf+2
 10275   000FC8  C005  F063         	movff	?___fladd+3,?_powf+3
 10276   000FCC  EF91  F019         	goto	l1469
 10277   000FD0                     l7762:
 10278                           
 10279                           ; BSR set to: 1
 10280   000FD0  0E00               	movlw	0
 10281   000FD2  6F54               	movwf	powf@yisint& (0+255),b
 10282   000FD4  0E00               	movlw	0
 10283   000FD6  6F55               	movwf	(powf@yisint+1)& (0+255),b
 10284   000FD8  0E00               	movlw	0
 10285   000FDA  6F56               	movwf	(powf@yisint+2)& (0+255),b
 10286   000FDC  0E00               	movlw	0
 10287   000FDE  6F57               	movwf	(powf@yisint+3)& (0+255),b
 10288   000FE0                     
 10289                           ; BSR set to: 1
 10290   000FE0  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
 10291   000FE2  EFF7  F007         	goto	u8510
 10292   000FE6  EFF5  F007         	goto	u8511
 10293   000FEA                     u8511:
 10294   000FEA  EFC3  F008         	goto	l1474
 10295   000FEE                     u8510:
 10296   000FEE                     
 10297                           ; BSR set to: 1
 10298   000FEE  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
 10299   000FF0  EF03  F008         	goto	u8521
 10300   000FF4  0E80               	movlw	128
 10301   000FF6  5D96               	subwf	(powf@iy+2)& (0+255),w,b
 10302   000FF8  0E4B               	movlw	75
 10303   000FFA  5997               	subwfb	(powf@iy+3)& (0+255),w,b
 10304   000FFC  A0D8               	btfss	status,0,c
 10305   000FFE  EF03  F008         	goto	u8521
 10306   001002  EF05  F008         	goto	u8520
 10307   001006                     u8521:
 10308   001006  EF0F  F008         	goto	l7770
 10309   00100A                     u8520:
 10310   00100A                     
 10311                           ; BSR set to: 1
 10312   00100A  0E02               	movlw	2
 10313   00100C  6F54               	movwf	powf@yisint& (0+255),b
 10314   00100E  0E00               	movlw	0
 10315   001010  6F55               	movwf	(powf@yisint+1)& (0+255),b
 10316   001012  0E00               	movlw	0
 10317   001014  6F56               	movwf	(powf@yisint+2)& (0+255),b
 10318   001016  0E00               	movlw	0
 10319   001018  6F57               	movwf	(powf@yisint+3)& (0+255),b
 10320   00101A  EFC3  F008         	goto	l1474
 10321   00101E                     l7770:
 10322                           
 10323                           ; BSR set to: 1
 10324   00101E  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
 10325   001020  EF1B  F008         	goto	u8531
 10326   001024  0E80               	movlw	128
 10327   001026  5D96               	subwf	(powf@iy+2)& (0+255),w,b
 10328   001028  0E3F               	movlw	63
 10329   00102A  5997               	subwfb	(powf@iy+3)& (0+255),w,b
 10330   00102C  A0D8               	btfss	status,0,c
 10331   00102E  EF1B  F008         	goto	u8531
 10332   001032  EF1D  F008         	goto	u8530
 10333   001036                     u8531:
 10334   001036  EFC3  F008         	goto	l1474
 10335   00103A                     u8530:
 10336   00103A                     
 10337                           ; BSR set to: 1
 10338   00103A  0E17               	movlw	23
 10339   00103C  0100               	movlb	0	; () banked
 10340   00103E  6F68               	movwf	??_powf& (0+255),b
 10341   001040  C194  F069         	movff	powf@iy,??_powf+1
 10342   001044  C195  F06A         	movff	powf@iy+1,??_powf+2
 10343   001048  C196  F06B         	movff	powf@iy+2,??_powf+3
 10344   00104C  C197  F06C         	movff	powf@iy+3,??_powf+4
 10345   001050                     u8545:
 10346   001050  6768               	tstfsz	??_powf& (0+255),b
 10347   001052  EF2D  F008         	goto	u8546
 10348   001056  EF35  F008         	goto	u8547
 10349   00105A                     u8546:
 10350   00105A  356C               	rlcf	(??_powf+4)& (0+255),w,b
 10351   00105C  336C               	rrcf	(??_powf+4)& (0+255),f,b
 10352   00105E  336B               	rrcf	(??_powf+3)& (0+255),f,b
 10353   001060  336A               	rrcf	(??_powf+2)& (0+255),f,b
 10354   001062  3369               	rrcf	(??_powf+1)& (0+255),f,b
 10355   001064  2F68               	decfsz	??_powf& (0+255),f,b
 10356   001066  EF28  F008         	goto	u8545
 10357   00106A                     u8547:
 10358   00106A  0E81               	movlw	129
 10359   00106C  0100               	movlb	0	; () banked
 10360   00106E  2569               	addwf	(??_powf+1)& (0+255),w,b
 10361   001070  0101               	movlb	1	; () banked
 10362   001072  6FA4               	movwf	powf@k& (0+255),b
 10363   001074  0EFF               	movlw	255
 10364   001076  0100               	movlb	0	; () banked
 10365   001078  216A               	addwfc	(??_powf+2)& (0+255),w,b
 10366   00107A  0101               	movlb	1	; () banked
 10367   00107C  6FA5               	movwf	(powf@k+1)& (0+255),b
 10368   00107E  0EFF               	movlw	255
 10369   001080  0100               	movlb	0	; () banked
 10370   001082  216B               	addwfc	(??_powf+3)& (0+255),w,b
 10371   001084  0101               	movlb	1	; () banked
 10372   001086  6FA6               	movwf	(powf@k+2)& (0+255),b
 10373   001088  0EFF               	movlw	255
 10374   00108A  0100               	movlb	0	; () banked
 10375   00108C  216C               	addwfc	(??_powf+4)& (0+255),w,b
 10376   00108E  0101               	movlb	1	; () banked
 10377   001090  6FA7               	movwf	(powf@k+3)& (0+255),b
 10378   001092  51A4               	movf	powf@k& (0+255),w,b
 10379   001094  0817               	sublw	23
 10380   001096  0100               	movlb	0	; () banked
 10381   001098  6F68               	movwf	??_powf& (0+255),b
 10382   00109A  C194  F069         	movff	powf@iy,??_powf+1
 10383   00109E  C195  F06A         	movff	powf@iy+1,??_powf+2
 10384   0010A2  C196  F06B         	movff	powf@iy+2,??_powf+3
 10385   0010A6  C197  F06C         	movff	powf@iy+3,??_powf+4
 10386   0010AA                     u8555:
 10387   0010AA  6768               	tstfsz	??_powf& (0+255),b
 10388   0010AC  EF5A  F008         	goto	u8556
 10389   0010B0  EF62  F008         	goto	u8557
 10390   0010B4                     u8556:
 10391   0010B4  356C               	rlcf	(??_powf+4)& (0+255),w,b
 10392   0010B6  336C               	rrcf	(??_powf+4)& (0+255),f,b
 10393   0010B8  336B               	rrcf	(??_powf+3)& (0+255),f,b
 10394   0010BA  336A               	rrcf	(??_powf+2)& (0+255),f,b
 10395   0010BC  3369               	rrcf	(??_powf+1)& (0+255),f,b
 10396   0010BE  2F68               	decfsz	??_powf& (0+255),f,b
 10397   0010C0  EF55  F008         	goto	u8555
 10398   0010C4                     u8557:
 10399   0010C4  C069  F1A8         	movff	??_powf+1,powf@j
 10400   0010C8  C06A  F1A9         	movff	??_powf+2,powf@j+1
 10401   0010CC  C06B  F1AA         	movff	??_powf+3,powf@j+2
 10402   0010D0  C06C  F1AB         	movff	??_powf+4,powf@j+3
 10403   0010D4  0101               	movlb	1	; () banked
 10404   0010D6  51A4               	movf	powf@k& (0+255),w,b
 10405   0010D8  0817               	sublw	23
 10406   0010DA  0100               	movlb	0	; () banked
 10407   0010DC  6F68               	movwf	??_powf& (0+255),b
 10408   0010DE  C1A8  F069         	movff	powf@j,??_powf+1
 10409   0010E2  C1A9  F06A         	movff	powf@j+1,??_powf+2
 10410   0010E6  C1AA  F06B         	movff	powf@j+2,??_powf+3
 10411   0010EA  C1AB  F06C         	movff	powf@j+3,??_powf+4
 10412   0010EE  2B68               	incf	??_powf& (0+255),f,b
 10413   0010F0  EF7F  F008         	goto	u8560
 10414   0010F4                     u8565:
 10415   0010F4  90D8               	bcf	status,0,c
 10416   0010F6  3769               	rlcf	(??_powf+1)& (0+255),f,b
 10417   0010F8  376A               	rlcf	(??_powf+2)& (0+255),f,b
 10418   0010FA  376B               	rlcf	(??_powf+3)& (0+255),f,b
 10419   0010FC  376C               	rlcf	(??_powf+4)& (0+255),f,b
 10420   0010FE                     u8560:
 10421   0010FE  2F68               	decfsz	??_powf& (0+255),f,b
 10422   001100  EF7A  F008         	goto	u8565
 10423   001104  0101               	movlb	1	; () banked
 10424   001106  5194               	movf	powf@iy& (0+255),w,b
 10425   001108  0100               	movlb	0	; () banked
 10426   00110A  1969               	xorwf	(??_powf+1)& (0+255),w,b
 10427   00110C  E113               	bnz	u8571
 10428   00110E  0101               	movlb	1	; () banked
 10429   001110  5195               	movf	(powf@iy+1)& (0+255),w,b
 10430   001112  0100               	movlb	0	; () banked
 10431   001114  196A               	xorwf	(??_powf+2)& (0+255),w,b
 10432   001116  E10E               	bnz	u8571
 10433   001118  0101               	movlb	1	; () banked
 10434   00111A  5196               	movf	(powf@iy+2)& (0+255),w,b
 10435   00111C  0100               	movlb	0	; () banked
 10436   00111E  196B               	xorwf	(??_powf+3)& (0+255),w,b
 10437   001120  E109               	bnz	u8571
 10438   001122  0101               	movlb	1	; () banked
 10439   001124  5197               	movf	(powf@iy+3)& (0+255),w,b
 10440   001126  0100               	movlb	0	; () banked
 10441   001128  196C               	xorwf	(??_powf+4)& (0+255),w,b
 10442   00112A  A4D8               	btfss	status,2,c
 10443   00112C  EF9A  F008         	goto	u8571
 10444   001130  EF9C  F008         	goto	u8570
 10445   001134                     u8571:
 10446   001134  EFC3  F008         	goto	l1474
 10447   001138                     u8570:
 10448   001138                     
 10449                           ; BSR set to: 0
 10450   001138  0E01               	movlw	1
 10451   00113A  0101               	movlb	1	; () banked
 10452   00113C  15A8               	andwf	powf@j& (0+255),w,b
 10453   00113E  0100               	movlb	0	; () banked
 10454   001140  6F68               	movwf	??_powf& (0+255),b
 10455   001142  0E00               	movlw	0
 10456   001144  0101               	movlb	1	; () banked
 10457   001146  15A9               	andwf	(powf@j+1)& (0+255),w,b
 10458   001148  0100               	movlb	0	; () banked
 10459   00114A  6F69               	movwf	(??_powf+1)& (0+255),b
 10460   00114C  0E00               	movlw	0
 10461   00114E  0101               	movlb	1	; () banked
 10462   001150  15AA               	andwf	(powf@j+2)& (0+255),w,b
 10463   001152  0100               	movlb	0	; () banked
 10464   001154  6F6A               	movwf	(??_powf+2)& (0+255),b
 10465   001156  0E00               	movlw	0
 10466   001158  0101               	movlb	1	; () banked
 10467   00115A  15AB               	andwf	(powf@j+3)& (0+255),w,b
 10468   00115C  0100               	movlb	0	; () banked
 10469   00115E  6F6B               	movwf	(??_powf+3)& (0+255),b
 10470   001160  5168               	movf	??_powf& (0+255),w,b
 10471   001162  0802               	sublw	2
 10472   001164  0101               	movlb	1	; () banked
 10473   001166  6F54               	movwf	powf@yisint& (0+255),b
 10474   001168  0E00               	movlw	0
 10475   00116A  0100               	movlb	0	; () banked
 10476   00116C  5569               	subfwb	(??_powf+1)& (0+255),w,b
 10477   00116E  0101               	movlb	1	; () banked
 10478   001170  6F55               	movwf	(powf@yisint+1)& (0+255),b
 10479   001172  0E00               	movlw	0
 10480   001174  0100               	movlb	0	; () banked
 10481   001176  556A               	subfwb	(??_powf+2)& (0+255),w,b
 10482   001178  0101               	movlb	1	; () banked
 10483   00117A  6F56               	movwf	(powf@yisint+2)& (0+255),b
 10484   00117C  0E00               	movlw	0
 10485   00117E  0100               	movlb	0	; () banked
 10486   001180  556B               	subfwb	(??_powf+3)& (0+255),w,b
 10487   001182  0101               	movlb	1	; () banked
 10488   001184  6F57               	movwf	(powf@yisint+3)& (0+255),b
 10489   001186                     l1474:
 10490   001186  0E80               	movlw	128
 10491   001188  0101               	movlb	1	; () banked
 10492   00118A  1996               	xorwf	(powf@iy+2)& (0+255),w,b
 10493   00118C  E109               	bnz	u8581
 10494   00118E  0E7F               	movlw	127
 10495   001190  1997               	xorwf	(powf@iy+3)& (0+255),w,b
 10496   001192  1194               	iorwf	powf@iy& (0+255),w,b
 10497   001194  1195               	iorwf	(powf@iy+1)& (0+255),w,b
 10498   001196  A4D8               	btfss	status,2,c
 10499   001198  EFD0  F008         	goto	u8581
 10500   00119C  EFD2  F008         	goto	u8580
 10501   0011A0                     u8581:
 10502   0011A0  EF3E  F009         	goto	l7800
 10503   0011A4                     u8580:
 10504   0011A4                     
 10505                           ; BSR set to: 1
 10506   0011A4  0E80               	movlw	128
 10507   0011A6  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
 10508   0011A8  E109               	bnz	u8591
 10509   0011AA  0E3F               	movlw	63
 10510   0011AC  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
 10511   0011AE  11AC               	iorwf	powf@ix& (0+255),w,b
 10512   0011B0  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
 10513   0011B2  A4D8               	btfss	status,2,c
 10514   0011B4  EFDE  F008         	goto	u8591
 10515   0011B8  EFE0  F008         	goto	u8590
 10516   0011BC                     u8591:
 10517   0011BC  EFEB  F008         	goto	l7784
 10518   0011C0                     u8590:
 10519   0011C0                     
 10520                           ; BSR set to: 1
 10521   0011C0  0E00               	movlw	0
 10522   0011C2  0100               	movlb	0	; () banked
 10523   0011C4  6F60               	movwf	?_powf& (0+255),b
 10524   0011C6  0E00               	movlw	0
 10525   0011C8  6F61               	movwf	(?_powf+1)& (0+255),b
 10526   0011CA  0E80               	movlw	128
 10527   0011CC  6F62               	movwf	(?_powf+2)& (0+255),b
 10528   0011CE  0E3F               	movlw	63
 10529   0011D0  6F63               	movwf	(?_powf+3)& (0+255),b
 10530   0011D2  EF91  F019         	goto	l1469
 10531   0011D6                     l7784:
 10532                           
 10533                           ; BSR set to: 1
 10534   0011D6  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10535   0011D8  EFFA  F008         	goto	u8601
 10536   0011DC  05AC               	decf	powf@ix& (0+255),w,b
 10537   0011DE  0E00               	movlw	0
 10538   0011E0  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
 10539   0011E2  0E80               	movlw	128
 10540   0011E4  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
 10541   0011E6  0E3F               	movlw	63
 10542   0011E8  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
 10543   0011EA  A0D8               	btfss	status,0,c
 10544   0011EC  EFFA  F008         	goto	u8601
 10545   0011F0  EFFC  F008         	goto	u8600
 10546   0011F4                     u8601:
 10547   0011F4  EF18  F009         	goto	l7792
 10548   0011F8                     u8600:
 10549   0011F8                     
 10550                           ; BSR set to: 1
 10551   0011F8  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10552   0011FA  EF03  F009         	goto	u8610
 10553   0011FE  EF01  F009         	goto	u8611
 10554   001202                     u8611:
 10555   001202  EF0E  F009         	goto	l1484
 10556   001206                     u8610:
 10557   001206                     
 10558                           ; BSR set to: 1
 10559   001206  0E00               	movlw	0
 10560   001208  0100               	movlb	0	; () banked
 10561   00120A  6F60               	movwf	?_powf& (0+255),b
 10562   00120C  0E00               	movlw	0
 10563   00120E  6F61               	movwf	(?_powf+1)& (0+255),b
 10564   001210  0E00               	movlw	0
 10565   001212  6F62               	movwf	(?_powf+2)& (0+255),b
 10566   001214  0E00               	movlw	0
 10567   001216  6F63               	movwf	(?_powf+3)& (0+255),b
 10568   001218  EF91  F019         	goto	l1469
 10569   00121C                     l1484:
 10570                           
 10571                           ; BSR set to: 1
 10572   00121C  C064  F060         	movff	powf@y,?_powf
 10573   001220  C065  F061         	movff	powf@y+1,?_powf+1
 10574   001224  C066  F062         	movff	powf@y+2,?_powf+2
 10575   001228  C067  F063         	movff	powf@y+3,?_powf+3
 10576   00122C  EF91  F019         	goto	l1469
 10577   001230                     l7792:
 10578                           
 10579                           ; BSR set to: 1
 10580   001230  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10581   001232  EF1F  F009         	goto	u8620
 10582   001236  EF1D  F009         	goto	u8621
 10583   00123A                     u8621:
 10584   00123A  EF33  F009         	goto	l7796
 10585   00123E                     u8620:
 10586   00123E                     
 10587                           ; BSR set to: 1
 10588   00123E  C064  F002         	movff	powf@y,___flneg@f1
 10589   001242  C065  F003         	movff	powf@y+1,___flneg@f1+1
 10590   001246  C066  F004         	movff	powf@y+2,___flneg@f1+2
 10591   00124A  C067  F005         	movff	powf@y+3,___flneg@f1+3
 10592   00124E  EC7A  F041         	call	___flneg	;wreg free
 10593   001252  C002  F060         	movff	?___flneg,?_powf
 10594   001256  C003  F061         	movff	?___flneg+1,?_powf+1
 10595   00125A  C004  F062         	movff	?___flneg+2,?_powf+2
 10596   00125E  C005  F063         	movff	?___flneg+3,?_powf+3
 10597   001262  EF91  F019         	goto	l1469
 10598   001266                     l7796:
 10599                           
 10600                           ; BSR set to: 1
 10601   001266  0E00               	movlw	0
 10602   001268  0100               	movlb	0	; () banked
 10603   00126A  6F60               	movwf	?_powf& (0+255),b
 10604   00126C  0E00               	movlw	0
 10605   00126E  6F61               	movwf	(?_powf+1)& (0+255),b
 10606   001270  0E00               	movlw	0
 10607   001272  6F62               	movwf	(?_powf+2)& (0+255),b
 10608   001274  0E00               	movlw	0
 10609   001276  6F63               	movwf	(?_powf+3)& (0+255),b
 10610   001278  EF91  F019         	goto	l1469
 10611   00127C                     l7800:
 10612                           
 10613                           ; BSR set to: 1
 10614   00127C  0E80               	movlw	128
 10615   00127E  1996               	xorwf	(powf@iy+2)& (0+255),w,b
 10616   001280  E109               	bnz	u8631
 10617   001282  0E3F               	movlw	63
 10618   001284  1997               	xorwf	(powf@iy+3)& (0+255),w,b
 10619   001286  1194               	iorwf	powf@iy& (0+255),w,b
 10620   001288  1195               	iorwf	(powf@iy+1)& (0+255),w,b
 10621   00128A  A4D8               	btfss	status,2,c
 10622   00128C  EF4A  F009         	goto	u8631
 10623   001290  EF4C  F009         	goto	u8630
 10624   001294                     u8631:
 10625   001294  EF79  F009         	goto	l7806
 10626   001298                     u8630:
 10627   001298                     
 10628                           ; BSR set to: 1
 10629   001298  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10630   00129A  EF53  F009         	goto	u8640
 10631   00129E  EF51  F009         	goto	u8641
 10632   0012A2                     u8641:
 10633   0012A2  EF6F  F009         	goto	l1494
 10634   0012A6                     u8640:
 10635   0012A6                     
 10636                           ; BSR set to: 1
 10637   0012A6  0E00               	movlw	0
 10638   0012A8  6E2B               	movwf	___fldiv@b^0,c
 10639   0012AA  0E00               	movlw	0
 10640   0012AC  6E2C               	movwf	(___fldiv@b+1)^0,c
 10641   0012AE  0E80               	movlw	128
 10642   0012B0  6E2D               	movwf	(___fldiv@b+2)^0,c
 10643   0012B2  0E3F               	movlw	63
 10644   0012B4  6E2E               	movwf	(___fldiv@b+3)^0,c
 10645   0012B6  C060  F02F         	movff	powf@x,___fldiv@a
 10646   0012BA  C061  F030         	movff	powf@x+1,___fldiv@a+1
 10647   0012BE  C062  F031         	movff	powf@x+2,___fldiv@a+2
 10648   0012C2  C063  F032         	movff	powf@x+3,___fldiv@a+3
 10649   0012C6  ECCC  F031         	call	___fldiv	;wreg free
 10650   0012CA  C02B  F060         	movff	?___fldiv,?_powf
 10651   0012CE  C02C  F061         	movff	?___fldiv+1,?_powf+1
 10652   0012D2  C02D  F062         	movff	?___fldiv+2,?_powf+2
 10653   0012D6  C02E  F063         	movff	?___fldiv+3,?_powf+3
 10654   0012DA  EF91  F019         	goto	l1469
 10655   0012DE                     l1494:
 10656                           
 10657                           ; BSR set to: 1
 10658   0012DE  C060  F060         	movff	powf@x,?_powf
 10659   0012E2  C061  F061         	movff	powf@x+1,?_powf+1
 10660   0012E6  C062  F062         	movff	powf@x+2,?_powf+2
 10661   0012EA  C063  F063         	movff	powf@x+3,?_powf+3
 10662   0012EE  EF91  F019         	goto	l1469
 10663   0012F2                     l7806:
 10664                           
 10665                           ; BSR set to: 1
 10666   0012F2  0E40               	movlw	64
 10667   0012F4  1987               	xorwf	(powf@hy+3)& (0+255),w,b
 10668   0012F6  1184               	iorwf	powf@hy& (0+255),w,b
 10669   0012F8  1185               	iorwf	(powf@hy+1)& (0+255),w,b
 10670   0012FA  1186               	iorwf	(powf@hy+2)& (0+255),w,b
 10671   0012FC  A4D8               	btfss	status,2,c
 10672   0012FE  EF83  F009         	goto	u8651
 10673   001302  EF85  F009         	goto	u8650
 10674   001306                     u8651:
 10675   001306  EFA1  F009         	goto	l7812
 10676   00130A                     u8650:
 10677   00130A                     
 10678                           ; BSR set to: 1
 10679   00130A  C060  F012         	movff	powf@x,___flmul@b
 10680   00130E  C061  F013         	movff	powf@x+1,___flmul@b+1
 10681   001312  C062  F014         	movff	powf@x+2,___flmul@b+2
 10682   001316  C063  F015         	movff	powf@x+3,___flmul@b+3
 10683   00131A  C060  F016         	movff	powf@x,___flmul@a
 10684   00131E  C061  F017         	movff	powf@x+1,___flmul@a+1
 10685   001322  C062  F018         	movff	powf@x+2,___flmul@a+2
 10686   001326  C063  F019         	movff	powf@x+3,___flmul@a+3
 10687   00132A  ECC8  F02D         	call	___flmul	;wreg free
 10688   00132E  C012  F060         	movff	?___flmul,?_powf
 10689   001332  C013  F061         	movff	?___flmul+1,?_powf+1
 10690   001336  C014  F062         	movff	?___flmul+2,?_powf+2
 10691   00133A  C015  F063         	movff	?___flmul+3,?_powf+3
 10692   00133E  EF91  F019         	goto	l1469
 10693   001342                     l7812:
 10694                           
 10695                           ; BSR set to: 1
 10696   001342  0E3F               	movlw	63
 10697   001344  1987               	xorwf	(powf@hy+3)& (0+255),w,b
 10698   001346  1184               	iorwf	powf@hy& (0+255),w,b
 10699   001348  1185               	iorwf	(powf@hy+1)& (0+255),w,b
 10700   00134A  1186               	iorwf	(powf@hy+2)& (0+255),w,b
 10701   00134C  A4D8               	btfss	status,2,c
 10702   00134E  EFAB  F009         	goto	u8661
 10703   001352  EFAD  F009         	goto	u8660
 10704   001356                     u8661:
 10705   001356  EFC8  F009         	goto	l1498
 10706   00135A                     u8660:
 10707   00135A                     
 10708                           ; BSR set to: 1
 10709   00135A  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
 10710   00135C  EFB2  F009         	goto	u8671
 10711   001360  EFB4  F009         	goto	u8670
 10712   001364                     u8671:
 10713   001364  EFC8  F009         	goto	l1498
 10714   001368                     u8670:
 10715   001368                     
 10716                           ; BSR set to: 1
 10717   001368  C060  F012         	movff	powf@x,sqrtf@x
 10718   00136C  C061  F013         	movff	powf@x+1,sqrtf@x+1
 10719   001370  C062  F014         	movff	powf@x+2,sqrtf@x+2
 10720   001374  C063  F015         	movff	powf@x+3,sqrtf@x+3
 10721   001378  ECDD  F02F         	call	_sqrtf	;wreg free
 10722   00137C  C012  F060         	movff	?_sqrtf,?_powf
 10723   001380  C013  F061         	movff	?_sqrtf+1,?_powf+1
 10724   001384  C014  F062         	movff	?_sqrtf+2,?_powf+2
 10725   001388  C015  F063         	movff	?_sqrtf+3,?_powf+3
 10726   00138C  EF91  F019         	goto	l1469
 10727   001390                     l1498:
 10728                           
 10729                           ; BSR set to: 1
 10730   001390  C1AC  F178         	movff	powf@ix,powf@ax
 10731   001394  C1AD  F179         	movff	powf@ix+1,powf@ax+1
 10732   001398  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
 10733   00139C  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
 10734   0013A0                     
 10735                           ; BSR set to: 1
 10736   0013A0  0E80               	movlw	128
 10737   0013A2  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
 10738   0013A4  E10B               	bnz	u8680
 10739   0013A6  0E7F               	movlw	127
 10740   0013A8  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
 10741   0013AA  11AC               	iorwf	powf@ix& (0+255),w,b
 10742   0013AC  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
 10743   0013AE  B4D8               	btfsc	status,2,c
 10744   0013B0  EFDC  F009         	goto	u8681
 10745   0013B4  EFDE  F009         	goto	u8680
 10746   0013B8                     u8681:
 10747   0013B8  EFF7  F009         	goto	l1502
 10748   0013BC                     u8680:
 10749   0013BC                     
 10750                           ; BSR set to: 1
 10751   0013BC  51AC               	movf	powf@ix& (0+255),w,b
 10752   0013BE  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
 10753   0013C0  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
 10754   0013C2  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
 10755   0013C4  B4D8               	btfsc	status,2,c
 10756   0013C6  EFE7  F009         	goto	u8691
 10757   0013CA  EFE9  F009         	goto	u8690
 10758   0013CE                     u8691:
 10759   0013CE  EFF7  F009         	goto	l1502
 10760   0013D2                     u8690:
 10761   0013D2                     
 10762                           ; BSR set to: 1
 10763   0013D2  0E80               	movlw	128
 10764   0013D4  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
 10765   0013D6  E109               	bnz	u8701
 10766   0013D8  0E3F               	movlw	63
 10767   0013DA  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
 10768   0013DC  11AC               	iorwf	powf@ix& (0+255),w,b
 10769   0013DE  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
 10770   0013E0  A4D8               	btfss	status,2,c
 10771   0013E2  EFF5  F009         	goto	u8701
 10772   0013E6  EFF7  F009         	goto	u8700
 10773   0013EA                     u8701:
 10774   0013EA  EF92  F00A         	goto	l7844
 10775   0013EE                     u8700:
 10776   0013EE                     l1502:
 10777                           
 10778                           ; BSR set to: 1
 10779   0013EE  C178  F1B4         	movff	powf@ax,powf@z
 10780   0013F2  C179  F1B5         	movff	powf@ax+1,powf@z+1
 10781   0013F6  C17A  F1B6         	movff	powf@ax+2,powf@z+2
 10782   0013FA  C17B  F1B7         	movff	powf@ax+3,powf@z+3
 10783   0013FE                     
 10784                           ; BSR set to: 1
 10785   0013FE  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10786   001400  EF06  F00A         	goto	u8710
 10787   001404  EF04  F00A         	goto	u8711
 10788   001408                     u8711:
 10789   001408  EF20  F00A         	goto	l7830
 10790   00140C                     u8710:
 10791   00140C                     
 10792                           ; BSR set to: 1
 10793   00140C  0E00               	movlw	0
 10794   00140E  6E2B               	movwf	___fldiv@b^0,c
 10795   001410  0E00               	movlw	0
 10796   001412  6E2C               	movwf	(___fldiv@b+1)^0,c
 10797   001414  0E80               	movlw	128
 10798   001416  6E2D               	movwf	(___fldiv@b+2)^0,c
 10799   001418  0E3F               	movlw	63
 10800   00141A  6E2E               	movwf	(___fldiv@b+3)^0,c
 10801   00141C  C1B4  F02F         	movff	powf@z,___fldiv@a
 10802   001420  C1B5  F030         	movff	powf@z+1,___fldiv@a+1
 10803   001424  C1B6  F031         	movff	powf@z+2,___fldiv@a+2
 10804   001428  C1B7  F032         	movff	powf@z+3,___fldiv@a+3
 10805   00142C  ECCC  F031         	call	___fldiv	;wreg free
 10806   001430  C02B  F1B4         	movff	?___fldiv,powf@z
 10807   001434  C02C  F1B5         	movff	?___fldiv+1,powf@z+1
 10808   001438  C02D  F1B6         	movff	?___fldiv+2,powf@z+2
 10809   00143C  C02E  F1B7         	movff	?___fldiv+3,powf@z+3
 10810   001440                     l7830:
 10811   001440  0101               	movlb	1	; () banked
 10812   001442  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
 10813   001444  EF28  F00A         	goto	u8720
 10814   001448  EF26  F00A         	goto	u8721
 10815   00144C                     u8721:
 10816   00144C  EF88  F00A         	goto	l7840
 10817   001450                     u8720:
 10818   001450                     
 10819                           ; BSR set to: 1
 10820   001450  0E00               	movlw	0
 10821   001452  25AC               	addwf	powf@ix& (0+255),w,b
 10822   001454  0100               	movlb	0	; () banked
 10823   001456  6F68               	movwf	??_powf& (0+255),b
 10824   001458  0E00               	movlw	0
 10825   00145A  0101               	movlb	1	; () banked
 10826   00145C  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
 10827   00145E  0100               	movlb	0	; () banked
 10828   001460  6F69               	movwf	(??_powf+1)& (0+255),b
 10829   001462  0E80               	movlw	128
 10830   001464  0101               	movlb	1	; () banked
 10831   001466  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
 10832   001468  0100               	movlb	0	; () banked
 10833   00146A  6F6A               	movwf	(??_powf+2)& (0+255),b
 10834   00146C  0EC0               	movlw	192
 10835   00146E  0101               	movlb	1	; () banked
 10836   001470  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
 10837   001472  0100               	movlb	0	; () banked
 10838   001474  6F6B               	movwf	(??_powf+3)& (0+255),b
 10839   001476  0101               	movlb	1	; () banked
 10840   001478  5154               	movf	powf@yisint& (0+255),w,b
 10841   00147A  0100               	movlb	0	; () banked
 10842   00147C  1168               	iorwf	??_powf& (0+255),w,b
 10843   00147E  6F6C               	movwf	(??_powf+4)& (0+255),b
 10844   001480  0101               	movlb	1	; () banked
 10845   001482  5155               	movf	(powf@yisint+1)& (0+255),w,b
 10846   001484  0100               	movlb	0	; () banked
 10847   001486  1169               	iorwf	(??_powf+1)& (0+255),w,b
 10848   001488  6F6D               	movwf	(??_powf+5)& (0+255),b
 10849   00148A  0101               	movlb	1	; () banked
 10850   00148C  5156               	movf	(powf@yisint+2)& (0+255),w,b
 10851   00148E  0100               	movlb	0	; () banked
 10852   001490  116A               	iorwf	(??_powf+2)& (0+255),w,b
 10853   001492  6F6E               	movwf	(??_powf+6)& (0+255),b
 10854   001494  0101               	movlb	1	; () banked
 10855   001496  5157               	movf	(powf@yisint+3)& (0+255),w,b
 10856   001498  0100               	movlb	0	; () banked
 10857   00149A  116B               	iorwf	(??_powf+3)& (0+255),w,b
 10858   00149C  6F6F               	movwf	(??_powf+7)& (0+255),b
 10859   00149E  516C               	movf	(??_powf+4)& (0+255),w,b
 10860   0014A0  116D               	iorwf	(??_powf+5)& (0+255),w,b
 10861   0014A2  116E               	iorwf	(??_powf+6)& (0+255),w,b
 10862   0014A4  116F               	iorwf	(??_powf+7)& (0+255),w,b
 10863   0014A6  A4D8               	btfss	status,2,c
 10864   0014A8  EF58  F00A         	goto	u8731
 10865   0014AC  EF5A  F00A         	goto	u8730
 10866   0014B0                     u8731:
 10867   0014B0  EF6A  F00A         	goto	l7836
 10868   0014B4                     u8730:
 10869   0014B4                     l7834:
 10870   0014B4  0E00               	movlw	0
 10871   0014B6  0100               	movlb	0	; () banked
 10872   0014B8  6FD9               	movwf	(_errno+1)& (0+255),b
 10873   0014BA  0E21               	movlw	33
 10874   0014BC  6FD8               	movwf	_errno& (0+255),b
 10875   0014BE  0EFF               	movlw	255
 10876   0014C0  0101               	movlb	1	; () banked
 10877   0014C2  6FB4               	movwf	powf@z& (0+255),b
 10878   0014C4  0EFF               	movlw	255
 10879   0014C6  6FB5               	movwf	(powf@z+1)& (0+255),b
 10880   0014C8  0EFF               	movlw	255
 10881   0014CA  6FB6               	movwf	(powf@z+2)& (0+255),b
 10882   0014CC  0E7F               	movlw	127
 10883   0014CE  6FB7               	movwf	(powf@z+3)& (0+255),b
 10884   0014D0  EF88  F00A         	goto	l7840
 10885   0014D4                     l7836:
 10886                           
 10887                           ; BSR set to: 0
 10888   0014D4  0101               	movlb	1	; () banked
 10889   0014D6  0554               	decf	powf@yisint& (0+255),w,b
 10890   0014D8  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
 10891   0014DA  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
 10892   0014DC  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
 10893   0014DE  A4D8               	btfss	status,2,c
 10894   0014E0  EF74  F00A         	goto	u8741
 10895   0014E4  EF76  F00A         	goto	u8740
 10896   0014E8                     u8741:
 10897   0014E8  EF88  F00A         	goto	l7840
 10898   0014EC                     u8740:
 10899   0014EC                     
 10900                           ; BSR set to: 1
 10901   0014EC  C1B4  F002         	movff	powf@z,___flneg@f1
 10902   0014F0  C1B5  F003         	movff	powf@z+1,___flneg@f1+1
 10903   0014F4  C1B6  F004         	movff	powf@z+2,___flneg@f1+2
 10904   0014F8  C1B7  F005         	movff	powf@z+3,___flneg@f1+3
 10905   0014FC  EC7A  F041         	call	___flneg	;wreg free
 10906   001500  C002  F1B4         	movff	?___flneg,powf@z
 10907   001504  C003  F1B5         	movff	?___flneg+1,powf@z+1
 10908   001508  C004  F1B6         	movff	?___flneg+2,powf@z+2
 10909   00150C  C005  F1B7         	movff	?___flneg+3,powf@z+3
 10910   001510                     l7840:
 10911   001510  C1B4  F060         	movff	powf@z,?_powf
 10912   001514  C1B5  F061         	movff	powf@z+1,?_powf+1
 10913   001518  C1B6  F062         	movff	powf@z+2,?_powf+2
 10914   00151C  C1B7  F063         	movff	powf@z+3,?_powf+3
 10915   001520  EF91  F019         	goto	l1469
 10916   001524                     l7844:
 10917                           
 10918                           ; BSR set to: 1
 10919   001524  0E00               	movlw	0
 10920   001526  6F64               	movwf	powf@sn& (0+255),b
 10921   001528  0E00               	movlw	0
 10922   00152A  6F65               	movwf	(powf@sn+1)& (0+255),b
 10923   00152C  0E00               	movlw	0
 10924   00152E  6F66               	movwf	(powf@sn+2)& (0+255),b
 10925   001530  0E00               	movlw	0
 10926   001532  6F67               	movwf	(powf@sn+3)& (0+255),b
 10927   001534                     
 10928                           ; BSR set to: 1
 10929   001534  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
 10930   001536  EFA1  F00A         	goto	u8750
 10931   00153A  EF9F  F00A         	goto	u8751
 10932   00153E                     u8751:
 10933   00153E  EFC1  F00A         	goto	l7860
 10934   001542                     u8750:
 10935   001542                     
 10936                           ; BSR set to: 1
 10937   001542  5154               	movf	powf@yisint& (0+255),w,b
 10938   001544  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
 10939   001546  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
 10940   001548  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
 10941   00154A  A4D8               	btfss	status,2,c
 10942   00154C  EFAA  F00A         	goto	u8761
 10943   001550  EFAC  F00A         	goto	u8760
 10944   001554                     u8761:
 10945   001554  EFAE  F00A         	goto	l7856
 10946   001558                     u8760:
 10947   001558  EF5A  F00A         	goto	l7834
 10948   00155C                     l7856:
 10949                           
 10950                           ; BSR set to: 1
 10951   00155C  0554               	decf	powf@yisint& (0+255),w,b
 10952   00155E  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
 10953   001560  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
 10954   001562  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
 10955   001564  A4D8               	btfss	status,2,c
 10956   001566  EFB7  F00A         	goto	u8771
 10957   00156A  EFB9  F00A         	goto	u8770
 10958   00156E                     u8771:
 10959   00156E  EFC1  F00A         	goto	l7860
 10960   001572                     u8770:
 10961   001572                     
 10962                           ; BSR set to: 1
 10963   001572  0E00               	movlw	0
 10964   001574  6F64               	movwf	powf@sn& (0+255),b
 10965   001576  0E00               	movlw	0
 10966   001578  6F65               	movwf	(powf@sn+1)& (0+255),b
 10967   00157A  0E00               	movlw	0
 10968   00157C  6F66               	movwf	(powf@sn+2)& (0+255),b
 10969   00157E  0E80               	movlw	128
 10970   001580  6F67               	movwf	(powf@sn+3)& (0+255),b
 10971   001582                     l7860:
 10972                           
 10973                           ; BSR set to: 1
 10974   001582  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
 10975   001584  EFD0  F00A         	goto	u8781
 10976   001588  0594               	decf	powf@iy& (0+255),w,b
 10977   00158A  0E00               	movlw	0
 10978   00158C  5995               	subwfb	(powf@iy+1)& (0+255),w,b
 10979   00158E  0E00               	movlw	0
 10980   001590  5996               	subwfb	(powf@iy+2)& (0+255),w,b
 10981   001592  0E4D               	movlw	77
 10982   001594  5997               	subwfb	(powf@iy+3)& (0+255),w,b
 10983   001596  A0D8               	btfss	status,0,c
 10984   001598  EFD0  F00A         	goto	u8781
 10985   00159C  EFD2  F00A         	goto	u8780
 10986   0015A0                     u8781:
 10987   0015A0  EF96  F00C         	goto	l7916
 10988   0015A4                     u8780:
 10989   0015A4                     
 10990                           ; BSR set to: 1
 10991   0015A4  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10992   0015A6  EFE4  F00A         	goto	u8790
 10993   0015AA  0EF8               	movlw	248
 10994   0015AC  5DAC               	subwf	powf@ix& (0+255),w,b
 10995   0015AE  0EFF               	movlw	255
 10996   0015B0  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
 10997   0015B2  0E7F               	movlw	127
 10998   0015B4  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
 10999   0015B6  0E3F               	movlw	63
 11000   0015B8  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
 11001   0015BA  B0D8               	btfsc	status,0,c
 11002   0015BC  EFE2  F00A         	goto	u8791
 11003   0015C0  EFE4  F00A         	goto	u8790
 11004   0015C4                     u8791:
 11005   0015C4  EF05  F00B         	goto	l7878
 11006   0015C8                     u8790:
 11007   0015C8                     
 11008                           ; BSR set to: 1
 11009   0015C8  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 11010   0015CA  EFEB  F00A         	goto	u8800
 11011   0015CE  EFE9  F00A         	goto	u8801
 11012   0015D2                     u8801:
 11013   0015D2  EFFA  F00A         	goto	l7874
 11014   0015D6                     u8800:
 11015   0015D6                     l7866:
 11016   0015D6  0E00               	movlw	0
 11017   0015D8  0101               	movlb	1	; () banked
 11018   0015DA  1164               	iorwf	powf@sn& (0+255),w,b
 11019   0015DC  6FB4               	movwf	powf@z& (0+255),b
 11020   0015DE  0E00               	movlw	0
 11021   0015E0  1165               	iorwf	(powf@sn+1)& (0+255),w,b
 11022   0015E2  6FB5               	movwf	(powf@z+1)& (0+255),b
 11023   0015E4  0E80               	movlw	128
 11024   0015E6  1166               	iorwf	(powf@sn+2)& (0+255),w,b
 11025   0015E8  6FB6               	movwf	(powf@z+2)& (0+255),b
 11026   0015EA  0E7F               	movlw	127
 11027   0015EC  1167               	iorwf	(powf@sn+3)& (0+255),w,b
 11028   0015EE  6FB7               	movwf	(powf@z+3)& (0+255),b
 11029   0015F0  EF88  F00A         	goto	l7840
 11030   0015F4                     l7874:
 11031                           
 11032                           ; BSR set to: 1
 11033   0015F4  0E00               	movlw	0
 11034   0015F6  0100               	movlb	0	; () banked
 11035   0015F8  6F60               	movwf	?_powf& (0+255),b
 11036   0015FA  0E00               	movlw	0
 11037   0015FC  6F61               	movwf	(?_powf+1)& (0+255),b
 11038   0015FE  0E00               	movlw	0
 11039   001600  6F62               	movwf	(?_powf+2)& (0+255),b
 11040   001602  0E00               	movlw	0
 11041   001604  6F63               	movwf	(?_powf+3)& (0+255),b
 11042   001606  EF91  F019         	goto	l1469
 11043   00160A                     l7878:
 11044                           
 11045                           ; BSR set to: 1
 11046   00160A  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 11047   00160C  EF15  F00B         	goto	u8811
 11048   001610  0E08               	movlw	8
 11049   001612  5DAC               	subwf	powf@ix& (0+255),w,b
 11050   001614  0E00               	movlw	0
 11051   001616  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
 11052   001618  0E80               	movlw	128
 11053   00161A  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
 11054   00161C  0E3F               	movlw	63
 11055   00161E  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
 11056   001620  A0D8               	btfss	status,0,c
 11057   001622  EF15  F00B         	goto	u8811
 11058   001626  EF17  F00B         	goto	u8810
 11059   00162A                     u8811:
 11060   00162A  EF33  F00B         	goto	l7894
 11061   00162E                     u8810:
 11062   00162E                     
 11063                           ; BSR set to: 1
 11064   00162E  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 11065   001630  EF24  F00B         	goto	u8821
 11066   001634  5187               	movf	(powf@hy+3)& (0+255),w,b
 11067   001636  1186               	iorwf	(powf@hy+2)& (0+255),w,b
 11068   001638  1185               	iorwf	(powf@hy+1)& (0+255),w,b
 11069   00163A  E108               	bnz	u8820
 11070   00163C  0584               	decf	powf@hy& (0+255),w,b
 11071   00163E  A0D8               	btfss	status,0,c
 11072   001640  EF24  F00B         	goto	u8821
 11073   001644  EF26  F00B         	goto	u8820
 11074   001648                     u8821:
 11075   001648  EF28  F00B         	goto	l7890
 11076   00164C                     u8820:
 11077   00164C  EFEB  F00A         	goto	l7866
 11078   001650                     l7890:
 11079                           
 11080                           ; BSR set to: 1
 11081   001650  0E00               	movlw	0
 11082   001652  0100               	movlb	0	; () banked
 11083   001654  6F60               	movwf	?_powf& (0+255),b
 11084   001656  0E00               	movlw	0
 11085   001658  6F61               	movwf	(?_powf+1)& (0+255),b
 11086   00165A  0E00               	movlw	0
 11087   00165C  6F62               	movwf	(?_powf+2)& (0+255),b
 11088   00165E  0E00               	movlw	0
 11089   001660  6F63               	movwf	(?_powf+3)& (0+255),b
 11090   001662  EF91  F019         	goto	l1469
 11091   001666                     l7894:
 11092                           
 11093                           ; BSR set to: 1
 11094   001666  C178  F002         	movff	powf@ax,___fladd@b
 11095   00166A  C179  F003         	movff	powf@ax+1,___fladd@b+1
 11096   00166E  C17A  F004         	movff	powf@ax+2,___fladd@b+2
 11097   001672  C17B  F005         	movff	powf@ax+3,___fladd@b+3
 11098   001676  0E00               	movlw	0
 11099   001678  6E06               	movwf	___fladd@a^0,c
 11100   00167A  0E00               	movlw	0
 11101   00167C  6E07               	movwf	(___fladd@a+1)^0,c
 11102   00167E  0E80               	movlw	128
 11103   001680  6E08               	movwf	(___fladd@a+2)^0,c
 11104   001682  0EBF               	movlw	191
 11105   001684  6E09               	movwf	(___fladd@a+3)^0,c
 11106   001686  EC68  F02B         	call	___fladd	;wreg free
 11107   00168A  C002  F1B0         	movff	?___fladd,powf@t
 11108   00168E  C003  F1B1         	movff	?___fladd+1,powf@t+1
 11109   001692  C004  F1B2         	movff	?___fladd+2,powf@t+2
 11110   001696  C005  F1B3         	movff	?___fladd+3,powf@t+3
 11111   00169A  0E00               	movlw	0
 11112   00169C  6E16               	movwf	___flmul@a^0,c
 11113   00169E  0E00               	movlw	0
 11114   0016A0  6E17               	movwf	(___flmul@a+1)^0,c
 11115   0016A2  0E80               	movlw	128
 11116   0016A4  6E18               	movwf	(___flmul@a+2)^0,c
 11117   0016A6  0E3E               	movlw	62
 11118   0016A8  6E19               	movwf	(___flmul@a+3)^0,c
 11119   0016AA  C1B0  F012         	movff	powf@t,___flmul@b
 11120   0016AE  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 11121   0016B2  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 11122   0016B6  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 11123   0016BA  ECC8  F02D         	call	___flmul	;wreg free
 11124   0016BE  C012  F048         	movff	?___flmul,___flsub@a
 11125   0016C2  C013  F049         	movff	?___flmul+1,___flsub@a+1
 11126   0016C6  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 11127   0016CA  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 11128   0016CE  0EAB               	movlw	171
 11129   0016D0  6E44               	movwf	___flsub@b^0,c
 11130   0016D2  0EAA               	movlw	170
 11131   0016D4  6E45               	movwf	(___flsub@b+1)^0,c
 11132   0016D6  0EAA               	movlw	170
 11133   0016D8  6E46               	movwf	(___flsub@b+2)^0,c
 11134   0016DA  0E3E               	movlw	62
 11135   0016DC  6E47               	movwf	(___flsub@b+3)^0,c
 11136   0016DE  ECD7  F040         	call	___flsub	;wreg free
 11137   0016E2  C044  F148         	movff	?___flsub,_powf$3174
 11138   0016E6  C045  F149         	movff	?___flsub+1,_powf$3174+1
 11139   0016EA  C046  F14A         	movff	?___flsub+2,_powf$3174+2
 11140   0016EE  C047  F14B         	movff	?___flsub+3,_powf$3174+3
 11141   0016F2  C1B0  F016         	movff	powf@t,___flmul@a
 11142   0016F6  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 11143   0016FA  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 11144   0016FE  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 11145   001702  C1B0  F012         	movff	powf@t,___flmul@b
 11146   001706  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 11147   00170A  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 11148   00170E  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 11149   001712  ECC8  F02D         	call	___flmul	;wreg free
 11150   001716  C012  F158         	movff	?___flmul,_powf$3175
 11151   00171A  C013  F159         	movff	?___flmul+1,_powf$3175+1
 11152   00171E  C014  F15A         	movff	?___flmul+2,_powf$3175+2
 11153   001722  C015  F15B         	movff	?___flmul+3,_powf$3175+3
 11154   001726  C1B0  F016         	movff	powf@t,___flmul@a
 11155   00172A  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 11156   00172E  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 11157   001732  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 11158   001736  C148  F012         	movff	_powf$3174,___flmul@b
 11159   00173A  C149  F013         	movff	_powf$3174+1,___flmul@b+1
 11160   00173E  C14A  F014         	movff	_powf$3174+2,___flmul@b+2
 11161   001742  C14B  F015         	movff	_powf$3174+3,___flmul@b+3
 11162   001746  ECC8  F02D         	call	___flmul	;wreg free
 11163   00174A  C012  F048         	movff	?___flmul,___flsub@a
 11164   00174E  C013  F049         	movff	?___flmul+1,___flsub@a+1
 11165   001752  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 11166   001756  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 11167   00175A  0E00               	movlw	0
 11168   00175C  6E44               	movwf	___flsub@b^0,c
 11169   00175E  0E00               	movlw	0
 11170   001760  6E45               	movwf	(___flsub@b+1)^0,c
 11171   001762  0E00               	movlw	0
 11172   001764  6E46               	movwf	(___flsub@b+2)^0,c
 11173   001766  0E3F               	movlw	63
 11174   001768  6E47               	movwf	(___flsub@b+3)^0,c
 11175   00176A  ECD7  F040         	call	___flsub	;wreg free
 11176   00176E  C044  F14C         	movff	?___flsub,_powf$3176
 11177   001772  C045  F14D         	movff	?___flsub+1,_powf$3176+1
 11178   001776  C046  F14E         	movff	?___flsub+2,_powf$3176+2
 11179   00177A  C047  F14F         	movff	?___flsub+3,_powf$3176+3
 11180   00177E  C158  F012         	movff	_powf$3175,___flmul@b
 11181   001782  C159  F013         	movff	_powf$3175+1,___flmul@b+1
 11182   001786  C15A  F014         	movff	_powf$3175+2,___flmul@b+2
 11183   00178A  C15B  F015         	movff	_powf$3175+3,___flmul@b+3
 11184   00178E  C14C  F016         	movff	_powf$3176,___flmul@a
 11185   001792  C14D  F017         	movff	_powf$3176+1,___flmul@a+1
 11186   001796  C14E  F018         	movff	_powf$3176+2,___flmul@a+2
 11187   00179A  C14F  F019         	movff	_powf$3176+3,___flmul@a+3
 11188   00179E  ECC8  F02D         	call	___flmul	;wreg free
 11189   0017A2  C012  F144         	movff	?___flmul,powf@w
 11190   0017A6  C013  F145         	movff	?___flmul+1,powf@w+1
 11191   0017AA  C014  F146         	movff	?___flmul+2,powf@w+2
 11192   0017AE  C015  F147         	movff	?___flmul+3,powf@w+3
 11193   0017B2  C1B0  F012         	movff	powf@t,___flmul@b
 11194   0017B6  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 11195   0017BA  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 11196   0017BE  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 11197   0017C2  0E00               	movlw	0
 11198   0017C4  6E16               	movwf	___flmul@a^0,c
 11199   0017C6  0EAA               	movlw	170
 11200   0017C8  6E17               	movwf	(___flmul@a+1)^0,c
 11201   0017CA  0EB8               	movlw	184
 11202   0017CC  6E18               	movwf	(___flmul@a+2)^0,c
 11203   0017CE  0E3F               	movlw	63
 11204   0017D0  6E19               	movwf	(___flmul@a+3)^0,c
 11205   0017D2  ECC8  F02D         	call	___flmul	;wreg free
 11206   0017D6  C012  F17C         	movff	?___flmul,powf@u
 11207   0017DA  C013  F17D         	movff	?___flmul+1,powf@u+1
 11208   0017DE  C014  F17E         	movff	?___flmul+2,powf@u+2
 11209   0017E2  C015  F17F         	movff	?___flmul+3,powf@u+3
 11210   0017E6  0E70               	movlw	112
 11211   0017E8  6E16               	movwf	___flmul@a^0,c
 11212   0017EA  0EA5               	movlw	165
 11213   0017EC  6E17               	movwf	(___flmul@a+1)^0,c
 11214   0017EE  0EEC               	movlw	236
 11215   0017F0  6E18               	movwf	(___flmul@a+2)^0,c
 11216   0017F2  0E36               	movlw	54
 11217   0017F4  6E19               	movwf	(___flmul@a+3)^0,c
 11218   0017F6  C1B0  F012         	movff	powf@t,___flmul@b
 11219   0017FA  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 11220   0017FE  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 11221   001802  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 11222   001806  ECC8  F02D         	call	___flmul	;wreg free
 11223   00180A  C012  F044         	movff	?___flmul,___flsub@b
 11224   00180E  C013  F045         	movff	?___flmul+1,___flsub@b+1
 11225   001812  C014  F046         	movff	?___flmul+2,___flsub@b+2
 11226   001816  C015  F047         	movff	?___flmul+3,___flsub@b+3
 11227   00181A  0E3B               	movlw	59
 11228   00181C  6E16               	movwf	___flmul@a^0,c
 11229   00181E  0EAA               	movlw	170
 11230   001820  6E17               	movwf	(___flmul@a+1)^0,c
 11231   001822  0EB8               	movlw	184
 11232   001824  6E18               	movwf	(___flmul@a+2)^0,c
 11233   001826  0E3F               	movlw	63
 11234   001828  6E19               	movwf	(___flmul@a+3)^0,c
 11235   00182A  C144  F012         	movff	powf@w,___flmul@b
 11236   00182E  C145  F013         	movff	powf@w+1,___flmul@b+1
 11237   001832  C146  F014         	movff	powf@w+2,___flmul@b+2
 11238   001836  C147  F015         	movff	powf@w+3,___flmul@b+3
 11239   00183A  ECC8  F02D         	call	___flmul	;wreg free
 11240   00183E  C012  F048         	movff	?___flmul,___flsub@a
 11241   001842  C013  F049         	movff	?___flmul+1,___flsub@a+1
 11242   001846  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 11243   00184A  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 11244   00184E  ECD7  F040         	call	___flsub	;wreg free
 11245   001852  C044  F180         	movff	?___flsub,powf@v
 11246   001856  C045  F181         	movff	?___flsub+1,powf@v+1
 11247   00185A  C046  F182         	movff	?___flsub+2,powf@v+2
 11248   00185E  C047  F183         	movff	?___flsub+3,powf@v+3
 11249   001862  C17C  F002         	movff	powf@u,___fladd@b
 11250   001866  C17D  F003         	movff	powf@u+1,___fladd@b+1
 11251   00186A  C17E  F004         	movff	powf@u+2,___fladd@b+2
 11252   00186E  C17F  F005         	movff	powf@u+3,___fladd@b+3
 11253   001872  C180  F006         	movff	powf@v,___fladd@a
 11254   001876  C181  F007         	movff	powf@v+1,___fladd@a+1
 11255   00187A  C182  F008         	movff	powf@v+2,___fladd@a+2
 11256   00187E  C183  F009         	movff	powf@v+3,___fladd@a+3
 11257   001882  EC68  F02B         	call	___fladd	;wreg free
 11258   001886  C002  F18C         	movff	?___fladd,powf@t1
 11259   00188A  C003  F18D         	movff	?___fladd+1,powf@t1+1
 11260   00188E  C004  F18E         	movff	?___fladd+2,powf@t1+2
 11261   001892  C005  F18F         	movff	?___fladd+3,powf@t1+3
 11262   001896  C18C  F198         	movff	powf@t1,powf@is
 11263   00189A  C18D  F199         	movff	powf@t1+1,powf@is+1
 11264   00189E  C18E  F19A         	movff	powf@t1+2,powf@is+2
 11265   0018A2  C18F  F19B         	movff	powf@t1+3,powf@is+3
 11266   0018A6  0E00               	movlw	0
 11267   0018A8  0101               	movlb	1	; () banked
 11268   0018AA  1598               	andwf	powf@is& (0+255),w,b
 11269   0018AC  6F8C               	movwf	powf@t1& (0+255),b
 11270   0018AE  0EF0               	movlw	240
 11271   0018B0  1599               	andwf	(powf@is+1)& (0+255),w,b
 11272   0018B2  6F8D               	movwf	(powf@t1+1)& (0+255),b
 11273   0018B4  0EFF               	movlw	255
 11274   0018B6  159A               	andwf	(powf@is+2)& (0+255),w,b
 11275   0018B8  6F8E               	movwf	(powf@t1+2)& (0+255),b
 11276   0018BA  0EFF               	movlw	255
 11277   0018BC  159B               	andwf	(powf@is+3)& (0+255),w,b
 11278   0018BE  6F8F               	movwf	(powf@t1+3)& (0+255),b
 11279   0018C0                     
 11280                           ; BSR set to: 1
 11281   0018C0  C17C  F048         	movff	powf@u,___flsub@a
 11282   0018C4  C17D  F049         	movff	powf@u+1,___flsub@a+1
 11283   0018C8  C17E  F04A         	movff	powf@u+2,___flsub@a+2
 11284   0018CC  C17F  F04B         	movff	powf@u+3,___flsub@a+3
 11285   0018D0  C18C  F044         	movff	powf@t1,___flsub@b
 11286   0018D4  C18D  F045         	movff	powf@t1+1,___flsub@b+1
 11287   0018D8  C18E  F046         	movff	powf@t1+2,___flsub@b+2
 11288   0018DC  C18F  F047         	movff	powf@t1+3,___flsub@b+3
 11289   0018E0  ECD7  F040         	call	___flsub	;wreg free
 11290   0018E4  C044  F19C         	movff	?___flsub,_powf$3177
 11291   0018E8  C045  F19D         	movff	?___flsub+1,_powf$3177+1
 11292   0018EC  C046  F19E         	movff	?___flsub+2,_powf$3177+2
 11293   0018F0  C047  F19F         	movff	?___flsub+3,_powf$3177+3
 11294   0018F4  C180  F044         	movff	powf@v,___flsub@b
 11295   0018F8  C181  F045         	movff	powf@v+1,___flsub@b+1
 11296   0018FC  C182  F046         	movff	powf@v+2,___flsub@b+2
 11297   001900  C183  F047         	movff	powf@v+3,___flsub@b+3
 11298   001904  C19C  F048         	movff	_powf$3177,___flsub@a
 11299   001908  C19D  F049         	movff	_powf$3177+1,___flsub@a+1
 11300   00190C  C19E  F04A         	movff	_powf$3177+2,___flsub@a+2
 11301   001910  C19F  F04B         	movff	_powf$3177+3,___flsub@a+3
 11302   001914  ECD7  F040         	call	___flsub	;wreg free
 11303   001918  C044  F11C         	movff	?___flsub,powf@t2
 11304   00191C  C045  F11D         	movff	?___flsub+1,powf@t2+1
 11305   001920  C046  F11E         	movff	?___flsub+2,powf@t2+2
 11306   001924  C047  F11F         	movff	?___flsub+3,powf@t2+3
 11307   001928  EF8A  F013         	goto	l8044
 11308   00192C                     l7916:
 11309                           
 11310                           ; BSR set to: 1
 11311   00192C  0E00               	movlw	0
 11312   00192E  6F88               	movwf	powf@n& (0+255),b
 11313   001930  0E00               	movlw	0
 11314   001932  6F89               	movwf	(powf@n+1)& (0+255),b
 11315   001934  0E00               	movlw	0
 11316   001936  6F8A               	movwf	(powf@n+2)& (0+255),b
 11317   001938  0E00               	movlw	0
 11318   00193A  6F8B               	movwf	(powf@n+3)& (0+255),b
 11319   00193C                     
 11320                           ; BSR set to: 1
 11321   00193C  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 11322   00193E  EFAC  F00C         	goto	u8830
 11323   001942  51AF               	movf	(powf@ix+3)& (0+255),w,b
 11324   001944  E107               	bnz	u8831
 11325   001946  0E80               	movlw	128
 11326   001948  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
 11327   00194A  B0D8               	btfsc	status,0,c
 11328   00194C  EFAA  F00C         	goto	u8831
 11329   001950  EFAC  F00C         	goto	u8830
 11330   001954                     u8831:
 11331   001954  EFD7  F00C         	goto	l7926
 11332   001958                     u8830:
 11333   001958                     
 11334                           ; BSR set to: 1
 11335   001958  C178  F012         	movff	powf@ax,___flmul@b
 11336   00195C  C179  F013         	movff	powf@ax+1,___flmul@b+1
 11337   001960  C17A  F014         	movff	powf@ax+2,___flmul@b+2
 11338   001964  C17B  F015         	movff	powf@ax+3,___flmul@b+3
 11339   001968  0E00               	movlw	0
 11340   00196A  6E16               	movwf	___flmul@a^0,c
 11341   00196C  0E00               	movlw	0
 11342   00196E  6E17               	movwf	(___flmul@a+1)^0,c
 11343   001970  0E80               	movlw	128
 11344   001972  6E18               	movwf	(___flmul@a+2)^0,c
 11345   001974  0E4B               	movlw	75
 11346   001976  6E19               	movwf	(___flmul@a+3)^0,c
 11347   001978  ECC8  F02D         	call	___flmul	;wreg free
 11348   00197C  C012  F178         	movff	?___flmul,powf@ax
 11349   001980  C013  F179         	movff	?___flmul+1,powf@ax+1
 11350   001984  C014  F17A         	movff	?___flmul+2,powf@ax+2
 11351   001988  C015  F17B         	movff	?___flmul+3,powf@ax+3
 11352   00198C  0EE8               	movlw	232
 11353   00198E  0101               	movlb	1	; () banked
 11354   001990  2788               	addwf	powf@n& (0+255),f,b
 11355   001992  0EFF               	movlw	255
 11356   001994  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11357   001996  0EFF               	movlw	255
 11358   001998  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11359   00199A  0EFF               	movlw	255
 11360   00199C  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11361   00199E                     
 11362                           ; BSR set to: 1
 11363   00199E  C178  F1AC         	movff	powf@ax,powf@ix
 11364   0019A2  C179  F1AD         	movff	powf@ax+1,powf@ix+1
 11365   0019A6  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
 11366   0019AA  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
 11367   0019AE                     l7926:
 11368                           
 11369                           ; BSR set to: 1
 11370   0019AE  0E17               	movlw	23
 11371   0019B0  0100               	movlb	0	; () banked
 11372   0019B2  6F68               	movwf	??_powf& (0+255),b
 11373   0019B4  C1AC  F069         	movff	powf@ix,??_powf+1
 11374   0019B8  C1AD  F06A         	movff	powf@ix+1,??_powf+2
 11375   0019BC  C1AE  F06B         	movff	powf@ix+2,??_powf+3
 11376   0019C0  C1AF  F06C         	movff	powf@ix+3,??_powf+4
 11377   0019C4                     u8845:
 11378   0019C4  6768               	tstfsz	??_powf& (0+255),b
 11379   0019C6  EFE7  F00C         	goto	u8846
 11380   0019CA  EFEF  F00C         	goto	u8847
 11381   0019CE                     u8846:
 11382   0019CE  356C               	rlcf	(??_powf+4)& (0+255),w,b
 11383   0019D0  336C               	rrcf	(??_powf+4)& (0+255),f,b
 11384   0019D2  336B               	rrcf	(??_powf+3)& (0+255),f,b
 11385   0019D4  336A               	rrcf	(??_powf+2)& (0+255),f,b
 11386   0019D6  3369               	rrcf	(??_powf+1)& (0+255),f,b
 11387   0019D8  2F68               	decfsz	??_powf& (0+255),f,b
 11388   0019DA  EFE2  F00C         	goto	u8845
 11389   0019DE                     u8847:
 11390   0019DE  0E81               	movlw	129
 11391   0019E0  0100               	movlb	0	; () banked
 11392   0019E2  2569               	addwf	(??_powf+1)& (0+255),w,b
 11393   0019E4  6F6D               	movwf	(??_powf+5)& (0+255),b
 11394   0019E6  0EFF               	movlw	255
 11395   0019E8  216A               	addwfc	(??_powf+2)& (0+255),w,b
 11396   0019EA  6F6E               	movwf	(??_powf+6)& (0+255),b
 11397   0019EC  0EFF               	movlw	255
 11398   0019EE  216B               	addwfc	(??_powf+3)& (0+255),w,b
 11399   0019F0  6F6F               	movwf	(??_powf+7)& (0+255),b
 11400   0019F2  0EFF               	movlw	255
 11401   0019F4  216C               	addwfc	(??_powf+4)& (0+255),w,b
 11402   0019F6  6F70               	movwf	(??_powf+8)& (0+255),b
 11403   0019F8  516D               	movf	(??_powf+5)& (0+255),w,b
 11404   0019FA  0101               	movlb	1	; () banked
 11405   0019FC  2788               	addwf	powf@n& (0+255),f,b
 11406   0019FE  0100               	movlb	0	; () banked
 11407   001A00  516E               	movf	(??_powf+6)& (0+255),w,b
 11408   001A02  0101               	movlb	1	; () banked
 11409   001A04  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11410   001A06  0100               	movlb	0	; () banked
 11411   001A08  516F               	movf	(??_powf+7)& (0+255),w,b
 11412   001A0A  0101               	movlb	1	; () banked
 11413   001A0C  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11414   001A0E  0100               	movlb	0	; () banked
 11415   001A10  5170               	movf	(??_powf+8)& (0+255),w,b
 11416   001A12  0101               	movlb	1	; () banked
 11417   001A14  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11418   001A16                     
 11419                           ; BSR set to: 1
 11420   001A16  0EFF               	movlw	255
 11421   001A18  15AC               	andwf	powf@ix& (0+255),w,b
 11422   001A1A  6FA8               	movwf	powf@j& (0+255),b
 11423   001A1C  0EFF               	movlw	255
 11424   001A1E  15AD               	andwf	(powf@ix+1)& (0+255),w,b
 11425   001A20  6FA9               	movwf	(powf@j+1)& (0+255),b
 11426   001A22  0E7F               	movlw	127
 11427   001A24  15AE               	andwf	(powf@ix+2)& (0+255),w,b
 11428   001A26  6FAA               	movwf	(powf@j+2)& (0+255),b
 11429   001A28  0E00               	movlw	0
 11430   001A2A  15AF               	andwf	(powf@ix+3)& (0+255),w,b
 11431   001A2C  6FAB               	movwf	(powf@j+3)& (0+255),b
 11432   001A2E                     
 11433                           ; BSR set to: 1
 11434   001A2E  0E00               	movlw	0
 11435   001A30  6FA4               	movwf	powf@k& (0+255),b
 11436   001A32  0E00               	movlw	0
 11437   001A34  6FA5               	movwf	(powf@k+1)& (0+255),b
 11438   001A36  0E00               	movlw	0
 11439   001A38  6FA6               	movwf	(powf@k+2)& (0+255),b
 11440   001A3A  0E00               	movlw	0
 11441   001A3C  6FA7               	movwf	(powf@k+3)& (0+255),b
 11442   001A3E                     
 11443                           ; BSR set to: 1
 11444   001A3E  0E00               	movlw	0
 11445   001A40  11A8               	iorwf	powf@j& (0+255),w,b
 11446   001A42  6FAC               	movwf	powf@ix& (0+255),b
 11447   001A44  0E00               	movlw	0
 11448   001A46  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 11449   001A48  6FAD               	movwf	(powf@ix+1)& (0+255),b
 11450   001A4A  0E80               	movlw	128
 11451   001A4C  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 11452   001A4E  6FAE               	movwf	(powf@ix+2)& (0+255),b
 11453   001A50  0E3F               	movlw	63
 11454   001A52  11AB               	iorwf	(powf@j+3)& (0+255),w,b
 11455   001A54  6FAF               	movwf	(powf@ix+3)& (0+255),b
 11456   001A56                     
 11457                           ; BSR set to: 1
 11458   001A56  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 11459   001A58  EF3D  F00D         	goto	u8850
 11460   001A5C  51AB               	movf	(powf@j+3)& (0+255),w,b
 11461   001A5E  E10B               	bnz	u8851
 11462   001A60  0E72               	movlw	114
 11463   001A62  5DA8               	subwf	powf@j& (0+255),w,b
 11464   001A64  0EC4               	movlw	196
 11465   001A66  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 11466   001A68  0E1C               	movlw	28
 11467   001A6A  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 11468   001A6C  B0D8               	btfsc	status,0,c
 11469   001A6E  EF3B  F00D         	goto	u8851
 11470   001A72  EF3D  F00D         	goto	u8850
 11471   001A76                     u8851:
 11472   001A76  EF3F  F00D         	goto	l7938
 11473   001A7A                     u8850:
 11474   001A7A  EF69  F00D         	goto	l7944
 11475   001A7E                     l7938:
 11476                           
 11477                           ; BSR set to: 1
 11478   001A7E  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 11479   001A80  EF51  F00D         	goto	u8860
 11480   001A84  51AB               	movf	(powf@j+3)& (0+255),w,b
 11481   001A86  E10B               	bnz	u8861
 11482   001A88  0ED7               	movlw	215
 11483   001A8A  5DA8               	subwf	powf@j& (0+255),w,b
 11484   001A8C  0EB3               	movlw	179
 11485   001A8E  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 11486   001A90  0E5D               	movlw	93
 11487   001A92  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 11488   001A94  B0D8               	btfsc	status,0,c
 11489   001A96  EF4F  F00D         	goto	u8861
 11490   001A9A  EF51  F00D         	goto	u8860
 11491   001A9E                     u8861:
 11492   001A9E  EF5B  F00D         	goto	l7942
 11493   001AA2                     u8860:
 11494   001AA2                     
 11495                           ; BSR set to: 1
 11496   001AA2  0E01               	movlw	1
 11497   001AA4  6FA4               	movwf	powf@k& (0+255),b
 11498   001AA6  0E00               	movlw	0
 11499   001AA8  6FA5               	movwf	(powf@k+1)& (0+255),b
 11500   001AAA  0E00               	movlw	0
 11501   001AAC  6FA6               	movwf	(powf@k+2)& (0+255),b
 11502   001AAE  0E00               	movlw	0
 11503   001AB0  6FA7               	movwf	(powf@k+3)& (0+255),b
 11504   001AB2  EF69  F00D         	goto	l7944
 11505   001AB6                     l7942:
 11506                           
 11507                           ; BSR set to: 1
 11508   001AB6  0E01               	movlw	1
 11509   001AB8  2788               	addwf	powf@n& (0+255),f,b
 11510   001ABA  0E00               	movlw	0
 11511   001ABC  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11512   001ABE  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11513   001AC0  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11514   001AC2  0E00               	movlw	0
 11515   001AC4  27AC               	addwf	powf@ix& (0+255),f,b
 11516   001AC6  0E00               	movlw	0
 11517   001AC8  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
 11518   001ACA  0E80               	movlw	128
 11519   001ACC  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
 11520   001ACE  0EFF               	movlw	255
 11521   001AD0  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
 11522   001AD2                     l7944:
 11523                           
 11524                           ; BSR set to: 1
 11525   001AD2  C1AC  F178         	movff	powf@ix,powf@ax
 11526   001AD6  C1AD  F179         	movff	powf@ix+1,powf@ax+1
 11527   001ADA  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
 11528   001ADE  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
 11529   001AE2                     
 11530                           ; BSR set to: 1
 11531   001AE2  C178  F044         	movff	powf@ax,___flsub@b
 11532   001AE6  C179  F045         	movff	powf@ax+1,___flsub@b+1
 11533   001AEA  C17A  F046         	movff	powf@ax+2,___flsub@b+2
 11534   001AEE  C17B  F047         	movff	powf@ax+3,___flsub@b+3
 11535   001AF2  51A4               	movf	powf@k& (0+255),w,b
 11536   001AF4  0D04               	mullw	4
 11537   001AF6  50F3               	movf	243,w,c
 11538   001AF8  0F11               	addlw	low _bp
 11539   001AFA  0100               	movlb	0	; () banked
 11540   001AFC  6F68               	movwf	??_powf& (0+255),b
 11541   001AFE  C068  FFF6         	movff	??_powf,tblptrl
 11542   001B02                     	if	1	;There is more than 1 active tblptr byte
 11543   001B02  0E0E               	movlw	high __smallconst
 11544   001B04  6EF7               	movwf	tblptrh,c
 11545   001B06                     	endif
 11546   001B06                     	if	0	;tblptru may be non-zero
 11547   001B06                     	endif
 11548   001B06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11549   001B06  0E00               	movlw	low (__smallconst shr (0+16))
 11550   001B08  6EF8               	movwf	tblptru,c
 11551   001B0A                     	endif
 11552   001B0A  0009               	tblrd		*+
 11553   001B0C  CFF5 F048          	movff	tablat,___flsub@a
 11554   001B10  0009               	tblrd		*+
 11555   001B12  CFF5 F049          	movff	tablat,___flsub@a+1
 11556   001B16  0009               	tblrd		*+
 11557   001B18  CFF5 F04A          	movff	tablat,___flsub@a+2
 11558   001B1C  000A               	tblrd		*-
 11559   001B1E  CFF5 F04B          	movff	tablat,___flsub@a+3
 11560   001B22  ECD7  F040         	call	___flsub	;wreg free
 11561   001B26  C044  F17C         	movff	?___flsub,powf@u
 11562   001B2A  C045  F17D         	movff	?___flsub+1,powf@u+1
 11563   001B2E  C046  F17E         	movff	?___flsub+2,powf@u+2
 11564   001B32  C047  F17F         	movff	?___flsub+3,powf@u+3
 11565   001B36  0E00               	movlw	0
 11566   001B38  6E2B               	movwf	___fldiv@b^0,c
 11567   001B3A  0E00               	movlw	0
 11568   001B3C  6E2C               	movwf	(___fldiv@b+1)^0,c
 11569   001B3E  0E80               	movlw	128
 11570   001B40  6E2D               	movwf	(___fldiv@b+2)^0,c
 11571   001B42  0E3F               	movlw	63
 11572   001B44  6E2E               	movwf	(___fldiv@b+3)^0,c
 11573   001B46  C178  F006         	movff	powf@ax,___fladd@a
 11574   001B4A  C179  F007         	movff	powf@ax+1,___fladd@a+1
 11575   001B4E  C17A  F008         	movff	powf@ax+2,___fladd@a+2
 11576   001B52  C17B  F009         	movff	powf@ax+3,___fladd@a+3
 11577   001B56  0101               	movlb	1	; () banked
 11578   001B58  51A4               	movf	powf@k& (0+255),w,b
 11579   001B5A  0D04               	mullw	4
 11580   001B5C  50F3               	movf	243,w,c
 11581   001B5E  0F11               	addlw	low _bp
 11582   001B60  0100               	movlb	0	; () banked
 11583   001B62  6F68               	movwf	??_powf& (0+255),b
 11584   001B64  C068  FFF6         	movff	??_powf,tblptrl
 11585   001B68                     	if	1	;There is more than 1 active tblptr byte
 11586   001B68  0E0E               	movlw	high __smallconst
 11587   001B6A  6EF7               	movwf	tblptrh,c
 11588   001B6C                     	endif
 11589   001B6C                     	if	0	;tblptru may be non-zero
 11590   001B6C                     	endif
 11591   001B6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11592   001B6C  0E00               	movlw	low (__smallconst shr (0+16))
 11593   001B6E  6EF8               	movwf	tblptru,c
 11594   001B70                     	endif
 11595   001B70  0009               	tblrd		*+
 11596   001B72  CFF5 F002          	movff	tablat,___fladd@b
 11597   001B76  0009               	tblrd		*+
 11598   001B78  CFF5 F003          	movff	tablat,___fladd@b+1
 11599   001B7C  0009               	tblrd		*+
 11600   001B7E  CFF5 F004          	movff	tablat,___fladd@b+2
 11601   001B82  000A               	tblrd		*-
 11602   001B84  CFF5 F005          	movff	tablat,___fladd@b+3
 11603   001B88  EC68  F02B         	call	___fladd	;wreg free
 11604   001B8C  C002  F02F         	movff	?___fladd,___fldiv@a
 11605   001B90  C003  F030         	movff	?___fladd+1,___fldiv@a+1
 11606   001B94  C004  F031         	movff	?___fladd+2,___fldiv@a+2
 11607   001B98  C005  F032         	movff	?___fladd+3,___fldiv@a+3
 11608   001B9C  ECCC  F031         	call	___fldiv	;wreg free
 11609   001BA0  C02B  F180         	movff	?___fldiv,powf@v
 11610   001BA4  C02C  F181         	movff	?___fldiv+1,powf@v+1
 11611   001BA8  C02D  F182         	movff	?___fldiv+2,powf@v+2
 11612   001BAC  C02E  F183         	movff	?___fldiv+3,powf@v+3
 11613   001BB0  C17C  F012         	movff	powf@u,___flmul@b
 11614   001BB4  C17D  F013         	movff	powf@u+1,___flmul@b+1
 11615   001BB8  C17E  F014         	movff	powf@u+2,___flmul@b+2
 11616   001BBC  C17F  F015         	movff	powf@u+3,___flmul@b+3
 11617   001BC0  C180  F016         	movff	powf@v,___flmul@a
 11618   001BC4  C181  F017         	movff	powf@v+1,___flmul@a+1
 11619   001BC8  C182  F018         	movff	powf@v+2,___flmul@a+2
 11620   001BCC  C183  F019         	movff	powf@v+3,___flmul@a+3
 11621   001BD0  ECC8  F02D         	call	___flmul	;wreg free
 11622   001BD4  C012  F160         	movff	?___flmul,powf@s
 11623   001BD8  C013  F161         	movff	?___flmul+1,powf@s+1
 11624   001BDC  C014  F162         	movff	?___flmul+2,powf@s+2
 11625   001BE0  C015  F163         	movff	?___flmul+3,powf@s+3
 11626   001BE4  C160  F174         	movff	powf@s,powf@s_h
 11627   001BE8  C161  F175         	movff	powf@s+1,powf@s_h+1
 11628   001BEC  C162  F176         	movff	powf@s+2,powf@s_h+2
 11629   001BF0  C163  F177         	movff	powf@s+3,powf@s_h+3
 11630   001BF4  C174  F198         	movff	powf@s_h,powf@is
 11631   001BF8  C175  F199         	movff	powf@s_h+1,powf@is+1
 11632   001BFC  C176  F19A         	movff	powf@s_h+2,powf@is+2
 11633   001C00  C177  F19B         	movff	powf@s_h+3,powf@is+3
 11634   001C04  0E00               	movlw	0
 11635   001C06  0101               	movlb	1	; () banked
 11636   001C08  1598               	andwf	powf@is& (0+255),w,b
 11637   001C0A  6F74               	movwf	powf@s_h& (0+255),b
 11638   001C0C  0EF0               	movlw	240
 11639   001C0E  1599               	andwf	(powf@is+1)& (0+255),w,b
 11640   001C10  6F75               	movwf	(powf@s_h+1)& (0+255),b
 11641   001C12  0EFF               	movlw	255
 11642   001C14  159A               	andwf	(powf@is+2)& (0+255),w,b
 11643   001C16  6F76               	movwf	(powf@s_h+2)& (0+255),b
 11644   001C18  0EFF               	movlw	255
 11645   001C1A  159B               	andwf	(powf@is+3)& (0+255),w,b
 11646   001C1C  6F77               	movwf	(powf@s_h+3)& (0+255),b
 11647   001C1E                     
 11648                           ; BSR set to: 1
 11649   001C1E  C1AC  F068         	movff	powf@ix,??_powf
 11650   001C22  C1AD  F069         	movff	powf@ix+1,??_powf+1
 11651   001C26  C1AE  F06A         	movff	powf@ix+2,??_powf+2
 11652   001C2A  C1AF  F06B         	movff	powf@ix+3,??_powf+3
 11653   001C2E  0100               	movlb	0	; () banked
 11654   001C30  356B               	rlcf	(??_powf+3)& (0+255),w,b
 11655   001C32  336B               	rrcf	(??_powf+3)& (0+255),f,b
 11656   001C34  336A               	rrcf	(??_powf+2)& (0+255),f,b
 11657   001C36  3369               	rrcf	(??_powf+1)& (0+255),f,b
 11658   001C38  3368               	rrcf	??_powf& (0+255),f,b
 11659   001C3A  0E00               	movlw	0
 11660   001C3C  1568               	andwf	??_powf& (0+255),w,b
 11661   001C3E  6F6C               	movwf	(??_powf+4)& (0+255),b
 11662   001C40  0EF0               	movlw	240
 11663   001C42  1569               	andwf	(??_powf+1)& (0+255),w,b
 11664   001C44  6F6D               	movwf	(??_powf+5)& (0+255),b
 11665   001C46  0EFF               	movlw	255
 11666   001C48  156A               	andwf	(??_powf+2)& (0+255),w,b
 11667   001C4A  6F6E               	movwf	(??_powf+6)& (0+255),b
 11668   001C4C  0EFF               	movlw	255
 11669   001C4E  156B               	andwf	(??_powf+3)& (0+255),w,b
 11670   001C50  6F6F               	movwf	(??_powf+7)& (0+255),b
 11671   001C52  0E00               	movlw	0
 11672   001C54  116C               	iorwf	(??_powf+4)& (0+255),w,b
 11673   001C56  0101               	movlb	1	; () banked
 11674   001C58  6F98               	movwf	powf@is& (0+255),b
 11675   001C5A  0E00               	movlw	0
 11676   001C5C  0100               	movlb	0	; () banked
 11677   001C5E  116D               	iorwf	(??_powf+5)& (0+255),w,b
 11678   001C60  0101               	movlb	1	; () banked
 11679   001C62  6F99               	movwf	(powf@is+1)& (0+255),b
 11680   001C64  0E00               	movlw	0
 11681   001C66  0100               	movlb	0	; () banked
 11682   001C68  116E               	iorwf	(??_powf+6)& (0+255),w,b
 11683   001C6A  0101               	movlb	1	; () banked
 11684   001C6C  6F9A               	movwf	(powf@is+2)& (0+255),b
 11685   001C6E  0E20               	movlw	32
 11686   001C70  0100               	movlb	0	; () banked
 11687   001C72  116F               	iorwf	(??_powf+7)& (0+255),w,b
 11688   001C74  0101               	movlb	1	; () banked
 11689   001C76  6F9B               	movwf	(powf@is+3)& (0+255),b
 11690   001C78                     
 11691                           ; BSR set to: 1
 11692   001C78  C1A4  F068         	movff	powf@k,??_powf
 11693   001C7C  C1A5  F069         	movff	powf@k+1,??_powf+1
 11694   001C80  C1A6  F06A         	movff	powf@k+2,??_powf+2
 11695   001C84  C1A7  F06B         	movff	powf@k+3,??_powf+3
 11696   001C88  0E15               	movlw	21
 11697   001C8A                     u8875:
 11698   001C8A  90D8               	bcf	status,0,c
 11699   001C8C  0100               	movlb	0	; () banked
 11700   001C8E  3768               	rlcf	??_powf& (0+255),f,b
 11701   001C90  3769               	rlcf	(??_powf+1)& (0+255),f,b
 11702   001C92  376A               	rlcf	(??_powf+2)& (0+255),f,b
 11703   001C94  376B               	rlcf	(??_powf+3)& (0+255),f,b
 11704   001C96  2EE8               	decfsz	wreg,f,c
 11705   001C98  EF45  F00E         	goto	u8875
 11706   001C9C  0101               	movlb	1	; () banked
 11707   001C9E  5198               	movf	powf@is& (0+255),w,b
 11708   001CA0  0100               	movlb	0	; () banked
 11709   001CA2  2568               	addwf	??_powf& (0+255),w,b
 11710   001CA4  6F6C               	movwf	(??_powf+4)& (0+255),b
 11711   001CA6  0101               	movlb	1	; () banked
 11712   001CA8  5199               	movf	(powf@is+1)& (0+255),w,b
 11713   001CAA  0100               	movlb	0	; () banked
 11714   001CAC  2169               	addwfc	(??_powf+1)& (0+255),w,b
 11715   001CAE  6F6D               	movwf	(??_powf+5)& (0+255),b
 11716   001CB0  0101               	movlb	1	; () banked
 11717   001CB2  519A               	movf	(powf@is+2)& (0+255),w,b
 11718   001CB4  0100               	movlb	0	; () banked
 11719   001CB6  216A               	addwfc	(??_powf+2)& (0+255),w,b
 11720   001CB8  6F6E               	movwf	(??_powf+6)& (0+255),b
 11721   001CBA  0101               	movlb	1	; () banked
 11722   001CBC  519B               	movf	(powf@is+3)& (0+255),w,b
 11723   001CBE  0100               	movlb	0	; () banked
 11724   001CC0  216B               	addwfc	(??_powf+3)& (0+255),w,b
 11725   001CC2  6F6F               	movwf	(??_powf+7)& (0+255),b
 11726   001CC4  0E00               	movlw	0
 11727   001CC6  256C               	addwf	(??_powf+4)& (0+255),w,b
 11728   001CC8  0101               	movlb	1	; () banked
 11729   001CCA  6F70               	movwf	powf@t_h& (0+255),b
 11730   001CCC  0E00               	movlw	0
 11731   001CCE  0100               	movlb	0	; () banked
 11732   001CD0  216D               	addwfc	(??_powf+5)& (0+255),w,b
 11733   001CD2  0101               	movlb	1	; () banked
 11734   001CD4  6F71               	movwf	(powf@t_h+1)& (0+255),b
 11735   001CD6  0E40               	movlw	64
 11736   001CD8  0100               	movlb	0	; () banked
 11737   001CDA  216E               	addwfc	(??_powf+6)& (0+255),w,b
 11738   001CDC  0101               	movlb	1	; () banked
 11739   001CDE  6F72               	movwf	(powf@t_h+2)& (0+255),b
 11740   001CE0  0E00               	movlw	0
 11741   001CE2  0100               	movlb	0	; () banked
 11742   001CE4  216F               	addwfc	(??_powf+7)& (0+255),w,b
 11743   001CE6  0101               	movlb	1	; () banked
 11744   001CE8  6F73               	movwf	(powf@t_h+3)& (0+255),b
 11745   001CEA                     
 11746                           ; BSR set to: 1
 11747   001CEA  51A4               	movf	powf@k& (0+255),w,b
 11748   001CEC  0D04               	mullw	4
 11749   001CEE  50F3               	movf	243,w,c
 11750   001CF0  0F11               	addlw	low _bp
 11751   001CF2  0100               	movlb	0	; () banked
 11752   001CF4  6F68               	movwf	??_powf& (0+255),b
 11753   001CF6  C068  FFF6         	movff	??_powf,tblptrl
 11754   001CFA                     	if	1	;There is more than 1 active tblptr byte
 11755   001CFA  0E0E               	movlw	high __smallconst
 11756   001CFC  6EF7               	movwf	tblptrh,c
 11757   001CFE                     	endif
 11758   001CFE                     	if	0	;tblptru may be non-zero
 11759   001CFE                     	endif
 11760   001CFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11761   001CFE  0E00               	movlw	low (__smallconst shr (0+16))
 11762   001D00  6EF8               	movwf	tblptru,c
 11763   001D02                     	endif
 11764   001D02  0009               	tblrd		*+
 11765   001D04  CFF5 F048          	movff	tablat,___flsub@a
 11766   001D08  0009               	tblrd		*+
 11767   001D0A  CFF5 F049          	movff	tablat,___flsub@a+1
 11768   001D0E  0009               	tblrd		*+
 11769   001D10  CFF5 F04A          	movff	tablat,___flsub@a+2
 11770   001D14  000A               	tblrd		*-
 11771   001D16  CFF5 F04B          	movff	tablat,___flsub@a+3
 11772   001D1A  C170  F044         	movff	powf@t_h,___flsub@b
 11773   001D1E  C171  F045         	movff	powf@t_h+1,___flsub@b+1
 11774   001D22  C172  F046         	movff	powf@t_h+2,___flsub@b+2
 11775   001D26  C173  F047         	movff	powf@t_h+3,___flsub@b+3
 11776   001D2A  ECD7  F040         	call	___flsub	;wreg free
 11777   001D2E  C044  F19C         	movff	?___flsub,_powf$3177
 11778   001D32  C045  F19D         	movff	?___flsub+1,_powf$3177+1
 11779   001D36  C046  F19E         	movff	?___flsub+2,_powf$3177+2
 11780   001D3A  C047  F19F         	movff	?___flsub+3,_powf$3177+3
 11781   001D3E  C178  F044         	movff	powf@ax,___flsub@b
 11782   001D42  C179  F045         	movff	powf@ax+1,___flsub@b+1
 11783   001D46  C17A  F046         	movff	powf@ax+2,___flsub@b+2
 11784   001D4A  C17B  F047         	movff	powf@ax+3,___flsub@b+3
 11785   001D4E  C19C  F048         	movff	_powf$3177,___flsub@a
 11786   001D52  C19D  F049         	movff	_powf$3177+1,___flsub@a+1
 11787   001D56  C19E  F04A         	movff	_powf$3177+2,___flsub@a+2
 11788   001D5A  C19F  F04B         	movff	_powf$3177+3,___flsub@a+3
 11789   001D5E  ECD7  F040         	call	___flsub	;wreg free
 11790   001D62  C044  F134         	movff	?___flsub,powf@t_l
 11791   001D66  C045  F135         	movff	?___flsub+1,powf@t_l+1
 11792   001D6A  C046  F136         	movff	?___flsub+2,powf@t_l+2
 11793   001D6E  C047  F137         	movff	?___flsub+3,powf@t_l+3
 11794   001D72  C170  F016         	movff	powf@t_h,___flmul@a
 11795   001D76  C171  F017         	movff	powf@t_h+1,___flmul@a+1
 11796   001D7A  C172  F018         	movff	powf@t_h+2,___flmul@a+2
 11797   001D7E  C173  F019         	movff	powf@t_h+3,___flmul@a+3
 11798   001D82  C174  F012         	movff	powf@s_h,___flmul@b
 11799   001D86  C175  F013         	movff	powf@s_h+1,___flmul@b+1
 11800   001D8A  C176  F014         	movff	powf@s_h+2,___flmul@b+2
 11801   001D8E  C177  F015         	movff	powf@s_h+3,___flmul@b+3
 11802   001D92  ECC8  F02D         	call	___flmul	;wreg free
 11803   001D96  C012  F048         	movff	?___flmul,___flsub@a
 11804   001D9A  C013  F049         	movff	?___flmul+1,___flsub@a+1
 11805   001D9E  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 11806   001DA2  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 11807   001DA6  C17C  F044         	movff	powf@u,___flsub@b
 11808   001DAA  C17D  F045         	movff	powf@u+1,___flsub@b+1
 11809   001DAE  C17E  F046         	movff	powf@u+2,___flsub@b+2
 11810   001DB2  C17F  F047         	movff	powf@u+3,___flsub@b+3
 11811   001DB6  ECD7  F040         	call	___flsub	;wreg free
 11812   001DBA  C044  F19C         	movff	?___flsub,_powf$3177
 11813   001DBE  C045  F19D         	movff	?___flsub+1,_powf$3177+1
 11814   001DC2  C046  F19E         	movff	?___flsub+2,_powf$3177+2
 11815   001DC6  C047  F19F         	movff	?___flsub+3,_powf$3177+3
 11816   001DCA  C134  F016         	movff	powf@t_l,___flmul@a
 11817   001DCE  C135  F017         	movff	powf@t_l+1,___flmul@a+1
 11818   001DD2  C136  F018         	movff	powf@t_l+2,___flmul@a+2
 11819   001DD6  C137  F019         	movff	powf@t_l+3,___flmul@a+3
 11820   001DDA  C174  F012         	movff	powf@s_h,___flmul@b
 11821   001DDE  C175  F013         	movff	powf@s_h+1,___flmul@b+1
 11822   001DE2  C176  F014         	movff	powf@s_h+2,___flmul@b+2
 11823   001DE6  C177  F015         	movff	powf@s_h+3,___flmul@b+3
 11824   001DEA  ECC8  F02D         	call	___flmul	;wreg free
 11825   001DEE  C012  F048         	movff	?___flmul,___flsub@a
 11826   001DF2  C013  F049         	movff	?___flmul+1,___flsub@a+1
 11827   001DF6  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 11828   001DFA  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 11829   001DFE  C19C  F044         	movff	_powf$3177,___flsub@b
 11830   001E02  C19D  F045         	movff	_powf$3177+1,___flsub@b+1
 11831   001E06  C19E  F046         	movff	_powf$3177+2,___flsub@b+2
 11832   001E0A  C19F  F047         	movff	_powf$3177+3,___flsub@b+3
 11833   001E0E  ECD7  F040         	call	___flsub	;wreg free
 11834   001E12  C044  F158         	movff	?___flsub,_powf$3175
 11835   001E16  C045  F159         	movff	?___flsub+1,_powf$3175+1
 11836   001E1A  C046  F15A         	movff	?___flsub+2,_powf$3175+2
 11837   001E1E  C047  F15B         	movff	?___flsub+3,_powf$3175+3
 11838   001E22  C158  F012         	movff	_powf$3175,___flmul@b
 11839   001E26  C159  F013         	movff	_powf$3175+1,___flmul@b+1
 11840   001E2A  C15A  F014         	movff	_powf$3175+2,___flmul@b+2
 11841   001E2E  C15B  F015         	movff	_powf$3175+3,___flmul@b+3
 11842   001E32  C180  F016         	movff	powf@v,___flmul@a
 11843   001E36  C181  F017         	movff	powf@v+1,___flmul@a+1
 11844   001E3A  C182  F018         	movff	powf@v+2,___flmul@a+2
 11845   001E3E  C183  F019         	movff	powf@v+3,___flmul@a+3
 11846   001E42  ECC8  F02D         	call	___flmul	;wreg free
 11847   001E46  C012  F130         	movff	?___flmul,powf@s_l
 11848   001E4A  C013  F131         	movff	?___flmul+1,powf@s_l+1
 11849   001E4E  C014  F132         	movff	?___flmul+2,powf@s_l+2
 11850   001E52  C015  F133         	movff	?___flmul+3,powf@s_l+3
 11851   001E56  C160  F012         	movff	powf@s,___flmul@b
 11852   001E5A  C161  F013         	movff	powf@s+1,___flmul@b+1
 11853   001E5E  C162  F014         	movff	powf@s+2,___flmul@b+2
 11854   001E62  C163  F015         	movff	powf@s+3,___flmul@b+3
 11855   001E66  C160  F016         	movff	powf@s,___flmul@a
 11856   001E6A  C161  F017         	movff	powf@s+1,___flmul@a+1
 11857   001E6E  C162  F018         	movff	powf@s+2,___flmul@a+2
 11858   001E72  C163  F019         	movff	powf@s+3,___flmul@a+3
 11859   001E76  ECC8  F02D         	call	___flmul	;wreg free
 11860   001E7A  C012  F190         	movff	?___flmul,powf@s2
 11861   001E7E  C013  F191         	movff	?___flmul+1,powf@s2+1
 11862   001E82  C014  F192         	movff	?___flmul+2,powf@s2+2
 11863   001E86  C015  F193         	movff	?___flmul+3,powf@s2+3
 11864   001E8A  0E55               	movlw	85
 11865   001E8C  6E06               	movwf	___fladd@a^0,c
 11866   001E8E  0E32               	movlw	50
 11867   001E90  6E07               	movwf	(___fladd@a+1)^0,c
 11868   001E92  0E6C               	movlw	108
 11869   001E94  6E08               	movwf	(___fladd@a+2)^0,c
 11870   001E96  0E3E               	movlw	62
 11871   001E98  6E09               	movwf	(___fladd@a+3)^0,c
 11872   001E9A  0E42               	movlw	66
 11873   001E9C  6E16               	movwf	___flmul@a^0,c
 11874   001E9E  0EF1               	movlw	241
 11875   001EA0  6E17               	movwf	(___flmul@a+1)^0,c
 11876   001EA2  0E53               	movlw	83
 11877   001EA4  6E18               	movwf	(___flmul@a+2)^0,c
 11878   001EA6  0E3E               	movlw	62
 11879   001EA8  6E19               	movwf	(___flmul@a+3)^0,c
 11880   001EAA  C190  F012         	movff	powf@s2,___flmul@b
 11881   001EAE  C191  F013         	movff	powf@s2+1,___flmul@b+1
 11882   001EB2  C192  F014         	movff	powf@s2+2,___flmul@b+2
 11883   001EB6  C193  F015         	movff	powf@s2+3,___flmul@b+3
 11884   001EBA  ECC8  F02D         	call	___flmul	;wreg free
 11885   001EBE  C012  F002         	movff	?___flmul,___fladd@b
 11886   001EC2  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11887   001EC6  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11888   001ECA  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11889   001ECE  EC68  F02B         	call	___fladd	;wreg free
 11890   001ED2  C002  F148         	movff	?___fladd,_powf$3174
 11891   001ED6  C003  F149         	movff	?___fladd+1,_powf$3174+1
 11892   001EDA  C004  F14A         	movff	?___fladd+2,_powf$3174+2
 11893   001EDE  C005  F14B         	movff	?___fladd+3,_powf$3174+3
 11894   001EE2  0E05               	movlw	5
 11895   001EE4  6E06               	movwf	___fladd@a^0,c
 11896   001EE6  0EA3               	movlw	163
 11897   001EE8  6E07               	movwf	(___fladd@a+1)^0,c
 11898   001EEA  0E8B               	movlw	139
 11899   001EEC  6E08               	movwf	(___fladd@a+2)^0,c
 11900   001EEE  0E3E               	movlw	62
 11901   001EF0  6E09               	movwf	(___fladd@a+3)^0,c
 11902   001EF2  C190  F016         	movff	powf@s2,___flmul@a
 11903   001EF6  C191  F017         	movff	powf@s2+1,___flmul@a+1
 11904   001EFA  C192  F018         	movff	powf@s2+2,___flmul@a+2
 11905   001EFE  C193  F019         	movff	powf@s2+3,___flmul@a+3
 11906   001F02  C148  F012         	movff	_powf$3174,___flmul@b
 11907   001F06  C149  F013         	movff	_powf$3174+1,___flmul@b+1
 11908   001F0A  C14A  F014         	movff	_powf$3174+2,___flmul@b+2
 11909   001F0E  C14B  F015         	movff	_powf$3174+3,___flmul@b+3
 11910   001F12  ECC8  F02D         	call	___flmul	;wreg free
 11911   001F16  C012  F002         	movff	?___flmul,___fladd@b
 11912   001F1A  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11913   001F1E  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11914   001F22  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11915   001F26  EC68  F02B         	call	___fladd	;wreg free
 11916   001F2A  C002  F158         	movff	?___fladd,_powf$3175
 11917   001F2E  C003  F159         	movff	?___fladd+1,_powf$3175+1
 11918   001F32  C004  F15A         	movff	?___fladd+2,_powf$3175+2
 11919   001F36  C005  F15B         	movff	?___fladd+3,_powf$3175+3
 11920   001F3A  0EAB               	movlw	171
 11921   001F3C  6E06               	movwf	___fladd@a^0,c
 11922   001F3E  0EAA               	movlw	170
 11923   001F40  6E07               	movwf	(___fladd@a+1)^0,c
 11924   001F42  0EAA               	movlw	170
 11925   001F44  6E08               	movwf	(___fladd@a+2)^0,c
 11926   001F46  0E3E               	movlw	62
 11927   001F48  6E09               	movwf	(___fladd@a+3)^0,c
 11928   001F4A  C190  F016         	movff	powf@s2,___flmul@a
 11929   001F4E  C191  F017         	movff	powf@s2+1,___flmul@a+1
 11930   001F52  C192  F018         	movff	powf@s2+2,___flmul@a+2
 11931   001F56  C193  F019         	movff	powf@s2+3,___flmul@a+3
 11932   001F5A  C158  F012         	movff	_powf$3175,___flmul@b
 11933   001F5E  C159  F013         	movff	_powf$3175+1,___flmul@b+1
 11934   001F62  C15A  F014         	movff	_powf$3175+2,___flmul@b+2
 11935   001F66  C15B  F015         	movff	_powf$3175+3,___flmul@b+3
 11936   001F6A  ECC8  F02D         	call	___flmul	;wreg free
 11937   001F6E  C012  F002         	movff	?___flmul,___fladd@b
 11938   001F72  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11939   001F76  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11940   001F7A  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11941   001F7E  EC68  F02B         	call	___fladd	;wreg free
 11942   001F82  C002  F14C         	movff	?___fladd,_powf$3176
 11943   001F86  C003  F14D         	movff	?___fladd+1,_powf$3176+1
 11944   001F8A  C004  F14E         	movff	?___fladd+2,_powf$3176+2
 11945   001F8E  C005  F14F         	movff	?___fladd+3,_powf$3176+3
 11946   001F92  0EB7               	movlw	183
 11947   001F94  6E06               	movwf	___fladd@a^0,c
 11948   001F96  0E6D               	movlw	109
 11949   001F98  6E07               	movwf	(___fladd@a+1)^0,c
 11950   001F9A  0EDB               	movlw	219
 11951   001F9C  6E08               	movwf	(___fladd@a+2)^0,c
 11952   001F9E  0E3E               	movlw	62
 11953   001FA0  6E09               	movwf	(___fladd@a+3)^0,c
 11954   001FA2  C190  F016         	movff	powf@s2,___flmul@a
 11955   001FA6  C191  F017         	movff	powf@s2+1,___flmul@a+1
 11956   001FAA  C192  F018         	movff	powf@s2+2,___flmul@a+2
 11957   001FAE  C193  F019         	movff	powf@s2+3,___flmul@a+3
 11958   001FB2  C14C  F012         	movff	_powf$3176,___flmul@b
 11959   001FB6  C14D  F013         	movff	_powf$3176+1,___flmul@b+1
 11960   001FBA  C14E  F014         	movff	_powf$3176+2,___flmul@b+2
 11961   001FBE  C14F  F015         	movff	_powf$3176+3,___flmul@b+3
 11962   001FC2  ECC8  F02D         	call	___flmul	;wreg free
 11963   001FC6  C012  F002         	movff	?___flmul,___fladd@b
 11964   001FCA  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11965   001FCE  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11966   001FD2  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11967   001FD6  EC68  F02B         	call	___fladd	;wreg free
 11968   001FDA  C002  F138         	movff	?___fladd,_powf$3178
 11969   001FDE  C003  F139         	movff	?___fladd+1,_powf$3178+1
 11970   001FE2  C004  F13A         	movff	?___fladd+2,_powf$3178+2
 11971   001FE6  C005  F13B         	movff	?___fladd+3,_powf$3178+3
 11972   001FEA  0E9A               	movlw	154
 11973   001FEC  6E06               	movwf	___fladd@a^0,c
 11974   001FEE  0E99               	movlw	153
 11975   001FF0  6E07               	movwf	(___fladd@a+1)^0,c
 11976   001FF2  0E19               	movlw	25
 11977   001FF4  6E08               	movwf	(___fladd@a+2)^0,c
 11978   001FF6  0E3F               	movlw	63
 11979   001FF8  6E09               	movwf	(___fladd@a+3)^0,c
 11980   001FFA  C190  F016         	movff	powf@s2,___flmul@a
 11981   001FFE  C191  F017         	movff	powf@s2+1,___flmul@a+1
 11982   002002  C192  F018         	movff	powf@s2+2,___flmul@a+2
 11983   002006  C193  F019         	movff	powf@s2+3,___flmul@a+3
 11984   00200A  C138  F012         	movff	_powf$3178,___flmul@b
 11985   00200E  C139  F013         	movff	_powf$3178+1,___flmul@b+1
 11986   002012  C13A  F014         	movff	_powf$3178+2,___flmul@b+2
 11987   002016  C13B  F015         	movff	_powf$3178+3,___flmul@b+3
 11988   00201A  ECC8  F02D         	call	___flmul	;wreg free
 11989   00201E  C012  F002         	movff	?___flmul,___fladd@b
 11990   002022  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11991   002026  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11992   00202A  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11993   00202E  EC68  F02B         	call	___fladd	;wreg free
 11994   002032  C002  F100         	movff	?___fladd,_powf$3179
 11995   002036  C003  F101         	movff	?___fladd+1,_powf$3179+1
 11996   00203A  C004  F102         	movff	?___fladd+2,_powf$3179+2
 11997   00203E  C005  F103         	movff	?___fladd+3,_powf$3179+3
 11998   002042  C190  F016         	movff	powf@s2,___flmul@a
 11999   002046  C191  F017         	movff	powf@s2+1,___flmul@a+1
 12000   00204A  C192  F018         	movff	powf@s2+2,___flmul@a+2
 12001   00204E  C193  F019         	movff	powf@s2+3,___flmul@a+3
 12002   002052  C190  F012         	movff	powf@s2,___flmul@b
 12003   002056  C191  F013         	movff	powf@s2+1,___flmul@b+1
 12004   00205A  C192  F014         	movff	powf@s2+2,___flmul@b+2
 12005   00205E  C193  F015         	movff	powf@s2+3,___flmul@b+3
 12006   002062  ECC8  F02D         	call	___flmul	;wreg free
 12007   002066  C012  F104         	movff	?___flmul,_powf$3180
 12008   00206A  C013  F105         	movff	?___flmul+1,_powf$3180+1
 12009   00206E  C014  F106         	movff	?___flmul+2,_powf$3180+2
 12010   002072  C015  F107         	movff	?___flmul+3,_powf$3180+3
 12011   002076  C100  F012         	movff	_powf$3179,___flmul@b
 12012   00207A  C101  F013         	movff	_powf$3179+1,___flmul@b+1
 12013   00207E  C102  F014         	movff	_powf$3179+2,___flmul@b+2
 12014   002082  C103  F015         	movff	_powf$3179+3,___flmul@b+3
 12015   002086  C104  F016         	movff	_powf$3180,___flmul@a
 12016   00208A  C105  F017         	movff	_powf$3180+1,___flmul@a+1
 12017   00208E  C106  F018         	movff	_powf$3180+2,___flmul@a+2
 12018   002092  C107  F019         	movff	_powf$3180+3,___flmul@a+3
 12019   002096  ECC8  F02D         	call	___flmul	;wreg free
 12020   00209A  C012  F150         	movff	?___flmul,powf@r
 12021   00209E  C013  F151         	movff	?___flmul+1,powf@r+1
 12022   0020A2  C014  F152         	movff	?___flmul+2,powf@r+2
 12023   0020A6  C015  F153         	movff	?___flmul+3,powf@r+3
 12024   0020AA  C130  F016         	movff	powf@s_l,___flmul@a
 12025   0020AE  C131  F017         	movff	powf@s_l+1,___flmul@a+1
 12026   0020B2  C132  F018         	movff	powf@s_l+2,___flmul@a+2
 12027   0020B6  C133  F019         	movff	powf@s_l+3,___flmul@a+3
 12028   0020BA  C160  F006         	movff	powf@s,___fladd@a
 12029   0020BE  C161  F007         	movff	powf@s+1,___fladd@a+1
 12030   0020C2  C162  F008         	movff	powf@s+2,___fladd@a+2
 12031   0020C6  C163  F009         	movff	powf@s+3,___fladd@a+3
 12032   0020CA  C174  F002         	movff	powf@s_h,___fladd@b
 12033   0020CE  C175  F003         	movff	powf@s_h+1,___fladd@b+1
 12034   0020D2  C176  F004         	movff	powf@s_h+2,___fladd@b+2
 12035   0020D6  C177  F005         	movff	powf@s_h+3,___fladd@b+3
 12036   0020DA  EC68  F02B         	call	___fladd	;wreg free
 12037   0020DE  C002  F012         	movff	?___fladd,___flmul@b
 12038   0020E2  C003  F013         	movff	?___fladd+1,___flmul@b+1
 12039   0020E6  C004  F014         	movff	?___fladd+2,___flmul@b+2
 12040   0020EA  C005  F015         	movff	?___fladd+3,___flmul@b+3
 12041   0020EE  ECC8  F02D         	call	___flmul	;wreg free
 12042   0020F2  C012  F15C         	movff	?___flmul,_powf$3181
 12043   0020F6  C013  F15D         	movff	?___flmul+1,_powf$3181+1
 12044   0020FA  C014  F15E         	movff	?___flmul+2,_powf$3181+2
 12045   0020FE  C015  F15F         	movff	?___flmul+3,_powf$3181+3
 12046   002102  C150  F002         	movff	powf@r,___fladd@b
 12047   002106  C151  F003         	movff	powf@r+1,___fladd@b+1
 12048   00210A  C152  F004         	movff	powf@r+2,___fladd@b+2
 12049   00210E  C153  F005         	movff	powf@r+3,___fladd@b+3
 12050   002112  C15C  F006         	movff	_powf$3181,___fladd@a
 12051   002116  C15D  F007         	movff	_powf$3181+1,___fladd@a+1
 12052   00211A  C15E  F008         	movff	_powf$3181+2,___fladd@a+2
 12053   00211E  C15F  F009         	movff	_powf$3181+3,___fladd@a+3
 12054   002122  EC68  F02B         	call	___fladd	;wreg free
 12055   002126  C002  F150         	movff	?___fladd,powf@r
 12056   00212A  C003  F151         	movff	?___fladd+1,powf@r+1
 12057   00212E  C004  F152         	movff	?___fladd+2,powf@r+2
 12058   002132  C005  F153         	movff	?___fladd+3,powf@r+3
 12059   002136  C174  F012         	movff	powf@s_h,___flmul@b
 12060   00213A  C175  F013         	movff	powf@s_h+1,___flmul@b+1
 12061   00213E  C176  F014         	movff	powf@s_h+2,___flmul@b+2
 12062   002142  C177  F015         	movff	powf@s_h+3,___flmul@b+3
 12063   002146  C174  F016         	movff	powf@s_h,___flmul@a
 12064   00214A  C175  F017         	movff	powf@s_h+1,___flmul@a+1
 12065   00214E  C176  F018         	movff	powf@s_h+2,___flmul@a+2
 12066   002152  C177  F019         	movff	powf@s_h+3,___flmul@a+3
 12067   002156  ECC8  F02D         	call	___flmul	;wreg free
 12068   00215A  C012  F190         	movff	?___flmul,powf@s2
 12069   00215E  C013  F191         	movff	?___flmul+1,powf@s2+1
 12070   002162  C014  F192         	movff	?___flmul+2,powf@s2+2
 12071   002166  C015  F193         	movff	?___flmul+3,powf@s2+3
 12072   00216A  0E00               	movlw	0
 12073   00216C  6E06               	movwf	___fladd@a^0,c
 12074   00216E  0E00               	movlw	0
 12075   002170  6E07               	movwf	(___fladd@a+1)^0,c
 12076   002172  0E40               	movlw	64
 12077   002174  6E08               	movwf	(___fladd@a+2)^0,c
 12078   002176  0E40               	movlw	64
 12079   002178  6E09               	movwf	(___fladd@a+3)^0,c
 12080   00217A  C190  F002         	movff	powf@s2,___fladd@b
 12081   00217E  C191  F003         	movff	powf@s2+1,___fladd@b+1
 12082   002182  C192  F004         	movff	powf@s2+2,___fladd@b+2
 12083   002186  C193  F005         	movff	powf@s2+3,___fladd@b+3
 12084   00218A  EC68  F02B         	call	___fladd	;wreg free
 12085   00218E  C002  F15C         	movff	?___fladd,_powf$3181
 12086   002192  C003  F15D         	movff	?___fladd+1,_powf$3181+1
 12087   002196  C004  F15E         	movff	?___fladd+2,_powf$3181+2
 12088   00219A  C005  F15F         	movff	?___fladd+3,_powf$3181+3
 12089   00219E  C15C  F002         	movff	_powf$3181,___fladd@b
 12090   0021A2  C15D  F003         	movff	_powf$3181+1,___fladd@b+1
 12091   0021A6  C15E  F004         	movff	_powf$3181+2,___fladd@b+2
 12092   0021AA  C15F  F005         	movff	_powf$3181+3,___fladd@b+3
 12093   0021AE  C150  F006         	movff	powf@r,___fladd@a
 12094   0021B2  C151  F007         	movff	powf@r+1,___fladd@a+1
 12095   0021B6  C152  F008         	movff	powf@r+2,___fladd@a+2
 12096   0021BA  C153  F009         	movff	powf@r+3,___fladd@a+3
 12097   0021BE  EC68  F02B         	call	___fladd	;wreg free
 12098   0021C2  C002  F170         	movff	?___fladd,powf@t_h
 12099   0021C6  C003  F171         	movff	?___fladd+1,powf@t_h+1
 12100   0021CA  C004  F172         	movff	?___fladd+2,powf@t_h+2
 12101   0021CE  C005  F173         	movff	?___fladd+3,powf@t_h+3
 12102   0021D2  C170  F198         	movff	powf@t_h,powf@is
 12103   0021D6  C171  F199         	movff	powf@t_h+1,powf@is+1
 12104   0021DA  C172  F19A         	movff	powf@t_h+2,powf@is+2
 12105   0021DE  C173  F19B         	movff	powf@t_h+3,powf@is+3
 12106   0021E2  0E00               	movlw	0
 12107   0021E4  0101               	movlb	1	; () banked
 12108   0021E6  1598               	andwf	powf@is& (0+255),w,b
 12109   0021E8  6F70               	movwf	powf@t_h& (0+255),b
 12110   0021EA  0EF0               	movlw	240
 12111   0021EC  1599               	andwf	(powf@is+1)& (0+255),w,b
 12112   0021EE  6F71               	movwf	(powf@t_h+1)& (0+255),b
 12113   0021F0  0EFF               	movlw	255
 12114   0021F2  159A               	andwf	(powf@is+2)& (0+255),w,b
 12115   0021F4  6F72               	movwf	(powf@t_h+2)& (0+255),b
 12116   0021F6  0EFF               	movlw	255
 12117   0021F8  159B               	andwf	(powf@is+3)& (0+255),w,b
 12118   0021FA  6F73               	movwf	(powf@t_h+3)& (0+255),b
 12119   0021FC                     
 12120                           ; BSR set to: 1
 12121   0021FC  0E00               	movlw	0
 12122   0021FE  6E06               	movwf	___fladd@a^0,c
 12123   002200  0E00               	movlw	0
 12124   002202  6E07               	movwf	(___fladd@a+1)^0,c
 12125   002204  0E40               	movlw	64
 12126   002206  6E08               	movwf	(___fladd@a+2)^0,c
 12127   002208  0EC0               	movlw	192
 12128   00220A  6E09               	movwf	(___fladd@a+3)^0,c
 12129   00220C  C170  F002         	movff	powf@t_h,___fladd@b
 12130   002210  C171  F003         	movff	powf@t_h+1,___fladd@b+1
 12131   002214  C172  F004         	movff	powf@t_h+2,___fladd@b+2
 12132   002218  C173  F005         	movff	powf@t_h+3,___fladd@b+3
 12133   00221C  EC68  F02B         	call	___fladd	;wreg free
 12134   002220  C002  F13C         	movff	?___fladd,_powf$3182
 12135   002224  C003  F13D         	movff	?___fladd+1,_powf$3182+1
 12136   002228  C004  F13E         	movff	?___fladd+2,_powf$3182+2
 12137   00222C  C005  F13F         	movff	?___fladd+3,_powf$3182+3
 12138   002230  C190  F048         	movff	powf@s2,___flsub@a
 12139   002234  C191  F049         	movff	powf@s2+1,___flsub@a+1
 12140   002238  C192  F04A         	movff	powf@s2+2,___flsub@a+2
 12141   00223C  C193  F04B         	movff	powf@s2+3,___flsub@a+3
 12142   002240  C13C  F044         	movff	_powf$3182,___flsub@b
 12143   002244  C13D  F045         	movff	_powf$3182+1,___flsub@b+1
 12144   002248  C13E  F046         	movff	_powf$3182+2,___flsub@b+2
 12145   00224C  C13F  F047         	movff	_powf$3182+3,___flsub@b+3
 12146   002250  ECD7  F040         	call	___flsub	;wreg free
 12147   002254  C044  F140         	movff	?___flsub,_powf$3183
 12148   002258  C045  F141         	movff	?___flsub+1,_powf$3183+1
 12149   00225C  C046  F142         	movff	?___flsub+2,_powf$3183+2
 12150   002260  C047  F143         	movff	?___flsub+3,_powf$3183+3
 12151   002264  C150  F044         	movff	powf@r,___flsub@b
 12152   002268  C151  F045         	movff	powf@r+1,___flsub@b+1
 12153   00226C  C152  F046         	movff	powf@r+2,___flsub@b+2
 12154   002270  C153  F047         	movff	powf@r+3,___flsub@b+3
 12155   002274  C140  F048         	movff	_powf$3183,___flsub@a
 12156   002278  C141  F049         	movff	_powf$3183+1,___flsub@a+1
 12157   00227C  C142  F04A         	movff	_powf$3183+2,___flsub@a+2
 12158   002280  C143  F04B         	movff	_powf$3183+3,___flsub@a+3
 12159   002284  ECD7  F040         	call	___flsub	;wreg free
 12160   002288  C044  F134         	movff	?___flsub,powf@t_l
 12161   00228C  C045  F135         	movff	?___flsub+1,powf@t_l+1
 12162   002290  C046  F136         	movff	?___flsub+2,powf@t_l+2
 12163   002294  C047  F137         	movff	?___flsub+3,powf@t_l+3
 12164   002298  C174  F012         	movff	powf@s_h,___flmul@b
 12165   00229C  C175  F013         	movff	powf@s_h+1,___flmul@b+1
 12166   0022A0  C176  F014         	movff	powf@s_h+2,___flmul@b+2
 12167   0022A4  C177  F015         	movff	powf@s_h+3,___flmul@b+3
 12168   0022A8  C170  F016         	movff	powf@t_h,___flmul@a
 12169   0022AC  C171  F017         	movff	powf@t_h+1,___flmul@a+1
 12170   0022B0  C172  F018         	movff	powf@t_h+2,___flmul@a+2
 12171   0022B4  C173  F019         	movff	powf@t_h+3,___flmul@a+3
 12172   0022B8  ECC8  F02D         	call	___flmul	;wreg free
 12173   0022BC  C012  F17C         	movff	?___flmul,powf@u
 12174   0022C0  C013  F17D         	movff	?___flmul+1,powf@u+1
 12175   0022C4  C014  F17E         	movff	?___flmul+2,powf@u+2
 12176   0022C8  C015  F17F         	movff	?___flmul+3,powf@u+3
 12177   0022CC  C130  F016         	movff	powf@s_l,___flmul@a
 12178   0022D0  C131  F017         	movff	powf@s_l+1,___flmul@a+1
 12179   0022D4  C132  F018         	movff	powf@s_l+2,___flmul@a+2
 12180   0022D8  C133  F019         	movff	powf@s_l+3,___flmul@a+3
 12181   0022DC  C170  F012         	movff	powf@t_h,___flmul@b
 12182   0022E0  C171  F013         	movff	powf@t_h+1,___flmul@b+1
 12183   0022E4  C172  F014         	movff	powf@t_h+2,___flmul@b+2
 12184   0022E8  C173  F015         	movff	powf@t_h+3,___flmul@b+3
 12185   0022EC  ECC8  F02D         	call	___flmul	;wreg free
 12186   0022F0  C012  F002         	movff	?___flmul,___fladd@b
 12187   0022F4  C013  F003         	movff	?___flmul+1,___fladd@b+1
 12188   0022F8  C014  F004         	movff	?___flmul+2,___fladd@b+2
 12189   0022FC  C015  F005         	movff	?___flmul+3,___fladd@b+3
 12190   002300  C160  F016         	movff	powf@s,___flmul@a
 12191   002304  C161  F017         	movff	powf@s+1,___flmul@a+1
 12192   002308  C162  F018         	movff	powf@s+2,___flmul@a+2
 12193   00230C  C163  F019         	movff	powf@s+3,___flmul@a+3
 12194   002310  C134  F012         	movff	powf@t_l,___flmul@b
 12195   002314  C135  F013         	movff	powf@t_l+1,___flmul@b+1
 12196   002318  C136  F014         	movff	powf@t_l+2,___flmul@b+2
 12197   00231C  C137  F015         	movff	powf@t_l+3,___flmul@b+3
 12198   002320  ECC8  F02D         	call	___flmul	;wreg free
 12199   002324  C012  F006         	movff	?___flmul,___fladd@a
 12200   002328  C013  F007         	movff	?___flmul+1,___fladd@a+1
 12201   00232C  C014  F008         	movff	?___flmul+2,___fladd@a+2
 12202   002330  C015  F009         	movff	?___flmul+3,___fladd@a+3
 12203   002334  EC68  F02B         	call	___fladd	;wreg free
 12204   002338  C002  F180         	movff	?___fladd,powf@v
 12205   00233C  C003  F181         	movff	?___fladd+1,powf@v+1
 12206   002340  C004  F182         	movff	?___fladd+2,powf@v+2
 12207   002344  C005  F183         	movff	?___fladd+3,powf@v+3
 12208   002348  C17C  F002         	movff	powf@u,___fladd@b
 12209   00234C  C17D  F003         	movff	powf@u+1,___fladd@b+1
 12210   002350  C17E  F004         	movff	powf@u+2,___fladd@b+2
 12211   002354  C17F  F005         	movff	powf@u+3,___fladd@b+3
 12212   002358  C180  F006         	movff	powf@v,___fladd@a
 12213   00235C  C181  F007         	movff	powf@v+1,___fladd@a+1
 12214   002360  C182  F008         	movff	powf@v+2,___fladd@a+2
 12215   002364  C183  F009         	movff	powf@v+3,___fladd@a+3
 12216   002368  EC68  F02B         	call	___fladd	;wreg free
 12217   00236C  C002  F1A0         	movff	?___fladd,powf@p_h
 12218   002370  C003  F1A1         	movff	?___fladd+1,powf@p_h+1
 12219   002374  C004  F1A2         	movff	?___fladd+2,powf@p_h+2
 12220   002378  C005  F1A3         	movff	?___fladd+3,powf@p_h+3
 12221   00237C  C1A0  F198         	movff	powf@p_h,powf@is
 12222   002380  C1A1  F199         	movff	powf@p_h+1,powf@is+1
 12223   002384  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
 12224   002388  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
 12225   00238C  0E00               	movlw	0
 12226   00238E  0101               	movlb	1	; () banked
 12227   002390  1598               	andwf	powf@is& (0+255),w,b
 12228   002392  6FA0               	movwf	powf@p_h& (0+255),b
 12229   002394  0EF0               	movlw	240
 12230   002396  1599               	andwf	(powf@is+1)& (0+255),w,b
 12231   002398  6FA1               	movwf	(powf@p_h+1)& (0+255),b
 12232   00239A  0EFF               	movlw	255
 12233   00239C  159A               	andwf	(powf@is+2)& (0+255),w,b
 12234   00239E  6FA2               	movwf	(powf@p_h+2)& (0+255),b
 12235   0023A0  0EFF               	movlw	255
 12236   0023A2  159B               	andwf	(powf@is+3)& (0+255),w,b
 12237   0023A4  6FA3               	movwf	(powf@p_h+3)& (0+255),b
 12238   0023A6                     
 12239                           ; BSR set to: 1
 12240   0023A6  C17C  F048         	movff	powf@u,___flsub@a
 12241   0023AA  C17D  F049         	movff	powf@u+1,___flsub@a+1
 12242   0023AE  C17E  F04A         	movff	powf@u+2,___flsub@a+2
 12243   0023B2  C17F  F04B         	movff	powf@u+3,___flsub@a+3
 12244   0023B6  C1A0  F044         	movff	powf@p_h,___flsub@b
 12245   0023BA  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
 12246   0023BE  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
 12247   0023C2  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
 12248   0023C6  ECD7  F040         	call	___flsub	;wreg free
 12249   0023CA  C044  F19C         	movff	?___flsub,_powf$3177
 12250   0023CE  C045  F19D         	movff	?___flsub+1,_powf$3177+1
 12251   0023D2  C046  F19E         	movff	?___flsub+2,_powf$3177+2
 12252   0023D6  C047  F19F         	movff	?___flsub+3,_powf$3177+3
 12253   0023DA  C180  F044         	movff	powf@v,___flsub@b
 12254   0023DE  C181  F045         	movff	powf@v+1,___flsub@b+1
 12255   0023E2  C182  F046         	movff	powf@v+2,___flsub@b+2
 12256   0023E6  C183  F047         	movff	powf@v+3,___flsub@b+3
 12257   0023EA  C19C  F048         	movff	_powf$3177,___flsub@a
 12258   0023EE  C19D  F049         	movff	_powf$3177+1,___flsub@a+1
 12259   0023F2  C19E  F04A         	movff	_powf$3177+2,___flsub@a+2
 12260   0023F6  C19F  F04B         	movff	_powf$3177+3,___flsub@a+3
 12261   0023FA  ECD7  F040         	call	___flsub	;wreg free
 12262   0023FE  C044  F16C         	movff	?___flsub,powf@p_l
 12263   002402  C045  F16D         	movff	?___flsub+1,powf@p_l+1
 12264   002406  C046  F16E         	movff	?___flsub+2,powf@p_l+2
 12265   00240A  C047  F16F         	movff	?___flsub+3,powf@p_l+3
 12266   00240E  C1A0  F012         	movff	powf@p_h,___flmul@b
 12267   002412  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
 12268   002416  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
 12269   00241A  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
 12270   00241E  0E00               	movlw	0
 12271   002420  6E16               	movwf	___flmul@a^0,c
 12272   002422  0E40               	movlw	64
 12273   002424  6E17               	movwf	(___flmul@a+1)^0,c
 12274   002426  0E76               	movlw	118
 12275   002428  6E18               	movwf	(___flmul@a+2)^0,c
 12276   00242A  0E3F               	movlw	63
 12277   00242C  6E19               	movwf	(___flmul@a+3)^0,c
 12278   00242E  ECC8  F02D         	call	___flmul	;wreg free
 12279   002432  C012  F120         	movff	?___flmul,powf@z_h
 12280   002436  C013  F121         	movff	?___flmul+1,powf@z_h+1
 12281   00243A  C014  F122         	movff	?___flmul+2,powf@z_h+2
 12282   00243E  C015  F123         	movff	?___flmul+3,powf@z_h+3
 12283   002442  0E4F               	movlw	79
 12284   002444  6E16               	movwf	___flmul@a^0,c
 12285   002446  0E38               	movlw	56
 12286   002448  6E17               	movwf	(___flmul@a+1)^0,c
 12287   00244A  0E76               	movlw	118
 12288   00244C  6E18               	movwf	(___flmul@a+2)^0,c
 12289   00244E  0E3F               	movlw	63
 12290   002450  6E19               	movwf	(___flmul@a+3)^0,c
 12291   002452  C16C  F012         	movff	powf@p_l,___flmul@b
 12292   002456  C16D  F013         	movff	powf@p_l+1,___flmul@b+1
 12293   00245A  C16E  F014         	movff	powf@p_l+2,___flmul@b+2
 12294   00245E  C16F  F015         	movff	powf@p_l+3,___flmul@b+3
 12295   002462  ECC8  F02D         	call	___flmul	;wreg free
 12296   002466  C012  F006         	movff	?___flmul,___fladd@a
 12297   00246A  C013  F007         	movff	?___flmul+1,___fladd@a+1
 12298   00246E  C014  F008         	movff	?___flmul+2,___fladd@a+2
 12299   002472  C015  F009         	movff	?___flmul+3,___fladd@a+3
 12300   002476  0EC6               	movlw	198
 12301   002478  6E16               	movwf	___flmul@a^0,c
 12302   00247A  0E23               	movlw	35
 12303   00247C  6E17               	movwf	(___flmul@a+1)^0,c
 12304   00247E  0EF6               	movlw	246
 12305   002480  6E18               	movwf	(___flmul@a+2)^0,c
 12306   002482  0EB8               	movlw	184
 12307   002484  6E19               	movwf	(___flmul@a+3)^0,c
 12308   002486  C1A0  F012         	movff	powf@p_h,___flmul@b
 12309   00248A  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
 12310   00248E  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
 12311   002492  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
 12312   002496  ECC8  F02D         	call	___flmul	;wreg free
 12313   00249A  C012  F002         	movff	?___flmul,___fladd@b
 12314   00249E  C013  F003         	movff	?___flmul+1,___fladd@b+1
 12315   0024A2  C014  F004         	movff	?___flmul+2,___fladd@b+2
 12316   0024A6  C015  F005         	movff	?___flmul+3,___fladd@b+3
 12317   0024AA  EC68  F02B         	call	___fladd	;wreg free
 12318   0024AE  C002  F15C         	movff	?___fladd,_powf$3181
 12319   0024B2  C003  F15D         	movff	?___fladd+1,_powf$3181+1
 12320   0024B6  C004  F15E         	movff	?___fladd+2,_powf$3181+2
 12321   0024BA  C005  F15F         	movff	?___fladd+3,_powf$3181+3
 12322   0024BE  C15C  F002         	movff	_powf$3181,___fladd@b
 12323   0024C2  C15D  F003         	movff	_powf$3181+1,___fladd@b+1
 12324   0024C6  C15E  F004         	movff	_powf$3181+2,___fladd@b+2
 12325   0024CA  C15F  F005         	movff	_powf$3181+3,___fladd@b+3
 12326   0024CE  0101               	movlb	1	; () banked
 12327   0024D0  51A4               	movf	powf@k& (0+255),w,b
 12328   0024D2  0D04               	mullw	4
 12329   0024D4  50F3               	movf	243,w,c
 12330   0024D6  0F01               	addlw	low _dp_l
 12331   0024D8  0100               	movlb	0	; () banked
 12332   0024DA  6F68               	movwf	??_powf& (0+255),b
 12333   0024DC  C068  FFF6         	movff	??_powf,tblptrl
 12334   0024E0                     	if	1	;There is more than 1 active tblptr byte
 12335   0024E0  0E0E               	movlw	high __smallconst
 12336   0024E2  6EF7               	movwf	tblptrh,c
 12337   0024E4                     	endif
 12338   0024E4                     	if	0	;tblptru may be non-zero
 12339   0024E4                     	endif
 12340   0024E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12341   0024E4  0E00               	movlw	low (__smallconst shr (0+16))
 12342   0024E6  6EF8               	movwf	tblptru,c
 12343   0024E8                     	endif
 12344   0024E8  0009               	tblrd		*+
 12345   0024EA  CFF5 F006          	movff	tablat,___fladd@a
 12346   0024EE  0009               	tblrd		*+
 12347   0024F0  CFF5 F007          	movff	tablat,___fladd@a+1
 12348   0024F4  0009               	tblrd		*+
 12349   0024F6  CFF5 F008          	movff	tablat,___fladd@a+2
 12350   0024FA  000A               	tblrd		*-
 12351   0024FC  CFF5 F009          	movff	tablat,___fladd@a+3
 12352   002500  EC68  F02B         	call	___fladd	;wreg free
 12353   002504  C002  F124         	movff	?___fladd,powf@z_l
 12354   002508  C003  F125         	movff	?___fladd+1,powf@z_l+1
 12355   00250C  C004  F126         	movff	?___fladd+2,powf@z_l+2
 12356   002510  C005  F127         	movff	?___fladd+3,powf@z_l+3
 12357   002514  C188  F002         	movff	powf@n,___xxtofl@val
 12358   002518  C189  F003         	movff	powf@n+1,___xxtofl@val+1
 12359   00251C  C18A  F004         	movff	powf@n+2,___xxtofl@val+2
 12360   002520  C18B  F005         	movff	powf@n+3,___xxtofl@val+3
 12361   002524  0E01               	movlw	1
 12362   002526  ECB0  F036         	call	___xxtofl
 12363   00252A  C002  F1B0         	movff	?___xxtofl,powf@t
 12364   00252E  C003  F1B1         	movff	?___xxtofl+1,powf@t+1
 12365   002532  C004  F1B2         	movff	?___xxtofl+2,powf@t+2
 12366   002536  C005  F1B3         	movff	?___xxtofl+3,powf@t+3
 12367   00253A  C124  F006         	movff	powf@z_l,___fladd@a
 12368   00253E  C125  F007         	movff	powf@z_l+1,___fladd@a+1
 12369   002542  C126  F008         	movff	powf@z_l+2,___fladd@a+2
 12370   002546  C127  F009         	movff	powf@z_l+3,___fladd@a+3
 12371   00254A  C120  F002         	movff	powf@z_h,___fladd@b
 12372   00254E  C121  F003         	movff	powf@z_h+1,___fladd@b+1
 12373   002552  C122  F004         	movff	powf@z_h+2,___fladd@b+2
 12374   002556  C123  F005         	movff	powf@z_h+3,___fladd@b+3
 12375   00255A  EC68  F02B         	call	___fladd	;wreg free
 12376   00255E  C002  F15C         	movff	?___fladd,_powf$3181
 12377   002562  C003  F15D         	movff	?___fladd+1,_powf$3181+1
 12378   002566  C004  F15E         	movff	?___fladd+2,_powf$3181+2
 12379   00256A  C005  F15F         	movff	?___fladd+3,_powf$3181+3
 12380   00256E  0101               	movlb	1	; () banked
 12381   002570  51A4               	movf	powf@k& (0+255),w,b
 12382   002572  0D04               	mullw	4
 12383   002574  50F3               	movf	243,w,c
 12384   002576  0F09               	addlw	low _dp_h
 12385   002578  0100               	movlb	0	; () banked
 12386   00257A  6F68               	movwf	??_powf& (0+255),b
 12387   00257C  C068  FFF6         	movff	??_powf,tblptrl
 12388   002580                     	if	1	;There is more than 1 active tblptr byte
 12389   002580  0E0E               	movlw	high __smallconst
 12390   002582  6EF7               	movwf	tblptrh,c
 12391   002584                     	endif
 12392   002584                     	if	0	;tblptru may be non-zero
 12393   002584                     	endif
 12394   002584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12395   002584  0E00               	movlw	low (__smallconst shr (0+16))
 12396   002586  6EF8               	movwf	tblptru,c
 12397   002588                     	endif
 12398   002588  0009               	tblrd		*+
 12399   00258A  CFF5 F006          	movff	tablat,___fladd@a
 12400   00258E  0009               	tblrd		*+
 12401   002590  CFF5 F007          	movff	tablat,___fladd@a+1
 12402   002594  0009               	tblrd		*+
 12403   002596  CFF5 F008          	movff	tablat,___fladd@a+2
 12404   00259A  000A               	tblrd		*-
 12405   00259C  CFF5 F009          	movff	tablat,___fladd@a+3
 12406   0025A0  C15C  F002         	movff	_powf$3181,___fladd@b
 12407   0025A4  C15D  F003         	movff	_powf$3181+1,___fladd@b+1
 12408   0025A8  C15E  F004         	movff	_powf$3181+2,___fladd@b+2
 12409   0025AC  C15F  F005         	movff	_powf$3181+3,___fladd@b+3
 12410   0025B0  EC68  F02B         	call	___fladd	;wreg free
 12411   0025B4  C002  F108         	movff	?___fladd,_powf$3184
 12412   0025B8  C003  F109         	movff	?___fladd+1,_powf$3184+1
 12413   0025BC  C004  F10A         	movff	?___fladd+2,_powf$3184+2
 12414   0025C0  C005  F10B         	movff	?___fladd+3,_powf$3184+3
 12415   0025C4  C108  F002         	movff	_powf$3184,___fladd@b
 12416   0025C8  C109  F003         	movff	_powf$3184+1,___fladd@b+1
 12417   0025CC  C10A  F004         	movff	_powf$3184+2,___fladd@b+2
 12418   0025D0  C10B  F005         	movff	_powf$3184+3,___fladd@b+3
 12419   0025D4  C1B0  F006         	movff	powf@t,___fladd@a
 12420   0025D8  C1B1  F007         	movff	powf@t+1,___fladd@a+1
 12421   0025DC  C1B2  F008         	movff	powf@t+2,___fladd@a+2
 12422   0025E0  C1B3  F009         	movff	powf@t+3,___fladd@a+3
 12423   0025E4  EC68  F02B         	call	___fladd	;wreg free
 12424   0025E8  C002  F18C         	movff	?___fladd,powf@t1
 12425   0025EC  C003  F18D         	movff	?___fladd+1,powf@t1+1
 12426   0025F0  C004  F18E         	movff	?___fladd+2,powf@t1+2
 12427   0025F4  C005  F18F         	movff	?___fladd+3,powf@t1+3
 12428   0025F8  C18C  F198         	movff	powf@t1,powf@is
 12429   0025FC  C18D  F199         	movff	powf@t1+1,powf@is+1
 12430   002600  C18E  F19A         	movff	powf@t1+2,powf@is+2
 12431   002604  C18F  F19B         	movff	powf@t1+3,powf@is+3
 12432   002608  0E00               	movlw	0
 12433   00260A  0101               	movlb	1	; () banked
 12434   00260C  1598               	andwf	powf@is& (0+255),w,b
 12435   00260E  6F8C               	movwf	powf@t1& (0+255),b
 12436   002610  0EF0               	movlw	240
 12437   002612  1599               	andwf	(powf@is+1)& (0+255),w,b
 12438   002614  6F8D               	movwf	(powf@t1+1)& (0+255),b
 12439   002616  0EFF               	movlw	255
 12440   002618  159A               	andwf	(powf@is+2)& (0+255),w,b
 12441   00261A  6F8E               	movwf	(powf@t1+2)& (0+255),b
 12442   00261C  0EFF               	movlw	255
 12443   00261E  159B               	andwf	(powf@is+3)& (0+255),w,b
 12444   002620  6F8F               	movwf	(powf@t1+3)& (0+255),b
 12445   002622                     
 12446                           ; BSR set to: 1
 12447   002622  C1B0  F048         	movff	powf@t,___flsub@a
 12448   002626  C1B1  F049         	movff	powf@t+1,___flsub@a+1
 12449   00262A  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
 12450   00262E  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
 12451   002632  C18C  F044         	movff	powf@t1,___flsub@b
 12452   002636  C18D  F045         	movff	powf@t1+1,___flsub@b+1
 12453   00263A  C18E  F046         	movff	powf@t1+2,___flsub@b+2
 12454   00263E  C18F  F047         	movff	powf@t1+3,___flsub@b+3
 12455   002642  ECD7  F040         	call	___flsub	;wreg free
 12456   002646  C044  F19C         	movff	?___flsub,_powf$3177
 12457   00264A  C045  F19D         	movff	?___flsub+1,_powf$3177+1
 12458   00264E  C046  F19E         	movff	?___flsub+2,_powf$3177+2
 12459   002652  C047  F19F         	movff	?___flsub+3,_powf$3177+3
 12460   002656  0101               	movlb	1	; () banked
 12461   002658  51A4               	movf	powf@k& (0+255),w,b
 12462   00265A  0D04               	mullw	4
 12463   00265C  50F3               	movf	243,w,c
 12464   00265E  0F09               	addlw	low _dp_h
 12465   002660  0100               	movlb	0	; () banked
 12466   002662  6F68               	movwf	??_powf& (0+255),b
 12467   002664  C068  FFF6         	movff	??_powf,tblptrl
 12468   002668                     	if	1	;There is more than 1 active tblptr byte
 12469   002668  0E0E               	movlw	high __smallconst
 12470   00266A  6EF7               	movwf	tblptrh,c
 12471   00266C                     	endif
 12472   00266C                     	if	0	;tblptru may be non-zero
 12473   00266C                     	endif
 12474   00266C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12475   00266C  0E00               	movlw	low (__smallconst shr (0+16))
 12476   00266E  6EF8               	movwf	tblptru,c
 12477   002670                     	endif
 12478   002670  0009               	tblrd		*+
 12479   002672  CFF5 F048          	movff	tablat,___flsub@a
 12480   002676  0009               	tblrd		*+
 12481   002678  CFF5 F049          	movff	tablat,___flsub@a+1
 12482   00267C  0009               	tblrd		*+
 12483   00267E  CFF5 F04A          	movff	tablat,___flsub@a+2
 12484   002682  000A               	tblrd		*-
 12485   002684  CFF5 F04B          	movff	tablat,___flsub@a+3
 12486   002688  C19C  F044         	movff	_powf$3177,___flsub@b
 12487   00268C  C19D  F045         	movff	_powf$3177+1,___flsub@b+1
 12488   002690  C19E  F046         	movff	_powf$3177+2,___flsub@b+2
 12489   002694  C19F  F047         	movff	_powf$3177+3,___flsub@b+3
 12490   002698  ECD7  F040         	call	___flsub	;wreg free
 12491   00269C  C044  F140         	movff	?___flsub,_powf$3183
 12492   0026A0  C045  F141         	movff	?___flsub+1,_powf$3183+1
 12493   0026A4  C046  F142         	movff	?___flsub+2,_powf$3183+2
 12494   0026A8  C047  F143         	movff	?___flsub+3,_powf$3183+3
 12495   0026AC  C120  F048         	movff	powf@z_h,___flsub@a
 12496   0026B0  C121  F049         	movff	powf@z_h+1,___flsub@a+1
 12497   0026B4  C122  F04A         	movff	powf@z_h+2,___flsub@a+2
 12498   0026B8  C123  F04B         	movff	powf@z_h+3,___flsub@a+3
 12499   0026BC  C140  F044         	movff	_powf$3183,___flsub@b
 12500   0026C0  C141  F045         	movff	_powf$3183+1,___flsub@b+1
 12501   0026C4  C142  F046         	movff	_powf$3183+2,___flsub@b+2
 12502   0026C8  C143  F047         	movff	_powf$3183+3,___flsub@b+3
 12503   0026CC  ECD7  F040         	call	___flsub	;wreg free
 12504   0026D0  C044  F10C         	movff	?___flsub,_powf$3185
 12505   0026D4  C045  F10D         	movff	?___flsub+1,_powf$3185+1
 12506   0026D8  C046  F10E         	movff	?___flsub+2,_powf$3185+2
 12507   0026DC  C047  F10F         	movff	?___flsub+3,_powf$3185+3
 12508   0026E0  C124  F044         	movff	powf@z_l,___flsub@b
 12509   0026E4  C125  F045         	movff	powf@z_l+1,___flsub@b+1
 12510   0026E8  C126  F046         	movff	powf@z_l+2,___flsub@b+2
 12511   0026EC  C127  F047         	movff	powf@z_l+3,___flsub@b+3
 12512   0026F0  C10C  F048         	movff	_powf$3185,___flsub@a
 12513   0026F4  C10D  F049         	movff	_powf$3185+1,___flsub@a+1
 12514   0026F8  C10E  F04A         	movff	_powf$3185+2,___flsub@a+2
 12515   0026FC  C10F  F04B         	movff	_powf$3185+3,___flsub@a+3
 12516   002700  ECD7  F040         	call	___flsub	;wreg free
 12517   002704  C044  F11C         	movff	?___flsub,powf@t2
 12518   002708  C045  F11D         	movff	?___flsub+1,powf@t2+1
 12519   00270C  C046  F11E         	movff	?___flsub+2,powf@t2+2
 12520   002710  C047  F11F         	movff	?___flsub+3,powf@t2+3
 12521   002714                     l8044:
 12522   002714  C064  F198         	movff	powf@y,powf@is
 12523   002718  C065  F199         	movff	powf@y+1,powf@is+1
 12524   00271C  C066  F19A         	movff	powf@y+2,powf@is+2
 12525   002720  C067  F19B         	movff	powf@y+3,powf@is+3
 12526   002724  0E00               	movlw	0
 12527   002726  0101               	movlb	1	; () banked
 12528   002728  1598               	andwf	powf@is& (0+255),w,b
 12529   00272A  6F2C               	movwf	powf@y1& (0+255),b
 12530   00272C  0EF0               	movlw	240
 12531   00272E  1599               	andwf	(powf@is+1)& (0+255),w,b
 12532   002730  6F2D               	movwf	(powf@y1+1)& (0+255),b
 12533   002732  0EFF               	movlw	255
 12534   002734  159A               	andwf	(powf@is+2)& (0+255),w,b
 12535   002736  6F2E               	movwf	(powf@y1+2)& (0+255),b
 12536   002738  0EFF               	movlw	255
 12537   00273A  159B               	andwf	(powf@is+3)& (0+255),w,b
 12538   00273C  6F2F               	movwf	(powf@y1+3)& (0+255),b
 12539   00273E                     
 12540                           ; BSR set to: 1
 12541   00273E  C18C  F016         	movff	powf@t1,___flmul@a
 12542   002742  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 12543   002746  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 12544   00274A  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 12545   00274E  C12C  F048         	movff	powf@y1,___flsub@a
 12546   002752  C12D  F049         	movff	powf@y1+1,___flsub@a+1
 12547   002756  C12E  F04A         	movff	powf@y1+2,___flsub@a+2
 12548   00275A  C12F  F04B         	movff	powf@y1+3,___flsub@a+3
 12549   00275E  C064  F044         	movff	powf@y,___flsub@b
 12550   002762  C065  F045         	movff	powf@y+1,___flsub@b+1
 12551   002766  C066  F046         	movff	powf@y+2,___flsub@b+2
 12552   00276A  C067  F047         	movff	powf@y+3,___flsub@b+3
 12553   00276E  ECD7  F040         	call	___flsub	;wreg free
 12554   002772  C044  F012         	movff	?___flsub,___flmul@b
 12555   002776  C045  F013         	movff	?___flsub+1,___flmul@b+1
 12556   00277A  C046  F014         	movff	?___flsub+2,___flmul@b+2
 12557   00277E  C047  F015         	movff	?___flsub+3,___flmul@b+3
 12558   002782  ECC8  F02D         	call	___flmul	;wreg free
 12559   002786  C012  F110         	movff	?___flmul,_powf$3186
 12560   00278A  C013  F111         	movff	?___flmul+1,_powf$3186+1
 12561   00278E  C014  F112         	movff	?___flmul+2,_powf$3186+2
 12562   002792  C015  F113         	movff	?___flmul+3,_powf$3186+3
 12563   002796  C110  F002         	movff	_powf$3186,___fladd@b
 12564   00279A  C111  F003         	movff	_powf$3186+1,___fladd@b+1
 12565   00279E  C112  F004         	movff	_powf$3186+2,___fladd@b+2
 12566   0027A2  C113  F005         	movff	_powf$3186+3,___fladd@b+3
 12567   0027A6  C11C  F016         	movff	powf@t2,___flmul@a
 12568   0027AA  C11D  F017         	movff	powf@t2+1,___flmul@a+1
 12569   0027AE  C11E  F018         	movff	powf@t2+2,___flmul@a+2
 12570   0027B2  C11F  F019         	movff	powf@t2+3,___flmul@a+3
 12571   0027B6  C064  F012         	movff	powf@y,___flmul@b
 12572   0027BA  C065  F013         	movff	powf@y+1,___flmul@b+1
 12573   0027BE  C066  F014         	movff	powf@y+2,___flmul@b+2
 12574   0027C2  C067  F015         	movff	powf@y+3,___flmul@b+3
 12575   0027C6  ECC8  F02D         	call	___flmul	;wreg free
 12576   0027CA  C012  F006         	movff	?___flmul,___fladd@a
 12577   0027CE  C013  F007         	movff	?___flmul+1,___fladd@a+1
 12578   0027D2  C014  F008         	movff	?___flmul+2,___fladd@a+2
 12579   0027D6  C015  F009         	movff	?___flmul+3,___fladd@a+3
 12580   0027DA  EC68  F02B         	call	___fladd	;wreg free
 12581   0027DE  C002  F16C         	movff	?___fladd,powf@p_l
 12582   0027E2  C003  F16D         	movff	?___fladd+1,powf@p_l+1
 12583   0027E6  C004  F16E         	movff	?___fladd+2,powf@p_l+2
 12584   0027EA  C005  F16F         	movff	?___fladd+3,powf@p_l+3
 12585   0027EE  C12C  F012         	movff	powf@y1,___flmul@b
 12586   0027F2  C12D  F013         	movff	powf@y1+1,___flmul@b+1
 12587   0027F6  C12E  F014         	movff	powf@y1+2,___flmul@b+2
 12588   0027FA  C12F  F015         	movff	powf@y1+3,___flmul@b+3
 12589   0027FE  C18C  F016         	movff	powf@t1,___flmul@a
 12590   002802  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 12591   002806  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 12592   00280A  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 12593   00280E  ECC8  F02D         	call	___flmul	;wreg free
 12594   002812  C012  F1A0         	movff	?___flmul,powf@p_h
 12595   002816  C013  F1A1         	movff	?___flmul+1,powf@p_h+1
 12596   00281A  C014  F1A2         	movff	?___flmul+2,powf@p_h+2
 12597   00281E  C015  F1A3         	movff	?___flmul+3,powf@p_h+3
 12598   002822  C1A0  F002         	movff	powf@p_h,___fladd@b
 12599   002826  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
 12600   00282A  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
 12601   00282E  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
 12602   002832  C16C  F006         	movff	powf@p_l,___fladd@a
 12603   002836  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
 12604   00283A  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
 12605   00283E  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
 12606   002842  EC68  F02B         	call	___fladd	;wreg free
 12607   002846  C002  F1B4         	movff	?___fladd,powf@z
 12608   00284A  C003  F1B5         	movff	?___fladd+1,powf@z+1
 12609   00284E  C004  F1B6         	movff	?___fladd+2,powf@z+2
 12610   002852  C005  F1B7         	movff	?___fladd+3,powf@z+3
 12611   002856  C1B4  F1A8         	movff	powf@z,powf@j
 12612   00285A  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 12613   00285E  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 12614   002862  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 12615   002866  0101               	movlb	1	; () banked
 12616   002868  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 12617   00286A  EF43  F014         	goto	u8881
 12618   00286E  05A8               	decf	powf@j& (0+255),w,b
 12619   002870  0E00               	movlw	0
 12620   002872  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 12621   002874  0E00               	movlw	0
 12622   002876  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 12623   002878  0E43               	movlw	67
 12624   00287A  59AB               	subwfb	(powf@j+3)& (0+255),w,b
 12625   00287C  A0D8               	btfss	status,0,c
 12626   00287E  EF43  F014         	goto	u8881
 12627   002882  EF45  F014         	goto	u8880
 12628   002886                     u8881:
 12629   002886  EF47  F014         	goto	l8066
 12630   00288A                     u8880:
 12631   00288A  EFEB  F00A         	goto	l7866
 12632   00288E                     l8066:
 12633                           
 12634                           ; BSR set to: 1
 12635   00288E  0E43               	movlw	67
 12636   002890  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 12637   002892  11A8               	iorwf	powf@j& (0+255),w,b
 12638   002894  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 12639   002896  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 12640   002898  A4D8               	btfss	status,2,c
 12641   00289A  EF51  F014         	goto	u8891
 12642   00289E  EF53  F014         	goto	u8890
 12643   0028A2                     u8891:
 12644   0028A2  EF92  F014         	goto	l8076
 12645   0028A6                     u8890:
 12646   0028A6                     
 12647                           ; BSR set to: 1
 12648   0028A6  C1A0  F048         	movff	powf@p_h,___flsub@a
 12649   0028AA  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 12650   0028AE  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 12651   0028B2  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 12652   0028B6  C1B4  F044         	movff	powf@z,___flsub@b
 12653   0028BA  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 12654   0028BE  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 12655   0028C2  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 12656   0028C6  ECD7  F040         	call	___flsub	;wreg free
 12657   0028CA  C044  F04C         	movff	?___flsub,___flge@ff1
 12658   0028CE  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
 12659   0028D2  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
 12660   0028D6  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
 12661   0028DA  0E3C               	movlw	60
 12662   0028DC  6E06               	movwf	___fladd@a^0,c
 12663   0028DE  0EAA               	movlw	170
 12664   0028E0  6E07               	movwf	(___fladd@a+1)^0,c
 12665   0028E2  0E38               	movlw	56
 12666   0028E4  6E08               	movwf	(___fladd@a+2)^0,c
 12667   0028E6  0E33               	movlw	51
 12668   0028E8  6E09               	movwf	(___fladd@a+3)^0,c
 12669   0028EA  C16C  F002         	movff	powf@p_l,___fladd@b
 12670   0028EE  C16D  F003         	movff	powf@p_l+1,___fladd@b+1
 12671   0028F2  C16E  F004         	movff	powf@p_l+2,___fladd@b+2
 12672   0028F6  C16F  F005         	movff	powf@p_l+3,___fladd@b+3
 12673   0028FA  EC68  F02B         	call	___fladd	;wreg free
 12674   0028FE  C002  F050         	movff	?___fladd,___flge@ff2
 12675   002902  C003  F051         	movff	?___fladd+1,___flge@ff2+1
 12676   002906  C004  F052         	movff	?___fladd+2,___flge@ff2+2
 12677   00290A  C005  F053         	movff	?___fladd+3,___flge@ff2+3
 12678   00290E  EC46  F039         	call	___flge	;wreg free
 12679   002912  B0D8               	btfsc	status,0,c
 12680   002914  EF8E  F014         	goto	u8901
 12681   002918  EF90  F014         	goto	u8900
 12682   00291C                     u8901:
 12683   00291C  EF05  F015         	goto	l8092
 12684   002920                     u8900:
 12685   002920  EFEB  F00A         	goto	l7866
 12686   002924                     l8076:
 12687                           
 12688                           ; BSR set to: 1
 12689   002924  0EFF               	movlw	255
 12690   002926  15A8               	andwf	powf@j& (0+255),w,b
 12691   002928  0100               	movlb	0	; () banked
 12692   00292A  6F68               	movwf	??_powf& (0+255),b
 12693   00292C  0EFF               	movlw	255
 12694   00292E  0101               	movlb	1	; () banked
 12695   002930  15A9               	andwf	(powf@j+1)& (0+255),w,b
 12696   002932  0100               	movlb	0	; () banked
 12697   002934  6F69               	movwf	(??_powf+1)& (0+255),b
 12698   002936  0EFF               	movlw	255
 12699   002938  0101               	movlb	1	; () banked
 12700   00293A  15AA               	andwf	(powf@j+2)& (0+255),w,b
 12701   00293C  0100               	movlb	0	; () banked
 12702   00293E  6F6A               	movwf	(??_powf+2)& (0+255),b
 12703   002940  0E7F               	movlw	127
 12704   002942  0101               	movlb	1	; () banked
 12705   002944  15AB               	andwf	(powf@j+3)& (0+255),w,b
 12706   002946  0100               	movlb	0	; () banked
 12707   002948  6F6B               	movwf	(??_powf+3)& (0+255),b
 12708   00294A  BF6B               	btfsc	(??_powf+3)& (0+255),7,b
 12709   00294C  EFB4  F014         	goto	u8911
 12710   002950  0568               	decf	??_powf& (0+255),w,b
 12711   002952  0E00               	movlw	0
 12712   002954  5969               	subwfb	(??_powf+1)& (0+255),w,b
 12713   002956  0E16               	movlw	22
 12714   002958  596A               	subwfb	(??_powf+2)& (0+255),w,b
 12715   00295A  0E43               	movlw	67
 12716   00295C  596B               	subwfb	(??_powf+3)& (0+255),w,b
 12717   00295E  A0D8               	btfss	status,0,c
 12718   002960  EFB4  F014         	goto	u8911
 12719   002964  EFB6  F014         	goto	u8910
 12720   002968                     u8911:
 12721   002968  EFC0  F014         	goto	l8084
 12722   00296C                     u8910:
 12723   00296C                     
 12724                           ; BSR set to: 0
 12725   00296C  0E00               	movlw	0
 12726   00296E  6F60               	movwf	?_powf& (0+255),b
 12727   002970  0E00               	movlw	0
 12728   002972  6F61               	movwf	(?_powf+1)& (0+255),b
 12729   002974  0E00               	movlw	0
 12730   002976  6F62               	movwf	(?_powf+2)& (0+255),b
 12731   002978  0E00               	movlw	0
 12732   00297A  6F63               	movwf	(?_powf+3)& (0+255),b
 12733   00297C  EF91  F019         	goto	l1469
 12734   002980                     l8084:
 12735                           
 12736                           ; BSR set to: 0
 12737   002980  0E16               	movlw	22
 12738   002982  0101               	movlb	1	; () banked
 12739   002984  19AA               	xorwf	(powf@j+2)& (0+255),w,b
 12740   002986  E109               	bnz	u8921
 12741   002988  0EC3               	movlw	195
 12742   00298A  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 12743   00298C  11A8               	iorwf	powf@j& (0+255),w,b
 12744   00298E  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 12745   002990  A4D8               	btfss	status,2,c
 12746   002992  EFCD  F014         	goto	u8921
 12747   002996  EFCF  F014         	goto	u8920
 12748   00299A                     u8921:
 12749   00299A  EF05  F015         	goto	l8092
 12750   00299E                     u8920:
 12751   00299E                     
 12752                           ; BSR set to: 1
 12753   00299E  C1A0  F048         	movff	powf@p_h,___flsub@a
 12754   0029A2  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 12755   0029A6  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 12756   0029AA  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 12757   0029AE  C1B4  F044         	movff	powf@z,___flsub@b
 12758   0029B2  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 12759   0029B6  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 12760   0029BA  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 12761   0029BE  ECD7  F040         	call	___flsub	;wreg free
 12762   0029C2  C044  F04C         	movff	?___flsub,___flge@ff1
 12763   0029C6  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
 12764   0029CA  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
 12765   0029CE  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
 12766   0029D2  C16C  F050         	movff	powf@p_l,___flge@ff2
 12767   0029D6  C16D  F051         	movff	powf@p_l+1,___flge@ff2+1
 12768   0029DA  C16E  F052         	movff	powf@p_l+2,___flge@ff2+2
 12769   0029DE  C16F  F053         	movff	powf@p_l+3,___flge@ff2+3
 12770   0029E2  EC46  F039         	call	___flge	;wreg free
 12771   0029E6  A0D8               	btfss	status,0,c
 12772   0029E8  EFF8  F014         	goto	u8931
 12773   0029EC  EFFA  F014         	goto	u8930
 12774   0029F0                     u8931:
 12775   0029F0  EF05  F015         	goto	l8092
 12776   0029F4                     u8930:
 12777   0029F4  0E00               	movlw	0
 12778   0029F6  0100               	movlb	0	; () banked
 12779   0029F8  6F60               	movwf	?_powf& (0+255),b
 12780   0029FA  0E00               	movlw	0
 12781   0029FC  6F61               	movwf	(?_powf+1)& (0+255),b
 12782   0029FE  0E00               	movlw	0
 12783   002A00  6F62               	movwf	(?_powf+2)& (0+255),b
 12784   002A02  0E00               	movlw	0
 12785   002A04  6F63               	movwf	(?_powf+3)& (0+255),b
 12786   002A06  EF91  F019         	goto	l1469
 12787   002A0A                     l8092:
 12788   002A0A  0EFF               	movlw	255
 12789   002A0C  0101               	movlb	1	; () banked
 12790   002A0E  15A8               	andwf	powf@j& (0+255),w,b
 12791   002A10  6F28               	movwf	powf@i& (0+255),b
 12792   002A12  0EFF               	movlw	255
 12793   002A14  15A9               	andwf	(powf@j+1)& (0+255),w,b
 12794   002A16  6F29               	movwf	(powf@i+1)& (0+255),b
 12795   002A18  0EFF               	movlw	255
 12796   002A1A  15AA               	andwf	(powf@j+2)& (0+255),w,b
 12797   002A1C  6F2A               	movwf	(powf@i+2)& (0+255),b
 12798   002A1E  0E7F               	movlw	127
 12799   002A20  15AB               	andwf	(powf@j+3)& (0+255),w,b
 12800   002A22  6F2B               	movwf	(powf@i+3)& (0+255),b
 12801   002A24  0E17               	movlw	23
 12802   002A26  0100               	movlb	0	; () banked
 12803   002A28  6F68               	movwf	??_powf& (0+255),b
 12804   002A2A  C128  F069         	movff	powf@i,??_powf+1
 12805   002A2E  C129  F06A         	movff	powf@i+1,??_powf+2
 12806   002A32  C12A  F06B         	movff	powf@i+2,??_powf+3
 12807   002A36  C12B  F06C         	movff	powf@i+3,??_powf+4
 12808   002A3A                     u8945:
 12809   002A3A  6768               	tstfsz	??_powf& (0+255),b
 12810   002A3C  EF22  F015         	goto	u8946
 12811   002A40  EF2A  F015         	goto	u8947
 12812   002A44                     u8946:
 12813   002A44  356C               	rlcf	(??_powf+4)& (0+255),w,b
 12814   002A46  336C               	rrcf	(??_powf+4)& (0+255),f,b
 12815   002A48  336B               	rrcf	(??_powf+3)& (0+255),f,b
 12816   002A4A  336A               	rrcf	(??_powf+2)& (0+255),f,b
 12817   002A4C  3369               	rrcf	(??_powf+1)& (0+255),f,b
 12818   002A4E  2F68               	decfsz	??_powf& (0+255),f,b
 12819   002A50  EF1D  F015         	goto	u8945
 12820   002A54                     u8947:
 12821   002A54  0E81               	movlw	129
 12822   002A56  0100               	movlb	0	; () banked
 12823   002A58  2569               	addwf	(??_powf+1)& (0+255),w,b
 12824   002A5A  0101               	movlb	1	; () banked
 12825   002A5C  6FA4               	movwf	powf@k& (0+255),b
 12826   002A5E  0EFF               	movlw	255
 12827   002A60  0100               	movlb	0	; () banked
 12828   002A62  216A               	addwfc	(??_powf+2)& (0+255),w,b
 12829   002A64  0101               	movlb	1	; () banked
 12830   002A66  6FA5               	movwf	(powf@k+1)& (0+255),b
 12831   002A68  0EFF               	movlw	255
 12832   002A6A  0100               	movlb	0	; () banked
 12833   002A6C  216B               	addwfc	(??_powf+3)& (0+255),w,b
 12834   002A6E  0101               	movlb	1	; () banked
 12835   002A70  6FA6               	movwf	(powf@k+2)& (0+255),b
 12836   002A72  0EFF               	movlw	255
 12837   002A74  0100               	movlb	0	; () banked
 12838   002A76  216C               	addwfc	(??_powf+4)& (0+255),w,b
 12839   002A78  0101               	movlb	1	; () banked
 12840   002A7A  6FA7               	movwf	(powf@k+3)& (0+255),b
 12841   002A7C                     
 12842                           ; BSR set to: 1
 12843   002A7C  0E00               	movlw	0
 12844   002A7E  6F88               	movwf	powf@n& (0+255),b
 12845   002A80  0E00               	movlw	0
 12846   002A82  6F89               	movwf	(powf@n+1)& (0+255),b
 12847   002A84  0E00               	movlw	0
 12848   002A86  6F8A               	movwf	(powf@n+2)& (0+255),b
 12849   002A88  0E00               	movlw	0
 12850   002A8A  6F8B               	movwf	(powf@n+3)& (0+255),b
 12851   002A8C                     
 12852                           ; BSR set to: 1
 12853   002A8C  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
 12854   002A8E  EF55  F015         	goto	u8951
 12855   002A92  0528               	decf	powf@i& (0+255),w,b
 12856   002A94  0E00               	movlw	0
 12857   002A96  5929               	subwfb	(powf@i+1)& (0+255),w,b
 12858   002A98  0E00               	movlw	0
 12859   002A9A  592A               	subwfb	(powf@i+2)& (0+255),w,b
 12860   002A9C  0E3F               	movlw	63
 12861   002A9E  592B               	subwfb	(powf@i+3)& (0+255),w,b
 12862   002AA0  A0D8               	btfss	status,0,c
 12863   002AA2  EF55  F015         	goto	u8951
 12864   002AA6  EF57  F015         	goto	u8950
 12865   002AAA                     u8951:
 12866   002AAA  EF53  F016         	goto	l8104
 12867   002AAE                     u8950:
 12868   002AAE                     
 12869                           ; BSR set to: 1
 12870   002AAE  C1A4  F068         	movff	powf@k,??_powf
 12871   002AB2  0E01               	movlw	1
 12872   002AB4  0100               	movlb	0	; () banked
 12873   002AB6  2768               	addwf	??_powf& (0+255),f,b
 12874   002AB8  0E00               	movlw	0
 12875   002ABA  6F69               	movwf	(??_powf+1)& (0+255),b
 12876   002ABC  0E00               	movlw	0
 12877   002ABE  6F6A               	movwf	(??_powf+2)& (0+255),b
 12878   002AC0  0E80               	movlw	128
 12879   002AC2  6F6B               	movwf	(??_powf+3)& (0+255),b
 12880   002AC4  0E00               	movlw	0
 12881   002AC6  6F6C               	movwf	(??_powf+4)& (0+255),b
 12882   002AC8                     u8965:
 12883   002AC8  6768               	tstfsz	??_powf& (0+255),b
 12884   002ACA  EF69  F015         	goto	u8966
 12885   002ACE  EF71  F015         	goto	u8967
 12886   002AD2                     u8966:
 12887   002AD2  356C               	rlcf	(??_powf+4)& (0+255),w,b
 12888   002AD4  336C               	rrcf	(??_powf+4)& (0+255),f,b
 12889   002AD6  336B               	rrcf	(??_powf+3)& (0+255),f,b
 12890   002AD8  336A               	rrcf	(??_powf+2)& (0+255),f,b
 12891   002ADA  3369               	rrcf	(??_powf+1)& (0+255),f,b
 12892   002ADC  2F68               	decfsz	??_powf& (0+255),f,b
 12893   002ADE  EF64  F015         	goto	u8965
 12894   002AE2                     u8967:
 12895   002AE2  0101               	movlb	1	; () banked
 12896   002AE4  51A8               	movf	powf@j& (0+255),w,b
 12897   002AE6  0100               	movlb	0	; () banked
 12898   002AE8  2569               	addwf	(??_powf+1)& (0+255),w,b
 12899   002AEA  0101               	movlb	1	; () banked
 12900   002AEC  6F88               	movwf	powf@n& (0+255),b
 12901   002AEE  51A9               	movf	(powf@j+1)& (0+255),w,b
 12902   002AF0  0100               	movlb	0	; () banked
 12903   002AF2  216A               	addwfc	(??_powf+2)& (0+255),w,b
 12904   002AF4  0101               	movlb	1	; () banked
 12905   002AF6  6F89               	movwf	(powf@n+1)& (0+255),b
 12906   002AF8  51AA               	movf	(powf@j+2)& (0+255),w,b
 12907   002AFA  0100               	movlb	0	; () banked
 12908   002AFC  216B               	addwfc	(??_powf+3)& (0+255),w,b
 12909   002AFE  0101               	movlb	1	; () banked
 12910   002B00  6F8A               	movwf	(powf@n+2)& (0+255),b
 12911   002B02  51AB               	movf	(powf@j+3)& (0+255),w,b
 12912   002B04  0100               	movlb	0	; () banked
 12913   002B06  216C               	addwfc	(??_powf+4)& (0+255),w,b
 12914   002B08  0101               	movlb	1	; () banked
 12915   002B0A  6F8B               	movwf	(powf@n+3)& (0+255),b
 12916   002B0C  0E81               	movlw	129
 12917   002B0E  0100               	movlb	0	; () banked
 12918   002B10  6F68               	movwf	??_powf& (0+255),b
 12919   002B12  0EFF               	movlw	255
 12920   002B14  6F69               	movwf	(??_powf+1)& (0+255),b
 12921   002B16  0EFF               	movlw	255
 12922   002B18  6F6A               	movwf	(??_powf+2)& (0+255),b
 12923   002B1A  0EFF               	movlw	255
 12924   002B1C  6F6B               	movwf	(??_powf+3)& (0+255),b
 12925   002B1E  0E17               	movlw	23
 12926   002B20  6F6C               	movwf	(??_powf+4)& (0+255),b
 12927   002B22  C188  F06D         	movff	powf@n,??_powf+5
 12928   002B26  C189  F06E         	movff	powf@n+1,??_powf+6
 12929   002B2A  C18A  F06F         	movff	powf@n+2,??_powf+7
 12930   002B2E  C18B  F070         	movff	powf@n+3,??_powf+8
 12931   002B32                     u8975:
 12932   002B32  676C               	tstfsz	(??_powf+4)& (0+255),b
 12933   002B34  EF9E  F015         	goto	u8976
 12934   002B38  EFA6  F015         	goto	u8977
 12935   002B3C                     u8976:
 12936   002B3C  3570               	rlcf	(??_powf+8)& (0+255),w,b
 12937   002B3E  3370               	rrcf	(??_powf+8)& (0+255),f,b
 12938   002B40  336F               	rrcf	(??_powf+7)& (0+255),f,b
 12939   002B42  336E               	rrcf	(??_powf+6)& (0+255),f,b
 12940   002B44  336D               	rrcf	(??_powf+5)& (0+255),f,b
 12941   002B46  2F6C               	decfsz	(??_powf+4)& (0+255),f,b
 12942   002B48  EF99  F015         	goto	u8975
 12943   002B4C                     u8977:
 12944   002B4C  0100               	movlb	0	; () banked
 12945   002B4E  516D               	movf	(??_powf+5)& (0+255),w,b
 12946   002B50  2568               	addwf	??_powf& (0+255),w,b
 12947   002B52  0101               	movlb	1	; () banked
 12948   002B54  6FA4               	movwf	powf@k& (0+255),b
 12949   002B56  0E00               	movlw	0
 12950   002B58  0100               	movlb	0	; () banked
 12951   002B5A  2169               	addwfc	(??_powf+1)& (0+255),w,b
 12952   002B5C  0101               	movlb	1	; () banked
 12953   002B5E  6FA5               	movwf	(powf@k+1)& (0+255),b
 12954   002B60  0E00               	movlw	0
 12955   002B62  0100               	movlb	0	; () banked
 12956   002B64  216A               	addwfc	(??_powf+2)& (0+255),w,b
 12957   002B66  0101               	movlb	1	; () banked
 12958   002B68  6FA6               	movwf	(powf@k+2)& (0+255),b
 12959   002B6A  0E00               	movlw	0
 12960   002B6C  0100               	movlb	0	; () banked
 12961   002B6E  216B               	addwfc	(??_powf+3)& (0+255),w,b
 12962   002B70  0101               	movlb	1	; () banked
 12963   002B72  6FA7               	movwf	(powf@k+3)& (0+255),b
 12964   002B74  C1A4  F068         	movff	powf@k,??_powf
 12965   002B78  0EFF               	movlw	255
 12966   002B7A  0100               	movlb	0	; () banked
 12967   002B7C  6F69               	movwf	(??_powf+1)& (0+255),b
 12968   002B7E  0EFF               	movlw	255
 12969   002B80  6F6A               	movwf	(??_powf+2)& (0+255),b
 12970   002B82  0E7F               	movlw	127
 12971   002B84  6F6B               	movwf	(??_powf+3)& (0+255),b
 12972   002B86  0E00               	movlw	0
 12973   002B88  6F6C               	movwf	(??_powf+4)& (0+255),b
 12974   002B8A                     u8985:
 12975   002B8A  6768               	tstfsz	??_powf& (0+255),b
 12976   002B8C  EFCA  F015         	goto	u8986
 12977   002B90  EFD2  F015         	goto	u8987
 12978   002B94                     u8986:
 12979   002B94  356C               	rlcf	(??_powf+4)& (0+255),w,b
 12980   002B96  336C               	rrcf	(??_powf+4)& (0+255),f,b
 12981   002B98  336B               	rrcf	(??_powf+3)& (0+255),f,b
 12982   002B9A  336A               	rrcf	(??_powf+2)& (0+255),f,b
 12983   002B9C  3369               	rrcf	(??_powf+1)& (0+255),f,b
 12984   002B9E  2F68               	decfsz	??_powf& (0+255),f,b
 12985   002BA0  EFC5  F015         	goto	u8985
 12986   002BA4                     u8987:
 12987   002BA4  0100               	movlb	0	; () banked
 12988   002BA6  1D69               	comf	(??_powf+1)& (0+255),w,b
 12989   002BA8  6F6D               	movwf	(??_powf+5)& (0+255),b
 12990   002BAA  1D6A               	comf	(??_powf+2)& (0+255),w,b
 12991   002BAC  6F6E               	movwf	(??_powf+6)& (0+255),b
 12992   002BAE  1D6B               	comf	(??_powf+3)& (0+255),w,b
 12993   002BB0  6F6F               	movwf	(??_powf+7)& (0+255),b
 12994   002BB2  1D6C               	comf	(??_powf+4)& (0+255),w,b
 12995   002BB4  6F70               	movwf	(??_powf+8)& (0+255),b
 12996   002BB6  0101               	movlb	1	; () banked
 12997   002BB8  5188               	movf	powf@n& (0+255),w,b
 12998   002BBA  0100               	movlb	0	; () banked
 12999   002BBC  156D               	andwf	(??_powf+5)& (0+255),w,b
 13000   002BBE  0101               	movlb	1	; () banked
 13001   002BC0  6FB0               	movwf	powf@t& (0+255),b
 13002   002BC2  5189               	movf	(powf@n+1)& (0+255),w,b
 13003   002BC4  0100               	movlb	0	; () banked
 13004   002BC6  156E               	andwf	(??_powf+6)& (0+255),w,b
 13005   002BC8  0101               	movlb	1	; () banked
 13006   002BCA  6FB1               	movwf	(powf@t+1)& (0+255),b
 13007   002BCC  518A               	movf	(powf@n+2)& (0+255),w,b
 13008   002BCE  0100               	movlb	0	; () banked
 13009   002BD0  156F               	andwf	(??_powf+7)& (0+255),w,b
 13010   002BD2  0101               	movlb	1	; () banked
 13011   002BD4  6FB2               	movwf	(powf@t+2)& (0+255),b
 13012   002BD6  518B               	movf	(powf@n+3)& (0+255),w,b
 13013   002BD8  0100               	movlb	0	; () banked
 13014   002BDA  1570               	andwf	(??_powf+8)& (0+255),w,b
 13015   002BDC  0101               	movlb	1	; () banked
 13016   002BDE  6FB3               	movwf	(powf@t+3)& (0+255),b
 13017   002BE0  51A4               	movf	powf@k& (0+255),w,b
 13018   002BE2  0817               	sublw	23
 13019   002BE4  0100               	movlb	0	; () banked
 13020   002BE6  6F68               	movwf	??_powf& (0+255),b
 13021   002BE8  0EFF               	movlw	255
 13022   002BEA  0101               	movlb	1	; () banked
 13023   002BEC  1588               	andwf	powf@n& (0+255),w,b
 13024   002BEE  0100               	movlb	0	; () banked
 13025   002BF0  6F69               	movwf	(??_powf+1)& (0+255),b
 13026   002BF2  0EFF               	movlw	255
 13027   002BF4  0101               	movlb	1	; () banked
 13028   002BF6  1589               	andwf	(powf@n+1)& (0+255),w,b
 13029   002BF8  0100               	movlb	0	; () banked
 13030   002BFA  6F6A               	movwf	(??_powf+2)& (0+255),b
 13031   002BFC  0E7F               	movlw	127
 13032   002BFE  0101               	movlb	1	; () banked
 13033   002C00  158A               	andwf	(powf@n+2)& (0+255),w,b
 13034   002C02  0100               	movlb	0	; () banked
 13035   002C04  6F6B               	movwf	(??_powf+3)& (0+255),b
 13036   002C06  0E00               	movlw	0
 13037   002C08  0101               	movlb	1	; () banked
 13038   002C0A  158B               	andwf	(powf@n+3)& (0+255),w,b
 13039   002C0C  0100               	movlb	0	; () banked
 13040   002C0E  6F6C               	movwf	(??_powf+4)& (0+255),b
 13041   002C10  0E00               	movlw	0
 13042   002C12  1169               	iorwf	(??_powf+1)& (0+255),w,b
 13043   002C14  6F6D               	movwf	(??_powf+5)& (0+255),b
 13044   002C16  0E00               	movlw	0
 13045   002C18  116A               	iorwf	(??_powf+2)& (0+255),w,b
 13046   002C1A  6F6E               	movwf	(??_powf+6)& (0+255),b
 13047   002C1C  0E80               	movlw	128
 13048   002C1E  116B               	iorwf	(??_powf+3)& (0+255),w,b
 13049   002C20  6F6F               	movwf	(??_powf+7)& (0+255),b
 13050   002C22  0E00               	movlw	0
 13051   002C24  116C               	iorwf	(??_powf+4)& (0+255),w,b
 13052   002C26  6F70               	movwf	(??_powf+8)& (0+255),b
 13053   002C28                     u8995:
 13054   002C28  6768               	tstfsz	??_powf& (0+255),b
 13055   002C2A  EF19  F016         	goto	u8996
 13056   002C2E  EF21  F016         	goto	u8997
 13057   002C32                     u8996:
 13058   002C32  3570               	rlcf	(??_powf+8)& (0+255),w,b
 13059   002C34  3370               	rrcf	(??_powf+8)& (0+255),f,b
 13060   002C36  336F               	rrcf	(??_powf+7)& (0+255),f,b
 13061   002C38  336E               	rrcf	(??_powf+6)& (0+255),f,b
 13062   002C3A  336D               	rrcf	(??_powf+5)& (0+255),f,b
 13063   002C3C  2F68               	decfsz	??_powf& (0+255),f,b
 13064   002C3E  EF14  F016         	goto	u8995
 13065   002C42                     u8997:
 13066   002C42  C06D  F188         	movff	??_powf+5,powf@n
 13067   002C46  C06E  F189         	movff	??_powf+6,powf@n+1
 13068   002C4A  C06F  F18A         	movff	??_powf+7,powf@n+2
 13069   002C4E  C070  F18B         	movff	??_powf+8,powf@n+3
 13070   002C52  0101               	movlb	1	; () banked
 13071   002C54  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 13072   002C56  EF31  F016         	goto	u9000
 13073   002C5A  EF2F  F016         	goto	u9001
 13074   002C5E                     u9001:
 13075   002C5E  EF39  F016         	goto	l8102
 13076   002C62                     u9000:
 13077   002C62                     
 13078                           ; BSR set to: 1
 13079   002C62  1F8B               	comf	(powf@n+3)& (0+255),f,b
 13080   002C64  1F8A               	comf	(powf@n+2)& (0+255),f,b
 13081   002C66  1F89               	comf	(powf@n+1)& (0+255),f,b
 13082   002C68  6D88               	negf	powf@n& (0+255),b
 13083   002C6A  0E00               	movlw	0
 13084   002C6C  2389               	addwfc	(powf@n+1)& (0+255),f,b
 13085   002C6E  238A               	addwfc	(powf@n+2)& (0+255),f,b
 13086   002C70  238B               	addwfc	(powf@n+3)& (0+255),f,b
 13087   002C72                     l8102:
 13088                           
 13089                           ; BSR set to: 1
 13090   002C72  C1A0  F044         	movff	powf@p_h,___flsub@b
 13091   002C76  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
 13092   002C7A  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
 13093   002C7E  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
 13094   002C82  C1B0  F048         	movff	powf@t,___flsub@a
 13095   002C86  C1B1  F049         	movff	powf@t+1,___flsub@a+1
 13096   002C8A  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
 13097   002C8E  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
 13098   002C92  ECD7  F040         	call	___flsub	;wreg free
 13099   002C96  C044  F1A0         	movff	?___flsub,powf@p_h
 13100   002C9A  C045  F1A1         	movff	?___flsub+1,powf@p_h+1
 13101   002C9E  C046  F1A2         	movff	?___flsub+2,powf@p_h+2
 13102   002CA2  C047  F1A3         	movff	?___flsub+3,powf@p_h+3
 13103   002CA6                     l8104:
 13104   002CA6  C1A0  F002         	movff	powf@p_h,___fladd@b
 13105   002CAA  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
 13106   002CAE  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
 13107   002CB2  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
 13108   002CB6  C16C  F006         	movff	powf@p_l,___fladd@a
 13109   002CBA  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
 13110   002CBE  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
 13111   002CC2  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
 13112   002CC6  EC68  F02B         	call	___fladd	;wreg free
 13113   002CCA  C002  F1B0         	movff	?___fladd,powf@t
 13114   002CCE  C003  F1B1         	movff	?___fladd+1,powf@t+1
 13115   002CD2  C004  F1B2         	movff	?___fladd+2,powf@t+2
 13116   002CD6  C005  F1B3         	movff	?___fladd+3,powf@t+3
 13117   002CDA  C1B0  F198         	movff	powf@t,powf@is
 13118   002CDE  C1B1  F199         	movff	powf@t+1,powf@is+1
 13119   002CE2  C1B2  F19A         	movff	powf@t+2,powf@is+2
 13120   002CE6  C1B3  F19B         	movff	powf@t+3,powf@is+3
 13121   002CEA  0E00               	movlw	0
 13122   002CEC  0101               	movlb	1	; () banked
 13123   002CEE  1598               	andwf	powf@is& (0+255),w,b
 13124   002CF0  6FB0               	movwf	powf@t& (0+255),b
 13125   002CF2  0E80               	movlw	128
 13126   002CF4  1599               	andwf	(powf@is+1)& (0+255),w,b
 13127   002CF6  6FB1               	movwf	(powf@t+1)& (0+255),b
 13128   002CF8  0EFF               	movlw	255
 13129   002CFA  159A               	andwf	(powf@is+2)& (0+255),w,b
 13130   002CFC  6FB2               	movwf	(powf@t+2)& (0+255),b
 13131   002CFE  0EFF               	movlw	255
 13132   002D00  159B               	andwf	(powf@is+3)& (0+255),w,b
 13133   002D02  6FB3               	movwf	(powf@t+3)& (0+255),b
 13134   002D04                     
 13135                           ; BSR set to: 1
 13136   002D04  C1B0  F012         	movff	powf@t,___flmul@b
 13137   002D08  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 13138   002D0C  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 13139   002D10  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 13140   002D14  0E00               	movlw	0
 13141   002D16  6E16               	movwf	___flmul@a^0,c
 13142   002D18  0E72               	movlw	114
 13143   002D1A  6E17               	movwf	(___flmul@a+1)^0,c
 13144   002D1C  0E31               	movlw	49
 13145   002D1E  6E18               	movwf	(___flmul@a+2)^0,c
 13146   002D20  0E3F               	movlw	63
 13147   002D22  6E19               	movwf	(___flmul@a+3)^0,c
 13148   002D24  ECC8  F02D         	call	___flmul	;wreg free
 13149   002D28  C012  F17C         	movff	?___flmul,powf@u
 13150   002D2C  C013  F17D         	movff	?___flmul+1,powf@u+1
 13151   002D30  C014  F17E         	movff	?___flmul+2,powf@u+2
 13152   002D34  C015  F17F         	movff	?___flmul+3,powf@u+3
 13153   002D38  C1A0  F048         	movff	powf@p_h,___flsub@a
 13154   002D3C  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 13155   002D40  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 13156   002D44  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 13157   002D48  C1B0  F044         	movff	powf@t,___flsub@b
 13158   002D4C  C1B1  F045         	movff	powf@t+1,___flsub@b+1
 13159   002D50  C1B2  F046         	movff	powf@t+2,___flsub@b+2
 13160   002D54  C1B3  F047         	movff	powf@t+3,___flsub@b+3
 13161   002D58  ECD7  F040         	call	___flsub	;wreg free
 13162   002D5C  C044  F19C         	movff	?___flsub,_powf$3177
 13163   002D60  C045  F19D         	movff	?___flsub+1,_powf$3177+1
 13164   002D64  C046  F19E         	movff	?___flsub+2,_powf$3177+2
 13165   002D68  C047  F19F         	movff	?___flsub+3,_powf$3177+3
 13166   002D6C  0E18               	movlw	24
 13167   002D6E  6E16               	movwf	___flmul@a^0,c
 13168   002D70  0E72               	movlw	114
 13169   002D72  6E17               	movwf	(___flmul@a+1)^0,c
 13170   002D74  0E31               	movlw	49
 13171   002D76  6E18               	movwf	(___flmul@a+2)^0,c
 13172   002D78  0E3F               	movlw	63
 13173   002D7A  6E19               	movwf	(___flmul@a+3)^0,c
 13174   002D7C  C19C  F048         	movff	_powf$3177,___flsub@a
 13175   002D80  C19D  F049         	movff	_powf$3177+1,___flsub@a+1
 13176   002D84  C19E  F04A         	movff	_powf$3177+2,___flsub@a+2
 13177   002D88  C19F  F04B         	movff	_powf$3177+3,___flsub@a+3
 13178   002D8C  C16C  F044         	movff	powf@p_l,___flsub@b
 13179   002D90  C16D  F045         	movff	powf@p_l+1,___flsub@b+1
 13180   002D94  C16E  F046         	movff	powf@p_l+2,___flsub@b+2
 13181   002D98  C16F  F047         	movff	powf@p_l+3,___flsub@b+3
 13182   002D9C  ECD7  F040         	call	___flsub	;wreg free
 13183   002DA0  C044  F012         	movff	?___flsub,___flmul@b
 13184   002DA4  C045  F013         	movff	?___flsub+1,___flmul@b+1
 13185   002DA8  C046  F014         	movff	?___flsub+2,___flmul@b+2
 13186   002DAC  C047  F015         	movff	?___flsub+3,___flmul@b+3
 13187   002DB0  ECC8  F02D         	call	___flmul	;wreg free
 13188   002DB4  C012  F114         	movff	?___flmul,_powf$3187
 13189   002DB8  C013  F115         	movff	?___flmul+1,_powf$3187+1
 13190   002DBC  C014  F116         	movff	?___flmul+2,_powf$3187+2
 13191   002DC0  C015  F117         	movff	?___flmul+3,_powf$3187+3
 13192   002DC4  C114  F002         	movff	_powf$3187,___fladd@b
 13193   002DC8  C115  F003         	movff	_powf$3187+1,___fladd@b+1
 13194   002DCC  C116  F004         	movff	_powf$3187+2,___fladd@b+2
 13195   002DD0  C117  F005         	movff	_powf$3187+3,___fladd@b+3
 13196   002DD4  0E8C               	movlw	140
 13197   002DD6  6E16               	movwf	___flmul@a^0,c
 13198   002DD8  0EBE               	movlw	190
 13199   002DDA  6E17               	movwf	(___flmul@a+1)^0,c
 13200   002DDC  0EBF               	movlw	191
 13201   002DDE  6E18               	movwf	(___flmul@a+2)^0,c
 13202   002DE0  0E35               	movlw	53
 13203   002DE2  6E19               	movwf	(___flmul@a+3)^0,c
 13204   002DE4  C1B0  F012         	movff	powf@t,___flmul@b
 13205   002DE8  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 13206   002DEC  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 13207   002DF0  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 13208   002DF4  ECC8  F02D         	call	___flmul	;wreg free
 13209   002DF8  C012  F006         	movff	?___flmul,___fladd@a
 13210   002DFC  C013  F007         	movff	?___flmul+1,___fladd@a+1
 13211   002E00  C014  F008         	movff	?___flmul+2,___fladd@a+2
 13212   002E04  C015  F009         	movff	?___flmul+3,___fladd@a+3
 13213   002E08  EC68  F02B         	call	___fladd	;wreg free
 13214   002E0C  C002  F180         	movff	?___fladd,powf@v
 13215   002E10  C003  F181         	movff	?___fladd+1,powf@v+1
 13216   002E14  C004  F182         	movff	?___fladd+2,powf@v+2
 13217   002E18  C005  F183         	movff	?___fladd+3,powf@v+3
 13218   002E1C  C17C  F002         	movff	powf@u,___fladd@b
 13219   002E20  C17D  F003         	movff	powf@u+1,___fladd@b+1
 13220   002E24  C17E  F004         	movff	powf@u+2,___fladd@b+2
 13221   002E28  C17F  F005         	movff	powf@u+3,___fladd@b+3
 13222   002E2C  C180  F006         	movff	powf@v,___fladd@a
 13223   002E30  C181  F007         	movff	powf@v+1,___fladd@a+1
 13224   002E34  C182  F008         	movff	powf@v+2,___fladd@a+2
 13225   002E38  C183  F009         	movff	powf@v+3,___fladd@a+3
 13226   002E3C  EC68  F02B         	call	___fladd	;wreg free
 13227   002E40  C002  F1B4         	movff	?___fladd,powf@z
 13228   002E44  C003  F1B5         	movff	?___fladd+1,powf@z+1
 13229   002E48  C004  F1B6         	movff	?___fladd+2,powf@z+2
 13230   002E4C  C005  F1B7         	movff	?___fladd+3,powf@z+3
 13231   002E50  C17C  F048         	movff	powf@u,___flsub@a
 13232   002E54  C17D  F049         	movff	powf@u+1,___flsub@a+1
 13233   002E58  C17E  F04A         	movff	powf@u+2,___flsub@a+2
 13234   002E5C  C17F  F04B         	movff	powf@u+3,___flsub@a+3
 13235   002E60  C1B4  F044         	movff	powf@z,___flsub@b
 13236   002E64  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 13237   002E68  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 13238   002E6C  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 13239   002E70  ECD7  F040         	call	___flsub	;wreg free
 13240   002E74  C044  F19C         	movff	?___flsub,_powf$3177
 13241   002E78  C045  F19D         	movff	?___flsub+1,_powf$3177+1
 13242   002E7C  C046  F19E         	movff	?___flsub+2,_powf$3177+2
 13243   002E80  C047  F19F         	movff	?___flsub+3,_powf$3177+3
 13244   002E84  C180  F044         	movff	powf@v,___flsub@b
 13245   002E88  C181  F045         	movff	powf@v+1,___flsub@b+1
 13246   002E8C  C182  F046         	movff	powf@v+2,___flsub@b+2
 13247   002E90  C183  F047         	movff	powf@v+3,___flsub@b+3
 13248   002E94  C19C  F048         	movff	_powf$3177,___flsub@a
 13249   002E98  C19D  F049         	movff	_powf$3177+1,___flsub@a+1
 13250   002E9C  C19E  F04A         	movff	_powf$3177+2,___flsub@a+2
 13251   002EA0  C19F  F04B         	movff	_powf$3177+3,___flsub@a+3
 13252   002EA4  ECD7  F040         	call	___flsub	;wreg free
 13253   002EA8  C044  F144         	movff	?___flsub,powf@w
 13254   002EAC  C045  F145         	movff	?___flsub+1,powf@w+1
 13255   002EB0  C046  F146         	movff	?___flsub+2,powf@w+2
 13256   002EB4  C047  F147         	movff	?___flsub+3,powf@w+3
 13257   002EB8  C1B4  F012         	movff	powf@z,___flmul@b
 13258   002EBC  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 13259   002EC0  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 13260   002EC4  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 13261   002EC8  C1B4  F016         	movff	powf@z,___flmul@a
 13262   002ECC  C1B5  F017         	movff	powf@z+1,___flmul@a+1
 13263   002ED0  C1B6  F018         	movff	powf@z+2,___flmul@a+2
 13264   002ED4  C1B7  F019         	movff	powf@z+3,___flmul@a+3
 13265   002ED8  ECC8  F02D         	call	___flmul	;wreg free
 13266   002EDC  C012  F1B0         	movff	?___flmul,powf@t
 13267   002EE0  C013  F1B1         	movff	?___flmul+1,powf@t+1
 13268   002EE4  C014  F1B2         	movff	?___flmul+2,powf@t+2
 13269   002EE8  C015  F1B3         	movff	?___flmul+3,powf@t+3
 13270   002EEC  0E0E               	movlw	14
 13271   002EEE  6E06               	movwf	___fladd@a^0,c
 13272   002EF0  0EEA               	movlw	234
 13273   002EF2  6E07               	movwf	(___fladd@a+1)^0,c
 13274   002EF4  0EDD               	movlw	221
 13275   002EF6  6E08               	movwf	(___fladd@a+2)^0,c
 13276   002EF8  0EB5               	movlw	181
 13277   002EFA  6E09               	movwf	(___fladd@a+3)^0,c
 13278   002EFC  0E4C               	movlw	76
 13279   002EFE  6E16               	movwf	___flmul@a^0,c
 13280   002F00  0EBB               	movlw	187
 13281   002F02  6E17               	movwf	(___flmul@a+1)^0,c
 13282   002F04  0E31               	movlw	49
 13283   002F06  6E18               	movwf	(___flmul@a+2)^0,c
 13284   002F08  0E33               	movlw	51
 13285   002F0A  6E19               	movwf	(___flmul@a+3)^0,c
 13286   002F0C  C1B0  F012         	movff	powf@t,___flmul@b
 13287   002F10  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 13288   002F14  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 13289   002F18  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 13290   002F1C  ECC8  F02D         	call	___flmul	;wreg free
 13291   002F20  C012  F002         	movff	?___flmul,___fladd@b
 13292   002F24  C013  F003         	movff	?___flmul+1,___fladd@b+1
 13293   002F28  C014  F004         	movff	?___flmul+2,___fladd@b+2
 13294   002F2C  C015  F005         	movff	?___flmul+3,___fladd@b+3
 13295   002F30  EC68  F02B         	call	___fladd	;wreg free
 13296   002F34  C002  F148         	movff	?___fladd,_powf$3174
 13297   002F38  C003  F149         	movff	?___fladd+1,_powf$3174+1
 13298   002F3C  C004  F14A         	movff	?___fladd+2,_powf$3174+2
 13299   002F40  C005  F14B         	movff	?___fladd+3,_powf$3174+3
 13300   002F44  0E55               	movlw	85
 13301   002F46  6E06               	movwf	___fladd@a^0,c
 13302   002F48  0EB3               	movlw	179
 13303   002F4A  6E07               	movwf	(___fladd@a+1)^0,c
 13304   002F4C  0E8A               	movlw	138
 13305   002F4E  6E08               	movwf	(___fladd@a+2)^0,c
 13306   002F50  0E38               	movlw	56
 13307   002F52  6E09               	movwf	(___fladd@a+3)^0,c
 13308   002F54  C1B0  F016         	movff	powf@t,___flmul@a
 13309   002F58  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 13310   002F5C  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 13311   002F60  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 13312   002F64  C148  F012         	movff	_powf$3174,___flmul@b
 13313   002F68  C149  F013         	movff	_powf$3174+1,___flmul@b+1
 13314   002F6C  C14A  F014         	movff	_powf$3174+2,___flmul@b+2
 13315   002F70  C14B  F015         	movff	_powf$3174+3,___flmul@b+3
 13316   002F74  ECC8  F02D         	call	___flmul	;wreg free
 13317   002F78  C012  F002         	movff	?___flmul,___fladd@b
 13318   002F7C  C013  F003         	movff	?___flmul+1,___fladd@b+1
 13319   002F80  C014  F004         	movff	?___flmul+2,___fladd@b+2
 13320   002F84  C015  F005         	movff	?___flmul+3,___fladd@b+3
 13321   002F88  EC68  F02B         	call	___fladd	;wreg free
 13322   002F8C  C002  F158         	movff	?___fladd,_powf$3175
 13323   002F90  C003  F159         	movff	?___fladd+1,_powf$3175+1
 13324   002F94  C004  F15A         	movff	?___fladd+2,_powf$3175+2
 13325   002F98  C005  F15B         	movff	?___fladd+3,_powf$3175+3
 13326   002F9C  0E61               	movlw	97
 13327   002F9E  6E06               	movwf	___fladd@a^0,c
 13328   002FA0  0E0B               	movlw	11
 13329   002FA2  6E07               	movwf	(___fladd@a+1)^0,c
 13330   002FA4  0E36               	movlw	54
 13331   002FA6  6E08               	movwf	(___fladd@a+2)^0,c
 13332   002FA8  0EBB               	movlw	187
 13333   002FAA  6E09               	movwf	(___fladd@a+3)^0,c
 13334   002FAC  C1B0  F016         	movff	powf@t,___flmul@a
 13335   002FB0  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 13336   002FB4  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 13337   002FB8  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 13338   002FBC  C158  F012         	movff	_powf$3175,___flmul@b
 13339   002FC0  C159  F013         	movff	_powf$3175+1,___flmul@b+1
 13340   002FC4  C15A  F014         	movff	_powf$3175+2,___flmul@b+2
 13341   002FC8  C15B  F015         	movff	_powf$3175+3,___flmul@b+3
 13342   002FCC  ECC8  F02D         	call	___flmul	;wreg free
 13343   002FD0  C012  F002         	movff	?___flmul,___fladd@b
 13344   002FD4  C013  F003         	movff	?___flmul+1,___fladd@b+1
 13345   002FD8  C014  F004         	movff	?___flmul+2,___fladd@b+2
 13346   002FDC  C015  F005         	movff	?___flmul+3,___fladd@b+3
 13347   002FE0  EC68  F02B         	call	___fladd	;wreg free
 13348   002FE4  C002  F14C         	movff	?___fladd,_powf$3176
 13349   002FE8  C003  F14D         	movff	?___fladd+1,_powf$3176+1
 13350   002FEC  C004  F14E         	movff	?___fladd+2,_powf$3176+2
 13351   002FF0  C005  F14F         	movff	?___fladd+3,_powf$3176+3
 13352   002FF4  0EAB               	movlw	171
 13353   002FF6  6E06               	movwf	___fladd@a^0,c
 13354   002FF8  0EAA               	movlw	170
 13355   002FFA  6E07               	movwf	(___fladd@a+1)^0,c
 13356   002FFC  0E2A               	movlw	42
 13357   002FFE  6E08               	movwf	(___fladd@a+2)^0,c
 13358   003000  0E3E               	movlw	62
 13359   003002  6E09               	movwf	(___fladd@a+3)^0,c
 13360   003004  C1B0  F016         	movff	powf@t,___flmul@a
 13361   003008  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 13362   00300C  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 13363   003010  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 13364   003014  C14C  F012         	movff	_powf$3176,___flmul@b
 13365   003018  C14D  F013         	movff	_powf$3176+1,___flmul@b+1
 13366   00301C  C14E  F014         	movff	_powf$3176+2,___flmul@b+2
 13367   003020  C14F  F015         	movff	_powf$3176+3,___flmul@b+3
 13368   003024  ECC8  F02D         	call	___flmul	;wreg free
 13369   003028  C012  F002         	movff	?___flmul,___fladd@b
 13370   00302C  C013  F003         	movff	?___flmul+1,___fladd@b+1
 13371   003030  C014  F004         	movff	?___flmul+2,___fladd@b+2
 13372   003034  C015  F005         	movff	?___flmul+3,___fladd@b+3
 13373   003038  EC68  F02B         	call	___fladd	;wreg free
 13374   00303C  C002  F138         	movff	?___fladd,_powf$3178
 13375   003040  C003  F139         	movff	?___fladd+1,_powf$3178+1
 13376   003044  C004  F13A         	movff	?___fladd+2,_powf$3178+2
 13377   003048  C005  F13B         	movff	?___fladd+3,_powf$3178+3
 13378   00304C  C1B4  F044         	movff	powf@z,___flsub@b
 13379   003050  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 13380   003054  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 13381   003058  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 13382   00305C  C1B0  F016         	movff	powf@t,___flmul@a
 13383   003060  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 13384   003064  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 13385   003068  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 13386   00306C  C138  F012         	movff	_powf$3178,___flmul@b
 13387   003070  C139  F013         	movff	_powf$3178+1,___flmul@b+1
 13388   003074  C13A  F014         	movff	_powf$3178+2,___flmul@b+2
 13389   003078  C13B  F015         	movff	_powf$3178+3,___flmul@b+3
 13390   00307C  ECC8  F02D         	call	___flmul	;wreg free
 13391   003080  C012  F048         	movff	?___flmul,___flsub@a
 13392   003084  C013  F049         	movff	?___flmul+1,___flsub@a+1
 13393   003088  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 13394   00308C  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 13395   003090  ECD7  F040         	call	___flsub	;wreg free
 13396   003094  C044  F18C         	movff	?___flsub,powf@t1
 13397   003098  C045  F18D         	movff	?___flsub+1,powf@t1+1
 13398   00309C  C046  F18E         	movff	?___flsub+2,powf@t1+2
 13399   0030A0  C047  F18F         	movff	?___flsub+3,powf@t1+3
 13400   0030A4  0E00               	movlw	0
 13401   0030A6  6E06               	movwf	___fladd@a^0,c
 13402   0030A8  0E00               	movlw	0
 13403   0030AA  6E07               	movwf	(___fladd@a+1)^0,c
 13404   0030AC  0E00               	movlw	0
 13405   0030AE  6E08               	movwf	(___fladd@a+2)^0,c
 13406   0030B0  0EC0               	movlw	192
 13407   0030B2  6E09               	movwf	(___fladd@a+3)^0,c
 13408   0030B4  C18C  F002         	movff	powf@t1,___fladd@b
 13409   0030B8  C18D  F003         	movff	powf@t1+1,___fladd@b+1
 13410   0030BC  C18E  F004         	movff	powf@t1+2,___fladd@b+2
 13411   0030C0  C18F  F005         	movff	powf@t1+3,___fladd@b+3
 13412   0030C4  EC68  F02B         	call	___fladd	;wreg free
 13413   0030C8  C002  F02F         	movff	?___fladd,___fldiv@a
 13414   0030CC  C003  F030         	movff	?___fladd+1,___fldiv@a+1
 13415   0030D0  C004  F031         	movff	?___fladd+2,___fldiv@a+2
 13416   0030D4  C005  F032         	movff	?___fladd+3,___fldiv@a+3
 13417   0030D8  C18C  F016         	movff	powf@t1,___flmul@a
 13418   0030DC  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 13419   0030E0  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 13420   0030E4  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 13421   0030E8  C1B4  F012         	movff	powf@z,___flmul@b
 13422   0030EC  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 13423   0030F0  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 13424   0030F4  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 13425   0030F8  ECC8  F02D         	call	___flmul	;wreg free
 13426   0030FC  C012  F02B         	movff	?___flmul,___fldiv@b
 13427   003100  C013  F02C         	movff	?___flmul+1,___fldiv@b+1
 13428   003104  C014  F02D         	movff	?___flmul+2,___fldiv@b+2
 13429   003108  C015  F02E         	movff	?___flmul+3,___fldiv@b+3
 13430   00310C  ECCC  F031         	call	___fldiv	;wreg free
 13431   003110  C02B  F13C         	movff	?___fldiv,_powf$3182
 13432   003114  C02C  F13D         	movff	?___fldiv+1,_powf$3182+1
 13433   003118  C02D  F13E         	movff	?___fldiv+2,_powf$3182+2
 13434   00311C  C02E  F13F         	movff	?___fldiv+3,_powf$3182+3
 13435   003120  C144  F006         	movff	powf@w,___fladd@a
 13436   003124  C145  F007         	movff	powf@w+1,___fladd@a+1
 13437   003128  C146  F008         	movff	powf@w+2,___fladd@a+2
 13438   00312C  C147  F009         	movff	powf@w+3,___fladd@a+3
 13439   003130  C144  F016         	movff	powf@w,___flmul@a
 13440   003134  C145  F017         	movff	powf@w+1,___flmul@a+1
 13441   003138  C146  F018         	movff	powf@w+2,___flmul@a+2
 13442   00313C  C147  F019         	movff	powf@w+3,___flmul@a+3
 13443   003140  C1B4  F012         	movff	powf@z,___flmul@b
 13444   003144  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 13445   003148  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 13446   00314C  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 13447   003150  ECC8  F02D         	call	___flmul	;wreg free
 13448   003154  C012  F002         	movff	?___flmul,___fladd@b
 13449   003158  C013  F003         	movff	?___flmul+1,___fladd@b+1
 13450   00315C  C014  F004         	movff	?___flmul+2,___fladd@b+2
 13451   003160  C015  F005         	movff	?___flmul+3,___fladd@b+3
 13452   003164  EC68  F02B         	call	___fladd	;wreg free
 13453   003168  C002  F118         	movff	?___fladd,_powf$3188
 13454   00316C  C003  F119         	movff	?___fladd+1,_powf$3188+1
 13455   003170  C004  F11A         	movff	?___fladd+2,_powf$3188+2
 13456   003174  C005  F11B         	movff	?___fladd+3,_powf$3188+3
 13457   003178  C13C  F044         	movff	_powf$3182,___flsub@b
 13458   00317C  C13D  F045         	movff	_powf$3182+1,___flsub@b+1
 13459   003180  C13E  F046         	movff	_powf$3182+2,___flsub@b+2
 13460   003184  C13F  F047         	movff	_powf$3182+3,___flsub@b+3
 13461   003188  C118  F048         	movff	_powf$3188,___flsub@a
 13462   00318C  C119  F049         	movff	_powf$3188+1,___flsub@a+1
 13463   003190  C11A  F04A         	movff	_powf$3188+2,___flsub@a+2
 13464   003194  C11B  F04B         	movff	_powf$3188+3,___flsub@a+3
 13465   003198  ECD7  F040         	call	___flsub	;wreg free
 13466   00319C  C044  F150         	movff	?___flsub,powf@r
 13467   0031A0  C045  F151         	movff	?___flsub+1,powf@r+1
 13468   0031A4  C046  F152         	movff	?___flsub+2,powf@r+2
 13469   0031A8  C047  F153         	movff	?___flsub+3,powf@r+3
 13470   0031AC  C1B4  F048         	movff	powf@z,___flsub@a
 13471   0031B0  C1B5  F049         	movff	powf@z+1,___flsub@a+1
 13472   0031B4  C1B6  F04A         	movff	powf@z+2,___flsub@a+2
 13473   0031B8  C1B7  F04B         	movff	powf@z+3,___flsub@a+3
 13474   0031BC  C150  F044         	movff	powf@r,___flsub@b
 13475   0031C0  C151  F045         	movff	powf@r+1,___flsub@b+1
 13476   0031C4  C152  F046         	movff	powf@r+2,___flsub@b+2
 13477   0031C8  C153  F047         	movff	powf@r+3,___flsub@b+3
 13478   0031CC  ECD7  F040         	call	___flsub	;wreg free
 13479   0031D0  C044  F19C         	movff	?___flsub,_powf$3177
 13480   0031D4  C045  F19D         	movff	?___flsub+1,_powf$3177+1
 13481   0031D8  C046  F19E         	movff	?___flsub+2,_powf$3177+2
 13482   0031DC  C047  F19F         	movff	?___flsub+3,_powf$3177+3
 13483   0031E0  0E00               	movlw	0
 13484   0031E2  6E44               	movwf	___flsub@b^0,c
 13485   0031E4  0E00               	movlw	0
 13486   0031E6  6E45               	movwf	(___flsub@b+1)^0,c
 13487   0031E8  0E80               	movlw	128
 13488   0031EA  6E46               	movwf	(___flsub@b+2)^0,c
 13489   0031EC  0E3F               	movlw	63
 13490   0031EE  6E47               	movwf	(___flsub@b+3)^0,c
 13491   0031F0  C19C  F048         	movff	_powf$3177,___flsub@a
 13492   0031F4  C19D  F049         	movff	_powf$3177+1,___flsub@a+1
 13493   0031F8  C19E  F04A         	movff	_powf$3177+2,___flsub@a+2
 13494   0031FC  C19F  F04B         	movff	_powf$3177+3,___flsub@a+3
 13495   003200  ECD7  F040         	call	___flsub	;wreg free
 13496   003204  C044  F1B4         	movff	?___flsub,powf@z
 13497   003208  C045  F1B5         	movff	?___flsub+1,powf@z+1
 13498   00320C  C046  F1B6         	movff	?___flsub+2,powf@z+2
 13499   003210  C047  F1B7         	movff	?___flsub+3,powf@z+3
 13500   003214  C1B4  F1A8         	movff	powf@z,powf@j
 13501   003218  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 13502   00321C  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 13503   003220  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 13504   003224  C188  F068         	movff	powf@n,??_powf
 13505   003228  C189  F069         	movff	powf@n+1,??_powf+1
 13506   00322C  C18A  F06A         	movff	powf@n+2,??_powf+2
 13507   003230  C18B  F06B         	movff	powf@n+3,??_powf+3
 13508   003234  0E17               	movlw	23
 13509   003236                     u9015:
 13510   003236  90D8               	bcf	status,0,c
 13511   003238  0100               	movlb	0	; () banked
 13512   00323A  3768               	rlcf	??_powf& (0+255),f,b
 13513   00323C  3769               	rlcf	(??_powf+1)& (0+255),f,b
 13514   00323E  376A               	rlcf	(??_powf+2)& (0+255),f,b
 13515   003240  376B               	rlcf	(??_powf+3)& (0+255),f,b
 13516   003242  2EE8               	decfsz	wreg,f,c
 13517   003244  EF1B  F019         	goto	u9015
 13518   003248  5168               	movf	??_powf& (0+255),w,b
 13519   00324A  0101               	movlb	1	; () banked
 13520   00324C  27A8               	addwf	powf@j& (0+255),f,b
 13521   00324E  0100               	movlb	0	; () banked
 13522   003250  5169               	movf	(??_powf+1)& (0+255),w,b
 13523   003252  0101               	movlb	1	; () banked
 13524   003254  23A9               	addwfc	(powf@j+1)& (0+255),f,b
 13525   003256  0100               	movlb	0	; () banked
 13526   003258  516A               	movf	(??_powf+2)& (0+255),w,b
 13527   00325A  0101               	movlb	1	; () banked
 13528   00325C  23AA               	addwfc	(powf@j+2)& (0+255),f,b
 13529   00325E  0100               	movlb	0	; () banked
 13530   003260  516B               	movf	(??_powf+3)& (0+255),w,b
 13531   003262  0101               	movlb	1	; () banked
 13532   003264  23AB               	addwfc	(powf@j+3)& (0+255),f,b
 13533   003266                     
 13534                           ; BSR set to: 1
 13535   003266  0E17               	movlw	23
 13536   003268  0100               	movlb	0	; () banked
 13537   00326A  6F68               	movwf	??_powf& (0+255),b
 13538   00326C  C1A8  F069         	movff	powf@j,??_powf+1
 13539   003270  C1A9  F06A         	movff	powf@j+1,??_powf+2
 13540   003274  C1AA  F06B         	movff	powf@j+2,??_powf+3
 13541   003278  C1AB  F06C         	movff	powf@j+3,??_powf+4
 13542   00327C                     u9025:
 13543   00327C  6768               	tstfsz	??_powf& (0+255),b
 13544   00327E  EF43  F019         	goto	u9026
 13545   003282  EF4B  F019         	goto	u9027
 13546   003286                     u9026:
 13547   003286  356C               	rlcf	(??_powf+4)& (0+255),w,b
 13548   003288  336C               	rrcf	(??_powf+4)& (0+255),f,b
 13549   00328A  336B               	rrcf	(??_powf+3)& (0+255),f,b
 13550   00328C  336A               	rrcf	(??_powf+2)& (0+255),f,b
 13551   00328E  3369               	rrcf	(??_powf+1)& (0+255),f,b
 13552   003290  2F68               	decfsz	??_powf& (0+255),f,b
 13553   003292  EF3E  F019         	goto	u9025
 13554   003296                     u9027:
 13555   003296  0100               	movlb	0	; () banked
 13556   003298  BF6C               	btfsc	(??_powf+4)& (0+255),7,b
 13557   00329A  EF5B  F019         	goto	u9030
 13558   00329E  516C               	movf	(??_powf+4)& (0+255),w,b
 13559   0032A0  116B               	iorwf	(??_powf+3)& (0+255),w,b
 13560   0032A2  116A               	iorwf	(??_powf+2)& (0+255),w,b
 13561   0032A4  E106               	bnz	u9031
 13562   0032A6  0569               	decf	(??_powf+1)& (0+255),w,b
 13563   0032A8  B0D8               	btfsc	status,0,c
 13564   0032AA  EF59  F019         	goto	u9031
 13565   0032AE  EF5B  F019         	goto	u9030
 13566   0032B2                     u9031:
 13567   0032B2  EF73  F019         	goto	l1535
 13568   0032B6                     u9030:
 13569   0032B6                     
 13570                           ; BSR set to: 0
 13571   0032B6  C1B4  F02B         	movff	powf@z,scalbnf@x
 13572   0032BA  C1B5  F02C         	movff	powf@z+1,scalbnf@x+1
 13573   0032BE  C1B6  F02D         	movff	powf@z+2,scalbnf@x+2
 13574   0032C2  C1B7  F02E         	movff	powf@z+3,scalbnf@x+3
 13575   0032C6  C188  F02F         	movff	powf@n,scalbnf@n
 13576   0032CA  C189  F030         	movff	powf@n+1,scalbnf@n+1
 13577   0032CE  EC99  F033         	call	_scalbnf	;wreg free
 13578   0032D2  C02B  F1B4         	movff	?_scalbnf,powf@z
 13579   0032D6  C02C  F1B5         	movff	?_scalbnf+1,powf@z+1
 13580   0032DA  C02D  F1B6         	movff	?_scalbnf+2,powf@z+2
 13581   0032DE  C02E  F1B7         	movff	?_scalbnf+3,powf@z+3
 13582   0032E2  EF7B  F019         	goto	l8154
 13583   0032E6                     l1535:
 13584                           
 13585                           ; BSR set to: 0
 13586   0032E6  C1A8  F1B4         	movff	powf@j,powf@z
 13587   0032EA  C1A9  F1B5         	movff	powf@j+1,powf@z+1
 13588   0032EE  C1AA  F1B6         	movff	powf@j+2,powf@z+2
 13589   0032F2  C1AB  F1B7         	movff	powf@j+3,powf@z+3
 13590   0032F6                     l8154:
 13591   0032F6  0101               	movlb	1	; () banked
 13592   0032F8  51B4               	movf	powf@z& (0+255),w,b
 13593   0032FA  11B5               	iorwf	(powf@z+1)& (0+255),w,b
 13594   0032FC  11B6               	iorwf	(powf@z+2)& (0+255),w,b
 13595   0032FE  11B7               	iorwf	(powf@z+3)& (0+255),w,b
 13596   003300  B4D8               	btfsc	status,2,c
 13597   003302  EF85  F019         	goto	u9041
 13598   003306  EF87  F019         	goto	u9040
 13599   00330A                     u9041:
 13600   00330A  EF88  F00A         	goto	l7840
 13601   00330E                     u9040:
 13602   00330E                     
 13603                           ; BSR set to: 1
 13604   00330E  5164               	movf	powf@sn& (0+255),w,b
 13605   003310  1BB4               	xorwf	powf@z& (0+255),f,b
 13606   003312  5165               	movf	(powf@sn+1)& (0+255),w,b
 13607   003314  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
 13608   003316  5166               	movf	(powf@sn+2)& (0+255),w,b
 13609   003318  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
 13610   00331A  5167               	movf	(powf@sn+3)& (0+255),w,b
 13611   00331C  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
 13612   00331E  EF88  F00A         	goto	l7840
 13613   003322                     l1469:
 13614   003322  0012               	return		;funcret
 13615   003324                     __end_of_powf:
 13616                           	callstack 0
 13617                           
 13618 ;; *************** function _sqrtf *****************
 13619 ;; Defined at:
 13620 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sqrtf.c"
 13621 ;; Parameters:    Size  Location     Type
 13622 ;;  x               4   17[COMRAM] float 
 13623 ;; Auto vars:     Size  Location     Type
 13624 ;;  ix              4   50[COMRAM] struct .
 13625 ;;  r               4   46[COMRAM] unsigned long 
 13626 ;;  m               4   42[COMRAM] long 
 13627 ;;  t               4   38[COMRAM] long 
 13628 ;;  q               4   34[COMRAM] long 
 13629 ;;  i               4   30[COMRAM] long 
 13630 ;;  s               4   26[COMRAM] long 
 13631 ;;  z               4    0        float 
 13632 ;; Return value:  Size  Location     Type
 13633 ;;                  4   17[COMRAM] float 
 13634 ;; Registers used:
 13635 ;;		wreg, status,2, status,0
 13636 ;; Tracked objects:
 13637 ;;		On entry : 0/0
 13638 ;;		On exit  : 0/0
 13639 ;;		Unchanged: 0/0
 13640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13642 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13643 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13644 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13645 ;;Total ram usage:       37 bytes
 13646 ;; Hardware stack levels used: 1
 13647 ;; Hardware stack levels required when called: 2
 13648 ;; This function calls:
 13649 ;;		Nothing
 13650 ;; This function is called by:
 13651 ;;		_decide_action
 13652 ;;		_powf
 13653 ;; This function uses a non-reentrant model
 13654 ;;
 13655                           
 13656                           	psect	text37
 13657   005FBA                     __ptext37:
 13658                           	callstack 0
 13659   005FBA                     _sqrtf:
 13660                           	callstack 27
 13661   005FBA  C012  F033         	movff	sqrtf@x,sqrtf@ix
 13662   005FBE  C013  F034         	movff	sqrtf@x+1,sqrtf@ix+1
 13663   005FC2  C014  F035         	movff	sqrtf@x+2,sqrtf@ix+2
 13664   005FC6  C015  F036         	movff	sqrtf@x+3,sqrtf@ix+3
 13665   005FCA  0E00               	movlw	0
 13666   005FCC  1433               	andwf	sqrtf@ix^0,w,c
 13667   005FCE  6E16               	movwf	??_sqrtf^0,c
 13668   005FD0  0E00               	movlw	0
 13669   005FD2  1434               	andwf	(sqrtf@ix+1)^0,w,c
 13670   005FD4  6E17               	movwf	(??_sqrtf+1)^0,c
 13671   005FD6  0E80               	movlw	128
 13672   005FD8  1435               	andwf	(sqrtf@ix+2)^0,w,c
 13673   005FDA  6E18               	movwf	(??_sqrtf+2)^0,c
 13674   005FDC  0E7F               	movlw	127
 13675   005FDE  1436               	andwf	(sqrtf@ix+3)^0,w,c
 13676   005FE0  6E19               	movwf	(??_sqrtf+3)^0,c
 13677   005FE2  0E80               	movlw	128
 13678   005FE4  1818               	xorwf	(??_sqrtf+2)^0,w,c
 13679   005FE6  E109               	bnz	u5051
 13680   005FE8  0E7F               	movlw	127
 13681   005FEA  1819               	xorwf	(??_sqrtf+3)^0,w,c
 13682   005FEC  1016               	iorwf	??_sqrtf^0,w,c
 13683   005FEE  1017               	iorwf	(??_sqrtf+1)^0,w,c
 13684   005FF0  A4D8               	btfss	status,2,c
 13685   005FF2  EFFD  F02F         	goto	u5051
 13686   005FF6  EFFF  F02F         	goto	u5050
 13687   005FFA                     u5051:
 13688   005FFA  EF2F  F030         	goto	l5176
 13689   005FFE                     u5050:
 13690   005FFE  0EFF               	movlw	255
 13691   006000  1433               	andwf	sqrtf@ix^0,w,c
 13692   006002  6E16               	movwf	??_sqrtf^0,c
 13693   006004  0EFF               	movlw	255
 13694   006006  1434               	andwf	(sqrtf@ix+1)^0,w,c
 13695   006008  6E17               	movwf	(??_sqrtf+1)^0,c
 13696   00600A  0E7F               	movlw	127
 13697   00600C  1435               	andwf	(sqrtf@ix+2)^0,w,c
 13698   00600E  6E18               	movwf	(??_sqrtf+2)^0,c
 13699   006010  0E00               	movlw	0
 13700   006012  1436               	andwf	(sqrtf@ix+3)^0,w,c
 13701   006014  6E19               	movwf	(??_sqrtf+3)^0,c
 13702   006016  5016               	movf	??_sqrtf^0,w,c
 13703   006018  1017               	iorwf	(??_sqrtf+1)^0,w,c
 13704   00601A  1018               	iorwf	(??_sqrtf+2)^0,w,c
 13705   00601C  1019               	iorwf	(??_sqrtf+3)^0,w,c
 13706   00601E  A4D8               	btfss	status,2,c
 13707   006020  EF14  F030         	goto	u5061
 13708   006024  EF16  F030         	goto	u5060
 13709   006028                     u5061:
 13710   006028  EF1D  F030         	goto	l5170
 13711   00602C                     u5060:
 13712   00602C  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 13713   00602E  EF1D  F030         	goto	u5070
 13714   006032  EF1B  F030         	goto	u5071
 13715   006036                     u5071:
 13716   006036  EF25  F030         	goto	l5172
 13717   00603A                     u5070:
 13718   00603A                     l5170:
 13719   00603A  0EFF               	movlw	255
 13720   00603C  1233               	iorwf	sqrtf@ix^0,f,c
 13721   00603E  0EFF               	movlw	255
 13722   006040  1234               	iorwf	(sqrtf@ix+1)^0,f,c
 13723   006042  0E7F               	movlw	127
 13724   006044  1235               	iorwf	(sqrtf@ix+2)^0,f,c
 13725   006046  0E00               	movlw	0
 13726   006048  1236               	iorwf	(sqrtf@ix+3)^0,f,c
 13727   00604A                     l5172:
 13728   00604A  C033  F012         	movff	sqrtf@ix,?_sqrtf
 13729   00604E  C034  F013         	movff	sqrtf@ix+1,?_sqrtf+1
 13730   006052  C035  F014         	movff	sqrtf@ix+2,?_sqrtf+2
 13731   006056  C036  F015         	movff	sqrtf@ix+3,?_sqrtf+3
 13732   00605A  EFCB  F031         	goto	l1561
 13733   00605E                     l5176:
 13734   00605E  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 13735   006060  EF3E  F030         	goto	u5080
 13736   006064  5036               	movf	(sqrtf@ix+3)^0,w,c
 13737   006066  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 13738   006068  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 13739   00606A  E106               	bnz	u5081
 13740   00606C  0433               	decf	sqrtf@ix^0,w,c
 13741   00606E  B0D8               	btfsc	status,0,c
 13742   006070  EF3C  F030         	goto	u5081
 13743   006074  EF3E  F030         	goto	u5080
 13744   006078                     u5081:
 13745   006078  EF75  F030         	goto	l5192
 13746   00607C                     u5080:
 13747   00607C  0EFF               	movlw	255
 13748   00607E  1433               	andwf	sqrtf@ix^0,w,c
 13749   006080  6E16               	movwf	??_sqrtf^0,c
 13750   006082  0EFF               	movlw	255
 13751   006084  1434               	andwf	(sqrtf@ix+1)^0,w,c
 13752   006086  6E17               	movwf	(??_sqrtf+1)^0,c
 13753   006088  0EFF               	movlw	255
 13754   00608A  1435               	andwf	(sqrtf@ix+2)^0,w,c
 13755   00608C  6E18               	movwf	(??_sqrtf+2)^0,c
 13756   00608E  0E7F               	movlw	127
 13757   006090  1436               	andwf	(sqrtf@ix+3)^0,w,c
 13758   006092  6E19               	movwf	(??_sqrtf+3)^0,c
 13759   006094  5016               	movf	??_sqrtf^0,w,c
 13760   006096  1017               	iorwf	(??_sqrtf+1)^0,w,c
 13761   006098  1018               	iorwf	(??_sqrtf+2)^0,w,c
 13762   00609A  1019               	iorwf	(??_sqrtf+3)^0,w,c
 13763   00609C  A4D8               	btfss	status,2,c
 13764   00609E  EF53  F030         	goto	u5091
 13765   0060A2  EF55  F030         	goto	u5090
 13766   0060A6                     u5091:
 13767   0060A6  EF5F  F030         	goto	l5184
 13768   0060AA                     u5090:
 13769   0060AA  0E00               	movlw	0
 13770   0060AC  6E12               	movwf	?_sqrtf^0,c
 13771   0060AE  0E00               	movlw	0
 13772   0060B0  6E13               	movwf	(?_sqrtf+1)^0,c
 13773   0060B2  0E00               	movlw	0
 13774   0060B4  6E14               	movwf	(?_sqrtf+2)^0,c
 13775   0060B6  0E00               	movlw	0
 13776   0060B8  6E15               	movwf	(?_sqrtf+3)^0,c
 13777   0060BA  EFCB  F031         	goto	l1561
 13778   0060BE                     l5184:
 13779   0060BE  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 13780   0060C0  EF66  F030         	goto	u5100
 13781   0060C4  EF64  F030         	goto	u5101
 13782   0060C8                     u5101:
 13783   0060C8  EF75  F030         	goto	l5192
 13784   0060CC                     u5100:
 13785   0060CC  0E00               	movlw	0
 13786   0060CE  0100               	movlb	0	; () banked
 13787   0060D0  6FD9               	movwf	(_errno+1)& (0+255),b
 13788   0060D2  0E21               	movlw	33
 13789   0060D4  6FD8               	movwf	_errno& (0+255),b
 13790   0060D6  0EFF               	movlw	255
 13791   0060D8  6E33               	movwf	sqrtf@ix^0,c
 13792   0060DA  0EFF               	movlw	255
 13793   0060DC  6E34               	movwf	(sqrtf@ix+1)^0,c
 13794   0060DE  0EFF               	movlw	255
 13795   0060E0  6E35               	movwf	(sqrtf@ix+2)^0,c
 13796   0060E2  0E7F               	movlw	127
 13797   0060E4  6E36               	movwf	(sqrtf@ix+3)^0,c
 13798   0060E6  EF25  F030         	goto	l5172
 13799   0060EA                     l5192:
 13800   0060EA  0E17               	movlw	23
 13801   0060EC  6E16               	movwf	??_sqrtf^0,c
 13802   0060EE  C033  F017         	movff	sqrtf@ix,??_sqrtf+1
 13803   0060F2  C034  F018         	movff	sqrtf@ix+1,??_sqrtf+2
 13804   0060F6  C035  F019         	movff	sqrtf@ix+2,??_sqrtf+3
 13805   0060FA  C036  F01A         	movff	sqrtf@ix+3,??_sqrtf+4
 13806   0060FE                     u5115:
 13807   0060FE  6616               	tstfsz	??_sqrtf^0,c
 13808   006100  EF84  F030         	goto	u5116
 13809   006104  EF8C  F030         	goto	u5117
 13810   006108                     u5116:
 13811   006108  341A               	rlcf	(??_sqrtf+4)^0,w,c
 13812   00610A  321A               	rrcf	(??_sqrtf+4)^0,f,c
 13813   00610C  3219               	rrcf	(??_sqrtf+3)^0,f,c
 13814   00610E  3218               	rrcf	(??_sqrtf+2)^0,f,c
 13815   006110  3217               	rrcf	(??_sqrtf+1)^0,f,c
 13816   006112  2E16               	decfsz	??_sqrtf^0,f,c
 13817   006114  EF7F  F030         	goto	u5115
 13818   006118                     u5117:
 13819   006118  C017  F02B         	movff	??_sqrtf+1,sqrtf@m
 13820   00611C  C018  F02C         	movff	??_sqrtf+2,sqrtf@m+1
 13821   006120  C019  F02D         	movff	??_sqrtf+3,sqrtf@m+2
 13822   006124  C01A  F02E         	movff	??_sqrtf+4,sqrtf@m+3
 13823   006128  502B               	movf	sqrtf@m^0,w,c
 13824   00612A  102C               	iorwf	(sqrtf@m+1)^0,w,c
 13825   00612C  102D               	iorwf	(sqrtf@m+2)^0,w,c
 13826   00612E  102E               	iorwf	(sqrtf@m+3)^0,w,c
 13827   006130  A4D8               	btfss	status,2,c
 13828   006132  EF9D  F030         	goto	u5121
 13829   006136  EF9F  F030         	goto	u5120
 13830   00613A                     u5121:
 13831   00613A  EFCF  F030         	goto	l1565
 13832   00613E                     u5120:
 13833   00613E  0E00               	movlw	0
 13834   006140  6E1F               	movwf	sqrtf@i^0,c
 13835   006142  0E00               	movlw	0
 13836   006144  6E20               	movwf	(sqrtf@i+1)^0,c
 13837   006146  0E00               	movlw	0
 13838   006148  6E21               	movwf	(sqrtf@i+2)^0,c
 13839   00614A  0E00               	movlw	0
 13840   00614C  6E22               	movwf	(sqrtf@i+3)^0,c
 13841   00614E  EFB4  F030         	goto	l5200
 13842   006152                     l5196:
 13843   006152  90D8               	bcf	status,0,c
 13844   006154  3633               	rlcf	sqrtf@ix^0,f,c
 13845   006156  3634               	rlcf	(sqrtf@ix+1)^0,f,c
 13846   006158  3635               	rlcf	(sqrtf@ix+2)^0,f,c
 13847   00615A  3636               	rlcf	(sqrtf@ix+3)^0,f,c
 13848   00615C  0E01               	movlw	1
 13849   00615E  261F               	addwf	sqrtf@i^0,f,c
 13850   006160  0E00               	movlw	0
 13851   006162  2220               	addwfc	(sqrtf@i+1)^0,f,c
 13852   006164  2221               	addwfc	(sqrtf@i+2)^0,f,c
 13853   006166  2222               	addwfc	(sqrtf@i+3)^0,f,c
 13854   006168                     l5200:
 13855   006168  AE35               	btfss	(sqrtf@ix+2)^0,7,c
 13856   00616A  EFB9  F030         	goto	u5131
 13857   00616E  EFBB  F030         	goto	u5130
 13858   006172                     u5131:
 13859   006172  EFA9  F030         	goto	l5196
 13860   006176                     u5130:
 13861   006176  0EFF               	movlw	255
 13862   006178  241F               	addwf	sqrtf@i^0,w,c
 13863   00617A  6E16               	movwf	??_sqrtf^0,c
 13864   00617C  0EFF               	movlw	255
 13865   00617E  2020               	addwfc	(sqrtf@i+1)^0,w,c
 13866   006180  6E17               	movwf	(??_sqrtf+1)^0,c
 13867   006182  0EFF               	movlw	255
 13868   006184  2021               	addwfc	(sqrtf@i+2)^0,w,c
 13869   006186  6E18               	movwf	(??_sqrtf+2)^0,c
 13870   006188  0EFF               	movlw	255
 13871   00618A  2022               	addwfc	(sqrtf@i+3)^0,w,c
 13872   00618C  6E19               	movwf	(??_sqrtf+3)^0,c
 13873   00618E  5016               	movf	??_sqrtf^0,w,c
 13874   006190  5E2B               	subwf	sqrtf@m^0,f,c
 13875   006192  5017               	movf	(??_sqrtf+1)^0,w,c
 13876   006194  5A2C               	subwfb	(sqrtf@m+1)^0,f,c
 13877   006196  5018               	movf	(??_sqrtf+2)^0,w,c
 13878   006198  5A2D               	subwfb	(sqrtf@m+2)^0,f,c
 13879   00619A  5019               	movf	(??_sqrtf+3)^0,w,c
 13880   00619C  5A2E               	subwfb	(sqrtf@m+3)^0,f,c
 13881   00619E                     l1565:
 13882   00619E  0E81               	movlw	129
 13883   0061A0  262B               	addwf	sqrtf@m^0,f,c
 13884   0061A2  0EFF               	movlw	255
 13885   0061A4  222C               	addwfc	(sqrtf@m+1)^0,f,c
 13886   0061A6  0EFF               	movlw	255
 13887   0061A8  222D               	addwfc	(sqrtf@m+2)^0,f,c
 13888   0061AA  0EFF               	movlw	255
 13889   0061AC  222E               	addwfc	(sqrtf@m+3)^0,f,c
 13890   0061AE  0EFF               	movlw	255
 13891   0061B0  1433               	andwf	sqrtf@ix^0,w,c
 13892   0061B2  6E16               	movwf	??_sqrtf^0,c
 13893   0061B4  0EFF               	movlw	255
 13894   0061B6  1434               	andwf	(sqrtf@ix+1)^0,w,c
 13895   0061B8  6E17               	movwf	(??_sqrtf+1)^0,c
 13896   0061BA  0E7F               	movlw	127
 13897   0061BC  1435               	andwf	(sqrtf@ix+2)^0,w,c
 13898   0061BE  6E18               	movwf	(??_sqrtf+2)^0,c
 13899   0061C0  0E00               	movlw	0
 13900   0061C2  1436               	andwf	(sqrtf@ix+3)^0,w,c
 13901   0061C4  6E19               	movwf	(??_sqrtf+3)^0,c
 13902   0061C6  0E00               	movlw	0
 13903   0061C8  1016               	iorwf	??_sqrtf^0,w,c
 13904   0061CA  6E33               	movwf	sqrtf@ix^0,c
 13905   0061CC  0E00               	movlw	0
 13906   0061CE  1017               	iorwf	(??_sqrtf+1)^0,w,c
 13907   0061D0  6E34               	movwf	(sqrtf@ix+1)^0,c
 13908   0061D2  0E80               	movlw	128
 13909   0061D4  1018               	iorwf	(??_sqrtf+2)^0,w,c
 13910   0061D6  6E35               	movwf	(sqrtf@ix+2)^0,c
 13911   0061D8  0E00               	movlw	0
 13912   0061DA  1019               	iorwf	(??_sqrtf+3)^0,w,c
 13913   0061DC  6E36               	movwf	(sqrtf@ix+3)^0,c
 13914   0061DE  A02B               	btfss	sqrtf@m^0,0,c
 13915   0061E0  EFF4  F030         	goto	u5141
 13916   0061E4  EFF6  F030         	goto	u5140
 13917   0061E8                     u5141:
 13918   0061E8  EFFE  F030         	goto	l1569
 13919   0061EC                     u5140:
 13920   0061EC  5033               	movf	sqrtf@ix^0,w,c
 13921   0061EE  2633               	addwf	sqrtf@ix^0,f,c
 13922   0061F0  5034               	movf	(sqrtf@ix+1)^0,w,c
 13923   0061F2  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 13924   0061F4  5035               	movf	(sqrtf@ix+2)^0,w,c
 13925   0061F6  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 13926   0061F8  5036               	movf	(sqrtf@ix+3)^0,w,c
 13927   0061FA  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 13928   0061FC                     l1569:
 13929   0061FC  342E               	rlcf	(sqrtf@m+3)^0,w,c
 13930   0061FE  322E               	rrcf	(sqrtf@m+3)^0,f,c
 13931   006200  322D               	rrcf	(sqrtf@m+2)^0,f,c
 13932   006202  322C               	rrcf	(sqrtf@m+1)^0,f,c
 13933   006204  322B               	rrcf	sqrtf@m^0,f,c
 13934   006206  5033               	movf	sqrtf@ix^0,w,c
 13935   006208  2633               	addwf	sqrtf@ix^0,f,c
 13936   00620A  5034               	movf	(sqrtf@ix+1)^0,w,c
 13937   00620C  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 13938   00620E  5035               	movf	(sqrtf@ix+2)^0,w,c
 13939   006210  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 13940   006212  5036               	movf	(sqrtf@ix+3)^0,w,c
 13941   006214  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 13942   006216  0E00               	movlw	0
 13943   006218  6E1B               	movwf	sqrtf@s^0,c
 13944   00621A  0E00               	movlw	0
 13945   00621C  6E1C               	movwf	(sqrtf@s+1)^0,c
 13946   00621E  0E00               	movlw	0
 13947   006220  6E1D               	movwf	(sqrtf@s+2)^0,c
 13948   006222  0E00               	movlw	0
 13949   006224  6E1E               	movwf	(sqrtf@s+3)^0,c
 13950   006226  C01B  F023         	movff	sqrtf@s,sqrtf@q
 13951   00622A  C01C  F024         	movff	sqrtf@s+1,sqrtf@q+1
 13952   00622E  C01D  F025         	movff	sqrtf@s+2,sqrtf@q+2
 13953   006232  C01E  F026         	movff	sqrtf@s+3,sqrtf@q+3
 13954   006236  0E00               	movlw	0
 13955   006238  6E2F               	movwf	sqrtf@r^0,c
 13956   00623A  0E00               	movlw	0
 13957   00623C  6E30               	movwf	(sqrtf@r+1)^0,c
 13958   00623E  0E00               	movlw	0
 13959   006240  6E31               	movwf	(sqrtf@r+2)^0,c
 13960   006242  0E01               	movlw	1
 13961   006244  6E32               	movwf	(sqrtf@r+3)^0,c
 13962   006246  EF6D  F031         	goto	l5218
 13963   00624A                     l5212:
 13964   00624A  501B               	movf	sqrtf@s^0,w,c
 13965   00624C  242F               	addwf	sqrtf@r^0,w,c
 13966   00624E  6E27               	movwf	sqrtf@t^0,c
 13967   006250  501C               	movf	(sqrtf@s+1)^0,w,c
 13968   006252  2030               	addwfc	(sqrtf@r+1)^0,w,c
 13969   006254  6E28               	movwf	(sqrtf@t+1)^0,c
 13970   006256  501D               	movf	(sqrtf@s+2)^0,w,c
 13971   006258  2031               	addwfc	(sqrtf@r+2)^0,w,c
 13972   00625A  6E29               	movwf	(sqrtf@t+2)^0,c
 13973   00625C  501E               	movf	(sqrtf@s+3)^0,w,c
 13974   00625E  2032               	addwfc	(sqrtf@r+3)^0,w,c
 13975   006260  6E2A               	movwf	(sqrtf@t+3)^0,c
 13976   006262  5027               	movf	sqrtf@t^0,w,c
 13977   006264  5C33               	subwf	sqrtf@ix^0,w,c
 13978   006266  5028               	movf	(sqrtf@t+1)^0,w,c
 13979   006268  5834               	subwfb	(sqrtf@ix+1)^0,w,c
 13980   00626A  5029               	movf	(sqrtf@t+2)^0,w,c
 13981   00626C  5835               	subwfb	(sqrtf@ix+2)^0,w,c
 13982   00626E  5036               	movf	(sqrtf@ix+3)^0,w,c
 13983   006270  0A80               	xorlw	128
 13984   006272  6E16               	movwf	??_sqrtf^0,c
 13985   006274  502A               	movf	(sqrtf@t+3)^0,w,c
 13986   006276  0A80               	xorlw	128
 13987   006278  5816               	subwfb	??_sqrtf^0,w,c
 13988   00627A  A0D8               	btfss	status,0,c
 13989   00627C  EF42  F031         	goto	u5151
 13990   006280  EF44  F031         	goto	u5150
 13991   006284                     u5151:
 13992   006284  EF60  F031         	goto	l1572
 13993   006288                     u5150:
 13994   006288  5027               	movf	sqrtf@t^0,w,c
 13995   00628A  242F               	addwf	sqrtf@r^0,w,c
 13996   00628C  6E1B               	movwf	sqrtf@s^0,c
 13997   00628E  5028               	movf	(sqrtf@t+1)^0,w,c
 13998   006290  2030               	addwfc	(sqrtf@r+1)^0,w,c
 13999   006292  6E1C               	movwf	(sqrtf@s+1)^0,c
 14000   006294  5029               	movf	(sqrtf@t+2)^0,w,c
 14001   006296  2031               	addwfc	(sqrtf@r+2)^0,w,c
 14002   006298  6E1D               	movwf	(sqrtf@s+2)^0,c
 14003   00629A  502A               	movf	(sqrtf@t+3)^0,w,c
 14004   00629C  2032               	addwfc	(sqrtf@r+3)^0,w,c
 14005   00629E  6E1E               	movwf	(sqrtf@s+3)^0,c
 14006   0062A0  5027               	movf	sqrtf@t^0,w,c
 14007   0062A2  5E33               	subwf	sqrtf@ix^0,f,c
 14008   0062A4  5028               	movf	(sqrtf@t+1)^0,w,c
 14009   0062A6  5A34               	subwfb	(sqrtf@ix+1)^0,f,c
 14010   0062A8  5029               	movf	(sqrtf@t+2)^0,w,c
 14011   0062AA  5A35               	subwfb	(sqrtf@ix+2)^0,f,c
 14012   0062AC  502A               	movf	(sqrtf@t+3)^0,w,c
 14013   0062AE  5A36               	subwfb	(sqrtf@ix+3)^0,f,c
 14014   0062B0  502F               	movf	sqrtf@r^0,w,c
 14015   0062B2  2623               	addwf	sqrtf@q^0,f,c
 14016   0062B4  5030               	movf	(sqrtf@r+1)^0,w,c
 14017   0062B6  2224               	addwfc	(sqrtf@q+1)^0,f,c
 14018   0062B8  5031               	movf	(sqrtf@r+2)^0,w,c
 14019   0062BA  2225               	addwfc	(sqrtf@q+2)^0,f,c
 14020   0062BC  5032               	movf	(sqrtf@r+3)^0,w,c
 14021   0062BE  2226               	addwfc	(sqrtf@q+3)^0,f,c
 14022   0062C0                     l1572:
 14023   0062C0  5033               	movf	sqrtf@ix^0,w,c
 14024   0062C2  2633               	addwf	sqrtf@ix^0,f,c
 14025   0062C4  5034               	movf	(sqrtf@ix+1)^0,w,c
 14026   0062C6  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 14027   0062C8  5035               	movf	(sqrtf@ix+2)^0,w,c
 14028   0062CA  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 14029   0062CC  5036               	movf	(sqrtf@ix+3)^0,w,c
 14030   0062CE  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 14031   0062D0  90D8               	bcf	status,0,c
 14032   0062D2  3232               	rrcf	(sqrtf@r+3)^0,f,c
 14033   0062D4  3231               	rrcf	(sqrtf@r+2)^0,f,c
 14034   0062D6  3230               	rrcf	(sqrtf@r+1)^0,f,c
 14035   0062D8  322F               	rrcf	sqrtf@r^0,f,c
 14036   0062DA                     l5218:
 14037   0062DA  502F               	movf	sqrtf@r^0,w,c
 14038   0062DC  1030               	iorwf	(sqrtf@r+1)^0,w,c
 14039   0062DE  1031               	iorwf	(sqrtf@r+2)^0,w,c
 14040   0062E0  1032               	iorwf	(sqrtf@r+3)^0,w,c
 14041   0062E2  A4D8               	btfss	status,2,c
 14042   0062E4  EF76  F031         	goto	u5161
 14043   0062E8  EF78  F031         	goto	u5160
 14044   0062EC                     u5161:
 14045   0062EC  EF25  F031         	goto	l5212
 14046   0062F0                     u5160:
 14047   0062F0  5033               	movf	sqrtf@ix^0,w,c
 14048   0062F2  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 14049   0062F4  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 14050   0062F6  1036               	iorwf	(sqrtf@ix+3)^0,w,c
 14051   0062F8  B4D8               	btfsc	status,2,c
 14052   0062FA  EF81  F031         	goto	u5171
 14053   0062FE  EF83  F031         	goto	u5170
 14054   006302                     u5171:
 14055   006302  EF97  F031         	goto	l1574
 14056   006306                     u5170:
 14057   006306  0E01               	movlw	1
 14058   006308  1423               	andwf	sqrtf@q^0,w,c
 14059   00630A  6E16               	movwf	??_sqrtf^0,c
 14060   00630C  0E00               	movlw	0
 14061   00630E  1424               	andwf	(sqrtf@q+1)^0,w,c
 14062   006310  6E17               	movwf	(??_sqrtf+1)^0,c
 14063   006312  0E00               	movlw	0
 14064   006314  1425               	andwf	(sqrtf@q+2)^0,w,c
 14065   006316  6E18               	movwf	(??_sqrtf+2)^0,c
 14066   006318  0E00               	movlw	0
 14067   00631A  1426               	andwf	(sqrtf@q+3)^0,w,c
 14068   00631C  6E19               	movwf	(??_sqrtf+3)^0,c
 14069   00631E  5016               	movf	??_sqrtf^0,w,c
 14070   006320  2623               	addwf	sqrtf@q^0,f,c
 14071   006322  5017               	movf	(??_sqrtf+1)^0,w,c
 14072   006324  2224               	addwfc	(sqrtf@q+1)^0,f,c
 14073   006326  5018               	movf	(??_sqrtf+2)^0,w,c
 14074   006328  2225               	addwfc	(sqrtf@q+2)^0,f,c
 14075   00632A  5019               	movf	(??_sqrtf+3)^0,w,c
 14076   00632C  2226               	addwfc	(sqrtf@q+3)^0,f,c
 14077   00632E                     l1574:
 14078   00632E  C023  F016         	movff	sqrtf@q,??_sqrtf
 14079   006332  C024  F017         	movff	sqrtf@q+1,??_sqrtf+1
 14080   006336  C025  F018         	movff	sqrtf@q+2,??_sqrtf+2
 14081   00633A  C026  F019         	movff	sqrtf@q+3,??_sqrtf+3
 14082   00633E  3419               	rlcf	(??_sqrtf+3)^0,w,c
 14083   006340  3219               	rrcf	(??_sqrtf+3)^0,f,c
 14084   006342  3218               	rrcf	(??_sqrtf+2)^0,f,c
 14085   006344  3217               	rrcf	(??_sqrtf+1)^0,f,c
 14086   006346  3216               	rrcf	??_sqrtf^0,f,c
 14087   006348  0E00               	movlw	0
 14088   00634A  2416               	addwf	??_sqrtf^0,w,c
 14089   00634C  6E33               	movwf	sqrtf@ix^0,c
 14090   00634E  0E00               	movlw	0
 14091   006350  2017               	addwfc	(??_sqrtf+1)^0,w,c
 14092   006352  6E34               	movwf	(sqrtf@ix+1)^0,c
 14093   006354  0E00               	movlw	0
 14094   006356  2018               	addwfc	(??_sqrtf+2)^0,w,c
 14095   006358  6E35               	movwf	(sqrtf@ix+2)^0,c
 14096   00635A  0E3F               	movlw	63
 14097   00635C  2019               	addwfc	(??_sqrtf+3)^0,w,c
 14098   00635E  6E36               	movwf	(sqrtf@ix+3)^0,c
 14099   006360  C02B  F016         	movff	sqrtf@m,??_sqrtf
 14100   006364  C02C  F017         	movff	sqrtf@m+1,??_sqrtf+1
 14101   006368  C02D  F018         	movff	sqrtf@m+2,??_sqrtf+2
 14102   00636C  C02E  F019         	movff	sqrtf@m+3,??_sqrtf+3
 14103   006370  0E17               	movlw	23
 14104   006372                     u5185:
 14105   006372  90D8               	bcf	status,0,c
 14106   006374  3616               	rlcf	??_sqrtf^0,f,c
 14107   006376  3617               	rlcf	(??_sqrtf+1)^0,f,c
 14108   006378  3618               	rlcf	(??_sqrtf+2)^0,f,c
 14109   00637A  3619               	rlcf	(??_sqrtf+3)^0,f,c
 14110   00637C  2EE8               	decfsz	wreg,f,c
 14111   00637E  EFB9  F031         	goto	u5185
 14112   006382  5016               	movf	??_sqrtf^0,w,c
 14113   006384  2633               	addwf	sqrtf@ix^0,f,c
 14114   006386  5017               	movf	(??_sqrtf+1)^0,w,c
 14115   006388  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 14116   00638A  5018               	movf	(??_sqrtf+2)^0,w,c
 14117   00638C  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 14118   00638E  5019               	movf	(??_sqrtf+3)^0,w,c
 14119   006390  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 14120   006392  EF25  F030         	goto	l5172
 14121   006396                     l1561:
 14122   006396  0012               	return		;funcret
 14123   006398                     __end_of_sqrtf:
 14124                           	callstack 0
 14125                           
 14126 ;; *************** function _scalbnf *****************
 14127 ;; Defined at:
 14128 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\scalbnf.c"
 14129 ;; Parameters:    Size  Location     Type
 14130 ;;  x               4   42[COMRAM] float 
 14131 ;;  n               2   46[COMRAM] int 
 14132 ;; Auto vars:     Size  Location     Type
 14133 ;;  y               4   56[COMRAM] float 
 14134 ;;  u               4   52[COMRAM] struct .
 14135 ;; Return value:  Size  Location     Type
 14136 ;;                  4   42[COMRAM] float 
 14137 ;; Registers used:
 14138 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14139 ;; Tracked objects:
 14140 ;;		On entry : 0/0
 14141 ;;		On exit  : 0/0
 14142 ;;		Unchanged: 0/0
 14143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14144 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14145 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14146 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14147 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14148 ;;Total ram usage:       18 bytes
 14149 ;; Hardware stack levels used: 1
 14150 ;; Hardware stack levels required when called: 3
 14151 ;; This function calls:
 14152 ;;		___flmul
 14153 ;; This function is called by:
 14154 ;;		_powf
 14155 ;; This function uses a non-reentrant model
 14156 ;;
 14157                           
 14158                           	psect	text38
 14159   006732                     __ptext38:
 14160                           	callstack 0
 14161   006732                     _scalbnf:
 14162                           	callstack 25
 14163   006732  C02B  F039         	movff	scalbnf@x,scalbnf@y
 14164   006736  C02C  F03A         	movff	scalbnf@x+1,scalbnf@y+1
 14165   00673A  C02D  F03B         	movff	scalbnf@x+2,scalbnf@y+2
 14166   00673E  C02E  F03C         	movff	scalbnf@x+3,scalbnf@y+3
 14167   006742  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 14168   006744  EFAD  F033         	goto	u8401
 14169   006748  5030               	movf	(scalbnf@n+1)^0,w,c
 14170   00674A  E109               	bnz	u8400
 14171   00674C  0E80               	movlw	128
 14172   00674E  5C2F               	subwf	scalbnf@n^0,w,c
 14173   006750  A0D8               	btfss	status,0,c
 14174   006752  EFAD  F033         	goto	u8401
 14175   006756  EFAF  F033         	goto	u8400
 14176   00675A                     u8401:
 14177   00675A  EF0D  F034         	goto	l7704
 14178   00675E                     u8400:
 14179   00675E  C039  F012         	movff	scalbnf@y,___flmul@b
 14180   006762  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 14181   006766  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 14182   00676A  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 14183   00676E  0E00               	movlw	0
 14184   006770  6E16               	movwf	___flmul@a^0,c
 14185   006772  0E00               	movlw	0
 14186   006774  6E17               	movwf	(___flmul@a+1)^0,c
 14187   006776  0E00               	movlw	0
 14188   006778  6E18               	movwf	(___flmul@a+2)^0,c
 14189   00677A  0E7F               	movlw	127
 14190   00677C  6E19               	movwf	(___flmul@a+3)^0,c
 14191   00677E  ECC8  F02D         	call	___flmul	;wreg free
 14192   006782  C012  F039         	movff	?___flmul,scalbnf@y
 14193   006786  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 14194   00678A  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 14195   00678E  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 14196   006792  0E81               	movlw	129
 14197   006794  262F               	addwf	scalbnf@n^0,f,c
 14198   006796  0EFF               	movlw	255
 14199   006798  2230               	addwfc	(scalbnf@n+1)^0,f,c
 14200   00679A  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 14201   00679C  EFD9  F033         	goto	u8411
 14202   0067A0  5030               	movf	(scalbnf@n+1)^0,w,c
 14203   0067A2  E109               	bnz	u8410
 14204   0067A4  0E80               	movlw	128
 14205   0067A6  5C2F               	subwf	scalbnf@n^0,w,c
 14206   0067A8  A0D8               	btfss	status,0,c
 14207   0067AA  EFD9  F033         	goto	u8411
 14208   0067AE  EFDB  F033         	goto	u8410
 14209   0067B2                     u8411:
 14210   0067B2  EF77  F034         	goto	l7720
 14211   0067B6                     u8410:
 14212   0067B6  C039  F012         	movff	scalbnf@y,___flmul@b
 14213   0067BA  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 14214   0067BE  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 14215   0067C2  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 14216   0067C6  0E00               	movlw	0
 14217   0067C8  6E16               	movwf	___flmul@a^0,c
 14218   0067CA  0E00               	movlw	0
 14219   0067CC  6E17               	movwf	(___flmul@a+1)^0,c
 14220   0067CE  0E00               	movlw	0
 14221   0067D0  6E18               	movwf	(___flmul@a+2)^0,c
 14222   0067D2  0E7F               	movlw	127
 14223   0067D4  6E19               	movwf	(___flmul@a+3)^0,c
 14224   0067D6  ECC8  F02D         	call	___flmul	;wreg free
 14225   0067DA  C012  F039         	movff	?___flmul,scalbnf@y
 14226   0067DE  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 14227   0067E2  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 14228   0067E6  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 14229   0067EA  0E81               	movlw	129
 14230   0067EC  262F               	addwf	scalbnf@n^0,f,c
 14231   0067EE  0EFF               	movlw	255
 14232   0067F0  2230               	addwfc	(scalbnf@n+1)^0,f,c
 14233   0067F2  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 14234   0067F4  EF05  F034         	goto	u8421
 14235   0067F8  5030               	movf	(scalbnf@n+1)^0,w,c
 14236   0067FA  E109               	bnz	u8420
 14237   0067FC  0E80               	movlw	128
 14238   0067FE  5C2F               	subwf	scalbnf@n^0,w,c
 14239   006800  A0D8               	btfss	status,0,c
 14240   006802  EF05  F034         	goto	u8421
 14241   006806  EF07  F034         	goto	u8420
 14242   00680A                     u8421:
 14243   00680A  EF77  F034         	goto	l7720
 14244   00680E                     u8420:
 14245   00680E  0E00               	movlw	0
 14246   006810  6E30               	movwf	(scalbnf@n+1)^0,c
 14247   006812  0E7F               	movlw	127
 14248   006814  6E2F               	movwf	scalbnf@n^0,c
 14249   006816  EF77  F034         	goto	l7720
 14250   00681A                     l7704:
 14251   00681A  AE30               	btfss	(scalbnf@n+1)^0,7,c
 14252   00681C  EF19  F034         	goto	u8431
 14253   006820  0E82               	movlw	130
 14254   006822  5C2F               	subwf	scalbnf@n^0,w,c
 14255   006824  0EFF               	movlw	255
 14256   006826  5830               	subwfb	(scalbnf@n+1)^0,w,c
 14257   006828  B0D8               	btfsc	status,0,c
 14258   00682A  EF19  F034         	goto	u8431
 14259   00682E  EF1B  F034         	goto	u8430
 14260   006832                     u8431:
 14261   006832  EF77  F034         	goto	l7720
 14262   006836                     u8430:
 14263   006836  C039  F012         	movff	scalbnf@y,___flmul@b
 14264   00683A  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 14265   00683E  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 14266   006842  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 14267   006846  0E00               	movlw	0
 14268   006848  6E16               	movwf	___flmul@a^0,c
 14269   00684A  0E00               	movlw	0
 14270   00684C  6E17               	movwf	(___flmul@a+1)^0,c
 14271   00684E  0E80               	movlw	128
 14272   006850  6E18               	movwf	(___flmul@a+2)^0,c
 14273   006852  0E0C               	movlw	12
 14274   006854  6E19               	movwf	(___flmul@a+3)^0,c
 14275   006856  ECC8  F02D         	call	___flmul	;wreg free
 14276   00685A  C012  F039         	movff	?___flmul,scalbnf@y
 14277   00685E  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 14278   006862  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 14279   006866  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 14280   00686A  0E66               	movlw	102
 14281   00686C  262F               	addwf	scalbnf@n^0,f,c
 14282   00686E  0E00               	movlw	0
 14283   006870  2230               	addwfc	(scalbnf@n+1)^0,f,c
 14284   006872  AE30               	btfss	(scalbnf@n+1)^0,7,c
 14285   006874  EF45  F034         	goto	u8441
 14286   006878  0E82               	movlw	130
 14287   00687A  5C2F               	subwf	scalbnf@n^0,w,c
 14288   00687C  0EFF               	movlw	255
 14289   00687E  5830               	subwfb	(scalbnf@n+1)^0,w,c
 14290   006880  B0D8               	btfsc	status,0,c
 14291   006882  EF45  F034         	goto	u8441
 14292   006886  EF47  F034         	goto	u8440
 14293   00688A                     u8441:
 14294   00688A  EF77  F034         	goto	l7720
 14295   00688E                     u8440:
 14296   00688E  C039  F012         	movff	scalbnf@y,___flmul@b
 14297   006892  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 14298   006896  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 14299   00689A  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 14300   00689E  0E00               	movlw	0
 14301   0068A0  6E16               	movwf	___flmul@a^0,c
 14302   0068A2  0E00               	movlw	0
 14303   0068A4  6E17               	movwf	(___flmul@a+1)^0,c
 14304   0068A6  0E80               	movlw	128
 14305   0068A8  6E18               	movwf	(___flmul@a+2)^0,c
 14306   0068AA  0E0C               	movlw	12
 14307   0068AC  6E19               	movwf	(___flmul@a+3)^0,c
 14308   0068AE  ECC8  F02D         	call	___flmul	;wreg free
 14309   0068B2  C012  F039         	movff	?___flmul,scalbnf@y
 14310   0068B6  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 14311   0068BA  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 14312   0068BE  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 14313   0068C2  0E66               	movlw	102
 14314   0068C4  262F               	addwf	scalbnf@n^0,f,c
 14315   0068C6  0E00               	movlw	0
 14316   0068C8  2230               	addwfc	(scalbnf@n+1)^0,f,c
 14317   0068CA  AE30               	btfss	(scalbnf@n+1)^0,7,c
 14318   0068CC  EF71  F034         	goto	u8451
 14319   0068D0  0E82               	movlw	130
 14320   0068D2  5C2F               	subwf	scalbnf@n^0,w,c
 14321   0068D4  0EFF               	movlw	255
 14322   0068D6  5830               	subwfb	(scalbnf@n+1)^0,w,c
 14323   0068D8  B0D8               	btfsc	status,0,c
 14324   0068DA  EF71  F034         	goto	u8451
 14325   0068DE  EF73  F034         	goto	u8450
 14326   0068E2                     u8451:
 14327   0068E2  EF77  F034         	goto	l7720
 14328   0068E6                     u8450:
 14329   0068E6  0EFF               	movlw	255
 14330   0068E8  6E30               	movwf	(scalbnf@n+1)^0,c
 14331   0068EA  0E82               	movlw	130
 14332   0068EC  6E2F               	movwf	scalbnf@n^0,c
 14333   0068EE                     l7720:
 14334   0068EE  0E7F               	movlw	127
 14335   0068F0  242F               	addwf	scalbnf@n^0,w,c
 14336   0068F2  6E31               	movwf	??_scalbnf^0,c
 14337   0068F4  0E00               	movlw	0
 14338   0068F6  2030               	addwfc	(scalbnf@n+1)^0,w,c
 14339   0068F8  6E32               	movwf	(??_scalbnf+1)^0,c
 14340   0068FA  6A33               	clrf	(??_scalbnf+2)^0,c
 14341   0068FC  6A34               	clrf	(??_scalbnf+3)^0,c
 14342   0068FE  0E17               	movlw	23
 14343   006900                     u8465:
 14344   006900  90D8               	bcf	status,0,c
 14345   006902  3631               	rlcf	??_scalbnf^0,f,c
 14346   006904  3632               	rlcf	(??_scalbnf+1)^0,f,c
 14347   006906  3633               	rlcf	(??_scalbnf+2)^0,f,c
 14348   006908  3634               	rlcf	(??_scalbnf+3)^0,f,c
 14349   00690A  2EE8               	decfsz	wreg,f,c
 14350   00690C  EF80  F034         	goto	u8465
 14351   006910  C031  F035         	movff	??_scalbnf,scalbnf@u
 14352   006914  C032  F036         	movff	??_scalbnf+1,scalbnf@u+1
 14353   006918  C033  F037         	movff	??_scalbnf+2,scalbnf@u+2
 14354   00691C  C034  F038         	movff	??_scalbnf+3,scalbnf@u+3
 14355   006920  C035  F012         	movff	scalbnf@u,___flmul@b
 14356   006924  C036  F013         	movff	scalbnf@u+1,___flmul@b+1
 14357   006928  C037  F014         	movff	scalbnf@u+2,___flmul@b+2
 14358   00692C  C038  F015         	movff	scalbnf@u+3,___flmul@b+3
 14359   006930  C039  F016         	movff	scalbnf@y,___flmul@a
 14360   006934  C03A  F017         	movff	scalbnf@y+1,___flmul@a+1
 14361   006938  C03B  F018         	movff	scalbnf@y+2,___flmul@a+2
 14362   00693C  C03C  F019         	movff	scalbnf@y+3,___flmul@a+3
 14363   006940  ECC8  F02D         	call	___flmul	;wreg free
 14364   006944  C012  F02B         	movff	?___flmul,scalbnf@x
 14365   006948  C013  F02C         	movff	?___flmul+1,scalbnf@x+1
 14366   00694C  C014  F02D         	movff	?___flmul+2,scalbnf@x+2
 14367   006950  C015  F02E         	movff	?___flmul+3,scalbnf@x+3
 14368   006954  C02B  F02B         	movff	scalbnf@x,?_scalbnf
 14369   006958  C02C  F02C         	movff	scalbnf@x+1,?_scalbnf+1
 14370   00695C  C02D  F02D         	movff	scalbnf@x+2,?_scalbnf+2
 14371   006960  C02E  F02E         	movff	scalbnf@x+3,?_scalbnf+3
 14372   006964  0012               	return		;funcret
 14373   006966                     __end_of_scalbnf:
 14374                           	callstack 0
 14375                           
 14376 ;; *************** function ___flmul *****************
 14377 ;; Defined at:
 14378 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 14379 ;; Parameters:    Size  Location     Type
 14380 ;;  b               4   17[COMRAM] float 
 14381 ;;  a               4   21[COMRAM] float 
 14382 ;; Auto vars:     Size  Location     Type
 14383 ;;  prod            4   36[COMRAM] struct .
 14384 ;;  grs             4   31[COMRAM] unsigned long 
 14385 ;;  temp            2   40[COMRAM] struct .
 14386 ;;  bexp            1   35[COMRAM] unsigned char 
 14387 ;;  aexp            1   30[COMRAM] unsigned char 
 14388 ;;  sign            1   29[COMRAM] unsigned char 
 14389 ;; Return value:  Size  Location     Type
 14390 ;;                  4   17[COMRAM] unsigned char 
 14391 ;; Registers used:
 14392 ;;		wreg, status,2, status,0, prodl, prodh
 14393 ;; Tracked objects:
 14394 ;;		On entry : 0/0
 14395 ;;		On exit  : 0/0
 14396 ;;		Unchanged: 0/0
 14397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14398 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14399 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14400 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14401 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14402 ;;Total ram usage:       25 bytes
 14403 ;; Hardware stack levels used: 1
 14404 ;; Hardware stack levels required when called: 2
 14405 ;; This function calls:
 14406 ;;		Nothing
 14407 ;; This function is called by:
 14408 ;;		_efgtoa
 14409 ;;		_powf
 14410 ;;		_scalbnf
 14411 ;; This function uses a non-reentrant model
 14412 ;;
 14413                           
 14414                           	psect	text39
 14415   005B90                     __ptext39:
 14416                           	callstack 0
 14417   005B90                     ___flmul:
 14418                           	callstack 23
 14419   005B90  5015               	movf	(___flmul@b+3)^0,w,c
 14420   005B92  0B80               	andlw	128
 14421   005B94  6E1E               	movwf	___flmul@sign^0,c
 14422   005B96  5015               	movf	(___flmul@b+3)^0,w,c
 14423   005B98  2415               	addwf	(___flmul@b+3)^0,w,c
 14424   005B9A  6E24               	movwf	___flmul@bexp^0,c
 14425   005B9C  AE14               	btfss	(___flmul@b+2)^0,7,c
 14426   005B9E  EFD3  F02D         	goto	u7481
 14427   005BA2  EFD5  F02D         	goto	u7480
 14428   005BA6                     u7481:
 14429   005BA6  EFD6  F02D         	goto	l7084
 14430   005BAA                     u7480:
 14431   005BAA  8024               	bsf	___flmul@bexp^0,0,c
 14432   005BAC                     l7084:
 14433   005BAC  5024               	movf	___flmul@bexp^0,w,c
 14434   005BAE  B4D8               	btfsc	status,2,c
 14435   005BB0  EFDC  F02D         	goto	u7491
 14436   005BB4  EFDE  F02D         	goto	u7490
 14437   005BB8                     u7491:
 14438   005BB8  EFF1  F02D         	goto	l7092
 14439   005BBC                     u7490:
 14440   005BBC  2824               	incf	___flmul@bexp^0,w,c
 14441   005BBE  A4D8               	btfss	status,2,c
 14442   005BC0  EFE4  F02D         	goto	u7501
 14443   005BC4  EFE6  F02D         	goto	u7500
 14444   005BC8                     u7501:
 14445   005BC8  EFEE  F02D         	goto	l7090
 14446   005BCC                     u7500:
 14447   005BCC  0E00               	movlw	0
 14448   005BCE  6E12               	movwf	___flmul@b^0,c
 14449   005BD0  0E00               	movlw	0
 14450   005BD2  6E13               	movwf	(___flmul@b+1)^0,c
 14451   005BD4  0E00               	movlw	0
 14452   005BD6  6E14               	movwf	(___flmul@b+2)^0,c
 14453   005BD8  0E00               	movlw	0
 14454   005BDA  6E15               	movwf	(___flmul@b+3)^0,c
 14455   005BDC                     l7090:
 14456   005BDC  8E14               	bsf	(___flmul@b+2)^0,7,c
 14457   005BDE  EFF9  F02D         	goto	l7094
 14458   005BE2                     l7092:
 14459   005BE2  0E00               	movlw	0
 14460   005BE4  6E12               	movwf	___flmul@b^0,c
 14461   005BE6  0E00               	movlw	0
 14462   005BE8  6E13               	movwf	(___flmul@b+1)^0,c
 14463   005BEA  0E00               	movlw	0
 14464   005BEC  6E14               	movwf	(___flmul@b+2)^0,c
 14465   005BEE  0E00               	movlw	0
 14466   005BF0  6E15               	movwf	(___flmul@b+3)^0,c
 14467   005BF2                     l7094:
 14468   005BF2  5019               	movf	(___flmul@a+3)^0,w,c
 14469   005BF4  0B80               	andlw	128
 14470   005BF6  1A1E               	xorwf	___flmul@sign^0,f,c
 14471   005BF8  5019               	movf	(___flmul@a+3)^0,w,c
 14472   005BFA  2419               	addwf	(___flmul@a+3)^0,w,c
 14473   005BFC  6E1F               	movwf	___flmul@aexp^0,c
 14474   005BFE  AE18               	btfss	(___flmul@a+2)^0,7,c
 14475   005C00  EF04  F02E         	goto	u7511
 14476   005C04  EF06  F02E         	goto	u7510
 14477   005C08                     u7511:
 14478   005C08  EF07  F02E         	goto	l7102
 14479   005C0C                     u7510:
 14480   005C0C  801F               	bsf	___flmul@aexp^0,0,c
 14481   005C0E                     l7102:
 14482   005C0E  501F               	movf	___flmul@aexp^0,w,c
 14483   005C10  B4D8               	btfsc	status,2,c
 14484   005C12  EF0D  F02E         	goto	u7521
 14485   005C16  EF0F  F02E         	goto	u7520
 14486   005C1A                     u7521:
 14487   005C1A  EF22  F02E         	goto	l7110
 14488   005C1E                     u7520:
 14489   005C1E  281F               	incf	___flmul@aexp^0,w,c
 14490   005C20  A4D8               	btfss	status,2,c
 14491   005C22  EF15  F02E         	goto	u7531
 14492   005C26  EF17  F02E         	goto	u7530
 14493   005C2A                     u7531:
 14494   005C2A  EF1F  F02E         	goto	l7108
 14495   005C2E                     u7530:
 14496   005C2E  0E00               	movlw	0
 14497   005C30  6E16               	movwf	___flmul@a^0,c
 14498   005C32  0E00               	movlw	0
 14499   005C34  6E17               	movwf	(___flmul@a+1)^0,c
 14500   005C36  0E00               	movlw	0
 14501   005C38  6E18               	movwf	(___flmul@a+2)^0,c
 14502   005C3A  0E00               	movlw	0
 14503   005C3C  6E19               	movwf	(___flmul@a+3)^0,c
 14504   005C3E                     l7108:
 14505   005C3E  8E18               	bsf	(___flmul@a+2)^0,7,c
 14506   005C40  EF2A  F02E         	goto	l1179
 14507   005C44                     l7110:
 14508   005C44  0E00               	movlw	0
 14509   005C46  6E16               	movwf	___flmul@a^0,c
 14510   005C48  0E00               	movlw	0
 14511   005C4A  6E17               	movwf	(___flmul@a+1)^0,c
 14512   005C4C  0E00               	movlw	0
 14513   005C4E  6E18               	movwf	(___flmul@a+2)^0,c
 14514   005C50  0E00               	movlw	0
 14515   005C52  6E19               	movwf	(___flmul@a+3)^0,c
 14516   005C54                     l1179:
 14517   005C54  501F               	movf	___flmul@aexp^0,w,c
 14518   005C56  B4D8               	btfsc	status,2,c
 14519   005C58  EF30  F02E         	goto	u7541
 14520   005C5C  EF32  F02E         	goto	u7540
 14521   005C60                     u7541:
 14522   005C60  EF3A  F02E         	goto	l7114
 14523   005C64                     u7540:
 14524   005C64  5024               	movf	___flmul@bexp^0,w,c
 14525   005C66  A4D8               	btfss	status,2,c
 14526   005C68  EF38  F02E         	goto	u7551
 14527   005C6C  EF3A  F02E         	goto	u7550
 14528   005C70                     u7551:
 14529   005C70  EF44  F02E         	goto	l7118
 14530   005C74                     u7550:
 14531   005C74                     l7114:
 14532   005C74  0E00               	movlw	0
 14533   005C76  6E12               	movwf	?___flmul^0,c
 14534   005C78  0E00               	movlw	0
 14535   005C7A  6E13               	movwf	(?___flmul+1)^0,c
 14536   005C7C  0E00               	movlw	0
 14537   005C7E  6E14               	movwf	(?___flmul+2)^0,c
 14538   005C80  0E00               	movlw	0
 14539   005C82  6E15               	movwf	(?___flmul+3)^0,c
 14540   005C84  EFDC  F02F         	goto	l1183
 14541   005C88                     l7118:
 14542   005C88  5018               	movf	(___flmul@a+2)^0,w,c
 14543   005C8A  0212               	mulwf	___flmul@b^0,c
 14544   005C8C  CFF3 F029          	movff	prodl,___flmul@temp
 14545   005C90  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14546   005C94  5029               	movf	___flmul@temp^0,w,c
 14547   005C96  6E20               	movwf	___flmul@grs^0,c
 14548   005C98  6A21               	clrf	(___flmul@grs+1)^0,c
 14549   005C9A  6A22               	clrf	(___flmul@grs+2)^0,c
 14550   005C9C  6A23               	clrf	(___flmul@grs+3)^0,c
 14551   005C9E  502A               	movf	(___flmul@temp+1)^0,w,c
 14552   005CA0  6E25               	movwf	___flmul@prod^0,c
 14553   005CA2  6A26               	clrf	(___flmul@prod+1)^0,c
 14554   005CA4  6A27               	clrf	(___flmul@prod+2)^0,c
 14555   005CA6  6A28               	clrf	(___flmul@prod+3)^0,c
 14556   005CA8  5017               	movf	(___flmul@a+1)^0,w,c
 14557   005CAA  0213               	mulwf	(___flmul@b+1)^0,c
 14558   005CAC  CFF3 F029          	movff	prodl,___flmul@temp
 14559   005CB0  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14560   005CB4  5029               	movf	___flmul@temp^0,w,c
 14561   005CB6  2620               	addwf	___flmul@grs^0,f,c
 14562   005CB8  0E00               	movlw	0
 14563   005CBA  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14564   005CBC  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14565   005CBE  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14566   005CC0  502A               	movf	(___flmul@temp+1)^0,w,c
 14567   005CC2  2625               	addwf	___flmul@prod^0,f,c
 14568   005CC4  0E00               	movlw	0
 14569   005CC6  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14570   005CC8  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14571   005CCA  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14572   005CCC  5016               	movf	___flmul@a^0,w,c
 14573   005CCE  0214               	mulwf	(___flmul@b+2)^0,c
 14574   005CD0  CFF3 F029          	movff	prodl,___flmul@temp
 14575   005CD4  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14576   005CD8  5029               	movf	___flmul@temp^0,w,c
 14577   005CDA  2620               	addwf	___flmul@grs^0,f,c
 14578   005CDC  0E00               	movlw	0
 14579   005CDE  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14580   005CE0  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14581   005CE2  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14582   005CE4  502A               	movf	(___flmul@temp+1)^0,w,c
 14583   005CE6  2625               	addwf	___flmul@prod^0,f,c
 14584   005CE8  0E00               	movlw	0
 14585   005CEA  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14586   005CEC  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14587   005CEE  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14588   005CF0  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 14589   005CF4  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 14590   005CF8  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 14591   005CFC  6A20               	clrf	___flmul@grs^0,c
 14592   005CFE  5016               	movf	___flmul@a^0,w,c
 14593   005D00  0213               	mulwf	(___flmul@b+1)^0,c
 14594   005D02  CFF3 F029          	movff	prodl,___flmul@temp
 14595   005D06  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14596   005D0A  5029               	movf	___flmul@temp^0,w,c
 14597   005D0C  2620               	addwf	___flmul@grs^0,f,c
 14598   005D0E  502A               	movf	(___flmul@temp+1)^0,w,c
 14599   005D10  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14600   005D12  0E00               	movlw	0
 14601   005D14  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14602   005D16  0E00               	movlw	0
 14603   005D18  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14604   005D1A  5017               	movf	(___flmul@a+1)^0,w,c
 14605   005D1C  0212               	mulwf	___flmul@b^0,c
 14606   005D1E  CFF3 F029          	movff	prodl,___flmul@temp
 14607   005D22  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14608   005D26  5029               	movf	___flmul@temp^0,w,c
 14609   005D28  2620               	addwf	___flmul@grs^0,f,c
 14610   005D2A  502A               	movf	(___flmul@temp+1)^0,w,c
 14611   005D2C  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14612   005D2E  0E00               	movlw	0
 14613   005D30  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14614   005D32  0E00               	movlw	0
 14615   005D34  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14616   005D36  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 14617   005D3A  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 14618   005D3E  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 14619   005D42  6A20               	clrf	___flmul@grs^0,c
 14620   005D44  5016               	movf	___flmul@a^0,w,c
 14621   005D46  0212               	mulwf	___flmul@b^0,c
 14622   005D48  CFF3 F029          	movff	prodl,___flmul@temp
 14623   005D4C  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14624   005D50  5029               	movf	___flmul@temp^0,w,c
 14625   005D52  2620               	addwf	___flmul@grs^0,f,c
 14626   005D54  502A               	movf	(___flmul@temp+1)^0,w,c
 14627   005D56  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14628   005D58  0E00               	movlw	0
 14629   005D5A  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14630   005D5C  0E00               	movlw	0
 14631   005D5E  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14632   005D60  5018               	movf	(___flmul@a+2)^0,w,c
 14633   005D62  0213               	mulwf	(___flmul@b+1)^0,c
 14634   005D64  CFF3 F029          	movff	prodl,___flmul@temp
 14635   005D68  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14636   005D6C  5029               	movf	___flmul@temp^0,w,c
 14637   005D6E  2625               	addwf	___flmul@prod^0,f,c
 14638   005D70  502A               	movf	(___flmul@temp+1)^0,w,c
 14639   005D72  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14640   005D74  0E00               	movlw	0
 14641   005D76  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14642   005D78  0E00               	movlw	0
 14643   005D7A  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14644   005D7C  5017               	movf	(___flmul@a+1)^0,w,c
 14645   005D7E  0214               	mulwf	(___flmul@b+2)^0,c
 14646   005D80  CFF3 F029          	movff	prodl,___flmul@temp
 14647   005D84  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14648   005D88  5029               	movf	___flmul@temp^0,w,c
 14649   005D8A  2625               	addwf	___flmul@prod^0,f,c
 14650   005D8C  502A               	movf	(___flmul@temp+1)^0,w,c
 14651   005D8E  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14652   005D90  0E00               	movlw	0
 14653   005D92  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14654   005D94  0E00               	movlw	0
 14655   005D96  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14656   005D98  5018               	movf	(___flmul@a+2)^0,w,c
 14657   005D9A  0214               	mulwf	(___flmul@b+2)^0,c
 14658   005D9C  CFF3 F029          	movff	prodl,___flmul@temp
 14659   005DA0  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14660   005DA4  5029               	movf	___flmul@temp^0,w,c
 14661   005DA6  6E1A               	movwf	??___flmul^0,c
 14662   005DA8  502A               	movf	(___flmul@temp+1)^0,w,c
 14663   005DAA  6E1B               	movwf	(??___flmul+1)^0,c
 14664   005DAC  6A1C               	clrf	(??___flmul+2)^0,c
 14665   005DAE  6A1D               	clrf	(??___flmul+3)^0,c
 14666   005DB0  C01C  F01D         	movff	??___flmul+2,??___flmul+3
 14667   005DB4  C01B  F01C         	movff	??___flmul+1,??___flmul+2
 14668   005DB8  C01A  F01B         	movff	??___flmul,??___flmul+1
 14669   005DBC  6A1A               	clrf	??___flmul^0,c
 14670   005DBE  501A               	movf	??___flmul^0,w,c
 14671   005DC0  2625               	addwf	___flmul@prod^0,f,c
 14672   005DC2  501B               	movf	(??___flmul+1)^0,w,c
 14673   005DC4  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14674   005DC6  501C               	movf	(??___flmul+2)^0,w,c
 14675   005DC8  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14676   005DCA  501D               	movf	(??___flmul+3)^0,w,c
 14677   005DCC  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14678   005DCE  C020  F01A         	movff	___flmul@grs,??___flmul
 14679   005DD2  C021  F01B         	movff	___flmul@grs+1,??___flmul+1
 14680   005DD6  C022  F01C         	movff	___flmul@grs+2,??___flmul+2
 14681   005DDA  C023  F01D         	movff	___flmul@grs+3,??___flmul+3
 14682   005DDE  0E19               	movlw	25
 14683   005DE0  EFF7  F02E         	goto	u7560
 14684   005DE4                     u7565:
 14685   005DE4  90D8               	bcf	status,0,c
 14686   005DE6  321D               	rrcf	(??___flmul+3)^0,f,c
 14687   005DE8  321C               	rrcf	(??___flmul+2)^0,f,c
 14688   005DEA  321B               	rrcf	(??___flmul+1)^0,f,c
 14689   005DEC  321A               	rrcf	??___flmul^0,f,c
 14690   005DEE                     u7560:
 14691   005DEE  2EE8               	decfsz	wreg,f,c
 14692   005DF0  EFF2  F02E         	goto	u7565
 14693   005DF4  501A               	movf	??___flmul^0,w,c
 14694   005DF6  2625               	addwf	___flmul@prod^0,f,c
 14695   005DF8  501B               	movf	(??___flmul+1)^0,w,c
 14696   005DFA  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14697   005DFC  501C               	movf	(??___flmul+2)^0,w,c
 14698   005DFE  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14699   005E00  501D               	movf	(??___flmul+3)^0,w,c
 14700   005E02  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14701   005E04  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 14702   005E08  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 14703   005E0C  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 14704   005E10  6A20               	clrf	___flmul@grs^0,c
 14705   005E12  501F               	movf	___flmul@aexp^0,w,c
 14706   005E14  C024  F01A         	movff	___flmul@bexp,??___flmul
 14707   005E18  6A1B               	clrf	(??___flmul+1)^0,c
 14708   005E1A  261A               	addwf	??___flmul^0,f,c
 14709   005E1C  0E00               	movlw	0
 14710   005E1E  221B               	addwfc	(??___flmul+1)^0,f,c
 14711   005E20  0E82               	movlw	130
 14712   005E22  241A               	addwf	??___flmul^0,w,c
 14713   005E24  6E29               	movwf	___flmul@temp^0,c
 14714   005E26  0EFF               	movlw	255
 14715   005E28  201B               	addwfc	(??___flmul+1)^0,w,c
 14716   005E2A  6E2A               	movwf	(___flmul@temp+1)^0,c
 14717   005E2C  EF2D  F02F         	goto	l7166
 14718   005E30                     l7160:
 14719   005E30  90D8               	bcf	status,0,c
 14720   005E32  3625               	rlcf	___flmul@prod^0,f,c
 14721   005E34  3626               	rlcf	(___flmul@prod+1)^0,f,c
 14722   005E36  3627               	rlcf	(___flmul@prod+2)^0,f,c
 14723   005E38  3628               	rlcf	(___flmul@prod+3)^0,f,c
 14724   005E3A  AE23               	btfss	(___flmul@grs+3)^0,7,c
 14725   005E3C  EF22  F02F         	goto	u7571
 14726   005E40  EF24  F02F         	goto	u7570
 14727   005E44                     u7571:
 14728   005E44  EF25  F02F         	goto	l1186
 14729   005E48                     u7570:
 14730   005E48  8025               	bsf	___flmul@prod^0,0,c
 14731   005E4A                     l1186:
 14732   005E4A  90D8               	bcf	status,0,c
 14733   005E4C  3620               	rlcf	___flmul@grs^0,f,c
 14734   005E4E  3621               	rlcf	(___flmul@grs+1)^0,f,c
 14735   005E50  3622               	rlcf	(___flmul@grs+2)^0,f,c
 14736   005E52  3623               	rlcf	(___flmul@grs+3)^0,f,c
 14737   005E54  0629               	decf	___flmul@temp^0,f,c
 14738   005E56  A0D8               	btfss	status,0,c
 14739   005E58  062A               	decf	(___flmul@temp+1)^0,f,c
 14740   005E5A                     l7166:
 14741   005E5A  AE27               	btfss	(___flmul@prod+2)^0,7,c
 14742   005E5C  EF32  F02F         	goto	u7581
 14743   005E60  EF34  F02F         	goto	u7580
 14744   005E64                     u7581:
 14745   005E64  EF18  F02F         	goto	l7160
 14746   005E68                     u7580:
 14747   005E68  0E00               	movlw	0
 14748   005E6A  6E1F               	movwf	___flmul@aexp^0,c
 14749   005E6C  AE23               	btfss	(___flmul@grs+3)^0,7,c
 14750   005E6E  EF3B  F02F         	goto	u7591
 14751   005E72  EF3D  F02F         	goto	u7590
 14752   005E76                     u7591:
 14753   005E76  EF61  F02F         	goto	l1188
 14754   005E7A                     u7590:
 14755   005E7A  0EFF               	movlw	255
 14756   005E7C  1420               	andwf	___flmul@grs^0,w,c
 14757   005E7E  6E1A               	movwf	??___flmul^0,c
 14758   005E80  0EFF               	movlw	255
 14759   005E82  1421               	andwf	(___flmul@grs+1)^0,w,c
 14760   005E84  6E1B               	movwf	(??___flmul+1)^0,c
 14761   005E86  0EFF               	movlw	255
 14762   005E88  1422               	andwf	(___flmul@grs+2)^0,w,c
 14763   005E8A  6E1C               	movwf	(??___flmul+2)^0,c
 14764   005E8C  0E7F               	movlw	127
 14765   005E8E  1423               	andwf	(___flmul@grs+3)^0,w,c
 14766   005E90  6E1D               	movwf	(??___flmul+3)^0,c
 14767   005E92  501A               	movf	??___flmul^0,w,c
 14768   005E94  101B               	iorwf	(??___flmul+1)^0,w,c
 14769   005E96  101C               	iorwf	(??___flmul+2)^0,w,c
 14770   005E98  101D               	iorwf	(??___flmul+3)^0,w,c
 14771   005E9A  B4D8               	btfsc	status,2,c
 14772   005E9C  EF52  F02F         	goto	u7601
 14773   005EA0  EF54  F02F         	goto	u7600
 14774   005EA4                     u7601:
 14775   005EA4  EF58  F02F         	goto	l1189
 14776   005EA8                     u7600:
 14777   005EA8                     l7174:
 14778   005EA8  0E01               	movlw	1
 14779   005EAA  6E1F               	movwf	___flmul@aexp^0,c
 14780   005EAC  EF61  F02F         	goto	l1188
 14781   005EB0                     l1189:
 14782   005EB0  A025               	btfss	___flmul@prod^0,0,c
 14783   005EB2  EF5D  F02F         	goto	u7611
 14784   005EB6  EF5F  F02F         	goto	u7610
 14785   005EBA                     u7611:
 14786   005EBA  EF61  F02F         	goto	l1188
 14787   005EBE                     u7610:
 14788   005EBE  EF54  F02F         	goto	l7174
 14789   005EC2                     l1188:
 14790   005EC2  501F               	movf	___flmul@aexp^0,w,c
 14791   005EC4  B4D8               	btfsc	status,2,c
 14792   005EC6  EF67  F02F         	goto	u7621
 14793   005ECA  EF69  F02F         	goto	u7620
 14794   005ECE                     u7621:
 14795   005ECE  EF8D  F02F         	goto	l7186
 14796   005ED2                     u7620:
 14797   005ED2  0E01               	movlw	1
 14798   005ED4  2625               	addwf	___flmul@prod^0,f,c
 14799   005ED6  0E00               	movlw	0
 14800   005ED8  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14801   005EDA  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14802   005EDC  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14803   005EDE  A028               	btfss	(___flmul@prod+3)^0,0,c
 14804   005EE0  EF74  F02F         	goto	u7631
 14805   005EE4  EF76  F02F         	goto	u7630
 14806   005EE8                     u7631:
 14807   005EE8  EF8D  F02F         	goto	l7186
 14808   005EEC                     u7630:
 14809   005EEC  C025  F01A         	movff	___flmul@prod,??___flmul
 14810   005EF0  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
 14811   005EF4  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
 14812   005EF8  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
 14813   005EFC  341D               	rlcf	(??___flmul+3)^0,w,c
 14814   005EFE  321D               	rrcf	(??___flmul+3)^0,f,c
 14815   005F00  321C               	rrcf	(??___flmul+2)^0,f,c
 14816   005F02  321B               	rrcf	(??___flmul+1)^0,f,c
 14817   005F04  321A               	rrcf	??___flmul^0,f,c
 14818   005F06  C01A  F025         	movff	??___flmul,___flmul@prod
 14819   005F0A  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
 14820   005F0E  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
 14821   005F12  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
 14822   005F16  4A29               	infsnz	___flmul@temp^0,f,c
 14823   005F18  2A2A               	incf	(___flmul@temp+1)^0,f,c
 14824   005F1A                     l7186:
 14825   005F1A  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 14826   005F1C  EF98  F02F         	goto	u7641
 14827   005F20  502A               	movf	(___flmul@temp+1)^0,w,c
 14828   005F22  E108               	bnz	u7640
 14829   005F24  2829               	incf	___flmul@temp^0,w,c
 14830   005F26  A0D8               	btfss	status,0,c
 14831   005F28  EF98  F02F         	goto	u7641
 14832   005F2C  EF9A  F02F         	goto	u7640
 14833   005F30                     u7641:
 14834   005F30  EFA4  F02F         	goto	l7190
 14835   005F34                     u7640:
 14836   005F34  0E00               	movlw	0
 14837   005F36  6E25               	movwf	___flmul@prod^0,c
 14838   005F38  0E00               	movlw	0
 14839   005F3A  6E26               	movwf	(___flmul@prod+1)^0,c
 14840   005F3C  0E80               	movlw	128
 14841   005F3E  6E27               	movwf	(___flmul@prod+2)^0,c
 14842   005F40  0E7F               	movlw	127
 14843   005F42  6E28               	movwf	(___flmul@prod+3)^0,c
 14844   005F44  EFD2  F02F         	goto	l7202
 14845   005F48                     l7190:
 14846   005F48  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 14847   005F4A  EFB1  F02F         	goto	u7650
 14848   005F4E  502A               	movf	(___flmul@temp+1)^0,w,c
 14849   005F50  E106               	bnz	u7651
 14850   005F52  0429               	decf	___flmul@temp^0,w,c
 14851   005F54  B0D8               	btfsc	status,0,c
 14852   005F56  EFAF  F02F         	goto	u7651
 14853   005F5A  EFB1  F02F         	goto	u7650
 14854   005F5E                     u7651:
 14855   005F5E  EFBD  F02F         	goto	l1196
 14856   005F62                     u7650:
 14857   005F62  0E00               	movlw	0
 14858   005F64  6E25               	movwf	___flmul@prod^0,c
 14859   005F66  0E00               	movlw	0
 14860   005F68  6E26               	movwf	(___flmul@prod+1)^0,c
 14861   005F6A  0E00               	movlw	0
 14862   005F6C  6E27               	movwf	(___flmul@prod+2)^0,c
 14863   005F6E  0E00               	movlw	0
 14864   005F70  6E28               	movwf	(___flmul@prod+3)^0,c
 14865   005F72  0E00               	movlw	0
 14866   005F74  6E1E               	movwf	___flmul@sign^0,c
 14867   005F76  EFD2  F02F         	goto	l7202
 14868   005F7A                     l1196:
 14869   005F7A  C029  F024         	movff	___flmul@temp,___flmul@bexp
 14870   005F7E  0EFF               	movlw	255
 14871   005F80  1625               	andwf	___flmul@prod^0,f,c
 14872   005F82  0EFF               	movlw	255
 14873   005F84  1626               	andwf	(___flmul@prod+1)^0,f,c
 14874   005F86  0E7F               	movlw	127
 14875   005F88  1627               	andwf	(___flmul@prod+2)^0,f,c
 14876   005F8A  0E00               	movlw	0
 14877   005F8C  1628               	andwf	(___flmul@prod+3)^0,f,c
 14878   005F8E  A024               	btfss	___flmul@bexp^0,0,c
 14879   005F90  EFCC  F02F         	goto	u7661
 14880   005F94  EFCE  F02F         	goto	u7660
 14881   005F98                     u7661:
 14882   005F98  EFCF  F02F         	goto	l7200
 14883   005F9C                     u7660:
 14884   005F9C  8E27               	bsf	(___flmul@prod+2)^0,7,c
 14885   005F9E                     l7200:
 14886   005F9E  90D8               	bcf	status,0,c
 14887   005FA0  3024               	rrcf	___flmul@bexp^0,w,c
 14888   005FA2  6E28               	movwf	(___flmul@prod+3)^0,c
 14889   005FA4                     l7202:
 14890   005FA4  501E               	movf	___flmul@sign^0,w,c
 14891   005FA6  1228               	iorwf	(___flmul@prod+3)^0,f,c
 14892   005FA8  C025  F012         	movff	___flmul@prod,?___flmul
 14893   005FAC  C026  F013         	movff	___flmul@prod+1,?___flmul+1
 14894   005FB0  C027  F014         	movff	___flmul@prod+2,?___flmul+2
 14895   005FB4  C028  F015         	movff	___flmul@prod+3,?___flmul+3
 14896   005FB8                     l1183:
 14897   005FB8  0012               	return		;funcret
 14898   005FBA                     __end_of___flmul:
 14899                           	callstack 0
 14900                           
 14901 ;; *************** function ___xxtofl *****************
 14902 ;; Defined at:
 14903 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 14904 ;; Parameters:    Size  Location     Type
 14905 ;;  sign            1    wreg     unsigned char 
 14906 ;;  val             4    1[COMRAM] long 
 14907 ;; Auto vars:     Size  Location     Type
 14908 ;;  sign            1    9[COMRAM] unsigned char 
 14909 ;;  arg             4   11[COMRAM] unsigned long 
 14910 ;;  exp             1   10[COMRAM] unsigned char 
 14911 ;; Return value:  Size  Location     Type
 14912 ;;                  4    1[COMRAM] unsigned char 
 14913 ;; Registers used:
 14914 ;;		wreg, status,2, status,0
 14915 ;; Tracked objects:
 14916 ;;		On entry : 0/0
 14917 ;;		On exit  : 0/0
 14918 ;;		Unchanged: 0/0
 14919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14921 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14922 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14923 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14924 ;;Total ram usage:       14 bytes
 14925 ;; Hardware stack levels used: 1
 14926 ;; Hardware stack levels required when called: 2
 14927 ;; This function calls:
 14928 ;;		Nothing
 14929 ;; This function is called by:
 14930 ;;		_decide_action
 14931 ;;		_powf
 14932 ;; This function uses a non-reentrant model
 14933 ;;
 14934                           
 14935                           	psect	text40
 14936   006D60                     __ptext40:
 14937                           	callstack 0
 14938   006D60                     ___xxtofl:
 14939                           	callstack 26
 14940                           
 14941                           ;incstack = 0
 14942                           ;___xxtofl@sign stored from wreg
 14943   006D60  6E0A               	movwf	___xxtofl@sign^0,c
 14944   006D62  500A               	movf	___xxtofl@sign^0,w,c
 14945   006D64  B4D8               	btfsc	status,2,c
 14946   006D66  EFB7  F036         	goto	u5221
 14947   006D6A  EFB9  F036         	goto	u5220
 14948   006D6E                     u5221:
 14949   006D6E  EFDB  F036         	goto	l1220
 14950   006D72                     u5220:
 14951   006D72  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 14952   006D74  EFC0  F036         	goto	u5230
 14953   006D78  EFBE  F036         	goto	u5231
 14954   006D7C                     u5231:
 14955   006D7C  EFDB  F036         	goto	l1220
 14956   006D80                     u5230:
 14957   006D80  C002  F006         	movff	___xxtofl@val,??___xxtofl
 14958   006D84  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
 14959   006D88  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
 14960   006D8C  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
 14961   006D90  1E06               	comf	??___xxtofl^0,f,c
 14962   006D92  1E07               	comf	(??___xxtofl+1)^0,f,c
 14963   006D94  1E08               	comf	(??___xxtofl+2)^0,f,c
 14964   006D96  1E09               	comf	(??___xxtofl+3)^0,f,c
 14965   006D98  2A06               	incf	??___xxtofl^0,f,c
 14966   006D9A  0E00               	movlw	0
 14967   006D9C  2207               	addwfc	(??___xxtofl+1)^0,f,c
 14968   006D9E  2208               	addwfc	(??___xxtofl+2)^0,f,c
 14969   006DA0  2209               	addwfc	(??___xxtofl+3)^0,f,c
 14970   006DA2  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
 14971   006DA6  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
 14972   006DAA  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
 14973   006DAE  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
 14974   006DB2  EFE3  F036         	goto	l5254
 14975   006DB6                     l1220:
 14976   006DB6  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
 14977   006DBA  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14978   006DBE  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14979   006DC2  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14980   006DC6                     l5254:
 14981   006DC6  5002               	movf	___xxtofl@val^0,w,c
 14982   006DC8  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 14983   006DCA  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 14984   006DCC  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 14985   006DCE  A4D8               	btfss	status,2,c
 14986   006DD0  EFEC  F036         	goto	u5241
 14987   006DD4  EFEE  F036         	goto	u5240
 14988   006DD8                     u5241:
 14989   006DD8  EFF8  F036         	goto	l5260
 14990   006DDC                     u5240:
 14991   006DDC  0E00               	movlw	0
 14992   006DDE  6E02               	movwf	?___xxtofl^0,c
 14993   006DE0  0E00               	movlw	0
 14994   006DE2  6E03               	movwf	(?___xxtofl+1)^0,c
 14995   006DE4  0E00               	movlw	0
 14996   006DE6  6E04               	movwf	(?___xxtofl+2)^0,c
 14997   006DE8  0E00               	movlw	0
 14998   006DEA  6E05               	movwf	(?___xxtofl+3)^0,c
 14999   006DEC  EF89  F037         	goto	l1223
 15000   006DF0                     l5260:
 15001   006DF0  0E96               	movlw	150
 15002   006DF2  6E0B               	movwf	___xxtofl@exp^0,c
 15003   006DF4  EF02  F037         	goto	l5264
 15004   006DF8                     l5262:
 15005   006DF8  2A0B               	incf	___xxtofl@exp^0,f,c
 15006   006DFA  90D8               	bcf	status,0,c
 15007   006DFC  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 15008   006DFE  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 15009   006E00  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 15010   006E02  320C               	rrcf	___xxtofl@arg^0,f,c
 15011   006E04                     l5264:
 15012   006E04  0E00               	movlw	0
 15013   006E06  140C               	andwf	___xxtofl@arg^0,w,c
 15014   006E08  6E06               	movwf	??___xxtofl^0,c
 15015   006E0A  0E00               	movlw	0
 15016   006E0C  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 15017   006E0E  6E07               	movwf	(??___xxtofl+1)^0,c
 15018   006E10  0E00               	movlw	0
 15019   006E12  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 15020   006E14  6E08               	movwf	(??___xxtofl+2)^0,c
 15021   006E16  0EFE               	movlw	254
 15022   006E18  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 15023   006E1A  6E09               	movwf	(??___xxtofl+3)^0,c
 15024   006E1C  5006               	movf	??___xxtofl^0,w,c
 15025   006E1E  1007               	iorwf	(??___xxtofl+1)^0,w,c
 15026   006E20  1008               	iorwf	(??___xxtofl+2)^0,w,c
 15027   006E22  1009               	iorwf	(??___xxtofl+3)^0,w,c
 15028   006E24  A4D8               	btfss	status,2,c
 15029   006E26  EF17  F037         	goto	u5251
 15030   006E2A  EF19  F037         	goto	u5250
 15031   006E2E                     u5251:
 15032   006E2E  EFFC  F036         	goto	l5262
 15033   006E32                     u5250:
 15034   006E32  EF27  F037         	goto	l1227
 15035   006E36                     l5266:
 15036   006E36  2A0B               	incf	___xxtofl@exp^0,f,c
 15037   006E38  0E01               	movlw	1
 15038   006E3A  260C               	addwf	___xxtofl@arg^0,f,c
 15039   006E3C  0E00               	movlw	0
 15040   006E3E  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 15041   006E40  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 15042   006E42  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 15043   006E44  90D8               	bcf	status,0,c
 15044   006E46  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 15045   006E48  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 15046   006E4A  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 15047   006E4C  320C               	rrcf	___xxtofl@arg^0,f,c
 15048   006E4E                     l1227:
 15049   006E4E  0E00               	movlw	0
 15050   006E50  140C               	andwf	___xxtofl@arg^0,w,c
 15051   006E52  6E06               	movwf	??___xxtofl^0,c
 15052   006E54  0E00               	movlw	0
 15053   006E56  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 15054   006E58  6E07               	movwf	(??___xxtofl+1)^0,c
 15055   006E5A  0E00               	movlw	0
 15056   006E5C  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 15057   006E5E  6E08               	movwf	(??___xxtofl+2)^0,c
 15058   006E60  0EFF               	movlw	255
 15059   006E62  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 15060   006E64  6E09               	movwf	(??___xxtofl+3)^0,c
 15061   006E66  5006               	movf	??___xxtofl^0,w,c
 15062   006E68  1007               	iorwf	(??___xxtofl+1)^0,w,c
 15063   006E6A  1008               	iorwf	(??___xxtofl+2)^0,w,c
 15064   006E6C  1009               	iorwf	(??___xxtofl+3)^0,w,c
 15065   006E6E  A4D8               	btfss	status,2,c
 15066   006E70  EF3C  F037         	goto	u5261
 15067   006E74  EF3E  F037         	goto	u5260
 15068   006E78                     u5261:
 15069   006E78  EF1B  F037         	goto	l5266
 15070   006E7C                     u5260:
 15071   006E7C  EF46  F037         	goto	l5274
 15072   006E80                     l5272:
 15073   006E80  060B               	decf	___xxtofl@exp^0,f,c
 15074   006E82  90D8               	bcf	status,0,c
 15075   006E84  360C               	rlcf	___xxtofl@arg^0,f,c
 15076   006E86  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 15077   006E88  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 15078   006E8A  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 15079   006E8C                     l5274:
 15080   006E8C  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 15081   006E8E  EF4B  F037         	goto	u5271
 15082   006E92  EF4D  F037         	goto	u5270
 15083   006E96                     u5271:
 15084   006E96  EF55  F037         	goto	l1234
 15085   006E9A                     u5270:
 15086   006E9A  0E02               	movlw	2
 15087   006E9C  600B               	cpfslt	___xxtofl@exp^0,c
 15088   006E9E  EF53  F037         	goto	u5281
 15089   006EA2  EF55  F037         	goto	u5280
 15090   006EA6                     u5281:
 15091   006EA6  EF40  F037         	goto	l5272
 15092   006EAA                     u5280:
 15093   006EAA                     l1234:
 15094   006EAA  B00B               	btfsc	___xxtofl@exp^0,0,c
 15095   006EAC  EF5A  F037         	goto	u5291
 15096   006EB0  EF5C  F037         	goto	u5290
 15097   006EB4                     u5291:
 15098   006EB4  EF5D  F037         	goto	l5280
 15099   006EB8                     u5290:
 15100   006EB8  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 15101   006EBA                     l5280:
 15102   006EBA  90D8               	bcf	status,0,c
 15103   006EBC  320B               	rrcf	___xxtofl@exp^0,f,c
 15104   006EBE  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
 15105   006EC2  6A07               	clrf	(??___xxtofl+1)^0,c
 15106   006EC4  6A08               	clrf	(??___xxtofl+2)^0,c
 15107   006EC6  6A09               	clrf	(??___xxtofl+3)^0,c
 15108   006EC8  C006  F009         	movff	??___xxtofl,??___xxtofl+3
 15109   006ECC  6A08               	clrf	(??___xxtofl+2)^0,c
 15110   006ECE  6A07               	clrf	(??___xxtofl+1)^0,c
 15111   006ED0  6A06               	clrf	??___xxtofl^0,c
 15112   006ED2  5006               	movf	??___xxtofl^0,w,c
 15113   006ED4  120C               	iorwf	___xxtofl@arg^0,f,c
 15114   006ED6  5007               	movf	(??___xxtofl+1)^0,w,c
 15115   006ED8  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 15116   006EDA  5008               	movf	(??___xxtofl+2)^0,w,c
 15117   006EDC  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 15118   006EDE  5009               	movf	(??___xxtofl+3)^0,w,c
 15119   006EE0  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 15120   006EE2  500A               	movf	___xxtofl@sign^0,w,c
 15121   006EE4  B4D8               	btfsc	status,2,c
 15122   006EE6  EF77  F037         	goto	u5301
 15123   006EEA  EF79  F037         	goto	u5300
 15124   006EEE                     u5301:
 15125   006EEE  EF81  F037         	goto	l5290
 15126   006EF2                     u5300:
 15127   006EF2  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 15128   006EF4  EF80  F037         	goto	u5310
 15129   006EF8  EF7E  F037         	goto	u5311
 15130   006EFC                     u5311:
 15131   006EFC  EF81  F037         	goto	l5290
 15132   006F00                     u5310:
 15133   006F00  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 15134   006F02                     l5290:
 15135   006F02  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
 15136   006F06  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
 15137   006F0A  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
 15138   006F0E  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
 15139   006F12                     l1223:
 15140   006F12  0012               	return		;funcret
 15141   006F14                     __end_of___xxtofl:
 15142                           	callstack 0
 15143                           
 15144 ;; *************** function ___flsub *****************
 15145 ;; Defined at:
 15146 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 15147 ;; Parameters:    Size  Location     Type
 15148 ;;  b               4   67[COMRAM] unsigned char 
 15149 ;;  a               4   71[COMRAM] unsigned char 
 15150 ;; Auto vars:     Size  Location     Type
 15151 ;;		None
 15152 ;; Return value:  Size  Location     Type
 15153 ;;                  4   67[COMRAM] unsigned char 
 15154 ;; Registers used:
 15155 ;;		wreg, status,2, status,0, cstack
 15156 ;; Tracked objects:
 15157 ;;		On entry : 0/0
 15158 ;;		On exit  : 0/0
 15159 ;;		Unchanged: 0/0
 15160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15161 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15164 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15165 ;;Total ram usage:        8 bytes
 15166 ;; Hardware stack levels used: 1
 15167 ;; Hardware stack levels required when called: 3
 15168 ;; This function calls:
 15169 ;;		___fladd
 15170 ;; This function is called by:
 15171 ;;		_decide_action
 15172 ;;		_efgtoa
 15173 ;;		_powf
 15174 ;; This function uses a non-reentrant model
 15175 ;;
 15176                           
 15177                           	psect	text41
 15178   0081AE                     __ptext41:
 15179                           	callstack 0
 15180   0081AE                     ___flsub:
 15181                           	callstack 22
 15182   0081AE  0E00               	movlw	0
 15183   0081B0  1A48               	xorwf	___flsub@a^0,f,c
 15184   0081B2  0E00               	movlw	0
 15185   0081B4  1A49               	xorwf	(___flsub@a+1)^0,f,c
 15186   0081B6  0E00               	movlw	0
 15187   0081B8  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 15188   0081BA  0E80               	movlw	128
 15189   0081BC  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 15190   0081BE  C044  F002         	movff	___flsub@b,___fladd@b
 15191   0081C2  C045  F003         	movff	___flsub@b+1,___fladd@b+1
 15192   0081C6  C046  F004         	movff	___flsub@b+2,___fladd@b+2
 15193   0081CA  C047  F005         	movff	___flsub@b+3,___fladd@b+3
 15194   0081CE  C048  F006         	movff	___flsub@a,___fladd@a
 15195   0081D2  C049  F007         	movff	___flsub@a+1,___fladd@a+1
 15196   0081D6  C04A  F008         	movff	___flsub@a+2,___fladd@a+2
 15197   0081DA  C04B  F009         	movff	___flsub@a+3,___fladd@a+3
 15198   0081DE  EC68  F02B         	call	___fladd	;wreg free
 15199   0081E2  C002  F044         	movff	?___fladd,?___flsub
 15200   0081E6  C003  F045         	movff	?___fladd+1,?___flsub+1
 15201   0081EA  C004  F046         	movff	?___fladd+2,?___flsub+2
 15202   0081EE  C005  F047         	movff	?___fladd+3,?___flsub+3
 15203   0081F2  0012               	return		;funcret
 15204   0081F4                     __end_of___flsub:
 15205                           	callstack 0
 15206                           
 15207 ;; *************** function ___fladd *****************
 15208 ;; Defined at:
 15209 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 15210 ;; Parameters:    Size  Location     Type
 15211 ;;  b               4    1[COMRAM] unsigned char 
 15212 ;;  a               4    5[COMRAM] unsigned char 
 15213 ;; Auto vars:     Size  Location     Type
 15214 ;;  grs             1   16[COMRAM] unsigned char 
 15215 ;;  bexp            1   15[COMRAM] unsigned char 
 15216 ;;  aexp            1   14[COMRAM] unsigned char 
 15217 ;;  signs           1   13[COMRAM] unsigned char 
 15218 ;; Return value:  Size  Location     Type
 15219 ;;                  4    1[COMRAM] unsigned char 
 15220 ;; Registers used:
 15221 ;;		wreg, status,2, status,0
 15222 ;; Tracked objects:
 15223 ;;		On entry : 0/0
 15224 ;;		On exit  : 0/0
 15225 ;;		Unchanged: 0/0
 15226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15227 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15228 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15229 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15230 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15231 ;;Total ram usage:       16 bytes
 15232 ;; Hardware stack levels used: 1
 15233 ;; Hardware stack levels required when called: 2
 15234 ;; This function calls:
 15235 ;;		Nothing
 15236 ;; This function is called by:
 15237 ;;		_decide_action
 15238 ;;		___flsub
 15239 ;;		_efgtoa
 15240 ;;		_powf
 15241 ;; This function uses a non-reentrant model
 15242 ;;
 15243                           
 15244                           	psect	text42
 15245   0056D0                     __ptext42:
 15246                           	callstack 0
 15247   0056D0                     ___fladd:
 15248                           	callstack 22
 15249   0056D0  5005               	movf	(___fladd@b+3)^0,w,c
 15250   0056D2  0B80               	andlw	128
 15251   0056D4  6E0E               	movwf	___fladd@signs^0,c
 15252   0056D6  5005               	movf	(___fladd@b+3)^0,w,c
 15253   0056D8  2405               	addwf	(___fladd@b+3)^0,w,c
 15254   0056DA  6E10               	movwf	___fladd@bexp^0,c
 15255   0056DC  AE04               	btfss	(___fladd@b+2)^0,7,c
 15256   0056DE  EF73  F02B         	goto	u6851
 15257   0056E2  EF75  F02B         	goto	u6850
 15258   0056E6                     u6851:
 15259   0056E6  EF76  F02B         	goto	l6736
 15260   0056EA                     u6850:
 15261   0056EA  8010               	bsf	___fladd@bexp^0,0,c
 15262   0056EC                     l6736:
 15263   0056EC  5010               	movf	___fladd@bexp^0,w,c
 15264   0056EE  B4D8               	btfsc	status,2,c
 15265   0056F0  EF7C  F02B         	goto	u6861
 15266   0056F4  EF7E  F02B         	goto	u6860
 15267   0056F8                     u6861:
 15268   0056F8  EF93  F02B         	goto	l6746
 15269   0056FC                     u6860:
 15270   0056FC  2810               	incf	___fladd@bexp^0,w,c
 15271   0056FE  A4D8               	btfss	status,2,c
 15272   005700  EF84  F02B         	goto	u6871
 15273   005704  EF86  F02B         	goto	u6870
 15274   005708                     u6871:
 15275   005708  EF8E  F02B         	goto	l6742
 15276   00570C                     u6870:
 15277   00570C  0E00               	movlw	0
 15278   00570E  6E02               	movwf	___fladd@b^0,c
 15279   005710  0E00               	movlw	0
 15280   005712  6E03               	movwf	(___fladd@b+1)^0,c
 15281   005714  0E00               	movlw	0
 15282   005716  6E04               	movwf	(___fladd@b+2)^0,c
 15283   005718  0E00               	movlw	0
 15284   00571A  6E05               	movwf	(___fladd@b+3)^0,c
 15285   00571C                     l6742:
 15286   00571C  8E04               	bsf	(___fladd@b+2)^0,7,c
 15287   00571E  0E00               	movlw	0
 15288   005720  6E05               	movwf	(___fladd@b+3)^0,c
 15289   005722  EF9B  F02B         	goto	l6748
 15290   005726                     l6746:
 15291   005726  0E00               	movlw	0
 15292   005728  6E02               	movwf	___fladd@b^0,c
 15293   00572A  0E00               	movlw	0
 15294   00572C  6E03               	movwf	(___fladd@b+1)^0,c
 15295   00572E  0E00               	movlw	0
 15296   005730  6E04               	movwf	(___fladd@b+2)^0,c
 15297   005732  0E00               	movlw	0
 15298   005734  6E05               	movwf	(___fladd@b+3)^0,c
 15299   005736                     l6748:
 15300   005736  5009               	movf	(___fladd@a+3)^0,w,c
 15301   005738  0B80               	andlw	128
 15302   00573A  6E0F               	movwf	___fladd@aexp^0,c
 15303   00573C  500E               	movf	___fladd@signs^0,w,c
 15304   00573E  180F               	xorwf	___fladd@aexp^0,w,c
 15305   005740  B4D8               	btfsc	status,2,c
 15306   005742  EFA5  F02B         	goto	u6881
 15307   005746  EFA7  F02B         	goto	u6880
 15308   00574A                     u6881:
 15309   00574A  EFA8  F02B         	goto	l6754
 15310   00574E                     u6880:
 15311   00574E  8C0E               	bsf	___fladd@signs^0,6,c
 15312   005750                     l6754:
 15313   005750  5009               	movf	(___fladd@a+3)^0,w,c
 15314   005752  2409               	addwf	(___fladd@a+3)^0,w,c
 15315   005754  6E0F               	movwf	___fladd@aexp^0,c
 15316   005756  AE08               	btfss	(___fladd@a+2)^0,7,c
 15317   005758  EFB0  F02B         	goto	u6891
 15318   00575C  EFB2  F02B         	goto	u6890
 15319   005760                     u6891:
 15320   005760  EFB3  F02B         	goto	l6760
 15321   005764                     u6890:
 15322   005764  800F               	bsf	___fladd@aexp^0,0,c
 15323   005766                     l6760:
 15324   005766  500F               	movf	___fladd@aexp^0,w,c
 15325   005768  B4D8               	btfsc	status,2,c
 15326   00576A  EFB9  F02B         	goto	u6901
 15327   00576E  EFBB  F02B         	goto	u6900
 15328   005772                     u6901:
 15329   005772  EFD0  F02B         	goto	l6770
 15330   005776                     u6900:
 15331   005776  280F               	incf	___fladd@aexp^0,w,c
 15332   005778  A4D8               	btfss	status,2,c
 15333   00577A  EFC1  F02B         	goto	u6911
 15334   00577E  EFC3  F02B         	goto	u6910
 15335   005782                     u6911:
 15336   005782  EFCB  F02B         	goto	l6766
 15337   005786                     u6910:
 15338   005786  0E00               	movlw	0
 15339   005788  6E06               	movwf	___fladd@a^0,c
 15340   00578A  0E00               	movlw	0
 15341   00578C  6E07               	movwf	(___fladd@a+1)^0,c
 15342   00578E  0E00               	movlw	0
 15343   005790  6E08               	movwf	(___fladd@a+2)^0,c
 15344   005792  0E00               	movlw	0
 15345   005794  6E09               	movwf	(___fladd@a+3)^0,c
 15346   005796                     l6766:
 15347   005796  8E08               	bsf	(___fladd@a+2)^0,7,c
 15348   005798  0E00               	movlw	0
 15349   00579A  6E09               	movwf	(___fladd@a+3)^0,c
 15350   00579C  EFD8  F02B         	goto	l6772
 15351   0057A0                     l6770:
 15352   0057A0  0E00               	movlw	0
 15353   0057A2  6E06               	movwf	___fladd@a^0,c
 15354   0057A4  0E00               	movlw	0
 15355   0057A6  6E07               	movwf	(___fladd@a+1)^0,c
 15356   0057A8  0E00               	movlw	0
 15357   0057AA  6E08               	movwf	(___fladd@a+2)^0,c
 15358   0057AC  0E00               	movlw	0
 15359   0057AE  6E09               	movwf	(___fladd@a+3)^0,c
 15360   0057B0                     l6772:
 15361   0057B0  5010               	movf	___fladd@bexp^0,w,c
 15362   0057B2  5C0F               	subwf	___fladd@aexp^0,w,c
 15363   0057B4  B0D8               	btfsc	status,0,c
 15364   0057B6  EFDF  F02B         	goto	u6921
 15365   0057BA  EFE1  F02B         	goto	u6920
 15366   0057BE                     u6921:
 15367   0057BE  EF08  F02C         	goto	l6808
 15368   0057C2                     u6920:
 15369   0057C2  AC0E               	btfss	___fladd@signs^0,6,c
 15370   0057C4  EFE6  F02B         	goto	u6931
 15371   0057C8  EFE8  F02B         	goto	u6930
 15372   0057CC                     u6931:
 15373   0057CC  EFEA  F02B         	goto	l6778
 15374   0057D0                     u6930:
 15375   0057D0  0E80               	movlw	128
 15376   0057D2  1A0E               	xorwf	___fladd@signs^0,f,c
 15377   0057D4                     l6778:
 15378   0057D4  C010  F011         	movff	___fladd@bexp,___fladd@grs
 15379   0057D8  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 15380   0057DC  C011  F00F         	movff	___fladd@grs,___fladd@aexp
 15381   0057E0  C002  F011         	movff	___fladd@b,___fladd@grs
 15382   0057E4  C006  F002         	movff	___fladd@a,___fladd@b
 15383   0057E8  C011  F006         	movff	___fladd@grs,___fladd@a
 15384   0057EC  C003  F011         	movff	___fladd@b+1,___fladd@grs
 15385   0057F0  C007  F003         	movff	___fladd@a+1,___fladd@b+1
 15386   0057F4  C011  F007         	movff	___fladd@grs,___fladd@a+1
 15387   0057F8  C004  F011         	movff	___fladd@b+2,___fladd@grs
 15388   0057FC  C008  F004         	movff	___fladd@a+2,___fladd@b+2
 15389   005800  C011  F008         	movff	___fladd@grs,___fladd@a+2
 15390   005804  C005  F011         	movff	___fladd@b+3,___fladd@grs
 15391   005808  C009  F005         	movff	___fladd@a+3,___fladd@b+3
 15392   00580C  C011  F009         	movff	___fladd@grs,___fladd@a+3
 15393   005810                     l6808:
 15394   005810  0E00               	movlw	0
 15395   005812  6E11               	movwf	___fladd@grs^0,c
 15396   005814  5010               	movf	___fladd@bexp^0,w,c
 15397   005816  C00F  F00A         	movff	___fladd@aexp,??___fladd
 15398   00581A  6A0B               	clrf	(??___fladd+1)^0,c
 15399   00581C  5E0A               	subwf	??___fladd^0,f,c
 15400   00581E  0E00               	movlw	0
 15401   005820  5A0B               	subwfb	(??___fladd+1)^0,f,c
 15402   005822  BE0B               	btfsc	(??___fladd+1)^0,7,c
 15403   005824  EF1D  F02C         	goto	u6941
 15404   005828  500B               	movf	(??___fladd+1)^0,w,c
 15405   00582A  E109               	bnz	u6940
 15406   00582C  0E1A               	movlw	26
 15407   00582E  5C0A               	subwf	??___fladd^0,w,c
 15408   005830  A0D8               	btfss	status,0,c
 15409   005832  EF1D  F02C         	goto	u6941
 15410   005836  EF1F  F02C         	goto	u6940
 15411   00583A                     u6941:
 15412   00583A  EF56  F02C         	goto	l1094
 15413   00583E                     u6940:
 15414   00583E  5002               	movf	___fladd@b^0,w,c
 15415   005840  1003               	iorwf	(___fladd@b+1)^0,w,c
 15416   005842  1004               	iorwf	(___fladd@b+2)^0,w,c
 15417   005844  1005               	iorwf	(___fladd@b+3)^0,w,c
 15418   005846  A4D8               	btfss	status,2,c
 15419   005848  EF28  F02C         	goto	u6951
 15420   00584C  EF2B  F02C         	goto	u6950
 15421   005850                     u6951:
 15422   005850  0E01               	movlw	1
 15423   005852  EF2C  F02C         	goto	u6960
 15424   005856                     u6950:
 15425   005856  0E00               	movlw	0
 15426   005858                     u6960:
 15427   005858  6E11               	movwf	___fladd@grs^0,c
 15428   00585A  0E00               	movlw	0
 15429   00585C  6E02               	movwf	___fladd@b^0,c
 15430   00585E  0E00               	movlw	0
 15431   005860  6E03               	movwf	(___fladd@b+1)^0,c
 15432   005862  0E00               	movlw	0
 15433   005864  6E04               	movwf	(___fladd@b+2)^0,c
 15434   005866  0E00               	movlw	0
 15435   005868  6E05               	movwf	(___fladd@b+3)^0,c
 15436   00586A  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 15437   00586E  EF5F  F02C         	goto	l1093
 15438   005872                     l1095:
 15439   005872  A011               	btfss	___fladd@grs^0,0,c
 15440   005874  EF3E  F02C         	goto	u6971
 15441   005878  EF40  F02C         	goto	u6970
 15442   00587C                     u6971:
 15443   00587C  EF46  F02C         	goto	l6820
 15444   005880                     u6970:
 15445   005880  90D8               	bcf	status,0,c
 15446   005882  3011               	rrcf	___fladd@grs^0,w,c
 15447   005884  0901               	iorlw	1
 15448   005886  6E11               	movwf	___fladd@grs^0,c
 15449   005888  EF48  F02C         	goto	l6822
 15450   00588C                     l6820:
 15451   00588C  90D8               	bcf	status,0,c
 15452   00588E  3211               	rrcf	___fladd@grs^0,f,c
 15453   005890                     l6822:
 15454   005890  A002               	btfss	___fladd@b^0,0,c
 15455   005892  EF4D  F02C         	goto	u6981
 15456   005896  EF4F  F02C         	goto	u6980
 15457   00589A                     u6981:
 15458   00589A  EF50  F02C         	goto	l6826
 15459   00589E                     u6980:
 15460   00589E  8E11               	bsf	___fladd@grs^0,7,c
 15461   0058A0                     l6826:
 15462   0058A0  3405               	rlcf	(___fladd@b+3)^0,w,c
 15463   0058A2  3205               	rrcf	(___fladd@b+3)^0,f,c
 15464   0058A4  3204               	rrcf	(___fladd@b+2)^0,f,c
 15465   0058A6  3203               	rrcf	(___fladd@b+1)^0,f,c
 15466   0058A8  3202               	rrcf	___fladd@b^0,f,c
 15467   0058AA  2A10               	incf	___fladd@bexp^0,f,c
 15468   0058AC                     l1094:
 15469   0058AC  500F               	movf	___fladd@aexp^0,w,c
 15470   0058AE  5C10               	subwf	___fladd@bexp^0,w,c
 15471   0058B0  A0D8               	btfss	status,0,c
 15472   0058B2  EF5D  F02C         	goto	u6991
 15473   0058B6  EF5F  F02C         	goto	u6990
 15474   0058BA                     u6991:
 15475   0058BA  EF39  F02C         	goto	l1095
 15476   0058BE                     u6990:
 15477   0058BE                     l1093:
 15478   0058BE  BC0E               	btfsc	___fladd@signs^0,6,c
 15479   0058C0  EF64  F02C         	goto	u7001
 15480   0058C4  EF66  F02C         	goto	u7000
 15481   0058C8                     u7001:
 15482   0058C8  EFA6  F02C         	goto	l6854
 15483   0058CC                     u7000:
 15484   0058CC  5010               	movf	___fladd@bexp^0,w,c
 15485   0058CE  A4D8               	btfss	status,2,c
 15486   0058D0  EF6C  F02C         	goto	u7011
 15487   0058D4  EF6E  F02C         	goto	u7010
 15488   0058D8                     u7011:
 15489   0058D8  EF78  F02C         	goto	l6836
 15490   0058DC                     u7010:
 15491   0058DC  0E00               	movlw	0
 15492   0058DE  6E02               	movwf	?___fladd^0,c
 15493   0058E0  0E00               	movlw	0
 15494   0058E2  6E03               	movwf	(?___fladd+1)^0,c
 15495   0058E4  0E00               	movlw	0
 15496   0058E6  6E04               	movwf	(?___fladd+2)^0,c
 15497   0058E8  0E00               	movlw	0
 15498   0058EA  6E05               	movwf	(?___fladd+3)^0,c
 15499   0058EC  EFC7  F02D         	goto	l1102
 15500   0058F0                     l6836:
 15501   0058F0  5006               	movf	___fladd@a^0,w,c
 15502   0058F2  2602               	addwf	___fladd@b^0,f,c
 15503   0058F4  5007               	movf	(___fladd@a+1)^0,w,c
 15504   0058F6  2203               	addwfc	(___fladd@b+1)^0,f,c
 15505   0058F8  5008               	movf	(___fladd@a+2)^0,w,c
 15506   0058FA  2204               	addwfc	(___fladd@b+2)^0,f,c
 15507   0058FC  5009               	movf	(___fladd@a+3)^0,w,c
 15508   0058FE  2205               	addwfc	(___fladd@b+3)^0,f,c
 15509   005900  A005               	btfss	(___fladd@b+3)^0,0,c
 15510   005902  EF85  F02C         	goto	u7021
 15511   005906  EF87  F02C         	goto	u7020
 15512   00590A                     u7021:
 15513   00590A  EF33  F02D         	goto	l6890
 15514   00590E                     u7020:
 15515   00590E  A011               	btfss	___fladd@grs^0,0,c
 15516   005910  EF8C  F02C         	goto	u7031
 15517   005914  EF8E  F02C         	goto	u7030
 15518   005918                     u7031:
 15519   005918  EF94  F02C         	goto	l6844
 15520   00591C                     u7030:
 15521   00591C  90D8               	bcf	status,0,c
 15522   00591E  3011               	rrcf	___fladd@grs^0,w,c
 15523   005920  0901               	iorlw	1
 15524   005922  6E11               	movwf	___fladd@grs^0,c
 15525   005924  EF96  F02C         	goto	l6846
 15526   005928                     l6844:
 15527   005928  90D8               	bcf	status,0,c
 15528   00592A  3211               	rrcf	___fladd@grs^0,f,c
 15529   00592C                     l6846:
 15530   00592C  A002               	btfss	___fladd@b^0,0,c
 15531   00592E  EF9B  F02C         	goto	u7041
 15532   005932  EF9D  F02C         	goto	u7040
 15533   005936                     u7041:
 15534   005936  EF9E  F02C         	goto	l6850
 15535   00593A                     u7040:
 15536   00593A  8E11               	bsf	___fladd@grs^0,7,c
 15537   00593C                     l6850:
 15538   00593C  3405               	rlcf	(___fladd@b+3)^0,w,c
 15539   00593E  3205               	rrcf	(___fladd@b+3)^0,f,c
 15540   005940  3204               	rrcf	(___fladd@b+2)^0,f,c
 15541   005942  3203               	rrcf	(___fladd@b+1)^0,f,c
 15542   005944  3202               	rrcf	___fladd@b^0,f,c
 15543   005946  2A10               	incf	___fladd@bexp^0,f,c
 15544   005948  EF33  F02D         	goto	l6890
 15545   00594C                     l6854:
 15546   00594C  5006               	movf	___fladd@a^0,w,c
 15547   00594E  5C02               	subwf	___fladd@b^0,w,c
 15548   005950  5007               	movf	(___fladd@a+1)^0,w,c
 15549   005952  5803               	subwfb	(___fladd@b+1)^0,w,c
 15550   005954  5008               	movf	(___fladd@a+2)^0,w,c
 15551   005956  5804               	subwfb	(___fladd@b+2)^0,w,c
 15552   005958  5005               	movf	(___fladd@b+3)^0,w,c
 15553   00595A  0A80               	xorlw	128
 15554   00595C  6E0A               	movwf	??___fladd^0,c
 15555   00595E  5009               	movf	(___fladd@a+3)^0,w,c
 15556   005960  0A80               	xorlw	128
 15557   005962  580A               	subwfb	??___fladd^0,w,c
 15558   005964  B0D8               	btfsc	status,0,c
 15559   005966  EFB7  F02C         	goto	u7051
 15560   00596A  EFB9  F02C         	goto	u7050
 15561   00596E                     u7051:
 15562   00596E  EFE4  F02C         	goto	l6864
 15563   005972                     u7050:
 15564   005972  5002               	movf	___fladd@b^0,w,c
 15565   005974  5C06               	subwf	___fladd@a^0,w,c
 15566   005976  6E0A               	movwf	??___fladd^0,c
 15567   005978  5003               	movf	(___fladd@b+1)^0,w,c
 15568   00597A  5807               	subwfb	(___fladd@a+1)^0,w,c
 15569   00597C  6E0B               	movwf	(??___fladd+1)^0,c
 15570   00597E  5004               	movf	(___fladd@b+2)^0,w,c
 15571   005980  5808               	subwfb	(___fladd@a+2)^0,w,c
 15572   005982  6E0C               	movwf	(??___fladd+2)^0,c
 15573   005984  5005               	movf	(___fladd@b+3)^0,w,c
 15574   005986  5809               	subwfb	(___fladd@a+3)^0,w,c
 15575   005988  6E0D               	movwf	(??___fladd+3)^0,c
 15576   00598A  0EFF               	movlw	255
 15577   00598C  240A               	addwf	??___fladd^0,w,c
 15578   00598E  6E02               	movwf	___fladd@b^0,c
 15579   005990  0EFF               	movlw	255
 15580   005992  200B               	addwfc	(??___fladd+1)^0,w,c
 15581   005994  6E03               	movwf	(___fladd@b+1)^0,c
 15582   005996  0EFF               	movlw	255
 15583   005998  200C               	addwfc	(??___fladd+2)^0,w,c
 15584   00599A  6E04               	movwf	(___fladd@b+2)^0,c
 15585   00599C  0EFF               	movlw	255
 15586   00599E  200D               	addwfc	(??___fladd+3)^0,w,c
 15587   0059A0  6E05               	movwf	(___fladd@b+3)^0,c
 15588   0059A2  0E80               	movlw	128
 15589   0059A4  1A0E               	xorwf	___fladd@signs^0,f,c
 15590   0059A6  6C11               	negf	___fladd@grs^0,c
 15591   0059A8  5011               	movf	___fladd@grs^0,w,c
 15592   0059AA  A4D8               	btfss	status,2,c
 15593   0059AC  EFDA  F02C         	goto	u7061
 15594   0059B0  EFDC  F02C         	goto	u7060
 15595   0059B4                     u7061:
 15596   0059B4  EFEC  F02C         	goto	l1110
 15597   0059B8                     u7060:
 15598   0059B8  0E01               	movlw	1
 15599   0059BA  2602               	addwf	___fladd@b^0,f,c
 15600   0059BC  0E00               	movlw	0
 15601   0059BE  2203               	addwfc	(___fladd@b+1)^0,f,c
 15602   0059C0  2204               	addwfc	(___fladd@b+2)^0,f,c
 15603   0059C2  2205               	addwfc	(___fladd@b+3)^0,f,c
 15604   0059C4  EFEC  F02C         	goto	l1110
 15605   0059C8                     l6864:
 15606   0059C8  5006               	movf	___fladd@a^0,w,c
 15607   0059CA  5E02               	subwf	___fladd@b^0,f,c
 15608   0059CC  5007               	movf	(___fladd@a+1)^0,w,c
 15609   0059CE  5A03               	subwfb	(___fladd@b+1)^0,f,c
 15610   0059D0  5008               	movf	(___fladd@a+2)^0,w,c
 15611   0059D2  5A04               	subwfb	(___fladd@b+2)^0,f,c
 15612   0059D4  5009               	movf	(___fladd@a+3)^0,w,c
 15613   0059D6  5A05               	subwfb	(___fladd@b+3)^0,f,c
 15614   0059D8                     l1110:
 15615   0059D8  5002               	movf	___fladd@b^0,w,c
 15616   0059DA  1003               	iorwf	(___fladd@b+1)^0,w,c
 15617   0059DC  1004               	iorwf	(___fladd@b+2)^0,w,c
 15618   0059DE  1005               	iorwf	(___fladd@b+3)^0,w,c
 15619   0059E0  A4D8               	btfss	status,2,c
 15620   0059E2  EFF5  F02C         	goto	u7071
 15621   0059E6  EFF7  F02C         	goto	u7070
 15622   0059EA                     u7071:
 15623   0059EA  EF2C  F02D         	goto	l6888
 15624   0059EE                     u7070:
 15625   0059EE  5011               	movf	___fladd@grs^0,w,c
 15626   0059F0  A4D8               	btfss	status,2,c
 15627   0059F2  EFFD  F02C         	goto	u7081
 15628   0059F6  EFFF  F02C         	goto	u7080
 15629   0059FA                     u7081:
 15630   0059FA  EF2C  F02D         	goto	l6888
 15631   0059FE                     u7080:
 15632   0059FE  0E00               	movlw	0
 15633   005A00  6E02               	movwf	?___fladd^0,c
 15634   005A02  0E00               	movlw	0
 15635   005A04  6E03               	movwf	(?___fladd+1)^0,c
 15636   005A06  0E00               	movlw	0
 15637   005A08  6E04               	movwf	(?___fladd+2)^0,c
 15638   005A0A  0E00               	movlw	0
 15639   005A0C  6E05               	movwf	(?___fladd+3)^0,c
 15640   005A0E  EFC7  F02D         	goto	l1102
 15641   005A12                     l6872:
 15642   005A12  90D8               	bcf	status,0,c
 15643   005A14  3602               	rlcf	___fladd@b^0,f,c
 15644   005A16  3603               	rlcf	(___fladd@b+1)^0,f,c
 15645   005A18  3604               	rlcf	(___fladd@b+2)^0,f,c
 15646   005A1A  3605               	rlcf	(___fladd@b+3)^0,f,c
 15647   005A1C  AE11               	btfss	___fladd@grs^0,7,c
 15648   005A1E  EF13  F02D         	goto	u7091
 15649   005A22  EF15  F02D         	goto	u7090
 15650   005A26                     u7091:
 15651   005A26  EF16  F02D         	goto	l6878
 15652   005A2A                     u7090:
 15653   005A2A  8002               	bsf	___fladd@b^0,0,c
 15654   005A2C                     l6878:
 15655   005A2C  A011               	btfss	___fladd@grs^0,0,c
 15656   005A2E  EF1B  F02D         	goto	u7101
 15657   005A32  EF1D  F02D         	goto	u7100
 15658   005A36                     u7101:
 15659   005A36  EF21  F02D         	goto	l6882
 15660   005A3A                     u7100:
 15661   005A3A  80D8               	bsf	status,0,c
 15662   005A3C  3611               	rlcf	___fladd@grs^0,f,c
 15663   005A3E  EF23  F02D         	goto	l6884
 15664   005A42                     l6882:
 15665   005A42  90D8               	bcf	status,0,c
 15666   005A44  3611               	rlcf	___fladd@grs^0,f,c
 15667   005A46                     l6884:
 15668   005A46  5010               	movf	___fladd@bexp^0,w,c
 15669   005A48  B4D8               	btfsc	status,2,c
 15670   005A4A  EF29  F02D         	goto	u7111
 15671   005A4E  EF2B  F02D         	goto	u7110
 15672   005A52                     u7111:
 15673   005A52  EF2C  F02D         	goto	l6888
 15674   005A56                     u7110:
 15675   005A56  0610               	decf	___fladd@bexp^0,f,c
 15676   005A58                     l6888:
 15677   005A58  AE04               	btfss	(___fladd@b+2)^0,7,c
 15678   005A5A  EF31  F02D         	goto	u7121
 15679   005A5E  EF33  F02D         	goto	u7120
 15680   005A62                     u7121:
 15681   005A62  EF09  F02D         	goto	l6872
 15682   005A66                     u7120:
 15683   005A66                     l6890:
 15684   005A66  0E00               	movlw	0
 15685   005A68  6E0F               	movwf	___fladd@aexp^0,c
 15686   005A6A  AE11               	btfss	___fladd@grs^0,7,c
 15687   005A6C  EF3A  F02D         	goto	u7131
 15688   005A70  EF3C  F02D         	goto	u7130
 15689   005A74                     u7131:
 15690   005A74  EF54  F02D         	goto	l1119
 15691   005A78                     u7130:
 15692   005A78  C011  F00A         	movff	___fladd@grs,??___fladd
 15693   005A7C  0E7F               	movlw	127
 15694   005A7E  160A               	andwf	??___fladd^0,f,c
 15695   005A80  B4D8               	btfsc	status,2,c
 15696   005A82  EF45  F02D         	goto	u7141
 15697   005A86  EF47  F02D         	goto	u7140
 15698   005A8A                     u7141:
 15699   005A8A  EF4B  F02D         	goto	l1120
 15700   005A8E                     u7140:
 15701   005A8E                     l6896:
 15702   005A8E  0E01               	movlw	1
 15703   005A90  6E0F               	movwf	___fladd@aexp^0,c
 15704   005A92  EF54  F02D         	goto	l1119
 15705   005A96                     l1120:
 15706   005A96  A002               	btfss	___fladd@b^0,0,c
 15707   005A98  EF50  F02D         	goto	u7151
 15708   005A9C  EF52  F02D         	goto	u7150
 15709   005AA0                     u7151:
 15710   005AA0  EF54  F02D         	goto	l1119
 15711   005AA4                     u7150:
 15712   005AA4  EF47  F02D         	goto	l6896
 15713   005AA8                     l1119:
 15714   005AA8  500F               	movf	___fladd@aexp^0,w,c
 15715   005AAA  B4D8               	btfsc	status,2,c
 15716   005AAC  EF5A  F02D         	goto	u7161
 15717   005AB0  EF5C  F02D         	goto	u7160
 15718   005AB4                     u7161:
 15719   005AB4  EF87  F02D         	goto	l6908
 15720   005AB8                     u7160:
 15721   005AB8  0E01               	movlw	1
 15722   005ABA  2602               	addwf	___fladd@b^0,f,c
 15723   005ABC  0E00               	movlw	0
 15724   005ABE  2203               	addwfc	(___fladd@b+1)^0,f,c
 15725   005AC0  2204               	addwfc	(___fladd@b+2)^0,f,c
 15726   005AC2  2205               	addwfc	(___fladd@b+3)^0,f,c
 15727   005AC4  A005               	btfss	(___fladd@b+3)^0,0,c
 15728   005AC6  EF67  F02D         	goto	u7171
 15729   005ACA  EF69  F02D         	goto	u7170
 15730   005ACE                     u7171:
 15731   005ACE  EF87  F02D         	goto	l6908
 15732   005AD2                     u7170:
 15733   005AD2  C002  F00A         	movff	___fladd@b,??___fladd
 15734   005AD6  C003  F00B         	movff	___fladd@b+1,??___fladd+1
 15735   005ADA  C004  F00C         	movff	___fladd@b+2,??___fladd+2
 15736   005ADE  C005  F00D         	movff	___fladd@b+3,??___fladd+3
 15737   005AE2  340D               	rlcf	(??___fladd+3)^0,w,c
 15738   005AE4  320D               	rrcf	(??___fladd+3)^0,f,c
 15739   005AE6  320C               	rrcf	(??___fladd+2)^0,f,c
 15740   005AE8  320B               	rrcf	(??___fladd+1)^0,f,c
 15741   005AEA  320A               	rrcf	??___fladd^0,f,c
 15742   005AEC  C00A  F002         	movff	??___fladd,___fladd@b
 15743   005AF0  C00B  F003         	movff	??___fladd+1,___fladd@b+1
 15744   005AF4  C00C  F004         	movff	??___fladd+2,___fladd@b+2
 15745   005AF8  C00D  F005         	movff	??___fladd+3,___fladd@b+3
 15746   005AFC  2810               	incf	___fladd@bexp^0,w,c
 15747   005AFE  B4D8               	btfsc	status,2,c
 15748   005B00  EF84  F02D         	goto	u7181
 15749   005B04  EF86  F02D         	goto	u7180
 15750   005B08                     u7181:
 15751   005B08  EF87  F02D         	goto	l6908
 15752   005B0C                     u7180:
 15753   005B0C  2A10               	incf	___fladd@bexp^0,f,c
 15754   005B0E                     l6908:
 15755   005B0E  2810               	incf	___fladd@bexp^0,w,c
 15756   005B10  B4D8               	btfsc	status,2,c
 15757   005B12  EF8D  F02D         	goto	u7191
 15758   005B16  EF8F  F02D         	goto	u7190
 15759   005B1A                     u7191:
 15760   005B1A  EF97  F02D         	goto	l6912
 15761   005B1E                     u7190:
 15762   005B1E  5010               	movf	___fladd@bexp^0,w,c
 15763   005B20  A4D8               	btfss	status,2,c
 15764   005B22  EF95  F02D         	goto	u7201
 15765   005B26  EF97  F02D         	goto	u7200
 15766   005B2A                     u7201:
 15767   005B2A  EFA9  F02D         	goto	l6916
 15768   005B2E                     u7200:
 15769   005B2E                     l6912:
 15770   005B2E  0E00               	movlw	0
 15771   005B30  6E02               	movwf	___fladd@b^0,c
 15772   005B32  0E00               	movlw	0
 15773   005B34  6E03               	movwf	(___fladd@b+1)^0,c
 15774   005B36  0E00               	movlw	0
 15775   005B38  6E04               	movwf	(___fladd@b+2)^0,c
 15776   005B3A  0E00               	movlw	0
 15777   005B3C  6E05               	movwf	(___fladd@b+3)^0,c
 15778   005B3E  5010               	movf	___fladd@bexp^0,w,c
 15779   005B40  A4D8               	btfss	status,2,c
 15780   005B42  EFA5  F02D         	goto	u7211
 15781   005B46  EFA7  F02D         	goto	u7210
 15782   005B4A                     u7211:
 15783   005B4A  EFA9  F02D         	goto	l6916
 15784   005B4E                     u7210:
 15785   005B4E  0E00               	movlw	0
 15786   005B50  6E0E               	movwf	___fladd@signs^0,c
 15787   005B52                     l6916:
 15788   005B52  A010               	btfss	___fladd@bexp^0,0,c
 15789   005B54  EFAE  F02D         	goto	u7221
 15790   005B58  EFB0  F02D         	goto	u7220
 15791   005B5C                     u7221:
 15792   005B5C  EFB3  F02D         	goto	l6920
 15793   005B60                     u7220:
 15794   005B60  8E04               	bsf	(___fladd@b+2)^0,7,c
 15795   005B62  EFB4  F02D         	goto	l6922
 15796   005B66                     l6920:
 15797   005B66  9E04               	bcf	(___fladd@b+2)^0,7,c
 15798   005B68                     l6922:
 15799   005B68  90D8               	bcf	status,0,c
 15800   005B6A  3010               	rrcf	___fladd@bexp^0,w,c
 15801   005B6C  6E05               	movwf	(___fladd@b+3)^0,c
 15802   005B6E  AE0E               	btfss	___fladd@signs^0,7,c
 15803   005B70  EFBC  F02D         	goto	u7231
 15804   005B74  EFBE  F02D         	goto	u7230
 15805   005B78                     u7231:
 15806   005B78  EFBF  F02D         	goto	l6928
 15807   005B7C                     u7230:
 15808   005B7C  8E05               	bsf	(___fladd@b+3)^0,7,c
 15809   005B7E                     l6928:
 15810   005B7E  C002  F002         	movff	___fladd@b,?___fladd
 15811   005B82  C003  F003         	movff	___fladd@b+1,?___fladd+1
 15812   005B86  C004  F004         	movff	___fladd@b+2,?___fladd+2
 15813   005B8A  C005  F005         	movff	___fladd@b+3,?___fladd+3
 15814   005B8E                     l1102:
 15815   005B8E  0012               	return		;funcret
 15816   005B90                     __end_of___fladd:
 15817                           	callstack 0
 15818                           
 15819 ;; *************** function ___flneg *****************
 15820 ;; Defined at:
 15821 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
 15822 ;; Parameters:    Size  Location     Type
 15823 ;;  f1              4    1[COMRAM] unsigned char 
 15824 ;; Auto vars:     Size  Location     Type
 15825 ;;		None
 15826 ;; Return value:  Size  Location     Type
 15827 ;;                  4    1[COMRAM] unsigned char 
 15828 ;; Registers used:
 15829 ;;		wreg, status,2, status,0
 15830 ;; Tracked objects:
 15831 ;;		On entry : 0/0
 15832 ;;		On exit  : 0/0
 15833 ;;		Unchanged: 0/0
 15834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15838 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15839 ;;Total ram usage:        4 bytes
 15840 ;; Hardware stack levels used: 1
 15841 ;; Hardware stack levels required when called: 2
 15842 ;; This function calls:
 15843 ;;		Nothing
 15844 ;; This function is called by:
 15845 ;;		_efgtoa
 15846 ;;		_powf
 15847 ;; This function uses a non-reentrant model
 15848 ;;
 15849                           
 15850                           	psect	text43
 15851   0082F4                     __ptext43:
 15852                           	callstack 0
 15853   0082F4                     ___flneg:
 15854                           	callstack 23
 15855   0082F4  5002               	movf	___flneg@f1^0,w,c
 15856   0082F6  1003               	iorwf	(___flneg@f1+1)^0,w,c
 15857   0082F8  1004               	iorwf	(___flneg@f1+2)^0,w,c
 15858   0082FA  1005               	iorwf	(___flneg@f1+3)^0,w,c
 15859   0082FC  B4D8               	btfsc	status,2,c
 15860   0082FE  EF83  F041         	goto	u7751
 15861   008302  EF85  F041         	goto	u7750
 15862   008306                     u7751:
 15863   008306  EF8D  F041         	goto	l7256
 15864   00830A                     u7750:
 15865   00830A  0E00               	movlw	0
 15866   00830C  1A02               	xorwf	___flneg@f1^0,f,c
 15867   00830E  0E00               	movlw	0
 15868   008310  1A03               	xorwf	(___flneg@f1+1)^0,f,c
 15869   008312  0E00               	movlw	0
 15870   008314  1A04               	xorwf	(___flneg@f1+2)^0,f,c
 15871   008316  0E80               	movlw	128
 15872   008318  1A05               	xorwf	(___flneg@f1+3)^0,f,c
 15873   00831A                     l7256:
 15874   00831A  C002  F002         	movff	___flneg@f1,?___flneg
 15875   00831E  C003  F003         	movff	___flneg@f1+1,?___flneg+1
 15876   008322  C004  F004         	movff	___flneg@f1+2,?___flneg+2
 15877   008326  C005  F005         	movff	___flneg@f1+3,?___flneg+3
 15878   00832A  0012               	return		;funcret
 15879   00832C                     __end_of___flneg:
 15880                           	callstack 0
 15881                           
 15882 ;; *************** function ___flge *****************
 15883 ;; Defined at:
 15884 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 15885 ;; Parameters:    Size  Location     Type
 15886 ;;  ff1             4   75[COMRAM] unsigned char 
 15887 ;;  ff2             4   79[COMRAM] unsigned char 
 15888 ;; Auto vars:     Size  Location     Type
 15889 ;;		None
 15890 ;; Return value:  Size  Location     Type
 15891 ;;		None               void
 15892 ;; Registers used:
 15893 ;;		wreg, status,2, status,0
 15894 ;; Tracked objects:
 15895 ;;		On entry : 0/0
 15896 ;;		On exit  : 0/0
 15897 ;;		Unchanged: 0/0
 15898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15899 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15901 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15902 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15903 ;;Total ram usage:       12 bytes
 15904 ;; Hardware stack levels used: 1
 15905 ;; Hardware stack levels required when called: 2
 15906 ;; This function calls:
 15907 ;;		Nothing
 15908 ;; This function is called by:
 15909 ;;		_decide_action
 15910 ;;		_efgtoa
 15911 ;;		_powf
 15912 ;; This function uses a non-reentrant model
 15913 ;;
 15914                           
 15915                           	psect	text44
 15916   00728C                     __ptext44:
 15917                           	callstack 0
 15918   00728C                     ___flge:
 15919                           	callstack 23
 15920   00728C  0E00               	movlw	0
 15921   00728E  144C               	andwf	___flge@ff1^0,w,c
 15922   007290  6E54               	movwf	??___flge^0,c
 15923   007292  0E00               	movlw	0
 15924   007294  144D               	andwf	(___flge@ff1+1)^0,w,c
 15925   007296  6E55               	movwf	(??___flge+1)^0,c
 15926   007298  0E80               	movlw	128
 15927   00729A  144E               	andwf	(___flge@ff1+2)^0,w,c
 15928   00729C  6E56               	movwf	(??___flge+2)^0,c
 15929   00729E  0E7F               	movlw	127
 15930   0072A0  144F               	andwf	(___flge@ff1+3)^0,w,c
 15931   0072A2  6E57               	movwf	(??___flge+3)^0,c
 15932   0072A4  5054               	movf	??___flge^0,w,c
 15933   0072A6  1055               	iorwf	(??___flge+1)^0,w,c
 15934   0072A8  1056               	iorwf	(??___flge+2)^0,w,c
 15935   0072AA  1057               	iorwf	(??___flge+3)^0,w,c
 15936   0072AC  A4D8               	btfss	status,2,c
 15937   0072AE  EF5B  F039         	goto	u7701
 15938   0072B2  EF5D  F039         	goto	u7700
 15939   0072B6                     u7701:
 15940   0072B6  EF65  F039         	goto	l7234
 15941   0072BA                     u7700:
 15942   0072BA  0E00               	movlw	0
 15943   0072BC  6E4C               	movwf	___flge@ff1^0,c
 15944   0072BE  0E00               	movlw	0
 15945   0072C0  6E4D               	movwf	(___flge@ff1+1)^0,c
 15946   0072C2  0E00               	movlw	0
 15947   0072C4  6E4E               	movwf	(___flge@ff1+2)^0,c
 15948   0072C6  0E00               	movlw	0
 15949   0072C8  6E4F               	movwf	(___flge@ff1+3)^0,c
 15950   0072CA                     l7234:
 15951   0072CA  0E00               	movlw	0
 15952   0072CC  1450               	andwf	___flge@ff2^0,w,c
 15953   0072CE  6E54               	movwf	??___flge^0,c
 15954   0072D0  0E00               	movlw	0
 15955   0072D2  1451               	andwf	(___flge@ff2+1)^0,w,c
 15956   0072D4  6E55               	movwf	(??___flge+1)^0,c
 15957   0072D6  0E80               	movlw	128
 15958   0072D8  1452               	andwf	(___flge@ff2+2)^0,w,c
 15959   0072DA  6E56               	movwf	(??___flge+2)^0,c
 15960   0072DC  0E7F               	movlw	127
 15961   0072DE  1453               	andwf	(___flge@ff2+3)^0,w,c
 15962   0072E0  6E57               	movwf	(??___flge+3)^0,c
 15963   0072E2  5054               	movf	??___flge^0,w,c
 15964   0072E4  1055               	iorwf	(??___flge+1)^0,w,c
 15965   0072E6  1056               	iorwf	(??___flge+2)^0,w,c
 15966   0072E8  1057               	iorwf	(??___flge+3)^0,w,c
 15967   0072EA  A4D8               	btfss	status,2,c
 15968   0072EC  EF7A  F039         	goto	u7711
 15969   0072F0  EF7C  F039         	goto	u7710
 15970   0072F4                     u7711:
 15971   0072F4  EF84  F039         	goto	l7238
 15972   0072F8                     u7710:
 15973   0072F8  0E00               	movlw	0
 15974   0072FA  6E50               	movwf	___flge@ff2^0,c
 15975   0072FC  0E00               	movlw	0
 15976   0072FE  6E51               	movwf	(___flge@ff2+1)^0,c
 15977   007300  0E00               	movlw	0
 15978   007302  6E52               	movwf	(___flge@ff2+2)^0,c
 15979   007304  0E00               	movlw	0
 15980   007306  6E53               	movwf	(___flge@ff2+3)^0,c
 15981   007308                     l7238:
 15982   007308  AE4F               	btfss	(___flge@ff1+3)^0,7,c
 15983   00730A  EF89  F039         	goto	u7721
 15984   00730E  EF8B  F039         	goto	u7720
 15985   007312                     u7721:
 15986   007312  EF94  F039         	goto	l7242
 15987   007316                     u7720:
 15988   007316  6C4C               	negf	___flge@ff1^0,c
 15989   007318  1E4D               	comf	(___flge@ff1+1)^0,f,c
 15990   00731A  B0D8               	btfsc	status,0,c
 15991   00731C  2A4D               	incf	(___flge@ff1+1)^0,f,c
 15992   00731E  1E4E               	comf	(___flge@ff1+2)^0,f,c
 15993   007320  B0D8               	btfsc	status,0,c
 15994   007322  2A4E               	incf	(___flge@ff1+2)^0,f,c
 15995   007324  0E80               	movlw	128
 15996   007326  564F               	subfwb	(___flge@ff1+3)^0,f,c
 15997   007328                     l7242:
 15998   007328  AE53               	btfss	(___flge@ff2+3)^0,7,c
 15999   00732A  EF99  F039         	goto	u7731
 16000   00732E  EF9B  F039         	goto	u7730
 16001   007332                     u7731:
 16002   007332  EFA4  F039         	goto	l830
 16003   007336                     u7730:
 16004   007336  6C50               	negf	___flge@ff2^0,c
 16005   007338  1E51               	comf	(___flge@ff2+1)^0,f,c
 16006   00733A  B0D8               	btfsc	status,0,c
 16007   00733C  2A51               	incf	(___flge@ff2+1)^0,f,c
 16008   00733E  1E52               	comf	(___flge@ff2+2)^0,f,c
 16009   007340  B0D8               	btfsc	status,0,c
 16010   007342  2A52               	incf	(___flge@ff2+2)^0,f,c
 16011   007344  0E80               	movlw	128
 16012   007346  5653               	subfwb	(___flge@ff2+3)^0,f,c
 16013   007348                     l830:
 16014   007348  0E00               	movlw	0
 16015   00734A  1A4C               	xorwf	___flge@ff1^0,f,c
 16016   00734C  0E00               	movlw	0
 16017   00734E  1A4D               	xorwf	(___flge@ff1+1)^0,f,c
 16018   007350  0E00               	movlw	0
 16019   007352  1A4E               	xorwf	(___flge@ff1+2)^0,f,c
 16020   007354  0E80               	movlw	128
 16021   007356  1A4F               	xorwf	(___flge@ff1+3)^0,f,c
 16022   007358  0E00               	movlw	0
 16023   00735A  1A50               	xorwf	___flge@ff2^0,f,c
 16024   00735C  0E00               	movlw	0
 16025   00735E  1A51               	xorwf	(___flge@ff2+1)^0,f,c
 16026   007360  0E00               	movlw	0
 16027   007362  1A52               	xorwf	(___flge@ff2+2)^0,f,c
 16028   007364  0E80               	movlw	128
 16029   007366  1A53               	xorwf	(___flge@ff2+3)^0,f,c
 16030   007368  5050               	movf	___flge@ff2^0,w,c
 16031   00736A  5C4C               	subwf	___flge@ff1^0,w,c
 16032   00736C  5051               	movf	(___flge@ff2+1)^0,w,c
 16033   00736E  584D               	subwfb	(___flge@ff1+1)^0,w,c
 16034   007370  5052               	movf	(___flge@ff2+2)^0,w,c
 16035   007372  584E               	subwfb	(___flge@ff1+2)^0,w,c
 16036   007374  5053               	movf	(___flge@ff2+3)^0,w,c
 16037   007376  584F               	subwfb	(___flge@ff1+3)^0,w,c
 16038   007378  B0D8               	btfsc	status,0,c
 16039   00737A  EFC1  F039         	goto	u7741
 16040   00737E  EFC3  F039         	goto	u7740
 16041   007382                     u7741:
 16042   007382  EFC6  F039         	goto	l7248
 16043   007386                     u7740:
 16044   007386  90D8               	bcf	status,0,c
 16045   007388  EFC7  F039         	goto	l835
 16046   00738C                     l7248:
 16047   00738C  80D8               	bsf	status,0,c
 16048   00738E                     l835:
 16049   00738E  0012               	return		;funcret
 16050   007390                     __end_of___flge:
 16051                           	callstack 0
 16052                           
 16053 ;; *************** function ___fldiv *****************
 16054 ;; Defined at:
 16055 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 16056 ;; Parameters:    Size  Location     Type
 16057 ;;  b               4   42[COMRAM] unsigned char 
 16058 ;;  a               4   46[COMRAM] unsigned char 
 16059 ;; Auto vars:     Size  Location     Type
 16060 ;;  grs             4   61[COMRAM] unsigned long 
 16061 ;;  rem             4   54[COMRAM] unsigned long 
 16062 ;;  new_exp         2   59[COMRAM] short 
 16063 ;;  aexp            1   66[COMRAM] unsigned char 
 16064 ;;  bexp            1   65[COMRAM] unsigned char 
 16065 ;;  sign            1   58[COMRAM] unsigned char 
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  4   42[COMRAM] unsigned char 
 16068 ;; Registers used:
 16069 ;;		wreg, status,2, status,0
 16070 ;; Tracked objects:
 16071 ;;		On entry : 0/0
 16072 ;;		On exit  : 0/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16075 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16076 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16077 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16078 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16079 ;;Total ram usage:       25 bytes
 16080 ;; Hardware stack levels used: 1
 16081 ;; Hardware stack levels required when called: 2
 16082 ;; This function calls:
 16083 ;;		Nothing
 16084 ;; This function is called by:
 16085 ;;		_decide_action
 16086 ;;		_efgtoa
 16087 ;;		_powf
 16088 ;; This function uses a non-reentrant model
 16089 ;;
 16090                           
 16091                           	psect	text45
 16092   006398                     __ptext45:
 16093                           	callstack 0
 16094   006398                     ___fldiv:
 16095                           	callstack 23
 16096   006398  502E               	movf	(___fldiv@b+3)^0,w,c
 16097   00639A  0B80               	andlw	128
 16098   00639C  6E3B               	movwf	___fldiv@sign^0,c
 16099   00639E  502E               	movf	(___fldiv@b+3)^0,w,c
 16100   0063A0  242E               	addwf	(___fldiv@b+3)^0,w,c
 16101   0063A2  6E42               	movwf	___fldiv@bexp^0,c
 16102   0063A4  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 16103   0063A6  EFD7  F031         	goto	u7251
 16104   0063AA  EFD9  F031         	goto	u7250
 16105   0063AE                     u7251:
 16106   0063AE  EFDA  F031         	goto	l6946
 16107   0063B2                     u7250:
 16108   0063B2  8042               	bsf	___fldiv@bexp^0,0,c
 16109   0063B4                     l6946:
 16110   0063B4  5042               	movf	___fldiv@bexp^0,w,c
 16111   0063B6  B4D8               	btfsc	status,2,c
 16112   0063B8  EFE0  F031         	goto	u7261
 16113   0063BC  EFE2  F031         	goto	u7260
 16114   0063C0                     u7261:
 16115   0063C0  EFF7  F031         	goto	l6956
 16116   0063C4                     u7260:
 16117   0063C4  2842               	incf	___fldiv@bexp^0,w,c
 16118   0063C6  A4D8               	btfss	status,2,c
 16119   0063C8  EFE8  F031         	goto	u7271
 16120   0063CC  EFEA  F031         	goto	u7270
 16121   0063D0                     u7271:
 16122   0063D0  EFF2  F031         	goto	l6952
 16123   0063D4                     u7270:
 16124   0063D4  0E00               	movlw	0
 16125   0063D6  6E2B               	movwf	___fldiv@b^0,c
 16126   0063D8  0E00               	movlw	0
 16127   0063DA  6E2C               	movwf	(___fldiv@b+1)^0,c
 16128   0063DC  0E00               	movlw	0
 16129   0063DE  6E2D               	movwf	(___fldiv@b+2)^0,c
 16130   0063E0  0E00               	movlw	0
 16131   0063E2  6E2E               	movwf	(___fldiv@b+3)^0,c
 16132   0063E4                     l6952:
 16133   0063E4  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 16134   0063E6  0E00               	movlw	0
 16135   0063E8  6E2E               	movwf	(___fldiv@b+3)^0,c
 16136   0063EA  EFFF  F031         	goto	l6958
 16137   0063EE                     l6956:
 16138   0063EE  0E00               	movlw	0
 16139   0063F0  6E2B               	movwf	___fldiv@b^0,c
 16140   0063F2  0E00               	movlw	0
 16141   0063F4  6E2C               	movwf	(___fldiv@b+1)^0,c
 16142   0063F6  0E00               	movlw	0
 16143   0063F8  6E2D               	movwf	(___fldiv@b+2)^0,c
 16144   0063FA  0E00               	movlw	0
 16145   0063FC  6E2E               	movwf	(___fldiv@b+3)^0,c
 16146   0063FE                     l6958:
 16147   0063FE  5032               	movf	(___fldiv@a+3)^0,w,c
 16148   006400  0B80               	andlw	128
 16149   006402  1A3B               	xorwf	___fldiv@sign^0,f,c
 16150   006404  5032               	movf	(___fldiv@a+3)^0,w,c
 16151   006406  2432               	addwf	(___fldiv@a+3)^0,w,c
 16152   006408  6E43               	movwf	___fldiv@aexp^0,c
 16153   00640A  AE31               	btfss	(___fldiv@a+2)^0,7,c
 16154   00640C  EF0A  F032         	goto	u7281
 16155   006410  EF0C  F032         	goto	u7280
 16156   006414                     u7281:
 16157   006414  EF0D  F032         	goto	l6966
 16158   006418                     u7280:
 16159   006418  8043               	bsf	___fldiv@aexp^0,0,c
 16160   00641A                     l6966:
 16161   00641A  5043               	movf	___fldiv@aexp^0,w,c
 16162   00641C  B4D8               	btfsc	status,2,c
 16163   00641E  EF13  F032         	goto	u7291
 16164   006422  EF15  F032         	goto	u7290
 16165   006426                     u7291:
 16166   006426  EF2A  F032         	goto	l6976
 16167   00642A                     u7290:
 16168   00642A  2843               	incf	___fldiv@aexp^0,w,c
 16169   00642C  A4D8               	btfss	status,2,c
 16170   00642E  EF1B  F032         	goto	u7301
 16171   006432  EF1D  F032         	goto	u7300
 16172   006436                     u7301:
 16173   006436  EF25  F032         	goto	l6972
 16174   00643A                     u7300:
 16175   00643A  0E00               	movlw	0
 16176   00643C  6E2F               	movwf	___fldiv@a^0,c
 16177   00643E  0E00               	movlw	0
 16178   006440  6E30               	movwf	(___fldiv@a+1)^0,c
 16179   006442  0E00               	movlw	0
 16180   006444  6E31               	movwf	(___fldiv@a+2)^0,c
 16181   006446  0E00               	movlw	0
 16182   006448  6E32               	movwf	(___fldiv@a+3)^0,c
 16183   00644A                     l6972:
 16184   00644A  8E31               	bsf	(___fldiv@a+2)^0,7,c
 16185   00644C  0E00               	movlw	0
 16186   00644E  6E32               	movwf	(___fldiv@a+3)^0,c
 16187   006450  EF32  F032         	goto	l6978
 16188   006454                     l6976:
 16189   006454  0E00               	movlw	0
 16190   006456  6E2F               	movwf	___fldiv@a^0,c
 16191   006458  0E00               	movlw	0
 16192   00645A  6E30               	movwf	(___fldiv@a+1)^0,c
 16193   00645C  0E00               	movlw	0
 16194   00645E  6E31               	movwf	(___fldiv@a+2)^0,c
 16195   006460  0E00               	movlw	0
 16196   006462  6E32               	movwf	(___fldiv@a+3)^0,c
 16197   006464                     l6978:
 16198   006464  502F               	movf	___fldiv@a^0,w,c
 16199   006466  1030               	iorwf	(___fldiv@a+1)^0,w,c
 16200   006468  1031               	iorwf	(___fldiv@a+2)^0,w,c
 16201   00646A  1032               	iorwf	(___fldiv@a+3)^0,w,c
 16202   00646C  A4D8               	btfss	status,2,c
 16203   00646E  EF3B  F032         	goto	u7311
 16204   006472  EF3D  F032         	goto	u7310
 16205   006476                     u7311:
 16206   006476  EF55  F032         	goto	l6990
 16207   00647A                     u7310:
 16208   00647A  0E00               	movlw	0
 16209   00647C  6E2B               	movwf	___fldiv@b^0,c
 16210   00647E  0E00               	movlw	0
 16211   006480  6E2C               	movwf	(___fldiv@b+1)^0,c
 16212   006482  0E00               	movlw	0
 16213   006484  6E2D               	movwf	(___fldiv@b+2)^0,c
 16214   006486  0E00               	movlw	0
 16215   006488  6E2E               	movwf	(___fldiv@b+3)^0,c
 16216   00648A  0E80               	movlw	128
 16217   00648C  122D               	iorwf	(___fldiv@b+2)^0,f,c
 16218   00648E  0E7F               	movlw	127
 16219   006490  122E               	iorwf	(___fldiv@b+3)^0,f,c
 16220   006492                     l6984:
 16221   006492  503B               	movf	___fldiv@sign^0,w,c
 16222   006494  122E               	iorwf	(___fldiv@b+3)^0,f,c
 16223   006496  C02B  F02B         	movff	___fldiv@b,?___fldiv
 16224   00649A  C02C  F02C         	movff	___fldiv@b+1,?___fldiv+1
 16225   00649E  C02D  F02D         	movff	___fldiv@b+2,?___fldiv+2
 16226   0064A2  C02E  F02E         	movff	___fldiv@b+3,?___fldiv+3
 16227   0064A6  EF98  F033         	goto	l1147
 16228   0064AA                     l6990:
 16229   0064AA  5042               	movf	___fldiv@bexp^0,w,c
 16230   0064AC  A4D8               	btfss	status,2,c
 16231   0064AE  EF5B  F032         	goto	u7321
 16232   0064B2  EF5D  F032         	goto	u7320
 16233   0064B6                     u7321:
 16234   0064B6  EF67  F032         	goto	l6998
 16235   0064BA                     u7320:
 16236   0064BA  0E00               	movlw	0
 16237   0064BC  6E2B               	movwf	?___fldiv^0,c
 16238   0064BE  0E00               	movlw	0
 16239   0064C0  6E2C               	movwf	(?___fldiv+1)^0,c
 16240   0064C2  0E00               	movlw	0
 16241   0064C4  6E2D               	movwf	(?___fldiv+2)^0,c
 16242   0064C6  0E00               	movlw	0
 16243   0064C8  6E2E               	movwf	(?___fldiv+3)^0,c
 16244   0064CA  EF98  F033         	goto	l1147
 16245   0064CE                     l6998:
 16246   0064CE  5043               	movf	___fldiv@aexp^0,w,c
 16247   0064D0  C042  F033         	movff	___fldiv@bexp,??___fldiv
 16248   0064D4  6A34               	clrf	(??___fldiv+1)^0,c
 16249   0064D6  5E33               	subwf	??___fldiv^0,f,c
 16250   0064D8  0E00               	movlw	0
 16251   0064DA  5A34               	subwfb	(??___fldiv+1)^0,f,c
 16252   0064DC  0E7F               	movlw	127
 16253   0064DE  2433               	addwf	??___fldiv^0,w,c
 16254   0064E0  6E3C               	movwf	___fldiv@new_exp^0,c
 16255   0064E2  0E00               	movlw	0
 16256   0064E4  2034               	addwfc	(??___fldiv+1)^0,w,c
 16257   0064E6  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 16258   0064E8  C02B  F037         	movff	___fldiv@b,___fldiv@rem
 16259   0064EC  C02C  F038         	movff	___fldiv@b+1,___fldiv@rem+1
 16260   0064F0  C02D  F039         	movff	___fldiv@b+2,___fldiv@rem+2
 16261   0064F4  C02E  F03A         	movff	___fldiv@b+3,___fldiv@rem+3
 16262   0064F8  0E00               	movlw	0
 16263   0064FA  6E2B               	movwf	___fldiv@b^0,c
 16264   0064FC  0E00               	movlw	0
 16265   0064FE  6E2C               	movwf	(___fldiv@b+1)^0,c
 16266   006500  0E00               	movlw	0
 16267   006502  6E2D               	movwf	(___fldiv@b+2)^0,c
 16268   006504  0E00               	movlw	0
 16269   006506  6E2E               	movwf	(___fldiv@b+3)^0,c
 16270   006508  0E00               	movlw	0
 16271   00650A  6E3E               	movwf	___fldiv@grs^0,c
 16272   00650C  0E00               	movlw	0
 16273   00650E  6E3F               	movwf	(___fldiv@grs+1)^0,c
 16274   006510  0E00               	movlw	0
 16275   006512  6E40               	movwf	(___fldiv@grs+2)^0,c
 16276   006514  0E00               	movlw	0
 16277   006516  6E41               	movwf	(___fldiv@grs+3)^0,c
 16278   006518  0E00               	movlw	0
 16279   00651A  6E43               	movwf	___fldiv@aexp^0,c
 16280   00651C  EFC8  F032         	goto	l1149
 16281   006520                     l7008:
 16282   006520  5043               	movf	___fldiv@aexp^0,w,c
 16283   006522  B4D8               	btfsc	status,2,c
 16284   006524  EF96  F032         	goto	u7331
 16285   006528  EF98  F032         	goto	u7330
 16286   00652C                     u7331:
 16287   00652C  EFAF  F032         	goto	l7016
 16288   006530                     u7330:
 16289   006530  90D8               	bcf	status,0,c
 16290   006532  3637               	rlcf	___fldiv@rem^0,f,c
 16291   006534  3638               	rlcf	(___fldiv@rem+1)^0,f,c
 16292   006536  3639               	rlcf	(___fldiv@rem+2)^0,f,c
 16293   006538  363A               	rlcf	(___fldiv@rem+3)^0,f,c
 16294   00653A  90D8               	bcf	status,0,c
 16295   00653C  362B               	rlcf	___fldiv@b^0,f,c
 16296   00653E  362C               	rlcf	(___fldiv@b+1)^0,f,c
 16297   006540  362D               	rlcf	(___fldiv@b+2)^0,f,c
 16298   006542  362E               	rlcf	(___fldiv@b+3)^0,f,c
 16299   006544  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 16300   006546  EFA7  F032         	goto	u7341
 16301   00654A  EFA9  F032         	goto	u7340
 16302   00654E                     u7341:
 16303   00654E  EFAA  F032         	goto	l1152
 16304   006552                     u7340:
 16305   006552  802B               	bsf	___fldiv@b^0,0,c
 16306   006554                     l1152:
 16307   006554  90D8               	bcf	status,0,c
 16308   006556  363E               	rlcf	___fldiv@grs^0,f,c
 16309   006558  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 16310   00655A  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 16311   00655C  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 16312   00655E                     l7016:
 16313   00655E  502F               	movf	___fldiv@a^0,w,c
 16314   006560  5C37               	subwf	___fldiv@rem^0,w,c
 16315   006562  5030               	movf	(___fldiv@a+1)^0,w,c
 16316   006564  5838               	subwfb	(___fldiv@rem+1)^0,w,c
 16317   006566  5031               	movf	(___fldiv@a+2)^0,w,c
 16318   006568  5839               	subwfb	(___fldiv@rem+2)^0,w,c
 16319   00656A  5032               	movf	(___fldiv@a+3)^0,w,c
 16320   00656C  583A               	subwfb	(___fldiv@rem+3)^0,w,c
 16321   00656E  A0D8               	btfss	status,0,c
 16322   006570  EFBC  F032         	goto	u7351
 16323   006574  EFBE  F032         	goto	u7350
 16324   006578                     u7351:
 16325   006578  EFC7  F032         	goto	l7022
 16326   00657C                     u7350:
 16327   00657C  8C41               	bsf	(___fldiv@grs+3)^0,6,c
 16328   00657E  502F               	movf	___fldiv@a^0,w,c
 16329   006580  5E37               	subwf	___fldiv@rem^0,f,c
 16330   006582  5030               	movf	(___fldiv@a+1)^0,w,c
 16331   006584  5A38               	subwfb	(___fldiv@rem+1)^0,f,c
 16332   006586  5031               	movf	(___fldiv@a+2)^0,w,c
 16333   006588  5A39               	subwfb	(___fldiv@rem+2)^0,f,c
 16334   00658A  5032               	movf	(___fldiv@a+3)^0,w,c
 16335   00658C  5A3A               	subwfb	(___fldiv@rem+3)^0,f,c
 16336   00658E                     l7022:
 16337   00658E  2A43               	incf	___fldiv@aexp^0,f,c
 16338   006590                     l1149:
 16339   006590  0E19               	movlw	25
 16340   006592  6443               	cpfsgt	___fldiv@aexp^0,c
 16341   006594  EFCE  F032         	goto	u7361
 16342   006598  EFD0  F032         	goto	u7360
 16343   00659C                     u7361:
 16344   00659C  EF90  F032         	goto	l7008
 16345   0065A0                     u7360:
 16346   0065A0  5037               	movf	___fldiv@rem^0,w,c
 16347   0065A2  1038               	iorwf	(___fldiv@rem+1)^0,w,c
 16348   0065A4  1039               	iorwf	(___fldiv@rem+2)^0,w,c
 16349   0065A6  103A               	iorwf	(___fldiv@rem+3)^0,w,c
 16350   0065A8  B4D8               	btfsc	status,2,c
 16351   0065AA  EFD9  F032         	goto	u7371
 16352   0065AE  EFDB  F032         	goto	u7370
 16353   0065B2                     u7371:
 16354   0065B2  EFF3  F032         	goto	l7034
 16355   0065B6                     u7370:
 16356   0065B6  803E               	bsf	___fldiv@grs^0,0,c
 16357   0065B8  EFF3  F032         	goto	l7034
 16358   0065BC                     l7028:
 16359   0065BC  90D8               	bcf	status,0,c
 16360   0065BE  362B               	rlcf	___fldiv@b^0,f,c
 16361   0065C0  362C               	rlcf	(___fldiv@b+1)^0,f,c
 16362   0065C2  362D               	rlcf	(___fldiv@b+2)^0,f,c
 16363   0065C4  362E               	rlcf	(___fldiv@b+3)^0,f,c
 16364   0065C6  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 16365   0065C8  EFE8  F032         	goto	u7381
 16366   0065CC  EFEA  F032         	goto	u7380
 16367   0065D0                     u7381:
 16368   0065D0  EFEB  F032         	goto	l1158
 16369   0065D4                     u7380:
 16370   0065D4  802B               	bsf	___fldiv@b^0,0,c
 16371   0065D6                     l1158:
 16372   0065D6  90D8               	bcf	status,0,c
 16373   0065D8  363E               	rlcf	___fldiv@grs^0,f,c
 16374   0065DA  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 16375   0065DC  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 16376   0065DE  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 16377   0065E0  063C               	decf	___fldiv@new_exp^0,f,c
 16378   0065E2  A0D8               	btfss	status,0,c
 16379   0065E4  063D               	decf	(___fldiv@new_exp+1)^0,f,c
 16380   0065E6                     l7034:
 16381   0065E6  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 16382   0065E8  EFF8  F032         	goto	u7391
 16383   0065EC  EFFA  F032         	goto	u7390
 16384   0065F0                     u7391:
 16385   0065F0  EFDE  F032         	goto	l7028
 16386   0065F4                     u7390:
 16387   0065F4  0E00               	movlw	0
 16388   0065F6  6E43               	movwf	___fldiv@aexp^0,c
 16389   0065F8  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 16390   0065FA  EF01  F033         	goto	u7401
 16391   0065FE  EF03  F033         	goto	u7400
 16392   006602                     u7401:
 16393   006602  EF27  F033         	goto	l1160
 16394   006606                     u7400:
 16395   006606  0EFF               	movlw	255
 16396   006608  143E               	andwf	___fldiv@grs^0,w,c
 16397   00660A  6E33               	movwf	??___fldiv^0,c
 16398   00660C  0EFF               	movlw	255
 16399   00660E  143F               	andwf	(___fldiv@grs+1)^0,w,c
 16400   006610  6E34               	movwf	(??___fldiv+1)^0,c
 16401   006612  0EFF               	movlw	255
 16402   006614  1440               	andwf	(___fldiv@grs+2)^0,w,c
 16403   006616  6E35               	movwf	(??___fldiv+2)^0,c
 16404   006618  0E7F               	movlw	127
 16405   00661A  1441               	andwf	(___fldiv@grs+3)^0,w,c
 16406   00661C  6E36               	movwf	(??___fldiv+3)^0,c
 16407   00661E  5033               	movf	??___fldiv^0,w,c
 16408   006620  1034               	iorwf	(??___fldiv+1)^0,w,c
 16409   006622  1035               	iorwf	(??___fldiv+2)^0,w,c
 16410   006624  1036               	iorwf	(??___fldiv+3)^0,w,c
 16411   006626  B4D8               	btfsc	status,2,c
 16412   006628  EF18  F033         	goto	u7411
 16413   00662C  EF1A  F033         	goto	u7410
 16414   006630                     u7411:
 16415   006630  EF1E  F033         	goto	l1161
 16416   006634                     u7410:
 16417   006634                     l7042:
 16418   006634  0E01               	movlw	1
 16419   006636  6E43               	movwf	___fldiv@aexp^0,c
 16420   006638  EF27  F033         	goto	l1160
 16421   00663C                     l1161:
 16422   00663C  A02B               	btfss	___fldiv@b^0,0,c
 16423   00663E  EF23  F033         	goto	u7421
 16424   006642  EF25  F033         	goto	u7420
 16425   006646                     u7421:
 16426   006646  EF27  F033         	goto	l1160
 16427   00664A                     u7420:
 16428   00664A  EF1A  F033         	goto	l7042
 16429   00664E                     l1160:
 16430   00664E  5043               	movf	___fldiv@aexp^0,w,c
 16431   006650  B4D8               	btfsc	status,2,c
 16432   006652  EF2D  F033         	goto	u7431
 16433   006656  EF2F  F033         	goto	u7430
 16434   00665A                     u7431:
 16435   00665A  EF53  F033         	goto	l7054
 16436   00665E                     u7430:
 16437   00665E  0E01               	movlw	1
 16438   006660  262B               	addwf	___fldiv@b^0,f,c
 16439   006662  0E00               	movlw	0
 16440   006664  222C               	addwfc	(___fldiv@b+1)^0,f,c
 16441   006666  222D               	addwfc	(___fldiv@b+2)^0,f,c
 16442   006668  222E               	addwfc	(___fldiv@b+3)^0,f,c
 16443   00666A  A02E               	btfss	(___fldiv@b+3)^0,0,c
 16444   00666C  EF3A  F033         	goto	u7441
 16445   006670  EF3C  F033         	goto	u7440
 16446   006674                     u7441:
 16447   006674  EF53  F033         	goto	l7054
 16448   006678                     u7440:
 16449   006678  C02B  F033         	movff	___fldiv@b,??___fldiv
 16450   00667C  C02C  F034         	movff	___fldiv@b+1,??___fldiv+1
 16451   006680  C02D  F035         	movff	___fldiv@b+2,??___fldiv+2
 16452   006684  C02E  F036         	movff	___fldiv@b+3,??___fldiv+3
 16453   006688  3436               	rlcf	(??___fldiv+3)^0,w,c
 16454   00668A  3236               	rrcf	(??___fldiv+3)^0,f,c
 16455   00668C  3235               	rrcf	(??___fldiv+2)^0,f,c
 16456   00668E  3234               	rrcf	(??___fldiv+1)^0,f,c
 16457   006690  3233               	rrcf	??___fldiv^0,f,c
 16458   006692  C033  F02B         	movff	??___fldiv,___fldiv@b
 16459   006696  C034  F02C         	movff	??___fldiv+1,___fldiv@b+1
 16460   00669A  C035  F02D         	movff	??___fldiv+2,___fldiv@b+2
 16461   00669E  C036  F02E         	movff	??___fldiv+3,___fldiv@b+3
 16462   0066A2  4A3C               	infsnz	___fldiv@new_exp^0,f,c
 16463   0066A4  2A3D               	incf	(___fldiv@new_exp+1)^0,f,c
 16464   0066A6                     l7054:
 16465   0066A6  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 16466   0066A8  EF5E  F033         	goto	u7451
 16467   0066AC  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 16468   0066AE  E108               	bnz	u7450
 16469   0066B0  283C               	incf	___fldiv@new_exp^0,w,c
 16470   0066B2  A0D8               	btfss	status,0,c
 16471   0066B4  EF5E  F033         	goto	u7451
 16472   0066B8  EF60  F033         	goto	u7450
 16473   0066BC                     u7451:
 16474   0066BC  EF6B  F033         	goto	l7058
 16475   0066C0                     u7450:
 16476   0066C0  0E00               	movlw	0
 16477   0066C2  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 16478   0066C4  683C               	setf	___fldiv@new_exp^0,c
 16479   0066C6  0E00               	movlw	0
 16480   0066C8  6E2B               	movwf	___fldiv@b^0,c
 16481   0066CA  0E00               	movlw	0
 16482   0066CC  6E2C               	movwf	(___fldiv@b+1)^0,c
 16483   0066CE  0E00               	movlw	0
 16484   0066D0  6E2D               	movwf	(___fldiv@b+2)^0,c
 16485   0066D2  0E00               	movlw	0
 16486   0066D4  6E2E               	movwf	(___fldiv@b+3)^0,c
 16487   0066D6                     l7058:
 16488   0066D6  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 16489   0066D8  EF78  F033         	goto	u7460
 16490   0066DC  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 16491   0066DE  E106               	bnz	u7461
 16492   0066E0  043C               	decf	___fldiv@new_exp^0,w,c
 16493   0066E2  B0D8               	btfsc	status,0,c
 16494   0066E4  EF76  F033         	goto	u7461
 16495   0066E8  EF78  F033         	goto	u7460
 16496   0066EC                     u7461:
 16497   0066EC  EF86  F033         	goto	l7062
 16498   0066F0                     u7460:
 16499   0066F0  0E00               	movlw	0
 16500   0066F2  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 16501   0066F4  0E00               	movlw	0
 16502   0066F6  6E3C               	movwf	___fldiv@new_exp^0,c
 16503   0066F8  0E00               	movlw	0
 16504   0066FA  6E2B               	movwf	___fldiv@b^0,c
 16505   0066FC  0E00               	movlw	0
 16506   0066FE  6E2C               	movwf	(___fldiv@b+1)^0,c
 16507   006700  0E00               	movlw	0
 16508   006702  6E2D               	movwf	(___fldiv@b+2)^0,c
 16509   006704  0E00               	movlw	0
 16510   006706  6E2E               	movwf	(___fldiv@b+3)^0,c
 16511   006708  0E00               	movlw	0
 16512   00670A  6E3B               	movwf	___fldiv@sign^0,c
 16513   00670C                     l7062:
 16514   00670C  C03C  F042         	movff	___fldiv@new_exp,___fldiv@bexp
 16515   006710  A042               	btfss	___fldiv@bexp^0,0,c
 16516   006712  EF8D  F033         	goto	u7471
 16517   006716  EF8F  F033         	goto	u7470
 16518   00671A                     u7471:
 16519   00671A  EF92  F033         	goto	l7068
 16520   00671E                     u7470:
 16521   00671E  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 16522   006720  EF93  F033         	goto	l7070
 16523   006724                     l7068:
 16524   006724  9E2D               	bcf	(___fldiv@b+2)^0,7,c
 16525   006726                     l7070:
 16526   006726  90D8               	bcf	status,0,c
 16527   006728  3042               	rrcf	___fldiv@bexp^0,w,c
 16528   00672A  6E2E               	movwf	(___fldiv@b+3)^0,c
 16529   00672C  EF49  F032         	goto	l6984
 16530   006730                     l1147:
 16531   006730  0012               	return		;funcret
 16532   006732                     __end_of___fldiv:
 16533                           	callstack 0
 16534                           
 16535 ;; *************** function _color_read_Red *****************
 16536 ;; Defined at:
 16537 ;;		line 68 in file "color.c"
 16538 ;; Parameters:    Size  Location     Type
 16539 ;;		None
 16540 ;; Auto vars:     Size  Location     Type
 16541 ;;  tmp             2   10[COMRAM] unsigned int 
 16542 ;; Return value:  Size  Location     Type
 16543 ;;                  2    5[COMRAM] unsigned int 
 16544 ;; Registers used:
 16545 ;;		wreg, status,2, status,0, cstack
 16546 ;; Tracked objects:
 16547 ;;		On entry : 0/0
 16548 ;;		On exit  : 0/0
 16549 ;;		Unchanged: 0/0
 16550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16552 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16553 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16554 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16555 ;;Total ram usage:        7 bytes
 16556 ;; Hardware stack levels used: 1
 16557 ;; Hardware stack levels required when called: 4
 16558 ;; This function calls:
 16559 ;;		_I2C_2_Master_Read
 16560 ;;		_I2C_2_Master_RepStart
 16561 ;;		_I2C_2_Master_Start
 16562 ;;		_I2C_2_Master_Stop
 16563 ;;		_I2C_2_Master_Write
 16564 ;; This function is called by:
 16565 ;;		_main
 16566 ;; This function uses a non-reentrant model
 16567 ;;
 16568                           
 16569                           	psect	text46
 16570   007FDE                     __ptext46:
 16571                           	callstack 0
 16572   007FDE                     _color_read_Red:
 16573                           	callstack 26
 16574   007FDE                     
 16575                           ;color.c: 69:  unsigned int tmp;;color.c: 70:  I2C_2_Master_Start();
 16576   007FDE  EC80  F042         	call	_I2C_2_Master_Start	;wreg free
 16577                           
 16578                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x00);
 16579   007FE2  0E52               	movlw	82
 16580   007FE4  EC65  F042         	call	_I2C_2_Master_Write
 16581                           
 16582                           ;color.c: 72:  I2C_2_Master_Write(0xA0 | 0x16);
 16583   007FE8  0EB6               	movlw	182
 16584   007FEA  EC65  F042         	call	_I2C_2_Master_Write
 16585                           
 16586                           ;color.c: 73:  I2C_2_Master_RepStart();
 16587   007FEE  EC76  F042         	call	_I2C_2_Master_RepStart	;wreg free
 16588                           
 16589                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x01);
 16590   007FF2  0E53               	movlw	83
 16591   007FF4  EC65  F042         	call	_I2C_2_Master_Write
 16592                           
 16593                           ;color.c: 75:  tmp=I2C_2_Master_Read(1);
 16594   007FF8  0E01               	movlw	1
 16595   007FFA  ECFA  F040         	call	_I2C_2_Master_Read
 16596   007FFE  6E08               	movwf	??_color_read_Red^0,c
 16597   008000  5008               	movf	??_color_read_Red^0,w,c
 16598   008002  6E0B               	movwf	color_read_Red@tmp^0,c
 16599   008004  6A0C               	clrf	(color_read_Red@tmp+1)^0,c
 16600                           
 16601                           ;color.c: 76:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 16602   008006  0E00               	movlw	0
 16603   008008  ECFA  F040         	call	_I2C_2_Master_Read
 16604   00800C  6E08               	movwf	??_color_read_Red^0,c
 16605   00800E  5008               	movf	??_color_read_Red^0,w,c
 16606   008010  6E0A               	movwf	(??_color_read_Red+2)^0,c
 16607   008012  6A09               	clrf	(??_color_read_Red+1)^0,c
 16608   008014  500B               	movf	color_read_Red@tmp^0,w,c
 16609   008016  1009               	iorwf	(??_color_read_Red+1)^0,w,c
 16610   008018  6E0B               	movwf	color_read_Red@tmp^0,c
 16611   00801A  500C               	movf	(color_read_Red@tmp+1)^0,w,c
 16612   00801C  100A               	iorwf	(??_color_read_Red+2)^0,w,c
 16613   00801E  6E0C               	movwf	(color_read_Red@tmp+1)^0,c
 16614                           
 16615                           ;color.c: 77:  I2C_2_Master_Stop();
 16616   008020  EC7B  F042         	call	_I2C_2_Master_Stop	;wreg free
 16617   008024                     
 16618                           ;color.c: 78:  return tmp;
 16619   008024  C00B  F006         	movff	color_read_Red@tmp,?_color_read_Red
 16620   008028  C00C  F007         	movff	color_read_Red@tmp+1,?_color_read_Red+1
 16621   00802C  0012               	return		;funcret
 16622   00802E                     __end_of_color_read_Red:
 16623                           	callstack 0
 16624                           
 16625 ;; *************** function _color_read_Green *****************
 16626 ;; Defined at:
 16627 ;;		line 81 in file "color.c"
 16628 ;; Parameters:    Size  Location     Type
 16629 ;;		None
 16630 ;; Auto vars:     Size  Location     Type
 16631 ;;  tmp             2   10[COMRAM] unsigned int 
 16632 ;; Return value:  Size  Location     Type
 16633 ;;                  2    5[COMRAM] unsigned int 
 16634 ;; Registers used:
 16635 ;;		wreg, status,2, status,0, cstack
 16636 ;; Tracked objects:
 16637 ;;		On entry : 0/0
 16638 ;;		On exit  : 0/0
 16639 ;;		Unchanged: 0/0
 16640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16643 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16644 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16645 ;;Total ram usage:        7 bytes
 16646 ;; Hardware stack levels used: 1
 16647 ;; Hardware stack levels required when called: 4
 16648 ;; This function calls:
 16649 ;;		_I2C_2_Master_Read
 16650 ;;		_I2C_2_Master_RepStart
 16651 ;;		_I2C_2_Master_Start
 16652 ;;		_I2C_2_Master_Stop
 16653 ;;		_I2C_2_Master_Write
 16654 ;; This function is called by:
 16655 ;;		_main
 16656 ;; This function uses a non-reentrant model
 16657 ;;
 16658                           
 16659                           	psect	text47
 16660   00802E                     __ptext47:
 16661                           	callstack 0
 16662   00802E                     _color_read_Green:
 16663                           	callstack 26
 16664   00802E                     
 16665                           ;color.c: 82:  unsigned int tmp;;color.c: 83:  I2C_2_Master_Start();
 16666   00802E  EC80  F042         	call	_I2C_2_Master_Start	;wreg free
 16667                           
 16668                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x00);
 16669   008032  0E52               	movlw	82
 16670   008034  EC65  F042         	call	_I2C_2_Master_Write
 16671                           
 16672                           ;color.c: 85:  I2C_2_Master_Write(0xA0 | 0x18);
 16673   008038  0EB8               	movlw	184
 16674   00803A  EC65  F042         	call	_I2C_2_Master_Write
 16675                           
 16676                           ;color.c: 86:  I2C_2_Master_RepStart();
 16677   00803E  EC76  F042         	call	_I2C_2_Master_RepStart	;wreg free
 16678                           
 16679                           ;color.c: 87:  I2C_2_Master_Write(0x52 | 0x01);
 16680   008042  0E53               	movlw	83
 16681   008044  EC65  F042         	call	_I2C_2_Master_Write
 16682                           
 16683                           ;color.c: 88:  tmp=I2C_2_Master_Read(1);
 16684   008048  0E01               	movlw	1
 16685   00804A  ECFA  F040         	call	_I2C_2_Master_Read
 16686   00804E  6E08               	movwf	??_color_read_Green^0,c
 16687   008050  5008               	movf	??_color_read_Green^0,w,c
 16688   008052  6E0B               	movwf	color_read_Green@tmp^0,c
 16689   008054  6A0C               	clrf	(color_read_Green@tmp+1)^0,c
 16690                           
 16691                           ;color.c: 89:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 16692   008056  0E00               	movlw	0
 16693   008058  ECFA  F040         	call	_I2C_2_Master_Read
 16694   00805C  6E08               	movwf	??_color_read_Green^0,c
 16695   00805E  5008               	movf	??_color_read_Green^0,w,c
 16696   008060  6E0A               	movwf	(??_color_read_Green+2)^0,c
 16697   008062  6A09               	clrf	(??_color_read_Green+1)^0,c
 16698   008064  500B               	movf	color_read_Green@tmp^0,w,c
 16699   008066  1009               	iorwf	(??_color_read_Green+1)^0,w,c
 16700   008068  6E0B               	movwf	color_read_Green@tmp^0,c
 16701   00806A  500C               	movf	(color_read_Green@tmp+1)^0,w,c
 16702   00806C  100A               	iorwf	(??_color_read_Green+2)^0,w,c
 16703   00806E  6E0C               	movwf	(color_read_Green@tmp+1)^0,c
 16704                           
 16705                           ;color.c: 90:  I2C_2_Master_Stop();
 16706   008070  EC7B  F042         	call	_I2C_2_Master_Stop	;wreg free
 16707   008074                     
 16708                           ;color.c: 91:  return tmp;
 16709   008074  C00B  F006         	movff	color_read_Green@tmp,?_color_read_Green
 16710   008078  C00C  F007         	movff	color_read_Green@tmp+1,?_color_read_Green+1
 16711   00807C  0012               	return		;funcret
 16712   00807E                     __end_of_color_read_Green:
 16713                           	callstack 0
 16714                           
 16715 ;; *************** function _color_read_Clear *****************
 16716 ;; Defined at:
 16717 ;;		line 55 in file "color.c"
 16718 ;; Parameters:    Size  Location     Type
 16719 ;;		None
 16720 ;; Auto vars:     Size  Location     Type
 16721 ;;  tmp             2   10[COMRAM] unsigned int 
 16722 ;; Return value:  Size  Location     Type
 16723 ;;                  2    5[COMRAM] unsigned int 
 16724 ;; Registers used:
 16725 ;;		wreg, status,2, status,0, cstack
 16726 ;; Tracked objects:
 16727 ;;		On entry : 0/0
 16728 ;;		On exit  : 0/0
 16729 ;;		Unchanged: 0/0
 16730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16732 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16733 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16734 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16735 ;;Total ram usage:        7 bytes
 16736 ;; Hardware stack levels used: 1
 16737 ;; Hardware stack levels required when called: 4
 16738 ;; This function calls:
 16739 ;;		_I2C_2_Master_Read
 16740 ;;		_I2C_2_Master_RepStart
 16741 ;;		_I2C_2_Master_Start
 16742 ;;		_I2C_2_Master_Stop
 16743 ;;		_I2C_2_Master_Write
 16744 ;; This function is called by:
 16745 ;;		_main
 16746 ;; This function uses a non-reentrant model
 16747 ;;
 16748                           
 16749                           	psect	text48
 16750   00807E                     __ptext48:
 16751                           	callstack 0
 16752   00807E                     _color_read_Clear:
 16753                           	callstack 26
 16754   00807E                     
 16755                           ;color.c: 56:  unsigned int tmp;;color.c: 57:  I2C_2_Master_Start();
 16756   00807E  EC80  F042         	call	_I2C_2_Master_Start	;wreg free
 16757                           
 16758                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
 16759   008082  0E52               	movlw	82
 16760   008084  EC65  F042         	call	_I2C_2_Master_Write
 16761                           
 16762                           ;color.c: 59:  I2C_2_Master_Write(0xA0 | 0x14);
 16763   008088  0EB4               	movlw	180
 16764   00808A  EC65  F042         	call	_I2C_2_Master_Write
 16765                           
 16766                           ;color.c: 60:  I2C_2_Master_RepStart();
 16767   00808E  EC76  F042         	call	_I2C_2_Master_RepStart	;wreg free
 16768                           
 16769                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
 16770   008092  0E53               	movlw	83
 16771   008094  EC65  F042         	call	_I2C_2_Master_Write
 16772                           
 16773                           ;color.c: 62:  tmp=I2C_2_Master_Read(1);
 16774   008098  0E01               	movlw	1
 16775   00809A  ECFA  F040         	call	_I2C_2_Master_Read
 16776   00809E  6E08               	movwf	??_color_read_Clear^0,c
 16777   0080A0  5008               	movf	??_color_read_Clear^0,w,c
 16778   0080A2  6E0B               	movwf	color_read_Clear@tmp^0,c
 16779   0080A4  6A0C               	clrf	(color_read_Clear@tmp+1)^0,c
 16780                           
 16781                           ;color.c: 63:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 16782   0080A6  0E00               	movlw	0
 16783   0080A8  ECFA  F040         	call	_I2C_2_Master_Read
 16784   0080AC  6E08               	movwf	??_color_read_Clear^0,c
 16785   0080AE  5008               	movf	??_color_read_Clear^0,w,c
 16786   0080B0  6E0A               	movwf	(??_color_read_Clear+2)^0,c
 16787   0080B2  6A09               	clrf	(??_color_read_Clear+1)^0,c
 16788   0080B4  500B               	movf	color_read_Clear@tmp^0,w,c
 16789   0080B6  1009               	iorwf	(??_color_read_Clear+1)^0,w,c
 16790   0080B8  6E0B               	movwf	color_read_Clear@tmp^0,c
 16791   0080BA  500C               	movf	(color_read_Clear@tmp+1)^0,w,c
 16792   0080BC  100A               	iorwf	(??_color_read_Clear+2)^0,w,c
 16793   0080BE  6E0C               	movwf	(color_read_Clear@tmp+1)^0,c
 16794                           
 16795                           ;color.c: 64:  I2C_2_Master_Stop();
 16796   0080C0  EC7B  F042         	call	_I2C_2_Master_Stop	;wreg free
 16797   0080C4                     
 16798                           ;color.c: 65:  return tmp;
 16799   0080C4  C00B  F006         	movff	color_read_Clear@tmp,?_color_read_Clear
 16800   0080C8  C00C  F007         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 16801   0080CC  0012               	return		;funcret
 16802   0080CE                     __end_of_color_read_Clear:
 16803                           	callstack 0
 16804                           
 16805 ;; *************** function _color_read_Blue *****************
 16806 ;; Defined at:
 16807 ;;		line 94 in file "color.c"
 16808 ;; Parameters:    Size  Location     Type
 16809 ;;		None
 16810 ;; Auto vars:     Size  Location     Type
 16811 ;;  tmp             2   10[COMRAM] unsigned int 
 16812 ;; Return value:  Size  Location     Type
 16813 ;;                  2    5[COMRAM] unsigned int 
 16814 ;; Registers used:
 16815 ;;		wreg, status,2, status,0, cstack
 16816 ;; Tracked objects:
 16817 ;;		On entry : 0/0
 16818 ;;		On exit  : 0/0
 16819 ;;		Unchanged: 0/0
 16820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16821 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16822 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16823 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16824 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16825 ;;Total ram usage:        7 bytes
 16826 ;; Hardware stack levels used: 1
 16827 ;; Hardware stack levels required when called: 4
 16828 ;; This function calls:
 16829 ;;		_I2C_2_Master_Read
 16830 ;;		_I2C_2_Master_RepStart
 16831 ;;		_I2C_2_Master_Start
 16832 ;;		_I2C_2_Master_Stop
 16833 ;;		_I2C_2_Master_Write
 16834 ;; This function is called by:
 16835 ;;		_main
 16836 ;; This function uses a non-reentrant model
 16837 ;;
 16838                           
 16839                           	psect	text49
 16840   0080CE                     __ptext49:
 16841                           	callstack 0
 16842   0080CE                     _color_read_Blue:
 16843                           	callstack 26
 16844   0080CE                     
 16845                           ;color.c: 95:  unsigned int tmp;;color.c: 96:  I2C_2_Master_Start();
 16846   0080CE  EC80  F042         	call	_I2C_2_Master_Start	;wreg free
 16847                           
 16848                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x00);
 16849   0080D2  0E52               	movlw	82
 16850   0080D4  EC65  F042         	call	_I2C_2_Master_Write
 16851                           
 16852                           ;color.c: 98:  I2C_2_Master_Write(0xA0 | 0x1A);
 16853   0080D8  0EBA               	movlw	186
 16854   0080DA  EC65  F042         	call	_I2C_2_Master_Write
 16855                           
 16856                           ;color.c: 99:  I2C_2_Master_RepStart();
 16857   0080DE  EC76  F042         	call	_I2C_2_Master_RepStart	;wreg free
 16858                           
 16859                           ;color.c: 100:  I2C_2_Master_Write(0x52 | 0x01);
 16860   0080E2  0E53               	movlw	83
 16861   0080E4  EC65  F042         	call	_I2C_2_Master_Write
 16862                           
 16863                           ;color.c: 101:  tmp=I2C_2_Master_Read(1);
 16864   0080E8  0E01               	movlw	1
 16865   0080EA  ECFA  F040         	call	_I2C_2_Master_Read
 16866   0080EE  6E08               	movwf	??_color_read_Blue^0,c
 16867   0080F0  5008               	movf	??_color_read_Blue^0,w,c
 16868   0080F2  6E0B               	movwf	color_read_Blue@tmp^0,c
 16869   0080F4  6A0C               	clrf	(color_read_Blue@tmp+1)^0,c
 16870                           
 16871                           ;color.c: 102:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 16872   0080F6  0E00               	movlw	0
 16873   0080F8  ECFA  F040         	call	_I2C_2_Master_Read
 16874   0080FC  6E08               	movwf	??_color_read_Blue^0,c
 16875   0080FE  5008               	movf	??_color_read_Blue^0,w,c
 16876   008100  6E0A               	movwf	(??_color_read_Blue+2)^0,c
 16877   008102  6A09               	clrf	(??_color_read_Blue+1)^0,c
 16878   008104  500B               	movf	color_read_Blue@tmp^0,w,c
 16879   008106  1009               	iorwf	(??_color_read_Blue+1)^0,w,c
 16880   008108  6E0B               	movwf	color_read_Blue@tmp^0,c
 16881   00810A  500C               	movf	(color_read_Blue@tmp+1)^0,w,c
 16882   00810C  100A               	iorwf	(??_color_read_Blue+2)^0,w,c
 16883   00810E  6E0C               	movwf	(color_read_Blue@tmp+1)^0,c
 16884                           
 16885                           ;color.c: 103:  I2C_2_Master_Stop();
 16886   008110  EC7B  F042         	call	_I2C_2_Master_Stop	;wreg free
 16887   008114                     
 16888                           ;color.c: 104:  return tmp;
 16889   008114  C00B  F006         	movff	color_read_Blue@tmp,?_color_read_Blue
 16890   008118  C00C  F007         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
 16891   00811C  0012               	return		;funcret
 16892   00811E                     __end_of_color_read_Blue:
 16893                           	callstack 0
 16894                           
 16895 ;; *************** function _I2C_2_Master_RepStart *****************
 16896 ;; Defined at:
 16897 ;;		line 30 in file "i2c.c"
 16898 ;; Parameters:    Size  Location     Type
 16899 ;;		None
 16900 ;; Auto vars:     Size  Location     Type
 16901 ;;		None
 16902 ;; Return value:  Size  Location     Type
 16903 ;;                  1    wreg      void 
 16904 ;; Registers used:
 16905 ;;		wreg, status,2, status,0, cstack
 16906 ;; Tracked objects:
 16907 ;;		On entry : 0/0
 16908 ;;		On exit  : 0/0
 16909 ;;		Unchanged: 0/0
 16910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16915 ;;Total ram usage:        0 bytes
 16916 ;; Hardware stack levels used: 1
 16917 ;; Hardware stack levels required when called: 3
 16918 ;; This function calls:
 16919 ;;		_I2C_2_Master_Idle
 16920 ;; This function is called by:
 16921 ;;		_color_read_Clear
 16922 ;;		_color_read_Red
 16923 ;;		_color_read_Green
 16924 ;;		_color_read_Blue
 16925 ;; This function uses a non-reentrant model
 16926 ;;
 16927                           
 16928                           	psect	text50
 16929   0084EC                     __ptext50:
 16930                           	callstack 0
 16931   0084EC                     _I2C_2_Master_RepStart:
 16932                           	callstack 26
 16933   0084EC                     
 16934                           ;i2c.c: 31:   I2C_2_Master_Idle();
 16935   0084EC  ECDB  F041         	call	_I2C_2_Master_Idle	;wreg free
 16936   0084F0                     
 16937                           ;i2c.c: 32:   SSP2CON2bits.RSEN = 1;
 16938   0084F0  010E               	movlb	14	; () banked
 16939   0084F2  83DA               	bsf	218,1,b	;volatile
 16940   0084F4                     
 16941                           ; BSR set to: 14
 16942   0084F4  0012               	return		;funcret
 16943   0084F6                     __end_of_I2C_2_Master_RepStart:
 16944                           	callstack 0
 16945                           
 16946 ;; *************** function _I2C_2_Master_Read *****************
 16947 ;; Defined at:
 16948 ;;		line 45 in file "i2c.c"
 16949 ;; Parameters:    Size  Location     Type
 16950 ;;  ack             1    wreg     unsigned char 
 16951 ;; Auto vars:     Size  Location     Type
 16952 ;;  ack             1    3[COMRAM] unsigned char 
 16953 ;;  tmp             1    4[COMRAM] unsigned char 
 16954 ;; Return value:  Size  Location     Type
 16955 ;;                  1    wreg      unsigned char 
 16956 ;; Registers used:
 16957 ;;		wreg, status,2, status,0, cstack
 16958 ;; Tracked objects:
 16959 ;;		On entry : 0/0
 16960 ;;		On exit  : 0/0
 16961 ;;		Unchanged: 0/0
 16962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16964 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16966 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16967 ;;Total ram usage:        3 bytes
 16968 ;; Hardware stack levels used: 1
 16969 ;; Hardware stack levels required when called: 3
 16970 ;; This function calls:
 16971 ;;		_I2C_2_Master_Idle
 16972 ;; This function is called by:
 16973 ;;		_color_read_Clear
 16974 ;;		_color_read_Red
 16975 ;;		_color_read_Green
 16976 ;;		_color_read_Blue
 16977 ;; This function uses a non-reentrant model
 16978 ;;
 16979                           
 16980                           	psect	text51
 16981   0081F4                     __ptext51:
 16982                           	callstack 0
 16983   0081F4                     _I2C_2_Master_Read:
 16984                           	callstack 26
 16985                           
 16986                           ; BSR set to: 14
 16987                           ;incstack = 0
 16988                           ;I2C_2_Master_Read@ack stored from wreg
 16989   0081F4  6E04               	movwf	I2C_2_Master_Read@ack^0,c
 16990   0081F6                     
 16991                           ;i2c.c: 46:   unsigned char tmp;;i2c.c: 47:   I2C_2_Master_Idle();
 16992   0081F6  ECDB  F041         	call	_I2C_2_Master_Idle	;wreg free
 16993   0081FA                     
 16994                           ;i2c.c: 48:   SSP2CON2bits.RCEN = 1;
 16995   0081FA  010E               	movlb	14	; () banked
 16996   0081FC  87DA               	bsf	218,3,b	;volatile
 16997                           
 16998                           ;i2c.c: 49:   I2C_2_Master_Idle();
 16999   0081FE  ECDB  F041         	call	_I2C_2_Master_Idle	;wreg free
 17000   008202                     
 17001                           ;i2c.c: 50:   tmp = SSP2BUF;
 17002   008202  CED5 F005          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 17003                           
 17004                           ;i2c.c: 51:   I2C_2_Master_Idle();
 17005   008206  ECDB  F041         	call	_I2C_2_Master_Idle	;wreg free
 17006   00820A                     
 17007                           ;i2c.c: 52:   SSP2CON2bits.ACKDT = !ack;
 17008   00820A  5004               	movf	I2C_2_Master_Read@ack^0,w,c
 17009   00820C  B4D8               	btfsc	status,2,c
 17010   00820E  EF0B  F041         	goto	u5401
 17011   008212  EF0F  F041         	goto	u5400
 17012   008216                     u5401:
 17013   008216  6A03               	clrf	??_I2C_2_Master_Read^0,c
 17014   008218  2A03               	incf	??_I2C_2_Master_Read^0,f,c
 17015   00821A  EF10  F041         	goto	u5418
 17016   00821E                     u5400:
 17017   00821E  6A03               	clrf	??_I2C_2_Master_Read^0,c
 17018   008220                     u5418:
 17019   008220  3A03               	swapf	??_I2C_2_Master_Read^0,f,c
 17020   008222  4603               	rlncf	??_I2C_2_Master_Read^0,f,c
 17021   008224  010E               	movlb	14	; () banked
 17022   008226  51DA               	movf	218,w,b	;volatile
 17023   008228  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 17024   00822A  0BDF               	andlw	-33
 17025   00822C  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 17026   00822E  6FDA               	movwf	218,b	;volatile
 17027   008230                     
 17028                           ; BSR set to: 14
 17029                           ;i2c.c: 53:   SSP2CON2bits.ACKEN = 1;
 17030   008230  89DA               	bsf	218,4,b	;volatile
 17031   008232                     
 17032                           ; BSR set to: 14
 17033                           ;i2c.c: 54:   return tmp;
 17034   008232  5005               	movf	I2C_2_Master_Read@tmp^0,w,c
 17035   008234                     
 17036                           ; BSR set to: 14
 17037   008234  0012               	return		;funcret
 17038   008236                     __end_of_I2C_2_Master_Read:
 17039                           	callstack 0
 17040                           
 17041 ;; *************** function _color_click_toggleLED *****************
 17042 ;; Defined at:
 17043 ;;		line 108 in file "color.c"
 17044 ;; Parameters:    Size  Location     Type
 17045 ;;		None
 17046 ;; Auto vars:     Size  Location     Type
 17047 ;;		None
 17048 ;; Return value:  Size  Location     Type
 17049 ;;                  1    wreg      void 
 17050 ;; Registers used:
 17051 ;;		wreg, status,2, status,0
 17052 ;; Tracked objects:
 17053 ;;		On entry : 0/0
 17054 ;;		On exit  : 0/0
 17055 ;;		Unchanged: 0/0
 17056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17061 ;;Total ram usage:        1 bytes
 17062 ;; Hardware stack levels used: 1
 17063 ;; Hardware stack levels required when called: 2
 17064 ;; This function calls:
 17065 ;;		Nothing
 17066 ;; This function is called by:
 17067 ;;		_main
 17068 ;; This function uses a non-reentrant model
 17069 ;;
 17070                           
 17071                           	psect	text52
 17072   007ED2                     __ptext52:
 17073                           	callstack 0
 17074   007ED2                     _color_click_toggleLED:
 17075                           	callstack 28
 17076   007ED2                     
 17077                           ;color.c: 109:     LATGbits.LATG0 = !LATGbits.LATG0;
 17078   007ED2  A07F               	btfss	127,0,c	;volatile
 17079   007ED4  EF6E  F03F         	goto	u6051
 17080   007ED8  EF72  F03F         	goto	u6050
 17081   007EDC                     u6051:
 17082   007EDC  6A02               	clrf	??_color_click_toggleLED^0,c
 17083   007EDE  2A02               	incf	??_color_click_toggleLED^0,f,c
 17084   007EE0  EF73  F03F         	goto	u6068
 17085   007EE4                     u6050:
 17086   007EE4  6A02               	clrf	??_color_click_toggleLED^0,c
 17087   007EE6                     u6068:
 17088   007EE6  507F               	movf	127,w,c	;volatile
 17089   007EE8  1802               	xorwf	??_color_click_toggleLED^0,w,c
 17090   007EEA  0BFE               	andlw	-2
 17091   007EEC  1802               	xorwf	??_color_click_toggleLED^0,w,c
 17092   007EEE  6E7F               	movwf	127,c	;volatile
 17093                           
 17094                           ;color.c: 110:     LATAbits.LATA3 = !LATAbits.LATA3;
 17095   007EF0  A679               	btfss	121,3,c	;volatile
 17096   007EF2  EF7D  F03F         	goto	u6071
 17097   007EF6  EF81  F03F         	goto	u6070
 17098   007EFA                     u6071:
 17099   007EFA  6A02               	clrf	??_color_click_toggleLED^0,c
 17100   007EFC  2A02               	incf	??_color_click_toggleLED^0,f,c
 17101   007EFE  EF82  F03F         	goto	u6088
 17102   007F02                     u6070:
 17103   007F02  6A02               	clrf	??_color_click_toggleLED^0,c
 17104   007F04                     u6088:
 17105   007F04  4602               	rlncf	??_color_click_toggleLED^0,f,c
 17106   007F06  4602               	rlncf	??_color_click_toggleLED^0,f,c
 17107   007F08  4602               	rlncf	??_color_click_toggleLED^0,f,c
 17108   007F0A  5079               	movf	121,w,c	;volatile
 17109   007F0C  1802               	xorwf	??_color_click_toggleLED^0,w,c
 17110   007F0E  0BF7               	andlw	-9
 17111   007F10  1802               	xorwf	??_color_click_toggleLED^0,w,c
 17112   007F12  6E79               	movwf	121,c	;volatile
 17113                           
 17114                           ;color.c: 111:     LATEbits.LATE7 = !LATEbits.LATE7;
 17115   007F14  AE7D               	btfss	125,7,c	;volatile
 17116   007F16  EF8F  F03F         	goto	u6091
 17117   007F1A  EF93  F03F         	goto	u6090
 17118   007F1E                     u6091:
 17119   007F1E  6A02               	clrf	??_color_click_toggleLED^0,c
 17120   007F20  2A02               	incf	??_color_click_toggleLED^0,f,c
 17121   007F22  EF94  F03F         	goto	u6108
 17122   007F26                     u6090:
 17123   007F26  6A02               	clrf	??_color_click_toggleLED^0,c
 17124   007F28                     u6108:
 17125   007F28  3202               	rrcf	??_color_click_toggleLED^0,f,c
 17126   007F2A  3202               	rrcf	??_color_click_toggleLED^0,f,c
 17127   007F2C  507D               	movf	125,w,c	;volatile
 17128   007F2E  1802               	xorwf	??_color_click_toggleLED^0,w,c
 17129   007F30  0B7F               	andlw	-129
 17130   007F32  1802               	xorwf	??_color_click_toggleLED^0,w,c
 17131   007F34  6E7D               	movwf	125,c	;volatile
 17132   007F36  0012               	return		;funcret
 17133   007F38                     __end_of_color_click_toggleLED:
 17134                           	callstack 0
 17135                           
 17136 ;; *************** function _color_click_init *****************
 17137 ;; Defined at:
 17138 ;;		line 8 in file "color.c"
 17139 ;; Parameters:    Size  Location     Type
 17140 ;;		None
 17141 ;; Auto vars:     Size  Location     Type
 17142 ;;		None
 17143 ;; Return value:  Size  Location     Type
 17144 ;;                  1    wreg      void 
 17145 ;; Registers used:
 17146 ;;		wreg, status,2, status,0, cstack
 17147 ;; Tracked objects:
 17148 ;;		On entry : 0/0
 17149 ;;		On exit  : 0/0
 17150 ;;		Unchanged: 0/0
 17151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17154 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17155 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17156 ;;Total ram usage:        1 bytes
 17157 ;; Hardware stack levels used: 1
 17158 ;; Hardware stack levels required when called: 5
 17159 ;; This function calls:
 17160 ;;		_I2C_2_Master_Init
 17161 ;;		_color_writetoaddr
 17162 ;; This function is called by:
 17163 ;;		_main
 17164 ;; This function uses a non-reentrant model
 17165 ;;
 17166                           
 17167                           	psect	text53
 17168   00811E                     __ptext53:
 17169                           	callstack 0
 17170   00811E                     _color_click_init:
 17171                           	callstack 25
 17172   00811E                     
 17173                           ;color.c: 10:     I2C_2_Master_Init();
 17174   00811E  ECC6  F041         	call	_I2C_2_Master_Init	;wreg free
 17175   008122                     
 17176                           ;color.c: 11:  color_writetoaddr(0x00, 0x01);
 17177   008122  0E01               	movlw	1
 17178   008124  6E04               	movwf	color_writetoaddr@value^0,c
 17179   008126  0E00               	movlw	0
 17180   008128  EC02  F042         	call	_color_writetoaddr
 17181   00812C                     
 17182                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
 17183   00812C  0E3F               	movlw	63
 17184   00812E  6E06               	movwf	??_color_click_init^0,c
 17185   008130  0E55               	movlw	85
 17186   008132                     u9577:
 17187   008132  2EE8               	decfsz	wreg,f,c
 17188   008134  D7FE               	bra	u9577
 17189   008136  2E06               	decfsz	??_color_click_init^0,f,c
 17190   008138  D7FC               	bra	u9577
 17191   00813A  0000               	nop	
 17192   00813C                     
 17193                           ;color.c: 13:  color_writetoaddr(0x00, 0x03);
 17194   00813C  0E03               	movlw	3
 17195   00813E  6E04               	movwf	color_writetoaddr@value^0,c
 17196   008140  0E00               	movlw	0
 17197   008142  EC02  F042         	call	_color_writetoaddr
 17198   008146                     
 17199                           ;color.c: 14:  color_writetoaddr(0x01, 0xFF);
 17200   008146  0EFF               	movlw	255
 17201   008148  6E04               	movwf	color_writetoaddr@value^0,c
 17202   00814A  0E01               	movlw	1
 17203   00814C  EC02  F042         	call	_color_writetoaddr
 17204   008150                     
 17205                           ;color.c: 15:     color_writetoaddr(0x03, 0xFF);
 17206   008150  0EFF               	movlw	255
 17207   008152  6E04               	movwf	color_writetoaddr@value^0,c
 17208   008154  0E03               	movlw	3
 17209   008156  EC02  F042         	call	_color_writetoaddr
 17210   00815A                     
 17211                           ;color.c: 27:     LATGbits.LATG0=0;
 17212   00815A  907F               	bcf	127,0,c	;volatile
 17213   00815C                     
 17214                           ;color.c: 28:     LATAbits.LATA3=0;
 17215   00815C  9679               	bcf	121,3,c	;volatile
 17216   00815E                     
 17217                           ;color.c: 29:     LATEbits.LATE7=0;
 17218   00815E  9E7D               	bcf	125,7,c	;volatile
 17219   008160                     
 17220                           ;color.c: 32:     TRISGbits.TRISG0=0;
 17221   008160  9087               	bcf	135,0,c	;volatile
 17222   008162                     
 17223                           ;color.c: 33:     TRISAbits.TRISA3=0;
 17224   008162  9681               	bcf	129,3,c	;volatile
 17225   008164                     
 17226                           ;color.c: 34:     TRISEbits.TRISE7=0;
 17227   008164  9E85               	bcf	133,7,c	;volatile
 17228   008166  0012               	return		;funcret
 17229   008168                     __end_of_color_click_init:
 17230                           	callstack 0
 17231                           
 17232 ;; *************** function _color_writetoaddr *****************
 17233 ;; Defined at:
 17234 ;;		line 38 in file "color.c"
 17235 ;; Parameters:    Size  Location     Type
 17236 ;;  address         1    wreg     unsigned char 
 17237 ;;  value           1    3[COMRAM] unsigned char 
 17238 ;; Auto vars:     Size  Location     Type
 17239 ;;  address         1    4[COMRAM] unsigned char 
 17240 ;; Return value:  Size  Location     Type
 17241 ;;                  1    wreg      void 
 17242 ;; Registers used:
 17243 ;;		wreg, status,2, status,0, cstack
 17244 ;; Tracked objects:
 17245 ;;		On entry : 0/0
 17246 ;;		On exit  : 0/0
 17247 ;;		Unchanged: 0/0
 17248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17249 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17252 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17253 ;;Total ram usage:        2 bytes
 17254 ;; Hardware stack levels used: 1
 17255 ;; Hardware stack levels required when called: 4
 17256 ;; This function calls:
 17257 ;;		_I2C_2_Master_Start
 17258 ;;		_I2C_2_Master_Stop
 17259 ;;		_I2C_2_Master_Write
 17260 ;; This function is called by:
 17261 ;;		_color_click_init
 17262 ;;		_decide_action
 17263 ;;		_main
 17264 ;; This function uses a non-reentrant model
 17265 ;;
 17266                           
 17267                           	psect	text54
 17268   008404                     __ptext54:
 17269                           	callstack 0
 17270   008404                     _color_writetoaddr:
 17271                           	callstack 25
 17272                           
 17273                           ;incstack = 0
 17274                           ;color_writetoaddr@address stored from wreg
 17275   008404  6E05               	movwf	color_writetoaddr@address^0,c
 17276   008406                     
 17277                           ;color.c: 39:     I2C_2_Master_Start();
 17278   008406  EC80  F042         	call	_I2C_2_Master_Start	;wreg free
 17279                           
 17280                           ;color.c: 40:     I2C_2_Master_Write(0x52 | 0x00);
 17281   00840A  0E52               	movlw	82
 17282   00840C  EC65  F042         	call	_I2C_2_Master_Write
 17283                           
 17284                           ;color.c: 41:     I2C_2_Master_Write(0x80 | address);
 17285   008410  5005               	movf	color_writetoaddr@address^0,w,c
 17286   008412  0980               	iorlw	128
 17287   008414  EC65  F042         	call	_I2C_2_Master_Write
 17288                           
 17289                           ;color.c: 42:     I2C_2_Master_Write(value);
 17290   008418  5004               	movf	color_writetoaddr@value^0,w,c
 17291   00841A  EC65  F042         	call	_I2C_2_Master_Write
 17292                           
 17293                           ;color.c: 43:     I2C_2_Master_Stop();
 17294   00841E  EC7B  F042         	call	_I2C_2_Master_Stop	;wreg free
 17295   008422  0012               	return		;funcret
 17296   008424                     __end_of_color_writetoaddr:
 17297                           	callstack 0
 17298                           
 17299 ;; *************** function _I2C_2_Master_Write *****************
 17300 ;; Defined at:
 17301 ;;		line 40 in file "i2c.c"
 17302 ;; Parameters:    Size  Location     Type
 17303 ;;  data_byte       1    wreg     unsigned char 
 17304 ;; Auto vars:     Size  Location     Type
 17305 ;;  data_byte       1    2[COMRAM] unsigned char 
 17306 ;; Return value:  Size  Location     Type
 17307 ;;                  1    wreg      void 
 17308 ;; Registers used:
 17309 ;;		wreg, status,2, status,0, cstack
 17310 ;; Tracked objects:
 17311 ;;		On entry : 0/0
 17312 ;;		On exit  : 0/0
 17313 ;;		Unchanged: 0/0
 17314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17318 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17319 ;;Total ram usage:        1 bytes
 17320 ;; Hardware stack levels used: 1
 17321 ;; Hardware stack levels required when called: 3
 17322 ;; This function calls:
 17323 ;;		_I2C_2_Master_Idle
 17324 ;; This function is called by:
 17325 ;;		_color_writetoaddr
 17326 ;;		_color_read_Clear
 17327 ;;		_color_read_Red
 17328 ;;		_color_read_Green
 17329 ;;		_color_read_Blue
 17330 ;; This function uses a non-reentrant model
 17331 ;;
 17332                           
 17333                           	psect	text55
 17334   0084CA                     __ptext55:
 17335                           	callstack 0
 17336   0084CA                     _I2C_2_Master_Write:
 17337                           	callstack 25
 17338                           
 17339                           ;incstack = 0
 17340                           ;I2C_2_Master_Write@data_byte stored from wreg
 17341   0084CA  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
 17342   0084CC                     
 17343                           ;i2c.c: 41:   I2C_2_Master_Idle();
 17344   0084CC  ECDB  F041         	call	_I2C_2_Master_Idle	;wreg free
 17345   0084D0                     
 17346                           ;i2c.c: 42:   SSP2BUF = data_byte;
 17347   0084D0  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 17348   0084D4  0012               	return		;funcret
 17349   0084D6                     __end_of_I2C_2_Master_Write:
 17350                           	callstack 0
 17351                           
 17352 ;; *************** function _I2C_2_Master_Stop *****************
 17353 ;; Defined at:
 17354 ;;		line 35 in file "i2c.c"
 17355 ;; Parameters:    Size  Location     Type
 17356 ;;		None
 17357 ;; Auto vars:     Size  Location     Type
 17358 ;;		None
 17359 ;; Return value:  Size  Location     Type
 17360 ;;                  1    wreg      void 
 17361 ;; Registers used:
 17362 ;;		wreg, status,2, status,0, cstack
 17363 ;; Tracked objects:
 17364 ;;		On entry : 0/0
 17365 ;;		On exit  : 0/0
 17366 ;;		Unchanged: 0/0
 17367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17372 ;;Total ram usage:        0 bytes
 17373 ;; Hardware stack levels used: 1
 17374 ;; Hardware stack levels required when called: 3
 17375 ;; This function calls:
 17376 ;;		_I2C_2_Master_Idle
 17377 ;; This function is called by:
 17378 ;;		_color_writetoaddr
 17379 ;;		_color_read_Clear
 17380 ;;		_color_read_Red
 17381 ;;		_color_read_Green
 17382 ;;		_color_read_Blue
 17383 ;; This function uses a non-reentrant model
 17384 ;;
 17385                           
 17386                           	psect	text56
 17387   0084F6                     __ptext56:
 17388                           	callstack 0
 17389   0084F6                     _I2C_2_Master_Stop:
 17390                           	callstack 25
 17391   0084F6                     
 17392                           ;i2c.c: 36:   I2C_2_Master_Idle();
 17393   0084F6  ECDB  F041         	call	_I2C_2_Master_Idle	;wreg free
 17394   0084FA                     
 17395                           ;i2c.c: 37:   SSP2CON2bits.PEN = 1;
 17396   0084FA  010E               	movlb	14	; () banked
 17397   0084FC  85DA               	bsf	218,2,b	;volatile
 17398   0084FE                     
 17399                           ; BSR set to: 14
 17400   0084FE  0012               	return		;funcret
 17401   008500                     __end_of_I2C_2_Master_Stop:
 17402                           	callstack 0
 17403                           
 17404 ;; *************** function _I2C_2_Master_Start *****************
 17405 ;; Defined at:
 17406 ;;		line 25 in file "i2c.c"
 17407 ;; Parameters:    Size  Location     Type
 17408 ;;		None
 17409 ;; Auto vars:     Size  Location     Type
 17410 ;;		None
 17411 ;; Return value:  Size  Location     Type
 17412 ;;                  1    wreg      void 
 17413 ;; Registers used:
 17414 ;;		wreg, status,2, status,0, cstack
 17415 ;; Tracked objects:
 17416 ;;		On entry : 0/0
 17417 ;;		On exit  : 0/0
 17418 ;;		Unchanged: 0/0
 17419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17424 ;;Total ram usage:        0 bytes
 17425 ;; Hardware stack levels used: 1
 17426 ;; Hardware stack levels required when called: 3
 17427 ;; This function calls:
 17428 ;;		_I2C_2_Master_Idle
 17429 ;; This function is called by:
 17430 ;;		_color_writetoaddr
 17431 ;;		_color_read_Clear
 17432 ;;		_color_read_Red
 17433 ;;		_color_read_Green
 17434 ;;		_color_read_Blue
 17435 ;; This function uses a non-reentrant model
 17436 ;;
 17437                           
 17438                           	psect	text57
 17439   008500                     __ptext57:
 17440                           	callstack 0
 17441   008500                     _I2C_2_Master_Start:
 17442                           	callstack 25
 17443   008500                     
 17444                           ;i2c.c: 26:   I2C_2_Master_Idle();
 17445   008500  ECDB  F041         	call	_I2C_2_Master_Idle	;wreg free
 17446   008504                     
 17447                           ;i2c.c: 27:   SSP2CON2bits.SEN = 1;
 17448   008504  010E               	movlb	14	; () banked
 17449   008506  81DA               	bsf	218,0,b	;volatile
 17450   008508                     
 17451                           ; BSR set to: 14
 17452   008508  0012               	return		;funcret
 17453   00850A                     __end_of_I2C_2_Master_Start:
 17454                           	callstack 0
 17455                           
 17456 ;; *************** function _I2C_2_Master_Idle *****************
 17457 ;; Defined at:
 17458 ;;		line 21 in file "i2c.c"
 17459 ;; Parameters:    Size  Location     Type
 17460 ;;		None
 17461 ;; Auto vars:     Size  Location     Type
 17462 ;;		None
 17463 ;; Return value:  Size  Location     Type
 17464 ;;                  1    wreg      void 
 17465 ;; Registers used:
 17466 ;;		wreg, status,2, status,0
 17467 ;; Tracked objects:
 17468 ;;		On entry : 0/0
 17469 ;;		On exit  : 0/0
 17470 ;;		Unchanged: 0/0
 17471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17474 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17476 ;;Total ram usage:        1 bytes
 17477 ;; Hardware stack levels used: 1
 17478 ;; Hardware stack levels required when called: 2
 17479 ;; This function calls:
 17480 ;;		Nothing
 17481 ;; This function is called by:
 17482 ;;		_I2C_2_Master_Start
 17483 ;;		_I2C_2_Master_RepStart
 17484 ;;		_I2C_2_Master_Stop
 17485 ;;		_I2C_2_Master_Write
 17486 ;;		_I2C_2_Master_Read
 17487 ;; This function uses a non-reentrant model
 17488 ;;
 17489                           
 17490                           	psect	text58
 17491   0083B6                     __ptext58:
 17492                           	callstack 0
 17493   0083B6                     _I2C_2_Master_Idle:
 17494                           	callstack 25
 17495   0083B6                     l123:
 17496   0083B6  010E               	movlb	14	; () banked
 17497   0083B8  B5D8               	btfsc	216,2,b	;volatile
 17498   0083BA  EFE1  F041         	goto	u4981
 17499   0083BE  EFE3  F041         	goto	u4980
 17500   0083C2                     u4981:
 17501   0083C2  EFDB  F041         	goto	l123
 17502   0083C6                     u4980:
 17503   0083C6                     
 17504                           ; BSR set to: 14
 17505   0083C6  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
 17506   0083CA  0E1F               	movlw	31
 17507   0083CC  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
 17508   0083CE  A4D8               	btfss	status,2,c
 17509   0083D0  EFEC  F041         	goto	u4991
 17510   0083D4  EFEE  F041         	goto	u4990
 17511   0083D8                     u4991:
 17512   0083D8  EFDB  F041         	goto	l123
 17513   0083DC                     u4990:
 17514   0083DC                     
 17515                           ; BSR set to: 14
 17516   0083DC  0012               	return		;funcret
 17517   0083DE                     __end_of_I2C_2_Master_Idle:
 17518                           	callstack 0
 17519                           
 17520 ;; *************** function _I2C_2_Master_Init *****************
 17521 ;; Defined at:
 17522 ;;		line 4 in file "i2c.c"
 17523 ;; Parameters:    Size  Location     Type
 17524 ;;		None
 17525 ;; Auto vars:     Size  Location     Type
 17526 ;;		None
 17527 ;; Return value:  Size  Location     Type
 17528 ;;                  1    wreg      void 
 17529 ;; Registers used:
 17530 ;;		wreg, status,2
 17531 ;; Tracked objects:
 17532 ;;		On entry : 0/0
 17533 ;;		On exit  : 0/0
 17534 ;;		Unchanged: 0/0
 17535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17540 ;;Total ram usage:        0 bytes
 17541 ;; Hardware stack levels used: 1
 17542 ;; Hardware stack levels required when called: 2
 17543 ;; This function calls:
 17544 ;;		Nothing
 17545 ;; This function is called by:
 17546 ;;		_color_click_init
 17547 ;;		_main
 17548 ;; This function uses a non-reentrant model
 17549 ;;
 17550                           
 17551                           	psect	text59
 17552   00838C                     __ptext59:
 17553                           	callstack 0
 17554   00838C                     _I2C_2_Master_Init:
 17555                           	callstack 27
 17556   00838C                     
 17557                           ;i2c.c: 6:   SSP2CON1bits.SSPM= 0b1000;
 17558   00838C  010E               	movlb	14	; () banked
 17559   00838E  51D9               	movf	217,w,b	;volatile
 17560   008390  0BF0               	andlw	-16
 17561   008392  0908               	iorlw	8
 17562   008394  6FD9               	movwf	217,b	;volatile
 17563   008396                     
 17564                           ; BSR set to: 14
 17565                           ;i2c.c: 7:   SSP2CON1bits.SSPEN = 1;
 17566   008396  8BD9               	bsf	217,5,b	;volatile
 17567                           
 17568                           ;i2c.c: 8:   SSP2ADD = (64000000/(4*100000))-1;
 17569   008398  0E9F               	movlw	159
 17570   00839A  6FD6               	movwf	214,b	;volatile
 17571   00839C                     
 17572                           ; BSR set to: 14
 17573                           ;i2c.c: 11:   TRISDbits.TRISD5 = 1;
 17574   00839C  8A84               	bsf	132,5,c	;volatile
 17575   00839E                     
 17576                           ; BSR set to: 14
 17577                           ;i2c.c: 12:   TRISDbits.TRISD6 = 1;
 17578   00839E  8C84               	bsf	132,6,c	;volatile
 17579   0083A0                     
 17580                           ; BSR set to: 14
 17581                           ;i2c.c: 13:   ANSELDbits.ANSELD5=0;
 17582   0083A0  9BA7               	bcf	167,5,b	;volatile
 17583   0083A2                     
 17584                           ; BSR set to: 14
 17585                           ;i2c.c: 14:   ANSELDbits.ANSELD6=0;
 17586   0083A2  9DA7               	bcf	167,6,b	;volatile
 17587                           
 17588                           ;i2c.c: 15:   SSP2DATPPS=0x1D;
 17589   0083A4  0E1D               	movlw	29
 17590   0083A6  6F1D               	movwf	29,b	;volatile
 17591                           
 17592                           ;i2c.c: 16:   SSP2CLKPPS=0x1E;
 17593   0083A8  0E1E               	movlw	30
 17594   0083AA  6F1C               	movwf	28,b	;volatile
 17595                           
 17596                           ;i2c.c: 17:   RD5PPS=0x1C;
 17597   0083AC  0E1C               	movlw	28
 17598   0083AE  6F6F               	movwf	111,b	;volatile
 17599                           
 17600                           ;i2c.c: 18:   RD6PPS=0x1B;
 17601   0083B0  0E1B               	movlw	27
 17602   0083B2  6F70               	movwf	112,b	;volatile
 17603   0083B4                     
 17604                           ; BSR set to: 14
 17605   0083B4  0012               	return		;funcret
 17606   0083B6                     __end_of_I2C_2_Master_Init:
 17607                           	callstack 0
 17608                           
 17609 ;; *************** function _Timer0_init *****************
 17610 ;; Defined at:
 17611 ;;		line 7 in file "timers.c"
 17612 ;; Parameters:    Size  Location     Type
 17613 ;;		None
 17614 ;; Auto vars:     Size  Location     Type
 17615 ;;		None
 17616 ;; Return value:  Size  Location     Type
 17617 ;;                  1    wreg      void 
 17618 ;; Registers used:
 17619 ;;		wreg, status,2
 17620 ;; Tracked objects:
 17621 ;;		On entry : 0/0
 17622 ;;		On exit  : 0/0
 17623 ;;		Unchanged: 0/0
 17624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17629 ;;Total ram usage:        0 bytes
 17630 ;; Hardware stack levels used: 1
 17631 ;; Hardware stack levels required when called: 2
 17632 ;; This function calls:
 17633 ;;		Nothing
 17634 ;; This function is called by:
 17635 ;;		_main
 17636 ;; This function uses a non-reentrant model
 17637 ;;
 17638                           
 17639                           	psect	text60
 17640   008424                     __ptext60:
 17641                           	callstack 0
 17642   008424                     _Timer0_init:
 17643                           	callstack 28
 17644   008424                     
 17645                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 17646   008424  50D6               	movf	214,w,c	;volatile
 17647   008426  0B1F               	andlw	-225
 17648   008428  0940               	iorlw	64
 17649   00842A  6ED6               	movwf	214,c	;volatile
 17650   00842C                     
 17651                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 17652   00842C  88D6               	bsf	214,4,c	;volatile
 17653                           
 17654                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1111;
 17655   00842E  0E0F               	movlw	15
 17656   008430  12D6               	iorwf	214,f,c	;volatile
 17657                           
 17658                           ;timers.c: 12:     T0CON0bits.T0OUTPS=0b000;
 17659   008432  0EF0               	movlw	-16
 17660   008434  16D5               	andwf	213,f,c	;volatile
 17661   008436                     
 17662                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
 17663   008436  88D5               	bsf	213,4,c	;volatile
 17664                           
 17665                           ;timers.c: 17:     TMR0H=0b00001011;
 17666   008438  0E0B               	movlw	11
 17667   00843A  6ED4               	movwf	212,c	;volatile
 17668                           
 17669                           ;timers.c: 18:     TMR0L=0b11011011;
 17670   00843C  0EDB               	movlw	219
 17671   00843E  6ED3               	movwf	211,c	;volatile
 17672   008440                     
 17673                           ;timers.c: 20:     T0CON0bits.T0EN=1;
 17674   008440  8ED5               	bsf	213,7,c	;volatile
 17675   008442  0012               	return		;funcret
 17676   008444                     __end_of_Timer0_init:
 17677                           	callstack 0
 17678                           
 17679 ;; *************** function _Interrupts_init *****************
 17680 ;; Defined at:
 17681 ;;		line 7 in file "interrupts.c"
 17682 ;; Parameters:    Size  Location     Type
 17683 ;;		None
 17684 ;; Auto vars:     Size  Location     Type
 17685 ;;		None
 17686 ;; Return value:  Size  Location     Type
 17687 ;;                  1    wreg      void 
 17688 ;; Registers used:
 17689 ;;		None
 17690 ;; Tracked objects:
 17691 ;;		On entry : 0/0
 17692 ;;		On exit  : 0/0
 17693 ;;		Unchanged: 0/0
 17694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17699 ;;Total ram usage:        0 bytes
 17700 ;; Hardware stack levels used: 1
 17701 ;; Hardware stack levels required when called: 2
 17702 ;; This function calls:
 17703 ;;		Nothing
 17704 ;; This function is called by:
 17705 ;;		_main
 17706 ;; This function uses a non-reentrant model
 17707 ;;
 17708                           
 17709                           	psect	text61
 17710   0084D6                     __ptext61:
 17711                           	callstack 0
 17712   0084D6                     _Interrupts_init:
 17713                           	callstack 28
 17714   0084D6                     
 17715                           ;interrupts.c: 9:     INTCONbits.PEIE=1;
 17716   0084D6  8CF2               	bsf	242,6,c	;volatile
 17717                           
 17718                           ;interrupts.c: 10:     PIE2bits.C1IE=1;
 17719   0084D8  010E               	movlb	14	; () banked
 17720   0084DA  812B               	bsf	43,0,b	;volatile
 17721                           
 17722                           ;interrupts.c: 14:     PIE0bits.IOCIE=1;
 17723   0084DC  8929               	bsf	41,4,b	;volatile
 17724                           
 17725                           ;interrupts.c: 15:     INTCONbits.GIE=1;
 17726   0084DE  8EF2               	bsf	242,7,c	;volatile
 17727   0084E0                     
 17728                           ; BSR set to: 14
 17729   0084E0  0012               	return		;funcret
 17730   0084E2                     __end_of_Interrupts_init:
 17731                           	callstack 0
 17732                           
 17733 ;; *************** function _ADC_init *****************
 17734 ;; Defined at:
 17735 ;;		line 9 in file "ADC.c"
 17736 ;; Parameters:    Size  Location     Type
 17737 ;;		None
 17738 ;; Auto vars:     Size  Location     Type
 17739 ;;		None
 17740 ;; Return value:  Size  Location     Type
 17741 ;;                  1    wreg      void 
 17742 ;; Registers used:
 17743 ;;		wreg, status,2
 17744 ;; Tracked objects:
 17745 ;;		On entry : 0/0
 17746 ;;		On exit  : 0/0
 17747 ;;		Unchanged: 0/0
 17748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17753 ;;Total ram usage:        0 bytes
 17754 ;; Hardware stack levels used: 1
 17755 ;; Hardware stack levels required when called: 2
 17756 ;; This function calls:
 17757 ;;		Nothing
 17758 ;; This function is called by:
 17759 ;;		_main
 17760 ;; This function uses a non-reentrant model
 17761 ;;
 17762                           
 17763                           	psect	text62
 17764   008480                     __ptext62:
 17765                           	callstack 0
 17766   008480                     _ADC_init:
 17767                           	callstack 28
 17768   008480                     
 17769                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
 17770   008480  8C86               	bsf	134,6,c	;volatile
 17771                           
 17772                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
 17773   008482  010E               	movlb	14	; () banked
 17774   008484  8DB4               	bsf	180,6,b	;volatile
 17775                           
 17776                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
 17777   008486  010F               	movlb	15	; () banked
 17778   008488  9958               	bcf	88,4,b	;volatile
 17779   00848A                     
 17780                           ; BSR set to: 15
 17781                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
 17782   00848A  0EFC               	movlw	-4
 17783   00848C  1758               	andwf	88,f,b	;volatile
 17784                           
 17785                           ;ADC.c: 17:     ADPCH=0b101110;
 17786   00848E  0E2E               	movlw	46
 17787   008490  6F5F               	movwf	95,b	;volatile
 17788   008492                     
 17789                           ; BSR set to: 15
 17790                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
 17791   008492  9460               	bcf	96,2,c	;volatile
 17792   008494                     
 17793                           ; BSR set to: 15
 17794                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
 17795   008494  8860               	bsf	96,4,c	;volatile
 17796   008496                     
 17797                           ; BSR set to: 15
 17798                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
 17799   008496  8E60               	bsf	96,7,c	;volatile
 17800   008498                     
 17801                           ; BSR set to: 15
 17802   008498  0012               	return		;funcret
 17803   00849A                     __end_of_ADC_init:
 17804                           	callstack 0
 17805                           
 17806 ;; *************** function _HighISR *****************
 17807 ;; Defined at:
 17808 ;;		line 23 in file "interrupts.c"
 17809 ;; Parameters:    Size  Location     Type
 17810 ;;		None
 17811 ;; Auto vars:     Size  Location     Type
 17812 ;;		None
 17813 ;; Return value:  Size  Location     Type
 17814 ;;                  1    wreg      void 
 17815 ;; Registers used:
 17816 ;;		wreg, cstack
 17817 ;; Tracked objects:
 17818 ;;		On entry : 0/0
 17819 ;;		On exit  : 0/0
 17820 ;;		Unchanged: 0/0
 17821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17826 ;;Total ram usage:        0 bytes
 17827 ;; Hardware stack levels used: 1
 17828 ;; Hardware stack levels required when called: 1
 17829 ;; This function calls:
 17830 ;;		i2_sendCharSerial4
 17831 ;; This function is called by:
 17832 ;;		Interrupt level 2
 17833 ;; This function uses a non-reentrant model
 17834 ;;
 17835                           
 17836                           	psect	intcode
 17837   000008                     __pintcode:
 17838                           	callstack 0
 17839   000008                     _HighISR:
 17840                           	callstack 20
 17841                           
 17842                           ; BSR set to: 15
 17843                           ;incstack = 0
 17844   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17845   00000A                     
 17846                           ;interrupts.c: 48:     if (PORTBbits.RB0){
 17847   00000A  A08A               	btfss	138,0,c	;volatile
 17848   00000C  EF0A  F000         	goto	i2u675_41
 17849   000010  EF0C  F000         	goto	i2u675_40
 17850   000014                     i2u675_41:
 17851   000014  EF10  F000         	goto	i2l454
 17852   000018                     i2u675_40:
 17853   000018                     
 17854                           ;interrupts.c: 49:         LATHbits.LATH3 = 0;
 17855   000018  9680               	bcf	128,3,c	;volatile
 17856   00001A                     
 17857                           ;interrupts.c: 50:         sendCharSerial4('a');
 17858   00001A  0E61               	movlw	97
 17859   00001C  EC59  F042         	call	i2_sendCharSerial4
 17860   000020                     i2l454:
 17861   000020  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17862   000022  0011               	retfie		f
 17863   000024                     __end_of_HighISR:
 17864                           	callstack 0
 17865                           
 17866 ;; *************** function i2_sendCharSerial4 *****************
 17867 ;; Defined at:
 17868 ;;		line 31 in file "serial.c"
 17869 ;; Parameters:    Size  Location     Type
 17870 ;;  charToSend      1    wreg     unsigned char 
 17871 ;; Auto vars:     Size  Location     Type
 17872 ;;  charToSend      1    0[COMRAM] unsigned char 
 17873 ;; Return value:  Size  Location     Type
 17874 ;;                  1    wreg      void 
 17875 ;; Registers used:
 17876 ;;		wreg
 17877 ;; Tracked objects:
 17878 ;;		On entry : 0/0
 17879 ;;		On exit  : 0/0
 17880 ;;		Unchanged: 0/0
 17881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17883 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17885 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17886 ;;Total ram usage:        1 bytes
 17887 ;; Hardware stack levels used: 1
 17888 ;; This function calls:
 17889 ;;		Nothing
 17890 ;; This function is called by:
 17891 ;;		_HighISR
 17892 ;; This function uses a non-reentrant model
 17893 ;;
 17894                           
 17895                           	psect	text64
 17896   0084B2                     __ptext64:
 17897                           	callstack 0
 17898   0084B2                     i2_sendCharSerial4:
 17899                           	callstack 20
 17900                           
 17901                           ;incstack = 0
 17902                           ;i2sendCharSerial4@charToSend stored from wreg
 17903   0084B2  6E01               	movwf	i2sendCharSerial4@charToSend^0,c
 17904   0084B4                     i2l500:
 17905   0084B4  010E               	movlb	14	; () banked
 17906   0084B6  A537               	btfss	55,2,b	;volatile
 17907   0084B8  EF60  F042         	goto	i2u651_41
 17908   0084BC  EF62  F042         	goto	i2u651_40
 17909   0084C0                     i2u651_41:
 17910   0084C0  EF5A  F042         	goto	i2l500
 17911   0084C4                     i2u651_40:
 17912   0084C4                     
 17913                           ; BSR set to: 14
 17914                           ;serial.c: 33:     TX4REG = charToSend;
 17915   0084C4  C001  FEE4         	movff	i2sendCharSerial4@charToSend,3812	;volatile
 17916   0084C8                     
 17917                           ; BSR set to: 14
 17918   0084C8  0012               	return		;funcret
 17919   0084CA                     __end_ofi2_sendCharSerial4:
 17920                           	callstack 0
 17921                           
 17922                           	psect	rparam
 17923   000000                     
 17924                           	psect	temp
 17925   00005E                     btemp:
 17926                           	callstack 0
 17927   00005E                     	ds	1
 17928   000000                     int$flags	set	btemp
 17929   000000                     wtemp8	set	btemp+1
 17930   000000                     ttemp5	set	btemp+1
 17931   000000                     ttemp6	set	btemp+4
 17932   000000                     ttemp7	set	btemp+8
 17933                           
 17934                           	psect	config
 17935                           
 17936                           ;Config register CONFIG1L @ 0x300000
 17937                           ;	External Oscillator mode Selection bits
 17938                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 17939                           ;	Power-up default value for COSC bits
 17940                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 17941   300000                     	org	3145728
 17942   300000  AA                 	db	170
 17943                           
 17944                           ;Config register CONFIG1H @ 0x300001
 17945                           ;	unspecified, using default values
 17946                           ;	Clock Out Enable bit
 17947                           ;	CLKOUTEN = 0x1, unprogrammed default
 17948                           ;	Clock Switch Enable bit
 17949                           ;	CSWEN = 0x1, unprogrammed default
 17950                           ;	Fail-Safe Clock Monitor Enable bit
 17951                           ;	FCMEN = 0x1, unprogrammed default
 17952   300001                     	org	3145729
 17953   300001  FF                 	db	255
 17954                           
 17955                           ;Config register CONFIG3L @ 0x300004
 17956                           ;	WDT Period Select bits
 17957                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17958                           ;	WDT operating mode
 17959                           ;	WDTE = OFF, WDT Disabled
 17960   300004                     	org	3145732
 17961   300004  9F                 	db	159
 17962                           
 17963                           ;Config register CONFIG3H @ 0x300005
 17964                           ;	unspecified, using default values
 17965                           ;	WDT Window Select bits
 17966                           ;	WDTCWS = 0x7, unprogrammed default
 17967                           ;	WDT input clock selector
 17968                           ;	WDTCCS = 0x7, unprogrammed default
 17969   300005                     	org	3145733
 17970   300005  FF                 	db	255
 17971                           tosu	equ	0xFFF
 17972                           tosh	equ	0xFFE
 17973                           tosl	equ	0xFFD
 17974                           stkptr	equ	0xFFC
 17975                           pclatu	equ	0xFFB
 17976                           pclath	equ	0xFFA
 17977                           pcl	equ	0xFF9
 17978                           tblptru	equ	0xFF8
 17979                           tblptrh	equ	0xFF7
 17980                           tblptrl	equ	0xFF6
 17981                           tablat	equ	0xFF5
 17982                           prodh	equ	0xFF4
 17983                           prodl	equ	0xFF3
 17984                           indf0	equ	0xFEF
 17985                           postinc0	equ	0xFEE
 17986                           postdec0	equ	0xFED
 17987                           preinc0	equ	0xFEC
 17988                           plusw0	equ	0xFEB
 17989                           fsr0h	equ	0xFEA
 17990                           fsr0l	equ	0xFE9
 17991                           wreg	equ	0xFE8
 17992                           indf1	equ	0xFE7
 17993                           postinc1	equ	0xFE6
 17994                           postdec1	equ	0xFE5
 17995                           preinc1	equ	0xFE4
 17996                           plusw1	equ	0xFE3
 17997                           fsr1h	equ	0xFE2
 17998                           fsr1l	equ	0xFE1
 17999                           bsr	equ	0xFE0
 18000                           indf2	equ	0xFDF
 18001                           postinc2	equ	0xFDE
 18002                           postdec2	equ	0xFDD
 18003                           preinc2	equ	0xFDC
 18004                           plusw2	equ	0xFDB
 18005                           fsr2h	equ	0xFDA
 18006                           fsr2l	equ	0xFD9
 18007                           status	equ	0xFD8

Data Sizes:
    Strings     50
    Constant    112
    Data        0
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      93
    BANK0           160     92     130
    BANK1           256    184     244
    BANK2           256    180     180
    BANK3           256    202     202
    BANK4           256      0      80
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    decide_action@pblue_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@blue_val(BANK2[20]), 

    decide_action@pclear_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@clear_val(BANK2[20]), 

    decide_action@pgreen_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@green_val(BANK2[20]), 

    decide_action@pred_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@red_val(BANK2[20]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    inch_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    inch_forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    inch_forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    inch_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    inch_forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    inch_forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pblue_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@blue_val(BANK3[20]), 

    main@pclear_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK3[20]), 

    main@pgreen_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@green_val(BANK3[20]), 

    main@pmL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    main@pmL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pmR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    main@pmR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pred_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@red_val(BANK3[20]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    reverse_after_read@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    reverse_after_read@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    reverse_after_read@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    reverse_one_square@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    reverse_one_square@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S1083DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    S1083DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S2555$buffer	PTR unsigned char  size(2) Largest target is 0

    S2555$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@blue_val(BANK2[20]), decide_action@green_val(BANK2[20]), decide_action@red_val(BANK2[20]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), main@motorR(BANK3[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@blue_val(BANK2[20]), decide_action@green_val(BANK2[20]), decide_action@red_val(BANK2[20]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), STR_7(CODE[4]), 

    turn_left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_left_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_left_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_left_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_left_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_right_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_right_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_right_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_right_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[14]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[14]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[14]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _turn_right_90->_stop
    _turn_right_135->_stop
    _turn_left_90->_stop
    _turn_left_135->_stop
    _reverse_one_square->_stop
    _reverse_after_read->_stop
    _inch_forward->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    _sendStringSerial4->_sendCharSerial4
    _powf->___flge
    _sqrtf->___fladd
    _scalbnf->___flmul
    ___flmul->___fladd
    ___flsub->___fldiv
    ___flge->___flsub
    ___fldiv->___flmul
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_sendCharSerial4

Critical Paths under _main in BANK0

    _main->_decide_action
    _decide_action->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _decide_action->_powf

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_decide_action

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               219   219      0  280140
                                             88 BANK0      4     4      0
                                              0 BANK3    202   202      0
                           _ADC_init
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
              _color_click_toggleLED
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _color_writetoaddr
                      _decide_action
                     _fullSpeedAhead
                    _get16bitTMR0val
                       _inch_forward
                    _initDCmotorsPWM
                         _initUSART4
                      _invert_action
                        _resetTimer0
                 _reverse_after_read
                 _reverse_one_square
                               _stop
                      _turn_left_135
                       _turn_left_90
                     _turn_right_135
                      _turn_right_90
 ---------------------------------------------------------------------------------
 (1) _turn_right_90                                        6     2      4    8202
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_right_135                                       6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_90                                         6     2      4    7290
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_135                                        6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse_one_square                                   6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse_after_read                                   6     2      4    8050
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _resetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _invert_action                                        4     4      0      51
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _inch_forward                                         6     2      4    6986
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    4133
                                             20 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _get16bitTMR0val                                      6     4      2      24
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    2961
                                             20 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          6     4      2    2437
                                             14 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              7 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _decide_action                                      188   182      6  214677
                                             82 BANK0      6     0      6
                                              0 BANK2    180   180      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flsub
                           ___xxtofl
                  _color_writetoaddr
                               _powf
                  _sendStringSerial4
                            _sprintf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    15      7   72704
                                             62 BANK0     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   71852
                                             91 COMRAM     1     1      0
                                             59 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3   71391
                                             89 COMRAM     2     2      0
                                             50 BANK0      9     6      3
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   69654
                                             87 COMRAM     2     2      0
                                              0 BANK0     50    44      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3     463
                                              1 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    3039
                                             15 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1177
                                              9 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     857
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             67 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                              1 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     295
                                              2 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   87339
                                              0 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sqrtf                                               41    37      4    1413
                                             17 COMRAM    37    33      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6   12737
                                             42 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8   12053
                                             17 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8   23447
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8   16942
                                              1 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     335
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2066
                                             75 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    4523
                                             42 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              2 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_toggleLED                                1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     674
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     674
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0      22
                  i2_sendCharSerial4
 ---------------------------------------------------------------------------------
 (11) i2_sendCharSerial4                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_click_toggleLED
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_writetoaddr
   _decide_action
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
     ___flge
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
     ___flsub
     ___xxtofl
     _color_writetoaddr
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
         ___fladd (ARG)
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
     _sqrtf
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _get16bitTMR0val
   _inch_forward
     _setMotorPWM
     _stop
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _invert_action
   _resetTimer0
   _reverse_after_read
     _setMotorPWM
     _stop
   _reverse_one_square
     _setMotorPWM
     _stop
   _stop
   _turn_left_135
     _setMotorPWM
     _stop
   _turn_left_90
     _setMotorPWM
     _stop
   _turn_right_135
     _setMotorPWM
     _stop
   _turn_right_90
     _setMotorPWM
     _stop

 _HighISR (ROOT)
   i2_sendCharSerial4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      68        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100     CA      CA      11       78.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100     B4      B4       9       70.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B8      F4       7       95.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      82       5       81.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5D       1       98.9%
BITBIGSFRllhllh     37      0       0      49        0.0%
BITBIGSFRllhhl      31      0       0      47        0.0%
BITBIGSFRlllllh     2A      0       0      60        0.0%
BITBIGSFRllllll     26      0       0      66        0.0%
BITBIGSFRllllhh     20      0       0      52        0.0%
BITBIGSFRlllllh     1E      0       0      54        0.0%
BITBIGSFRhhlllh     1B      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      44        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      53        0.0%
BITBIGSFRlllllh      B      0       0      64        0.0%
BITBIGSFRlllllh      9      0       0      61        0.0%
BITBIGSFRllhlll      8      0       0      50        0.0%
BITBIGSFRllhhhl      6      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      65        0.0%
BITBIGSFRlllllh      6      0       0      59        0.0%
BITBIGSFRlllllh      5      0       0      58        0.0%
BITBIGSFRllhhhh      3      0       0      45        0.0%
BITBIGSFRlllllh      3      0       0      57        0.0%
BITBIGSFRllhlh       2      0       0      48        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRlllllh      1      0       0      62        0.0%
BITBIGSFRlhlh        1      0       0      42        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      51        0.0%
BITBIGSFRhlhl        1      0       0      40        0.0%
BITBIGSFRhhllll      1      0       0      39        0.0%
BITBIGSFRlhh         1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3A1      67        0.0%
DATA                 0      0     3A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 15:46:33 2024

               _color_read_Red 7FDE                   ___fldiv@aexp 0043                   ___fldiv@bexp 0042  
                 ___fldiv@sign 003B                _color_read_Blue 80CE                             _L1 0E5D  
                           _L2 0E59                             _L3 0E55                             _L4 0E51  
                           _L5 0E4D                             _L6 0E49                             l51 8166  
                           l60 802C                             _P1 0E45                             l54 8422  
                           _P2 0E41                             l63 807C                             _P3 0E3D  
                           _P4 0E39                             l57 80CC                             l81 45A6  
                           l73 3420                             _P5 0E35                             l66 811C  
                           l75 349C                             l69 7F36                             l77 3518  
                           l93 7DF6                             _bp 0E11                             _cp 0E21  
          ___wmul@multiplicand 0004          __end_of_invert_action 7DF8               _color_read_Clear 807E  
             _color_read_Green 802E              ??_Interrupts_init 0002                            l120 83B4  
                          l202 7AB0                            l123 83B6                            l132 84F4  
                          l141 8234                            l126 83DC                            l135 84FE  
                          l207 7AE0                            l215 7D80                            l223 793A  
                          l231 7850                            l129 8508                            l138 84D4  
                          l250 7110                            l234 770A                            l218 78E0  
                          l242 761E                            l226 77F6                            l500 849C  
                          l404 56CC                            l421 84EA                            l415 8442  
                          l503 84B0                            l271 7A24                            l255 7184  
                          l263 7490                            l239 7766                            l247 767A  
                          l192 7CE6                            l418 847E                            l266 79C8  
                          l258 741C                            l509 838A                            l199 707E  
                          l375 5440                            l448 84E0                            l386 56A8  
                          l491 8460                            l556 8498                            l565 8402  
                          l397 568E                            l830 7348                            l824 7C44  
                          l835 738E                            l862 728A                            l839 832A  
                          _lg2 0E31                            _pad 7E6C                            _ovt 0E25  
                          prod 0FF3                            wreg 0FE8                   ___flmul@aexp 001F  
                 ___flmul@bexp 0024                   ___flmul@sign 001E                   ___flmul@temp 0029  
                 ___flmul@prod 0025                    main@actions 0350                   ___fltol@exp1 000B  
                         l1110 59D8                           l1102 5B8E                           l1120 5A96  
                         l1220 6DB6                           l1119 5AA8                           l1135 81F2  
                         l1223 6F12                           l1063 7E6A                           l1160 664E  
                         l1152 6554                           l1056 7E62                           l1161 663C  
                         l1401 7B9A                           l1234 6EAA                           l1147 6730  
                         l1227 6E4E                           l1243 8274                           l1149 6590  
                         l1093 58BE                           l1158 65D6                           l1094 58AC  
                         l1502 13EE                           l1270 7E82                           l1318 4D76  
                         l1095 5872                           l1183 5FB8                           l1352 81AC  
                         l1409 82B4                           l1345 6D5E                           l1186 5E4A  
                         l1362 758E                           l1274 7ED0                           l1290 4774  
                         l1179 5C54                           l1196 5F7A                           l1188 5EC2  
                         l1372 6ABA                           l1189 5EB0                           l1285 4F8E  
                         l1542 850A                           l1535 32E6                           l1383 7F8C  
                         l1552 6964                           l1288 492E                           l1561 6396  
                         l1369 6B76                           l1474 1186                           l1572 62C0  
                         l1484 121C                           l1580 82F2                           l1565 619E  
                         l1469 3322                           l1389 7FDC                           l1574 632E  
                         l1494 12DE                           l5200 6168                           l1569 61FC  
                         l5210 6236                           l5202 6176                           l1498 1390  
                         l5220 62F0                           l5212 624A                           l5204 61DE  
                         l5060 83FA                           l6100 7C46                           l5054 83B6  
                         l5150 8500                           l5222 6306                           l5214 6288  
                         l5206 61EC                           l5070 7E1A                           l5230 6F30  
                         l6110 7CAA                           l6102 7C70                           l5056 83C6  
                         l5152 8504                           l5160 84FA                           l7000 64E8  
                         l5216 62D0                           l5208 6216                           l5080 7E54  
                         l5072 7E22                           l5064 7DF8                           l5240 6FFA  
                         l5232 6F84                           l6120 7CD6                           l6112 7CAC  
                         l6104 7C94                           l6200 769E                           l5154 84CC  
                         l7010 6530                           l7002 64F8                           l5250 6D72  
                         l5218 62DA                           l5170 603A                           l5162 5FBA  
                         l5082 7E56                           l5074 7E30                           l5066 7E00  
                         l5058 83DE                           l5242 703E                           l5234 6F98  
                         l6130 7CE0                           l6122 7CD8                           l6114 7CB6  
                         l6106 7C9E                           l6210 76EE                           l6202 76B6  
                         l5156 84D0                           l7020 657E                           l7012 6544  
                         l7004 6508                           l5260 6DF0                           l5252 6D80  
                         l7100 5C0C                           l5180 60AA                           l5172 604A  
                         l5164 5FCA                           l5244 849C                           l5084 7E5C  
                         l5076 7E36                           l5068 7E12                           l5236 6F9C  
                         l5228 6F14                           l6140 7A5E                           l6300 79A0  
                         l6132 7CE2                           l6124 7CDA                           l6116 7CB8  
                         l6108 7CA0                           l6212 76FA                           l6204 76C0  
                         l6220 7590                           l5350 839C                           l5158 84F6  
                         l7030 65C6                           l7022 658E                           l7014 6552  
                         l7006 6518                           l5270 6E44                           l5262 6DF8  
                         l5254 6DC6                           l7110 5C44                           l7102 5C0E  
                         l5166 5FFE                           l5246 84AC                           l5078 7E4C  
                         l5238 6FDE                           l6150 7AA2                           l6142 7A68  
                         l6310 7A10                           l6302 79AC                           l6134 7CE4  
                         l6126 7CDC                           l6118 7CC2                           l6214 7722  
                         l6206 76D8                           l6230 75F6                           l6222 75B2  
                         ?_pad 0010                           l6320 8480                           l6312 8424  
                         l5352 839E                           l5360 84EC                           l7040 6606  
                         l7032 65D4                           l7024 65A0                           l7016 655E  
                         l7008 6520                           l5280 6EBA                           l5272 6E80  
                         l5264 6E04                           l5256 6DDC                           l5248 6D62  
                         l7200 5F9E                           l7120 5C94                           l7112 5C64  
                         l7104 5C1E                           l5184 60BE                           l5192 60EA  
                         l5168 602C                           l5176 605E                           l8000 21E2  
                         l6152 7AC8                           l6144 7A80                           l6136 7A26  
                         l6304 79B8                           l6128 7CDE                           l6080 7D90  
                         l6216 773A                           l6208 76E2                           l6160 7896  
                         l6240 7666                           l6232 7602                           l6224 75CA  
                         l6322 848A                           l6330 84D6                           l6314 842C  
                         l5354 83A0                           l5346 838C                           l5370 820A  
                         l5362 84F0                           l7050 6678                           l7042 6634  
                         l7026 65B6                           l7034 65E6                           l7018 657C  
                         l7210 81BE                           l5290 6F02                           l5282 6EBE  
                         l5274 6E8C                           l5266 6E36                           l7202 5FA4  
                         l7130 5CE4                           l7122 5C9E                           l7114 5C74  
                         l7106 5C2E                           l5194 613E                           l5186 60CC  
                         l5178 607C                           l8010 22CC                           l8002 21FC  
                         l6146 7A8A                           l6138 7A46                           l6306 79E0  
                         l6082 7D94                           l6074 7D84                           l6250 70DE  
                         l6242 7080                           l6218 7752                           l6170 78F8  
                         l6162 78AE                           l6154 7852                           l6234 760E  
                         l6226 75D4                           l6324 8492                           l6316 8436  
                         l5356 83A2                           l5348 8396                           l5372 8230  
                         l5364 81F6                           l7060 66F0                           l7052 66A2  
                         l7036 65F4                           l7028 65BC                           l5284 6EE2  
                         l5276 6E9A                           l5268 6E38                           l7204 5FA8  
                         l7140 5D26                           l7132 5CF0                           l7124 5CB4  
                         l7108 5C3E                           l5196 6152                           l8100 2C62  
                         l8020 23DA                           l8012 2348                           l8004 2230  
                         l7220 7C08                           l7300 727A                           l6148 7A96  
                         l6308 79F8                           l6340 845C                           l6332 8444  
                         l6084 7D98                           l6076 7D88                           l6260 7140  
                         l6252 70E8                           l6244 70A4                           l6172 7910  
                         l6164 78B8                           l6156 7874                           l6236 7636  
                         l6228 75EC                           l6180 77A2                           l6326 8494  
                         l6318 8440                           l5358 8406                           l5374 8232  
                         l5366 81FA                           l7070 6726                           l7062 670C  
                         l7046 665E                           l7054 66A6                           l7038 65F8  
                         l7230 728C                           l5286 6EF2                           l5278 6EB8  
                         l7150 5D88                           l7142 5D36                           l7134 5CFE  
                         l7126 5CC0                           l7118 5C88                           l5198 615C  
                         l8110 2D04                           l8102 2C72                           l8030 25C4  
                         l8022 240E                           l8014 237C                           l8006 2264  
                         l5390 835C                           l7222 7C18                           l7214 7B9C  
                         l7310 7E9E                           l6350 8476                           l6342 845E  
                         l6334 844E                           l6086 7D9C                           l6078 7D8C  
                         l6094 7DA4                           l6262 7158                           l6254 70F4  
                         l6246 70BC                           l6270 73C8                           l6174 7926  
                         l6166 78C4                           l6158 788C                           l6238 764E  
                         l6190 77E6                           l6182 77AC                           l6328 8496  
                         l5368 8202                           l7064 6710                           l7056 66C0  
                         l7048 666A                           l7240 7316                           l7232 72BA  
                         l7208 81AE                           l5288 6F00                           l7160 5E30  
                         l7152 5DA4                           l7144 5D50                           l7136 5D0A  
                         l7128 5CD8                           l7080 5B9C                           l8120 2E50  
                         l8112 2D38                           l8104 2CA6                           l8040 26AC  
                         l8032 25F8                           l8024 2442                           l8016 238C  
                         l8008 2298                           l5392 8360                           l7224 7C3C  
                         l7216 7BCA                           l7320 74F0                           l7312 7EA2  
                         l7304 7E6C                           l7400 45F4                           l8200 37AA  
                         l6336 8450                           l6088 7DA0                           l6344 84E2  
                         l6264 716C                           l6256 7100                           l6248 70C6  
                         l6280 740C                           l6272 73D2                           l6168 78D0  
                         l6192 780E                           l6184 77C4                           l6176 7768  
                         l7066 671E                           l7058 66D6                           l7242 7328  
                         l7234 72CA                           l7170 5E6C                           l7162 5E3A  
                         l7154 5DCE                           l7146 5D60                           l7138 5D1A  
                         l7090 5BDC                           l7082 5BAA                           l8130 2F9C  
                         l8122 2E84                           l8114 2D6C                           l8106 2CDA  
                         l8050 27EE                           l8042 26E0                           l8034 2608  
                         l8026 2514                           l8018 23A6                           l5394 836E  
                         l7226 7C42                           l7218 7BDA                           l7330 7542  
                         l7322 7518                           l7314 7EC0                           l7306 7E7A  
                         l7410 4632                           l7402 45FE                           l8210 38B4  
                         l8202 37E0                           l6346 8462                           l6290 793C  
                         l6338 845A                           l6258 7128                           l6282 7434  
                         l6274 73EA                           l6266 7390                           l6194 7826  
                         l6186 77CE                           l6178 778A                           l7068 6724  
                         l7244 7336                           l7236 72F8                           l7252 82F4  
                         l7180 5EDE                           l7172 5E7A                           l7164 5E48  
                         l7156 5E04                           l7148 5D7C                           l7092 5BE2  
                         l7084 5BAC                           l8140 3178                           l8132 2FF4  
                         l8124 2EB8                           l8116 2DC4                           l8108 2CEA  
                         l8052 2822                           l8036 2622                           l8028 253A  
                         l8044 2714                           l5396 8372                           l7260 7186  
                         l7324 7524                           l7316 7492                           l7308 7E8E  
                         l7340 82BE                           l7500 49C0                           l7420 467A  
                         l7412 463A                           l7404 4606                           l8300 4272  
                         l8220 39D0                           l8212 38FC                           l8204 3816  
                         l6348 8468                           l5820 7CE8                           l6292 795C  
                         l6284 744C                           l6276 73F4                           l6268 73B0  
                         l6196 783C                           l6188 77DA                           l7246 7386  
                         l7238 7308                           l7254 830A                           l7190 5F48  
                         l7182 5EEC                           l7174 5EA8                           l7166 5E5A  
                         l7158 5E12                           l7094 5BF2                           l7086 5BBC  
                         l7078 5B90                           l8150 3266                           l8142 31AC  
                         l8134 304C                           l8126 2EEC                           l8118 2E1C  
                         l8054 2856                           l8046 273E                           l8038 2656  
                         l7270 71DC                           l7262 719C                           l7334 7586  
                         l7318 74B2                           l7350 6966                           l7342 7F38  
                         l7510 4AD4                           l7502 49D0                           l7422 4680  
                         l7406 4616                           l7414 463E                           l8310 438C  
                         l8302 42A6                           l8230 3AEA                           l8222 3A04  
                         l8214 3930                           l8206 384A                           l5830 7D30  
                         l5822 7CEC                           l6294 7974                           l6286 7464  
                         l6278 7400                           l6198 767C                           l5840 811E  
                         l7248 738C                           l7256 831A                           l6800 5800  
                         l7192 5F62                           l7184 5F16                           l7168 5E68  
                         l7096 5BF8                           l7088 5BCC                           l8152 32B6  
                         l8144 31E0                           l8136 30A4                           l8128 2F44  
                         l8056 2866                           l8048 2796                           l7272 71EC  
                         l7328 7530                           l7352 6986                           l7344 7F46  
                         l6720 7B02                           l7600 4F2C                           l7520 4B74  
                         l7504 49E4                           l7512 4ADA                           l7440 4704  
                         l7424 4688                           l7416 4664                           l7432 46C2  
                         l7408 4626                           l8320 4494                           l8312 43C0  
                         l8304 42DA                           l8240 3BF2                           l8232 3B1E  
                         l8224 3A38                           l8216 3964                           l8208 387E  
                         l5832 7D3C                           l5824 7D04                           l6296 797E  
                         l6288 7478                           l8400 501C                           l5850 8150  
                         l5842 8122                           l6810 5814                           l6802 5804  
                         l6730 56D0                           l7194 5F7E                           l7178 5ED2  
                         l7186 5F1A                           l7098 5BFE                           l8154 32F6  
                         l8146 3214                           l8138 3120                           l8066 288E  
                         l7282 7216                           l7274 71F0                           l7266 71B0  
                         l7370 6B2E                           l7362 6A6E                           l7354 69DC  
                         l7346 7F5A                           l6722 7B0C                           l7338 82B6  
                         l7602 4F44                           l7530 4C50                           l7522 4BA6  
                         l7514 4AF8                           l7506 4A48                           l7442 470C  
                         l7434 46E8                           l7450 4724                           l7426 469C  
                         l7418 4676                           l8322 44CA                           l8314 43F6  
                         l8306 4310                           l8250 3D0E                           l8242 3C28  
                         l8234 3B54                           l8226 3A6E                           l8218 399A  
                         l8170 33A4                           l8162 3324                           l5834 7D48  
                         l5826 7D0E                           l6298 7996                           l8410 5028  
                         l8402 501C                           l5860 8162                           l5852 815A  
                         l5844 812C                           l6900 5AB8                           l6820 588C  
                         l6812 583E                           l6804 5808                           l6740 570C  
                         l6732 56DC                           l7196 5F8E                           l7188 5F34  
                         l7700 67F2                           l8156 330E                           l8148 3224  
                         l8084 2980                           l8092 2A0A                           l8068 28A6  
                         l8076 2924                           l7292 723E                           l7284 7220  
                         l7276 71FE                           l7268 71DA                           l7372 6B56  
                         l7364 6AAA                           l7356 69F0                           l7380 7FA2  
                         l6724 7B28                           l6716 7AE2                           l7604 4F54  
                         l7540 4CB2                           l7532 4C56                           l7524 4BB6  
                         l7516 4B2C                           l7508 4AA0                           l7460 47BE  
                         l7452 473E                           l7436 46FA                           l7428 46A6  
                         l7620 6BB8                           l7612 6B78                           l8340 458E  
                         l8332 4530                           l8324 4512                           l8316 442C  
                         l8308 4358                           l8260 3E2A                           l8252 3D44  
                         l8244 3C70                           l8236 3B8A                           l8228 3AB6  
                         l8180 34CE                           l8172 33D6                           l8164 333E  
                         l5828 7D26                           l5836 7D50                           l8500 5464  
                         l8420 5072                           l8412 5042                           l8404 501C  
                         l5862 8164                           l5854 815C                           l5846 813C  
                         l5870 7FDE                           l6910 5B1E                           l6902 5AC4  
                         l6830 58CC                           l6822 5890                           l6814 585A  
                         l6806 580C                           l6750 573C                           l6742 571C  
                         l6734 56EA                           l7198 5F9C                           l7710 6872  
                         l7702 680E                           l8094 2A7C                           l8086 299E  
                         l8078 296C                           l7294 724A                           l7286 722A  
                         l7374 6B66                           l7358 69FE                           l7366 6ADE  
                         l7382 7FAE                           l6726 7B5A                           l6718 7AF2  
                         l7606 4F6A                           l7550 4D4C                           l7542 4CBA  
                         l7534 4C8A                           l7526 4BC6                           l7518 4B5E  
                         l7470 48B4                           l7462 47FC                           l7438 46FE  
                         l7390 45A8                           l7622 6BC2                           l7614 6BA0  
                         l8342 45A2                           l8334 4582                           l8326 4518  
                         l8318 4460                           l8270 3F32                           l8262 3E5E  
                         l8254 3D78                           l8246 3CA4                           l8238 3BBE  
                         l8190 3708                           l8182 34E4                           l8174 33EC  
                         l8166 3360                           l5838 7D68                           l8510 54A8  
                         l8502 5468                           l8430 50BC                           l8422 5086  
                         l8414 504E                           l8406 501C                           l8350 4F9C  
                         l5856 815E                           l5848 8146                           l5864 807E  
                         l5872 8024                           l6920 5B66                           l6912 5B2E  
                         l6904 5AD2                           l6840 590E                           l6832 58DC  
                         l6824 589E                           l6816 586A                           l6808 5810  
                         l6760 5766                           l6752 574E                           l6744 571E  
                         l6736 56EC                           l7712 688E                           l7720 68EE  
                         l7704 681A                           l8096 2A8C                           l8088 29F4  
                         l7800 127C                           l7296 725A                           l7368 6B1A  
                         l7384 7FB2                           l7608 4F72                           l7560 4DAA  
                         l7552 4D6C                           l7544 4CC0                           l7536 4C9E  
                         l7528 4BFA                           l7480 4946                           l7472 48BC  
                         l7464 482E                           l7456 4784                           l7392 45AE  
                         l7624 6BD8                           l7632 6BEE                           l7616 6BA8  
                         l8336 4586                           l8328 451C                           l8280 404C  
                         l8272 3F66                           l8264 3E92                           l8256 3DAC  
                         l8248 3CD8                           l8192 3714                           l8184 36B8  
                         l8176 3452                           l8168 3382                           l8520 54EA  
                         l8512 54C0                           l8440 5122                           l8432 50D0  
                         l8424 508C                           l8416 505C                           l8408 5020  
                         l8360 4FB8                           l8352 4FA0                           l5858 8160  
                         l5882 80CE                           l5866 80C4                           l6922 5B68  
                         l6914 5B4E                           l6906 5B0C                           l6850 593C  
                         l6842 591C                           l6826 58A0                           l6818 5880  
                         l6762 5776                           l6770 57A0                           l6754 5750  
                         l6738 56FC                           l6746 5726                           l7722 6920  
                         l7714 68C2                           l7706 6836                           l8098 2AAE  
                         l7802 1298                           l7298 726A                           l7386 7FBE  
                         l7378 7F8E                           l7570 4DD2                           l7562 4DB0  
                         l7554 4D88                           l7546 4CC8                           l7538 4CA2  
                         l7490 4978                           l7482 4952                           l7466 486C  
                         l7458 478A                           l7394 45BE                           l7642 6C94  
                         l7626 6BDE                           l7634 6C20                           l7618 6BB4  
                         l7730 8244                           l8290 4156                           l8282 4082  
                         l8274 3F9C                           l8266 3EC8                           l8258 3DE2  
                         l8194 3736                           l8186 36DA                           l8178 3468  
                         l8530 5560                           l8522 54FE                           l8514 54C2  
                         l8506 5480                           l8450 5172                           l8442 5140  
                         l8434 50EA                           l8426 5098                           l8418 506E  
                         l8370 4FC2                           l8362 4FBA                           l8354 4FA4  
                         l8346 4F90                           l5884 8114                           l5876 802E  
                         l6940 6398                           l6924 5B6E                           l6916 5B52  
                         l6908 5B0E                           l6860 59A8                           l6852 5946  
                         l6844 5928                           l6836 58F0                           l6828 58AA  
                         l6780 57D8                           l6772 57B0                           l6764 5786  
                         l6756 5756                           l6748 5736                           l7724 6954  
                         l7716 68CA                           l7708 686A                           l7900 1726  
                         l7820 13A0                           l7812 1342                           l7804 12A6  
                         l7740 0EA4                           l7388 7FC2                           l6932 8276  
                         l7580 4E06                           l7564 4DB8                           l7556 4D96  
                         l7572 4DD8                           l7548 4CD4                           l7492 4986  
                         l7484 495A                           l7468 4880                           l7476 48FC  
                         l7396 45CC                           l7652 6CFA                           l7644 6CBE  
                         l7636 6C44                           l7628 6BE6                           l7732 824C  
                         l8292 419E                           l8284 40B8                           l8276 3FE4  
                         l8268 3EFE                           l8196 3742                           l8188 36E6  
                         l8540 55C6                           l8532 5566                           l8524 5504  
                         l8516 54D6                           l8508 5498                           l8460 51D6  
                         l8452 518A                           l8444 5144                           l8436 50F6  
                         l8428 50B0                           l8380 4FE0                           l8372 4FC8  
                         l8364 4FBC                           l8356 4FB0                           l8348 4F98  
                         l5878 8074                           l6950 63D4                           l6942 63A4  
                         l6926 5B7C                           l6918 5B60                           l6862 59B8  
                         l6846 592C                           l6838 5900                           l6854 594C  
                         l6790 57EC                           l6782 57DC                           l6774 57C2  
                         l6766 5796                           l6758 5764                           l7718 68E6  
                         l7910 18A6                           l7902 177E                           l7830 1440  
                         l7822 13BC                           l7814 135A                           l7806 12F2  
                         l7750 0F3E                           l7742 0EC4                           l6934 8282  
                         l7590 4EBC                           l7582 4E5E                           l7574 4DEA  
                         l7566 4DC8                           l7558 4DA6                           l7494 499E  
                         l7486 4962                           l7478 4936                           l7398 45D0  
                         l7646 6CCC                           l7638 6C6C                           l7654 6D2A  
                         l7734 8254                           l8294 41D2                           l8286 40EC  
                         l8278 4018                           l8198 3776                           l8550 564A  
                         l8542 55DE                           l8534 558A                           l8526 5510  
                         l8518 54E6                           l8470 5244                           l8462 51F0  
                         l8454 5196                           l8446 515E                           l8438 510E  
                         l8390 4FFC                           l8382 4FE8                           l8374 4FCC  
                         l8366 4FBE                           l8358 4FB4                           l5888 7ED2  
                         l6960 6404                           l6952 63E4                           l6944 63B2  
                         l6928 5B7E                           l6880 5A3A                           l6872 5A12  
                         l6856 5972                           l6864 59C8                           l6848 593A  
                         l6792 57F0                           l6784 57E0                           l6776 57D0  
                         l6768 5798                           l7920 1958                           l7912 18C0  
                         l7904 17B2                           l7832 1450                           l7840 1510  
                         l7824 13D2                           l7816 1368                           l7808 130A  
                         l7744 0F0C                           l6936 8290                           l7592 4ED8  
                         l7584 4E92                           l7576 4DFC                           l7568 4DCC  
                         l7496 49B0                           l7488 4966                           l7680 8182  
                         l7736 8264                           l7728 8236                           l8296 4206  
                         l8288 4120                           l8552 565E                           l8544 55F2  
                         l8560 568E                           l8536 559C                           l8528 554C  
                         l8480 5318                           l8472 5270                           l8464 51F4  
                         l8456 51A2                           l8448 5168                           l8392 5004  
                         l8384 4FEC                           l8376 4FD0                           l8368 4FC2  
                         l6970 643A                           l6962 640A                           l6954 63E6  
                         l6946 63B4                           l6882 5A42                           l6874 5A1C  
                         l6866 59EE                           l6858 59A6                           l6890 5A66  
                         l6794 57F4                           l6786 57E4                           l6778 57D4  
                         l7690 675E                           l7930 1A2E                           l7922 198C  
                         l7914 18F4                           l7906 17E6                           l7834 14B4  
                         l7826 13FE                           l7770 101E                           l7762 0FD0  
                         l7754 0F54                           l6938 8294                           l7594 4EE0  
                         l7586 4E9A                           l7578 4E00                           l7498 49B8  
                         l8650 6CA8                           l7658 6D38                           l7682 81A2  
                         l8298 423C                           l8554 5676                           l8546 561E  
                         l8538 55B4                           l8562 5696                           l8490 53C0  
                         l8482 532C                           l8474 5284                           l8466 5206  
                         l8458 51AE                           l8394 500C                           l8386 4FF0  
                         l8378 4FD8                           l6980 647A                           l6972 644A  
                         l6964 6418                           l6948 63C4                           l6956 63EE  
                         l6892 5A6A                           l6884 5A46                           l6876 5A2A  
                         l6868 59FE                           l6796 57F8                           l6788 57E8  
                         l7692 6792                           l7940 1AA2                           l7932 1A3E  
                         l7924 199E                           l7908 1896                           l7916 192C  
                         l7860 1582                           l7836 14D4                           l7828 140C  
                         l7844 1524                           l7772 103A                           l7764 0FE0  
                         l7756 0F76                           l7748 0F22                           l7596 4EEE  
                         l7588 4E9E                           l8652 6D1C                           l7676 8168  
                         l8564 56B8                           l8548 5632                           l8492 53EC  
                         l8484 536C                           l8476 52C4                           l8468 5232  
                         l8396 5014                           l8388 4FF4                           l6982 648A  
                         l6990 64AA                           l6974 644C                           l6966 641A  
                         l6958 63FE                           l6894 5A78                           l6886 5A56  
                         l6878 5A2C                           l6798 57FC                           l7694 679A  
                         l7686 6732                           l7950 1BB0                           l7942 1AB6  
                         l7934 1A56                           l7926 19AE                           l7918 193C  
                         l7862 15A4                           l7846 1534                           l7838 14EC  
                         l7774 1138                           l7766 0FEE                           l7758 0F98  
                         l7598 4F1E                           l7678 8170                           l8646 7DB8  
                         l8494 5400                           l8486 5380                           l8478 52D8  
                         l8398 501C                           l6992 64BA                           l6984 6492  
                         l6968 642A                           l6976 6454                           l6896 5A8E  
                         l6888 5A58                           l7696 67B6                           l7688 6742  
                         l7960 1C78                           l7952 1BE4                           l7944 1AD2  
                         l7928 1A16                           l7880 162E                           l7864 15C8  
                         l7856 155C                           l7848 1542                           l7792 1230  
                         l7784 11D6                           l7776 11A4                           l7768 100A  
                         l8648 6C02                           l8488 53AC                           l8496 5440  
                         l6994 64BA                           l6986 6496                           l6978 6464  
                         l7698 67EA                           l7970 1E22                           l7962 1CEA  
                         l7954 1BF4                           l7946 1AE2                           l7938 1A7E  
                         l7890 1650                           l7866 15D6                           l7874 15F4  
                         l7858 1572                           l7794 123E                           l7786 11F8  
                         l7778 11C0                           l8498 5456                           l7980 1F92  
                         l7972 1E56                           l7964 1D3E                           l7956 1C04  
                         l7948 1B36                           l7796 1266                           l7788 1206  
                         l6998 64CE                           l7990 2102                           l7982 1FEA  
                         l7974 1E8A                           l7966 1D72                           l7958 1C1E  
                         l7894 1666                           l7878 160A                           l7992 2136  
                         l7984 2042                           l7976 1EE2                           l7968 1DCA  
                         l7896 169A                           l7994 216A                           l7986 2076  
                         l7978 1F3A                           l7898 16F2                           l7996 219E  
                         l7988 20AA                           l7998 21D2                           STR_1 0E8E  
                         STR_2 0E71                           STR_3 0E80                           STR_4 0E9B  
                         STR_7 0E9F                   _BAUD4CONbits 0EE9                           u5000 7E12  
                         u5001 7E0E                           u5010 7E30                           _T2PR 0FBC  
                         u5011 7E2C                           u5100 60CC                           u5020 7E4C  
                         u5101 60C8                           u5021 7E48                           u5120 613E  
                         u5200 6FFA                           u5121 613A                           u5201 6FF6  
                         u5130 6176                           u5050 5FFE                           u5210 84AC  
                         u6010 7D04                           u5131 6172                           u5115 60FE  
                         u5051 5FFA                           u5211 84A8                           u6011 7D00  
                         u5300 6EF2                           u5220 6D72                           u5140 61EC  
                         u5116 6108                           u5060 602C                           u6020 7D26  
                         u5301 6EEE                           u5221 6D6E                           u5141 61E8  
                         u5117 6118                           u5061 6028                           u6021 7D22  
                         u5310 6F00                           u5230 6D80                           u5150 6288  
                         u5070 603A                           u6030 7D68                           u5311 6EFC  
                         u5231 6D7C                           u5151 6284                           u5071 6036  
                         u6031 7D64                           u5400 821E                           u7000 58CC  
                         u5240 6DDC                           u5160 62F0                           u5080 607C  
                         u6040 7D80                           u6200 788C                           u5401 8216  
                         u7001 58C8                           u5241 6DD8                           u5161 62EC  
                         u5081 6078                           u6041 7D7C                           u6201 7888  
                         u6050 7EE4                           u7010 58DC                           u5250 6E32  
                         u5170 6306                           u5090 60AA                           u6210 78AE  
                         u6051 7EDC                           u7011 58D8                           u5251 6E2E  
                         u5171 6302                           u5091 60A6                           u6211 78AA  
                         u6108 7F28                           u7100 5A3A                           u7020 590E  
                         u5260 6E7C                           u5420 838A                           u6300 7722  
                         u6220 78F8                           u7101 5A36                           u7021 590A  
                         u5261 6E78                           u5421 8386                           u6301 771E  
                         u6221 78F4                           u6070 7F02                           u7110 5A56  
                         u7030 591C                           u5270 6E9A                           u5190 6F30  
                         u6310 773A                           u6230 7910                           u6071 7EFA  
                         u7111 5A52                           u7031 5918                           u5271 6E96  
                         u5191 6F2C                           u6311 7736                           u6231 790C  
                         u7200 5B2E                           u7120 5A66                           u7040 593A  
                         u5280 6EAA                           u8000 6AAA                           u6160 7A5E  
                         u6400 73C8                           u6320 75CA                           u6240 77A2  
                         u7201 5B2A                           u7121 5A62                           u7041 5936  
                         u5281 6EA6                           u5185 6372                           u8001 6AA6  
                         u6161 7A5A                           u6401 73C4                           u6321 75C6  
                         u6241 779E                           u6090 7F26                           u5418 8220  
                         u7210 5B4E                           u7130 5A78                           u7050 5972  
                         u5290 6EB8                           u8010 6AFE                           u6170 7A80  
                         u6410 73EA                           u6330 75EC                           u6250 77C4  
                         u6091 7F1E                           u7211 5B4A                           u7131 5A74  
                         u7051 596E                           u5291 6EB4                           u6171 7A7C  
                         u6411 73E6                           u6331 75E8                           u6251 77C0  
                         u6068 7EE6                           u7300 643A                           u7220 5B60  
                         u7140 5A8E                           u7060 59B8                           u8020 6B1A  
                         u8100 46E8                           u6180 7AC8                           u6420 7434  
                         u6340 7636                           u6260 780E                           u7301 6436  
                         u7221 5B5C                           u7141 5A8A                           u7061 59B4  
                         u8021 6B16                           u8101 46E4                           u6181 7AC4  
                         u6421 7430                           u6341 7632                           u6261 780A  
                         u7310 647A                           u7230 5B7C                           u7150 5AA4  
                         u7070 59EE                           u8030 6B56                           u8110 46FA  
                         u6190 7AE0                           u6430 744C                           u6350 764E  
                         u6270 7826                           u7311 6476                           u7231 5B78  
                         u7151 5AA0                           u7071 59EA                           u8031 6B52  
                         u8015 6AF4                           u8111 46F6                           u6191 7ADC  
                         u6431 7448                           u6351 764A                           u6271 7822  
                         u6088 7F04                           u7400 6606                           u7320 64BA  
                         u7160 5AB8                           u7080 59FE                           u9000 2C62  
                         u8040 7FDC                           u7240 82B4                           u8200 4986  
                         u8120 4770                           u6440 7974                           u6360 70BC  
                         u6280 76B6                           u7401 6602                           u7321 64B6  
                         u7161 5AB4                           u7081 59FA                           u9001 2C5E  
                         u8041 7FD8                           u7241 82B0                           u8201 4982  
                         u8121 476C                           u6441 7970                           u6361 70B8  
                         u6281 76B2                           u7410 6634                           u7330 6530  
                         u7250 63B2                           u7170 5AD2                           u7090 5A2A  
                         u8210 49B0                           u8130 47FC                           u8050 45CC  
                         u6450 7996                           u6370 70DE                           u6290 76D8  
                         u7411 6630                           u7331 652C                           u7251 63AE  
                         u7171 5ACE                           u7091 5A26                           u8211 49AC  
                         u8131 47F8                           u8051 45C8                           u6451 7992  
                         u6371 70DA                           u6291 76D4                           u7420 664A  
                         u7340 6552                           u7260 63C4                           u7180 5B0C  
                         u7500 5BCC                           u8300 4D96                           u8220 4AF8  
                         u8140 482E                           u8060 4616                           u6460 79E0  
                         u6380 7128                           u9100 506E                           u7421 6646  
                         u7341 654E                           u7261 63C0                           u7181 5B08  
                         u7501 5BC8                           u8301 4D92                           u8221 4AF4  
                         u8141 482A                           u8061 4612                           u6461 79DC  
                         u6381 7124                           u9101 506A                           u7430 665E  
                         u7350 657C                           u7270 63D4                           u7190 5B1E  
                         u7510 5C0C                           u9030 32B6                           u8310 4DEA  
                         u8230 4B5E                           u8150 486C                           u8070 4626  
                         u6470 79F8                           u6390 7140                           u9110 50B0  
                         u7431 665A                           u7351 6578                           u7271 63D0  
                         u7191 5B1A                           u7511 5C08                           u9031 32B2  
                         u9015 3236                           u8311 4DE6                           u8231 4B5A  
                         u8151 4868                           u8071 4622                           u6471 79F4  
                         u6391 713C                           u9111 50AC                           u7440 6678  
                         u7360 65A0                           u7280 6418                           u7600 5EA8  
                         u7520 5C1E                           u8400 675E                           u9040 330E  
                         u8320 4EBC                           u8240 4BA6                           u8160 48F8  
                         u8080 4664                           u9200 5400                           u9120 510E  
                         u7441 6674                           u7361 659C                           u7281 6414  
                         u7601 5EA4                           u7521 5C1A                           u8401 675A  
                         u9041 330A                           u9025 327C                           u8321 4EB8  
                         u8241 4BA2                           u8161 48F4                           u8081 4660  
                         u9201 53FC                           u9121 510A                           u7450 66C0  
                         u7370 65B6                           u7290 642A                           u7610 5EBE  
                         u7530 5C2E                           u8410 67B6                           u9026 3286  
                         u6810 7AF2                           u8330 4ED8                           u8250 4BB6  
                         u8170 492E                           u8090 4676                           u9050 33D6  
                         u9210 547C                           u9130 5206                           u7451 66BC  
                         u7371 65B2                           u7291 6426                           u7611 5EBA  
                         u7531 5C2A                           u8411 67B2                           u9027 3296  
                         u6811 7AEE                           u8331 4ED4                           u8251 4BB2  
                         u8171 492A                           u8091 4672                           u9051 33D2  
                         u9211 5478                           u9131 5202                           u4980 83C6  
                         u7460 66F0                           u7380 65D4                           u7700 72BA  
                         u6900 5776                           u7620 5ED2                           u7540 5C64  
                         u8420 680E                           u8500 0F98                           u6820 7B02  
                         u8340 4F3E                           u8260 4C50                           u8180 4946  
                         u9060 3452                           u9300 565E                           u9220 54A8  
                         u9140 5244                           u4981 83C2                           u7461 66EC  
                         u7381 65D0                           u7701 72B6                           u6901 5772  
                         u7621 5ECE                           u7541 5C60                           u8421 680A  
                         u8501 0F94                           u6821 7AFE                           u8341 4F38  
                         u8261 4C4C                           u8181 4942                           u9061 344E  
                         u9301 565A                           u9221 54A4                           u9141 5240  
                         u4990 83DC                           u7470 671E                           u7390 65F4  
                         u7710 72F8                           u6910 5786                           u7630 5EEC  
                         u7550 5C74                           u8430 6836                           u8510 0FEE  
                         u6830 7B28                           u8350 4F40                           u8270 4C9E  
                         u8190 4978                           u9070 34CE                           u9310 568A  
                         u9230 54D2                           u9150 5284                           u4991 83D8  
                         u7471 671A                           u7391 65F0                           u7711 72F4  
                         u6911 5782                           u7631 5EE8                           u7551 5C70  
                         u8431 6832                           u8511 0FEA                           u6831 7B24  
                         u8271 4C9A                           u8191 4974                           u9071 34CA  
                         u9311 5686                           u9231 54CE                           u9151 5280  
                         u7720 7316                           u6920 57C2                           u7640 5F34  
                         u7560 5DEE                           u7480 5BAA                           u8440 688E  
                         u8600 11F8                           u8520 100A                           u7800 723A  
                         u6840 7B5A                           u8360 4F54                           u8280 4D4C  
                         u9080 452C                           u9320 56B8                           u9240 54E6  
                         u9160 52D8                           u7721 7312                           u6921 57BE  
                         u7641 5F30                           u7481 5BA6                           u8441 688A  
                         u8601 11F4                           u8521 1006                           u7801 7236  
                         u6841 7B56                           u8361 4F50                           u8281 4D48  
                         u9081 4528                           u9321 56B4                           u9241 54E2  
                         u9161 52D4                           u7730 7336                           u6930 57D0  
                         u6850 56EA                           u7650 5F62                           u7570 5E48  
                         u7490 5BBC                           u8450 68E6                           u8610 1206  
                         u8530 103A                           u7810 725A                           u8290 4D88  
                         u8370 6BA0                           u9090 4582                           u9250 554C  
                         u9170 532C                           u7731 7332                           u6931 57CC  
                         u6851 56E6                           u7651 5F5E                           u7571 5E44  
                         u7491 5BB8                           u8451 68E2                           u8611 1202  
                         u8531 1036                           u7811 7256                           u8291 4D84  
                         u8371 6B9C                           u9091 457E                           u9251 5548  
                         u9171 5328                           u7740 7386                           u6940 583E  
                         u6860 56FC                           u7660 5F9C                           u7580 5E68  
                         u8700 13EE                           u8620 123E                           u7820 726A  
                         u7900 757C                           u8380 6C40                           u9260 559C  
                         u9180 5380                           u7741 7382                           u6941 583A  
                         u6861 56F8                           u7661 5F98                           u7581 5E64  
                         u7565 5DE4                           u8701 13EA                           u8621 123A  
                         u7821 7266                           u7901 7576                           u8381 6C3C  
                         u9261 5598                           u9181 537C                           u7750 830A  
                         u6950 5856                           u6870 570C                           u7590 5E7A  
                         u8710 140C                           u8630 1298                           u8470 0F0C  
                         u7670 7BCA                           u7910 757E                           u7830 7E7A  
                         u8390 81A2                           u9270 55C6                           u9190 53C0  
                         u7751 8306                           u6951 5850                           u6871 5708  
                         u7591 5E76                           u8711 1408                           u8631 1294  
                         u8471 0F08                           u7671 7BC6                           u7831 7E76  
                         u8391 819E                           u9407 7830                           u9271 55C2  
                         u9191 53BC                           u6960 5858                           u6880 574E  
                         u8800 15D6                           u8720 1450                           u8640 12A6  
                         u8560 10FE                           u8480 0F3E                           u7680 7C08  
                         u7760 719C                           u7840 7EC0                           u7920 82F2  
                         u9280 55F2                           u6881 574A                           u8465 6900  
                         u8801 15D2                           u8721 144C                           u8641 12A2  
                         u8545 1050                           u8481 0F3A                           u7681 7C04  
                         u7761 7198                           u7841 7EBC                           u7921 82EE  
                         u9417 7614                           u9281 55EE                           u9337 5034  
                         u6970 5880                           u6890 5764                           u8810 162E  
                         u8730 14B4                           u8650 130A                           u8570 1138  
                         u8546 105A                           u8490 0F76                           u7690 7C3C  
                         u7770 71D0                           u7850 74D2                           u7930 7F46  
                         u9290 5632                           u6971 587C                           u6891 5760  
                         u8811 162A                           u8731 14B0                           u8651 1306  
                         u8571 1134                           u8555 10AA                           u8547 106A  
                         u8491 0F72                           u7691 7C38                           u7931 7F42  
                         u9507 7106                           u9427 7658                           u9291 562E  
                         u9347 50DC                           u6980 589E                           u8900 2920  
                         u8820 164C                           u8740 14EC                           u8660 135A  
                         u8580 11A4                           u8556 10B4                           u7780 71FE  
                         u7860 74F0                           u7940 69AE                           u6981 589A  
                         u8901 291C                           u8821 1648                           u8741 14E8  
                         u8661 1356                           u8581 11A0                           u8565 10F4  
                         u8557 10C4                           u7781 71FA                           u7861 74EC  
                         u9517 714A                           u9437 78D6                           u9357 512E  
                         u6990 58BE                           u8910 296C                           u8830 1958  
                         u8750 1542                           u8670 1368                           u8590 11C0  
                         u7790 7212                           u7870 7518                           u7950 69DC  
                         u6991 58BA                           u8911 2968                           u8831 1954  
                         u8751 153E                           u8671 1364                           u8591 11BC  
                         u7791 720E                           u7775 71C6                           u7871 7514  
                         u7855 74C8                           u7951 69D8                           u9527 7176  
                         u9447 791A                           u9367 517E                           u8920 299E  
                         u8760 1558                           u8680 13BC                           u7880 7542  
                         u7960 69FE                           u8921 299A                           u8761 1554  
                         u8681 13B8                           u7881 753E                           u7961 69FA  
                         u7945 69A4                           u9537 79BE                           u9457 7700  
                         u9377 5448                           u8930 29F4                           u8850 1A7A  
                         u8770 1572                           u8690 13D2                           u8931 29F0  
                         u8851 1A76                           u8771 156E                           u8691 13CE  
                         u9547 7A02                           u9467 7744                           u9387 569E  
                         u8860 1AA2                           u8780 15A4                           u7980 6A6A  
                         u8861 1A9E                           u8845 19C4                           u8781 15A0  
                         u7981 6A66                           u9557 7D4A                           u9477 7412  
                         u9397 77EC                           u8950 2AAE                           u8846 19CE  
                         u8790 15C8                           u7990 6A8E                           u8951 2AAA  
                         u8847 19DE                           u8791 15C4                           u7895 7554  
                         u7975 6A12                           u9567 7AA8                           u9487 7456  
                         u8880 288A                           u7976 6A1C                           u9577 8132  
                         u8945 2A3A                           u8881 2886                           u7977 6A2C  
                         u9497 7482                           u8946 2A44                           u8890 28A6  
                         u8947 2A54                           u8891 28A2                           u8875 1C8A  
                         u7995 6A84                           u8965 2AC8                           u8966 2AD2  
                         u8975 2B32                           u8967 2AE2                           u8976 2B3C  
                         u8985 2B8A                           u8977 2B4C                           u8986 2B94  
                         u8995 2C28                           u8987 2BA4                           u8996 2C32  
                         u8997 2C42                    main@red_val 0314                           _dbuf 0400  
                         _cp_h 0E6D                           _cp_l 0E69                           _dp_h 0E09  
                         _dp_l 0E01                           _labs 7F38                           _main 4F90  
                         _prec 00DC                           _powf 0EA4                           pad@i 0016  
                         pad@p 0013                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005E                           _stop 7CE8                    main@timings 0378  
   __end_of_reverse_after_read 7186                  ___fpclassifyf 7492                           prodh 0FF4  
                         prodl 0FF3                           start 0024               __end_of_ADC_init 849A  
              ___fldiv@new_exp 003C         __end_of_color_read_Red 802E                __end_of_HighISR 0024  
                 ___param_bank 0000      invert_action@input_action 0004                 turn_left_90@mL 0019  
               turn_left_90@mR 001B                          ??_pad 0015                   main@blue_val 033C  
                ___fltol@sign1 000A                  ?_inch_forward 0019                          ?_labs 0002  
              __end_of___fladd 5B90                          ?_main 0001                          _ADPCH 0F5F  
              __end_of___fldiv 6732                __end_of___flneg 832C                __end_of___flmul 5FBA  
                        ?_powf 0060                __end_of___flsub 81F4                __end_of___fltol 728C  
                        ?_stop 0015                __end_of___lwdiv 7E6C                          i2l500 84B4  
                        i2l503 84C8                          i2l454 0020                   vfpfcnvrt@fmt 0093  
                        _TMR0H 0FD4                          _TMR0L 0FD3        __end_of_sendCharSerial4 84B2  
   __end_of_I2C_2_Master_Start 850A     __end_of_I2C_2_Master_Write 84D6                          _lg2_h 0E2D  
                        _lg2_l 0E29                          _flags 00DE  __end_of_color_click_toggleLED 7F38  
                        _errno 00D8                          _ivln2 0E1D                          _fputc 7AE2  
                        _fputs 8276                __end_of_ivln2_h 0E69                __end_of_ivln2_l 0E1D  
                        _two24 0E61                __end_of_scalbnf 6966                          labs@a 0002  
                        pad@fp 0010                          _width 00DA                          _putch 850A  
                        main@i 03B1                          _sqrtf 5FBA                          tablat 0FF5  
                        powf@i 0128                          powf@j 01A8                          powf@k 01A4  
                        powf@n 0188                          powf@r 0150                          powf@s 0160  
                        powf@t 01B0                          powf@u 017C                          powf@v 0180  
                        powf@w 0144                          powf@x 0060                          powf@y 0064  
                        powf@z 01B4                          ttemp5 005F                          ttemp6 0062  
                        ttemp7 0066                          status 0FD8                          wtemp8 005F  
              __end_of_sprintf 8276                 ?___fpclassifyf 0002        __end_of_color_read_Blue 811E  
        _I2C_2_Master_RepStart 84EC                ?_color_read_Red 0006                __initialization 832C  
                 __end_of_cp_h 0E71                   __end_of_cp_l 0E6D                   __end_of_dp_h 0E11  
                 __end_of_dp_l 0E09                   __end_of_labs 7F8E                   __end_of_main 56D0  
                 __end_of_powf 3324                   __end_of_stop 7D82                turn_left_135@mL 0019  
              turn_left_135@mR 001B               main@action_to_do 03B2                 ??_inch_forward 001D  
                main@clear_val 0300                         ??_labs 0006                _get16bitTMR0val 8462  
                       ??_main 00B8                         ??_powf 0068                         ??_stop 0019  
                __activetblptr 0003              decide_action@blue 0288                   ?_setMotorPWM 000F  
                       ?_fputc 0002                         ?_fputs 000A                         _ADRESH 0F64  
                       _CCPR1H 0FAA                         _CCPR2H 0FA6                         _CCPR3H 0F25  
                       _CCPR4H 0F21                         ?_putch 0001                         ?_sqrtf 0012  
   __end_of_reverse_one_square 7492                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RE4PPS 0E76                         _RD6PPS 0E70                  main@green_val 0328  
                       _RG6PPS 0E88                         i2l6366 84B4                         i2l6368 84C4  
                       i2l6590 000A                         i2l6592 0018                         i2l6594 001A  
             ??_turn_right_135 001D                      ??_HighISR 0002       __end_of_color_click_init 8168  
                       _RX4PPS 0E15                         _TX4REG 0EE4               __end_of___xxtofl 6F14  
                 ?_resetTimer0 0001                   _turn_left_90 7852                  ??_Timer0_init 0002  
                 _CCPTMRS0bits 0FAD                   vfprintf@cfmt 005C                         ___flge 728C  
                       ___fleq 7B9C                      ??___fladd 000A                         ___wmul 83DE  
                    ??___fldiv 0033                      ??___flneg 0006                      ??___flmul 001A  
                    ??___flsub 004C                      ??___fltol 0006                         _efgtoa 45A8  
                    ??___lwdiv 000C                         _floorf 6966                         _memcpy 7F8E  
                       clear_0 8332                         clear_1 833E                         clear_2 834A  
                       isa$std 0001                         pad@buf 0011                         _strcpy 82B6  
                       fputc@c 0002                         fputs@c 000D                         fputs@i 000E  
                       fputs@s 000A                      ??_scalbnf 0031                ___fpclassifyf@e 000A  
              ___fpclassifyf@u 000C                ___fpclassifyf@x 0002                   __mediumconst 0000  
                       powf@s2 0190                         powf@t1 018C                         powf@t2 011C  
                       tblptrh 0FF7                         tblptrl 0FF6                         powf@y1 012C  
                       tblptru 0FF8                         powf@ax 0178                         powf@is 0198  
                       powf@hx 0168                      ?_ADC_init 0001                         powf@hy 0184  
                       powf@ix 01AC                         powf@iy 0194               ?_sendCharSerial4 0001  
                       powf@sn 0164                         putch@c 0001               __end_of_vfprintf 81AE  
                       stop@mL 0015                         stop@mR 0017                         sqrtf@i 001F  
                       sqrtf@m 002B                         sqrtf@q 0023                         sqrtf@r 002F  
                       sqrtf@s 001B                         sqrtf@t 0027              ??_initDCmotorsPWM 0004  
                       sqrtf@x 0012                      ??_sprintf 005D                     ___flge@ff1 004C  
                   ___flge@ff2 0050                ??___fpclassifyf 0006                   ___xxtofl@arg 000C  
                 ___xxtofl@exp 000B                   ___xxtofl@val 0002                     ___fleq@ff1 0002  
                   ___fleq@ff2 0006                     __accesstop 0060        __end_of__initialization 8352  
     __end_of_color_read_Clear 80CE                     ___flneg@f1 0002       __end_of_color_read_Green 807E  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001                     ___fltol@f1 0002  
             ?_color_read_Blue 0006                _Interrupts_init 84D6                 __pcstackCOMRAM 0001  
      __end_of_get16bitTMR0val 8480                  __end_of_lg2_h 0E31                  __end_of_lg2_l 0E2D  
     get16bitTMR0val@timer_val 0006                  __end_of_ivln2 0E21                  __end_of_fputc 7B9C  
                __end_of_fputs 82B6                  __end_of_two24 0E65                  __end_of_putch 850C  
                __end_of_sqrtf 6398                     __end_of_L1 0E61                     __end_of_L2 0E5D  
                   __end_of_L3 0E59                     __end_of_L4 0E55                     __end_of_L5 0E51  
                   __end_of_L6 0E4D                     __end_of_P1 0E49                     __end_of_P2 0E45  
                   __end_of_P3 0E41                     __end_of_P4 0E3D                     __end_of_P5 0E39  
          __end_of_Timer0_init 8444                     __end_of_bp 0E19                     __end_of_cp 0E25  
                   ??_ADC_init 0002                turn_right_90@mL 0019                turn_right_90@mR 001B  
                      ??_fputc 0005                        ??_fputs 000D                        ??_putch 0002  
                      ??_sqrtf 0016                     __pbssBANK0 00BC                     __pbssBANK1 01B8  
                   __pbssBANK4 0400           __end_of_inch_forward 7A26            main@upcoming_action 03AC  
            _color_writetoaddr 8404           reverse_one_square@mL 0019           reverse_one_square@mR 001B  
                 _T2CLKCONbits 0FBF             decide_action@green 0284                        ?___flge 004C  
                      ?___fleq 0002             decide_action@red_r 028C             ?_color_writetoaddr 0004  
                      ?___wmul 0002             decide_action@total 027B                        ?_efgtoa 0060  
                      ?_floorf 0044           decide_action@green_r 0290                        ?_memcpy 0002  
           _reverse_after_read 7080           decide_action@red_val 0214         decide_action@clear_val 0200  
          ??_color_writetoaddr 0005                        ?_strcpy 0002                      ?___xxtofl 0002  
                      _SP4BRGH 0EE6                        _SP4BRGL 0EE5            ?_reverse_after_read 0019  
         reverse_after_read@mL 0019           reverse_after_read@mR 001B                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5        __end_of_Interrupts_init 84E2         color_writetoaddr@value 0004  
             ??_color_read_Red 0008                  _turn_left_135 767C         decide_action@green_val 0228  
                      _HighISR 0008      __end_of_color_writetoaddr 8424                      _ADREFbits 0F58  
           _I2C_2_Master_Start 8500                     _initUSART4 8444             _I2C_2_Master_Write 84CA  
               decide_action@i 027F                        __Hparam 0000           ??_reverse_after_read 001D  
                      __Lparam 0000              color_read_Red@tmp 000B                    _Timer0_init 8424  
       decide_action@pblue_val 0256        sendStringSerial4@string 0003                  _turn_right_90 7768  
             ?_get16bitTMR0val 0002                        ___fladd 56D0                        ___fldiv 6398  
                      ___flneg 82F4                        ___flmul 5B90                        ___flsub 81AE  
                      ___fltol 7186            ?_I2C_2_Master_Start 0001                        ___lwdiv 7DF8  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 009B                   __psmallconst 0E00  
                      __pcinit 832C                        __ramtop 0E00                        __ptext0 4F90  
                      __ptext1 7768                        __ptext2 7590                        __ptext3 7852  
                      __ptext4 767C                        __ptext5 7390                        __ptext6 7080  
                      __ptext7 84E2                        __ptext8 7D82                        __ptext9 8444  
                    _T2CONbits 0FBD                        _ivln2_h 0E65                        _ivln2_l 0E19  
                   ??___xxtofl 0006                        _scalbnf 6732                      _T2HLTbits 0FBE  
                      efgtoa@c 0065                        efgtoa@d 0071                        efgtoa@e 0075  
                      efgtoa@f 0061                        efgtoa@g 0088                        efgtoa@h 007F  
                      efgtoa@i 007D                        efgtoa@l 0083                        efgtoa@m 0073  
                      efgtoa@n 008C                        efgtoa@p 0068                        efgtoa@t 006A  
                      efgtoa@u 008E                        efgtoa@w 0077                  _RxBufWriteCnt 00E1  
                      main@pmL 03C6                        main@pmR 03C8                        _sprintf 8236  
                      main@lum 03AE           ??_I2C_2_Master_Start 0003           ??_I2C_2_Master_Write 0003  
         end_of_initialization 8352                        floorf@e 0052                        floorf@m 004E  
                      floorf@u 0054                        floorf@x 0044                 ?_turn_left_135 0019  
        _color_click_toggleLED 7ED2                        memcpy@d 0009                        memcpy@n 0006  
                      memcpy@s 000B                        fputc@fp 0004                        fputs@fp 000C  
            ?_color_click_init 0001             ??_color_click_init 0006              main@lum_threshold 03A0  
                _decide_action 3324                 ?_turn_right_90 0019                        powf@p_h 01A0  
                      powf@p_l 016C                        powf@s_h 0174                        powf@t_h 0170  
                      powf@s_l 0130                        powf@t_l 0134                        powf@z_h 0120  
                      powf@z_l 0124              __end_of_vfpfcnvrt 6D60                     efgtoa@mode 006F  
                   efgtoa@sign 0087             _reverse_one_square 7390                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0095                     ??_vfprintf 005C                        sqrtf@ix 0033  
                      strcpy@d 0006                _initDCmotorsPWM 7C46                      _PORTBbits 0F8A  
                _invert_action 7D82            ?_reverse_one_square 0019             setMotorPWM@negDuty 0014  
                  ___fladd@grs 0011                  ___xxtofl@sign 000A                      _TRISAbits 0F81  
           setMotorPWM@posDuty 0013                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88                    ___fldiv@grs 003E                    ___fldiv@rem 0037  
             fullSpeedAhead@mL 0015               fullSpeedAhead@mR 0017       color_writetoaddr@address 0005  
      ??_I2C_2_Master_RepStart 0003               ?_Interrupts_init 0001                    ___flmul@grs 0020  
         ??_reverse_one_square 001D                    _CCP1CONbits 0FAB              ?_color_read_Clear 0006  
                 _EUSART4RXbuf 00BC                   _EUSART4TXbuf 01B8                    _CCP2CONbits 0FA7  
                   main@greenm 03A4              ?_color_read_Green 0006                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0002  
               ?_decide_action 00B2                     main@motorL 03B4                     main@motorR 03BD  
           ??_color_read_Clear 0008             ??_color_read_Green 0008                 __end_of___flge 7390  
               __end_of___fleq 7C46                 _fullSpeedAhead 7A26                    vfpfcnvrt@ap 0094  
                  vfpfcnvrt@cp 009A                    vfpfcnvrt@fp 0092                 __end_of___wmul 8404  
               __end_of_efgtoa 4F90                 ?_invert_action 0001                 __end_of_floorf 6B78  
               __end_of_memcpy 7FDE                     floorf@F521 00D0                   _inch_forward 793C  
               __end_of_strcpy 82F4            color_read_Clear@tmp 000B            start_initialization 832C  
                  __end_of_lg2 0E35                    __end_of_pad 7ED2                    __end_of_ovt 0E29  
                _TxBufWriteCnt 005D                ??_turn_left_135 001D         ?_color_click_toggleLED 0001  
             decide_action@red 0280          __end_of___fpclassifyf 7590                ??_turn_right_90 001D  
          color_read_Green@tmp 000B        __end_of_initDCmotorsPWM 7CE8                    vfprintf@fmt 009C  
       __end_of_fullSpeedAhead 7AE2                       ??___flge 0054                       ??___fleq 000A  
             turn_right_135@mL 0019               turn_right_135@mR 001B                       ??___wmul 0006  
                     ??_efgtoa 0058                       ??_floorf 0048                       ??_memcpy 0008  
                     ??_strcpy 0005                      ___fladd@a 0006                      ___fladd@b 0002  
                    ___fldiv@a 002F                      ___fldiv@b 002B                      ___flmul@a 0016  
                    ___flmul@b 0012                    __pbssCOMRAM 005D     decide_action@blue_unsigned 00B6  
                    ___flsub@a 0048                      ___flsub@b 0044                  __pcstackBANK0 0060  
                __pcstackBANK1 0100                  __pcstackBANK2 0200                  __pcstackBANK3 0300  
                     ?_HighISR 0001                ??_decide_action 005D              i2_sendCharSerial4 84B2  
                  _efgtoa$2679 006C             ?i2_sendCharSerial4 0001               ___lwdiv@dividend 0008  
                 ?_Timer0_init 0001            decide_action@action 027A                ?_fullSpeedAhead 0015  
                    __pintcode 0008            decide_action@blue_r 0294                       ?___fladd 0002  
                     ?___fldiv 002B                       ?___flneg 0002                       ?___flmul 0012  
                     ?___flsub 0044                       ?___fltol 0002                ??_invert_action 0002  
                     ?___lwdiv 0008            ??i2_sendCharSerial4 0001          decide_action@blue_val 023C  
         I2C_2_Master_Read@ack 0004           I2C_2_Master_Read@tmp 0005                    __smallconst 0E00  
            _I2C_2_Master_Idle 83B6              _I2C_2_Master_Init 838C                       ?_scalbnf 002B  
            _I2C_2_Master_Read 81F4              _I2C_2_Master_Stop 84F6          decide_action@rgb_comp 025A  
                 _RxBufReadCnt 00E0                       _ADC_init 8480             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0011  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000C       initDCmotorsPWM@PWMperiod 0002  
                     ?_sprintf 009E          decide_action@pred_val 0254      __end_ofi2_sendCharSerial4 84CA  
                    _powf$3180 0104                      _powf$3181 015C                      _powf$3174 0148  
                    _powf$3182 013C                      _powf$3175 0158                      _powf$3183 0140  
                    _powf$3176 014C                      _powf$3184 0108                      _powf$3177 019C  
                    _powf$3185 010C                      _powf$3178 0138                      _powf$3186 0110  
                    _powf$3187 0114                      _powf$3179 0100                      _powf$3188 0118  
            _sendStringSerial4 835C            ??_I2C_2_Master_Idle 0002            ??_I2C_2_Master_Init 0002  
          ??_I2C_2_Master_Read 0003                 ___wmul@product 0006                       _LATAbits 0F79  
                ??_resetTimer0 0002            ??_I2C_2_Master_Stop 0003                       _LATCbits 0F7B  
                     _LATEbits 0F7D                       _LATGbits 0F7F                       _LATHbits 0F80  
                ?_turn_left_90 0019                       _PIE0bits 0E29                       _PIE2bits 0E2B  
           ?_sendStringSerial4 0003                       _PIE4bits 0E2D                       _PIR4bits 0E37  
                     i2u651_40 84C4                       i2u651_41 84C0                       i2u675_40 0018  
                     i2u675_41 0014               ?_initDCmotorsPWM 0002              ??_sendCharSerial4 0002  
                     _SSP2CON2 0EDA            ??_sendStringSerial4 0005                       _SSP2STAT 0ED8  
                   powf@yisint 0154                      _vfpfcnvrt 6B78                     _ADCON0bits 0F60  
    __end_of_I2C_2_Master_Idle 83DE      __end_of_I2C_2_Master_Init 83B6      __end_of_I2C_2_Master_Read 8236  
            ___wmul@multiplier 0002      __end_of_I2C_2_Master_Stop 8500                   setMotorPWM@m 000F  
  I2C_2_Master_Write@data_byte 0003                      main@bluem 03A6          main@actions_completed 03AA  
            ??_color_read_Blue 0008                   _TxBufReadCnt 00DF                     vfpfcnvrt@c 0099  
    __end_of_sendStringSerial4 838C  __end_of_I2C_2_Master_RepStart 84F6             color_read_Blue@tmp 000B  
               ??_turn_left_90 001D            __end_of_setMotorPWM 7080                   ??_initUSART4 0002  
                     __Hrparam 0000                      memcpy@tmp 0008                     vfprintf@ap 009D  
                     __Lrparam 0000                     vfprintf@fp 009B                 _turn_right_135 7590  
          __end_of_resetTimer0 84EC      decide_action@red_unsigned 00B2                     ?_vfpfcnvrt 0092  
                   _ANSELDbits 0EA7        decide_action@pgreen_val 0258             ___fpclassifyf@F465 00D4  
                   _ANSELFbits 0EB4             _decide_action$3170 02A4             _decide_action$3171 02A8  
           _decide_action$3172 02AC             _decide_action$3173 02B0             _decide_action$3166 0250  
           _decide_action$3167 0298             _decide_action$3168 029C             _decide_action$3169 02A0  
                   sprintf@fmt 00A0                       ___xxtofl 6D60                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6        ??_color_click_toggleLED 0002                ___lwdiv@divisor 000A  
           __end_of_initUSART4 8462                ___lwdiv@counter 000E                       __ptext10 7C46  
                     __ptext11 793C                       __ptext20 8168                       __ptext12 7CE8  
                     __ptext21 6B78                       __ptext13 8462                       __ptext30 6966  
                     __ptext22 45A8                       __ptext14 7A26                       __ptext31 7492  
                     __ptext23 82B6                       __ptext15 6F14                       __ptext40 6D60  
                     __ptext32 7186                       __ptext24 7E6C                       __ptext16 83DE  
                     __ptext41 81AE                       __ptext33 7B9C                       __ptext25 8276  
                     __ptext17 7DF8                       __ptext50 84EC                       __ptext42 56D0  
                     __ptext34 835C                       __ptext26 7AE2                       __ptext18 3324  
                     __ptext51 81F4                       __ptext43 82F4                       __ptext35 849A  
                     __ptext27 850A                       __ptext19 8236                       __ptext60 8424  
                     __ptext52 7ED2                       __ptext44 728C                       __ptext36 0EA4  
                     __ptext28 7F8E                       __ptext61 84D6                       __ptext53 811E  
                     __ptext45 6398                       __ptext37 5FBA                       __ptext29 7F38  
                     __ptext62 8480                       __ptext54 8404                       __ptext46 7FDE  
                     __ptext38 6732                       __ptext55 84CA                       __ptext47 802E  
                     __ptext39 5B90                       __ptext64 84B2                       __ptext56 84F6  
                     __ptext48 807E                       __ptext57 8500                       __ptext49 80CE  
                     __ptext58 83B6                       __ptext59 838C                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA                     strcpy@dest 0002    decide_action@green_unsigned 00B4  
       __end_of_turn_right_135 767C                       efgtoa@fp 0060                       efgtoa@ne 0066  
                     efgtoa@pp 006E                       efgtoa@ou 0079                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       int$flags 005E                       _vfprintf 8168  
                     main@redm 03A2                     _INTCONbits 0FF2                       memcpy@d1 0002  
                     memcpy@s1 0004              main@going_forward 03B0                    _setMotorPWM 6F14  
            ??_get16bitTMR0val 0004                       scalbnf@n 002F                       scalbnf@u 0035  
                     scalbnf@x 002B                       scalbnf@y 0039                       intlevel2 0000  
        __end_of_turn_left_135 7768                      sprintf@ap 00A5               ??_fullSpeedAhead 0019  
                  _resetTimer0 84E2                      strcpy@src 0004                ?_turn_right_135 0019  
        __end_of_turn_right_90 7852                    efgtoa@nmode 0070                    ??_vfpfcnvrt 005A  
             _color_click_init 811E                       sprintf@f 00A6                       sprintf@s 009E  
         __end_of_turn_left_90 793C                     _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C  
            main@measured_time 03A8                 inch_forward@mL 0019                 inch_forward@mR 001B  
                ___fladd@signs 000E                     _TX4STAbits 0EE8                _sendCharSerial4 849A  
                 ___fladd@aexp 000F                   ___fladd@bexp 0010    i2sendCharSerial4@charToSend 0001  
        __end_of_decide_action 45A8  
