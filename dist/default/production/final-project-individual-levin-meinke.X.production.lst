

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 17:40:59 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Generated 21/07/2023 GMT
    78                           ; 
    79                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F67K40 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111   000000                     
   112                           	psect	smallconst
   113   000E00                     __psmallconst:
   114                           	callstack 0
   115   000E00  00                 	db	0
   116   000E01                     _dp_l:
   117                           	callstack 0
   118   000E01  0000               	dw	0
   119   000E03  0000               	dw	0
   120   000E05  CFDC               	dw	53212
   121   000E07  35D1               	dw	13777
   122   000E09                     __end_of_dp_l:
   123                           	callstack 0
   124   000E09                     _dp_h:
   125                           	callstack 0
   126   000E09  0000               	dw	0
   127   000E0B  0000               	dw	0
   128   000E0D  C000               	dw	49152
   129   000E0F  3F15               	dw	16149
   130   000E11                     __end_of_dp_h:
   131                           	callstack 0
   132   000E11                     _bp:
   133                           	callstack 0
   134   000E11  0000               	dw	0
   135   000E13  3F80               	dw	16256
   136   000E15  0000               	dw	0
   137   000E17  3FC0               	dw	16320
   138   000E19                     __end_of_bp:
   139                           	callstack 0
   140   000E19  A570               	dw	42352
   141   000E1B  36EC               	dw	14060
   142   000E1D                     __end_of_ivln2_l:
   143                           	callstack 0
   144   000E1D  AA3B               	dw	43579
   145   000E1F  3FB8               	dw	16312
   146   000E21                     __end_of_ivln2:
   147                           	callstack 0
   148   000E21  384F               	dw	14415
   149   000E23  3F76               	dw	16246
   150   000E25                     __end_of_cp:
   151                           	callstack 0
   152   000E25  AA3C               	dw	43580
   153   000E27  3338               	dw	13112
   154   000E29                     __end_of_ovt:
   155                           	callstack 0
   156   000E29  BE8C               	dw	48780
   157   000E2B  35BF               	dw	13759
   158   000E2D                     __end_of_lg2_l:
   159                           	callstack 0
   160   000E2D  7200               	dw	29184
   161   000E2F  3F31               	dw	16177
   162   000E31                     __end_of_lg2_h:
   163                           	callstack 0
   164   000E31  7218               	dw	29208
   165   000E33  3F31               	dw	16177
   166   000E35                     __end_of_lg2:
   167                           	callstack 0
   168   000E35  BB4C               	dw	47948
   169   000E37  3331               	dw	13105
   170   000E39                     __end_of_P5:
   171                           	callstack 0
   172   000E39  EA0E               	dw	59918
   173   000E3B  B5DD               	dw	46557
   174   000E3D                     __end_of_P4:
   175                           	callstack 0
   176   000E3D  B355               	dw	45909
   177   000E3F  388A               	dw	14474
   178   000E41                     __end_of_P3:
   179                           	callstack 0
   180   000E41  0B61               	dw	2913
   181   000E43  BB36               	dw	47926
   182   000E45                     __end_of_P2:
   183                           	callstack 0
   184   000E45  AAAB               	dw	43691
   185   000E47  3E2A               	dw	15914
   186   000E49                     __end_of_P1:
   187                           	callstack 0
   188   000E49  F142               	dw	61762
   189   000E4B  3E53               	dw	15955
   190   000E4D                     __end_of_L6:
   191                           	callstack 0
   192   000E4D  3255               	dw	12885
   193   000E4F  3E6C               	dw	15980
   194   000E51                     __end_of_L5:
   195                           	callstack 0
   196   000E51  A305               	dw	41733
   197   000E53  3E8B               	dw	16011
   198   000E55                     __end_of_L4:
   199                           	callstack 0
   200   000E55  AAAB               	dw	43691
   201   000E57  3EAA               	dw	16042
   202   000E59                     __end_of_L3:
   203                           	callstack 0
   204   000E59  6DB7               	dw	28087
   205   000E5B  3EDB               	dw	16091
   206   000E5D                     __end_of_L2:
   207                           	callstack 0
   208   000E5D  999A               	dw	39322
   209   000E5F  3F19               	dw	16153
   210   000E61                     __end_of_L1:
   211                           	callstack 0
   212   000E61  0000               	dw	0
   213   000E63  4B80               	dw	19328
   214   000E65                     __end_of_two24:
   215                           	callstack 0
   216   000E65  AA00               	dw	43520
   217   000E67  3FB8               	dw	16312
   218   000E69                     __end_of_ivln2_h:
   219                           	callstack 0
   220   000E69  23C6               	dw	9158
   221   000E6B  B8F6               	dw	47350
   222   000E6D                     __end_of_cp_l:
   223                           	callstack 0
   224   000E6D  4000               	dw	16384
   225   000E6F  3F76               	dw	16246
   226   000E71                     __end_of_cp_h:
   227                           	callstack 0
   228   000000                     _TX4REG	set	3812
   229   000000                     _RC4STAbits	set	3815
   230   000000                     _SP4BRGH	set	3814
   231   000000                     _TRISFbits	set	3974
   232   000000                     _LATHbits	set	3968
   233   000000                     _TRISAbits	set	3969
   234   000000                     _TRISGbits	set	3975
   235   000000                     _SSP2CON2bits	set	3802
   236   000000                     _RX4PPS	set	3605
   237   000000                     _SSP2CLKPPS	set	3612
   238   000000                     _SSP2DATPPS	set	3613
   239   000000                     _ANSELDbits	set	3751
   240   000000                     _SSP2ADD	set	3798
   241   000000                     _SSP2CON1bits	set	3801
   242   000000                     _LATAbits	set	3961
   243   000000                     _LATGbits	set	3967
   244   000000                     _LATCbits	set	3963
   245   000000                     _LATEbits	set	3965
   246   000000                     _PORTBbits	set	3978
   247   000000                     _TRISHbits	set	3976
   248   000000                     _T2PR	set	4028
   249   000000                     _T2CONbits	set	4029
   250   000000                     _CCPR2H	set	4006
   251   000000                     _CCPR1H	set	4010
   252   000000                     _TRISCbits	set	3971
   253   000000                     _TRISDbits	set	3972
   254   000000                     _TRISEbits	set	3973
   255   000000                     _RC4REG	set	3811
   256   000000                     _SP4BRGL	set	3813
   257   000000                     _TX4STAbits	set	3816
   258   000000                     _BAUD4CONbits	set	3817
   259   000000                     _SSP2CON2	set	3802
   260   000000                     _CCPR4H	set	3873
   261   000000                     _CCPR3H	set	3877
   262   000000                     _SSP2STAT	set	3800
   263   000000                     _ANSELFbits	set	3764
   264   000000                     _SSP2BUF	set	3797
   265   000000                     _PIE0bits	set	3625
   266   000000                     _PIE2bits	set	3627
   267   000000                     _RC7PPS	set	3689
   268   000000                     _RD5PPS	set	3695
   269   000000                     _RE2PPS	set	3700
   270   000000                     _RD6PPS	set	3696
   271   000000                     _RE4PPS	set	3702
   272   000000                     _RG6PPS	set	3720
   273   000000                     _TMR0L	set	4051
   274   000000                     _TMR0H	set	4052
   275   000000                     _T0CON0bits	set	4053
   276   000000                     _T0CON1bits	set	4054
   277   000000                     _T2CLKCONbits	set	4031
   278   000000                     _T2HLTbits	set	4030
   279   000000                     _CCP1CONbits	set	4011
   280   000000                     _CCPTMRS0bits	set	4013
   281   000000                     _CCP2CONbits	set	4007
   282   000000                     _ADREFbits	set	3928
   283   000000                     _CCP3CONbits	set	3878
   284   000000                     _CCP4CONbits	set	3874
   285   000000                     _INTCONbits	set	4082
   286   000000                     _PIE4bits	set	3629
   287   000000                     _PIR4bits	set	3639
   288   000000                     _RC0PPS	set	3682
   289   000000                     _ADPCH	set	3935
   290   000000                     _ADRESH	set	3940
   291   000000                     _ADCON0bits	set	3936
   292   000E71                     STR_1:
   293                           
   294                           ; BSR set to: 14
   295   000E71  61                 	db	97	;'a'
   296   000E72  63                 	db	99	;'c'
   297   000E73  74                 	db	116	;'t'
   298   000E74  69                 	db	105	;'i'
   299   000E75  6F                 	db	111	;'o'
   300   000E76  6E                 	db	110	;'n'
   301   000E77  20                 	db	32
   302   000E78  3D                 	db	61	;'='
   303   000E79  20                 	db	32
   304   000E7A  25                 	db	37
   305   000E7B  64                 	db	100	;'d'
   306   000E7C  20                 	db	32
   307   000E7D  0D                 	db	13
   308   000E7E  0A                 	db	10
   309   000E7F  00                 	db	0
   310   000E80  00                 	db	0	; dummy byte at the end
   311   000000                     
   312                           ; #config settings
   313                           
   314                           	psect	cinit
   315   0075E4                     __pcinit:
   316                           	callstack 0
   317   0075E4                     start_initialization:
   318                           	callstack 0
   319   0075E4                     __initialization:
   320                           	callstack 0
   321                           
   322                           ; Clear objects allocated to BANK0 (122 bytes)
   323   0075E4  EE00  F060         	lfsr	0,__pbssBANK0
   324   0075E8  0E7A               	movlw	122
   325   0075EA                     clear_0:
   326   0075EA  6AEE               	clrf	postinc0,c
   327   0075EC  06E8               	decf	wreg,f,c
   328   0075EE  E1FD               	bnz	clear_0
   329                           
   330                           ; Clear objects allocated to COMRAM (1 bytes)
   331   0075F0  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   332   0075F2                     end_of_initialization:
   333                           	callstack 0
   334   0075F2                     __end_of__initialization:
   335                           	callstack 0
   336   0075F2  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   337   0075F4  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   338   0075F6  0100               	movlb	0
   339   0075F8  EF7E  F022         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssCOMRAM
   342   00005D                     __pbssCOMRAM:
   343                           	callstack 0
   344   00005D                     _TxBufWriteCnt:
   345                           	callstack 0
   346   00005D                     	ds	1
   347                           
   348                           	psect	bssBANK0
   349   000060                     __pbssBANK0:
   350                           	callstack 0
   351   000060                     _EUSART4TXbuf:
   352                           	callstack 0
   353   000060                     	ds	60
   354   00009C                     _dbuf:
   355                           	callstack 0
   356   00009C                     	ds	32
   357   0000BC                     _EUSART4RXbuf:
   358                           	callstack 0
   359   0000BC                     	ds	20
   360   0000D0                     _errno:
   361                           	callstack 0
   362   0000D0                     	ds	2
   363   0000D2                     _width:
   364                           	callstack 0
   365   0000D2                     	ds	2
   366   0000D4                     _prec:
   367                           	callstack 0
   368   0000D4                     	ds	2
   369   0000D6                     _flags:
   370                           	callstack 0
   371   0000D6                     	ds	1
   372   0000D7                     _TxBufReadCnt:
   373                           	callstack 0
   374   0000D7                     	ds	1
   375   0000D8                     _RxBufReadCnt:
   376                           	callstack 0
   377   0000D8                     	ds	1
   378   0000D9                     _RxBufWriteCnt:
   379                           	callstack 0
   380   0000D9                     	ds	1
   381                           
   382                           	psect	cstackBANK3
   383   000300                     __pcstackBANK3:
   384                           	callstack 0
   385   000300                     main@red_val:
   386                           	callstack 0
   387                           
   388                           ; 20 bytes @ 0x0
   389   000300                     	ds	20
   390   000314                     main@green_val:
   391                           	callstack 0
   392                           
   393                           ; 20 bytes @ 0x14
   394   000314                     	ds	20
   395   000328                     main@blue_val:
   396                           	callstack 0
   397                           
   398                           ; 20 bytes @ 0x28
   399   000328                     	ds	20
   400   00033C                     main@actions:
   401                           	callstack 0
   402                           
   403                           ; 40 bytes @ 0x3C
   404   00033C                     	ds	40
   405   000364                     main@clear_val:
   406                           	callstack 0
   407                           
   408                           ; 20 bytes @ 0x64
   409   000364                     	ds	20
   410   000378                     main@timings:
   411                           	callstack 0
   412                           
   413                           ; 40 bytes @ 0x78
   414   000378                     	ds	40
   415   0003A0                     main@lum_threshold:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0xA0
   419   0003A0                     	ds	2
   420   0003A2                     main@redm:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0xA2
   424   0003A2                     	ds	2
   425   0003A4                     main@greenm:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0xA4
   429   0003A4                     	ds	2
   430   0003A6                     main@bluem:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0xA6
   434   0003A6                     	ds	2
   435   0003A8                     main@pclear_val:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xA8
   439   0003A8                     	ds	2
   440   0003AA                     main@measured_time:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0xAA
   444   0003AA                     	ds	2
   445   0003AC                     main@lum:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0xAC
   449   0003AC                     	ds	2
   450   0003AE                     main@going_forward:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0xAE
   454   0003AE                     	ds	1
   455   0003AF                     main@i:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0xAF
   459   0003AF                     	ds	1
   460   0003B0                     main@actions_completed:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xB0
   464   0003B0                     	ds	2
   465   0003B2                     main@action_to_do:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0xB2
   469   0003B2                     	ds	2
   470   0003B4                     main@motorL:
   471                           	callstack 0
   472                           
   473                           ; 9 bytes @ 0xB4
   474   0003B4                     	ds	9
   475   0003BD                     main@motorR:
   476                           	callstack 0
   477                           
   478                           ; 9 bytes @ 0xBD
   479   0003BD                     	ds	9
   480   0003C6                     main@pmL:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xC6
   484   0003C6                     	ds	2
   485   0003C8                     main@pmR:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0xC8
   489   0003C8                     	ds	2
   490                           
   491                           	psect	cstackBANK2
   492   000200                     __pcstackBANK2:
   493                           	callstack 0
   494   000200                     decide_action@clear_val:
   495                           	callstack 0
   496                           
   497                           ; 20 bytes @ 0x0
   498   000200                     	ds	20
   499   000214                     decide_action@red_val:
   500                           	callstack 0
   501                           
   502                           ; 20 bytes @ 0x14
   503   000214                     	ds	20
   504   000228                     decide_action@green_val:
   505                           	callstack 0
   506                           
   507                           ; 20 bytes @ 0x28
   508   000228                     	ds	20
   509   00023C                     decide_action@blue_val:
   510                           	callstack 0
   511                           
   512                           ; 20 bytes @ 0x3C
   513   00023C                     	ds	20
   514   000250                     decide_action@pred_val:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x50
   518   000250                     	ds	2
   519   000252                     decide_action@pblue_val:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x52
   523   000252                     	ds	2
   524   000254                     decide_action@pgreen_val:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x54
   528   000254                     	ds	2
   529   000256                     _decide_action$3065:
   530                           	callstack 0
   531                           
   532                           ; 4 bytes @ 0x56
   533   000256                     	ds	4
   534   00025A                     decide_action@rgb_comp:
   535                           	callstack 0
   536                           
   537                           ; 32 bytes @ 0x5A
   538   00025A                     	ds	32
   539   00027A                     decide_action@action:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x7A
   543   00027A                     	ds	1
   544   00027B                     decide_action@total:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x7B
   548   00027B                     	ds	4
   549   00027F                     decide_action@i:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x7F
   553   00027F                     	ds	1
   554   000280                     decide_action@red:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0x80
   558   000280                     	ds	4
   559   000284                     decide_action@green:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x84
   563   000284                     	ds	4
   564   000288                     decide_action@blue:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x88
   568   000288                     	ds	4
   569   00028C                     decide_action@red_r:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0x8C
   573   00028C                     	ds	4
   574   000290                     decide_action@green_r:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x90
   578   000290                     	ds	4
   579   000294                     decide_action@blue_r:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x94
   583   000294                     	ds	4
   584   000298                     _decide_action$3066:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x98
   588   000298                     	ds	4
   589   00029C                     _decide_action$3067:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x9C
   593   00029C                     	ds	4
   594   0002A0                     _decide_action$3068:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0xA0
   598   0002A0                     	ds	4
   599   0002A4                     _decide_action$3069:
   600                           	callstack 0
   601                           
   602                           ; 4 bytes @ 0xA4
   603   0002A4                     	ds	4
   604   0002A8                     _decide_action$3070:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0xA8
   608   0002A8                     	ds	4
   609   0002AC                     _decide_action$3071:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0xAC
   613   0002AC                     	ds	4
   614   0002B0                     _decide_action$3072:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0xB0
   618   0002B0                     	ds	4
   619                           
   620                           	psect	cstackBANK1
   621   000100                     __pcstackBANK1:
   622                           	callstack 0
   623   000100                     _powf$3078:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x0
   627   000100                     	ds	4
   628   000104                     _powf$3079:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x4
   632   000104                     	ds	4
   633   000108                     _powf$3083:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x8
   637   000108                     	ds	4
   638   00010C                     _powf$3084:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0xC
   642   00010C                     	ds	4
   643   000110                     _powf$3085:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x10
   647   000110                     	ds	4
   648   000114                     _powf$3086:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x14
   652   000114                     	ds	4
   653   000118                     _powf$3087:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x18
   657   000118                     	ds	4
   658   00011C                     powf@t2:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x1C
   662   00011C                     	ds	4
   663   000120                     powf@z_h:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x20
   667   000120                     	ds	4
   668   000124                     powf@z_l:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0x24
   672   000124                     	ds	4
   673   000128                     powf@i:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0x28
   677   000128                     	ds	4
   678   00012C                     powf@y1:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x2C
   682   00012C                     	ds	4
   683   000130                     powf@s_l:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x30
   687   000130                     	ds	4
   688   000134                     powf@t_l:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x34
   692   000134                     	ds	4
   693   000138                     _powf$3077:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x38
   697   000138                     	ds	4
   698   00013C                     _powf$3081:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x3C
   702   00013C                     	ds	4
   703   000140                     _powf$3082:
   704                           	callstack 0
   705                           
   706                           ; 4 bytes @ 0x40
   707   000140                     	ds	4
   708   000144                     powf@w:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x44
   712   000144                     	ds	4
   713   000148                     _powf$3073:
   714                           	callstack 0
   715                           
   716                           ; 4 bytes @ 0x48
   717   000148                     	ds	4
   718   00014C                     _powf$3075:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x4C
   722   00014C                     	ds	4
   723   000150                     powf@r:
   724                           	callstack 0
   725                           
   726                           ; 4 bytes @ 0x50
   727   000150                     	ds	4
   728   000154                     powf@yisint:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x54
   732   000154                     	ds	4
   733   000158                     powf@s:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x58
   737   000158                     	ds	4
   738   00015C                     _powf$3074:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x5C
   742   00015C                     	ds	4
   743   000160                     _powf$3080:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0x60
   747   000160                     	ds	4
   748   000164                     powf@sn:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x64
   752   000164                     	ds	4
   753   000168                     powf@hx:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x68
   757   000168                     	ds	4
   758   00016C                     powf@p_l:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x6C
   762   00016C                     	ds	4
   763   000170                     powf@t_h:
   764                           	callstack 0
   765                           
   766                           ; 4 bytes @ 0x70
   767   000170                     	ds	4
   768   000174                     powf@s_h:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x74
   772   000174                     	ds	4
   773   000178                     powf@ax:
   774                           	callstack 0
   775                           
   776                           ; 4 bytes @ 0x78
   777   000178                     	ds	4
   778   00017C                     powf@u:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x7C
   782   00017C                     	ds	4
   783   000180                     powf@v:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x80
   787   000180                     	ds	4
   788   000184                     powf@hy:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x84
   792   000184                     	ds	4
   793   000188                     powf@n:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x88
   797   000188                     	ds	4
   798   00018C                     powf@t1:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x8C
   802   00018C                     	ds	4
   803   000190                     powf@s2:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x90
   807   000190                     	ds	4
   808   000194                     powf@iy:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x94
   812   000194                     	ds	4
   813   000198                     powf@is:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x98
   817   000198                     	ds	4
   818   00019C                     _powf$3076:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x9C
   822   00019C                     	ds	4
   823   0001A0                     powf@p_h:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0xA0
   827   0001A0                     	ds	4
   828   0001A4                     powf@k:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0xA4
   832   0001A4                     	ds	4
   833   0001A8                     powf@j:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0xA8
   837   0001A8                     	ds	4
   838   0001AC                     powf@ix:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0xAC
   842   0001AC                     	ds	4
   843   0001B0                     powf@t:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0xB0
   847   0001B0                     	ds	4
   848   0001B4                     powf@z:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0xB4
   852   0001B4                     	ds	4
   853                           
   854                           	psect	cstackBANK0
   855   0000DA                     __pcstackBANK0:
   856                           	callstack 0
   857   0000DA                     ?_powf:
   858                           	callstack 0
   859   0000DA                     powf@x:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x0
   863   0000DA                     	ds	4
   864   0000DE                     powf@y:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x4
   868   0000DE                     	ds	4
   869   0000E2                     ??_powf:
   870                           
   871                           ; 1 bytes @ 0x8
   872   0000E2                     	ds	9
   873   0000EB                     decide_action@red_unsigned:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x11
   877   0000EB                     	ds	2
   878   0000ED                     decide_action@green_unsigned:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x13
   882   0000ED                     	ds	2
   883   0000EF                     decide_action@blue_unsigned:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x15
   887   0000EF                     	ds	2
   888                           
   889                           	psect	cstackCOMRAM
   890   000001                     __pcstackCOMRAM:
   891                           	callstack 0
   892   000001                     i2sendCharSerial4@charToSend:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x0
   896   000001                     	ds	1
   897   000002                     ??_color_click_toggleLED:
   898   000002                     ??_invert_action:
   899   000002                     ??_I2C_2_Master_Idle:
   900   000002                     ?_get16bitTMR0val:
   901                           	callstack 0
   902   000002                     ?___wmul:
   903                           	callstack 0
   904   000002                     ?___awdiv:
   905                           	callstack 0
   906   000002                     ?___awmod:
   907                           	callstack 0
   908   000002                     ?___fladd:
   909                           	callstack 0
   910   000002                     ?___flneg:
   911                           	callstack 0
   912   000002                     ?___xxtofl:
   913                           	callstack 0
   914   000002                     sendCharSerial4@charToSend:
   915                           	callstack 0
   916   000002                     initDCmotorsPWM@PWMperiod:
   917                           	callstack 0
   918   000002                     ___wmul@multiplier:
   919                           	callstack 0
   920   000002                     ___awdiv@dividend:
   921                           	callstack 0
   922   000002                     ___awmod@dividend:
   923                           	callstack 0
   924   000002                     fputc@c:
   925                           	callstack 0
   926   000002                     ___flneg@f1:
   927                           	callstack 0
   928   000002                     ___fladd@b:
   929                           	callstack 0
   930   000002                     ___xxtofl@val:
   931                           	callstack 0
   932                           
   933                           ; 4 bytes @ 0x1
   934   000002                     	ds	1
   935   000003                     ??_I2C_2_Master_Read:
   936   000003                     I2C_2_Master_Write@data_byte:
   937                           	callstack 0
   938   000003                     sendStringSerial4@string:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x2
   942   000003                     	ds	1
   943   000004                     ??_get16bitTMR0val:
   944   000004                     color_writetoaddr@value:
   945                           	callstack 0
   946   000004                     invert_action@input_action:
   947                           	callstack 0
   948   000004                     I2C_2_Master_Read@ack:
   949                           	callstack 0
   950   000004                     fputc@fp:
   951                           	callstack 0
   952   000004                     ___wmul@multiplicand:
   953                           	callstack 0
   954   000004                     ___awdiv@divisor:
   955                           	callstack 0
   956   000004                     ___awmod@divisor:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x3
   960   000004                     	ds	1
   961   000005                     ??_fputc:
   962   000005                     color_writetoaddr@address:
   963                           	callstack 0
   964   000005                     invert_action@output_action:
   965                           	callstack 0
   966   000005                     I2C_2_Master_Read@tmp:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x4
   970   000005                     	ds	1
   971   000006                     ??_color_click_init:
   972   000006                     ??___xxtofl:
   973   000006                     ?_color_read_Clear:
   974                           	callstack 0
   975   000006                     ?_color_read_Red:
   976                           	callstack 0
   977   000006                     ?_color_read_Green:
   978                           	callstack 0
   979   000006                     ?_color_read_Blue:
   980                           	callstack 0
   981   000006                     ___awdiv@counter:
   982                           	callstack 0
   983   000006                     ___awmod@counter:
   984                           	callstack 0
   985   000006                     get16bitTMR0val@timer_val:
   986                           	callstack 0
   987   000006                     ___wmul@product:
   988                           	callstack 0
   989   000006                     ___fladd@a:
   990                           	callstack 0
   991                           
   992                           ; 4 bytes @ 0x5
   993   000006                     	ds	1
   994   000007                     ___awdiv@sign:
   995                           	callstack 0
   996   000007                     ___awmod@sign:
   997                           	callstack 0
   998                           
   999                           ; 1 bytes @ 0x6
  1000   000007                     	ds	1
  1001   000008                     ??_color_read_Clear:
  1002   000008                     ??_color_read_Red:
  1003   000008                     ??_color_read_Green:
  1004   000008                     ??_color_read_Blue:
  1005   000008                     ?_abs:
  1006                           	callstack 0
  1007   000008                     ?___lwdiv:
  1008                           	callstack 0
  1009   000008                     ___awdiv@quotient:
  1010                           	callstack 0
  1011   000008                     ___lwdiv@dividend:
  1012                           	callstack 0
  1013   000008                     abs@a:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x7
  1017   000008                     	ds	2
  1018   00000A                     ??___fladd:
  1019   00000A                     ??_abs:
  1020   00000A                     ___xxtofl@sign:
  1021                           	callstack 0
  1022   00000A                     ___lwdiv@divisor:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x9
  1026   00000A                     	ds	1
  1027   00000B                     ___xxtofl@exp:
  1028                           	callstack 0
  1029   00000B                     color_read_Clear@tmp:
  1030                           	callstack 0
  1031   00000B                     color_read_Red@tmp:
  1032                           	callstack 0
  1033   00000B                     color_read_Green@tmp:
  1034                           	callstack 0
  1035   00000B                     color_read_Blue@tmp:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0xA
  1039   00000B                     	ds	1
  1040   00000C                     vfpfcnvrt@fp:
  1041                           	callstack 0
  1042   00000C                     ___lwdiv@quotient:
  1043                           	callstack 0
  1044   00000C                     ___xxtofl@arg:
  1045                           	callstack 0
  1046                           
  1047                           ; 4 bytes @ 0xB
  1048   00000C                     	ds	1
  1049   00000D                     vfpfcnvrt@fmt:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0xC
  1053   00000D                     	ds	1
  1054   00000E                     ___lwdiv@counter:
  1055                           	callstack 0
  1056   00000E                     ___fladd@signs:
  1057                           	callstack 0
  1058   00000E                     vfpfcnvrt@ap:
  1059                           	callstack 0
  1060                           
  1061                           ; 1 bytes @ 0xD
  1062   00000E                     	ds	1
  1063   00000F                     ??_vfpfcnvrt:
  1064   00000F                     ___fladd@aexp:
  1065                           	callstack 0
  1066   00000F                     setMotorPWM@m:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0xE
  1070   00000F                     	ds	1
  1071   000010                     ___fladd@bexp:
  1072                           	callstack 0
  1073   000010                     vfpfcnvrt@done:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0xF
  1077   000010                     	ds	1
  1078   000011                     ??_setMotorPWM:
  1079   000011                     ___fladd@grs:
  1080                           	callstack 0
  1081   000011                     vfpfcnvrt@cp:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x10
  1085   000011                     	ds	1
  1086   000012                     ?_sqrtf:
  1087                           	callstack 0
  1088   000012                     ?___flmul:
  1089                           	callstack 0
  1090   000012                     ___flmul@b:
  1091                           	callstack 0
  1092   000012                     vfpfcnvrt@convarg:
  1093                           	callstack 0
  1094   000012                     sqrtf@x:
  1095                           	callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x11
  1098   000012                     	ds	1
  1099   000013                     setMotorPWM@posDuty:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x12
  1103   000013                     	ds	1
  1104   000014                     setMotorPWM@negDuty:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x13
  1108   000014                     	ds	1
  1109   000015                     fullSpeedAhead@mL:
  1110                           	callstack 0
  1111   000015                     stop@mL:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x14
  1115   000015                     	ds	1
  1116   000016                     ??_sqrtf:
  1117   000016                     vfpfcnvrt@c:
  1118                           	callstack 0
  1119   000016                     ___flmul@a:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x15
  1123   000016                     	ds	1
  1124   000017                     ?_vfprintf:
  1125                           	callstack 0
  1126   000017                     vfprintf@fp:
  1127                           	callstack 0
  1128   000017                     fullSpeedAhead@mR:
  1129                           	callstack 0
  1130   000017                     stop@mR:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x16
  1134   000017                     	ds	1
  1135   000018                     vfprintf@fmt:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x17
  1139   000018                     	ds	1
  1140   000019                     ??_fullSpeedAhead:
  1141   000019                     vfprintf@ap:
  1142                           	callstack 0
  1143   000019                     turn_left_90@mL:
  1144                           	callstack 0
  1145   000019                     turn_right_90@mL:
  1146                           	callstack 0
  1147   000019                     turn_left_135@mL:
  1148                           	callstack 0
  1149   000019                     turn_right_135@mL:
  1150                           	callstack 0
  1151   000019                     reverse_after_read@mL:
  1152                           	callstack 0
  1153   000019                     reverse_one_square@mL:
  1154                           	callstack 0
  1155   000019                     inch_forward@mL:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x18
  1159   000019                     	ds	1
  1160   00001A                     ??___flmul:
  1161   00001A                     vfprintf@cfmt:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x19
  1165   00001A                     	ds	1
  1166   00001B                     ?_sprintf:
  1167                           	callstack 0
  1168   00001B                     turn_left_90@mR:
  1169                           	callstack 0
  1170   00001B                     turn_right_90@mR:
  1171                           	callstack 0
  1172   00001B                     turn_left_135@mR:
  1173                           	callstack 0
  1174   00001B                     turn_right_135@mR:
  1175                           	callstack 0
  1176   00001B                     reverse_after_read@mR:
  1177                           	callstack 0
  1178   00001B                     reverse_one_square@mR:
  1179                           	callstack 0
  1180   00001B                     inch_forward@mR:
  1181                           	callstack 0
  1182   00001B                     sprintf@s:
  1183                           	callstack 0
  1184   00001B                     sqrtf@s:
  1185                           	callstack 0
  1186                           
  1187                           ; 4 bytes @ 0x1A
  1188   00001B                     	ds	2
  1189   00001D                     ??_turn_left_90:
  1190   00001D                     ??_turn_right_90:
  1191   00001D                     ??_turn_left_135:
  1192   00001D                     ??_turn_right_135:
  1193   00001D                     ??_reverse_after_read:
  1194   00001D                     ??_reverse_one_square:
  1195   00001D                     ??_inch_forward:
  1196   00001D                     sprintf@fmt:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x1C
  1200   00001D                     	ds	1
  1201   00001E                     ___flmul@sign:
  1202                           	callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x1D
  1205   00001E                     	ds	1
  1206   00001F                     ___flmul@grs:
  1207                           	callstack 0
  1208   00001F                     sqrtf@i:
  1209                           	callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x1E
  1212   00001F                     	ds	1
  1213   000020                     sprintf@ap:
  1214                           	callstack 0
  1215                           
  1216                           ; 1 bytes @ 0x1F
  1217   000020                     	ds	1
  1218   000021                     sprintf@f:
  1219                           	callstack 0
  1220                           
  1221                           ; 12 bytes @ 0x20
  1222   000021                     	ds	2
  1223   000023                     ___flmul@aexp:
  1224                           	callstack 0
  1225   000023                     sqrtf@q:
  1226                           	callstack 0
  1227                           
  1228                           ; 4 bytes @ 0x22
  1229   000023                     	ds	1
  1230   000024                     ___flmul@bexp:
  1231                           	callstack 0
  1232                           
  1233                           ; 1 bytes @ 0x23
  1234   000024                     	ds	1
  1235   000025                     ___flmul@prod:
  1236                           	callstack 0
  1237                           
  1238                           ; 4 bytes @ 0x24
  1239   000025                     	ds	2
  1240   000027                     sqrtf@t:
  1241                           	callstack 0
  1242                           
  1243                           ; 4 bytes @ 0x26
  1244   000027                     	ds	2
  1245   000029                     ___flmul@temp:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x28
  1249   000029                     	ds	2
  1250   00002B                     ?___fldiv:
  1251                           	callstack 0
  1252   00002B                     ?_scalbnf:
  1253                           	callstack 0
  1254   00002B                     ___fldiv@b:
  1255                           	callstack 0
  1256   00002B                     scalbnf@x:
  1257                           	callstack 0
  1258   00002B                     sqrtf@m:
  1259                           	callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x2A
  1262   00002B                     	ds	4
  1263   00002F                     scalbnf@n:
  1264                           	callstack 0
  1265   00002F                     ___fldiv@a:
  1266                           	callstack 0
  1267   00002F                     sqrtf@r:
  1268                           	callstack 0
  1269                           
  1270                           ; 4 bytes @ 0x2E
  1271   00002F                     	ds	2
  1272   000031                     ??_scalbnf:
  1273                           
  1274                           ; 1 bytes @ 0x30
  1275   000031                     	ds	2
  1276   000033                     ??___fldiv:
  1277   000033                     sqrtf@ix:
  1278                           	callstack 0
  1279                           
  1280                           ; 4 bytes @ 0x32
  1281   000033                     	ds	2
  1282   000035                     scalbnf@u:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x34
  1286   000035                     	ds	2
  1287   000037                     ___fldiv@rem:
  1288                           	callstack 0
  1289                           
  1290                           ; 4 bytes @ 0x36
  1291   000037                     	ds	2
  1292   000039                     scalbnf@y:
  1293                           	callstack 0
  1294                           
  1295                           ; 4 bytes @ 0x38
  1296   000039                     	ds	2
  1297   00003B                     ___fldiv@sign:
  1298                           	callstack 0
  1299                           
  1300                           ; 1 bytes @ 0x3A
  1301   00003B                     	ds	1
  1302   00003C                     ___fldiv@new_exp:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x3B
  1306   00003C                     	ds	2
  1307   00003E                     ___fldiv@grs:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x3D
  1311   00003E                     	ds	4
  1312   000042                     ___fldiv@bexp:
  1313                           	callstack 0
  1314                           
  1315                           ; 1 bytes @ 0x41
  1316   000042                     	ds	1
  1317   000043                     ___fldiv@aexp:
  1318                           	callstack 0
  1319                           
  1320                           ; 1 bytes @ 0x42
  1321   000043                     	ds	1
  1322   000044                     ?___flsub:
  1323                           	callstack 0
  1324   000044                     ___flsub@b:
  1325                           	callstack 0
  1326                           
  1327                           ; 4 bytes @ 0x43
  1328   000044                     	ds	4
  1329   000048                     ___flsub@a:
  1330                           	callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x47
  1333   000048                     	ds	4
  1334   00004C                     ___flge@ff1:
  1335                           	callstack 0
  1336                           
  1337                           ; 4 bytes @ 0x4B
  1338   00004C                     	ds	4
  1339   000050                     ___flge@ff2:
  1340                           	callstack 0
  1341                           
  1342                           ; 4 bytes @ 0x4F
  1343   000050                     	ds	4
  1344   000054                     ??___flge:
  1345                           
  1346                           ; 1 bytes @ 0x53
  1347   000054                     	ds	4
  1348   000058                     ??_main:
  1349                           
  1350                           ; 1 bytes @ 0x57
  1351   000058                     	ds	5
  1352                           
  1353 ;;
  1354 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1355 ;;
  1356 ;; *************** function _main *****************
  1357 ;; Defined at:
  1358 ;;		line 23 in file "main.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  i               1  175[BANK3 ] unsigned char 
  1363 ;;  timings        40  120[BANK3 ] unsigned int [20]
  1364 ;;  actions        40   60[BANK3 ] int [20]
  1365 ;;  clear_val      20  100[BANK3 ] unsigned char [20]
  1366 ;;  blue_val       20   40[BANK3 ] unsigned char [20]
  1367 ;;  green_val      20   20[BANK3 ] unsigned char [20]
  1368 ;;  red_val        20    0[BANK3 ] unsigned char [20]
  1369 ;;  motorR          9  189[BANK3 ] struct DC_motor
  1370 ;;  motorL          9  180[BANK3 ] struct DC_motor
  1371 ;;  pmR             2  200[BANK3 ] PTR struct DC_motor
  1372 ;;		 -> main@motorR(9), 
  1373 ;;  pmL             2  198[BANK3 ] PTR struct DC_motor
  1374 ;;		 -> main@motorL(9), 
  1375 ;;  action_to_do    2  178[BANK3 ] int 
  1376 ;;  actions_comp    2  176[BANK3 ] int 
  1377 ;;  lum             2  172[BANK3 ] unsigned int 
  1378 ;;  measured_tim    2  170[BANK3 ] unsigned int 
  1379 ;;  pclear_val      2  168[BANK3 ] PTR unsigned char 
  1380 ;;		 -> main@clear_val(20), 
  1381 ;;  PWMcycle        2    0        unsigned int 
  1382 ;;  bluem           2  166[BANK3 ] unsigned int 
  1383 ;;  greenm          2  164[BANK3 ] unsigned int 
  1384 ;;  redm            2  162[BANK3 ] unsigned int 
  1385 ;;  lum_threshol    2  160[BANK3 ] unsigned int 
  1386 ;;  pgreen_val      2    0        PTR unsigned char 
  1387 ;;		 -> main@green_val(20), 
  1388 ;;  pblue_val       2    0        PTR unsigned char 
  1389 ;;		 -> main@blue_val(20), 
  1390 ;;  pred_val        2    0        PTR unsigned char 
  1391 ;;		 -> main@red_val(20), 
  1392 ;;  previously_m    2    0        unsigned int 
  1393 ;;  going_forwar    1  174[BANK3 ] _Bool 
  1394 ;;  action          1    0        unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;      Locals:         0       0       0       0     202       0       0       0       0       0       0       0       
      +0       0       0
  1406 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1407 ;;      Totals:         5       0       0       0     202       0       0       0       0       0       0       0       
      +0       0       0
  1408 ;;Total ram usage:      207 bytes
  1409 ;; Hardware stack levels required when called: 7
  1410 ;; This function calls:
  1411 ;;		_ADC_init
  1412 ;;		_I2C_2_Master_Init
  1413 ;;		_Interrupts_init
  1414 ;;		_Timer0_init
  1415 ;;		_color_click_init
  1416 ;;		_color_click_toggleLED
  1417 ;;		_color_read_Blue
  1418 ;;		_color_read_Clear
  1419 ;;		_color_read_Green
  1420 ;;		_color_read_Red
  1421 ;;		_color_writetoaddr
  1422 ;;		_decide_action
  1423 ;;		_fullSpeedAhead
  1424 ;;		_get16bitTMR0val
  1425 ;;		_inch_forward
  1426 ;;		_initDCmotorsPWM
  1427 ;;		_initUSART4
  1428 ;;		_invert_action
  1429 ;;		_resetTimer0
  1430 ;;		_reverse_after_read
  1431 ;;		_reverse_one_square
  1432 ;;		_sendStringSerial4
  1433 ;;		_sprintf
  1434 ;;		_stop
  1435 ;;		_turn_left_135
  1436 ;;		_turn_left_90
  1437 ;;		_turn_right_135
  1438 ;;		_turn_right_90
  1439 ;; This function is called by:
  1440 ;;		Startup code after reset
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text0
  1445   0044FC                     __ptext0:
  1446                           	callstack 0
  1447   0044FC                     _main:
  1448                           	callstack 24
  1449   0044FC                     
  1450                           ;main.c: 25:     Timer0_init();
  1451   0044FC  ECB7  F03A         	call	_Timer0_init	;wreg free
  1452                           
  1453                           ;main.c: 26:     ADC_init();
  1454   004500  ECE5  F03A         	call	_ADC_init	;wreg free
  1455   004504                     
  1456                           ;main.c: 27:     Interrupts_init();
  1457   004504  EC1C  F03B         	call	_Interrupts_init	;wreg free
  1458   004508                     
  1459                           ;main.c: 28:     I2C_2_Master_Init();
  1460   004508  EC6B  F03A         	call	_I2C_2_Master_Init	;wreg free
  1461   00450C                     
  1462                           ;main.c: 29:     color_click_init();
  1463   00450C  EC75  F039         	call	_color_click_init	;wreg free
  1464   004510                     
  1465                           ;main.c: 30:     initDCmotorsPWM(99);
  1466   004510  0E00               	movlw	0
  1467   004512  6E03               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1468   004514  0E63               	movlw	99
  1469   004516  6E02               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1470   004518  EC80  F037         	call	_initDCmotorsPWM	;wreg free
  1471   00451C                     
  1472                           ;main.c: 31:     initUSART4();
  1473   00451C  ECC7  F03A         	call	_initUSART4	;wreg free
  1474   004520                     
  1475                           ;main.c: 34:     color_click_toggleLED();
  1476   004520  ECA2  F038         	call	_color_click_toggleLED	;wreg free
  1477   004524                     
  1478                           ;main.c: 37:     LATHbits.LATH3=1;
  1479   004524  8680               	bsf	128,3,c	;volatile
  1480   004526                     
  1481                           ;main.c: 38:     TRISHbits.TRISH3=0;
  1482   004526  9688               	bcf	136,3,c	;volatile
  1483   004528                     
  1484                           ;main.c: 41:     TRISFbits.TRISF2=1;
  1485   004528  8486               	bsf	134,2,c	;volatile
  1486   00452A                     
  1487                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1488   00452A  010E               	movlb	14	; () banked
  1489   00452C  95B4               	bcf	180,2,b	;volatile
  1490   00452E                     
  1491                           ; BSR set to: 14
  1492                           ;main.c: 48:     motorL.power=0;
  1493   00452E  0E00               	movlw	0
  1494   004530  0103               	movlb	3	; () banked
  1495   004532  6FB4               	movwf	main@motorL& (0+255),b
  1496   004534                     
  1497                           ; BSR set to: 3
  1498                           ;main.c: 49:     motorL.direction=1;
  1499   004534  0E01               	movlw	1
  1500   004536  6FB5               	movwf	(main@motorL+1)& (0+255),b
  1501   004538                     
  1502                           ; BSR set to: 3
  1503                           ;main.c: 50:     motorL.brakemode=1;
  1504   004538  0E01               	movlw	1
  1505   00453A  6FB6               	movwf	(main@motorL+2)& (0+255),b
  1506   00453C                     
  1507                           ; BSR set to: 3
  1508                           ;main.c: 51:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1509   00453C  0EAA               	movlw	170
  1510   00453E  6FB9               	movwf	(main@motorL+5)& (0+255),b
  1511   004540  0E0F               	movlw	15
  1512   004542  6FBA               	movwf	(main@motorL+6)& (0+255),b
  1513   004544                     
  1514                           ; BSR set to: 3
  1515                           ;main.c: 52:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1516   004544  0EA6               	movlw	166
  1517   004546  6FBB               	movwf	(main@motorL+7)& (0+255),b
  1518   004548  0E0F               	movlw	15
  1519   00454A  6FBC               	movwf	(main@motorL+8)& (0+255),b
  1520   00454C                     
  1521                           ; BSR set to: 3
  1522                           ;main.c: 53:     motorL.PWMperiod=PWMcycle;
  1523   00454C  0E00               	movlw	0
  1524   00454E  6FB8               	movwf	(main@motorL+4)& (0+255),b
  1525   004550  0E63               	movlw	99
  1526   004552  6FB7               	movwf	(main@motorL+3)& (0+255),b
  1527   004554                     
  1528                           ; BSR set to: 3
  1529                           ;main.c: 55:     motorR.power=0;
  1530   004554  0E00               	movlw	0
  1531   004556  6FBD               	movwf	main@motorR& (0+255),b
  1532   004558                     
  1533                           ; BSR set to: 3
  1534                           ;main.c: 56:     motorR.direction=1;
  1535   004558  0E01               	movlw	1
  1536   00455A  6FBE               	movwf	(main@motorR+1)& (0+255),b
  1537   00455C                     
  1538                           ; BSR set to: 3
  1539                           ;main.c: 57:     motorR.brakemode=1;
  1540   00455C  0E01               	movlw	1
  1541   00455E  6FBF               	movwf	(main@motorR+2)& (0+255),b
  1542   004560                     
  1543                           ; BSR set to: 3
  1544                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1545   004560  0E25               	movlw	37
  1546   004562  6FC2               	movwf	(main@motorR+5)& (0+255),b
  1547   004564  0E0F               	movlw	15
  1548   004566  6FC3               	movwf	(main@motorR+6)& (0+255),b
  1549   004568                     
  1550                           ; BSR set to: 3
  1551                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1552   004568  0E21               	movlw	33
  1553   00456A  6FC4               	movwf	(main@motorR+7)& (0+255),b
  1554   00456C  0E0F               	movlw	15
  1555   00456E  6FC5               	movwf	(main@motorR+8)& (0+255),b
  1556   004570                     
  1557                           ; BSR set to: 3
  1558                           ;main.c: 60:     motorR.PWMperiod=PWMcycle;
  1559   004570  0E00               	movlw	0
  1560   004572  6FC1               	movwf	(main@motorR+4)& (0+255),b
  1561   004574  0E63               	movlw	99
  1562   004576  6FC0               	movwf	(main@motorR+3)& (0+255),b
  1563   004578                     
  1564                           ; BSR set to: 3
  1565                           ;main.c: 63:     struct DC_motor *pmL= &motorL;
  1566   004578  0EB4               	movlw	low main@motorL
  1567   00457A  6FC6               	movwf	main@pmL& (0+255),b
  1568   00457C  0E03               	movlw	high main@motorL
  1569   00457E  6FC7               	movwf	(main@pmL+1)& (0+255),b
  1570   004580                     
  1571                           ; BSR set to: 3
  1572                           ;main.c: 64:     struct DC_motor *pmR= &motorR;
  1573   004580  0EBD               	movlw	low main@motorR
  1574   004582  6FC8               	movwf	main@pmR& (0+255),b
  1575   004584  0E03               	movlw	high main@motorR
  1576   004586  6FC9               	movwf	(main@pmR+1)& (0+255),b
  1577   004588                     
  1578                           ; BSR set to: 3
  1579                           ;main.c: 67:     char clear_val[20];;main.c: 68:     char red_val[20];;main.c: 69:     c
      +                          har green_val[20];;main.c: 70:     char blue_val[20];;main.c: 71:     char *pclear_val;;
      +                          main.c: 72:     char *pred_val;;main.c: 73:     char *pblue_val;;main.c: 74:     char *p
      +                          green_val;;main.c: 75:     pclear_val = &clear_val[0];
  1580   004588  0E64               	movlw	low main@clear_val
  1581   00458A  6FA8               	movwf	main@pclear_val& (0+255),b
  1582   00458C  0E03               	movlw	high main@clear_val
  1583   00458E  6FA9               	movwf	(main@pclear_val+1)& (0+255),b
  1584   004590                     
  1585                           ; BSR set to: 3
  1586                           ;main.c: 80:     unsigned int lum;;main.c: 81:     unsigned int lum_threshold;;main.c: 8
      +                          2:     unsigned int redm, greenm, bluem;;main.c: 83:     char action;;main.c: 84:     _B
      +                          ool going_forward = 0;
  1587   004590  0E00               	movlw	0
  1588   004592  6FAE               	movwf	main@going_forward& (0+255),b
  1589   004594                     
  1590                           ; BSR set to: 3
  1591                           ;main.c: 85:     unsigned int previously_measured_time, measured_time;;main.c: 86:     i
      +                          nt action_to_do;;main.c: 87:     unsigned int timings[20];;main.c: 88:     int actions[2
      +                          0];;main.c: 89:     int actions_completed = 0;
  1592   004594  0E00               	movlw	0
  1593   004596  6FB1               	movwf	(main@actions_completed+1)& (0+255),b
  1594   004598  0E00               	movlw	0
  1595   00459A  6FB0               	movwf	main@actions_completed& (0+255),b
  1596   00459C                     
  1597                           ; BSR set to: 3
  1598                           ;main.c: 102:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1599   00459C  0EA3               	movlw	163
  1600   00459E  6E59               	movwf	(??_main+1)^0,c
  1601   0045A0  0E57               	movlw	87
  1602   0045A2  6E58               	movwf	??_main^0,c
  1603   0045A4  0E02               	movlw	2
  1604   0045A6                     u7987:
  1605   0045A6  2EE8               	decfsz	wreg,f,c
  1606   0045A8  D7FE               	bra	u7987
  1607   0045AA  2E58               	decfsz	??_main^0,f,c
  1608   0045AC  D7FC               	bra	u7987
  1609   0045AE  2E59               	decfsz	(??_main+1)^0,f,c
  1610   0045B0  D7FA               	bra	u7987
  1611   0045B2  D000               	nop2	
  1612   0045B4                     
  1613                           ;main.c: 104:     lum = color_read_Clear();
  1614   0045B4  EC25  F039         	call	_color_read_Clear	;wreg free
  1615   0045B8  C006  F3AC         	movff	?_color_read_Clear,main@lum
  1616   0045BC  C007  F3AD         	movff	?_color_read_Clear+1,main@lum+1
  1617   0045C0                     
  1618                           ;main.c: 105:     lum_threshold = lum + 10;
  1619   0045C0  0E0A               	movlw	10
  1620   0045C2  0103               	movlb	3	; () banked
  1621   0045C4  25AC               	addwf	main@lum& (0+255),w,b
  1622   0045C6  6FA0               	movwf	main@lum_threshold& (0+255),b
  1623   0045C8  0E00               	movlw	0
  1624   0045CA  21AD               	addwfc	(main@lum+1)& (0+255),w,b
  1625   0045CC  6FA1               	movwf	(main@lum_threshold+1)& (0+255),b
  1626   0045CE                     l7660:
  1627                           
  1628                           ;main.c: 219:         if(!going_forward){
  1629   0045CE  0103               	movlb	3	; () banked
  1630   0045D0  51AE               	movf	main@going_forward& (0+255),w,b
  1631   0045D2  A4D8               	btfss	status,2,c
  1632   0045D4  EFEE  F022         	goto	u7741
  1633   0045D8  EFF0  F022         	goto	u7740
  1634   0045DC                     u7741:
  1635   0045DC  EFFF  F022         	goto	l7668
  1636   0045E0                     u7740:
  1637   0045E0                     
  1638                           ; BSR set to: 3
  1639                           ;main.c: 222:             resetTimer0();
  1640   0045E0  EC22  F03B         	call	_resetTimer0	;wreg free
  1641   0045E4                     
  1642                           ;main.c: 223:             fullSpeedAhead(pmL, pmR);
  1643   0045E4  C3C6  F015         	movff	main@pmL,fullSpeedAhead@mL
  1644   0045E8  C3C7  F016         	movff	main@pmL+1,fullSpeedAhead@mL+1
  1645   0045EC  C3C8  F017         	movff	main@pmR,fullSpeedAhead@mR
  1646   0045F0  C3C9  F018         	movff	main@pmR+1,fullSpeedAhead@mR+1
  1647   0045F4  EC6D  F036         	call	_fullSpeedAhead	;wreg free
  1648   0045F8                     
  1649                           ;main.c: 224:             going_forward = 1;
  1650   0045F8  0E01               	movlw	1
  1651   0045FA  0103               	movlb	3	; () banked
  1652   0045FC  6FAE               	movwf	main@going_forward& (0+255),b
  1653   0045FE                     l7668:
  1654                           
  1655                           ; BSR set to: 3
  1656                           ;main.c: 227:         lum = color_read_Clear();
  1657   0045FE  EC25  F039         	call	_color_read_Clear	;wreg free
  1658   004602  C006  F3AC         	movff	?_color_read_Clear,main@lum
  1659   004606  C007  F3AD         	movff	?_color_read_Clear+1,main@lum+1
  1660   00460A                     
  1661                           ;main.c: 229:         if (lum > lum_threshold){
  1662   00460A  0103               	movlb	3	; () banked
  1663   00460C  51AC               	movf	main@lum& (0+255),w,b
  1664   00460E  5DA0               	subwf	main@lum_threshold& (0+255),w,b
  1665   004610  51AD               	movf	(main@lum+1)& (0+255),w,b
  1666   004612  59A1               	subwfb	(main@lum_threshold+1)& (0+255),w,b
  1667   004614  B0D8               	btfsc	status,0,c
  1668   004616  EF0F  F023         	goto	u7751
  1669   00461A  EF11  F023         	goto	u7750
  1670   00461E                     u7751:
  1671   00461E  EFE7  F022         	goto	l7660
  1672   004622                     u7750:
  1673   004622                     
  1674                           ; BSR set to: 3
  1675                           ;main.c: 231:             measured_time = get16bitTMR0val();
  1676   004622  ECD6  F03A         	call	_get16bitTMR0val	;wreg free
  1677   004626  C002  F3AA         	movff	?_get16bitTMR0val,main@measured_time
  1678   00462A  C003  F3AB         	movff	?_get16bitTMR0val+1,main@measured_time+1
  1679   00462E                     
  1680                           ;main.c: 232:             stop(pmL, pmR);
  1681   00462E  C3C6  F015         	movff	main@pmL,stop@mL
  1682   004632  C3C7  F016         	movff	main@pmL+1,stop@mL+1
  1683   004636  C3C8  F017         	movff	main@pmR,stop@mR
  1684   00463A  C3C9  F018         	movff	main@pmR+1,stop@mR+1
  1685   00463E  ECD1  F037         	call	_stop	;wreg free
  1686   004642                     
  1687                           ;main.c: 233:             _delay((unsigned long)((250)*(64000000/4000.0)));
  1688   004642  0E15               	movlw	21
  1689   004644  6E59               	movwf	(??_main+1)^0,c
  1690   004646  0E4B               	movlw	75
  1691   004648  6E58               	movwf	??_main^0,c
  1692   00464A  0EBE               	movlw	190
  1693   00464C                     u7997:
  1694   00464C  2EE8               	decfsz	wreg,f,c
  1695   00464E  D7FE               	bra	u7997
  1696   004650  2E58               	decfsz	??_main^0,f,c
  1697   004652  D7FC               	bra	u7997
  1698   004654  2E59               	decfsz	(??_main+1)^0,f,c
  1699   004656  D7FA               	bra	u7997
  1700   004658  D000               	nop2	
  1701   00465A                     l7678:
  1702                           
  1703                           ;main.c: 237:                 lum = color_read_Clear();
  1704   00465A  EC25  F039         	call	_color_read_Clear	;wreg free
  1705   00465E  C006  F3AC         	movff	?_color_read_Clear,main@lum
  1706   004662  C007  F3AD         	movff	?_color_read_Clear+1,main@lum+1
  1707   004666                     
  1708                           ;main.c: 238:                 if(lum < 80){
  1709   004666  0103               	movlb	3	; () banked
  1710   004668  51AD               	movf	(main@lum+1)& (0+255),w,b
  1711   00466A  E107               	bnz	u7761
  1712   00466C  0E50               	movlw	80
  1713   00466E  5DAC               	subwf	main@lum& (0+255),w,b
  1714   004670  B0D8               	btfsc	status,0,c
  1715   004672  EF3D  F023         	goto	u7761
  1716   004676  EF3F  F023         	goto	u7760
  1717   00467A                     u7761:
  1718   00467A  EF57  F023         	goto	l7686
  1719   00467E                     u7760:
  1720   00467E                     
  1721                           ; BSR set to: 3
  1722                           ;main.c: 239:                 inch_forward(pmL, pmR);
  1723   00467E  C3C6  F019         	movff	main@pmL,inch_forward@mL
  1724   004682  C3C7  F01A         	movff	main@pmL+1,inch_forward@mL+1
  1725   004686  C3C8  F01B         	movff	main@pmR,inch_forward@mR
  1726   00468A  C3C9  F01C         	movff	main@pmR+1,inch_forward@mR+1
  1727   00468E  EC96  F035         	call	_inch_forward	;wreg free
  1728   004692                     
  1729                           ;main.c: 240:                 _delay((unsigned long)((100)*(64000000/4000.0)));
  1730   004692  0E09               	movlw	9
  1731   004694  6E59               	movwf	(??_main+1)^0,c
  1732   004696  0E1E               	movlw	30
  1733   004698  6E58               	movwf	??_main^0,c
  1734   00469A  0EE4               	movlw	228
  1735   00469C                     u8007:
  1736   00469C  2EE8               	decfsz	wreg,f,c
  1737   00469E  D7FE               	bra	u8007
  1738   0046A0  2E58               	decfsz	??_main^0,f,c
  1739   0046A2  D7FC               	bra	u8007
  1740   0046A4  2E59               	decfsz	(??_main+1)^0,f,c
  1741   0046A6  D7FA               	bra	u8007
  1742   0046A8  D000               	nop2	
  1743                           
  1744                           ;main.c: 241:                 }
  1745   0046AA  EF2D  F023         	goto	l7678
  1746   0046AE                     l7686:
  1747                           
  1748                           ; BSR set to: 3
  1749                           ;main.c: 248:             going_forward = 0;
  1750   0046AE  0E00               	movlw	0
  1751   0046B0  6FAE               	movwf	main@going_forward& (0+255),b
  1752   0046B2                     
  1753                           ; BSR set to: 3
  1754                           ;main.c: 251:             timings[actions_completed] = measured_time;
  1755   0046B2  90D8               	bcf	status,0,c
  1756   0046B4  35B0               	rlcf	main@actions_completed& (0+255),w,b
  1757   0046B6  6ED9               	movwf	fsr2l,c
  1758   0046B8  35B1               	rlcf	(main@actions_completed+1)& (0+255),w,b
  1759   0046BA  6EDA               	movwf	fsr2h,c
  1760   0046BC  0E78               	movlw	low main@timings
  1761   0046BE  26D9               	addwf	fsr2l,f,c
  1762   0046C0  0E03               	movlw	high main@timings
  1763   0046C2  22DA               	addwfc	fsr2h,f,c
  1764   0046C4  C3AA  FFDE         	movff	main@measured_time,postinc2
  1765   0046C8  C3AB  FFDD         	movff	main@measured_time+1,postdec2
  1766   0046CC                     
  1767                           ; BSR set to: 3
  1768                           ;main.c: 254:             color_writetoaddr(0x01, 0xD5);
  1769   0046CC  0ED5               	movlw	213
  1770   0046CE  6E04               	movwf	color_writetoaddr@value^0,c
  1771   0046D0  0E01               	movlw	1
  1772   0046D2  ECA7  F03A         	call	_color_writetoaddr
  1773   0046D6                     
  1774                           ;main.c: 255:             color_writetoaddr(0x03, 0xAB);
  1775   0046D6  0EAB               	movlw	171
  1776   0046D8  6E04               	movwf	color_writetoaddr@value^0,c
  1777   0046DA  0E03               	movlw	3
  1778   0046DC  ECA7  F03A         	call	_color_writetoaddr
  1779   0046E0                     
  1780                           ;main.c: 256:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1781   0046E0  0E11               	movlw	17
  1782   0046E2  6E59               	movwf	(??_main+1)^0,c
  1783   0046E4  0E3C               	movlw	60
  1784   0046E6  6E58               	movwf	??_main^0,c
  1785   0046E8  0ECB               	movlw	203
  1786   0046EA                     u8017:
  1787   0046EA  2EE8               	decfsz	wreg,f,c
  1788   0046EC  D7FE               	bra	u8017
  1789   0046EE  2E58               	decfsz	??_main^0,f,c
  1790   0046F0  D7FC               	bra	u8017
  1791   0046F2  2E59               	decfsz	(??_main+1)^0,f,c
  1792   0046F4  D7FA               	bra	u8017
  1793   0046F6  0000               	nop	
  1794   0046F8                     
  1795                           ;main.c: 258:             redm = color_read_Red();
  1796   0046F8  ECD5  F038         	call	_color_read_Red	;wreg free
  1797   0046FC  C006  F3A2         	movff	?_color_read_Red,main@redm
  1798   004700  C007  F3A3         	movff	?_color_read_Red+1,main@redm+1
  1799   004704                     
  1800                           ;main.c: 259:             greenm = color_read_Green();
  1801   004704  ECFD  F038         	call	_color_read_Green	;wreg free
  1802   004708  C006  F3A4         	movff	?_color_read_Green,main@greenm
  1803   00470C  C007  F3A5         	movff	?_color_read_Green+1,main@greenm+1
  1804   004710                     
  1805                           ;main.c: 260:             bluem = color_read_Blue();
  1806   004710  EC4D  F039         	call	_color_read_Blue	;wreg free
  1807   004714  C006  F3A6         	movff	?_color_read_Blue,main@bluem
  1808   004718  C007  F3A7         	movff	?_color_read_Blue+1,main@bluem+1
  1809   00471C                     
  1810                           ;main.c: 262:             action_to_do = decide_action(redm, greenm, bluem);
  1811   00471C  C3A2  F0EB         	movff	main@redm,decide_action@red_unsigned
  1812   004720  C3A3  F0EC         	movff	main@redm+1,decide_action@red_unsigned+1
  1813   004724  C3A4  F0ED         	movff	main@greenm,decide_action@green_unsigned
  1814   004728  C3A5  F0EE         	movff	main@greenm+1,decide_action@green_unsigned+1
  1815   00472C  C3A6  F0EF         	movff	main@bluem,decide_action@blue_unsigned
  1816   004730  C3A7  F0F0         	movff	main@bluem+1,decide_action@blue_unsigned+1
  1817   004734  EC81  F019         	call	_decide_action	;wreg free
  1818   004738  6E58               	movwf	??_main^0,c
  1819   00473A  5058               	movf	??_main^0,w,c
  1820   00473C  0103               	movlb	3	; () banked
  1821   00473E  6FB2               	movwf	main@action_to_do& (0+255),b
  1822   004740  6BB3               	clrf	(main@action_to_do+1)& (0+255),b
  1823   004742                     
  1824                           ; BSR set to: 3
  1825                           ;main.c: 265:             actions[actions_completed] = action_to_do;
  1826   004742  90D8               	bcf	status,0,c
  1827   004744  35B0               	rlcf	main@actions_completed& (0+255),w,b
  1828   004746  6ED9               	movwf	fsr2l,c
  1829   004748  35B1               	rlcf	(main@actions_completed+1)& (0+255),w,b
  1830   00474A  6EDA               	movwf	fsr2h,c
  1831   00474C  0E3C               	movlw	low main@actions
  1832   00474E  26D9               	addwf	fsr2l,f,c
  1833   004750  0E03               	movlw	high main@actions
  1834   004752  22DA               	addwfc	fsr2h,f,c
  1835   004754  C3B2  FFDE         	movff	main@action_to_do,postinc2
  1836   004758  C3B3  FFDD         	movff	main@action_to_do+1,postdec2
  1837   00475C                     
  1838                           ; BSR set to: 3
  1839                           ;main.c: 266:             actions_completed += 1;
  1840   00475C  4BB0               	infsnz	main@actions_completed& (0+255),f,b
  1841   00475E  2BB1               	incf	(main@actions_completed+1)& (0+255),f,b
  1842   004760                     
  1843                           ; BSR set to: 3
  1844                           ;main.c: 269:             if(action_to_do == 0){
  1845   004760  51B2               	movf	main@action_to_do& (0+255),w,b
  1846   004762  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1847   004764  A4D8               	btfss	status,2,c
  1848   004766  EFB7  F023         	goto	u7771
  1849   00476A  EFB9  F023         	goto	u7770
  1850   00476E                     u7771:
  1851   00476E  EFCF  F023         	goto	l7712
  1852   004772                     u7770:
  1853   004772                     
  1854                           ; BSR set to: 3
  1855                           ;main.c: 270:                 reverse_after_read(pmL, pmR);
  1856   004772  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  1857   004776  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1858   00477A  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  1859   00477E  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1860   004782  EC3A  F032         	call	_reverse_after_read	;wreg free
  1861                           
  1862                           ;main.c: 271:                 turn_right_90(pmL, pmR);
  1863   004786  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  1864   00478A  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1865   00478E  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  1866   004792  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1867   004796  ECAC  F034         	call	_turn_right_90	;wreg free
  1868                           
  1869                           ;main.c: 272:             }
  1870   00479A  EFE2  F024         	goto	l7744
  1871   00479E                     l7712:
  1872                           
  1873                           ; BSR set to: 3
  1874   00479E  05B2               	decf	main@action_to_do& (0+255),w,b
  1875   0047A0  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1876   0047A2  A4D8               	btfss	status,2,c
  1877   0047A4  EFD6  F023         	goto	u7781
  1878   0047A8  EFD8  F023         	goto	u7780
  1879   0047AC                     u7781:
  1880   0047AC  EFEE  F023         	goto	l7716
  1881   0047B0                     u7780:
  1882   0047B0                     
  1883                           ; BSR set to: 3
  1884                           ;main.c: 274:                 reverse_after_read(pmL, pmR);
  1885   0047B0  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  1886   0047B4  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1887   0047B8  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  1888   0047BC  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1889   0047C0  EC3A  F032         	call	_reverse_after_read	;wreg free
  1890                           
  1891                           ;main.c: 275:                 turn_left_90(pmL, pmR);
  1892   0047C4  C3C6  F019         	movff	main@pmL,turn_left_90@mL
  1893   0047C8  C3C7  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  1894   0047CC  C3C8  F01B         	movff	main@pmR,turn_left_90@mR
  1895   0047D0  C3C9  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  1896   0047D4  EC21  F035         	call	_turn_left_90	;wreg free
  1897                           
  1898                           ;main.c: 276:             }
  1899   0047D8  EFE2  F024         	goto	l7744
  1900   0047DC                     l7716:
  1901                           
  1902                           ; BSR set to: 3
  1903   0047DC  0E02               	movlw	2
  1904   0047DE  19B2               	xorwf	main@action_to_do& (0+255),w,b
  1905   0047E0  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1906   0047E2  A4D8               	btfss	status,2,c
  1907   0047E4  EFF6  F023         	goto	u7791
  1908   0047E8  EFF8  F023         	goto	u7790
  1909   0047EC                     u7791:
  1910   0047EC  EF18  F024         	goto	l7720
  1911   0047F0                     u7790:
  1912   0047F0                     
  1913                           ; BSR set to: 3
  1914                           ;main.c: 278:                 reverse_after_read(pmL, pmR);
  1915   0047F0  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  1916   0047F4  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1917   0047F8  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  1918   0047FC  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1919   004800  EC3A  F032         	call	_reverse_after_read	;wreg free
  1920                           
  1921                           ;main.c: 279:                 turn_right_90(pmL, pmR);
  1922   004804  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  1923   004808  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1924   00480C  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  1925   004810  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1926   004814  ECAC  F034         	call	_turn_right_90	;wreg free
  1927                           
  1928                           ;main.c: 280:                 turn_right_90(pmL, pmR);
  1929   004818  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  1930   00481C  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1931   004820  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  1932   004824  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1933   004828  ECAC  F034         	call	_turn_right_90	;wreg free
  1934                           
  1935                           ;main.c: 281:             }
  1936   00482C  EFE2  F024         	goto	l7744
  1937   004830                     l7720:
  1938                           
  1939                           ; BSR set to: 3
  1940   004830  0E03               	movlw	3
  1941   004832  19B2               	xorwf	main@action_to_do& (0+255),w,b
  1942   004834  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1943   004836  A4D8               	btfss	status,2,c
  1944   004838  EF20  F024         	goto	u7801
  1945   00483C  EF22  F024         	goto	u7800
  1946   004840                     u7801:
  1947   004840  EF42  F024         	goto	l7724
  1948   004844                     u7800:
  1949   004844                     
  1950                           ; BSR set to: 3
  1951                           ;main.c: 283:                 reverse_after_read(pmL, pmR);
  1952   004844  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  1953   004848  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1954   00484C  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  1955   004850  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1956   004854  EC3A  F032         	call	_reverse_after_read	;wreg free
  1957                           
  1958                           ;main.c: 284:                 reverse_one_square(pmL, pmR);
  1959   004858  C3C6  F019         	movff	main@pmL,reverse_one_square@mL
  1960   00485C  C3C7  F01A         	movff	main@pmL+1,reverse_one_square@mL+1
  1961   004860  C3C8  F01B         	movff	main@pmR,reverse_one_square@mR
  1962   004864  C3C9  F01C         	movff	main@pmR+1,reverse_one_square@mR+1
  1963   004868  EC3F  F033         	call	_reverse_one_square	;wreg free
  1964                           
  1965                           ;main.c: 285:                 turn_right_90(pmL, pmR);
  1966   00486C  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  1967   004870  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1968   004874  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  1969   004878  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1970   00487C  ECAC  F034         	call	_turn_right_90	;wreg free
  1971                           
  1972                           ;main.c: 286:             }
  1973   004880  EFE2  F024         	goto	l7744
  1974   004884                     l7724:
  1975                           
  1976                           ; BSR set to: 3
  1977   004884  0E04               	movlw	4
  1978   004886  19B2               	xorwf	main@action_to_do& (0+255),w,b
  1979   004888  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1980   00488A  A4D8               	btfss	status,2,c
  1981   00488C  EF4A  F024         	goto	u7811
  1982   004890  EF4C  F024         	goto	u7810
  1983   004894                     u7811:
  1984   004894  EF6C  F024         	goto	l7728
  1985   004898                     u7810:
  1986   004898                     
  1987                           ; BSR set to: 3
  1988                           ;main.c: 288:                 reverse_after_read(pmL, pmR);
  1989   004898  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  1990   00489C  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1991   0048A0  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  1992   0048A4  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1993   0048A8  EC3A  F032         	call	_reverse_after_read	;wreg free
  1994                           
  1995                           ;main.c: 289:                 reverse_one_square(pmL, pmR);
  1996   0048AC  C3C6  F019         	movff	main@pmL,reverse_one_square@mL
  1997   0048B0  C3C7  F01A         	movff	main@pmL+1,reverse_one_square@mL+1
  1998   0048B4  C3C8  F01B         	movff	main@pmR,reverse_one_square@mR
  1999   0048B8  C3C9  F01C         	movff	main@pmR+1,reverse_one_square@mR+1
  2000   0048BC  EC3F  F033         	call	_reverse_one_square	;wreg free
  2001                           
  2002                           ;main.c: 290:                 turn_left_90(pmL, pmR);
  2003   0048C0  C3C6  F019         	movff	main@pmL,turn_left_90@mL
  2004   0048C4  C3C7  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  2005   0048C8  C3C8  F01B         	movff	main@pmR,turn_left_90@mR
  2006   0048CC  C3C9  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  2007   0048D0  EC21  F035         	call	_turn_left_90	;wreg free
  2008                           
  2009                           ;main.c: 291:             }
  2010   0048D4  EFE2  F024         	goto	l7744
  2011   0048D8                     l7728:
  2012                           
  2013                           ; BSR set to: 3
  2014   0048D8  0E05               	movlw	5
  2015   0048DA  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2016   0048DC  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2017   0048DE  A4D8               	btfss	status,2,c
  2018   0048E0  EF74  F024         	goto	u7821
  2019   0048E4  EF76  F024         	goto	u7820
  2020   0048E8                     u7821:
  2021   0048E8  EF8C  F024         	goto	l7732
  2022   0048EC                     u7820:
  2023   0048EC                     
  2024                           ; BSR set to: 3
  2025                           ;main.c: 293:                 reverse_after_read(pmL, pmR);
  2026   0048EC  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  2027   0048F0  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2028   0048F4  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  2029   0048F8  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2030   0048FC  EC3A  F032         	call	_reverse_after_read	;wreg free
  2031                           
  2032                           ;main.c: 294:                 turn_left_135(pmL, pmR);
  2033   004900  C3C6  F019         	movff	main@pmL,turn_left_135@mL
  2034   004904  C3C7  F01A         	movff	main@pmL+1,turn_left_135@mL+1
  2035   004908  C3C8  F01B         	movff	main@pmR,turn_left_135@mR
  2036   00490C  C3C9  F01C         	movff	main@pmR+1,turn_left_135@mR+1
  2037   004910  EC36  F034         	call	_turn_left_135	;wreg free
  2038                           
  2039                           ;main.c: 295:             }
  2040   004914  EFE2  F024         	goto	l7744
  2041   004918                     l7732:
  2042                           
  2043                           ; BSR set to: 3
  2044   004918  0E06               	movlw	6
  2045   00491A  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2046   00491C  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2047   00491E  A4D8               	btfss	status,2,c
  2048   004920  EF94  F024         	goto	u7831
  2049   004924  EF96  F024         	goto	u7830
  2050   004928                     u7831:
  2051   004928  EFAC  F024         	goto	l7736
  2052   00492C                     u7830:
  2053   00492C                     
  2054                           ; BSR set to: 3
  2055                           ;main.c: 297:                 reverse_after_read(pmL, pmR);
  2056   00492C  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  2057   004930  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2058   004934  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  2059   004938  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2060   00493C  EC3A  F032         	call	_reverse_after_read	;wreg free
  2061                           
  2062                           ;main.c: 298:                 turn_right_135(pmL, pmR);
  2063   004940  C3C6  F019         	movff	main@pmL,turn_right_135@mL
  2064   004944  C3C7  F01A         	movff	main@pmL+1,turn_right_135@mL+1
  2065   004948  C3C8  F01B         	movff	main@pmR,turn_right_135@mR
  2066   00494C  C3C9  F01C         	movff	main@pmR+1,turn_right_135@mR+1
  2067   004950  ECC0  F033         	call	_turn_right_135	;wreg free
  2068                           
  2069                           ;main.c: 299:             }
  2070   004954  EFE2  F024         	goto	l7744
  2071   004958                     l7736:
  2072                           
  2073                           ; BSR set to: 3
  2074   004958  0E07               	movlw	7
  2075   00495A  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2076   00495C  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2077   00495E  A4D8               	btfss	status,2,c
  2078   004960  EFB4  F024         	goto	u7841
  2079   004964  EFB6  F024         	goto	u7840
  2080   004968                     u7841:
  2081   004968  EFE2  F024         	goto	l375
  2082   00496C                     u7840:
  2083   00496C                     
  2084                           ; BSR set to: 3
  2085                           ;main.c: 303:                 reverse_after_read(pmL, pmR);
  2086   00496C  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  2087   004970  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2088   004974  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  2089   004978  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2090   00497C  EC3A  F032         	call	_reverse_after_read	;wreg free
  2091                           
  2092                           ;main.c: 304:                 turn_right_90(pmL, pmR);
  2093   004980  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2094   004984  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2095   004988  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2096   00498C  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2097   004990  ECAC  F034         	call	_turn_right_90	;wreg free
  2098   004994                     
  2099                           ;main.c: 305:                 _delay((unsigned long)((250)*(64000000/4000.0)));
  2100   004994  0E15               	movlw	21
  2101   004996  6E59               	movwf	(??_main+1)^0,c
  2102   004998  0E4B               	movlw	75
  2103   00499A  6E58               	movwf	??_main^0,c
  2104   00499C  0EBE               	movlw	190
  2105   00499E                     u8027:
  2106   00499E  2EE8               	decfsz	wreg,f,c
  2107   0049A0  D7FE               	bra	u8027
  2108   0049A2  2E58               	decfsz	??_main^0,f,c
  2109   0049A4  D7FC               	bra	u8027
  2110   0049A6  2E59               	decfsz	(??_main+1)^0,f,c
  2111   0049A8  D7FA               	bra	u8027
  2112   0049AA  D000               	nop2	
  2113   0049AC                     
  2114                           ;main.c: 306:                 turn_right_90(pmL, pmR);
  2115   0049AC  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2116   0049B0  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2117   0049B4  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2118   0049B8  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2119   0049BC  ECAC  F034         	call	_turn_right_90	;wreg free
  2120                           
  2121                           ;main.c: 307:                 break;
  2122   0049C0  EF0A  F025         	goto	l7752
  2123   0049C4                     l375:
  2124   0049C4                     l7744:
  2125                           
  2126                           ;main.c: 309:             _delay((unsigned long)((250)*(64000000/4000.0)));
  2127   0049C4  0E15               	movlw	21
  2128   0049C6  6E59               	movwf	(??_main+1)^0,c
  2129   0049C8  0E4B               	movlw	75
  2130   0049CA  6E58               	movwf	??_main^0,c
  2131   0049CC  0EBE               	movlw	190
  2132   0049CE                     u8037:
  2133   0049CE  2EE8               	decfsz	wreg,f,c
  2134   0049D0  D7FE               	bra	u8037
  2135   0049D2  2E58               	decfsz	??_main^0,f,c
  2136   0049D4  D7FC               	bra	u8037
  2137   0049D6  2E59               	decfsz	(??_main+1)^0,f,c
  2138   0049D8  D7FA               	bra	u8037
  2139   0049DA  D000               	nop2	
  2140   0049DC                     
  2141                           ;main.c: 311:             sprintf(clear_val,"action = %d \r\n",action_to_do);
  2142   0049DC  0E64               	movlw	low main@clear_val
  2143   0049DE  6E1B               	movwf	sprintf@s^0,c
  2144   0049E0  0E03               	movlw	high main@clear_val
  2145   0049E2  6E1C               	movwf	(sprintf@s+1)^0,c
  2146   0049E4  0E71               	movlw	low STR_1
  2147   0049E6  6E1D               	movwf	sprintf@fmt^0,c
  2148   0049E8  C3B2  F01E         	movff	main@action_to_do,?_sprintf+3
  2149   0049EC  C3B3  F01F         	movff	main@action_to_do+1,?_sprintf+4
  2150   0049F0  ECFF  F039         	call	_sprintf	;wreg free
  2151   0049F4                     
  2152                           ;main.c: 312:             sendStringSerial4(pclear_val);
  2153   0049F4  C3A8  F003         	movff	main@pclear_val,sendStringSerial4@string
  2154   0049F8  C3A9  F004         	movff	main@pclear_val+1,sendStringSerial4@string+1
  2155   0049FC  EC53  F03A         	call	_sendStringSerial4	;wreg free
  2156   004A00                     
  2157                           ;main.c: 313:         _delay((unsigned long)((5)*(64000000/4000.0)));
  2158   004A00  0E68               	movlw	104
  2159   004A02  6E58               	movwf	??_main^0,c
  2160   004A04  0EE4               	movlw	228
  2161   004A06                     u8047:
  2162   004A06  2EE8               	decfsz	wreg,f,c
  2163   004A08  D7FE               	bra	u8047
  2164   004A0A  2E58               	decfsz	??_main^0,f,c
  2165   004A0C  D7FC               	bra	u8047
  2166   004A0E  D000               	nop2	
  2167   004A10  EFE7  F022         	goto	l7660
  2168   004A14                     l7752:
  2169                           
  2170                           ;main.c: 321:     actions_completed -= 1;
  2171   004A14  0103               	movlb	3	; () banked
  2172   004A16  07B0               	decf	main@actions_completed& (0+255),f,b
  2173   004A18  A0D8               	btfss	status,0,c
  2174   004A1A  07B1               	decf	(main@actions_completed+1)& (0+255),f,b
  2175   004A1C                     
  2176                           ; BSR set to: 3
  2177                           ;main.c: 324:     going_forward = 0;
  2178   004A1C  0E00               	movlw	0
  2179   004A1E  6FAE               	movwf	main@going_forward& (0+255),b
  2180   004A20                     
  2181                           ; BSR set to: 3
  2182                           ;main.c: 327:     for(char i = 0; i < 20; i +=1){
  2183   004A20  0E00               	movlw	0
  2184   004A22  6FAF               	movwf	main@i& (0+255),b
  2185   004A24                     l7758:
  2186                           
  2187                           ; BSR set to: 3
  2188   004A24  0E13               	movlw	19
  2189   004A26  65AF               	cpfsgt	main@i& (0+255),b
  2190   004A28  EF18  F025         	goto	u7851
  2191   004A2C  EF1A  F025         	goto	u7850
  2192   004A30                     u7851:
  2193   004A30  EF1C  F025         	goto	l7762
  2194   004A34                     u7850:
  2195   004A34  EF46  F026         	goto	l7830
  2196   004A38                     l7762:
  2197                           
  2198                           ; BSR set to: 3
  2199                           ;main.c: 328:         timings[i] -= 135;
  2200   004A38  51AF               	movf	main@i& (0+255),w,b
  2201   004A3A  0D02               	mullw	2
  2202   004A3C  0E78               	movlw	low main@timings
  2203   004A3E  24F3               	addwf	243,w,c
  2204   004A40  6ED9               	movwf	fsr2l,c
  2205   004A42  0E03               	movlw	high main@timings
  2206   004A44  20F4               	addwfc	prodh,w,c
  2207   004A46  6EDA               	movwf	fsr2h,c
  2208   004A48  0E87               	movlw	135
  2209   004A4A  5EDE               	subwf	postinc2,f,c
  2210   004A4C  0E00               	movlw	0
  2211   004A4E  5ADD               	subwfb	postdec2,f,c
  2212   004A50                     
  2213                           ; BSR set to: 3
  2214                           ;main.c: 329:         if(i > 7){
  2215   004A50  0E07               	movlw	7
  2216   004A52  65AF               	cpfsgt	main@i& (0+255),b
  2217   004A54  EF2E  F025         	goto	u7861
  2218   004A58  EF30  F025         	goto	u7860
  2219   004A5C                     u7861:
  2220   004A5C  EF3C  F025         	goto	l7768
  2221   004A60                     u7860:
  2222   004A60                     
  2223                           ; BSR set to: 3
  2224                           ;main.c: 330:               timings[i] -= 250;
  2225   004A60  51AF               	movf	main@i& (0+255),w,b
  2226   004A62  0D02               	mullw	2
  2227   004A64  0E78               	movlw	low main@timings
  2228   004A66  24F3               	addwf	243,w,c
  2229   004A68  6ED9               	movwf	fsr2l,c
  2230   004A6A  0E03               	movlw	high main@timings
  2231   004A6C  20F4               	addwfc	prodh,w,c
  2232   004A6E  6EDA               	movwf	fsr2h,c
  2233   004A70  0EFA               	movlw	250
  2234   004A72  5EDE               	subwf	postinc2,f,c
  2235   004A74  0E00               	movlw	0
  2236   004A76  5ADD               	subwfb	postdec2,f,c
  2237   004A78                     l7768:
  2238                           
  2239                           ; BSR set to: 3
  2240                           ;main.c: 332:     }
  2241   004A78  2BAF               	incf	main@i& (0+255),f,b
  2242   004A7A  EF12  F025         	goto	l7758
  2243   004A7E                     l7772:
  2244                           
  2245                           ; BSR set to: 3
  2246                           ;main.c: 337:         if(!going_forward){
  2247   004A7E  51AE               	movf	main@going_forward& (0+255),w,b
  2248   004A80  A4D8               	btfss	status,2,c
  2249   004A82  EF45  F025         	goto	u7871
  2250   004A86  EF47  F025         	goto	u7870
  2251   004A8A                     u7871:
  2252   004A8A  EF56  F025         	goto	l7780
  2253   004A8E                     u7870:
  2254   004A8E                     
  2255                           ; BSR set to: 3
  2256                           ;main.c: 338:             resetTimer0();
  2257   004A8E  EC22  F03B         	call	_resetTimer0	;wreg free
  2258   004A92                     
  2259                           ;main.c: 339:             fullSpeedAhead(pmL, pmR);
  2260   004A92  C3C6  F015         	movff	main@pmL,fullSpeedAhead@mL
  2261   004A96  C3C7  F016         	movff	main@pmL+1,fullSpeedAhead@mL+1
  2262   004A9A  C3C8  F017         	movff	main@pmR,fullSpeedAhead@mR
  2263   004A9E  C3C9  F018         	movff	main@pmR+1,fullSpeedAhead@mR+1
  2264   004AA2  EC6D  F036         	call	_fullSpeedAhead	;wreg free
  2265   004AA6                     
  2266                           ;main.c: 340:             going_forward = 1;
  2267   004AA6  0E01               	movlw	1
  2268   004AA8  0103               	movlb	3	; () banked
  2269   004AAA  6FAE               	movwf	main@going_forward& (0+255),b
  2270   004AAC                     l7780:
  2271                           
  2272                           ; BSR set to: 3
  2273                           ;main.c: 343:         measured_time = get16bitTMR0val();
  2274   004AAC  ECD6  F03A         	call	_get16bitTMR0val	;wreg free
  2275   004AB0  C002  F3AA         	movff	?_get16bitTMR0val,main@measured_time
  2276   004AB4  C003  F3AB         	movff	?_get16bitTMR0val+1,main@measured_time+1
  2277   004AB8                     
  2278                           ;main.c: 344:         if(measured_time > timings[actions_completed]){
  2279   004AB8  90D8               	bcf	status,0,c
  2280   004ABA  0103               	movlb	3	; () banked
  2281   004ABC  35B0               	rlcf	main@actions_completed& (0+255),w,b
  2282   004ABE  6ED9               	movwf	fsr2l,c
  2283   004AC0  35B1               	rlcf	(main@actions_completed+1)& (0+255),w,b
  2284   004AC2  6EDA               	movwf	fsr2h,c
  2285   004AC4  0E78               	movlw	low main@timings
  2286   004AC6  26D9               	addwf	fsr2l,f,c
  2287   004AC8  0E03               	movlw	high main@timings
  2288   004ACA  22DA               	addwfc	fsr2h,f,c
  2289   004ACC  51AA               	movf	main@measured_time& (0+255),w,b
  2290   004ACE  5CDE               	subwf	postinc2,w,c
  2291   004AD0  51AB               	movf	(main@measured_time+1)& (0+255),w,b
  2292   004AD2  58DE               	subwfb	postinc2,w,c
  2293   004AD4  B0D8               	btfsc	status,0,c
  2294   004AD6  EF6F  F025         	goto	u7881
  2295   004ADA  EF71  F025         	goto	u7880
  2296   004ADE                     u7881:
  2297   004ADE  EF3F  F026         	goto	l7828
  2298   004AE2                     u7880:
  2299   004AE2                     
  2300                           ; BSR set to: 3
  2301                           ;main.c: 345:             stop(pmL, pmR);
  2302   004AE2  C3C6  F015         	movff	main@pmL,stop@mL
  2303   004AE6  C3C7  F016         	movff	main@pmL+1,stop@mL+1
  2304   004AEA  C3C8  F017         	movff	main@pmR,stop@mR
  2305   004AEE  C3C9  F018         	movff	main@pmR+1,stop@mR+1
  2306   004AF2  ECD1  F037         	call	_stop	;wreg free
  2307   004AF6                     
  2308                           ;main.c: 346:             going_forward = 0;
  2309   004AF6  0E00               	movlw	0
  2310   004AF8  0103               	movlb	3	; () banked
  2311   004AFA  6FAE               	movwf	main@going_forward& (0+255),b
  2312   004AFC                     
  2313                           ; BSR set to: 3
  2314                           ;main.c: 347:             action_to_do = invert_action(actions[actions_completed - 1]);
  2315   004AFC  C3B0  F058         	movff	main@actions_completed,??_main
  2316   004B00  C3B1  F059         	movff	main@actions_completed+1,??_main+1
  2317   004B04  90D8               	bcf	status,0,c
  2318   004B06  3658               	rlcf	??_main^0,f,c
  2319   004B08  3659               	rlcf	(??_main+1)^0,f,c
  2320   004B0A  0EFE               	movlw	254
  2321   004B0C  2458               	addwf	??_main^0,w,c
  2322   004B0E  6E5A               	movwf	(??_main+2)^0,c
  2323   004B10  0EFF               	movlw	255
  2324   004B12  2059               	addwfc	(??_main+1)^0,w,c
  2325   004B14  6E5B               	movwf	(??_main+3)^0,c
  2326   004B16  0E3C               	movlw	low main@actions
  2327   004B18  245A               	addwf	(??_main+2)^0,w,c
  2328   004B1A  6ED9               	movwf	fsr2l,c
  2329   004B1C  0E03               	movlw	high main@actions
  2330   004B1E  205B               	addwfc	(??_main+3)^0,w,c
  2331   004B20  6EDA               	movwf	fsr2h,c
  2332   004B22  50DF               	movf	indf2,w,c
  2333   004B24  EC1E  F038         	call	_invert_action
  2334   004B28  6E5C               	movwf	(??_main+4)^0,c
  2335   004B2A  505C               	movf	(??_main+4)^0,w,c
  2336   004B2C  0103               	movlb	3	; () banked
  2337   004B2E  6FB2               	movwf	main@action_to_do& (0+255),b
  2338   004B30  6BB3               	clrf	(main@action_to_do+1)& (0+255),b
  2339   004B32                     
  2340                           ; BSR set to: 3
  2341                           ;main.c: 349:             if(action_to_do == 0){
  2342   004B32  51B2               	movf	main@action_to_do& (0+255),w,b
  2343   004B34  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2344   004B36  A4D8               	btfss	status,2,c
  2345   004B38  EFA0  F025         	goto	u7891
  2346   004B3C  EFA2  F025         	goto	u7890
  2347   004B40                     u7891:
  2348   004B40  EFAE  F025         	goto	l7794
  2349   004B44                     u7890:
  2350   004B44                     l7792:
  2351                           
  2352                           ;main.c: 350:                 turn_right_90(pmL, pmR);
  2353   004B44  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2354   004B48  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2355   004B4C  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2356   004B50  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2357   004B54  ECAC  F034         	call	_turn_right_90	;wreg free
  2358                           
  2359                           ;main.c: 351:             }
  2360   004B58  EF1D  F026         	goto	l7820
  2361   004B5C                     l7794:
  2362                           
  2363                           ; BSR set to: 3
  2364   004B5C  05B2               	decf	main@action_to_do& (0+255),w,b
  2365   004B5E  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2366   004B60  A4D8               	btfss	status,2,c
  2367   004B62  EFB5  F025         	goto	u7901
  2368   004B66  EFB7  F025         	goto	u7900
  2369   004B6A                     u7901:
  2370   004B6A  EFC3  F025         	goto	l7798
  2371   004B6E                     u7900:
  2372   004B6E                     
  2373                           ; BSR set to: 3
  2374                           ;main.c: 353:                 turn_left_90(pmL, pmR);
  2375   004B6E  C3C6  F019         	movff	main@pmL,turn_left_90@mL
  2376   004B72  C3C7  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  2377   004B76  C3C8  F01B         	movff	main@pmR,turn_left_90@mR
  2378   004B7A  C3C9  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  2379   004B7E  EC21  F035         	call	_turn_left_90	;wreg free
  2380                           
  2381                           ;main.c: 354:             }
  2382   004B82  EF1D  F026         	goto	l7820
  2383   004B86                     l7798:
  2384                           
  2385                           ; BSR set to: 3
  2386   004B86  0E02               	movlw	2
  2387   004B88  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2388   004B8A  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2389   004B8C  A4D8               	btfss	status,2,c
  2390   004B8E  EFCB  F025         	goto	u7911
  2391   004B92  EFCD  F025         	goto	u7910
  2392   004B96                     u7911:
  2393   004B96  EFE5  F025         	goto	l7806
  2394   004B9A                     u7910:
  2395   004B9A                     
  2396                           ; BSR set to: 3
  2397                           ;main.c: 356:                 turn_right_90(pmL, pmR);
  2398   004B9A  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2399   004B9E  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2400   004BA2  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2401   004BA6  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2402   004BAA  ECAC  F034         	call	_turn_right_90	;wreg free
  2403   004BAE                     
  2404                           ;main.c: 357:                 _delay((unsigned long)((250)*(64000000/4000.0)));
  2405   004BAE  0E15               	movlw	21
  2406   004BB0  6E59               	movwf	(??_main+1)^0,c
  2407   004BB2  0E4B               	movlw	75
  2408   004BB4  6E58               	movwf	??_main^0,c
  2409   004BB6  0EBE               	movlw	190
  2410   004BB8                     u8057:
  2411   004BB8  2EE8               	decfsz	wreg,f,c
  2412   004BBA  D7FE               	bra	u8057
  2413   004BBC  2E58               	decfsz	??_main^0,f,c
  2414   004BBE  D7FC               	bra	u8057
  2415   004BC0  2E59               	decfsz	(??_main+1)^0,f,c
  2416   004BC2  D7FA               	bra	u8057
  2417   004BC4  D000               	nop2	
  2418   004BC6  EFA2  F025         	goto	l7792
  2419   004BCA                     l7806:
  2420                           
  2421                           ; BSR set to: 3
  2422   004BCA  0E05               	movlw	5
  2423   004BCC  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2424   004BCE  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2425   004BD0  A4D8               	btfss	status,2,c
  2426   004BD2  EFED  F025         	goto	u7921
  2427   004BD6  EFEF  F025         	goto	u7920
  2428   004BDA                     u7921:
  2429   004BDA  EFFB  F025         	goto	l7810
  2430   004BDE                     u7920:
  2431   004BDE                     
  2432                           ; BSR set to: 3
  2433                           ;main.c: 361:                 turn_right_135(pmL, pmR);
  2434   004BDE  C3C6  F019         	movff	main@pmL,turn_right_135@mL
  2435   004BE2  C3C7  F01A         	movff	main@pmL+1,turn_right_135@mL+1
  2436   004BE6  C3C8  F01B         	movff	main@pmR,turn_right_135@mR
  2437   004BEA  C3C9  F01C         	movff	main@pmR+1,turn_right_135@mR+1
  2438   004BEE  ECC0  F033         	call	_turn_right_135	;wreg free
  2439                           
  2440                           ;main.c: 362:             }
  2441   004BF2  EF1D  F026         	goto	l7820
  2442   004BF6                     l7810:
  2443                           
  2444                           ; BSR set to: 3
  2445   004BF6  0E06               	movlw	6
  2446   004BF8  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2447   004BFA  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2448   004BFC  A4D8               	btfss	status,2,c
  2449   004BFE  EF03  F026         	goto	u7931
  2450   004C02  EF05  F026         	goto	u7930
  2451   004C06                     u7931:
  2452   004C06  EF11  F026         	goto	l7814
  2453   004C0A                     u7930:
  2454   004C0A                     
  2455                           ; BSR set to: 3
  2456                           ;main.c: 364:                 turn_left_135(pmL, pmR);
  2457   004C0A  C3C6  F019         	movff	main@pmL,turn_left_135@mL
  2458   004C0E  C3C7  F01A         	movff	main@pmL+1,turn_left_135@mL+1
  2459   004C12  C3C8  F01B         	movff	main@pmR,turn_left_135@mR
  2460   004C16  C3C9  F01C         	movff	main@pmR+1,turn_left_135@mR+1
  2461   004C1A  EC36  F034         	call	_turn_left_135	;wreg free
  2462                           
  2463                           ;main.c: 365:             }
  2464   004C1E  EF1D  F026         	goto	l7820
  2465   004C22                     l7814:
  2466                           
  2467                           ; BSR set to: 3
  2468   004C22  0E08               	movlw	8
  2469   004C24  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2470   004C26  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2471   004C28  A4D8               	btfss	status,2,c
  2472   004C2A  EF19  F026         	goto	u7941
  2473   004C2E  EF1B  F026         	goto	u7940
  2474   004C32                     u7941:
  2475   004C32  EF1D  F026         	goto	l397
  2476   004C36                     u7940:
  2477   004C36  EF1D  F026         	goto	l7820
  2478   004C3A                     l397:
  2479   004C3A                     l7820:
  2480                           
  2481                           ;main.c: 372:             _delay((unsigned long)((250)*(64000000/4000.0)));
  2482   004C3A  0E15               	movlw	21
  2483   004C3C  6E59               	movwf	(??_main+1)^0,c
  2484   004C3E  0E4B               	movlw	75
  2485   004C40  6E58               	movwf	??_main^0,c
  2486   004C42  0EBE               	movlw	190
  2487   004C44                     u8067:
  2488   004C44  2EE8               	decfsz	wreg,f,c
  2489   004C46  D7FE               	bra	u8067
  2490   004C48  2E58               	decfsz	??_main^0,f,c
  2491   004C4A  D7FC               	bra	u8067
  2492   004C4C  2E59               	decfsz	(??_main+1)^0,f,c
  2493   004C4E  D7FA               	bra	u8067
  2494   004C50  D000               	nop2	
  2495   004C52                     
  2496                           ;main.c: 374:             sprintf(clear_val,"action = %d \r\n",action_to_do);
  2497   004C52  0E64               	movlw	low main@clear_val
  2498   004C54  6E1B               	movwf	sprintf@s^0,c
  2499   004C56  0E03               	movlw	high main@clear_val
  2500   004C58  6E1C               	movwf	(sprintf@s+1)^0,c
  2501   004C5A  0E71               	movlw	low STR_1
  2502   004C5C  6E1D               	movwf	sprintf@fmt^0,c
  2503   004C5E  C3B2  F01E         	movff	main@action_to_do,?_sprintf+3
  2504   004C62  C3B3  F01F         	movff	main@action_to_do+1,?_sprintf+4
  2505   004C66  ECFF  F039         	call	_sprintf	;wreg free
  2506   004C6A                     
  2507                           ;main.c: 375:             sendStringSerial4(pclear_val);
  2508   004C6A  C3A8  F003         	movff	main@pclear_val,sendStringSerial4@string
  2509   004C6E  C3A9  F004         	movff	main@pclear_val+1,sendStringSerial4@string+1
  2510   004C72  EC53  F03A         	call	_sendStringSerial4	;wreg free
  2511   004C76                     
  2512                           ;main.c: 376:         actions_completed -=1 ;
  2513   004C76  0103               	movlb	3	; () banked
  2514   004C78  07B0               	decf	main@actions_completed& (0+255),f,b
  2515   004C7A  A0D8               	btfss	status,0,c
  2516   004C7C  07B1               	decf	(main@actions_completed+1)& (0+255),f,b
  2517   004C7E                     l7828:
  2518                           
  2519                           ; BSR set to: 3
  2520                           ;main.c: 378:     _delay((unsigned long)((10)*(64000000/4000.0)));
  2521   004C7E  0ED0               	movlw	208
  2522   004C80  6E58               	movwf	??_main^0,c
  2523   004C82  0ECA               	movlw	202
  2524   004C84                     u8077:
  2525   004C84  2EE8               	decfsz	wreg,f,c
  2526   004C86  D7FE               	bra	u8077
  2527   004C88  2E58               	decfsz	??_main^0,f,c
  2528   004C8A  D7FC               	bra	u8077
  2529   004C8C                     l7830:
  2530                           
  2531                           ;main.c: 336:     while(actions_completed >= 0){
  2532   004C8C  0103               	movlb	3	; () banked
  2533   004C8E  BFB1               	btfsc	(main@actions_completed+1)& (0+255),7,b
  2534   004C90  EF4E  F026         	goto	u7950
  2535   004C94  EF4C  F026         	goto	u7951
  2536   004C98                     u7951:
  2537   004C98  EF3F  F025         	goto	l7772
  2538   004C9C                     u7950:
  2539   004C9C                     
  2540                           ; BSR set to: 3
  2541                           ;main.c: 380:     stop(pmL, pmR);
  2542   004C9C  C3C6  F015         	movff	main@pmL,stop@mL
  2543   004CA0  C3C7  F016         	movff	main@pmL+1,stop@mL+1
  2544   004CA4  C3C8  F017         	movff	main@pmR,stop@mR
  2545   004CA8  C3C9  F018         	movff	main@pmR+1,stop@mR+1
  2546   004CAC  ECD1  F037         	call	_stop	;wreg free
  2547   004CB0                     l7834:
  2548                           
  2549                           ;main.c: 382:         LATHbits.LATH3 = !LATHbits.LATH3;
  2550   004CB0  A680               	btfss	128,3,c	;volatile
  2551   004CB2  EF5D  F026         	goto	u7961
  2552   004CB6  EF61  F026         	goto	u7960
  2553   004CBA                     u7961:
  2554   004CBA  6A58               	clrf	??_main^0,c
  2555   004CBC  2A58               	incf	??_main^0,f,c
  2556   004CBE  EF62  F026         	goto	u7978
  2557   004CC2                     u7960:
  2558   004CC2  6A58               	clrf	??_main^0,c
  2559   004CC4                     u7978:
  2560   004CC4  4658               	rlncf	??_main^0,f,c
  2561   004CC6  4658               	rlncf	??_main^0,f,c
  2562   004CC8  4658               	rlncf	??_main^0,f,c
  2563   004CCA  5080               	movf	128,w,c	;volatile
  2564   004CCC  1858               	xorwf	??_main^0,w,c
  2565   004CCE  0BF7               	andlw	-9
  2566   004CD0  1858               	xorwf	??_main^0,w,c
  2567   004CD2  6E80               	movwf	128,c	;volatile
  2568   004CD4                     
  2569                           ;main.c: 383:         _delay((unsigned long)((500)*(64000000/4000.0)));
  2570   004CD4  0E29               	movlw	41
  2571   004CD6  6E59               	movwf	(??_main+1)^0,c
  2572   004CD8  0E96               	movlw	150
  2573   004CDA  6E58               	movwf	??_main^0,c
  2574   004CDC  0E7F               	movlw	127
  2575   004CDE                     u8087:
  2576   004CDE  2EE8               	decfsz	wreg,f,c
  2577   004CE0  D7FE               	bra	u8087
  2578   004CE2  2E58               	decfsz	??_main^0,f,c
  2579   004CE4  D7FC               	bra	u8087
  2580   004CE6  2E59               	decfsz	(??_main+1)^0,f,c
  2581   004CE8  D7FA               	bra	u8087
  2582   004CEA  0000               	nop	
  2583   004CEC  EF58  F026         	goto	l7834
  2584   004CF0  EF12  F000         	goto	start
  2585   004CF4                     __end_of_main:
  2586                           	callstack 0
  2587                           
  2588 ;; *************** function _turn_right_90 *****************
  2589 ;; Defined at:
  2590 ;;		line 143 in file "dc_motor.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2593 ;;		 -> main@motorL(9), 
  2594 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2595 ;;		 -> main@motorR(9), 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2610 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2611 ;;Total ram usage:        6 bytes
  2612 ;; Hardware stack levels used: 1
  2613 ;; Hardware stack levels required when called: 5
  2614 ;; This function calls:
  2615 ;;		_setMotorPWM
  2616 ;;		_stop
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text1
  2623   006958                     __ptext1:
  2624                           	callstack 0
  2625   006958                     _turn_right_90:
  2626                           	callstack 25
  2627   006958                     
  2628                           ;dc_motor.c: 144:     mL->direction = 0;
  2629   006958  EE20 F001          	lfsr	2,1
  2630   00695C  5019               	movf	turn_right_90@mL^0,w,c
  2631   00695E  26D9               	addwf	fsr2l,f,c
  2632   006960  501A               	movf	(turn_right_90@mL+1)^0,w,c
  2633   006962  22DA               	addwfc	fsr2h,f,c
  2634   006964  6ADF               	clrf	indf2,c
  2635                           
  2636                           ;dc_motor.c: 145:     mR->direction = 1;
  2637   006966  EE20 F001          	lfsr	2,1
  2638   00696A  501B               	movf	turn_right_90@mR^0,w,c
  2639   00696C  26D9               	addwf	fsr2l,f,c
  2640   00696E  501C               	movf	(turn_right_90@mR+1)^0,w,c
  2641   006970  22DA               	addwfc	fsr2h,f,c
  2642   006972  0E01               	movlw	1
  2643   006974  6EDF               	movwf	indf2,c
  2644                           
  2645                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2646   006976  EFF3  F034         	goto	l222
  2647   00697A                     l5306:
  2648                           
  2649                           ;dc_motor.c: 148:         if ((mL->power) < 70) (mL->power) += 1;
  2650   00697A  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2651   00697E  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2652   006982  0E46               	movlw	70
  2653   006984  60DF               	cpfslt	indf2,c
  2654   006986  EFC7  F034         	goto	u5361
  2655   00698A  EFC9  F034         	goto	u5360
  2656   00698E                     u5361:
  2657   00698E  EFCE  F034         	goto	l5310
  2658   006992                     u5360:
  2659   006992  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2660   006996  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2661   00699A  2ADF               	incf	indf2,f,c
  2662   00699C                     l5310:
  2663                           
  2664                           ;dc_motor.c: 149:         if ((mR->power) < 70) (mR->power) += 1;
  2665   00699C  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2666   0069A0  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2667   0069A4  0E46               	movlw	70
  2668   0069A6  60DF               	cpfslt	indf2,c
  2669   0069A8  EFD8  F034         	goto	u5371
  2670   0069AC  EFDA  F034         	goto	u5370
  2671   0069B0                     u5371:
  2672   0069B0  EFDF  F034         	goto	l5314
  2673   0069B4                     u5370:
  2674   0069B4  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2675   0069B8  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2676   0069BC  2ADF               	incf	indf2,f,c
  2677   0069BE                     l5314:
  2678                           
  2679                           ;dc_motor.c: 151:         setMotorPWM(mL);
  2680   0069BE  C019  F00F         	movff	turn_right_90@mL,setMotorPWM@m
  2681   0069C2  C01A  F010         	movff	turn_right_90@mL+1,setMotorPWM@m+1
  2682   0069C6  EC84  F031         	call	_setMotorPWM	;wreg free
  2683   0069CA                     
  2684                           ;dc_motor.c: 152:         setMotorPWM(mR);
  2685   0069CA  C01B  F00F         	movff	turn_right_90@mR,setMotorPWM@m
  2686   0069CE  C01C  F010         	movff	turn_right_90@mR+1,setMotorPWM@m+1
  2687   0069D2  EC84  F031         	call	_setMotorPWM	;wreg free
  2688   0069D6                     
  2689                           ;dc_motor.c: 153:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2690   0069D6  0E15               	movlw	21
  2691   0069D8  6E1D               	movwf	??_turn_right_90^0,c
  2692   0069DA  0EC6               	movlw	198
  2693   0069DC                     u8097:
  2694   0069DC  2EE8               	decfsz	wreg,f,c
  2695   0069DE  D7FE               	bra	u8097
  2696   0069E0  2E1D               	decfsz	??_turn_right_90^0,f,c
  2697   0069E2  D7FC               	bra	u8097
  2698   0069E4  D000               	nop2	
  2699   0069E6                     l222:
  2700                           
  2701                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2702   0069E6  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2703   0069EA  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2704   0069EE  0E45               	movlw	69
  2705   0069F0  64DF               	cpfsgt	indf2,c
  2706   0069F2  EFFD  F034         	goto	u5381
  2707   0069F6  EFFF  F034         	goto	u5380
  2708   0069FA                     u5381:
  2709   0069FA  EFBD  F034         	goto	l5306
  2710   0069FE                     u5380:
  2711   0069FE  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2712   006A02  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2713   006A06  0E45               	movlw	69
  2714   006A08  64DF               	cpfsgt	indf2,c
  2715   006A0A  EF09  F035         	goto	u5391
  2716   006A0E  EF0B  F035         	goto	u5390
  2717   006A12                     u5391:
  2718   006A12  EFBD  F034         	goto	l5306
  2719   006A16                     u5390:
  2720   006A16                     
  2721                           ;dc_motor.c: 155:     _delay((unsigned long)((450)*(64000000/4000.0)));
  2722   006A16  0E25               	movlw	37
  2723   006A18  6E1E               	movwf	(??_turn_right_90+1)^0,c
  2724   006A1A  0E87               	movlw	135
  2725   006A1C  6E1D               	movwf	??_turn_right_90^0,c
  2726   006A1E  0E8C               	movlw	140
  2727   006A20                     u8107:
  2728   006A20  2EE8               	decfsz	wreg,f,c
  2729   006A22  D7FE               	bra	u8107
  2730   006A24  2E1D               	decfsz	??_turn_right_90^0,f,c
  2731   006A26  D7FC               	bra	u8107
  2732   006A28  2E1E               	decfsz	(??_turn_right_90+1)^0,f,c
  2733   006A2A  D7FA               	bra	u8107
  2734   006A2C                     
  2735                           ;dc_motor.c: 156:     stop(mL, mR);
  2736   006A2C  C019  F015         	movff	turn_right_90@mL,stop@mL
  2737   006A30  C01A  F016         	movff	turn_right_90@mL+1,stop@mL+1
  2738   006A34  C01B  F017         	movff	turn_right_90@mR,stop@mR
  2739   006A38  C01C  F018         	movff	turn_right_90@mR+1,stop@mR+1
  2740   006A3C  ECD1  F037         	call	_stop	;wreg free
  2741   006A40  0012               	return		;funcret
  2742   006A42                     __end_of_turn_right_90:
  2743                           	callstack 0
  2744                           
  2745 ;; *************** function _turn_right_135 *****************
  2746 ;; Defined at:
  2747 ;;		line 177 in file "dc_motor.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2750 ;;		 -> main@motorL(9), 
  2751 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2752 ;;		 -> main@motorR(9), 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2764 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2766 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2767 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2768 ;;Total ram usage:        6 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 5
  2771 ;; This function calls:
  2772 ;;		_setMotorPWM
  2773 ;;		_stop
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text2
  2780   006780                     __ptext2:
  2781                           	callstack 0
  2782   006780                     _turn_right_135:
  2783                           	callstack 25
  2784   006780                     
  2785                           ;dc_motor.c: 178:     mL->direction = 0;
  2786   006780  EE20 F001          	lfsr	2,1
  2787   006784  5019               	movf	turn_right_135@mL^0,w,c
  2788   006786  26D9               	addwf	fsr2l,f,c
  2789   006788  501A               	movf	(turn_right_135@mL+1)^0,w,c
  2790   00678A  22DA               	addwfc	fsr2h,f,c
  2791   00678C  6ADF               	clrf	indf2,c
  2792                           
  2793                           ;dc_motor.c: 179:     mR->direction = 1;
  2794   00678E  EE20 F001          	lfsr	2,1
  2795   006792  501B               	movf	turn_right_135@mR^0,w,c
  2796   006794  26D9               	addwf	fsr2l,f,c
  2797   006796  501C               	movf	(turn_right_135@mR+1)^0,w,c
  2798   006798  22DA               	addwfc	fsr2h,f,c
  2799   00679A  0E01               	movlw	1
  2800   00679C  6EDF               	movwf	indf2,c
  2801                           
  2802                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2803   00679E  EF07  F034         	goto	l238
  2804   0067A2                     l5350:
  2805                           
  2806                           ;dc_motor.c: 182:         if ((mL->power) < 70) (mL->power) += 1;
  2807   0067A2  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2808   0067A6  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2809   0067AA  0E46               	movlw	70
  2810   0067AC  60DF               	cpfslt	indf2,c
  2811   0067AE  EFDB  F033         	goto	u5441
  2812   0067B2  EFDD  F033         	goto	u5440
  2813   0067B6                     u5441:
  2814   0067B6  EFE2  F033         	goto	l5354
  2815   0067BA                     u5440:
  2816   0067BA  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2817   0067BE  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2818   0067C2  2ADF               	incf	indf2,f,c
  2819   0067C4                     l5354:
  2820                           
  2821                           ;dc_motor.c: 183:         if ((mR->power) < 70) (mR->power) += 1;
  2822   0067C4  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2823   0067C8  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2824   0067CC  0E46               	movlw	70
  2825   0067CE  60DF               	cpfslt	indf2,c
  2826   0067D0  EFEC  F033         	goto	u5451
  2827   0067D4  EFEE  F033         	goto	u5450
  2828   0067D8                     u5451:
  2829   0067D8  EFF3  F033         	goto	l5358
  2830   0067DC                     u5450:
  2831   0067DC  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2832   0067E0  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2833   0067E4  2ADF               	incf	indf2,f,c
  2834   0067E6                     l5358:
  2835                           
  2836                           ;dc_motor.c: 185:         setMotorPWM(mL);
  2837   0067E6  C019  F00F         	movff	turn_right_135@mL,setMotorPWM@m
  2838   0067EA  C01A  F010         	movff	turn_right_135@mL+1,setMotorPWM@m+1
  2839   0067EE  EC84  F031         	call	_setMotorPWM	;wreg free
  2840   0067F2                     
  2841                           ;dc_motor.c: 186:         setMotorPWM(mR);
  2842   0067F2  C01B  F00F         	movff	turn_right_135@mR,setMotorPWM@m
  2843   0067F6  C01C  F010         	movff	turn_right_135@mR+1,setMotorPWM@m+1
  2844   0067FA  EC84  F031         	call	_setMotorPWM	;wreg free
  2845   0067FE                     
  2846                           ;dc_motor.c: 187:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2847   0067FE  0E15               	movlw	21
  2848   006800  6E1D               	movwf	??_turn_right_135^0,c
  2849   006802  0EC6               	movlw	198
  2850   006804                     u8117:
  2851   006804  2EE8               	decfsz	wreg,f,c
  2852   006806  D7FE               	bra	u8117
  2853   006808  2E1D               	decfsz	??_turn_right_135^0,f,c
  2854   00680A  D7FC               	bra	u8117
  2855   00680C  D000               	nop2	
  2856   00680E                     l238:
  2857                           
  2858                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2859   00680E  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2860   006812  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2861   006816  0E45               	movlw	69
  2862   006818  64DF               	cpfsgt	indf2,c
  2863   00681A  EF11  F034         	goto	u5461
  2864   00681E  EF13  F034         	goto	u5460
  2865   006822                     u5461:
  2866   006822  EFD1  F033         	goto	l5350
  2867   006826                     u5460:
  2868   006826  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2869   00682A  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2870   00682E  0E45               	movlw	69
  2871   006830  64DF               	cpfsgt	indf2,c
  2872   006832  EF1D  F034         	goto	u5471
  2873   006836  EF1F  F034         	goto	u5470
  2874   00683A                     u5471:
  2875   00683A  EFD1  F033         	goto	l5350
  2876   00683E                     u5470:
  2877   00683E                     
  2878                           ;dc_motor.c: 189:     _delay((unsigned long)((700)*(64000000/4000.0)));
  2879   00683E  0E39               	movlw	57
  2880   006840  6E1E               	movwf	(??_turn_right_135+1)^0,c
  2881   006842  0ED2               	movlw	210
  2882   006844  6E1D               	movwf	??_turn_right_135^0,c
  2883   006846  0E4C               	movlw	76
  2884   006848                     u8127:
  2885   006848  2EE8               	decfsz	wreg,f,c
  2886   00684A  D7FE               	bra	u8127
  2887   00684C  2E1D               	decfsz	??_turn_right_135^0,f,c
  2888   00684E  D7FC               	bra	u8127
  2889   006850  2E1E               	decfsz	(??_turn_right_135+1)^0,f,c
  2890   006852  D7FA               	bra	u8127
  2891   006854  D000               	nop2	
  2892   006856                     
  2893                           ;dc_motor.c: 190:     stop(mL, mR);
  2894   006856  C019  F015         	movff	turn_right_135@mL,stop@mL
  2895   00685A  C01A  F016         	movff	turn_right_135@mL+1,stop@mL+1
  2896   00685E  C01B  F017         	movff	turn_right_135@mR,stop@mR
  2897   006862  C01C  F018         	movff	turn_right_135@mR+1,stop@mR+1
  2898   006866  ECD1  F037         	call	_stop	;wreg free
  2899   00686A  0012               	return		;funcret
  2900   00686C                     __end_of_turn_right_135:
  2901                           	callstack 0
  2902                           
  2903 ;; *************** function _turn_left_90 *****************
  2904 ;; Defined at:
  2905 ;;		line 126 in file "dc_motor.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2908 ;;		 -> main@motorL(9), 
  2909 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2910 ;;		 -> main@motorR(9), 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2926 ;;Total ram usage:        6 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; Hardware stack levels required when called: 5
  2929 ;; This function calls:
  2930 ;;		_setMotorPWM
  2931 ;;		_stop
  2932 ;; This function is called by:
  2933 ;;		_main
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text3
  2938   006A42                     __ptext3:
  2939                           	callstack 0
  2940   006A42                     _turn_left_90:
  2941                           	callstack 25
  2942   006A42                     
  2943                           ;dc_motor.c: 127:     mL->direction = 1;
  2944   006A42  EE20 F001          	lfsr	2,1
  2945   006A46  5019               	movf	turn_left_90@mL^0,w,c
  2946   006A48  26D9               	addwf	fsr2l,f,c
  2947   006A4A  501A               	movf	(turn_left_90@mL+1)^0,w,c
  2948   006A4C  22DA               	addwfc	fsr2h,f,c
  2949   006A4E  0E01               	movlw	1
  2950   006A50  6EDF               	movwf	indf2,c
  2951                           
  2952                           ;dc_motor.c: 128:     mR->direction = 0;
  2953   006A52  EE20 F001          	lfsr	2,1
  2954   006A56  501B               	movf	turn_left_90@mR^0,w,c
  2955   006A58  26D9               	addwf	fsr2l,f,c
  2956   006A5A  501C               	movf	(turn_left_90@mR+1)^0,w,c
  2957   006A5C  22DA               	addwfc	fsr2h,f,c
  2958   006A5E  6ADF               	clrf	indf2,c
  2959                           
  2960                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  2961   006A60  EF68  F035         	goto	l214
  2962   006A64                     l5284:
  2963                           
  2964                           ;dc_motor.c: 131:         if ((mL->power) < 70) (mL->power) += 1;
  2965   006A64  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2966   006A68  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2967   006A6C  0E46               	movlw	70
  2968   006A6E  60DF               	cpfslt	indf2,c
  2969   006A70  EF3C  F035         	goto	u5321
  2970   006A74  EF3E  F035         	goto	u5320
  2971   006A78                     u5321:
  2972   006A78  EF43  F035         	goto	l5288
  2973   006A7C                     u5320:
  2974   006A7C  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2975   006A80  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2976   006A84  2ADF               	incf	indf2,f,c
  2977   006A86                     l5288:
  2978                           
  2979                           ;dc_motor.c: 132:         if ((mR->power) < 70) (mR->power) += 1;
  2980   006A86  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2981   006A8A  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2982   006A8E  0E46               	movlw	70
  2983   006A90  60DF               	cpfslt	indf2,c
  2984   006A92  EF4D  F035         	goto	u5331
  2985   006A96  EF4F  F035         	goto	u5330
  2986   006A9A                     u5331:
  2987   006A9A  EF54  F035         	goto	l5292
  2988   006A9E                     u5330:
  2989   006A9E  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2990   006AA2  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2991   006AA6  2ADF               	incf	indf2,f,c
  2992   006AA8                     l5292:
  2993                           
  2994                           ;dc_motor.c: 134:         setMotorPWM(mL);
  2995   006AA8  C019  F00F         	movff	turn_left_90@mL,setMotorPWM@m
  2996   006AAC  C01A  F010         	movff	turn_left_90@mL+1,setMotorPWM@m+1
  2997   006AB0  EC84  F031         	call	_setMotorPWM	;wreg free
  2998   006AB4                     
  2999                           ;dc_motor.c: 135:         setMotorPWM(mR);
  3000   006AB4  C01B  F00F         	movff	turn_left_90@mR,setMotorPWM@m
  3001   006AB8  C01C  F010         	movff	turn_left_90@mR+1,setMotorPWM@m+1
  3002   006ABC  EC84  F031         	call	_setMotorPWM	;wreg free
  3003   006AC0                     
  3004                           ;dc_motor.c: 136:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3005   006AC0  0E15               	movlw	21
  3006   006AC2  6E1D               	movwf	??_turn_left_90^0,c
  3007   006AC4  0EC6               	movlw	198
  3008   006AC6                     u8137:
  3009   006AC6  2EE8               	decfsz	wreg,f,c
  3010   006AC8  D7FE               	bra	u8137
  3011   006ACA  2E1D               	decfsz	??_turn_left_90^0,f,c
  3012   006ACC  D7FC               	bra	u8137
  3013   006ACE  D000               	nop2	
  3014   006AD0                     l214:
  3015                           
  3016                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  3017   006AD0  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  3018   006AD4  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  3019   006AD8  0E45               	movlw	69
  3020   006ADA  64DF               	cpfsgt	indf2,c
  3021   006ADC  EF72  F035         	goto	u5341
  3022   006AE0  EF74  F035         	goto	u5340
  3023   006AE4                     u5341:
  3024   006AE4  EF32  F035         	goto	l5284
  3025   006AE8                     u5340:
  3026   006AE8  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  3027   006AEC  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  3028   006AF0  0E45               	movlw	69
  3029   006AF2  64DF               	cpfsgt	indf2,c
  3030   006AF4  EF7E  F035         	goto	u5351
  3031   006AF8  EF80  F035         	goto	u5350
  3032   006AFC                     u5351:
  3033   006AFC  EF32  F035         	goto	l5284
  3034   006B00                     u5350:
  3035   006B00                     
  3036                           ;dc_motor.c: 138:     _delay((unsigned long)((450)*(64000000/4000.0)));
  3037   006B00  0E25               	movlw	37
  3038   006B02  6E1E               	movwf	(??_turn_left_90+1)^0,c
  3039   006B04  0E87               	movlw	135
  3040   006B06  6E1D               	movwf	??_turn_left_90^0,c
  3041   006B08  0E8C               	movlw	140
  3042   006B0A                     u8147:
  3043   006B0A  2EE8               	decfsz	wreg,f,c
  3044   006B0C  D7FE               	bra	u8147
  3045   006B0E  2E1D               	decfsz	??_turn_left_90^0,f,c
  3046   006B10  D7FC               	bra	u8147
  3047   006B12  2E1E               	decfsz	(??_turn_left_90+1)^0,f,c
  3048   006B14  D7FA               	bra	u8147
  3049   006B16                     
  3050                           ;dc_motor.c: 139:     stop(mL, mR);
  3051   006B16  C019  F015         	movff	turn_left_90@mL,stop@mL
  3052   006B1A  C01A  F016         	movff	turn_left_90@mL+1,stop@mL+1
  3053   006B1E  C01B  F017         	movff	turn_left_90@mR,stop@mR
  3054   006B22  C01C  F018         	movff	turn_left_90@mR+1,stop@mR+1
  3055   006B26  ECD1  F037         	call	_stop	;wreg free
  3056   006B2A  0012               	return		;funcret
  3057   006B2C                     __end_of_turn_left_90:
  3058                           	callstack 0
  3059                           
  3060 ;; *************** function _turn_left_135 *****************
  3061 ;; Defined at:
  3062 ;;		line 160 in file "dc_motor.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  3065 ;;		 -> main@motorL(9), 
  3066 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  3067 ;;		 -> main@motorR(9), 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;		None
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3082 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3083 ;;Total ram usage:        6 bytes
  3084 ;; Hardware stack levels used: 1
  3085 ;; Hardware stack levels required when called: 5
  3086 ;; This function calls:
  3087 ;;		_setMotorPWM
  3088 ;;		_stop
  3089 ;; This function is called by:
  3090 ;;		_main
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text4
  3095   00686C                     __ptext4:
  3096                           	callstack 0
  3097   00686C                     _turn_left_135:
  3098                           	callstack 25
  3099   00686C                     
  3100                           ;dc_motor.c: 161:     mL->direction = 1;
  3101   00686C  EE20 F001          	lfsr	2,1
  3102   006870  5019               	movf	turn_left_135@mL^0,w,c
  3103   006872  26D9               	addwf	fsr2l,f,c
  3104   006874  501A               	movf	(turn_left_135@mL+1)^0,w,c
  3105   006876  22DA               	addwfc	fsr2h,f,c
  3106   006878  0E01               	movlw	1
  3107   00687A  6EDF               	movwf	indf2,c
  3108                           
  3109                           ;dc_motor.c: 162:     mR->direction = 0;
  3110   00687C  EE20 F001          	lfsr	2,1
  3111   006880  501B               	movf	turn_left_135@mR^0,w,c
  3112   006882  26D9               	addwf	fsr2l,f,c
  3113   006884  501C               	movf	(turn_left_135@mR+1)^0,w,c
  3114   006886  22DA               	addwfc	fsr2h,f,c
  3115   006888  6ADF               	clrf	indf2,c
  3116                           
  3117                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  3118   00688A  EF7D  F034         	goto	l230
  3119   00688E                     l5328:
  3120                           
  3121                           ;dc_motor.c: 165:         if ((mL->power) < 70) (mL->power) += 1;
  3122   00688E  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3123   006892  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3124   006896  0E46               	movlw	70
  3125   006898  60DF               	cpfslt	indf2,c
  3126   00689A  EF51  F034         	goto	u5401
  3127   00689E  EF53  F034         	goto	u5400
  3128   0068A2                     u5401:
  3129   0068A2  EF58  F034         	goto	l5332
  3130   0068A6                     u5400:
  3131   0068A6  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3132   0068AA  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3133   0068AE  2ADF               	incf	indf2,f,c
  3134   0068B0                     l5332:
  3135                           
  3136                           ;dc_motor.c: 166:         if ((mR->power) < 70) (mR->power) += 1;
  3137   0068B0  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3138   0068B4  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3139   0068B8  0E46               	movlw	70
  3140   0068BA  60DF               	cpfslt	indf2,c
  3141   0068BC  EF62  F034         	goto	u5411
  3142   0068C0  EF64  F034         	goto	u5410
  3143   0068C4                     u5411:
  3144   0068C4  EF69  F034         	goto	l5336
  3145   0068C8                     u5410:
  3146   0068C8  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3147   0068CC  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3148   0068D0  2ADF               	incf	indf2,f,c
  3149   0068D2                     l5336:
  3150                           
  3151                           ;dc_motor.c: 168:         setMotorPWM(mL);
  3152   0068D2  C019  F00F         	movff	turn_left_135@mL,setMotorPWM@m
  3153   0068D6  C01A  F010         	movff	turn_left_135@mL+1,setMotorPWM@m+1
  3154   0068DA  EC84  F031         	call	_setMotorPWM	;wreg free
  3155   0068DE                     
  3156                           ;dc_motor.c: 169:         setMotorPWM(mR);
  3157   0068DE  C01B  F00F         	movff	turn_left_135@mR,setMotorPWM@m
  3158   0068E2  C01C  F010         	movff	turn_left_135@mR+1,setMotorPWM@m+1
  3159   0068E6  EC84  F031         	call	_setMotorPWM	;wreg free
  3160   0068EA                     
  3161                           ;dc_motor.c: 170:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3162   0068EA  0E15               	movlw	21
  3163   0068EC  6E1D               	movwf	??_turn_left_135^0,c
  3164   0068EE  0EC6               	movlw	198
  3165   0068F0                     u8157:
  3166   0068F0  2EE8               	decfsz	wreg,f,c
  3167   0068F2  D7FE               	bra	u8157
  3168   0068F4  2E1D               	decfsz	??_turn_left_135^0,f,c
  3169   0068F6  D7FC               	bra	u8157
  3170   0068F8  D000               	nop2	
  3171   0068FA                     l230:
  3172                           
  3173                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  3174   0068FA  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3175   0068FE  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3176   006902  0E45               	movlw	69
  3177   006904  64DF               	cpfsgt	indf2,c
  3178   006906  EF87  F034         	goto	u5421
  3179   00690A  EF89  F034         	goto	u5420
  3180   00690E                     u5421:
  3181   00690E  EF47  F034         	goto	l5328
  3182   006912                     u5420:
  3183   006912  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3184   006916  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3185   00691A  0E45               	movlw	69
  3186   00691C  64DF               	cpfsgt	indf2,c
  3187   00691E  EF93  F034         	goto	u5431
  3188   006922  EF95  F034         	goto	u5430
  3189   006926                     u5431:
  3190   006926  EF47  F034         	goto	l5328
  3191   00692A                     u5430:
  3192   00692A                     
  3193                           ;dc_motor.c: 172:     _delay((unsigned long)((700)*(64000000/4000.0)));
  3194   00692A  0E39               	movlw	57
  3195   00692C  6E1E               	movwf	(??_turn_left_135+1)^0,c
  3196   00692E  0ED2               	movlw	210
  3197   006930  6E1D               	movwf	??_turn_left_135^0,c
  3198   006932  0E4C               	movlw	76
  3199   006934                     u8167:
  3200   006934  2EE8               	decfsz	wreg,f,c
  3201   006936  D7FE               	bra	u8167
  3202   006938  2E1D               	decfsz	??_turn_left_135^0,f,c
  3203   00693A  D7FC               	bra	u8167
  3204   00693C  2E1E               	decfsz	(??_turn_left_135+1)^0,f,c
  3205   00693E  D7FA               	bra	u8167
  3206   006940  D000               	nop2	
  3207   006942                     
  3208                           ;dc_motor.c: 173:     stop(mL, mR);
  3209   006942  C019  F015         	movff	turn_left_135@mL,stop@mL
  3210   006946  C01A  F016         	movff	turn_left_135@mL+1,stop@mL+1
  3211   00694A  C01B  F017         	movff	turn_left_135@mR,stop@mR
  3212   00694E  C01C  F018         	movff	turn_left_135@mR+1,stop@mR+1
  3213   006952  ECD1  F037         	call	_stop	;wreg free
  3214   006956  0012               	return		;funcret
  3215   006958                     __end_of_turn_left_135:
  3216                           	callstack 0
  3217                           
  3218 ;; *************** function _sprintf *****************
  3219 ;; Defined at:
  3220 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  s               2   26[COMRAM] PTR unsigned char 
  3223 ;;		 -> main@clear_val(20), 
  3224 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  3225 ;;		 -> STR_2(15), STR_1(15), 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  f              12   32[COMRAM] struct _IO_FILE
  3228 ;;  ret             2    0        int 
  3229 ;;  ap              1   31[COMRAM] PTR void [1]
  3230 ;;		 -> ?_sprintf(2), 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  2   26[COMRAM] int 
  3233 ;; Registers used:
  3234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3240 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3241 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3243 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3244 ;;Total ram usage:       18 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; Hardware stack levels required when called: 6
  3247 ;; This function calls:
  3248 ;;		_vfprintf
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text5
  3255   0073FE                     __ptext5:
  3256                           	callstack 0
  3257   0073FE                     _sprintf:
  3258                           	callstack 24
  3259   0073FE  0E1E               	movlw	low (?_sprintf+3)
  3260   007400  6E20               	movwf	sprintf@ap^0,c
  3261   007402  C01B  F021         	movff	sprintf@s,sprintf@f
  3262   007406  C01C  F022         	movff	sprintf@s+1,sprintf@f+1
  3263   00740A  0E00               	movlw	0
  3264   00740C  6E25               	movwf	(sprintf@f+4)^0,c
  3265   00740E  0E00               	movlw	0
  3266   007410  6E24               	movwf	(sprintf@f+3)^0,c
  3267   007412  0E00               	movlw	0
  3268   007414  6E2C               	movwf	(sprintf@f+11)^0,c
  3269   007416  0E00               	movlw	0
  3270   007418  6E2B               	movwf	(sprintf@f+10)^0,c
  3271   00741A  0E21               	movlw	low sprintf@f
  3272   00741C  6E17               	movwf	vfprintf@fp^0,c
  3273   00741E  C01D  F018         	movff	sprintf@fmt,vfprintf@fmt
  3274   007422  0E20               	movlw	low sprintf@ap
  3275   007424  6E19               	movwf	vfprintf@ap^0,c
  3276   007426  ECBD  F039         	call	_vfprintf	;wreg free
  3277   00742A  5024               	movf	(sprintf@f+3)^0,w,c
  3278   00742C  241B               	addwf	sprintf@s^0,w,c
  3279   00742E  6ED9               	movwf	fsr2l,c
  3280   007430  5025               	movf	(sprintf@f+4)^0,w,c
  3281   007432  201C               	addwfc	(sprintf@s+1)^0,w,c
  3282   007434  6EDA               	movwf	fsr2h,c
  3283   007436  6ADF               	clrf	indf2,c
  3284   007438  0012               	return		;funcret
  3285   00743A                     __end_of_sprintf:
  3286                           	callstack 0
  3287                           
  3288 ;; *************** function _vfprintf *****************
  3289 ;; Defined at:
  3290 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  3293 ;;		 -> sprintf@f(12), 
  3294 ;;  fmt             1   23[COMRAM] PTR const unsigned char 
  3295 ;;		 -> STR_2(15), STR_1(15), 
  3296 ;;  ap              1   24[COMRAM] PTR PTR void 
  3297 ;;		 -> sprintf@ap(1), 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  cfmt            1   25[COMRAM] PTR unsigned char 
  3300 ;;		 -> STR_2(15), STR_1(15), 
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  2   22[COMRAM] int 
  3303 ;; Registers used:
  3304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3310 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3313 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3314 ;;Total ram usage:        4 bytes
  3315 ;; Hardware stack levels used: 1
  3316 ;; Hardware stack levels required when called: 5
  3317 ;; This function calls:
  3318 ;;		_vfpfcnvrt
  3319 ;; This function is called by:
  3320 ;;		_sprintf
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text6
  3325   00737A                     __ptext6:
  3326                           	callstack 0
  3327   00737A                     _vfprintf:
  3328                           	callstack 24
  3329   00737A                     
  3330                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3331   00737A  C018  F01A         	movff	vfprintf@fmt,vfprintf@cfmt
  3332                           
  3333                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3334   00737E  EFC9  F039         	goto	l5018
  3335   007382                     l5016:
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3338   007382  C017  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  3339   007386  0E1A               	movlw	low vfprintf@cfmt
  3340   007388  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  3341   00738A  C019  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  3342   00738E  ECC5  F02F         	call	_vfpfcnvrt	;wreg free
  3343   007392                     l5018:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3346   007392  C01A  FFF6         	movff	vfprintf@cfmt,tblptrl
  3347   007396                     	if	1	;There is more than 1 active tblptr byte
  3348   007396  0E0E               	movlw	high __smallconst
  3349   007398  6EF7               	movwf	tblptrh,c
  3350   00739A                     	endif
  3351   00739A                     	if	0	;tblptru may be non-zero
  3352   00739A                     	endif
  3353   00739A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3354   00739A  0E00               	movlw	low (__smallconst shr (0+16))
  3355   00739C  6EF8               	movwf	tblptru,c
  3356   00739E                     	endif
  3357   00739E  0008               	tblrd		*
  3358   0073A0  50F5               	movf	tablat,w,c
  3359   0073A2  0900               	iorlw	0
  3360   0073A4  A4D8               	btfss	status,2,c
  3361   0073A6  EFD7  F039         	goto	u5161
  3362   0073AA  EFD9  F039         	goto	u5160
  3363   0073AE                     u5161:
  3364   0073AE  EFC1  F039         	goto	l5016
  3365   0073B2                     u5160:
  3366   0073B2                     
  3367                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3368   0073B2  0E00               	movlw	0
  3369   0073B4  6E18               	movwf	(?_vfprintf+1)^0,c
  3370   0073B6  0E00               	movlw	0
  3371   0073B8  6E17               	movwf	?_vfprintf^0,c
  3372   0073BA  0012               	return		;funcret
  3373   0073BC                     __end_of_vfprintf:
  3374                           	callstack 0
  3375                           
  3376 ;; *************** function _vfpfcnvrt *****************
  3377 ;; Defined at:
  3378 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  3381 ;;		 -> sprintf@f(12), 
  3382 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  3383 ;;		 -> vfprintf@cfmt(1), 
  3384 ;;  ap              1   13[COMRAM] PTR PTR void 
  3385 ;;		 -> sprintf@ap(1), 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  convarg         4   17[COMRAM] struct .
  3388 ;;  c               1   21[COMRAM] unsigned char 
  3389 ;;  cp              1   16[COMRAM] PTR unsigned char 
  3390 ;;		 -> STR_2(15), STR_1(15), 
  3391 ;;  done            1   15[COMRAM] _Bool 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3401 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3402 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3403 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3404 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3405 ;;Total ram usage:       11 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; Hardware stack levels required when called: 4
  3408 ;; This function calls:
  3409 ;;		___awdiv
  3410 ;;		___awmod
  3411 ;;		_abs
  3412 ;;		_fputc
  3413 ;; This function is called by:
  3414 ;;		_vfprintf
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text7
  3419   005F8A                     __ptext7:
  3420                           	callstack 0
  3421   005F8A                     _vfpfcnvrt:
  3422                           	callstack 24
  3423   005F8A                     
  3424                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3425   005F8A  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3426   005F8C  6ED9               	movwf	fsr2l,c
  3427   005F8E  6ADA               	clrf	fsr2h,c
  3428   005F90  CFDF FFF6          	movff	indf2,tblptrl
  3429   005F94                     	if	1	;There is more than 1 active tblptr byte
  3430   005F94  0E0E               	movlw	high __smallconst
  3431   005F96  6EF7               	movwf	tblptrh,c
  3432   005F98                     	endif
  3433   005F98                     	if	0	;tblptru may be non-zero
  3434   005F98                     	endif
  3435   005F98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3436   005F98  0E00               	movlw	low (__smallconst shr (0+16))
  3437   005F9A  6EF8               	movwf	tblptru,c
  3438   005F9C                     	endif
  3439   005F9C  0008               	tblrd		*
  3440   005F9E  50F5               	movf	tablat,w,c
  3441   005FA0  0A25               	xorlw	37
  3442   005FA2  A4D8               	btfss	status,2,c
  3443   005FA4  EFD6  F02F         	goto	u4341
  3444   005FA8  EFD8  F02F         	goto	u4340
  3445   005FAC                     u4341:
  3446   005FAC  EF96  F030         	goto	l4488
  3447   005FB0                     u4340:
  3448   005FB0                     
  3449                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3450   005FB0  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3451   005FB2  6ED9               	movwf	fsr2l,c
  3452   005FB4  6ADA               	clrf	fsr2h,c
  3453   005FB6  2ADF               	incf	indf2,f,c
  3454   005FB8                     
  3455                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3456   005FB8  0E00               	movlw	0
  3457   005FBA  0100               	movlb	0	; () banked
  3458   005FBC  6FD3               	movwf	(_width+1)& (0+255),b
  3459   005FBE  0E00               	movlw	0
  3460   005FC0  6FD2               	movwf	_width& (0+255),b
  3461   005FC2  C0D2  F0D6         	movff	_width,_flags
  3462   005FC6                     
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3465   005FC6  69D4               	setf	_prec& (0+255),b
  3466   005FC8  69D5               	setf	(_prec+1)& (0+255),b
  3467   005FCA                     
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3470   005FCA  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3471   005FCC  6ED9               	movwf	fsr2l,c
  3472   005FCE  6ADA               	clrf	fsr2h,c
  3473   005FD0  50DF               	movf	indf2,w,c
  3474   005FD2  6E11               	movwf	vfpfcnvrt@cp^0,c
  3475   005FD4                     
  3476                           ; BSR set to: 0
  3477                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3478   005FD4  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3479   005FD8                     	if	1	;There is more than 1 active tblptr byte
  3480   005FD8  0E0E               	movlw	high __smallconst
  3481   005FDA  6EF7               	movwf	tblptrh,c
  3482   005FDC                     	endif
  3483   005FDC                     	if	0	;tblptru may be non-zero
  3484   005FDC                     	endif
  3485   005FDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3486   005FDC  0E00               	movlw	low (__smallconst shr (0+16))
  3487   005FDE  6EF8               	movwf	tblptru,c
  3488   005FE0                     	endif
  3489   005FE0  0008               	tblrd		*
  3490   005FE2  50F5               	movf	tablat,w,c
  3491   005FE4  0A64               	xorlw	100
  3492   005FE6  B4D8               	btfsc	status,2,c
  3493   005FE8  EFF8  F02F         	goto	u4351
  3494   005FEC  EFFA  F02F         	goto	u4350
  3495   005FF0                     u4351:
  3496   005FF0  EF0A  F030         	goto	l4458
  3497   005FF4                     u4350:
  3498   005FF4                     
  3499                           ; BSR set to: 0
  3500   005FF4  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3501   005FF8                     	if	1	;There is more than 1 active tblptr byte
  3502   005FF8  0E0E               	movlw	high __smallconst
  3503   005FFA  6EF7               	movwf	tblptrh,c
  3504   005FFC                     	endif
  3505   005FFC                     	if	0	;tblptru may be non-zero
  3506   005FFC                     	endif
  3507   005FFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3508   005FFC  0E00               	movlw	low (__smallconst shr (0+16))
  3509   005FFE  6EF8               	movwf	tblptru,c
  3510   006000                     	endif
  3511   006000  0008               	tblrd		*
  3512   006002  50F5               	movf	tablat,w,c
  3513   006004  0A69               	xorlw	105
  3514   006006  A4D8               	btfss	status,2,c
  3515   006008  EF08  F030         	goto	u4361
  3516   00600C  EF0A  F030         	goto	u4360
  3517   006010                     u4361:
  3518   006010  EF90  F030         	goto	l4484
  3519   006014                     u4360:
  3520   006014                     l4458:
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3524   006014  500E               	movf	vfpfcnvrt@ap^0,w,c
  3525   006016  6ED9               	movwf	fsr2l,c
  3526   006018  6ADA               	clrf	fsr2h,c
  3527   00601A  0E02               	movlw	2
  3528   00601C  26DF               	addwf	indf2,f,c
  3529   00601E  5CDF               	subwf	indf2,w,c
  3530   006020  6ED9               	movwf	fsr2l,c
  3531   006022  6ADA               	clrf	fsr2h,c
  3532   006024  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
  3533   006028  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
  3534   00602C                     
  3535                           ; BSR set to: 0
  3536                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3537   00602C  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3538   00602E  6ED9               	movwf	fsr2l,c
  3539   006030  6ADA               	clrf	fsr2h,c
  3540   006032  2811               	incf	vfpfcnvrt@cp^0,w,c
  3541   006034  6EDF               	movwf	indf2,c
  3542   006036                     
  3543                           ; BSR set to: 0
  3544                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3545   006036  0E20               	movlw	32
  3546   006038  6E16               	movwf	vfpfcnvrt@c^0,c
  3547                           
  3548                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3549   00603A  BE13               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3550   00603C  EF22  F030         	goto	u4371
  3551   006040  EF25  F030         	goto	u4370
  3552   006044                     u4371:
  3553   006044  0E01               	movlw	1
  3554   006046  EF26  F030         	goto	u4380
  3555   00604A                     u4370:
  3556   00604A  0E00               	movlw	0
  3557   00604C                     u4380:
  3558   00604C  6E10               	movwf	vfpfcnvrt@done^0,c
  3559   00604E                     l4464:
  3560                           
  3561                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3562   00604E  0616               	decf	vfpfcnvrt@c^0,f,c
  3563   006050  5016               	movf	vfpfcnvrt@c^0,w,c
  3564   006052  0F9C               	addlw	low _dbuf
  3565   006054  6ED9               	movwf	fsr2l,c
  3566   006056  6ADA               	clrf	fsr2h,c
  3567   006058  C012  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3568   00605C  C013  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3569   006060  0E00               	movlw	0
  3570   006062  6E05               	movwf	(___awmod@divisor+1)^0,c
  3571   006064  0E0A               	movlw	10
  3572   006066  6E04               	movwf	___awmod@divisor^0,c
  3573   006068  EC28  F037         	call	___awmod	;wreg free
  3574   00606C  C002  F008         	movff	?___awmod,abs@a
  3575   006070  C003  F009         	movff	?___awmod+1,abs@a+1
  3576   006074  EC39  F03A         	call	_abs	;wreg free
  3577   006078  5008               	movf	?_abs^0,w,c
  3578   00607A  0F30               	addlw	48
  3579   00607C  6EDF               	movwf	indf2,c
  3580   00607E                     
  3581                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3582   00607E  C012  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3583   006082  C013  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3584   006086  0E00               	movlw	0
  3585   006088  6E05               	movwf	(___awdiv@divisor+1)^0,c
  3586   00608A  0E0A               	movlw	10
  3587   00608C  6E04               	movwf	___awdiv@divisor^0,c
  3588   00608E  EC0B  F036         	call	___awdiv	;wreg free
  3589   006092  C002  F012         	movff	?___awdiv,vfpfcnvrt@convarg
  3590   006096  C003  F013         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3591   00609A                     
  3592                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3593   00609A  5012               	movf	vfpfcnvrt@convarg^0,w,c
  3594   00609C  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3595   00609E  B4D8               	btfsc	status,2,c
  3596   0060A0  EF54  F030         	goto	u4391
  3597   0060A4  EF56  F030         	goto	u4390
  3598   0060A8                     u4391:
  3599   0060A8  EF5E  F030         	goto	l4472
  3600   0060AC                     u4390:
  3601   0060AC  5016               	movf	vfpfcnvrt@c^0,w,c
  3602   0060AE  A4D8               	btfss	status,2,c
  3603   0060B0  EF5C  F030         	goto	u4401
  3604   0060B4  EF5E  F030         	goto	u4400
  3605   0060B8                     u4401:
  3606   0060B8  EF27  F030         	goto	l4464
  3607   0060BC                     u4400:
  3608   0060BC                     l4472:
  3609                           
  3610                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3611   0060BC  5016               	movf	vfpfcnvrt@c^0,w,c
  3612   0060BE  B4D8               	btfsc	status,2,c
  3613   0060C0  EF64  F030         	goto	u4411
  3614   0060C4  EF66  F030         	goto	u4410
  3615   0060C8                     u4411:
  3616   0060C8  EF85  F030         	goto	l4482
  3617   0060CC                     u4410:
  3618   0060CC  5010               	movf	vfpfcnvrt@done^0,w,c
  3619   0060CE  B4D8               	btfsc	status,2,c
  3620   0060D0  EF6C  F030         	goto	u4421
  3621   0060D4  EF6E  F030         	goto	u4420
  3622   0060D8                     u4421:
  3623   0060D8  EF85  F030         	goto	l4482
  3624   0060DC                     u4420:
  3625   0060DC                     
  3626                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3627   0060DC  0616               	decf	vfpfcnvrt@c^0,f,c
  3628   0060DE  5016               	movf	vfpfcnvrt@c^0,w,c
  3629   0060E0  0F9C               	addlw	low _dbuf
  3630   0060E2  6ED9               	movwf	fsr2l,c
  3631   0060E4  6ADA               	clrf	fsr2h,c
  3632   0060E6  0E2D               	movlw	45
  3633   0060E8  6EDF               	movwf	indf2,c
  3634   0060EA  EF85  F030         	goto	l4482
  3635   0060EE                     l4478:
  3636                           
  3637                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3638   0060EE  5016               	movf	vfpfcnvrt@c^0,w,c
  3639   0060F0  0F9C               	addlw	low _dbuf
  3640   0060F2  6ED9               	movwf	fsr2l,c
  3641   0060F4  6ADA               	clrf	fsr2h,c
  3642   0060F6  50DF               	movf	indf2,w,c
  3643   0060F8  6E0F               	movwf	??_vfpfcnvrt^0,c
  3644   0060FA  500F               	movf	??_vfpfcnvrt^0,w,c
  3645   0060FC  6E02               	movwf	fputc@c^0,c
  3646   0060FE  6A03               	clrf	(fputc@c+1)^0,c
  3647   006100  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3648   006104  ECCB  F036         	call	_fputc	;wreg free
  3649   006108  2A16               	incf	vfpfcnvrt@c^0,f,c
  3650   00610A                     l4482:
  3651                           
  3652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3653   00610A  0E20               	movlw	32
  3654   00610C  1816               	xorwf	vfpfcnvrt@c^0,w,c
  3655   00610E  A4D8               	btfss	status,2,c
  3656   006110  EF8C  F030         	goto	u4431
  3657   006114  EF8E  F030         	goto	u4430
  3658   006118                     u4431:
  3659   006118  EF77  F030         	goto	l4478
  3660   00611C                     u4430:
  3661   00611C  EFA9  F030         	goto	l1284
  3662   006120                     l4484:
  3663                           
  3664                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3665   006120  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3666   006122  6ED9               	movwf	fsr2l,c
  3667   006124  6ADA               	clrf	fsr2h,c
  3668   006126  2ADF               	incf	indf2,f,c
  3669   006128  EFA9  F030         	goto	l1284
  3670   00612C                     l4488:
  3671                           
  3672                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3673   00612C  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3674   00612E  6ED9               	movwf	fsr2l,c
  3675   006130  6ADA               	clrf	fsr2h,c
  3676   006132  CFDF FFF6          	movff	indf2,tblptrl
  3677   006136                     	if	1	;There is more than 1 active tblptr byte
  3678   006136  0E0E               	movlw	high __smallconst
  3679   006138  6EF7               	movwf	tblptrh,c
  3680   00613A                     	endif
  3681   00613A                     	if	0	;tblptru may be non-zero
  3682   00613A                     	endif
  3683   00613A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3684   00613A  0E00               	movlw	low (__smallconst shr (0+16))
  3685   00613C  6EF8               	movwf	tblptru,c
  3686   00613E                     	endif
  3687   00613E  0008               	tblrd		*
  3688   006140  50F5               	movf	tablat,w,c
  3689   006142  6E02               	movwf	fputc@c^0,c
  3690   006144  6A03               	clrf	(fputc@c+1)^0,c
  3691   006146  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3692   00614A  ECCB  F036         	call	_fputc	;wreg free
  3693   00614E  EF90  F030         	goto	l4484
  3694   006152                     l1284:
  3695   006152  0012               	return		;funcret
  3696   006154                     __end_of_vfpfcnvrt:
  3697                           	callstack 0
  3698                           
  3699 ;; *************** function _fputc *****************
  3700 ;; Defined at:
  3701 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  c               2    1[COMRAM] int 
  3704 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  3705 ;;		 -> sprintf@f(12), 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  2    1[COMRAM] int 
  3710 ;; Registers used:
  3711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3717 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3719 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3720 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3721 ;;Total ram usage:        8 bytes
  3722 ;; Hardware stack levels used: 1
  3723 ;; Hardware stack levels required when called: 3
  3724 ;; This function calls:
  3725 ;;		_putch
  3726 ;; This function is called by:
  3727 ;;		_vfpfcnvrt
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text8
  3732   006D96                     __ptext8:
  3733                           	callstack 0
  3734   006D96                     _fputc:
  3735                           	callstack 24
  3736   006D96  5004               	movf	fputc@fp^0,w,c
  3737   006D98  B4D8               	btfsc	status,2,c
  3738   006D9A  EFD1  F036         	goto	u3741
  3739   006D9E  EFD3  F036         	goto	u3740
  3740   006DA2                     u3741:
  3741   006DA2  EFDB  F036         	goto	l4116
  3742   006DA6                     u3740:
  3743   006DA6  5004               	movf	fputc@fp^0,w,c
  3744   006DA8  A4D8               	btfss	status,2,c
  3745   006DAA  EFD9  F036         	goto	u3751
  3746   006DAE  EFDB  F036         	goto	u3750
  3747   006DB2                     u3751:
  3748   006DB2  EFE0  F036         	goto	l4118
  3749   006DB6                     u3750:
  3750   006DB6                     l4116:
  3751   006DB6  5002               	movf	fputc@c^0,w,c
  3752   006DB8  EC36  F03B         	call	_putch
  3753   006DBC  EF27  F037         	goto	l1309
  3754   006DC0                     l4118:
  3755   006DC0  5004               	movf	fputc@fp^0,w,c
  3756   006DC2  6ED9               	movwf	fsr2l,c
  3757   006DC4  6ADA               	clrf	fsr2h,c
  3758   006DC6  0E0A               	movlw	10
  3759   006DC8  26D9               	addwf	fsr2l,f,c
  3760   006DCA  50DE               	movf	postinc2,w,c
  3761   006DCC  10DE               	iorwf	postinc2,w,c
  3762   006DCE  B4D8               	btfsc	status,2,c
  3763   006DD0  EFEC  F036         	goto	u3761
  3764   006DD4  EFEE  F036         	goto	u3760
  3765   006DD8                     u3761:
  3766   006DD8  EF07  F037         	goto	l4122
  3767   006DDC                     u3760:
  3768   006DDC  5004               	movf	fputc@fp^0,w,c
  3769   006DDE  6ED9               	movwf	fsr2l,c
  3770   006DE0  6ADA               	clrf	fsr2h,c
  3771   006DE2  0E0A               	movlw	10
  3772   006DE4  26D9               	addwf	fsr2l,f,c
  3773   006DE6  5004               	movf	fputc@fp^0,w,c
  3774   006DE8  6EE1               	movwf	fsr1l,c
  3775   006DEA  6AE2               	clrf	fsr1h,c
  3776   006DEC  0E03               	movlw	3
  3777   006DEE  26E1               	addwf	fsr1l,f,c
  3778   006DF0  50DE               	movf	postinc2,w,c
  3779   006DF2  5CE6               	subwf	postinc1,w,c
  3780   006DF4  50E6               	movf	postinc1,w,c
  3781   006DF6  0A80               	xorlw	128
  3782   006DF8  6E09               	movwf	(??_fputc+4)^0,c
  3783   006DFA  50DE               	movf	postinc2,w,c
  3784   006DFC  0A80               	xorlw	128
  3785   006DFE  5809               	subwfb	(??_fputc+4)^0,w,c
  3786   006E00  B0D8               	btfsc	status,0,c
  3787   006E02  EF05  F037         	goto	u3771
  3788   006E06  EF07  F037         	goto	u3770
  3789   006E0A                     u3771:
  3790   006E0A  EF27  F037         	goto	l1309
  3791   006E0E                     u3770:
  3792   006E0E                     l4122:
  3793   006E0E  5004               	movf	fputc@fp^0,w,c
  3794   006E10  6ED9               	movwf	fsr2l,c
  3795   006E12  6ADA               	clrf	fsr2h,c
  3796   006E14  0E03               	movlw	3
  3797   006E16  26D9               	addwf	fsr2l,f,c
  3798   006E18  CFDE F005          	movff	postinc2,??_fputc
  3799   006E1C  CFDD F006          	movff	postdec2,??_fputc+1
  3800   006E20  5004               	movf	fputc@fp^0,w,c
  3801   006E22  6ED9               	movwf	fsr2l,c
  3802   006E24  6ADA               	clrf	fsr2h,c
  3803   006E26  CFDE F007          	movff	postinc2,??_fputc+2
  3804   006E2A  CFDD F008          	movff	postdec2,??_fputc+3
  3805   006E2E  5005               	movf	??_fputc^0,w,c
  3806   006E30  2407               	addwf	(??_fputc+2)^0,w,c
  3807   006E32  6ED9               	movwf	fsr2l,c
  3808   006E34  5006               	movf	(??_fputc+1)^0,w,c
  3809   006E36  2008               	addwfc	(??_fputc+3)^0,w,c
  3810   006E38  6EDA               	movwf	fsr2h,c
  3811   006E3A  C002  FFDF         	movff	fputc@c,indf2
  3812   006E3E  5004               	movf	fputc@fp^0,w,c
  3813   006E40  6ED9               	movwf	fsr2l,c
  3814   006E42  6ADA               	clrf	fsr2h,c
  3815   006E44  0E03               	movlw	3
  3816   006E46  26D9               	addwf	fsr2l,f,c
  3817   006E48  2ADE               	incf	postinc2,f,c
  3818   006E4A  0E00               	movlw	0
  3819   006E4C  22DD               	addwfc	postdec2,f,c
  3820   006E4E                     l1309:
  3821   006E4E  0012               	return		;funcret
  3822   006E50                     __end_of_fputc:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _putch *****************
  3826 ;; Defined at:
  3827 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  c               1    wreg     unsigned char 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  c               1    0[COMRAM] unsigned char 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		wreg
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 2
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_fputc
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text9
  3856   00766C                     __ptext9:
  3857                           	callstack 0
  3858   00766C                     _putch:
  3859                           	callstack 24
  3860   00766C  0012               	return		;funcret
  3861   00766E                     __end_of_putch:
  3862                           	callstack 0
  3863                           
  3864 ;; *************** function _abs *****************
  3865 ;; Defined at:
  3866 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  a               2    7[COMRAM] int 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  2    7[COMRAM] int 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2, status,0
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3882 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3883 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3884 ;;Total ram usage:        4 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; Hardware stack levels required when called: 2
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_vfpfcnvrt
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text10
  3895   007472                     __ptext10:
  3896                           	callstack 0
  3897   007472                     _abs:
  3898                           	callstack 25
  3899   007472  BE09               	btfsc	(abs@a+1)^0,7,c
  3900   007474  EF3E  F03A         	goto	u3781
  3901   007478  EF40  F03A         	goto	u3780
  3902   00747C                     u3781:
  3903   00747C  EF46  F03A         	goto	l1294
  3904   007480                     u3780:
  3905   007480  C008  F008         	movff	abs@a,?_abs
  3906   007484  C009  F009         	movff	abs@a+1,?_abs+1
  3907   007488  EF52  F03A         	goto	l1297
  3908   00748C                     l1294:
  3909   00748C  C008  F00A         	movff	abs@a,??_abs
  3910   007490  C009  F00B         	movff	abs@a+1,??_abs+1
  3911   007494  1E0A               	comf	??_abs^0,f,c
  3912   007496  1E0B               	comf	(??_abs+1)^0,f,c
  3913   007498  4A0A               	infsnz	??_abs^0,f,c
  3914   00749A  2A0B               	incf	(??_abs+1)^0,f,c
  3915   00749C  C00A  F008         	movff	??_abs,?_abs
  3916   0074A0  C00B  F009         	movff	??_abs+1,?_abs+1
  3917   0074A4                     l1297:
  3918   0074A4  0012               	return		;funcret
  3919   0074A6                     __end_of_abs:
  3920                           	callstack 0
  3921                           
  3922 ;; *************** function ___awmod *****************
  3923 ;; Defined at:
  3924 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  dividend        2    1[COMRAM] int 
  3927 ;;  divisor         2    3[COMRAM] int 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  sign            1    6[COMRAM] unsigned char 
  3930 ;;  counter         1    5[COMRAM] unsigned char 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  2    1[COMRAM] int 
  3933 ;; Registers used:
  3934 ;;		wreg, status,2, status,0
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3941 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3943 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;Total ram usage:        6 bytes
  3945 ;; Hardware stack levels used: 1
  3946 ;; Hardware stack levels required when called: 2
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_vfpfcnvrt
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text11
  3955   006E50                     __ptext11:
  3956                           	callstack 0
  3957   006E50                     ___awmod:
  3958                           	callstack 25
  3959   006E50  0E00               	movlw	0
  3960   006E52  6E07               	movwf	___awmod@sign^0,c
  3961   006E54  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  3962   006E56  EF31  F037         	goto	u3650
  3963   006E5A  EF2F  F037         	goto	u3651
  3964   006E5E                     u3651:
  3965   006E5E  EF37  F037         	goto	l4062
  3966   006E62                     u3650:
  3967   006E62  6C02               	negf	___awmod@dividend^0,c
  3968   006E64  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3969   006E66  B0D8               	btfsc	status,0,c
  3970   006E68  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3971   006E6A  0E01               	movlw	1
  3972   006E6C  6E07               	movwf	___awmod@sign^0,c
  3973   006E6E                     l4062:
  3974   006E6E  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  3975   006E70  EF3E  F037         	goto	u3660
  3976   006E74  EF3C  F037         	goto	u3661
  3977   006E78                     u3661:
  3978   006E78  EF42  F037         	goto	l4066
  3979   006E7C                     u3660:
  3980   006E7C  6C04               	negf	___awmod@divisor^0,c
  3981   006E7E  1E05               	comf	(___awmod@divisor+1)^0,f,c
  3982   006E80  B0D8               	btfsc	status,0,c
  3983   006E82  2A05               	incf	(___awmod@divisor+1)^0,f,c
  3984   006E84                     l4066:
  3985   006E84  5004               	movf	___awmod@divisor^0,w,c
  3986   006E86  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  3987   006E88  B4D8               	btfsc	status,2,c
  3988   006E8A  EF49  F037         	goto	u3671
  3989   006E8E  EF4B  F037         	goto	u3670
  3990   006E92                     u3671:
  3991   006E92  EF6F  F037         	goto	l4082
  3992   006E96                     u3670:
  3993   006E96  0E01               	movlw	1
  3994   006E98  6E06               	movwf	___awmod@counter^0,c
  3995   006E9A  EF53  F037         	goto	l4072
  3996   006E9E                     l4070:
  3997   006E9E  90D8               	bcf	status,0,c
  3998   006EA0  3604               	rlcf	___awmod@divisor^0,f,c
  3999   006EA2  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  4000   006EA4  2A06               	incf	___awmod@counter^0,f,c
  4001   006EA6                     l4072:
  4002   006EA6  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  4003   006EA8  EF58  F037         	goto	u3681
  4004   006EAC  EF5A  F037         	goto	u3680
  4005   006EB0                     u3681:
  4006   006EB0  EF4F  F037         	goto	l4070
  4007   006EB4                     u3680:
  4008   006EB4                     l4074:
  4009   006EB4  5004               	movf	___awmod@divisor^0,w,c
  4010   006EB6  5C02               	subwf	___awmod@dividend^0,w,c
  4011   006EB8  5005               	movf	(___awmod@divisor+1)^0,w,c
  4012   006EBA  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  4013   006EBC  A0D8               	btfss	status,0,c
  4014   006EBE  EF63  F037         	goto	u3691
  4015   006EC2  EF65  F037         	goto	u3690
  4016   006EC6                     u3691:
  4017   006EC6  EF69  F037         	goto	l4078
  4018   006ECA                     u3690:
  4019   006ECA  5004               	movf	___awmod@divisor^0,w,c
  4020   006ECC  5E02               	subwf	___awmod@dividend^0,f,c
  4021   006ECE  5005               	movf	(___awmod@divisor+1)^0,w,c
  4022   006ED0  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  4023   006ED2                     l4078:
  4024   006ED2  90D8               	bcf	status,0,c
  4025   006ED4  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  4026   006ED6  3204               	rrcf	___awmod@divisor^0,f,c
  4027   006ED8  2E06               	decfsz	___awmod@counter^0,f,c
  4028   006EDA  EF5A  F037         	goto	l4074
  4029   006EDE                     l4082:
  4030   006EDE  5007               	movf	___awmod@sign^0,w,c
  4031   006EE0  B4D8               	btfsc	status,2,c
  4032   006EE2  EF75  F037         	goto	u3701
  4033   006EE6  EF77  F037         	goto	u3700
  4034   006EEA                     u3701:
  4035   006EEA  EF7B  F037         	goto	l4086
  4036   006EEE                     u3700:
  4037   006EEE  6C02               	negf	___awmod@dividend^0,c
  4038   006EF0  1E03               	comf	(___awmod@dividend+1)^0,f,c
  4039   006EF2  B0D8               	btfsc	status,0,c
  4040   006EF4  2A03               	incf	(___awmod@dividend+1)^0,f,c
  4041   006EF6                     l4086:
  4042   006EF6  C002  F002         	movff	___awmod@dividend,?___awmod
  4043   006EFA  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  4044   006EFE  0012               	return		;funcret
  4045   006F00                     __end_of___awmod:
  4046                           	callstack 0
  4047                           
  4048 ;; *************** function ___awdiv *****************
  4049 ;; Defined at:
  4050 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  dividend        2    1[COMRAM] int 
  4053 ;;  divisor         2    3[COMRAM] int 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  quotient        2    7[COMRAM] int 
  4056 ;;  sign            1    6[COMRAM] unsigned char 
  4057 ;;  counter         1    5[COMRAM] unsigned char 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  2    1[COMRAM] int 
  4060 ;; Registers used:
  4061 ;;		wreg, status,2, status,0
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4067 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4068 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;Total ram usage:        8 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 2
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_vfpfcnvrt
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text12
  4082   006C16                     __ptext12:
  4083                           	callstack 0
  4084   006C16                     ___awdiv:
  4085                           	callstack 25
  4086   006C16  0E00               	movlw	0
  4087   006C18  6E07               	movwf	___awdiv@sign^0,c
  4088   006C1A  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  4089   006C1C  EF14  F036         	goto	u3590
  4090   006C20  EF12  F036         	goto	u3591
  4091   006C24                     u3591:
  4092   006C24  EF1A  F036         	goto	l4018
  4093   006C28                     u3590:
  4094   006C28  6C04               	negf	___awdiv@divisor^0,c
  4095   006C2A  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  4096   006C2C  B0D8               	btfsc	status,0,c
  4097   006C2E  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  4098   006C30  0E01               	movlw	1
  4099   006C32  6E07               	movwf	___awdiv@sign^0,c
  4100   006C34                     l4018:
  4101   006C34  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  4102   006C36  EF21  F036         	goto	u3600
  4103   006C3A  EF1F  F036         	goto	u3601
  4104   006C3E                     u3601:
  4105   006C3E  EF27  F036         	goto	l4024
  4106   006C42                     u3600:
  4107   006C42  6C02               	negf	___awdiv@dividend^0,c
  4108   006C44  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  4109   006C46  B0D8               	btfsc	status,0,c
  4110   006C48  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  4111   006C4A  0E01               	movlw	1
  4112   006C4C  1A07               	xorwf	___awdiv@sign^0,f,c
  4113   006C4E                     l4024:
  4114   006C4E  0E00               	movlw	0
  4115   006C50  6E09               	movwf	(___awdiv@quotient+1)^0,c
  4116   006C52  0E00               	movlw	0
  4117   006C54  6E08               	movwf	___awdiv@quotient^0,c
  4118   006C56  5004               	movf	___awdiv@divisor^0,w,c
  4119   006C58  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  4120   006C5A  B4D8               	btfsc	status,2,c
  4121   006C5C  EF32  F036         	goto	u3611
  4122   006C60  EF34  F036         	goto	u3610
  4123   006C64                     u3611:
  4124   006C64  EF5C  F036         	goto	l4046
  4125   006C68                     u3610:
  4126   006C68  0E01               	movlw	1
  4127   006C6A  6E06               	movwf	___awdiv@counter^0,c
  4128   006C6C  EF3C  F036         	goto	l4032
  4129   006C70                     l4030:
  4130   006C70  90D8               	bcf	status,0,c
  4131   006C72  3604               	rlcf	___awdiv@divisor^0,f,c
  4132   006C74  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  4133   006C76  2A06               	incf	___awdiv@counter^0,f,c
  4134   006C78                     l4032:
  4135   006C78  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  4136   006C7A  EF41  F036         	goto	u3621
  4137   006C7E  EF43  F036         	goto	u3620
  4138   006C82                     u3621:
  4139   006C82  EF38  F036         	goto	l4030
  4140   006C86                     u3620:
  4141   006C86                     l4034:
  4142   006C86  90D8               	bcf	status,0,c
  4143   006C88  3608               	rlcf	___awdiv@quotient^0,f,c
  4144   006C8A  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  4145   006C8C  5004               	movf	___awdiv@divisor^0,w,c
  4146   006C8E  5C02               	subwf	___awdiv@dividend^0,w,c
  4147   006C90  5005               	movf	(___awdiv@divisor+1)^0,w,c
  4148   006C92  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  4149   006C94  A0D8               	btfss	status,0,c
  4150   006C96  EF4F  F036         	goto	u3631
  4151   006C9A  EF51  F036         	goto	u3630
  4152   006C9E                     u3631:
  4153   006C9E  EF56  F036         	goto	l4042
  4154   006CA2                     u3630:
  4155   006CA2  5004               	movf	___awdiv@divisor^0,w,c
  4156   006CA4  5E02               	subwf	___awdiv@dividend^0,f,c
  4157   006CA6  5005               	movf	(___awdiv@divisor+1)^0,w,c
  4158   006CA8  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  4159   006CAA  8008               	bsf	___awdiv@quotient^0,0,c
  4160   006CAC                     l4042:
  4161   006CAC  90D8               	bcf	status,0,c
  4162   006CAE  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  4163   006CB0  3204               	rrcf	___awdiv@divisor^0,f,c
  4164   006CB2  2E06               	decfsz	___awdiv@counter^0,f,c
  4165   006CB4  EF43  F036         	goto	l4034
  4166   006CB8                     l4046:
  4167   006CB8  5007               	movf	___awdiv@sign^0,w,c
  4168   006CBA  B4D8               	btfsc	status,2,c
  4169   006CBC  EF62  F036         	goto	u3641
  4170   006CC0  EF64  F036         	goto	u3640
  4171   006CC4                     u3641:
  4172   006CC4  EF68  F036         	goto	l4050
  4173   006CC8                     u3640:
  4174   006CC8  6C08               	negf	___awdiv@quotient^0,c
  4175   006CCA  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  4176   006CCC  B0D8               	btfsc	status,0,c
  4177   006CCE  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  4178   006CD0                     l4050:
  4179   006CD0  C008  F002         	movff	___awdiv@quotient,?___awdiv
  4180   006CD4  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  4181   006CD8  0012               	return		;funcret
  4182   006CDA                     __end_of___awdiv:
  4183                           	callstack 0
  4184                           
  4185 ;; *************** function _sendStringSerial4 *****************
  4186 ;; Defined at:
  4187 ;;		line 38 in file "serial.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  string          2    2[COMRAM] PTR unsigned char 
  4190 ;;		 -> main@clear_val(20), 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4206 ;;Total ram usage:        2 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; Hardware stack levels required when called: 3
  4209 ;; This function calls:
  4210 ;;		_sendCharSerial4
  4211 ;; This function is called by:
  4212 ;;		_main
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text13
  4217   0074A6                     __ptext13:
  4218                           	callstack 0
  4219   0074A6                     _sendStringSerial4:
  4220                           	callstack 27
  4221   0074A6                     
  4222                           ;serial.c: 40:     while(*string != 0){
  4223   0074A6  EF5E  F03A         	goto	l5500
  4224   0074AA                     l5496:
  4225                           
  4226                           ;serial.c: 41:   sendCharSerial4(*string++);
  4227   0074AA  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  4228   0074AE  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4229   0074B2  50DF               	movf	indf2,w,c
  4230   0074B4  ECFE  F03A         	call	_sendCharSerial4
  4231   0074B8  4A03               	infsnz	sendStringSerial4@string^0,f,c
  4232   0074BA  2A04               	incf	(sendStringSerial4@string+1)^0,f,c
  4233   0074BC                     l5500:
  4234                           
  4235                           ;serial.c: 40:     while(*string != 0){
  4236   0074BC  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  4237   0074C0  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4238   0074C4  50DF               	movf	indf2,w,c
  4239   0074C6  A4D8               	btfss	status,2,c
  4240   0074C8  EF68  F03A         	goto	u5601
  4241   0074CC  EF6A  F03A         	goto	u5600
  4242   0074D0                     u5601:
  4243   0074D0  EF55  F03A         	goto	l5496
  4244   0074D4                     u5600:
  4245   0074D4  0012               	return		;funcret
  4246   0074D6                     __end_of_sendStringSerial4:
  4247                           	callstack 0
  4248                           
  4249 ;; *************** function _sendCharSerial4 *****************
  4250 ;; Defined at:
  4251 ;;		line 31 in file "serial.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;  charToSend      1    wreg     unsigned char 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  charToSend      1    1[COMRAM] unsigned char 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4268 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;Total ram usage:        1 bytes
  4270 ;; Hardware stack levels used: 1
  4271 ;; Hardware stack levels required when called: 2
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_sendStringSerial4
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text14
  4280   0075FC                     __ptext14:
  4281                           	callstack 0
  4282   0075FC                     _sendCharSerial4:
  4283                           	callstack 27
  4284                           
  4285                           ;incstack = 0
  4286                           ;sendCharSerial4@charToSend stored from wreg
  4287   0075FC  6E02               	movwf	sendCharSerial4@charToSend^0,c
  4288   0075FE                     l503:
  4289   0075FE  010E               	movlb	14	; () banked
  4290   007600  A537               	btfss	55,2,b	;volatile
  4291   007602  EF05  F03B         	goto	u5151
  4292   007606  EF07  F03B         	goto	u5150
  4293   00760A                     u5151:
  4294   00760A  EFFF  F03A         	goto	l503
  4295   00760E                     u5150:
  4296   00760E                     
  4297                           ; BSR set to: 14
  4298                           ;serial.c: 33:     TX4REG = charToSend;
  4299   00760E  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4300   007612                     
  4301                           ; BSR set to: 14
  4302   007612  0012               	return		;funcret
  4303   007614                     __end_of_sendCharSerial4:
  4304                           	callstack 0
  4305                           
  4306 ;; *************** function _reverse_one_square *****************
  4307 ;; Defined at:
  4308 ;;		line 210 in file "dc_motor.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  4311 ;;		 -> main@motorL(9), 
  4312 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  4313 ;;		 -> main@motorR(9), 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;		None
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  1    wreg      void 
  4318 ;; Registers used:
  4319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4328 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;Total ram usage:        6 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; Hardware stack levels required when called: 5
  4332 ;; This function calls:
  4333 ;;		_setMotorPWM
  4334 ;;		_stop
  4335 ;; This function is called by:
  4336 ;;		_main
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text15
  4341   00667E                     __ptext15:
  4342                           	callstack 0
  4343   00667E                     _reverse_one_square:
  4344                           	callstack 25
  4345   00667E                     
  4346                           ;dc_motor.c: 211:     mL->direction = 0;
  4347   00667E  EE20 F001          	lfsr	2,1
  4348   006682  5019               	movf	reverse_one_square@mL^0,w,c
  4349   006684  26D9               	addwf	fsr2l,f,c
  4350   006686  501A               	movf	(reverse_one_square@mL+1)^0,w,c
  4351   006688  22DA               	addwfc	fsr2h,f,c
  4352   00668A  6ADF               	clrf	indf2,c
  4353                           
  4354                           ;dc_motor.c: 212:     mR->direction = 0;
  4355   00668C  EE20 F001          	lfsr	2,1
  4356   006690  501B               	movf	reverse_one_square@mR^0,w,c
  4357   006692  26D9               	addwf	fsr2l,f,c
  4358   006694  501C               	movf	(reverse_one_square@mR+1)^0,w,c
  4359   006696  22DA               	addwfc	fsr2h,f,c
  4360   006698  6ADF               	clrf	indf2,c
  4361                           
  4362                           ;dc_motor.c: 214:     while ((mL->power) < 70 || (mR->power) < 70){
  4363   00669A  EF85  F033         	goto	l254
  4364   00669E                     l5396:
  4365                           
  4366                           ;dc_motor.c: 215:         if ((mL->power) < 70) (mL->power) += 1;
  4367   00669E  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  4368   0066A2  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  4369   0066A6  0E46               	movlw	70
  4370   0066A8  60DF               	cpfslt	indf2,c
  4371   0066AA  EF59  F033         	goto	u5521
  4372   0066AE  EF5B  F033         	goto	u5520
  4373   0066B2                     u5521:
  4374   0066B2  EF60  F033         	goto	l5400
  4375   0066B6                     u5520:
  4376   0066B6  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  4377   0066BA  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  4378   0066BE  2ADF               	incf	indf2,f,c
  4379   0066C0                     l5400:
  4380                           
  4381                           ;dc_motor.c: 216:         if ((mR->power) < 70) (mR->power) += 1;
  4382   0066C0  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  4383   0066C4  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  4384   0066C8  0E46               	movlw	70
  4385   0066CA  60DF               	cpfslt	indf2,c
  4386   0066CC  EF6A  F033         	goto	u5531
  4387   0066D0  EF6C  F033         	goto	u5530
  4388   0066D4                     u5531:
  4389   0066D4  EF71  F033         	goto	l5404
  4390   0066D8                     u5530:
  4391   0066D8  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  4392   0066DC  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  4393   0066E0  2ADF               	incf	indf2,f,c
  4394   0066E2                     l5404:
  4395                           
  4396                           ;dc_motor.c: 218:         setMotorPWM(mL);
  4397   0066E2  C019  F00F         	movff	reverse_one_square@mL,setMotorPWM@m
  4398   0066E6  C01A  F010         	movff	reverse_one_square@mL+1,setMotorPWM@m+1
  4399   0066EA  EC84  F031         	call	_setMotorPWM	;wreg free
  4400   0066EE                     
  4401                           ;dc_motor.c: 219:         setMotorPWM(mR);
  4402   0066EE  C01B  F00F         	movff	reverse_one_square@mR,setMotorPWM@m
  4403   0066F2  C01C  F010         	movff	reverse_one_square@mR+1,setMotorPWM@m+1
  4404   0066F6  EC84  F031         	call	_setMotorPWM	;wreg free
  4405   0066FA                     
  4406                           ;dc_motor.c: 220:         _delay((unsigned long)((1)*(64000000/4000.0)));
  4407   0066FA  0E15               	movlw	21
  4408   0066FC  6E1D               	movwf	??_reverse_one_square^0,c
  4409   0066FE  0EC6               	movlw	198
  4410   006700                     u8177:
  4411   006700  2EE8               	decfsz	wreg,f,c
  4412   006702  D7FE               	bra	u8177
  4413   006704  2E1D               	decfsz	??_reverse_one_square^0,f,c
  4414   006706  D7FC               	bra	u8177
  4415   006708  D000               	nop2	
  4416   00670A                     l254:
  4417                           
  4418                           ;dc_motor.c: 214:     while ((mL->power) < 70 || (mR->power) < 70){
  4419   00670A  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  4420   00670E  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  4421   006712  0E45               	movlw	69
  4422   006714  64DF               	cpfsgt	indf2,c
  4423   006716  EF8F  F033         	goto	u5541
  4424   00671A  EF91  F033         	goto	u5540
  4425   00671E                     u5541:
  4426   00671E  EF4F  F033         	goto	l5396
  4427   006722                     u5540:
  4428   006722  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  4429   006726  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  4430   00672A  0E45               	movlw	69
  4431   00672C  64DF               	cpfsgt	indf2,c
  4432   00672E  EF9B  F033         	goto	u5551
  4433   006732  EF9D  F033         	goto	u5550
  4434   006736                     u5551:
  4435   006736  EF4F  F033         	goto	l5396
  4436   00673A                     u5550:
  4437   00673A                     
  4438                           ;dc_motor.c: 222:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4439   00673A  0E29               	movlw	41
  4440   00673C  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  4441   00673E  0E96               	movlw	150
  4442   006740  6E1D               	movwf	??_reverse_one_square^0,c
  4443   006742  0E7F               	movlw	127
  4444   006744                     u8187:
  4445   006744  2EE8               	decfsz	wreg,f,c
  4446   006746  D7FE               	bra	u8187
  4447   006748  2E1D               	decfsz	??_reverse_one_square^0,f,c
  4448   00674A  D7FC               	bra	u8187
  4449   00674C  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  4450   00674E  D7FA               	bra	u8187
  4451   006750  0000               	nop	
  4452   006752                     
  4453                           ;dc_motor.c: 223:     stop(mL, mR);
  4454   006752  C019  F015         	movff	reverse_one_square@mL,stop@mL
  4455   006756  C01A  F016         	movff	reverse_one_square@mL+1,stop@mL+1
  4456   00675A  C01B  F017         	movff	reverse_one_square@mR,stop@mR
  4457   00675E  C01C  F018         	movff	reverse_one_square@mR+1,stop@mR+1
  4458   006762  ECD1  F037         	call	_stop	;wreg free
  4459   006766                     
  4460                           ;dc_motor.c: 224:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4461   006766  0E15               	movlw	21
  4462   006768  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  4463   00676A  0E4B               	movlw	75
  4464   00676C  6E1D               	movwf	??_reverse_one_square^0,c
  4465   00676E  0EBE               	movlw	190
  4466   006770                     u8197:
  4467   006770  2EE8               	decfsz	wreg,f,c
  4468   006772  D7FE               	bra	u8197
  4469   006774  2E1D               	decfsz	??_reverse_one_square^0,f,c
  4470   006776  D7FC               	bra	u8197
  4471   006778  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  4472   00677A  D7FA               	bra	u8197
  4473   00677C  D000               	nop2	
  4474   00677E  0012               	return		;funcret
  4475   006780                     __end_of_reverse_one_square:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _reverse_after_read *****************
  4479 ;; Defined at:
  4480 ;;		line 193 in file "dc_motor.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  4483 ;;		 -> main@motorL(9), 
  4484 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  4485 ;;		 -> main@motorR(9), 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;		None
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      void 
  4490 ;; Registers used:
  4491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4497 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4500 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4501 ;;Total ram usage:        6 bytes
  4502 ;; Hardware stack levels used: 1
  4503 ;; Hardware stack levels required when called: 5
  4504 ;; This function calls:
  4505 ;;		_setMotorPWM
  4506 ;;		_stop
  4507 ;; This function is called by:
  4508 ;;		_main
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text16
  4513   006474                     __ptext16:
  4514                           	callstack 0
  4515   006474                     _reverse_after_read:
  4516                           	callstack 25
  4517   006474                     
  4518                           ;dc_motor.c: 194:     mL->direction = 1;
  4519   006474  EE20 F001          	lfsr	2,1
  4520   006478  5019               	movf	reverse_after_read@mL^0,w,c
  4521   00647A  26D9               	addwf	fsr2l,f,c
  4522   00647C  501A               	movf	(reverse_after_read@mL+1)^0,w,c
  4523   00647E  22DA               	addwfc	fsr2h,f,c
  4524   006480  0E01               	movlw	1
  4525   006482  6EDF               	movwf	indf2,c
  4526                           
  4527                           ;dc_motor.c: 195:     mR->direction = 1;
  4528   006484  EE20 F001          	lfsr	2,1
  4529   006488  501B               	movf	reverse_after_read@mR^0,w,c
  4530   00648A  26D9               	addwf	fsr2l,f,c
  4531   00648C  501C               	movf	(reverse_after_read@mR+1)^0,w,c
  4532   00648E  22DA               	addwfc	fsr2h,f,c
  4533   006490  0E01               	movlw	1
  4534   006492  6EDF               	movwf	indf2,c
  4535                           
  4536                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  4537   006494  EF82  F032         	goto	l246
  4538   006498                     l5372:
  4539                           
  4540                           ;dc_motor.c: 198:         if ((mL->power) < 70) (mL->power) += 1;
  4541   006498  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  4542   00649C  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  4543   0064A0  0E46               	movlw	70
  4544   0064A2  60DF               	cpfslt	indf2,c
  4545   0064A4  EF56  F032         	goto	u5481
  4546   0064A8  EF58  F032         	goto	u5480
  4547   0064AC                     u5481:
  4548   0064AC  EF5D  F032         	goto	l5376
  4549   0064B0                     u5480:
  4550   0064B0  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  4551   0064B4  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  4552   0064B8  2ADF               	incf	indf2,f,c
  4553   0064BA                     l5376:
  4554                           
  4555                           ;dc_motor.c: 199:         if ((mR->power) < 70) (mR->power) += 1;
  4556   0064BA  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  4557   0064BE  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  4558   0064C2  0E46               	movlw	70
  4559   0064C4  60DF               	cpfslt	indf2,c
  4560   0064C6  EF67  F032         	goto	u5491
  4561   0064CA  EF69  F032         	goto	u5490
  4562   0064CE                     u5491:
  4563   0064CE  EF6E  F032         	goto	l5380
  4564   0064D2                     u5490:
  4565   0064D2  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  4566   0064D6  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  4567   0064DA  2ADF               	incf	indf2,f,c
  4568   0064DC                     l5380:
  4569                           
  4570                           ;dc_motor.c: 201:         setMotorPWM(mL);
  4571   0064DC  C019  F00F         	movff	reverse_after_read@mL,setMotorPWM@m
  4572   0064E0  C01A  F010         	movff	reverse_after_read@mL+1,setMotorPWM@m+1
  4573   0064E4  EC84  F031         	call	_setMotorPWM	;wreg free
  4574   0064E8                     
  4575                           ;dc_motor.c: 202:         setMotorPWM(mR);
  4576   0064E8  C01B  F00F         	movff	reverse_after_read@mR,setMotorPWM@m
  4577   0064EC  C01C  F010         	movff	reverse_after_read@mR+1,setMotorPWM@m+1
  4578   0064F0  EC84  F031         	call	_setMotorPWM	;wreg free
  4579   0064F4                     
  4580                           ;dc_motor.c: 203:         _delay((unsigned long)((1)*(64000000/4000.0)));
  4581   0064F4  0E15               	movlw	21
  4582   0064F6  6E1D               	movwf	??_reverse_after_read^0,c
  4583   0064F8  0EC6               	movlw	198
  4584   0064FA                     u8207:
  4585   0064FA  2EE8               	decfsz	wreg,f,c
  4586   0064FC  D7FE               	bra	u8207
  4587   0064FE  2E1D               	decfsz	??_reverse_after_read^0,f,c
  4588   006500  D7FC               	bra	u8207
  4589   006502  D000               	nop2	
  4590   006504                     l246:
  4591                           
  4592                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  4593   006504  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  4594   006508  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  4595   00650C  0E45               	movlw	69
  4596   00650E  64DF               	cpfsgt	indf2,c
  4597   006510  EF8C  F032         	goto	u5501
  4598   006514  EF8E  F032         	goto	u5500
  4599   006518                     u5501:
  4600   006518  EF4C  F032         	goto	l5372
  4601   00651C                     u5500:
  4602   00651C  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  4603   006520  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  4604   006524  0E45               	movlw	69
  4605   006526  64DF               	cpfsgt	indf2,c
  4606   006528  EF98  F032         	goto	u5511
  4607   00652C  EF9A  F032         	goto	u5510
  4608   006530                     u5511:
  4609   006530  EF4C  F032         	goto	l5372
  4610   006534                     u5510:
  4611   006534                     
  4612                           ;dc_motor.c: 205:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4613   006534  0E15               	movlw	21
  4614   006536  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  4615   006538  0E4B               	movlw	75
  4616   00653A  6E1D               	movwf	??_reverse_after_read^0,c
  4617   00653C  0EBE               	movlw	190
  4618   00653E                     u8217:
  4619   00653E  2EE8               	decfsz	wreg,f,c
  4620   006540  D7FE               	bra	u8217
  4621   006542  2E1D               	decfsz	??_reverse_after_read^0,f,c
  4622   006544  D7FC               	bra	u8217
  4623   006546  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  4624   006548  D7FA               	bra	u8217
  4625   00654A  D000               	nop2	
  4626   00654C                     
  4627                           ;dc_motor.c: 206:     stop(mL, mR);
  4628   00654C  C019  F015         	movff	reverse_after_read@mL,stop@mL
  4629   006550  C01A  F016         	movff	reverse_after_read@mL+1,stop@mL+1
  4630   006554  C01B  F017         	movff	reverse_after_read@mR,stop@mR
  4631   006558  C01C  F018         	movff	reverse_after_read@mR+1,stop@mR+1
  4632   00655C  ECD1  F037         	call	_stop	;wreg free
  4633   006560                     
  4634                           ;dc_motor.c: 207:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4635   006560  0E15               	movlw	21
  4636   006562  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  4637   006564  0E4B               	movlw	75
  4638   006566  6E1D               	movwf	??_reverse_after_read^0,c
  4639   006568  0EBE               	movlw	190
  4640   00656A                     u8227:
  4641   00656A  2EE8               	decfsz	wreg,f,c
  4642   00656C  D7FE               	bra	u8227
  4643   00656E  2E1D               	decfsz	??_reverse_after_read^0,f,c
  4644   006570  D7FC               	bra	u8227
  4645   006572  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  4646   006574  D7FA               	bra	u8227
  4647   006576  D000               	nop2	
  4648   006578  0012               	return		;funcret
  4649   00657A                     __end_of_reverse_after_read:
  4650                           	callstack 0
  4651                           
  4652 ;; *************** function _resetTimer0 *****************
  4653 ;; Defined at:
  4654 ;;		line 34 in file "timers.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;		None
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;		None
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  1    wreg      void 
  4661 ;; Registers used:
  4662 ;;		wreg, status,2
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;Total ram usage:        0 bytes
  4673 ;; Hardware stack levels used: 1
  4674 ;; Hardware stack levels required when called: 2
  4675 ;; This function calls:
  4676 ;;		Nothing
  4677 ;; This function is called by:
  4678 ;;		_main
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           	psect	text17
  4683   007644                     __ptext17:
  4684                           	callstack 0
  4685   007644                     _resetTimer0:
  4686                           	callstack 28
  4687   007644                     
  4688                           ;timers.c: 35:     TMR0H = 0;
  4689   007644  0E00               	movlw	0
  4690   007646  6ED4               	movwf	212,c	;volatile
  4691                           
  4692                           ;timers.c: 36:     TMR0L = 0;
  4693   007648  0E00               	movlw	0
  4694   00764A  6ED3               	movwf	211,c	;volatile
  4695   00764C  0012               	return		;funcret
  4696   00764E                     __end_of_resetTimer0:
  4697                           	callstack 0
  4698                           
  4699 ;; *************** function _invert_action *****************
  4700 ;; Defined at:
  4701 ;;		line 179 in file "color.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  input_action    1    wreg     unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  input_action    1    3[COMRAM] unsigned char 
  4706 ;;  output_actio    1    4[COMRAM] unsigned char 
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  1    wreg      unsigned char 
  4709 ;; Registers used:
  4710 ;;		wreg, status,2, status,0
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4718 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4719 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4720 ;;Total ram usage:        4 bytes
  4721 ;; Hardware stack levels used: 1
  4722 ;; Hardware stack levels required when called: 2
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_main
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text18
  4731   00703C                     __ptext18:
  4732                           	callstack 0
  4733   00703C                     _invert_action:
  4734                           	callstack 28
  4735                           
  4736                           ;incstack = 0
  4737                           ;invert_action@input_action stored from wreg
  4738   00703C  6E04               	movwf	invert_action@input_action^0,c
  4739   00703E                     
  4740                           ;color.c: 180:     char output_action;;color.c: 181:     switch(input_action){
  4741   00703E  EF3D  F038         	goto	l5218
  4742   007042                     l5202:
  4743                           
  4744                           ;color.c: 183:             output_action = 1;
  4745   007042  0E01               	movlw	1
  4746   007044  6E05               	movwf	invert_action@output_action^0,c
  4747                           
  4748                           ;color.c: 184:             break;
  4749   007046  EF66  F038         	goto	l5220
  4750   00704A                     l5204:
  4751                           
  4752                           ;color.c: 186:             output_action = 0;
  4753   00704A  0E00               	movlw	0
  4754   00704C  6E05               	movwf	invert_action@output_action^0,c
  4755                           
  4756                           ;color.c: 187:             break;
  4757   00704E  EF66  F038         	goto	l5220
  4758   007052                     l5206:
  4759                           
  4760                           ;color.c: 189:             output_action = 2;
  4761   007052  0E02               	movlw	2
  4762   007054  6E05               	movwf	invert_action@output_action^0,c
  4763                           
  4764                           ;color.c: 190:             break;
  4765   007056  EF66  F038         	goto	l5220
  4766   00705A                     l5208:
  4767                           
  4768                           ;color.c: 192:             output_action = 8;
  4769   00705A  0E08               	movlw	8
  4770   00705C  6E05               	movwf	invert_action@output_action^0,c
  4771                           
  4772                           ;color.c: 193:             break;
  4773   00705E  EF66  F038         	goto	l5220
  4774   007062                     l5210:
  4775                           
  4776                           ;color.c: 195:             output_action = 9;
  4777   007062  0E09               	movlw	9
  4778   007064  6E05               	movwf	invert_action@output_action^0,c
  4779                           
  4780                           ;color.c: 196:             break;
  4781   007066  EF66  F038         	goto	l5220
  4782   00706A                     l5212:
  4783                           
  4784                           ;color.c: 198:             output_action = 6;
  4785   00706A  0E06               	movlw	6
  4786   00706C  6E05               	movwf	invert_action@output_action^0,c
  4787                           
  4788                           ;color.c: 199:             break;
  4789   00706E  EF66  F038         	goto	l5220
  4790   007072                     l5214:
  4791                           
  4792                           ;color.c: 201:             output_action = 5;
  4793   007072  0E05               	movlw	5
  4794   007074  6E05               	movwf	invert_action@output_action^0,c
  4795                           
  4796                           ;color.c: 202:             break;
  4797   007076  EF66  F038         	goto	l5220
  4798   00707A                     l5218:
  4799   00707A  5004               	movf	invert_action@input_action^0,w,c
  4800   00707C  6E02               	movwf	??_invert_action^0,c
  4801   00707E  6A03               	clrf	(??_invert_action+1)^0,c
  4802                           
  4803                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4804                           ; Switch size 1, requested type "simple"
  4805                           ; Number of cases is 1, Range of values is 0 to 0
  4806                           ; switch strategies available:
  4807                           ; Name         Instructions Cycles
  4808                           ; simple_byte            4     3 (average)
  4809                           ;	Chosen strategy is simple_byte
  4810   007080  5003               	movf	(??_invert_action+1)^0,w,c
  4811   007082  0A00               	xorlw	0	; case 0
  4812   007084  B4D8               	btfsc	status,2,c
  4813   007086  EF47  F038         	goto	l7858
  4814   00708A  EF66  F038         	goto	l5220
  4815   00708E                     l7858:
  4816                           
  4817                           ; Switch size 1, requested type "simple"
  4818                           ; Number of cases is 7, Range of values is 0 to 6
  4819                           ; switch strategies available:
  4820                           ; Name         Instructions Cycles
  4821                           ; simple_byte           22    12 (average)
  4822                           ;	Chosen strategy is simple_byte
  4823   00708E  5002               	movf	??_invert_action^0,w,c
  4824   007090  0A00               	xorlw	0	; case 0
  4825   007092  B4D8               	btfsc	status,2,c
  4826   007094  EF21  F038         	goto	l5202
  4827   007098  0A01               	xorlw	1	; case 1
  4828   00709A  B4D8               	btfsc	status,2,c
  4829   00709C  EF25  F038         	goto	l5204
  4830   0070A0  0A03               	xorlw	3	; case 2
  4831   0070A2  B4D8               	btfsc	status,2,c
  4832   0070A4  EF29  F038         	goto	l5206
  4833   0070A8  0A01               	xorlw	1	; case 3
  4834   0070AA  B4D8               	btfsc	status,2,c
  4835   0070AC  EF2D  F038         	goto	l5208
  4836   0070B0  0A07               	xorlw	7	; case 4
  4837   0070B2  B4D8               	btfsc	status,2,c
  4838   0070B4  EF31  F038         	goto	l5210
  4839   0070B8  0A01               	xorlw	1	; case 5
  4840   0070BA  B4D8               	btfsc	status,2,c
  4841   0070BC  EF35  F038         	goto	l5212
  4842   0070C0  0A03               	xorlw	3	; case 6
  4843   0070C2  B4D8               	btfsc	status,2,c
  4844   0070C4  EF39  F038         	goto	l5214
  4845   0070C8  EF66  F038         	goto	l5220
  4846   0070CC                     l5220:
  4847                           
  4848                           ;color.c: 206:     return output_action;
  4849   0070CC  5005               	movf	invert_action@output_action^0,w,c
  4850   0070CE  0012               	return		;funcret
  4851   0070D0                     __end_of_invert_action:
  4852                           	callstack 0
  4853                           
  4854 ;; *************** function _initUSART4 *****************
  4855 ;; Defined at:
  4856 ;;		line 4 in file "serial.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      void 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4874 ;;Total ram usage:        0 bytes
  4875 ;; Hardware stack levels used: 1
  4876 ;; Hardware stack levels required when called: 2
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_main
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text19
  4885   00758E                     __ptext19:
  4886                           	callstack 0
  4887   00758E                     _initUSART4:
  4888                           	callstack 28
  4889   00758E                     
  4890                           ;serial.c: 8:     RC0PPS = 0x12;
  4891   00758E  0E12               	movlw	18
  4892   007590  010E               	movlb	14	; () banked
  4893   007592  6F62               	movwf	98,b	;volatile
  4894                           
  4895                           ;serial.c: 9:     RX4PPS = 0x11;
  4896   007594  0E11               	movlw	17
  4897   007596  6F15               	movwf	21,b	;volatile
  4898   007598                     
  4899                           ; BSR set to: 14
  4900                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4901   007598  97E9               	bcf	233,3,b	;volatile
  4902   00759A                     
  4903                           ; BSR set to: 14
  4904                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  4905   00759A  95E8               	bcf	232,2,b	;volatile
  4906                           
  4907                           ;serial.c: 15:     SP4BRGL = 51;
  4908   00759C  0E33               	movlw	51
  4909   00759E  6FE5               	movwf	229,b	;volatile
  4910                           
  4911                           ;serial.c: 16:     SP4BRGH = 0;
  4912   0075A0  0E00               	movlw	0
  4913   0075A2  6FE6               	movwf	230,b	;volatile
  4914   0075A4                     
  4915                           ; BSR set to: 14
  4916                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  4917   0075A4  89E7               	bsf	231,4,b	;volatile
  4918   0075A6                     
  4919                           ; BSR set to: 14
  4920                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  4921   0075A6  8BE8               	bsf	232,5,b	;volatile
  4922   0075A8                     
  4923                           ; BSR set to: 14
  4924                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  4925   0075A8  8FE7               	bsf	231,7,b	;volatile
  4926   0075AA                     
  4927                           ; BSR set to: 14
  4928   0075AA  0012               	return		;funcret
  4929   0075AC                     __end_of_initUSART4:
  4930                           	callstack 0
  4931                           
  4932 ;; *************** function _initDCmotorsPWM *****************
  4933 ;; Defined at:
  4934 ;;		line 6 in file "dc_motor.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  PWMperiod       2    1[COMRAM] int 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      void 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4951 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4952 ;;Total ram usage:        2 bytes
  4953 ;; Hardware stack levels used: 1
  4954 ;; Hardware stack levels required when called: 2
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_main
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text20
  4963   006F00                     __ptext20:
  4964                           	callstack 0
  4965   006F00                     _initDCmotorsPWM:
  4966                           	callstack 28
  4967   006F00                     
  4968                           ;dc_motor.c: 10:     RE2PPS=0x05;
  4969   006F00  0E05               	movlw	5
  4970   006F02  010E               	movlb	14	; () banked
  4971   006F04  6F74               	movwf	116,b	;volatile
  4972                           
  4973                           ;dc_motor.c: 11:     RE4PPS=0x06;
  4974   006F06  0E06               	movlw	6
  4975   006F08  6F76               	movwf	118,b	;volatile
  4976                           
  4977                           ;dc_motor.c: 12:     RC7PPS=0x07;
  4978   006F0A  0E07               	movlw	7
  4979   006F0C  6F69               	movwf	105,b	;volatile
  4980                           
  4981                           ;dc_motor.c: 13:     RG6PPS=0x08;
  4982   006F0E  0E08               	movlw	8
  4983   006F10  6F88               	movwf	136,b	;volatile
  4984                           
  4985                           ;dc_motor.c: 16:     T2CONbits.CKPS=0b100;
  4986   006F12  50BD               	movf	189,w,c	;volatile
  4987   006F14  0B8F               	andlw	-113
  4988   006F16  0940               	iorlw	64
  4989   006F18  6EBD               	movwf	189,c	;volatile
  4990                           
  4991                           ;dc_motor.c: 17:     T2HLTbits.MODE=0b00000;
  4992   006F1A  0EE0               	movlw	-32
  4993   006F1C  16BE               	andwf	190,f,c	;volatile
  4994                           
  4995                           ;dc_motor.c: 18:     T2CLKCONbits.CS=0b0001;
  4996   006F1E  50BF               	movf	191,w,c	;volatile
  4997   006F20  0BF0               	andlw	-16
  4998   006F22  0901               	iorlw	1
  4999   006F24  6EBF               	movwf	191,c	;volatile
  5000                           
  5001                           ;dc_motor.c: 22:     T2PR=99;
  5002   006F26  0E63               	movlw	99
  5003   006F28  6EBC               	movwf	188,c	;volatile
  5004   006F2A                     
  5005                           ; BSR set to: 14
  5006                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  5007   006F2A  8EBD               	bsf	189,7,c	;volatile
  5008                           
  5009                           ;dc_motor.c: 27:     CCPR1H=0;
  5010   006F2C  0E00               	movlw	0
  5011   006F2E  6EAA               	movwf	170,c	;volatile
  5012                           
  5013                           ;dc_motor.c: 28:     CCPR2H=0;
  5014   006F30  0E00               	movlw	0
  5015   006F32  6EA6               	movwf	166,c	;volatile
  5016                           
  5017                           ;dc_motor.c: 29:     CCPR3H=0;
  5018   006F34  0E00               	movlw	0
  5019   006F36  010F               	movlb	15	; () banked
  5020   006F38  6F25               	movwf	37,b	;volatile
  5021                           
  5022                           ;dc_motor.c: 30:     CCPR4H=0;
  5023   006F3A  0E00               	movlw	0
  5024   006F3C  6F21               	movwf	33,b	;volatile
  5025                           
  5026                           ;dc_motor.c: 33:     CCPTMRS0bits.C1TSEL=0;
  5027   006F3E  0EFC               	movlw	-4
  5028   006F40  16AD               	andwf	173,f,c	;volatile
  5029                           
  5030                           ;dc_motor.c: 34:     CCPTMRS0bits.C2TSEL=0;
  5031   006F42  0EF3               	movlw	-13
  5032   006F44  16AD               	andwf	173,f,c	;volatile
  5033                           
  5034                           ;dc_motor.c: 35:     CCPTMRS0bits.C3TSEL=0;
  5035   006F46  0ECF               	movlw	-49
  5036   006F48  16AD               	andwf	173,f,c	;volatile
  5037                           
  5038                           ;dc_motor.c: 36:     CCPTMRS0bits.C4TSEL=0;
  5039   006F4A  0E3F               	movlw	-193
  5040   006F4C  16AD               	andwf	173,f,c	;volatile
  5041   006F4E                     
  5042                           ; BSR set to: 15
  5043                           ;dc_motor.c: 39:     CCP1CONbits.FMT=1;
  5044   006F4E  88AB               	bsf	171,4,c	;volatile
  5045                           
  5046                           ;dc_motor.c: 40:     CCP1CONbits.CCP1MODE=0b1100;
  5047   006F50  50AB               	movf	171,w,c	;volatile
  5048   006F52  0BF0               	andlw	-16
  5049   006F54  090C               	iorlw	12
  5050   006F56  6EAB               	movwf	171,c	;volatile
  5051   006F58                     
  5052                           ; BSR set to: 15
  5053                           ;dc_motor.c: 41:     CCP1CONbits.EN=1;
  5054   006F58  8EAB               	bsf	171,7,c	;volatile
  5055   006F5A                     
  5056                           ; BSR set to: 15
  5057                           ;dc_motor.c: 43:     CCP2CONbits.FMT=1;
  5058   006F5A  88A7               	bsf	167,4,c	;volatile
  5059                           
  5060                           ;dc_motor.c: 44:     CCP2CONbits.CCP2MODE=0b1100;
  5061   006F5C  50A7               	movf	167,w,c	;volatile
  5062   006F5E  0BF0               	andlw	-16
  5063   006F60  090C               	iorlw	12
  5064   006F62  6EA7               	movwf	167,c	;volatile
  5065   006F64                     
  5066                           ; BSR set to: 15
  5067                           ;dc_motor.c: 45:     CCP2CONbits.EN=1;
  5068   006F64  8EA7               	bsf	167,7,c	;volatile
  5069   006F66                     
  5070                           ; BSR set to: 15
  5071                           ;dc_motor.c: 47:     CCP3CONbits.FMT=1;
  5072   006F66  8926               	bsf	38,4,b	;volatile
  5073                           
  5074                           ;dc_motor.c: 48:     CCP3CONbits.CCP3MODE=0b1100;
  5075   006F68  5126               	movf	38,w,b	;volatile
  5076   006F6A  0BF0               	andlw	-16
  5077   006F6C  090C               	iorlw	12
  5078   006F6E  6F26               	movwf	38,b	;volatile
  5079   006F70                     
  5080                           ; BSR set to: 15
  5081                           ;dc_motor.c: 49:     CCP3CONbits.EN=1;
  5082   006F70  8F26               	bsf	38,7,b	;volatile
  5083   006F72                     
  5084                           ; BSR set to: 15
  5085                           ;dc_motor.c: 51:     CCP4CONbits.FMT=1;
  5086   006F72  8922               	bsf	34,4,b	;volatile
  5087                           
  5088                           ;dc_motor.c: 52:     CCP4CONbits.CCP4MODE=0b1100;
  5089   006F74  5122               	movf	34,w,b	;volatile
  5090   006F76  0BF0               	andlw	-16
  5091   006F78  090C               	iorlw	12
  5092   006F7A  6F22               	movwf	34,b	;volatile
  5093   006F7C                     
  5094                           ; BSR set to: 15
  5095                           ;dc_motor.c: 53:     CCP4CONbits.EN=1;
  5096   006F7C  8F22               	bsf	34,7,b	;volatile
  5097                           
  5098                           ;dc_motor.c: 56:     RE2PPS=0x05;
  5099   006F7E  0E05               	movlw	5
  5100   006F80  010E               	movlb	14	; () banked
  5101   006F82  6F74               	movwf	116,b	;volatile
  5102                           
  5103                           ;dc_motor.c: 57:     RE4PPS=0x06;
  5104   006F84  0E06               	movlw	6
  5105   006F86  6F76               	movwf	118,b	;volatile
  5106                           
  5107                           ;dc_motor.c: 58:     RC7PPS=0x07;
  5108   006F88  0E07               	movlw	7
  5109   006F8A  6F69               	movwf	105,b	;volatile
  5110                           
  5111                           ;dc_motor.c: 59:     RG6PPS=0x08;
  5112   006F8C  0E08               	movlw	8
  5113   006F8E  6F88               	movwf	136,b	;volatile
  5114   006F90                     
  5115                           ; BSR set to: 14
  5116                           ;dc_motor.c: 62:     TRISEbits.TRISE2=0;
  5117   006F90  9485               	bcf	133,2,c	;volatile
  5118   006F92                     
  5119                           ; BSR set to: 14
  5120                           ;dc_motor.c: 63:     TRISEbits.TRISE4=0;
  5121   006F92  9885               	bcf	133,4,c	;volatile
  5122   006F94                     
  5123                           ; BSR set to: 14
  5124                           ;dc_motor.c: 64:     TRISCbits.TRISC7=0;
  5125   006F94  9E83               	bcf	131,7,c	;volatile
  5126   006F96                     
  5127                           ; BSR set to: 14
  5128                           ;dc_motor.c: 65:     TRISGbits.TRISG6=0;
  5129   006F96  9C87               	bcf	135,6,c	;volatile
  5130   006F98                     
  5131                           ; BSR set to: 14
  5132                           ;dc_motor.c: 68:     LATEbits.LATE2=0;
  5133   006F98  947D               	bcf	125,2,c	;volatile
  5134   006F9A                     
  5135                           ; BSR set to: 14
  5136                           ;dc_motor.c: 69:     LATCbits.LATC7=0;
  5137   006F9A  9E7B               	bcf	123,7,c	;volatile
  5138   006F9C                     
  5139                           ; BSR set to: 14
  5140                           ;dc_motor.c: 70:     LATEbits.LATE4=0;
  5141   006F9C  987D               	bcf	125,4,c	;volatile
  5142   006F9E                     
  5143                           ; BSR set to: 14
  5144                           ;dc_motor.c: 71:     LATGbits.LATG6=0;
  5145   006F9E  9C7F               	bcf	127,6,c	;volatile
  5146   006FA0                     
  5147                           ; BSR set to: 14
  5148   006FA0  0012               	return		;funcret
  5149   006FA2                     __end_of_initDCmotorsPWM:
  5150                           	callstack 0
  5151                           
  5152 ;; *************** function _inch_forward *****************
  5153 ;; Defined at:
  5154 ;;		line 227 in file "dc_motor.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  5157 ;;		 -> main@motorL(9), 
  5158 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  5159 ;;		 -> main@motorR(9), 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;		None
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  1    wreg      void 
  5164 ;; Registers used:
  5165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5171 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5174 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5175 ;;Total ram usage:        6 bytes
  5176 ;; Hardware stack levels used: 1
  5177 ;; Hardware stack levels required when called: 5
  5178 ;; This function calls:
  5179 ;;		_setMotorPWM
  5180 ;;		_stop
  5181 ;; This function is called by:
  5182 ;;		_main
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text21
  5187   006B2C                     __ptext21:
  5188                           	callstack 0
  5189   006B2C                     _inch_forward:
  5190                           	callstack 25
  5191   006B2C                     
  5192                           ;dc_motor.c: 228:     mL->direction = 0;
  5193   006B2C  EE20 F001          	lfsr	2,1
  5194   006B30  5019               	movf	inch_forward@mL^0,w,c
  5195   006B32  26D9               	addwf	fsr2l,f,c
  5196   006B34  501A               	movf	(inch_forward@mL+1)^0,w,c
  5197   006B36  22DA               	addwfc	fsr2h,f,c
  5198   006B38  6ADF               	clrf	indf2,c
  5199                           
  5200                           ;dc_motor.c: 229:     mR->direction = 0;
  5201   006B3A  EE20 F001          	lfsr	2,1
  5202   006B3E  501B               	movf	inch_forward@mR^0,w,c
  5203   006B40  26D9               	addwf	fsr2l,f,c
  5204   006B42  501C               	movf	(inch_forward@mR+1)^0,w,c
  5205   006B44  22DA               	addwfc	fsr2h,f,c
  5206   006B46  6ADF               	clrf	indf2,c
  5207                           
  5208                           ;dc_motor.c: 231:     while ((mL->power) < 20 || (mR->power) < 20){
  5209   006B48  EFDC  F035         	goto	l262
  5210   006B4C                     l5420:
  5211                           
  5212                           ;dc_motor.c: 232:         if ((mL->power) < 20) (mL->power) += 1;
  5213   006B4C  C019  FFD9         	movff	inch_forward@mL,fsr2l
  5214   006B50  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  5215   006B54  0E14               	movlw	20
  5216   006B56  60DF               	cpfslt	indf2,c
  5217   006B58  EFB0  F035         	goto	u5561
  5218   006B5C  EFB2  F035         	goto	u5560
  5219   006B60                     u5561:
  5220   006B60  EFB7  F035         	goto	l5424
  5221   006B64                     u5560:
  5222   006B64  C019  FFD9         	movff	inch_forward@mL,fsr2l
  5223   006B68  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  5224   006B6C  2ADF               	incf	indf2,f,c
  5225   006B6E                     l5424:
  5226                           
  5227                           ;dc_motor.c: 233:         if ((mR->power) < 20) (mR->power) += 1;
  5228   006B6E  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  5229   006B72  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  5230   006B76  0E14               	movlw	20
  5231   006B78  60DF               	cpfslt	indf2,c
  5232   006B7A  EFC1  F035         	goto	u5571
  5233   006B7E  EFC3  F035         	goto	u5570
  5234   006B82                     u5571:
  5235   006B82  EFC8  F035         	goto	l5428
  5236   006B86                     u5570:
  5237   006B86  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  5238   006B8A  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  5239   006B8E  2ADF               	incf	indf2,f,c
  5240   006B90                     l5428:
  5241                           
  5242                           ;dc_motor.c: 235:         setMotorPWM(mL);
  5243   006B90  C019  F00F         	movff	inch_forward@mL,setMotorPWM@m
  5244   006B94  C01A  F010         	movff	inch_forward@mL+1,setMotorPWM@m+1
  5245   006B98  EC84  F031         	call	_setMotorPWM	;wreg free
  5246   006B9C                     
  5247                           ;dc_motor.c: 236:         setMotorPWM(mR);
  5248   006B9C  C01B  F00F         	movff	inch_forward@mR,setMotorPWM@m
  5249   006BA0  C01C  F010         	movff	inch_forward@mR+1,setMotorPWM@m+1
  5250   006BA4  EC84  F031         	call	_setMotorPWM	;wreg free
  5251   006BA8                     
  5252                           ;dc_motor.c: 237:         _delay((unsigned long)((1)*(64000000/4000.0)));
  5253   006BA8  0E15               	movlw	21
  5254   006BAA  6E1D               	movwf	??_inch_forward^0,c
  5255   006BAC  0EC6               	movlw	198
  5256   006BAE                     u8237:
  5257   006BAE  2EE8               	decfsz	wreg,f,c
  5258   006BB0  D7FE               	bra	u8237
  5259   006BB2  2E1D               	decfsz	??_inch_forward^0,f,c
  5260   006BB4  D7FC               	bra	u8237
  5261   006BB6  D000               	nop2	
  5262   006BB8                     l262:
  5263                           
  5264                           ;dc_motor.c: 231:     while ((mL->power) < 20 || (mR->power) < 20){
  5265   006BB8  C019  FFD9         	movff	inch_forward@mL,fsr2l
  5266   006BBC  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  5267   006BC0  0E13               	movlw	19
  5268   006BC2  64DF               	cpfsgt	indf2,c
  5269   006BC4  EFE6  F035         	goto	u5581
  5270   006BC8  EFE8  F035         	goto	u5580
  5271   006BCC                     u5581:
  5272   006BCC  EFA6  F035         	goto	l5420
  5273   006BD0                     u5580:
  5274   006BD0  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  5275   006BD4  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  5276   006BD8  0E13               	movlw	19
  5277   006BDA  64DF               	cpfsgt	indf2,c
  5278   006BDC  EFF2  F035         	goto	u5591
  5279   006BE0  EFF4  F035         	goto	u5590
  5280   006BE4                     u5591:
  5281   006BE4  EFA6  F035         	goto	l5420
  5282   006BE8                     u5590:
  5283   006BE8                     
  5284                           ;dc_motor.c: 239:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5285   006BE8  0E05               	movlw	5
  5286   006BEA  6E1E               	movwf	(??_inch_forward+1)^0,c
  5287   006BEC  0E0F               	movlw	15
  5288   006BEE  6E1D               	movwf	??_inch_forward^0,c
  5289   006BF0  0EF1               	movlw	241
  5290   006BF2                     u8247:
  5291   006BF2  2EE8               	decfsz	wreg,f,c
  5292   006BF4  D7FE               	bra	u8247
  5293   006BF6  2E1D               	decfsz	??_inch_forward^0,f,c
  5294   006BF8  D7FC               	bra	u8247
  5295   006BFA  2E1E               	decfsz	(??_inch_forward+1)^0,f,c
  5296   006BFC  D7FA               	bra	u8247
  5297   006BFE  0000               	nop	
  5298   006C00                     
  5299                           ;dc_motor.c: 240:     stop(mL, mR);
  5300   006C00  C019  F015         	movff	inch_forward@mL,stop@mL
  5301   006C04  C01A  F016         	movff	inch_forward@mL+1,stop@mL+1
  5302   006C08  C01B  F017         	movff	inch_forward@mR,stop@mR
  5303   006C0C  C01C  F018         	movff	inch_forward@mR+1,stop@mR+1
  5304   006C10  ECD1  F037         	call	_stop	;wreg free
  5305   006C14  0012               	return		;funcret
  5306   006C16                     __end_of_inch_forward:
  5307                           	callstack 0
  5308                           
  5309 ;; *************** function _stop *****************
  5310 ;; Defined at:
  5311 ;;		line 114 in file "dc_motor.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  5314 ;;		 -> main@motorL(9), 
  5315 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  5316 ;;		 -> main@motorR(9), 
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5331 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5332 ;;Total ram usage:        4 bytes
  5333 ;; Hardware stack levels used: 1
  5334 ;; Hardware stack levels required when called: 4
  5335 ;; This function calls:
  5336 ;;		_setMotorPWM
  5337 ;; This function is called by:
  5338 ;;		_turn_left_90
  5339 ;;		_turn_right_90
  5340 ;;		_turn_left_135
  5341 ;;		_turn_right_135
  5342 ;;		_reverse_after_read
  5343 ;;		_reverse_one_square
  5344 ;;		_inch_forward
  5345 ;;		_main
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           	psect	text22
  5350   006FA2                     __ptext22:
  5351                           	callstack 0
  5352   006FA2                     _stop:
  5353                           	callstack 25
  5354   006FA2                     
  5355                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  5356   006FA2  EF05  F038         	goto	l5006
  5357   006FA6                     l4992:
  5358                           
  5359                           ;dc_motor.c: 116:         if ((mL->power) > 0) (mL->power) -= 1;
  5360   006FA6  C015  FFD9         	movff	stop@mL,fsr2l
  5361   006FAA  C016  FFDA         	movff	stop@mL+1,fsr2h
  5362   006FAE  50DF               	movf	indf2,w,c
  5363   006FB0  B4D8               	btfsc	status,2,c
  5364   006FB2  EFDD  F037         	goto	u5111
  5365   006FB6  EFDF  F037         	goto	u5110
  5366   006FBA                     u5111:
  5367   006FBA  EFE4  F037         	goto	l4996
  5368   006FBE                     u5110:
  5369   006FBE  C015  FFD9         	movff	stop@mL,fsr2l
  5370   006FC2  C016  FFDA         	movff	stop@mL+1,fsr2h
  5371   006FC6  06DF               	decf	indf2,f,c
  5372   006FC8                     l4996:
  5373                           
  5374                           ;dc_motor.c: 117:         if ((mR->power) > 0) (mR->power) -= 1;
  5375   006FC8  C017  FFD9         	movff	stop@mR,fsr2l
  5376   006FCC  C018  FFDA         	movff	stop@mR+1,fsr2h
  5377   006FD0  50DF               	movf	indf2,w,c
  5378   006FD2  B4D8               	btfsc	status,2,c
  5379   006FD4  EFEE  F037         	goto	u5121
  5380   006FD8  EFF0  F037         	goto	u5120
  5381   006FDC                     u5121:
  5382   006FDC  EFF5  F037         	goto	l5000
  5383   006FE0                     u5120:
  5384   006FE0  C017  FFD9         	movff	stop@mR,fsr2l
  5385   006FE4  C018  FFDA         	movff	stop@mR+1,fsr2h
  5386   006FE8  06DF               	decf	indf2,f,c
  5387   006FEA                     l5000:
  5388                           
  5389                           ;dc_motor.c: 119:         setMotorPWM(mL);
  5390   006FEA  C015  F00F         	movff	stop@mL,setMotorPWM@m
  5391   006FEE  C016  F010         	movff	stop@mL+1,setMotorPWM@m+1
  5392   006FF2  EC84  F031         	call	_setMotorPWM	;wreg free
  5393   006FF6                     
  5394                           ;dc_motor.c: 120:         setMotorPWM(mR);
  5395   006FF6  C017  F00F         	movff	stop@mR,setMotorPWM@m
  5396   006FFA  C018  F010         	movff	stop@mR+1,setMotorPWM@m+1
  5397   006FFE  EC84  F031         	call	_setMotorPWM	;wreg free
  5398   007002                     
  5399                           ;dc_motor.c: 121:         _delay((unsigned long)((25)*(64000000/4000000.0)));
  5400   007002  0E85               	movlw	133
  5401   007004                     u8257:
  5402   007004  2EE8               	decfsz	wreg,f,c
  5403   007006  D7FE               	bra	u8257
  5404   007008  0000               	nop	
  5405   00700A                     l5006:
  5406                           
  5407                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  5408   00700A  C015  FFD9         	movff	stop@mL,fsr2l
  5409   00700E  C016  FFDA         	movff	stop@mL+1,fsr2h
  5410   007012  50DF               	movf	indf2,w,c
  5411   007014  A4D8               	btfss	status,2,c
  5412   007016  EF0F  F038         	goto	u5131
  5413   00701A  EF11  F038         	goto	u5130
  5414   00701E                     u5131:
  5415   00701E  EFD3  F037         	goto	l4992
  5416   007022                     u5130:
  5417   007022  C017  FFD9         	movff	stop@mR,fsr2l
  5418   007026  C018  FFDA         	movff	stop@mR+1,fsr2h
  5419   00702A  50DF               	movf	indf2,w,c
  5420   00702C  A4D8               	btfss	status,2,c
  5421   00702E  EF1B  F038         	goto	u5141
  5422   007032  EF1D  F038         	goto	u5140
  5423   007036                     u5141:
  5424   007036  EFD3  F037         	goto	l4992
  5425   00703A                     u5140:
  5426   00703A  0012               	return		;funcret
  5427   00703C                     __end_of_stop:
  5428                           	callstack 0
  5429                           
  5430 ;; *************** function _get16bitTMR0val *****************
  5431 ;; Defined at:
  5432 ;;		line 27 in file "timers.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;		None
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;  timer_val       2    5[COMRAM] unsigned int 
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  2    1[COMRAM] unsigned int 
  5439 ;; Registers used:
  5440 ;;		wreg, status,2, status,0
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5449 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5450 ;;Total ram usage:        6 bytes
  5451 ;; Hardware stack levels used: 1
  5452 ;; Hardware stack levels required when called: 2
  5453 ;; This function calls:
  5454 ;;		Nothing
  5455 ;; This function is called by:
  5456 ;;		_main
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text23
  5461   0075AC                     __ptext23:
  5462                           	callstack 0
  5463   0075AC                     _get16bitTMR0val:
  5464                           	callstack 28
  5465   0075AC                     
  5466                           ;timers.c: 29:     unsigned int timer_val = TMR0L;
  5467   0075AC  CFD3 F006          	movff	4051,get16bitTMR0val@timer_val	;volatile
  5468   0075B0  6A07               	clrf	(get16bitTMR0val@timer_val+1)^0,c
  5469   0075B2                     
  5470                           ;timers.c: 30:     timer_val |= (TMR0H << 8);
  5471   0075B2  50D4               	movf	212,w,c	;volatile
  5472   0075B4  6E05               	movwf	(??_get16bitTMR0val+1)^0,c
  5473   0075B6  6A04               	clrf	??_get16bitTMR0val^0,c
  5474   0075B8  5004               	movf	??_get16bitTMR0val^0,w,c
  5475   0075BA  1206               	iorwf	get16bitTMR0val@timer_val^0,f,c
  5476   0075BC  5005               	movf	(??_get16bitTMR0val+1)^0,w,c
  5477   0075BE  1207               	iorwf	(get16bitTMR0val@timer_val+1)^0,f,c
  5478   0075C0                     
  5479                           ;timers.c: 31:     return timer_val;
  5480   0075C0  C006  F002         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  5481   0075C4  C007  F003         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  5482   0075C8  0012               	return		;funcret
  5483   0075CA                     __end_of_get16bitTMR0val:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function _fullSpeedAhead *****************
  5487 ;; Defined at:
  5488 ;;		line 99 in file "dc_motor.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  5491 ;;		 -> main@motorL(9), 
  5492 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  5493 ;;		 -> main@motorR(9), 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;		None
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      void 
  5498 ;; Registers used:
  5499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5507 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5508 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5509 ;;Total ram usage:        5 bytes
  5510 ;; Hardware stack levels used: 1
  5511 ;; Hardware stack levels required when called: 4
  5512 ;; This function calls:
  5513 ;;		_setMotorPWM
  5514 ;; This function is called by:
  5515 ;;		_main
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           	psect	text24
  5520   006CDA                     __ptext24:
  5521                           	callstack 0
  5522   006CDA                     _fullSpeedAhead:
  5523                           	callstack 26
  5524   006CDA                     
  5525                           ;dc_motor.c: 100:     mL->direction = 0;
  5526   006CDA  EE20 F001          	lfsr	2,1
  5527   006CDE  5015               	movf	fullSpeedAhead@mL^0,w,c
  5528   006CE0  26D9               	addwf	fsr2l,f,c
  5529   006CE2  5016               	movf	(fullSpeedAhead@mL+1)^0,w,c
  5530   006CE4  22DA               	addwfc	fsr2h,f,c
  5531   006CE6  6ADF               	clrf	indf2,c
  5532                           
  5533                           ;dc_motor.c: 101:     mR->direction = 0;
  5534   006CE8  EE20 F001          	lfsr	2,1
  5535   006CEC  5017               	movf	fullSpeedAhead@mR^0,w,c
  5536   006CEE  26D9               	addwf	fsr2l,f,c
  5537   006CF0  5018               	movf	(fullSpeedAhead@mR+1)^0,w,c
  5538   006CF2  22DA               	addwfc	fsr2h,f,c
  5539   006CF4  6ADF               	clrf	indf2,c
  5540                           
  5541                           ;dc_motor.c: 103:     while ((mL->power) < 70 || (mR->power) < 70){
  5542   006CF6  EFB2  F036         	goto	l198
  5543   006CFA                     l5266:
  5544                           
  5545                           ;dc_motor.c: 104:         if ((mL->power) < 70) (mL->power) += 1;
  5546   006CFA  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5547   006CFE  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5548   006D02  0E46               	movlw	70
  5549   006D04  60DF               	cpfslt	indf2,c
  5550   006D06  EF87  F036         	goto	u5281
  5551   006D0A  EF89  F036         	goto	u5280
  5552   006D0E                     u5281:
  5553   006D0E  EF8E  F036         	goto	l5270
  5554   006D12                     u5280:
  5555   006D12  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5556   006D16  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5557   006D1A  2ADF               	incf	indf2,f,c
  5558   006D1C                     l5270:
  5559                           
  5560                           ;dc_motor.c: 105:         if ((mR->power) < 70) (mR->power) += 1;
  5561   006D1C  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5562   006D20  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5563   006D24  0E46               	movlw	70
  5564   006D26  60DF               	cpfslt	indf2,c
  5565   006D28  EF98  F036         	goto	u5291
  5566   006D2C  EF9A  F036         	goto	u5290
  5567   006D30                     u5291:
  5568   006D30  EF9F  F036         	goto	l5274
  5569   006D34                     u5290:
  5570   006D34  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5571   006D38  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5572   006D3C  2ADF               	incf	indf2,f,c
  5573   006D3E                     l5274:
  5574                           
  5575                           ;dc_motor.c: 107:         setMotorPWM(mL);
  5576   006D3E  C015  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  5577   006D42  C016  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  5578   006D46  EC84  F031         	call	_setMotorPWM	;wreg free
  5579   006D4A                     
  5580                           ;dc_motor.c: 108:         setMotorPWM(mR);
  5581   006D4A  C017  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  5582   006D4E  C018  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  5583   006D52  EC84  F031         	call	_setMotorPWM	;wreg free
  5584   006D56                     
  5585                           ;dc_motor.c: 109:         _delay((unsigned long)((2)*(64000000/4000.0)));
  5586   006D56  0E2A               	movlw	42
  5587   006D58  6E19               	movwf	??_fullSpeedAhead^0,c
  5588   006D5A  0E8E               	movlw	142
  5589   006D5C                     u8267:
  5590   006D5C  2EE8               	decfsz	wreg,f,c
  5591   006D5E  D7FE               	bra	u8267
  5592   006D60  2E19               	decfsz	??_fullSpeedAhead^0,f,c
  5593   006D62  D7FC               	bra	u8267
  5594   006D64                     l198:
  5595                           
  5596                           ;dc_motor.c: 103:     while ((mL->power) < 70 || (mR->power) < 70){
  5597   006D64  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5598   006D68  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5599   006D6C  0E45               	movlw	69
  5600   006D6E  64DF               	cpfsgt	indf2,c
  5601   006D70  EFBC  F036         	goto	u5301
  5602   006D74  EFBE  F036         	goto	u5300
  5603   006D78                     u5301:
  5604   006D78  EF7D  F036         	goto	l5266
  5605   006D7C                     u5300:
  5606   006D7C  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5607   006D80  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5608   006D84  0E45               	movlw	69
  5609   006D86  64DF               	cpfsgt	indf2,c
  5610   006D88  EFC8  F036         	goto	u5311
  5611   006D8C  EFCA  F036         	goto	u5310
  5612   006D90                     u5311:
  5613   006D90  EF7D  F036         	goto	l5266
  5614   006D94                     u5310:
  5615   006D94  0012               	return		;funcret
  5616   006D96                     __end_of_fullSpeedAhead:
  5617                           	callstack 0
  5618                           
  5619 ;; *************** function _setMotorPWM *****************
  5620 ;; Defined at:
  5621 ;;		line 76 in file "dc_motor.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  m               2   14[COMRAM] PTR struct DC_motor
  5624 ;;		 -> main@motorR(9), main@motorL(9), 
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;  negDuty         1   19[COMRAM] unsigned char 
  5627 ;;  posDuty         1   18[COMRAM] unsigned char 
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      void 
  5630 ;; Registers used:
  5631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5639 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5640 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5641 ;;Total ram usage:        6 bytes
  5642 ;; Hardware stack levels used: 1
  5643 ;; Hardware stack levels required when called: 3
  5644 ;; This function calls:
  5645 ;;		___lwdiv
  5646 ;;		___wmul
  5647 ;; This function is called by:
  5648 ;;		_fullSpeedAhead
  5649 ;;		_stop
  5650 ;;		_turn_left_90
  5651 ;;		_turn_right_90
  5652 ;;		_turn_left_135
  5653 ;;		_turn_right_135
  5654 ;;		_reverse_after_read
  5655 ;;		_reverse_one_square
  5656 ;;		_inch_forward
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text25
  5661   006308                     __ptext25:
  5662                           	callstack 0
  5663   006308                     _setMotorPWM:
  5664                           	callstack 25
  5665   006308                     
  5666                           ;dc_motor.c: 76: void setMotorPWM(struct DC_motor *m);dc_motor.c: 77: {;dc_motor.c: 78: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 80:     if(m->brakemode) {
  5667   006308  EE20 F002          	lfsr	2,2
  5668   00630C  500F               	movf	setMotorPWM@m^0,w,c
  5669   00630E  26D9               	addwf	fsr2l,f,c
  5670   006310  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5671   006312  22DA               	addwfc	fsr2h,f,c
  5672   006314  50DF               	movf	indf2,w,c
  5673   006316  B4D8               	btfsc	status,2,c
  5674   006318  EF90  F031         	goto	u3931
  5675   00631C  EF92  F031         	goto	u3930
  5676   006320                     u3931:
  5677   006320  EFC6  F031         	goto	l4214
  5678   006324                     u3930:
  5679   006324                     
  5680                           ;dc_motor.c: 81:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  5681   006324  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  5682   006328  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5683   00632C  50DF               	movf	indf2,w,c
  5684   00632E  6E11               	movwf	??_setMotorPWM^0,c
  5685   006330  5011               	movf	??_setMotorPWM^0,w,c
  5686   006332  6E02               	movwf	___wmul@multiplier^0,c
  5687   006334  6A03               	clrf	(___wmul@multiplier+1)^0,c
  5688   006336  EE20 F003          	lfsr	2,3
  5689   00633A  500F               	movf	setMotorPWM@m^0,w,c
  5690   00633C  26D9               	addwf	fsr2l,f,c
  5691   00633E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5692   006340  22DA               	addwfc	fsr2h,f,c
  5693   006342  CFDE F004          	movff	postinc2,___wmul@multiplicand
  5694   006346  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  5695   00634A  EC94  F03A         	call	___wmul	;wreg free
  5696   00634E  C002  F008         	movff	?___wmul,___lwdiv@dividend
  5697   006352  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  5698   006356  0E00               	movlw	0
  5699   006358  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  5700   00635A  0E64               	movlw	100
  5701   00635C  6E0A               	movwf	___lwdiv@divisor^0,c
  5702   00635E  EC68  F038         	call	___lwdiv	;wreg free
  5703   006362  EE20 F003          	lfsr	2,3
  5704   006366  500F               	movf	setMotorPWM@m^0,w,c
  5705   006368  26D9               	addwf	fsr2l,f,c
  5706   00636A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5707   00636C  22DA               	addwfc	fsr2h,f,c
  5708   00636E  50DF               	movf	indf2,w,c
  5709   006370  6E12               	movwf	(??_setMotorPWM+1)^0,c
  5710   006372  5008               	movf	?___lwdiv^0,w,c
  5711   006374  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  5712   006376  6E13               	movwf	setMotorPWM@posDuty^0,c
  5713   006378                     
  5714                           ;dc_motor.c: 82:         negDuty=m->PWMperiod;
  5715   006378  EE20 F003          	lfsr	2,3
  5716   00637C  500F               	movf	setMotorPWM@m^0,w,c
  5717   00637E  26D9               	addwf	fsr2l,f,c
  5718   006380  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5719   006382  22DA               	addwfc	fsr2h,f,c
  5720   006384  50DF               	movf	indf2,w,c
  5721   006386  6E14               	movwf	setMotorPWM@negDuty^0,c
  5722                           
  5723                           ;dc_motor.c: 83:     }
  5724   006388  EFE9  F031         	goto	l4218
  5725   00638C                     l4214:
  5726                           
  5727                           ;dc_motor.c: 85:         posDuty=0;
  5728   00638C  0E00               	movlw	0
  5729   00638E  6E13               	movwf	setMotorPWM@posDuty^0,c
  5730   006390                     
  5731                           ;dc_motor.c: 86:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  5732   006390  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  5733   006394  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5734   006398  50DF               	movf	indf2,w,c
  5735   00639A  6E11               	movwf	??_setMotorPWM^0,c
  5736   00639C  5011               	movf	??_setMotorPWM^0,w,c
  5737   00639E  6E02               	movwf	___wmul@multiplier^0,c
  5738   0063A0  6A03               	clrf	(___wmul@multiplier+1)^0,c
  5739   0063A2  EE20 F003          	lfsr	2,3
  5740   0063A6  500F               	movf	setMotorPWM@m^0,w,c
  5741   0063A8  26D9               	addwf	fsr2l,f,c
  5742   0063AA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5743   0063AC  22DA               	addwfc	fsr2h,f,c
  5744   0063AE  CFDE F004          	movff	postinc2,___wmul@multiplicand
  5745   0063B2  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  5746   0063B6  EC94  F03A         	call	___wmul	;wreg free
  5747   0063BA  C002  F008         	movff	?___wmul,___lwdiv@dividend
  5748   0063BE  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  5749   0063C2  0E00               	movlw	0
  5750   0063C4  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  5751   0063C6  0E64               	movlw	100
  5752   0063C8  6E0A               	movwf	___lwdiv@divisor^0,c
  5753   0063CA  EC68  F038         	call	___lwdiv	;wreg free
  5754   0063CE  5008               	movf	?___lwdiv^0,w,c
  5755   0063D0  6E14               	movwf	setMotorPWM@negDuty^0,c
  5756   0063D2                     l4218:
  5757                           
  5758                           ;dc_motor.c: 89:     if (m->direction) {
  5759   0063D2  EE20 F001          	lfsr	2,1
  5760   0063D6  500F               	movf	setMotorPWM@m^0,w,c
  5761   0063D8  26D9               	addwf	fsr2l,f,c
  5762   0063DA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5763   0063DC  22DA               	addwfc	fsr2h,f,c
  5764   0063DE  50DF               	movf	indf2,w,c
  5765   0063E0  B4D8               	btfsc	status,2,c
  5766   0063E2  EFF5  F031         	goto	u3941
  5767   0063E6  EFF7  F031         	goto	u3940
  5768   0063EA                     u3941:
  5769   0063EA  EF19  F032         	goto	l4222
  5770   0063EE                     u3940:
  5771   0063EE                     
  5772                           ;dc_motor.c: 90:         *(m->posDutyHighByte)=posDuty;
  5773   0063EE  EE20 F005          	lfsr	2,5
  5774   0063F2  500F               	movf	setMotorPWM@m^0,w,c
  5775   0063F4  26D9               	addwf	fsr2l,f,c
  5776   0063F6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5777   0063F8  22DA               	addwfc	fsr2h,f,c
  5778   0063FA  CFDE F011          	movff	postinc2,??_setMotorPWM
  5779   0063FE  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5780   006402  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5781   006406  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5782   00640A  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  5783                           
  5784                           ;dc_motor.c: 91:         *(m->negDutyHighByte)=negDuty;
  5785   00640E  EE20 F007          	lfsr	2,7
  5786   006412  500F               	movf	setMotorPWM@m^0,w,c
  5787   006414  26D9               	addwf	fsr2l,f,c
  5788   006416  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5789   006418  22DA               	addwfc	fsr2h,f,c
  5790   00641A  CFDE F011          	movff	postinc2,??_setMotorPWM
  5791   00641E  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5792   006422  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5793   006426  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5794   00642A  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  5795                           
  5796                           ;dc_motor.c: 92:     } else {
  5797   00642E  EF39  F032         	goto	l195
  5798   006432                     l4222:
  5799                           
  5800                           ;dc_motor.c: 93:         *(m->posDutyHighByte)=negDuty;
  5801   006432  EE20 F005          	lfsr	2,5
  5802   006436  500F               	movf	setMotorPWM@m^0,w,c
  5803   006438  26D9               	addwf	fsr2l,f,c
  5804   00643A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5805   00643C  22DA               	addwfc	fsr2h,f,c
  5806   00643E  CFDE F011          	movff	postinc2,??_setMotorPWM
  5807   006442  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5808   006446  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5809   00644A  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5810   00644E  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  5811                           
  5812                           ;dc_motor.c: 94:         *(m->negDutyHighByte)=posDuty;
  5813   006452  EE20 F007          	lfsr	2,7
  5814   006456  500F               	movf	setMotorPWM@m^0,w,c
  5815   006458  26D9               	addwf	fsr2l,f,c
  5816   00645A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5817   00645C  22DA               	addwfc	fsr2h,f,c
  5818   00645E  CFDE F011          	movff	postinc2,??_setMotorPWM
  5819   006462  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5820   006466  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5821   00646A  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5822   00646E  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  5823   006472                     l195:
  5824   006472  0012               	return		;funcret
  5825   006474                     __end_of_setMotorPWM:
  5826                           	callstack 0
  5827                           
  5828 ;; *************** function ___wmul *****************
  5829 ;; Defined at:
  5830 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;  multiplier      2    1[COMRAM] unsigned int 
  5833 ;;  multiplicand    2    3[COMRAM] unsigned int 
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;  product         2    5[COMRAM] unsigned int 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  2    1[COMRAM] unsigned int 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0, prodl, prodh
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5846 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5848 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5849 ;;Total ram usage:        6 bytes
  5850 ;; Hardware stack levels used: 1
  5851 ;; Hardware stack levels required when called: 2
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_setMotorPWM
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text26
  5860   007528                     __ptext26:
  5861                           	callstack 0
  5862   007528                     ___wmul:
  5863                           	callstack 25
  5864   007528  5002               	movf	___wmul@multiplier^0,w,c
  5865   00752A  0204               	mulwf	___wmul@multiplicand^0,c
  5866   00752C  CFF3 F006          	movff	prodl,___wmul@product
  5867   007530  CFF4 F007          	movff	prodh,___wmul@product+1
  5868   007534  5002               	movf	___wmul@multiplier^0,w,c
  5869   007536  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  5870   007538  50F3               	movf	243,w,c
  5871   00753A  2607               	addwf	(___wmul@product+1)^0,f,c
  5872   00753C  5003               	movf	(___wmul@multiplier+1)^0,w,c
  5873   00753E  0204               	mulwf	___wmul@multiplicand^0,c
  5874   007540  50F3               	movf	243,w,c
  5875   007542  2607               	addwf	(___wmul@product+1)^0,f,c
  5876   007544  C006  F002         	movff	___wmul@product,?___wmul
  5877   007548  C007  F003         	movff	___wmul@product+1,?___wmul+1
  5878   00754C  0012               	return		;funcret
  5879   00754E                     __end_of___wmul:
  5880                           	callstack 0
  5881                           
  5882 ;; *************** function ___lwdiv *****************
  5883 ;; Defined at:
  5884 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  dividend        2    7[COMRAM] unsigned int 
  5887 ;;  divisor         2    9[COMRAM] unsigned int 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;  quotient        2   11[COMRAM] unsigned int 
  5890 ;;  counter         1   13[COMRAM] unsigned char 
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  2    7[COMRAM] unsigned int 
  5893 ;; Registers used:
  5894 ;;		wreg, status,2, status,0
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5901 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5903 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5904 ;;Total ram usage:        7 bytes
  5905 ;; Hardware stack levels used: 1
  5906 ;; Hardware stack levels required when called: 2
  5907 ;; This function calls:
  5908 ;;		Nothing
  5909 ;; This function is called by:
  5910 ;;		_setMotorPWM
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           	psect	text27
  5915   0070D0                     __ptext27:
  5916                           	callstack 0
  5917   0070D0                     ___lwdiv:
  5918                           	callstack 25
  5919   0070D0  0E00               	movlw	0
  5920   0070D2  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  5921   0070D4  0E00               	movlw	0
  5922   0070D6  6E0C               	movwf	___lwdiv@quotient^0,c
  5923   0070D8  500A               	movf	___lwdiv@divisor^0,w,c
  5924   0070DA  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5925   0070DC  B4D8               	btfsc	status,2,c
  5926   0070DE  EF73  F038         	goto	u3711
  5927   0070E2  EF75  F038         	goto	u3710
  5928   0070E6                     u3711:
  5929   0070E6  EF9D  F038         	goto	l1059
  5930   0070EA                     u3710:
  5931   0070EA  0E01               	movlw	1
  5932   0070EC  6E0E               	movwf	___lwdiv@counter^0,c
  5933   0070EE  EF7D  F038         	goto	l4098
  5934   0070F2                     l4096:
  5935   0070F2  90D8               	bcf	status,0,c
  5936   0070F4  360A               	rlcf	___lwdiv@divisor^0,f,c
  5937   0070F6  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5938   0070F8  2A0E               	incf	___lwdiv@counter^0,f,c
  5939   0070FA                     l4098:
  5940   0070FA  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  5941   0070FC  EF82  F038         	goto	u3721
  5942   007100  EF84  F038         	goto	u3720
  5943   007104                     u3721:
  5944   007104  EF79  F038         	goto	l4096
  5945   007108                     u3720:
  5946   007108                     l4100:
  5947   007108  90D8               	bcf	status,0,c
  5948   00710A  360C               	rlcf	___lwdiv@quotient^0,f,c
  5949   00710C  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5950   00710E  500A               	movf	___lwdiv@divisor^0,w,c
  5951   007110  5C08               	subwf	___lwdiv@dividend^0,w,c
  5952   007112  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  5953   007114  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5954   007116  A0D8               	btfss	status,0,c
  5955   007118  EF90  F038         	goto	u3731
  5956   00711C  EF92  F038         	goto	u3730
  5957   007120                     u3731:
  5958   007120  EF97  F038         	goto	l4108
  5959   007124                     u3730:
  5960   007124  500A               	movf	___lwdiv@divisor^0,w,c
  5961   007126  5E08               	subwf	___lwdiv@dividend^0,f,c
  5962   007128  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  5963   00712A  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5964   00712C  800C               	bsf	___lwdiv@quotient^0,0,c
  5965   00712E                     l4108:
  5966   00712E  90D8               	bcf	status,0,c
  5967   007130  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5968   007132  320A               	rrcf	___lwdiv@divisor^0,f,c
  5969   007134  2E0E               	decfsz	___lwdiv@counter^0,f,c
  5970   007136  EF84  F038         	goto	l4100
  5971   00713A                     l1059:
  5972   00713A  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  5973   00713E  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5974   007142  0012               	return		;funcret
  5975   007144                     __end_of___lwdiv:
  5976                           	callstack 0
  5977                           
  5978 ;; *************** function _decide_action *****************
  5979 ;; Defined at:
  5980 ;;		line 114 in file "color.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  red_unsigned    2   17[BANK0 ] unsigned int 
  5983 ;;  green_unsign    2   19[BANK0 ] unsigned int 
  5984 ;;  blue_unsigne    2   21[BANK0 ] unsigned int 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;  i               1  127[BANK2 ] unsigned char 
  5987 ;;  rgb_comp       32   90[BANK2 ] float [8]
  5988 ;;  blue_val       20   60[BANK2 ] unsigned char [20]
  5989 ;;  green_val      20   40[BANK2 ] unsigned char [20]
  5990 ;;  red_val        20   20[BANK2 ] unsigned char [20]
  5991 ;;  clear_val      20    0[BANK2 ] unsigned char [20]
  5992 ;;  blue_r          4  148[BANK2 ] float 
  5993 ;;  green_r         4  144[BANK2 ] float 
  5994 ;;  red_r           4  140[BANK2 ] float 
  5995 ;;  blue            4  136[BANK2 ] float 
  5996 ;;  green           4  132[BANK2 ] float 
  5997 ;;  red             4  128[BANK2 ] float 
  5998 ;;  total           4  123[BANK2 ] float 
  5999 ;;  pgreen_val      2   84[BANK2 ] PTR unsigned char 
  6000 ;;		 -> decide_action@green_val(20), 
  6001 ;;  pblue_val       2   82[BANK2 ] PTR unsigned char 
  6002 ;;		 -> decide_action@blue_val(20), 
  6003 ;;  pred_val        2   80[BANK2 ] PTR unsigned char 
  6004 ;;		 -> decide_action@red_val(20), 
  6005 ;;  pclear_val      2    0        PTR unsigned char 
  6006 ;;		 -> decide_action@clear_val(20), 
  6007 ;;  action          1  122[BANK2 ] unsigned char 
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  1    wreg      unsigned char 
  6010 ;; Registers used:
  6011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6017 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6018 ;;      Locals:         0       0       0     180       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6020 ;;      Totals:         0       6       0     180       0       0       0       0       0       0       0       0       
      +0       0       0
  6021 ;;Total ram usage:      186 bytes
  6022 ;; Hardware stack levels used: 1
  6023 ;; Hardware stack levels required when called: 5
  6024 ;; This function calls:
  6025 ;;		___fladd
  6026 ;;		___fldiv
  6027 ;;		___flge
  6028 ;;		___flsub
  6029 ;;		___xxtofl
  6030 ;;		_color_writetoaddr
  6031 ;;		_powf
  6032 ;;		_sqrtf
  6033 ;; This function is called by:
  6034 ;;		_main
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text28
  6039   003302                     __ptext28:
  6040                           	callstack 0
  6041   003302                     _decide_action:
  6042                           	callstack 25
  6043   003302                     
  6044                           ;color.c: 126:     pred_val = &red_val[0];
  6045   003302  0E14               	movlw	low decide_action@red_val
  6046   003304  0102               	movlb	2	; () banked
  6047   003306  6F50               	movwf	decide_action@pred_val& (0+255),b
  6048   003308  0E02               	movlw	high decide_action@red_val
  6049   00330A  6F51               	movwf	(decide_action@pred_val+1)& (0+255),b
  6050                           
  6051                           ;color.c: 127:     pgreen_val = &green_val[0];
  6052   00330C  0E28               	movlw	low decide_action@green_val
  6053   00330E  6F54               	movwf	decide_action@pgreen_val& (0+255),b
  6054   003310  0E02               	movlw	high decide_action@green_val
  6055   003312  6F55               	movwf	(decide_action@pgreen_val+1)& (0+255),b
  6056                           
  6057                           ;color.c: 128:     pblue_val = &blue_val[0];
  6058   003314  0E3C               	movlw	low decide_action@blue_val
  6059   003316  6F52               	movwf	decide_action@pblue_val& (0+255),b
  6060   003318  0E02               	movlw	high decide_action@blue_val
  6061   00331A  6F53               	movwf	(decide_action@pblue_val+1)& (0+255),b
  6062   00331C                     
  6063                           ; BSR set to: 2
  6064                           ;color.c: 130:     float red, green, blue;;color.c: 131:     float red_r, green_r, blue_
      +                          r;;color.c: 132:     float rgb_comp[8];;color.c: 133:     char action;;color.c: 135:    
      +                           red = (float)red_unsigned;
  6065   00331C  C0EB  F002         	movff	decide_action@red_unsigned,___xxtofl@val
  6066   003320  C0EC  F003         	movff	decide_action@red_unsigned+1,___xxtofl@val+1
  6067   003324  6A04               	clrf	(___xxtofl@val+2)^0,c
  6068   003326  6A05               	clrf	(___xxtofl@val+3)^0,c
  6069   003328  0E00               	movlw	0
  6070   00332A  ECAA  F030         	call	___xxtofl
  6071   00332E  C002  F280         	movff	?___xxtofl,decide_action@red
  6072   003332  C003  F281         	movff	?___xxtofl+1,decide_action@red+1
  6073   003336  C004  F282         	movff	?___xxtofl+2,decide_action@red+2
  6074   00333A  C005  F283         	movff	?___xxtofl+3,decide_action@red+3
  6075   00333E                     
  6076                           ;color.c: 136:     green = (float)green_unsigned;
  6077   00333E  C0ED  F002         	movff	decide_action@green_unsigned,___xxtofl@val
  6078   003342  C0EE  F003         	movff	decide_action@green_unsigned+1,___xxtofl@val+1
  6079   003346  6A04               	clrf	(___xxtofl@val+2)^0,c
  6080   003348  6A05               	clrf	(___xxtofl@val+3)^0,c
  6081   00334A  0E00               	movlw	0
  6082   00334C  ECAA  F030         	call	___xxtofl
  6083   003350  C002  F284         	movff	?___xxtofl,decide_action@green
  6084   003354  C003  F285         	movff	?___xxtofl+1,decide_action@green+1
  6085   003358  C004  F286         	movff	?___xxtofl+2,decide_action@green+2
  6086   00335C  C005  F287         	movff	?___xxtofl+3,decide_action@green+3
  6087   003360                     
  6088                           ;color.c: 137:     blue = (float)blue_unsigned;
  6089   003360  C0EF  F002         	movff	decide_action@blue_unsigned,___xxtofl@val
  6090   003364  C0F0  F003         	movff	decide_action@blue_unsigned+1,___xxtofl@val+1
  6091   003368  6A04               	clrf	(___xxtofl@val+2)^0,c
  6092   00336A  6A05               	clrf	(___xxtofl@val+3)^0,c
  6093   00336C  0E00               	movlw	0
  6094   00336E  ECAA  F030         	call	___xxtofl
  6095   003372  C002  F288         	movff	?___xxtofl,decide_action@blue
  6096   003376  C003  F289         	movff	?___xxtofl+1,decide_action@blue+1
  6097   00337A  C004  F28A         	movff	?___xxtofl+2,decide_action@blue+2
  6098   00337E  C005  F28B         	movff	?___xxtofl+3,decide_action@blue+3
  6099   003382                     
  6100                           ;color.c: 140:     if(red < 666){red = 0;} else{red -= 699;}
  6101   003382  C280  F04C         	movff	decide_action@red,___flge@ff1
  6102   003386  C281  F04D         	movff	decide_action@red+1,___flge@ff1+1
  6103   00338A  C282  F04E         	movff	decide_action@red+2,___flge@ff1+2
  6104   00338E  C283  F04F         	movff	decide_action@red+3,___flge@ff1+3
  6105   003392  0E00               	movlw	0
  6106   003394  6E50               	movwf	___flge@ff2^0,c
  6107   003396  0E80               	movlw	128
  6108   003398  6E51               	movwf	(___flge@ff2+1)^0,c
  6109   00339A  0E26               	movlw	38
  6110   00339C  6E52               	movwf	(___flge@ff2+2)^0,c
  6111   00339E  0E44               	movlw	68
  6112   0033A0  6E53               	movwf	(___flge@ff2+3)^0,c
  6113   0033A2  ECBD  F032         	call	___flge	;wreg free
  6114   0033A6  B0D8               	btfsc	status,0,c
  6115   0033A8  EFD8  F019         	goto	u7691
  6116   0033AC  EFDA  F019         	goto	u7690
  6117   0033B0                     u7691:
  6118   0033B0  EFE5  F019         	goto	l7476
  6119   0033B4                     u7690:
  6120   0033B4  0E00               	movlw	0
  6121   0033B6  0102               	movlb	2	; () banked
  6122   0033B8  6F80               	movwf	decide_action@red& (0+255),b
  6123   0033BA  0E00               	movlw	0
  6124   0033BC  6F81               	movwf	(decide_action@red+1)& (0+255),b
  6125   0033BE  0E00               	movlw	0
  6126   0033C0  6F82               	movwf	(decide_action@red+2)& (0+255),b
  6127   0033C2  0E00               	movlw	0
  6128   0033C4  6F83               	movwf	(decide_action@red+3)& (0+255),b
  6129   0033C6  EFFF  F019         	goto	l69
  6130   0033CA                     l7476:
  6131   0033CA  C280  F044         	movff	decide_action@red,___flsub@b
  6132   0033CE  C281  F045         	movff	decide_action@red+1,___flsub@b+1
  6133   0033D2  C282  F046         	movff	decide_action@red+2,___flsub@b+2
  6134   0033D6  C283  F047         	movff	decide_action@red+3,___flsub@b+3
  6135   0033DA  0E00               	movlw	0
  6136   0033DC  6E48               	movwf	___flsub@a^0,c
  6137   0033DE  0EC0               	movlw	192
  6138   0033E0  6E49               	movwf	(___flsub@a+1)^0,c
  6139   0033E2  0E2E               	movlw	46
  6140   0033E4  6E4A               	movwf	(___flsub@a+2)^0,c
  6141   0033E6  0E44               	movlw	68
  6142   0033E8  6E4B               	movwf	(___flsub@a+3)^0,c
  6143   0033EA  EC9A  F039         	call	___flsub	;wreg free
  6144   0033EE  C044  F280         	movff	?___flsub,decide_action@red
  6145   0033F2  C045  F281         	movff	?___flsub+1,decide_action@red+1
  6146   0033F6  C046  F282         	movff	?___flsub+2,decide_action@red+2
  6147   0033FA  C047  F283         	movff	?___flsub+3,decide_action@red+3
  6148   0033FE                     l69:
  6149                           
  6150                           ;color.c: 141:     if(green < 446){green = 0;} else{green -= 443;}
  6151   0033FE  C284  F04C         	movff	decide_action@green,___flge@ff1
  6152   003402  C285  F04D         	movff	decide_action@green+1,___flge@ff1+1
  6153   003406  C286  F04E         	movff	decide_action@green+2,___flge@ff1+2
  6154   00340A  C287  F04F         	movff	decide_action@green+3,___flge@ff1+3
  6155   00340E  0E00               	movlw	0
  6156   003410  6E50               	movwf	___flge@ff2^0,c
  6157   003412  0E00               	movlw	0
  6158   003414  6E51               	movwf	(___flge@ff2+1)^0,c
  6159   003416  0EDF               	movlw	223
  6160   003418  6E52               	movwf	(___flge@ff2+2)^0,c
  6161   00341A  0E43               	movlw	67
  6162   00341C  6E53               	movwf	(___flge@ff2+3)^0,c
  6163   00341E  ECBD  F032         	call	___flge	;wreg free
  6164   003422  B0D8               	btfsc	status,0,c
  6165   003424  EF16  F01A         	goto	u7701
  6166   003428  EF18  F01A         	goto	u7700
  6167   00342C                     u7701:
  6168   00342C  EF23  F01A         	goto	l7480
  6169   003430                     u7700:
  6170   003430  0E00               	movlw	0
  6171   003432  0102               	movlb	2	; () banked
  6172   003434  6F84               	movwf	decide_action@green& (0+255),b
  6173   003436  0E00               	movlw	0
  6174   003438  6F85               	movwf	(decide_action@green+1)& (0+255),b
  6175   00343A  0E00               	movlw	0
  6176   00343C  6F86               	movwf	(decide_action@green+2)& (0+255),b
  6177   00343E  0E00               	movlw	0
  6178   003440  6F87               	movwf	(decide_action@green+3)& (0+255),b
  6179   003442  EF3D  F01A         	goto	l71
  6180   003446                     l7480:
  6181   003446  C284  F044         	movff	decide_action@green,___flsub@b
  6182   00344A  C285  F045         	movff	decide_action@green+1,___flsub@b+1
  6183   00344E  C286  F046         	movff	decide_action@green+2,___flsub@b+2
  6184   003452  C287  F047         	movff	decide_action@green+3,___flsub@b+3
  6185   003456  0E00               	movlw	0
  6186   003458  6E48               	movwf	___flsub@a^0,c
  6187   00345A  0E80               	movlw	128
  6188   00345C  6E49               	movwf	(___flsub@a+1)^0,c
  6189   00345E  0EDD               	movlw	221
  6190   003460  6E4A               	movwf	(___flsub@a+2)^0,c
  6191   003462  0E43               	movlw	67
  6192   003464  6E4B               	movwf	(___flsub@a+3)^0,c
  6193   003466  EC9A  F039         	call	___flsub	;wreg free
  6194   00346A  C044  F284         	movff	?___flsub,decide_action@green
  6195   00346E  C045  F285         	movff	?___flsub+1,decide_action@green+1
  6196   003472  C046  F286         	movff	?___flsub+2,decide_action@green+2
  6197   003476  C047  F287         	movff	?___flsub+3,decide_action@green+3
  6198   00347A                     l71:
  6199                           
  6200                           ;color.c: 142:     if(blue < 295){blue = 0;} else{blue -= 315;}
  6201   00347A  C288  F04C         	movff	decide_action@blue,___flge@ff1
  6202   00347E  C289  F04D         	movff	decide_action@blue+1,___flge@ff1+1
  6203   003482  C28A  F04E         	movff	decide_action@blue+2,___flge@ff1+2
  6204   003486  C28B  F04F         	movff	decide_action@blue+3,___flge@ff1+3
  6205   00348A  0E00               	movlw	0
  6206   00348C  6E50               	movwf	___flge@ff2^0,c
  6207   00348E  0E80               	movlw	128
  6208   003490  6E51               	movwf	(___flge@ff2+1)^0,c
  6209   003492  0E93               	movlw	147
  6210   003494  6E52               	movwf	(___flge@ff2+2)^0,c
  6211   003496  0E43               	movlw	67
  6212   003498  6E53               	movwf	(___flge@ff2+3)^0,c
  6213   00349A  ECBD  F032         	call	___flge	;wreg free
  6214   00349E  B0D8               	btfsc	status,0,c
  6215   0034A0  EF54  F01A         	goto	u7711
  6216   0034A4  EF56  F01A         	goto	u7710
  6217   0034A8                     u7711:
  6218   0034A8  EF61  F01A         	goto	l7484
  6219   0034AC                     u7710:
  6220   0034AC  0E00               	movlw	0
  6221   0034AE  0102               	movlb	2	; () banked
  6222   0034B0  6F88               	movwf	decide_action@blue& (0+255),b
  6223   0034B2  0E00               	movlw	0
  6224   0034B4  6F89               	movwf	(decide_action@blue+1)& (0+255),b
  6225   0034B6  0E00               	movlw	0
  6226   0034B8  6F8A               	movwf	(decide_action@blue+2)& (0+255),b
  6227   0034BA  0E00               	movlw	0
  6228   0034BC  6F8B               	movwf	(decide_action@blue+3)& (0+255),b
  6229   0034BE  EF7B  F01A         	goto	l73
  6230   0034C2                     l7484:
  6231   0034C2  C288  F044         	movff	decide_action@blue,___flsub@b
  6232   0034C6  C289  F045         	movff	decide_action@blue+1,___flsub@b+1
  6233   0034CA  C28A  F046         	movff	decide_action@blue+2,___flsub@b+2
  6234   0034CE  C28B  F047         	movff	decide_action@blue+3,___flsub@b+3
  6235   0034D2  0E00               	movlw	0
  6236   0034D4  6E48               	movwf	___flsub@a^0,c
  6237   0034D6  0E80               	movlw	128
  6238   0034D8  6E49               	movwf	(___flsub@a+1)^0,c
  6239   0034DA  0E9D               	movlw	157
  6240   0034DC  6E4A               	movwf	(___flsub@a+2)^0,c
  6241   0034DE  0E43               	movlw	67
  6242   0034E0  6E4B               	movwf	(___flsub@a+3)^0,c
  6243   0034E2  EC9A  F039         	call	___flsub	;wreg free
  6244   0034E6  C044  F288         	movff	?___flsub,decide_action@blue
  6245   0034EA  C045  F289         	movff	?___flsub+1,decide_action@blue+1
  6246   0034EE  C046  F28A         	movff	?___flsub+2,decide_action@blue+2
  6247   0034F2  C047  F28B         	movff	?___flsub+3,decide_action@blue+3
  6248   0034F6                     l73:
  6249                           
  6250                           ;color.c: 144:     red = red/1621;
  6251   0034F6  C280  F02B         	movff	decide_action@red,___fldiv@b
  6252   0034FA  C281  F02C         	movff	decide_action@red+1,___fldiv@b+1
  6253   0034FE  C282  F02D         	movff	decide_action@red+2,___fldiv@b+2
  6254   003502  C283  F02E         	movff	decide_action@red+3,___fldiv@b+3
  6255   003506  0E00               	movlw	0
  6256   003508  6E2F               	movwf	___fldiv@a^0,c
  6257   00350A  0EA0               	movlw	160
  6258   00350C  6E30               	movwf	(___fldiv@a+1)^0,c
  6259   00350E  0ECA               	movlw	202
  6260   003510  6E31               	movwf	(___fldiv@a+2)^0,c
  6261   003512  0E44               	movlw	68
  6262   003514  6E32               	movwf	(___fldiv@a+3)^0,c
  6263   003516  ECDE  F02C         	call	___fldiv	;wreg free
  6264   00351A  C02B  F280         	movff	?___fldiv,decide_action@red
  6265   00351E  C02C  F281         	movff	?___fldiv+1,decide_action@red+1
  6266   003522  C02D  F282         	movff	?___fldiv+2,decide_action@red+2
  6267   003526  C02E  F283         	movff	?___fldiv+3,decide_action@red+3
  6268                           
  6269                           ;color.c: 145:     green = green/1191;
  6270   00352A  C284  F02B         	movff	decide_action@green,___fldiv@b
  6271   00352E  C285  F02C         	movff	decide_action@green+1,___fldiv@b+1
  6272   003532  C286  F02D         	movff	decide_action@green+2,___fldiv@b+2
  6273   003536  C287  F02E         	movff	decide_action@green+3,___fldiv@b+3
  6274   00353A  0E00               	movlw	0
  6275   00353C  6E2F               	movwf	___fldiv@a^0,c
  6276   00353E  0EE0               	movlw	224
  6277   003540  6E30               	movwf	(___fldiv@a+1)^0,c
  6278   003542  0E94               	movlw	148
  6279   003544  6E31               	movwf	(___fldiv@a+2)^0,c
  6280   003546  0E44               	movlw	68
  6281   003548  6E32               	movwf	(___fldiv@a+3)^0,c
  6282   00354A  ECDE  F02C         	call	___fldiv	;wreg free
  6283   00354E  C02B  F284         	movff	?___fldiv,decide_action@green
  6284   003552  C02C  F285         	movff	?___fldiv+1,decide_action@green+1
  6285   003556  C02D  F286         	movff	?___fldiv+2,decide_action@green+2
  6286   00355A  C02E  F287         	movff	?___fldiv+3,decide_action@green+3
  6287                           
  6288                           ;color.c: 146:     blue = blue/885;
  6289   00355E  C288  F02B         	movff	decide_action@blue,___fldiv@b
  6290   003562  C289  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  6291   003566  C28A  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  6292   00356A  C28B  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  6293   00356E  0E00               	movlw	0
  6294   003570  6E2F               	movwf	___fldiv@a^0,c
  6295   003572  0E40               	movlw	64
  6296   003574  6E30               	movwf	(___fldiv@a+1)^0,c
  6297   003576  0E5D               	movlw	93
  6298   003578  6E31               	movwf	(___fldiv@a+2)^0,c
  6299   00357A  0E44               	movlw	68
  6300   00357C  6E32               	movwf	(___fldiv@a+3)^0,c
  6301   00357E  ECDE  F02C         	call	___fldiv	;wreg free
  6302   003582  C02B  F288         	movff	?___fldiv,decide_action@blue
  6303   003586  C02C  F289         	movff	?___fldiv+1,decide_action@blue+1
  6304   00358A  C02D  F28A         	movff	?___fldiv+2,decide_action@blue+2
  6305   00358E  C02E  F28B         	movff	?___fldiv+3,decide_action@blue+3
  6306                           
  6307                           ;color.c: 148:     float total = red + green + blue;
  6308   003592  C284  F006         	movff	decide_action@green,___fladd@a
  6309   003596  C285  F007         	movff	decide_action@green+1,___fladd@a+1
  6310   00359A  C286  F008         	movff	decide_action@green+2,___fladd@a+2
  6311   00359E  C287  F009         	movff	decide_action@green+3,___fladd@a+3
  6312   0035A2  C280  F002         	movff	decide_action@red,___fladd@b
  6313   0035A6  C281  F003         	movff	decide_action@red+1,___fladd@b+1
  6314   0035AA  C282  F004         	movff	decide_action@red+2,___fladd@b+2
  6315   0035AE  C283  F005         	movff	decide_action@red+3,___fladd@b+3
  6316   0035B2  EC7A  F026         	call	___fladd	;wreg free
  6317   0035B6  C002  F256         	movff	?___fladd,_decide_action$3065
  6318   0035BA  C003  F257         	movff	?___fladd+1,_decide_action$3065+1
  6319   0035BE  C004  F258         	movff	?___fladd+2,_decide_action$3065+2
  6320   0035C2  C005  F259         	movff	?___fladd+3,_decide_action$3065+3
  6321                           
  6322                           ;color.c: 148:     float total = red + green + blue;
  6323   0035C6  C256  F002         	movff	_decide_action$3065,___fladd@b
  6324   0035CA  C257  F003         	movff	_decide_action$3065+1,___fladd@b+1
  6325   0035CE  C258  F004         	movff	_decide_action$3065+2,___fladd@b+2
  6326   0035D2  C259  F005         	movff	_decide_action$3065+3,___fladd@b+3
  6327   0035D6  C288  F006         	movff	decide_action@blue,___fladd@a
  6328   0035DA  C289  F007         	movff	decide_action@blue+1,___fladd@a+1
  6329   0035DE  C28A  F008         	movff	decide_action@blue+2,___fladd@a+2
  6330   0035E2  C28B  F009         	movff	decide_action@blue+3,___fladd@a+3
  6331   0035E6  EC7A  F026         	call	___fladd	;wreg free
  6332   0035EA  C002  F27B         	movff	?___fladd,decide_action@total
  6333   0035EE  C003  F27C         	movff	?___fladd+1,decide_action@total+1
  6334   0035F2  C004  F27D         	movff	?___fladd+2,decide_action@total+2
  6335   0035F6  C005  F27E         	movff	?___fladd+3,decide_action@total+3
  6336                           
  6337                           ;color.c: 150:     red_r = red / total;
  6338   0035FA  C280  F02B         	movff	decide_action@red,___fldiv@b
  6339   0035FE  C281  F02C         	movff	decide_action@red+1,___fldiv@b+1
  6340   003602  C282  F02D         	movff	decide_action@red+2,___fldiv@b+2
  6341   003606  C283  F02E         	movff	decide_action@red+3,___fldiv@b+3
  6342   00360A  C27B  F02F         	movff	decide_action@total,___fldiv@a
  6343   00360E  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  6344   003612  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  6345   003616  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  6346   00361A  ECDE  F02C         	call	___fldiv	;wreg free
  6347   00361E  C02B  F28C         	movff	?___fldiv,decide_action@red_r
  6348   003622  C02C  F28D         	movff	?___fldiv+1,decide_action@red_r+1
  6349   003626  C02D  F28E         	movff	?___fldiv+2,decide_action@red_r+2
  6350   00362A  C02E  F28F         	movff	?___fldiv+3,decide_action@red_r+3
  6351                           
  6352                           ;color.c: 151:     green_r = green / total;
  6353   00362E  C284  F02B         	movff	decide_action@green,___fldiv@b
  6354   003632  C285  F02C         	movff	decide_action@green+1,___fldiv@b+1
  6355   003636  C286  F02D         	movff	decide_action@green+2,___fldiv@b+2
  6356   00363A  C287  F02E         	movff	decide_action@green+3,___fldiv@b+3
  6357   00363E  C27B  F02F         	movff	decide_action@total,___fldiv@a
  6358   003642  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  6359   003646  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  6360   00364A  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  6361   00364E  ECDE  F02C         	call	___fldiv	;wreg free
  6362   003652  C02B  F290         	movff	?___fldiv,decide_action@green_r
  6363   003656  C02C  F291         	movff	?___fldiv+1,decide_action@green_r+1
  6364   00365A  C02D  F292         	movff	?___fldiv+2,decide_action@green_r+2
  6365   00365E  C02E  F293         	movff	?___fldiv+3,decide_action@green_r+3
  6366                           
  6367                           ;color.c: 152:     blue_r = blue / total;
  6368   003662  C288  F02B         	movff	decide_action@blue,___fldiv@b
  6369   003666  C289  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  6370   00366A  C28A  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  6371   00366E  C28B  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  6372   003672  C27B  F02F         	movff	decide_action@total,___fldiv@a
  6373   003676  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  6374   00367A  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  6375   00367E  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  6376   003682  ECDE  F02C         	call	___fldiv	;wreg free
  6377   003686  C02B  F294         	movff	?___fldiv,decide_action@blue_r
  6378   00368A  C02C  F295         	movff	?___fldiv+1,decide_action@blue_r+1
  6379   00368E  C02D  F296         	movff	?___fldiv+2,decide_action@blue_r+2
  6380   003692  C02E  F297         	movff	?___fldiv+3,decide_action@blue_r+3
  6381                           
  6382                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6383   003696  0E73               	movlw	115
  6384   003698  6E06               	movwf	___fladd@a^0,c
  6385   00369A  0E68               	movlw	104
  6386   00369C  6E07               	movwf	(___fladd@a+1)^0,c
  6387   00369E  0E91               	movlw	145
  6388   0036A0  6E08               	movwf	(___fladd@a+2)^0,c
  6389   0036A2  0EBD               	movlw	189
  6390   0036A4  6E09               	movwf	(___fladd@a+3)^0,c
  6391   0036A6  C290  F002         	movff	decide_action@green_r,___fladd@b
  6392   0036AA  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6393   0036AE  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6394   0036B2  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6395   0036B6  EC7A  F026         	call	___fladd	;wreg free
  6396   0036BA  C002  F298         	movff	?___fladd,_decide_action$3066
  6397   0036BE  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  6398   0036C2  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  6399   0036C6  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  6400                           
  6401                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6402   0036CA  0E64               	movlw	100
  6403   0036CC  6E06               	movwf	___fladd@a^0,c
  6404   0036CE  0E3B               	movlw	59
  6405   0036D0  6E07               	movwf	(___fladd@a+1)^0,c
  6406   0036D2  0E3F               	movlw	63
  6407   0036D4  6E08               	movwf	(___fladd@a+2)^0,c
  6408   0036D6  0EBF               	movlw	191
  6409   0036D8  6E09               	movwf	(___fladd@a+3)^0,c
  6410   0036DA  C28C  F002         	movff	decide_action@red_r,___fladd@b
  6411   0036DE  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6412   0036E2  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6413   0036E6  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6414   0036EA  EC7A  F026         	call	___fladd	;wreg free
  6415   0036EE  C002  F29C         	movff	?___fladd,_decide_action$3067
  6416   0036F2  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  6417   0036F6  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  6418   0036FA  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  6419   0036FE                     
  6420                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6421   0036FE  0E00               	movlw	0
  6422   003700  0100               	movlb	0	; () banked
  6423   003702  6FDE               	movwf	powf@y& (0+255),b
  6424   003704  0E00               	movlw	0
  6425   003706  6FDF               	movwf	(powf@y+1)& (0+255),b
  6426   003708  0E00               	movlw	0
  6427   00370A  6FE0               	movwf	(powf@y+2)& (0+255),b
  6428   00370C  0E40               	movlw	64
  6429   00370E  6FE1               	movwf	(powf@y+3)& (0+255),b
  6430   003710  C298  F0DA         	movff	_decide_action$3066,powf@x
  6431   003714  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  6432   003718  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  6433   00371C  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  6434   003720  EC41  F007         	call	_powf	;wreg free
  6435   003724  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  6436   003728  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  6437   00372C  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  6438   003730  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  6439   003734                     
  6440                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6441   003734  0E00               	movlw	0
  6442   003736  0100               	movlb	0	; () banked
  6443   003738  6FDE               	movwf	powf@y& (0+255),b
  6444   00373A  0E00               	movlw	0
  6445   00373C  6FDF               	movwf	(powf@y+1)& (0+255),b
  6446   00373E  0E00               	movlw	0
  6447   003740  6FE0               	movwf	(powf@y+2)& (0+255),b
  6448   003742  0E40               	movlw	64
  6449   003744  6FE1               	movwf	(powf@y+3)& (0+255),b
  6450   003746  C29C  F0DA         	movff	_decide_action$3067,powf@x
  6451   00374A  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  6452   00374E  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  6453   003752  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  6454   003756  EC41  F007         	call	_powf	;wreg free
  6455   00375A  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  6456   00375E  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  6457   003762  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  6458   003766  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  6459                           
  6460                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6461   00376A  0E35               	movlw	53
  6462   00376C  6E06               	movwf	___fladd@a^0,c
  6463   00376E  0E5E               	movlw	94
  6464   003770  6E07               	movwf	(___fladd@a+1)^0,c
  6465   003772  0E3A               	movlw	58
  6466   003774  6E08               	movwf	(___fladd@a+2)^0,c
  6467   003776  0EBE               	movlw	190
  6468   003778  6E09               	movwf	(___fladd@a+3)^0,c
  6469   00377A  C294  F002         	movff	decide_action@blue_r,___fladd@b
  6470   00377E  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6471   003782  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6472   003786  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6473   00378A  EC7A  F026         	call	___fladd	;wreg free
  6474   00378E  C002  F2A8         	movff	?___fladd,_decide_action$3070
  6475   003792  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  6476   003796  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  6477   00379A  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  6478                           
  6479                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6480   00379E  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  6481   0037A2  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  6482   0037A6  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  6483   0037AA  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  6484   0037AE  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  6485   0037B2  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  6486   0037B6  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  6487   0037BA  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  6488   0037BE  EC7A  F026         	call	___fladd	;wreg free
  6489   0037C2  C002  F2AC         	movff	?___fladd,_decide_action$3071
  6490   0037C6  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  6491   0037CA  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  6492   0037CE  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  6493   0037D2                     
  6494                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6495   0037D2  0E00               	movlw	0
  6496   0037D4  0100               	movlb	0	; () banked
  6497   0037D6  6FDE               	movwf	powf@y& (0+255),b
  6498   0037D8  0E00               	movlw	0
  6499   0037DA  6FDF               	movwf	(powf@y+1)& (0+255),b
  6500   0037DC  0E00               	movlw	0
  6501   0037DE  6FE0               	movwf	(powf@y+2)& (0+255),b
  6502   0037E0  0E40               	movlw	64
  6503   0037E2  6FE1               	movwf	(powf@y+3)& (0+255),b
  6504   0037E4  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  6505   0037E8  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  6506   0037EC  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  6507   0037F0  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  6508   0037F4  EC41  F007         	call	_powf	;wreg free
  6509   0037F8  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  6510   0037FC  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  6511   003800  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  6512   003804  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  6513   003808                     
  6514                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6515   003808  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  6516   00380C  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  6517   003810  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  6518   003814  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  6519   003818  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  6520   00381C  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  6521   003820  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  6522   003824  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  6523   003828  EC7A  F026         	call	___fladd	;wreg free
  6524   00382C  C002  F012         	movff	?___fladd,sqrtf@x
  6525   003830  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6526   003834  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6527   003838  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6528   00383C  ECEF  F02A         	call	_sqrtf	;wreg free
  6529   003840  C012  F25A         	movff	?_sqrtf,decide_action@rgb_comp
  6530   003844  C013  F25B         	movff	?_sqrtf+1,decide_action@rgb_comp+1
  6531   003848  C014  F25C         	movff	?_sqrtf+2,decide_action@rgb_comp+2
  6532   00384C  C015  F25D         	movff	?_sqrtf+3,decide_action@rgb_comp+3
  6533   003850                     
  6534                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6535   003850  0E35               	movlw	53
  6536   003852  6E06               	movwf	___fladd@a^0,c
  6537   003854  0E5E               	movlw	94
  6538   003856  6E07               	movwf	(___fladd@a+1)^0,c
  6539   003858  0EFA               	movlw	250
  6540   00385A  6E08               	movwf	(___fladd@a+2)^0,c
  6541   00385C  0EBE               	movlw	190
  6542   00385E  6E09               	movwf	(___fladd@a+3)^0,c
  6543   003860  C290  F002         	movff	decide_action@green_r,___fladd@b
  6544   003864  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6545   003868  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6546   00386C  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6547   003870  EC7A  F026         	call	___fladd	;wreg free
  6548   003874  C002  F298         	movff	?___fladd,_decide_action$3066
  6549   003878  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  6550   00387C  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  6551   003880  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  6552   003884                     
  6553                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6554   003884  0E2B               	movlw	43
  6555   003886  6E06               	movwf	___fladd@a^0,c
  6556   003888  0E87               	movlw	135
  6557   00388A  6E07               	movwf	(___fladd@a+1)^0,c
  6558   00388C  0E16               	movlw	22
  6559   00388E  6E08               	movwf	(___fladd@a+2)^0,c
  6560   003890  0EBE               	movlw	190
  6561   003892  6E09               	movwf	(___fladd@a+3)^0,c
  6562   003894  C28C  F002         	movff	decide_action@red_r,___fladd@b
  6563   003898  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6564   00389C  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6565   0038A0  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6566   0038A4  EC7A  F026         	call	___fladd	;wreg free
  6567   0038A8  C002  F29C         	movff	?___fladd,_decide_action$3067
  6568   0038AC  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  6569   0038B0  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  6570   0038B4  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  6571                           
  6572                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6573   0038B8  0E00               	movlw	0
  6574   0038BA  0100               	movlb	0	; () banked
  6575   0038BC  6FDE               	movwf	powf@y& (0+255),b
  6576   0038BE  0E00               	movlw	0
  6577   0038C0  6FDF               	movwf	(powf@y+1)& (0+255),b
  6578   0038C2  0E00               	movlw	0
  6579   0038C4  6FE0               	movwf	(powf@y+2)& (0+255),b
  6580   0038C6  0E40               	movlw	64
  6581   0038C8  6FE1               	movwf	(powf@y+3)& (0+255),b
  6582   0038CA  C298  F0DA         	movff	_decide_action$3066,powf@x
  6583   0038CE  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  6584   0038D2  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  6585   0038D6  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  6586   0038DA  EC41  F007         	call	_powf	;wreg free
  6587   0038DE  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  6588   0038E2  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  6589   0038E6  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  6590   0038EA  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  6591                           
  6592                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6593   0038EE  0E00               	movlw	0
  6594   0038F0  0100               	movlb	0	; () banked
  6595   0038F2  6FDE               	movwf	powf@y& (0+255),b
  6596   0038F4  0E00               	movlw	0
  6597   0038F6  6FDF               	movwf	(powf@y+1)& (0+255),b
  6598   0038F8  0E00               	movlw	0
  6599   0038FA  6FE0               	movwf	(powf@y+2)& (0+255),b
  6600   0038FC  0E40               	movlw	64
  6601   0038FE  6FE1               	movwf	(powf@y+3)& (0+255),b
  6602   003900  C29C  F0DA         	movff	_decide_action$3067,powf@x
  6603   003904  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  6604   003908  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  6605   00390C  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  6606   003910  EC41  F007         	call	_powf	;wreg free
  6607   003914  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  6608   003918  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  6609   00391C  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  6610   003920  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  6611   003924                     
  6612                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6613   003924  0E23               	movlw	35
  6614   003926  6E06               	movwf	___fladd@a^0,c
  6615   003928  0EDB               	movlw	219
  6616   00392A  6E07               	movwf	(___fladd@a+1)^0,c
  6617   00392C  0EB9               	movlw	185
  6618   00392E  6E08               	movwf	(___fladd@a+2)^0,c
  6619   003930  0EBE               	movlw	190
  6620   003932  6E09               	movwf	(___fladd@a+3)^0,c
  6621   003934  C294  F002         	movff	decide_action@blue_r,___fladd@b
  6622   003938  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6623   00393C  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6624   003940  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6625   003944  EC7A  F026         	call	___fladd	;wreg free
  6626   003948  C002  F2A8         	movff	?___fladd,_decide_action$3070
  6627   00394C  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  6628   003950  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  6629   003954  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  6630   003958                     
  6631                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6632   003958  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  6633   00395C  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  6634   003960  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  6635   003964  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  6636   003968  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  6637   00396C  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  6638   003970  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  6639   003974  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  6640   003978  EC7A  F026         	call	___fladd	;wreg free
  6641   00397C  C002  F2AC         	movff	?___fladd,_decide_action$3071
  6642   003980  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  6643   003984  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  6644   003988  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  6645                           
  6646                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6647   00398C  0E00               	movlw	0
  6648   00398E  0100               	movlb	0	; () banked
  6649   003990  6FDE               	movwf	powf@y& (0+255),b
  6650   003992  0E00               	movlw	0
  6651   003994  6FDF               	movwf	(powf@y+1)& (0+255),b
  6652   003996  0E00               	movlw	0
  6653   003998  6FE0               	movwf	(powf@y+2)& (0+255),b
  6654   00399A  0E40               	movlw	64
  6655   00399C  6FE1               	movwf	(powf@y+3)& (0+255),b
  6656   00399E  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  6657   0039A2  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  6658   0039A6  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  6659   0039AA  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  6660   0039AE  EC41  F007         	call	_powf	;wreg free
  6661   0039B2  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  6662   0039B6  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  6663   0039BA  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  6664   0039BE  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  6665   0039C2                     
  6666                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6667   0039C2  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  6668   0039C6  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  6669   0039CA  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  6670   0039CE  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  6671   0039D2  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  6672   0039D6  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  6673   0039DA  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  6674   0039DE  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  6675   0039E2  EC7A  F026         	call	___fladd	;wreg free
  6676   0039E6  C002  F012         	movff	?___fladd,sqrtf@x
  6677   0039EA  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6678   0039EE  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6679   0039F2  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6680   0039F6  ECEF  F02A         	call	_sqrtf	;wreg free
  6681   0039FA  C012  F25E         	movff	?_sqrtf,decide_action@rgb_comp+4
  6682   0039FE  C013  F25F         	movff	?_sqrtf+1,decide_action@rgb_comp+5
  6683   003A02  C014  F260         	movff	?_sqrtf+2,decide_action@rgb_comp+6
  6684   003A06  C015  F261         	movff	?_sqrtf+3,decide_action@rgb_comp+7
  6685   003A0A                     
  6686                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6687   003A0A  0E50               	movlw	80
  6688   003A0C  6E06               	movwf	___fladd@a^0,c
  6689   003A0E  0E8D               	movlw	141
  6690   003A10  6E07               	movwf	(___fladd@a+1)^0,c
  6691   003A12  0ED7               	movlw	215
  6692   003A14  6E08               	movwf	(___fladd@a+2)^0,c
  6693   003A16  0EBE               	movlw	190
  6694   003A18  6E09               	movwf	(___fladd@a+3)^0,c
  6695   003A1A  C290  F002         	movff	decide_action@green_r,___fladd@b
  6696   003A1E  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6697   003A22  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6698   003A26  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6699   003A2A  EC7A  F026         	call	___fladd	;wreg free
  6700   003A2E  C002  F298         	movff	?___fladd,_decide_action$3066
  6701   003A32  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  6702   003A36  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  6703   003A3A  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  6704   003A3E                     
  6705                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6706   003A3E  0EAE               	movlw	174
  6707   003A40  6E06               	movwf	___fladd@a^0,c
  6708   003A42  0E47               	movlw	71
  6709   003A44  6E07               	movwf	(___fladd@a+1)^0,c
  6710   003A46  0EE1               	movlw	225
  6711   003A48  6E08               	movwf	(___fladd@a+2)^0,c
  6712   003A4A  0EBD               	movlw	189
  6713   003A4C  6E09               	movwf	(___fladd@a+3)^0,c
  6714   003A4E  C28C  F002         	movff	decide_action@red_r,___fladd@b
  6715   003A52  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6716   003A56  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6717   003A5A  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6718   003A5E  EC7A  F026         	call	___fladd	;wreg free
  6719   003A62  C002  F29C         	movff	?___fladd,_decide_action$3067
  6720   003A66  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  6721   003A6A  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  6722   003A6E  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  6723   003A72                     
  6724                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6725   003A72  0E00               	movlw	0
  6726   003A74  0100               	movlb	0	; () banked
  6727   003A76  6FDE               	movwf	powf@y& (0+255),b
  6728   003A78  0E00               	movlw	0
  6729   003A7A  6FDF               	movwf	(powf@y+1)& (0+255),b
  6730   003A7C  0E00               	movlw	0
  6731   003A7E  6FE0               	movwf	(powf@y+2)& (0+255),b
  6732   003A80  0E40               	movlw	64
  6733   003A82  6FE1               	movwf	(powf@y+3)& (0+255),b
  6734   003A84  C298  F0DA         	movff	_decide_action$3066,powf@x
  6735   003A88  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  6736   003A8C  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  6737   003A90  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  6738   003A94  EC41  F007         	call	_powf	;wreg free
  6739   003A98  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  6740   003A9C  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  6741   003AA0  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  6742   003AA4  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  6743   003AA8                     
  6744                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6745   003AA8  0E00               	movlw	0
  6746   003AAA  0100               	movlb	0	; () banked
  6747   003AAC  6FDE               	movwf	powf@y& (0+255),b
  6748   003AAE  0E00               	movlw	0
  6749   003AB0  6FDF               	movwf	(powf@y+1)& (0+255),b
  6750   003AB2  0E00               	movlw	0
  6751   003AB4  6FE0               	movwf	(powf@y+2)& (0+255),b
  6752   003AB6  0E40               	movlw	64
  6753   003AB8  6FE1               	movwf	(powf@y+3)& (0+255),b
  6754   003ABA  C29C  F0DA         	movff	_decide_action$3067,powf@x
  6755   003ABE  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  6756   003AC2  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  6757   003AC6  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  6758   003ACA  EC41  F007         	call	_powf	;wreg free
  6759   003ACE  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  6760   003AD2  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  6761   003AD6  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  6762   003ADA  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  6763   003ADE                     
  6764                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6765   003ADE  0EC5               	movlw	197
  6766   003AE0  6E06               	movwf	___fladd@a^0,c
  6767   003AE2  0E20               	movlw	32
  6768   003AE4  6E07               	movwf	(___fladd@a+1)^0,c
  6769   003AE6  0EF0               	movlw	240
  6770   003AE8  6E08               	movwf	(___fladd@a+2)^0,c
  6771   003AEA  0EBE               	movlw	190
  6772   003AEC  6E09               	movwf	(___fladd@a+3)^0,c
  6773   003AEE  C294  F002         	movff	decide_action@blue_r,___fladd@b
  6774   003AF2  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6775   003AF6  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6776   003AFA  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6777   003AFE  EC7A  F026         	call	___fladd	;wreg free
  6778   003B02  C002  F2A8         	movff	?___fladd,_decide_action$3070
  6779   003B06  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  6780   003B0A  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  6781   003B0E  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  6782   003B12                     
  6783                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6784   003B12  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  6785   003B16  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  6786   003B1A  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  6787   003B1E  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  6788   003B22  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  6789   003B26  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  6790   003B2A  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  6791   003B2E  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  6792   003B32  EC7A  F026         	call	___fladd	;wreg free
  6793   003B36  C002  F2AC         	movff	?___fladd,_decide_action$3071
  6794   003B3A  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  6795   003B3E  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  6796   003B42  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  6797   003B46                     
  6798                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6799   003B46  0E00               	movlw	0
  6800   003B48  0100               	movlb	0	; () banked
  6801   003B4A  6FDE               	movwf	powf@y& (0+255),b
  6802   003B4C  0E00               	movlw	0
  6803   003B4E  6FDF               	movwf	(powf@y+1)& (0+255),b
  6804   003B50  0E00               	movlw	0
  6805   003B52  6FE0               	movwf	(powf@y+2)& (0+255),b
  6806   003B54  0E40               	movlw	64
  6807   003B56  6FE1               	movwf	(powf@y+3)& (0+255),b
  6808   003B58  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  6809   003B5C  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  6810   003B60  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  6811   003B64  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  6812   003B68  EC41  F007         	call	_powf	;wreg free
  6813   003B6C  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  6814   003B70  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  6815   003B74  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  6816   003B78  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  6817                           
  6818                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6819   003B7C  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  6820   003B80  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  6821   003B84  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  6822   003B88  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  6823   003B8C  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  6824   003B90  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  6825   003B94  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  6826   003B98  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  6827   003B9C  EC7A  F026         	call	___fladd	;wreg free
  6828   003BA0  C002  F012         	movff	?___fladd,sqrtf@x
  6829   003BA4  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6830   003BA8  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6831   003BAC  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6832   003BB0  ECEF  F02A         	call	_sqrtf	;wreg free
  6833   003BB4  C012  F262         	movff	?_sqrtf,decide_action@rgb_comp+8
  6834   003BB8  C013  F263         	movff	?_sqrtf+1,decide_action@rgb_comp+9
  6835   003BBC  C014  F264         	movff	?_sqrtf+2,decide_action@rgb_comp+10
  6836   003BC0  C015  F265         	movff	?_sqrtf+3,decide_action@rgb_comp+11
  6837                           
  6838                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6839   003BC4  0E66               	movlw	102
  6840   003BC6  6E06               	movwf	___fladd@a^0,c
  6841   003BC8  0E66               	movlw	102
  6842   003BCA  6E07               	movwf	(___fladd@a+1)^0,c
  6843   003BCC  0EA6               	movlw	166
  6844   003BCE  6E08               	movwf	(___fladd@a+2)^0,c
  6845   003BD0  0EBE               	movlw	190
  6846   003BD2  6E09               	movwf	(___fladd@a+3)^0,c
  6847   003BD4  C290  F002         	movff	decide_action@green_r,___fladd@b
  6848   003BD8  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6849   003BDC  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6850   003BE0  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6851   003BE4  EC7A  F026         	call	___fladd	;wreg free
  6852   003BE8  C002  F298         	movff	?___fladd,_decide_action$3066
  6853   003BEC  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  6854   003BF0  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  6855   003BF4  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  6856                           
  6857                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6858   003BF8  0E75               	movlw	117
  6859   003BFA  6E06               	movwf	___fladd@a^0,c
  6860   003BFC  0E93               	movlw	147
  6861   003BFE  6E07               	movwf	(___fladd@a+1)^0,c
  6862   003C00  0ED8               	movlw	216
  6863   003C02  6E08               	movwf	(___fladd@a+2)^0,c
  6864   003C04  0EBE               	movlw	190
  6865   003C06  6E09               	movwf	(___fladd@a+3)^0,c
  6866   003C08  C28C  F002         	movff	decide_action@red_r,___fladd@b
  6867   003C0C  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6868   003C10  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6869   003C14  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6870   003C18  EC7A  F026         	call	___fladd	;wreg free
  6871   003C1C  C002  F29C         	movff	?___fladd,_decide_action$3067
  6872   003C20  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  6873   003C24  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  6874   003C28  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  6875   003C2C                     
  6876                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6877   003C2C  0E00               	movlw	0
  6878   003C2E  0100               	movlb	0	; () banked
  6879   003C30  6FDE               	movwf	powf@y& (0+255),b
  6880   003C32  0E00               	movlw	0
  6881   003C34  6FDF               	movwf	(powf@y+1)& (0+255),b
  6882   003C36  0E00               	movlw	0
  6883   003C38  6FE0               	movwf	(powf@y+2)& (0+255),b
  6884   003C3A  0E40               	movlw	64
  6885   003C3C  6FE1               	movwf	(powf@y+3)& (0+255),b
  6886   003C3E  C298  F0DA         	movff	_decide_action$3066,powf@x
  6887   003C42  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  6888   003C46  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  6889   003C4A  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  6890   003C4E  EC41  F007         	call	_powf	;wreg free
  6891   003C52  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  6892   003C56  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  6893   003C5A  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  6894   003C5E  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  6895   003C62                     
  6896                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6897   003C62  0E00               	movlw	0
  6898   003C64  0100               	movlb	0	; () banked
  6899   003C66  6FDE               	movwf	powf@y& (0+255),b
  6900   003C68  0E00               	movlw	0
  6901   003C6A  6FDF               	movwf	(powf@y+1)& (0+255),b
  6902   003C6C  0E00               	movlw	0
  6903   003C6E  6FE0               	movwf	(powf@y+2)& (0+255),b
  6904   003C70  0E40               	movlw	64
  6905   003C72  6FE1               	movwf	(powf@y+3)& (0+255),b
  6906   003C74  C29C  F0DA         	movff	_decide_action$3067,powf@x
  6907   003C78  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  6908   003C7C  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  6909   003C80  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  6910   003C84  EC41  F007         	call	_powf	;wreg free
  6911   003C88  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  6912   003C8C  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  6913   003C90  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  6914   003C94  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  6915                           
  6916                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6917   003C98  0E25               	movlw	37
  6918   003C9A  6E06               	movwf	___fladd@a^0,c
  6919   003C9C  0E06               	movlw	6
  6920   003C9E  6E07               	movwf	(___fladd@a+1)^0,c
  6921   003CA0  0E81               	movlw	129
  6922   003CA2  6E08               	movwf	(___fladd@a+2)^0,c
  6923   003CA4  0EBE               	movlw	190
  6924   003CA6  6E09               	movwf	(___fladd@a+3)^0,c
  6925   003CA8  C294  F002         	movff	decide_action@blue_r,___fladd@b
  6926   003CAC  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6927   003CB0  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6928   003CB4  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6929   003CB8  EC7A  F026         	call	___fladd	;wreg free
  6930   003CBC  C002  F2A8         	movff	?___fladd,_decide_action$3070
  6931   003CC0  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  6932   003CC4  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  6933   003CC8  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  6934                           
  6935                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6936   003CCC  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  6937   003CD0  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  6938   003CD4  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  6939   003CD8  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  6940   003CDC  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  6941   003CE0  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  6942   003CE4  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  6943   003CE8  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  6944   003CEC  EC7A  F026         	call	___fladd	;wreg free
  6945   003CF0  C002  F2AC         	movff	?___fladd,_decide_action$3071
  6946   003CF4  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  6947   003CF8  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  6948   003CFC  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  6949   003D00                     
  6950                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6951   003D00  0E00               	movlw	0
  6952   003D02  0100               	movlb	0	; () banked
  6953   003D04  6FDE               	movwf	powf@y& (0+255),b
  6954   003D06  0E00               	movlw	0
  6955   003D08  6FDF               	movwf	(powf@y+1)& (0+255),b
  6956   003D0A  0E00               	movlw	0
  6957   003D0C  6FE0               	movwf	(powf@y+2)& (0+255),b
  6958   003D0E  0E40               	movlw	64
  6959   003D10  6FE1               	movwf	(powf@y+3)& (0+255),b
  6960   003D12  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  6961   003D16  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  6962   003D1A  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  6963   003D1E  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  6964   003D22  EC41  F007         	call	_powf	;wreg free
  6965   003D26  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  6966   003D2A  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  6967   003D2E  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  6968   003D32  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  6969   003D36                     
  6970                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6971   003D36  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  6972   003D3A  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  6973   003D3E  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  6974   003D42  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  6975   003D46  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  6976   003D4A  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  6977   003D4E  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  6978   003D52  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  6979   003D56  EC7A  F026         	call	___fladd	;wreg free
  6980   003D5A  C002  F012         	movff	?___fladd,sqrtf@x
  6981   003D5E  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6982   003D62  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6983   003D66  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6984   003D6A  ECEF  F02A         	call	_sqrtf	;wreg free
  6985   003D6E  C012  F266         	movff	?_sqrtf,decide_action@rgb_comp+12
  6986   003D72  C013  F267         	movff	?_sqrtf+1,decide_action@rgb_comp+13
  6987   003D76  C014  F268         	movff	?_sqrtf+2,decide_action@rgb_comp+14
  6988   003D7A  C015  F269         	movff	?_sqrtf+3,decide_action@rgb_comp+15
  6989   003D7E                     
  6990                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  6991   003D7E  0EF0               	movlw	240
  6992   003D80  6E06               	movwf	___fladd@a^0,c
  6993   003D82  0EA7               	movlw	167
  6994   003D84  6E07               	movwf	(___fladd@a+1)^0,c
  6995   003D86  0E86               	movlw	134
  6996   003D88  6E08               	movwf	(___fladd@a+2)^0,c
  6997   003D8A  0EBE               	movlw	190
  6998   003D8C  6E09               	movwf	(___fladd@a+3)^0,c
  6999   003D8E  C290  F002         	movff	decide_action@green_r,___fladd@b
  7000   003D92  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7001   003D96  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7002   003D9A  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7003   003D9E  EC7A  F026         	call	___fladd	;wreg free
  7004   003DA2  C002  F298         	movff	?___fladd,_decide_action$3066
  7005   003DA6  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  7006   003DAA  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  7007   003DAE  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  7008   003DB2                     
  7009                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7010   003DB2  0E08               	movlw	8
  7011   003DB4  6E06               	movwf	___fladd@a^0,c
  7012   003DB6  0EAC               	movlw	172
  7013   003DB8  6E07               	movwf	(___fladd@a+1)^0,c
  7014   003DBA  0EDC               	movlw	220
  7015   003DBC  6E08               	movwf	(___fladd@a+2)^0,c
  7016   003DBE  0EBE               	movlw	190
  7017   003DC0  6E09               	movwf	(___fladd@a+3)^0,c
  7018   003DC2  C28C  F002         	movff	decide_action@red_r,___fladd@b
  7019   003DC6  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7020   003DCA  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7021   003DCE  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7022   003DD2  EC7A  F026         	call	___fladd	;wreg free
  7023   003DD6  C002  F29C         	movff	?___fladd,_decide_action$3067
  7024   003DDA  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  7025   003DDE  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  7026   003DE2  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  7027                           
  7028                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7029   003DE6  0E00               	movlw	0
  7030   003DE8  0100               	movlb	0	; () banked
  7031   003DEA  6FDE               	movwf	powf@y& (0+255),b
  7032   003DEC  0E00               	movlw	0
  7033   003DEE  6FDF               	movwf	(powf@y+1)& (0+255),b
  7034   003DF0  0E00               	movlw	0
  7035   003DF2  6FE0               	movwf	(powf@y+2)& (0+255),b
  7036   003DF4  0E40               	movlw	64
  7037   003DF6  6FE1               	movwf	(powf@y+3)& (0+255),b
  7038   003DF8  C298  F0DA         	movff	_decide_action$3066,powf@x
  7039   003DFC  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  7040   003E00  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  7041   003E04  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  7042   003E08  EC41  F007         	call	_powf	;wreg free
  7043   003E0C  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  7044   003E10  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  7045   003E14  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  7046   003E18  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  7047                           
  7048                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7049   003E1C  0E00               	movlw	0
  7050   003E1E  0100               	movlb	0	; () banked
  7051   003E20  6FDE               	movwf	powf@y& (0+255),b
  7052   003E22  0E00               	movlw	0
  7053   003E24  6FDF               	movwf	(powf@y+1)& (0+255),b
  7054   003E26  0E00               	movlw	0
  7055   003E28  6FE0               	movwf	(powf@y+2)& (0+255),b
  7056   003E2A  0E40               	movlw	64
  7057   003E2C  6FE1               	movwf	(powf@y+3)& (0+255),b
  7058   003E2E  C29C  F0DA         	movff	_decide_action$3067,powf@x
  7059   003E32  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  7060   003E36  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  7061   003E3A  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  7062   003E3E  EC41  F007         	call	_powf	;wreg free
  7063   003E42  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  7064   003E46  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  7065   003E4A  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  7066   003E4E  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  7067   003E52                     
  7068                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7069   003E52  0E08               	movlw	8
  7070   003E54  6E06               	movwf	___fladd@a^0,c
  7071   003E56  0EAC               	movlw	172
  7072   003E58  6E07               	movwf	(___fladd@a+1)^0,c
  7073   003E5A  0E9C               	movlw	156
  7074   003E5C  6E08               	movwf	(___fladd@a+2)^0,c
  7075   003E5E  0EBE               	movlw	190
  7076   003E60  6E09               	movwf	(___fladd@a+3)^0,c
  7077   003E62  C294  F002         	movff	decide_action@blue_r,___fladd@b
  7078   003E66  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7079   003E6A  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7080   003E6E  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7081   003E72  EC7A  F026         	call	___fladd	;wreg free
  7082   003E76  C002  F2A8         	movff	?___fladd,_decide_action$3070
  7083   003E7A  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  7084   003E7E  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  7085   003E82  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  7086   003E86                     
  7087                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7088   003E86  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  7089   003E8A  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  7090   003E8E  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  7091   003E92  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  7092   003E96  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  7093   003E9A  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  7094   003E9E  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  7095   003EA2  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  7096   003EA6  EC7A  F026         	call	___fladd	;wreg free
  7097   003EAA  C002  F2AC         	movff	?___fladd,_decide_action$3071
  7098   003EAE  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  7099   003EB2  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  7100   003EB6  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  7101                           
  7102                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7103   003EBA  0E00               	movlw	0
  7104   003EBC  0100               	movlb	0	; () banked
  7105   003EBE  6FDE               	movwf	powf@y& (0+255),b
  7106   003EC0  0E00               	movlw	0
  7107   003EC2  6FDF               	movwf	(powf@y+1)& (0+255),b
  7108   003EC4  0E00               	movlw	0
  7109   003EC6  6FE0               	movwf	(powf@y+2)& (0+255),b
  7110   003EC8  0E40               	movlw	64
  7111   003ECA  6FE1               	movwf	(powf@y+3)& (0+255),b
  7112   003ECC  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  7113   003ED0  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  7114   003ED4  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  7115   003ED8  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  7116   003EDC  EC41  F007         	call	_powf	;wreg free
  7117   003EE0  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  7118   003EE4  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  7119   003EE8  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  7120   003EEC  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  7121   003EF0                     
  7122                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7123   003EF0  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  7124   003EF4  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  7125   003EF8  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  7126   003EFC  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  7127   003F00  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  7128   003F04  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  7129   003F08  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  7130   003F0C  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  7131   003F10  EC7A  F026         	call	___fladd	;wreg free
  7132   003F14  C002  F012         	movff	?___fladd,sqrtf@x
  7133   003F18  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7134   003F1C  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7135   003F20  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7136   003F24  ECEF  F02A         	call	_sqrtf	;wreg free
  7137   003F28  C012  F26A         	movff	?_sqrtf,decide_action@rgb_comp+16
  7138   003F2C  C013  F26B         	movff	?_sqrtf+1,decide_action@rgb_comp+17
  7139   003F30  C014  F26C         	movff	?_sqrtf+2,decide_action@rgb_comp+18
  7140   003F34  C015  F26D         	movff	?_sqrtf+3,decide_action@rgb_comp+19
  7141   003F38                     
  7142                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7143   003F38  0EBA               	movlw	186
  7144   003F3A  6E06               	movwf	___fladd@a^0,c
  7145   003F3C  0E49               	movlw	73
  7146   003F3E  6E07               	movwf	(___fladd@a+1)^0,c
  7147   003F40  0E0C               	movlw	12
  7148   003F42  6E08               	movwf	(___fladd@a+2)^0,c
  7149   003F44  0EBE               	movlw	190
  7150   003F46  6E09               	movwf	(___fladd@a+3)^0,c
  7151   003F48  C290  F002         	movff	decide_action@green_r,___fladd@b
  7152   003F4C  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7153   003F50  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7154   003F54  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7155   003F58  EC7A  F026         	call	___fladd	;wreg free
  7156   003F5C  C002  F298         	movff	?___fladd,_decide_action$3066
  7157   003F60  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  7158   003F64  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  7159   003F68  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  7160   003F6C                     
  7161                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7162   003F6C  0EE7               	movlw	231
  7163   003F6E  6E06               	movwf	___fladd@a^0,c
  7164   003F70  0EFB               	movlw	251
  7165   003F72  6E07               	movwf	(___fladd@a+1)^0,c
  7166   003F74  0E29               	movlw	41
  7167   003F76  6E08               	movwf	(___fladd@a+2)^0,c
  7168   003F78  0EBF               	movlw	191
  7169   003F7A  6E09               	movwf	(___fladd@a+3)^0,c
  7170   003F7C  C28C  F002         	movff	decide_action@red_r,___fladd@b
  7171   003F80  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7172   003F84  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7173   003F88  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7174   003F8C  EC7A  F026         	call	___fladd	;wreg free
  7175   003F90  C002  F29C         	movff	?___fladd,_decide_action$3067
  7176   003F94  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  7177   003F98  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  7178   003F9C  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  7179   003FA0                     
  7180                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7181   003FA0  0E00               	movlw	0
  7182   003FA2  0100               	movlb	0	; () banked
  7183   003FA4  6FDE               	movwf	powf@y& (0+255),b
  7184   003FA6  0E00               	movlw	0
  7185   003FA8  6FDF               	movwf	(powf@y+1)& (0+255),b
  7186   003FAA  0E00               	movlw	0
  7187   003FAC  6FE0               	movwf	(powf@y+2)& (0+255),b
  7188   003FAE  0E40               	movlw	64
  7189   003FB0  6FE1               	movwf	(powf@y+3)& (0+255),b
  7190   003FB2  C298  F0DA         	movff	_decide_action$3066,powf@x
  7191   003FB6  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  7192   003FBA  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  7193   003FBE  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  7194   003FC2  EC41  F007         	call	_powf	;wreg free
  7195   003FC6  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  7196   003FCA  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  7197   003FCE  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  7198   003FD2  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  7199   003FD6                     
  7200                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7201   003FD6  0E00               	movlw	0
  7202   003FD8  0100               	movlb	0	; () banked
  7203   003FDA  6FDE               	movwf	powf@y& (0+255),b
  7204   003FDC  0E00               	movlw	0
  7205   003FDE  6FDF               	movwf	(powf@y+1)& (0+255),b
  7206   003FE0  0E00               	movlw	0
  7207   003FE2  6FE0               	movwf	(powf@y+2)& (0+255),b
  7208   003FE4  0E40               	movlw	64
  7209   003FE6  6FE1               	movwf	(powf@y+3)& (0+255),b
  7210   003FE8  C29C  F0DA         	movff	_decide_action$3067,powf@x
  7211   003FEC  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  7212   003FF0  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  7213   003FF4  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  7214   003FF8  EC41  F007         	call	_powf	;wreg free
  7215   003FFC  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  7216   004000  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  7217   004004  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  7218   004008  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  7219   00400C                     
  7220                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7221   00400C  0E83               	movlw	131
  7222   00400E  6E06               	movwf	___fladd@a^0,c
  7223   004010  0EC0               	movlw	192
  7224   004012  6E07               	movwf	(___fladd@a+1)^0,c
  7225   004014  0E4A               	movlw	74
  7226   004016  6E08               	movwf	(___fladd@a+2)^0,c
  7227   004018  0EBE               	movlw	190
  7228   00401A  6E09               	movwf	(___fladd@a+3)^0,c
  7229   00401C  C294  F002         	movff	decide_action@blue_r,___fladd@b
  7230   004020  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7231   004024  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7232   004028  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7233   00402C  EC7A  F026         	call	___fladd	;wreg free
  7234   004030  C002  F2A8         	movff	?___fladd,_decide_action$3070
  7235   004034  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  7236   004038  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  7237   00403C  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  7238   004040                     
  7239                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7240   004040  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  7241   004044  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  7242   004048  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  7243   00404C  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  7244   004050  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  7245   004054  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  7246   004058  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  7247   00405C  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  7248   004060  EC7A  F026         	call	___fladd	;wreg free
  7249   004064  C002  F2AC         	movff	?___fladd,_decide_action$3071
  7250   004068  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  7251   00406C  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  7252   004070  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  7253   004074                     
  7254                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7255   004074  0E00               	movlw	0
  7256   004076  0100               	movlb	0	; () banked
  7257   004078  6FDE               	movwf	powf@y& (0+255),b
  7258   00407A  0E00               	movlw	0
  7259   00407C  6FDF               	movwf	(powf@y+1)& (0+255),b
  7260   00407E  0E00               	movlw	0
  7261   004080  6FE0               	movwf	(powf@y+2)& (0+255),b
  7262   004082  0E40               	movlw	64
  7263   004084  6FE1               	movwf	(powf@y+3)& (0+255),b
  7264   004086  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  7265   00408A  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  7266   00408E  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  7267   004092  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  7268   004096  EC41  F007         	call	_powf	;wreg free
  7269   00409A  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  7270   00409E  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  7271   0040A2  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  7272   0040A6  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  7273                           
  7274                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7275   0040AA  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  7276   0040AE  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  7277   0040B2  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  7278   0040B6  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  7279   0040BA  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  7280   0040BE  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  7281   0040C2  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  7282   0040C6  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  7283   0040CA  EC7A  F026         	call	___fladd	;wreg free
  7284   0040CE  C002  F012         	movff	?___fladd,sqrtf@x
  7285   0040D2  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7286   0040D6  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7287   0040DA  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7288   0040DE  ECEF  F02A         	call	_sqrtf	;wreg free
  7289   0040E2  C012  F26E         	movff	?_sqrtf,decide_action@rgb_comp+20
  7290   0040E6  C013  F26F         	movff	?_sqrtf+1,decide_action@rgb_comp+21
  7291   0040EA  C014  F270         	movff	?_sqrtf+2,decide_action@rgb_comp+22
  7292   0040EE  C015  F271         	movff	?_sqrtf+3,decide_action@rgb_comp+23
  7293                           
  7294                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7295   0040F2  0E5A               	movlw	90
  7296   0040F4  6E06               	movwf	___fladd@a^0,c
  7297   0040F6  0E64               	movlw	100
  7298   0040F8  6E07               	movwf	(___fladd@a+1)^0,c
  7299   0040FA  0EBB               	movlw	187
  7300   0040FC  6E08               	movwf	(___fladd@a+2)^0,c
  7301   0040FE  0EBE               	movlw	190
  7302   004100  6E09               	movwf	(___fladd@a+3)^0,c
  7303   004102  C290  F002         	movff	decide_action@green_r,___fladd@b
  7304   004106  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7305   00410A  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7306   00410E  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7307   004112  EC7A  F026         	call	___fladd	;wreg free
  7308   004116  C002  F298         	movff	?___fladd,_decide_action$3066
  7309   00411A  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  7310   00411E  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  7311   004122  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  7312                           
  7313                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7314   004126  0E83               	movlw	131
  7315   004128  6E06               	movwf	___fladd@a^0,c
  7316   00412A  0EC0               	movlw	192
  7317   00412C  6E07               	movwf	(___fladd@a+1)^0,c
  7318   00412E  0E8A               	movlw	138
  7319   004130  6E08               	movwf	(___fladd@a+2)^0,c
  7320   004132  0EBE               	movlw	190
  7321   004134  6E09               	movwf	(___fladd@a+3)^0,c
  7322   004136  C28C  F002         	movff	decide_action@red_r,___fladd@b
  7323   00413A  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7324   00413E  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7325   004142  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7326   004146  EC7A  F026         	call	___fladd	;wreg free
  7327   00414A  C002  F29C         	movff	?___fladd,_decide_action$3067
  7328   00414E  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  7329   004152  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  7330   004156  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  7331   00415A                     
  7332                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7333   00415A  0E00               	movlw	0
  7334   00415C  0100               	movlb	0	; () banked
  7335   00415E  6FDE               	movwf	powf@y& (0+255),b
  7336   004160  0E00               	movlw	0
  7337   004162  6FDF               	movwf	(powf@y+1)& (0+255),b
  7338   004164  0E00               	movlw	0
  7339   004166  6FE0               	movwf	(powf@y+2)& (0+255),b
  7340   004168  0E40               	movlw	64
  7341   00416A  6FE1               	movwf	(powf@y+3)& (0+255),b
  7342   00416C  C298  F0DA         	movff	_decide_action$3066,powf@x
  7343   004170  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  7344   004174  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  7345   004178  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  7346   00417C  EC41  F007         	call	_powf	;wreg free
  7347   004180  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  7348   004184  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  7349   004188  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  7350   00418C  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  7351   004190                     
  7352                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7353   004190  0E00               	movlw	0
  7354   004192  0100               	movlb	0	; () banked
  7355   004194  6FDE               	movwf	powf@y& (0+255),b
  7356   004196  0E00               	movlw	0
  7357   004198  6FDF               	movwf	(powf@y+1)& (0+255),b
  7358   00419A  0E00               	movlw	0
  7359   00419C  6FE0               	movwf	(powf@y+2)& (0+255),b
  7360   00419E  0E40               	movlw	64
  7361   0041A0  6FE1               	movwf	(powf@y+3)& (0+255),b
  7362   0041A2  C29C  F0DA         	movff	_decide_action$3067,powf@x
  7363   0041A6  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  7364   0041AA  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  7365   0041AE  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  7366   0041B2  EC41  F007         	call	_powf	;wreg free
  7367   0041B6  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  7368   0041BA  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  7369   0041BE  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  7370   0041C2  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  7371                           
  7372                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7373   0041C6  0E23               	movlw	35
  7374   0041C8  6E06               	movwf	___fladd@a^0,c
  7375   0041CA  0EDB               	movlw	219
  7376   0041CC  6E07               	movwf	(___fladd@a+1)^0,c
  7377   0041CE  0EB9               	movlw	185
  7378   0041D0  6E08               	movwf	(___fladd@a+2)^0,c
  7379   0041D2  0EBE               	movlw	190
  7380   0041D4  6E09               	movwf	(___fladd@a+3)^0,c
  7381   0041D6  C294  F002         	movff	decide_action@blue_r,___fladd@b
  7382   0041DA  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7383   0041DE  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7384   0041E2  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7385   0041E6  EC7A  F026         	call	___fladd	;wreg free
  7386   0041EA  C002  F2A8         	movff	?___fladd,_decide_action$3070
  7387   0041EE  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  7388   0041F2  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  7389   0041F6  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  7390                           
  7391                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7392   0041FA  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  7393   0041FE  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  7394   004202  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  7395   004206  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  7396   00420A  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  7397   00420E  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  7398   004212  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  7399   004216  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  7400   00421A  EC7A  F026         	call	___fladd	;wreg free
  7401   00421E  C002  F2AC         	movff	?___fladd,_decide_action$3071
  7402   004222  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  7403   004226  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  7404   00422A  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  7405   00422E                     
  7406                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7407   00422E  0E00               	movlw	0
  7408   004230  0100               	movlb	0	; () banked
  7409   004232  6FDE               	movwf	powf@y& (0+255),b
  7410   004234  0E00               	movlw	0
  7411   004236  6FDF               	movwf	(powf@y+1)& (0+255),b
  7412   004238  0E00               	movlw	0
  7413   00423A  6FE0               	movwf	(powf@y+2)& (0+255),b
  7414   00423C  0E40               	movlw	64
  7415   00423E  6FE1               	movwf	(powf@y+3)& (0+255),b
  7416   004240  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  7417   004244  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  7418   004248  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  7419   00424C  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  7420   004250  EC41  F007         	call	_powf	;wreg free
  7421   004254  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  7422   004258  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  7423   00425C  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  7424   004260  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  7425   004264                     
  7426                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7427   004264  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  7428   004268  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  7429   00426C  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  7430   004270  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  7431   004274  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  7432   004278  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  7433   00427C  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  7434   004280  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  7435   004284  EC7A  F026         	call	___fladd	;wreg free
  7436   004288  C002  F012         	movff	?___fladd,sqrtf@x
  7437   00428C  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7438   004290  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7439   004294  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7440   004298  ECEF  F02A         	call	_sqrtf	;wreg free
  7441   00429C  C012  F272         	movff	?_sqrtf,decide_action@rgb_comp+24
  7442   0042A0  C013  F273         	movff	?_sqrtf+1,decide_action@rgb_comp+25
  7443   0042A4  C014  F274         	movff	?_sqrtf+2,decide_action@rgb_comp+26
  7444   0042A8  C015  F275         	movff	?_sqrtf+3,decide_action@rgb_comp+27
  7445   0042AC                     
  7446                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7447   0042AC  0E1F               	movlw	31
  7448   0042AE  6E06               	movwf	___fladd@a^0,c
  7449   0042B0  0E85               	movlw	133
  7450   0042B2  6E07               	movwf	(___fladd@a+1)^0,c
  7451   0042B4  0EAB               	movlw	171
  7452   0042B6  6E08               	movwf	(___fladd@a+2)^0,c
  7453   0042B8  0EBE               	movlw	190
  7454   0042BA  6E09               	movwf	(___fladd@a+3)^0,c
  7455   0042BC  C290  F002         	movff	decide_action@green_r,___fladd@b
  7456   0042C0  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7457   0042C4  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7458   0042C8  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7459   0042CC  EC7A  F026         	call	___fladd	;wreg free
  7460   0042D0  C002  F298         	movff	?___fladd,_decide_action$3066
  7461   0042D4  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  7462   0042D8  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  7463   0042DC  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  7464   0042E0                     
  7465                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7466   0042E0  0EB0               	movlw	176
  7467   0042E2  6E06               	movwf	___fladd@a^0,c
  7468   0042E4  0E72               	movlw	114
  7469   0042E6  6E07               	movwf	(___fladd@a+1)^0,c
  7470   0042E8  0EA8               	movlw	168
  7471   0042EA  6E08               	movwf	(___fladd@a+2)^0,c
  7472   0042EC  0EBE               	movlw	190
  7473   0042EE  6E09               	movwf	(___fladd@a+3)^0,c
  7474   0042F0  C28C  F002         	movff	decide_action@red_r,___fladd@b
  7475   0042F4  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7476   0042F8  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7477   0042FC  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7478   004300  EC7A  F026         	call	___fladd	;wreg free
  7479   004304  C002  F29C         	movff	?___fladd,_decide_action$3067
  7480   004308  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  7481   00430C  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  7482   004310  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  7483                           
  7484                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7485   004314  0E00               	movlw	0
  7486   004316  0100               	movlb	0	; () banked
  7487   004318  6FDE               	movwf	powf@y& (0+255),b
  7488   00431A  0E00               	movlw	0
  7489   00431C  6FDF               	movwf	(powf@y+1)& (0+255),b
  7490   00431E  0E00               	movlw	0
  7491   004320  6FE0               	movwf	(powf@y+2)& (0+255),b
  7492   004322  0E40               	movlw	64
  7493   004324  6FE1               	movwf	(powf@y+3)& (0+255),b
  7494   004326  C298  F0DA         	movff	_decide_action$3066,powf@x
  7495   00432A  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  7496   00432E  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  7497   004332  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  7498   004336  EC41  F007         	call	_powf	;wreg free
  7499   00433A  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  7500   00433E  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  7501   004342  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  7502   004346  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  7503                           
  7504                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7505   00434A  0E00               	movlw	0
  7506   00434C  0100               	movlb	0	; () banked
  7507   00434E  6FDE               	movwf	powf@y& (0+255),b
  7508   004350  0E00               	movlw	0
  7509   004352  6FDF               	movwf	(powf@y+1)& (0+255),b
  7510   004354  0E00               	movlw	0
  7511   004356  6FE0               	movwf	(powf@y+2)& (0+255),b
  7512   004358  0E40               	movlw	64
  7513   00435A  6FE1               	movwf	(powf@y+3)& (0+255),b
  7514   00435C  C29C  F0DA         	movff	_decide_action$3067,powf@x
  7515   004360  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  7516   004364  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  7517   004368  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  7518   00436C  EC41  F007         	call	_powf	;wreg free
  7519   004370  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  7520   004374  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  7521   004378  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  7522   00437C  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  7523   004380                     
  7524                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7525   004380  0E1F               	movlw	31
  7526   004382  6E06               	movwf	___fladd@a^0,c
  7527   004384  0E85               	movlw	133
  7528   004386  6E07               	movwf	(___fladd@a+1)^0,c
  7529   004388  0EAB               	movlw	171
  7530   00438A  6E08               	movwf	(___fladd@a+2)^0,c
  7531   00438C  0EBE               	movlw	190
  7532   00438E  6E09               	movwf	(___fladd@a+3)^0,c
  7533   004390  C294  F002         	movff	decide_action@blue_r,___fladd@b
  7534   004394  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7535   004398  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7536   00439C  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7537   0043A0  EC7A  F026         	call	___fladd	;wreg free
  7538   0043A4  C002  F2A8         	movff	?___fladd,_decide_action$3070
  7539   0043A8  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  7540   0043AC  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  7541   0043B0  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  7542   0043B4                     
  7543                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7544   0043B4  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  7545   0043B8  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  7546   0043BC  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  7547   0043C0  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  7548   0043C4  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  7549   0043C8  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  7550   0043CC  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  7551   0043D0  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  7552   0043D4  EC7A  F026         	call	___fladd	;wreg free
  7553   0043D8  C002  F2AC         	movff	?___fladd,_decide_action$3071
  7554   0043DC  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  7555   0043E0  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  7556   0043E4  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  7557                           
  7558                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7559   0043E8  0E00               	movlw	0
  7560   0043EA  0100               	movlb	0	; () banked
  7561   0043EC  6FDE               	movwf	powf@y& (0+255),b
  7562   0043EE  0E00               	movlw	0
  7563   0043F0  6FDF               	movwf	(powf@y+1)& (0+255),b
  7564   0043F2  0E00               	movlw	0
  7565   0043F4  6FE0               	movwf	(powf@y+2)& (0+255),b
  7566   0043F6  0E40               	movlw	64
  7567   0043F8  6FE1               	movwf	(powf@y+3)& (0+255),b
  7568   0043FA  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  7569   0043FE  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  7570   004402  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  7571   004406  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  7572   00440A  EC41  F007         	call	_powf	;wreg free
  7573   00440E  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  7574   004412  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  7575   004416  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  7576   00441A  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  7577   00441E                     
  7578                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7579   00441E  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  7580   004422  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  7581   004426  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  7582   00442A  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  7583   00442E  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  7584   004432  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  7585   004436  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  7586   00443A  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  7587   00443E  EC7A  F026         	call	___fladd	;wreg free
  7588   004442  C002  F012         	movff	?___fladd,sqrtf@x
  7589   004446  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7590   00444A  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7591   00444E  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7592   004452  ECEF  F02A         	call	_sqrtf	;wreg free
  7593   004456  C012  F276         	movff	?_sqrtf,decide_action@rgb_comp+28
  7594   00445A  C013  F277         	movff	?_sqrtf+1,decide_action@rgb_comp+29
  7595   00445E  C014  F278         	movff	?_sqrtf+2,decide_action@rgb_comp+30
  7596   004462  C015  F279         	movff	?_sqrtf+3,decide_action@rgb_comp+31
  7597   004466                     
  7598                           ;color.c: 164:     action = 0;
  7599   004466  0E00               	movlw	0
  7600   004468  0102               	movlb	2	; () banked
  7601   00446A  6F7A               	movwf	decide_action@action& (0+255),b
  7602   00446C                     
  7603                           ; BSR set to: 2
  7604                           ;color.c: 165:     for(char i = 0; i < 8; i +=1){
  7605   00446C  0E00               	movlw	0
  7606   00446E  6F7F               	movwf	decide_action@i& (0+255),b
  7607   004470                     l7572:
  7608                           
  7609                           ; BSR set to: 2
  7610   004470  0E07               	movlw	7
  7611   004472  657F               	cpfsgt	decide_action@i& (0+255),b
  7612   004474  EF3E  F022         	goto	u7721
  7613   004478  EF40  F022         	goto	u7720
  7614   00447C                     u7721:
  7615   00447C  EF42  F022         	goto	l7576
  7616   004480                     u7720:
  7617   004480  EF71  F022         	goto	l7584
  7618   004484                     l7576:
  7619                           
  7620                           ; BSR set to: 2
  7621                           ;color.c: 166:         if(rgb_comp[i] < rgb_comp[action]){
  7622   004484  517F               	movf	decide_action@i& (0+255),w,b
  7623   004486  0D04               	mullw	4
  7624   004488  0E5A               	movlw	low decide_action@rgb_comp
  7625   00448A  24F3               	addwf	243,w,c
  7626   00448C  6ED9               	movwf	fsr2l,c
  7627   00448E  0E02               	movlw	high decide_action@rgb_comp
  7628   004490  20F4               	addwfc	prodh,w,c
  7629   004492  6EDA               	movwf	fsr2h,c
  7630   004494  CFDE F04C          	movff	postinc2,___flge@ff1
  7631   004498  CFDE F04D          	movff	postinc2,___flge@ff1+1
  7632   00449C  CFDE F04E          	movff	postinc2,___flge@ff1+2
  7633   0044A0  CFDE F04F          	movff	postinc2,___flge@ff1+3
  7634   0044A4  517A               	movf	decide_action@action& (0+255),w,b
  7635   0044A6  0D04               	mullw	4
  7636   0044A8  0E5A               	movlw	low decide_action@rgb_comp
  7637   0044AA  24F3               	addwf	243,w,c
  7638   0044AC  6ED9               	movwf	fsr2l,c
  7639   0044AE  0E02               	movlw	high decide_action@rgb_comp
  7640   0044B0  20F4               	addwfc	prodh,w,c
  7641   0044B2  6EDA               	movwf	fsr2h,c
  7642   0044B4  CFDE F050          	movff	postinc2,___flge@ff2
  7643   0044B8  CFDE F051          	movff	postinc2,___flge@ff2+1
  7644   0044BC  CFDE F052          	movff	postinc2,___flge@ff2+2
  7645   0044C0  CFDE F053          	movff	postinc2,___flge@ff2+3
  7646   0044C4  ECBD  F032         	call	___flge	;wreg free
  7647   0044C8  B0D8               	btfsc	status,0,c
  7648   0044CA  EF69  F022         	goto	u7731
  7649   0044CE  EF6B  F022         	goto	u7730
  7650   0044D2                     u7731:
  7651   0044D2  EF6D  F022         	goto	l7580
  7652   0044D6                     u7730:
  7653   0044D6                     
  7654                           ;color.c: 167:             action = i;
  7655   0044D6  C27F  F27A         	movff	decide_action@i,decide_action@action
  7656   0044DA                     l7580:
  7657                           
  7658                           ;color.c: 169:     }
  7659   0044DA  0102               	movlb	2	; () banked
  7660   0044DC  2B7F               	incf	decide_action@i& (0+255),f,b
  7661   0044DE  EF38  F022         	goto	l7572
  7662   0044E2                     l7584:
  7663                           
  7664                           ; BSR set to: 2
  7665                           ;color.c: 172:     color_writetoaddr(0x01, 0xFF);
  7666   0044E2  0EFF               	movlw	255
  7667   0044E4  6E04               	movwf	color_writetoaddr@value^0,c
  7668   0044E6  0E01               	movlw	1
  7669   0044E8  ECA7  F03A         	call	_color_writetoaddr
  7670                           
  7671                           ;color.c: 173:     color_writetoaddr(0x03, 0xFF);
  7672   0044EC  0EFF               	movlw	255
  7673   0044EE  6E04               	movwf	color_writetoaddr@value^0,c
  7674   0044F0  0E03               	movlw	3
  7675   0044F2  ECA7  F03A         	call	_color_writetoaddr
  7676   0044F6                     
  7677                           ;color.c: 175:     return action;
  7678   0044F6  0102               	movlb	2	; () banked
  7679   0044F8  517A               	movf	decide_action@action& (0+255),w,b
  7680   0044FA                     
  7681                           ; BSR set to: 2
  7682   0044FA  0012               	return		;funcret
  7683   0044FC                     __end_of_decide_action:
  7684                           	callstack 0
  7685                           
  7686 ;; *************** function _powf *****************
  7687 ;; Defined at:
  7688 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\powf.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  x               4    0[BANK0 ] float 
  7691 ;;  y               4    4[BANK0 ] float 
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;  s2              4  144[BANK1 ] float 
  7694 ;;  s_h             4  116[BANK1 ] struct fui
  7695 ;;  t_h             4  112[BANK1 ] struct fui
  7696 ;;  t_l             4   52[BANK1 ] float 
  7697 ;;  s_l             4   48[BANK1 ] float 
  7698 ;;  z               4  180[BANK1 ] struct fui
  7699 ;;  t               4  176[BANK1 ] struct fui
  7700 ;;  ix              4  172[BANK1 ] struct fui
  7701 ;;  j               4  168[BANK1 ] long 
  7702 ;;  k               4  164[BANK1 ] long 
  7703 ;;  p_h             4  160[BANK1 ] struct fui
  7704 ;;  is              4  152[BANK1 ] struct fui
  7705 ;;  iy              4  148[BANK1 ] long 
  7706 ;;  t1              4  140[BANK1 ] struct fui
  7707 ;;  n               4  136[BANK1 ] long 
  7708 ;;  hy              4  132[BANK1 ] struct fui
  7709 ;;  v               4  128[BANK1 ] float 
  7710 ;;  u               4  124[BANK1 ] float 
  7711 ;;  ax              4  120[BANK1 ] struct fui
  7712 ;;  p_l             4  108[BANK1 ] float 
  7713 ;;  hx              4  104[BANK1 ] struct fui
  7714 ;;  sn              4  100[BANK1 ] unsigned long 
  7715 ;;  s               4   88[BANK1 ] float 
  7716 ;;  yisint          4   84[BANK1 ] long 
  7717 ;;  r               4   80[BANK1 ] float 
  7718 ;;  w               4   68[BANK1 ] float 
  7719 ;;  y1              4   44[BANK1 ] struct fui
  7720 ;;  i               4   40[BANK1 ] long 
  7721 ;;  z_l             4   36[BANK1 ] float 
  7722 ;;  z_h             4   32[BANK1 ] float 
  7723 ;;  t2              4   28[BANK1 ] float 
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  4    0[BANK0 ] float 
  7726 ;; Registers used:
  7727 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7733 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7734 ;;      Locals:         0       0     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7735 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7736 ;;      Totals:         0      17     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7737 ;;Total ram usage:      201 bytes
  7738 ;; Hardware stack levels used: 1
  7739 ;; Hardware stack levels required when called: 4
  7740 ;; This function calls:
  7741 ;;		___fladd
  7742 ;;		___fldiv
  7743 ;;		___flge
  7744 ;;		___flmul
  7745 ;;		___flneg
  7746 ;;		___flsub
  7747 ;;		___xxtofl
  7748 ;;		_scalbnf
  7749 ;;		_sqrtf
  7750 ;; This function is called by:
  7751 ;;		_decide_action
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text29
  7756   000E82                     __ptext29:
  7757                           	callstack 0
  7758   000E82                     _powf:
  7759                           	callstack 25
  7760   000E82  C0DA  F168         	movff	powf@x,powf@hx
  7761   000E86  C0DB  F169         	movff	powf@x+1,powf@hx+1
  7762   000E8A  C0DC  F16A         	movff	powf@x+2,powf@hx+2
  7763   000E8E  C0DD  F16B         	movff	powf@x+3,powf@hx+3
  7764   000E92  C0DE  F184         	movff	powf@y,powf@hy
  7765   000E96  C0DF  F185         	movff	powf@y+1,powf@hy+1
  7766   000E9A  C0E0  F186         	movff	powf@y+2,powf@hy+2
  7767   000E9E  C0E1  F187         	movff	powf@y+3,powf@hy+3
  7768   000EA2  0EFF               	movlw	255
  7769   000EA4  0101               	movlb	1	; () banked
  7770   000EA6  1568               	andwf	powf@hx& (0+255),w,b
  7771   000EA8  6FAC               	movwf	powf@ix& (0+255),b
  7772   000EAA  0EFF               	movlw	255
  7773   000EAC  1569               	andwf	(powf@hx+1)& (0+255),w,b
  7774   000EAE  6FAD               	movwf	(powf@ix+1)& (0+255),b
  7775   000EB0  0EFF               	movlw	255
  7776   000EB2  156A               	andwf	(powf@hx+2)& (0+255),w,b
  7777   000EB4  6FAE               	movwf	(powf@ix+2)& (0+255),b
  7778   000EB6  0E7F               	movlw	127
  7779   000EB8  156B               	andwf	(powf@hx+3)& (0+255),w,b
  7780   000EBA  6FAF               	movwf	(powf@ix+3)& (0+255),b
  7781   000EBC  0EFF               	movlw	255
  7782   000EBE  1584               	andwf	powf@hy& (0+255),w,b
  7783   000EC0  6F94               	movwf	powf@iy& (0+255),b
  7784   000EC2  0EFF               	movlw	255
  7785   000EC4  1585               	andwf	(powf@hy+1)& (0+255),w,b
  7786   000EC6  6F95               	movwf	(powf@iy+1)& (0+255),b
  7787   000EC8  0EFF               	movlw	255
  7788   000ECA  1586               	andwf	(powf@hy+2)& (0+255),w,b
  7789   000ECC  6F96               	movwf	(powf@iy+2)& (0+255),b
  7790   000ECE  0E7F               	movlw	127
  7791   000ED0  1587               	andwf	(powf@hy+3)& (0+255),w,b
  7792   000ED2  6F97               	movwf	(powf@iy+3)& (0+255),b
  7793   000ED4  5194               	movf	powf@iy& (0+255),w,b
  7794   000ED6  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  7795   000ED8  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  7796   000EDA  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  7797   000EDC  A4D8               	btfss	status,2,c
  7798   000EDE  EF73  F007         	goto	u7111
  7799   000EE2  EF75  F007         	goto	u7110
  7800   000EE6                     u7111:
  7801   000EE6  EF80  F007         	goto	l7050
  7802   000EEA                     u7110:
  7803   000EEA                     
  7804                           ; BSR set to: 1
  7805   000EEA  0E00               	movlw	0
  7806   000EEC  0100               	movlb	0	; () banked
  7807   000EEE  6FDA               	movwf	?_powf& (0+255),b
  7808   000EF0  0E00               	movlw	0
  7809   000EF2  6FDB               	movwf	(?_powf+1)& (0+255),b
  7810   000EF4  0E80               	movlw	128
  7811   000EF6  6FDC               	movwf	(?_powf+2)& (0+255),b
  7812   000EF8  0E3F               	movlw	63
  7813   000EFA  6FDD               	movwf	(?_powf+3)& (0+255),b
  7814   000EFC  EF80  F019         	goto	l1377
  7815   000F00                     l7050:
  7816                           
  7817                           ; BSR set to: 1
  7818   000F00  0E80               	movlw	128
  7819   000F02  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  7820   000F04  E109               	bnz	u7121
  7821   000F06  0E3F               	movlw	63
  7822   000F08  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  7823   000F0A  1168               	iorwf	powf@hx& (0+255),w,b
  7824   000F0C  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  7825   000F0E  A4D8               	btfss	status,2,c
  7826   000F10  EF8C  F007         	goto	u7121
  7827   000F14  EF8E  F007         	goto	u7120
  7828   000F18                     u7121:
  7829   000F18  EF99  F007         	goto	l7056
  7830   000F1C                     u7120:
  7831   000F1C                     
  7832                           ; BSR set to: 1
  7833   000F1C  0E00               	movlw	0
  7834   000F1E  0100               	movlb	0	; () banked
  7835   000F20  6FDA               	movwf	?_powf& (0+255),b
  7836   000F22  0E00               	movlw	0
  7837   000F24  6FDB               	movwf	(?_powf+1)& (0+255),b
  7838   000F26  0E80               	movlw	128
  7839   000F28  6FDC               	movwf	(?_powf+2)& (0+255),b
  7840   000F2A  0E3F               	movlw	63
  7841   000F2C  6FDD               	movwf	(?_powf+3)& (0+255),b
  7842   000F2E  EF80  F019         	goto	l1377
  7843   000F32                     l7056:
  7844                           
  7845                           ; BSR set to: 1
  7846   000F32  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  7847   000F34  EFAA  F007         	goto	u7130
  7848   000F38  05AC               	decf	powf@ix& (0+255),w,b
  7849   000F3A  0E00               	movlw	0
  7850   000F3C  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  7851   000F3E  0E80               	movlw	128
  7852   000F40  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  7853   000F42  0E7F               	movlw	127
  7854   000F44  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  7855   000F46  B0D8               	btfsc	status,0,c
  7856   000F48  EFA8  F007         	goto	u7131
  7857   000F4C  EFAA  F007         	goto	u7130
  7858   000F50                     u7131:
  7859   000F50  EFBB  F007         	goto	l7060
  7860   000F54                     u7130:
  7861   000F54                     
  7862                           ; BSR set to: 1
  7863   000F54  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7864   000F56  EFB9  F007         	goto	u7141
  7865   000F5A  0594               	decf	powf@iy& (0+255),w,b
  7866   000F5C  0E00               	movlw	0
  7867   000F5E  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  7868   000F60  0E80               	movlw	128
  7869   000F62  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  7870   000F64  0E7F               	movlw	127
  7871   000F66  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7872   000F68  A0D8               	btfss	status,0,c
  7873   000F6A  EFB9  F007         	goto	u7141
  7874   000F6E  EFBB  F007         	goto	u7140
  7875   000F72                     u7141:
  7876   000F72  EFD7  F007         	goto	l7064
  7877   000F76                     u7140:
  7878   000F76                     l7060:
  7879                           
  7880                           ; BSR set to: 1
  7881   000F76  C0DA  F002         	movff	powf@x,___fladd@b
  7882   000F7A  C0DB  F003         	movff	powf@x+1,___fladd@b+1
  7883   000F7E  C0DC  F004         	movff	powf@x+2,___fladd@b+2
  7884   000F82  C0DD  F005         	movff	powf@x+3,___fladd@b+3
  7885   000F86  C0DE  F006         	movff	powf@y,___fladd@a
  7886   000F8A  C0DF  F007         	movff	powf@y+1,___fladd@a+1
  7887   000F8E  C0E0  F008         	movff	powf@y+2,___fladd@a+2
  7888   000F92  C0E1  F009         	movff	powf@y+3,___fladd@a+3
  7889   000F96  EC7A  F026         	call	___fladd	;wreg free
  7890   000F9A  C002  F0DA         	movff	?___fladd,?_powf
  7891   000F9E  C003  F0DB         	movff	?___fladd+1,?_powf+1
  7892   000FA2  C004  F0DC         	movff	?___fladd+2,?_powf+2
  7893   000FA6  C005  F0DD         	movff	?___fladd+3,?_powf+3
  7894   000FAA  EF80  F019         	goto	l1377
  7895   000FAE                     l7064:
  7896                           
  7897                           ; BSR set to: 1
  7898   000FAE  0E00               	movlw	0
  7899   000FB0  6F54               	movwf	powf@yisint& (0+255),b
  7900   000FB2  0E00               	movlw	0
  7901   000FB4  6F55               	movwf	(powf@yisint+1)& (0+255),b
  7902   000FB6  0E00               	movlw	0
  7903   000FB8  6F56               	movwf	(powf@yisint+2)& (0+255),b
  7904   000FBA  0E00               	movlw	0
  7905   000FBC  6F57               	movwf	(powf@yisint+3)& (0+255),b
  7906   000FBE                     
  7907                           ; BSR set to: 1
  7908   000FBE  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  7909   000FC0  EFE6  F007         	goto	u7150
  7910   000FC4  EFE4  F007         	goto	u7151
  7911   000FC8                     u7151:
  7912   000FC8  EFB2  F008         	goto	l1382
  7913   000FCC                     u7150:
  7914   000FCC                     
  7915                           ; BSR set to: 1
  7916   000FCC  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7917   000FCE  EFF2  F007         	goto	u7161
  7918   000FD2  0E80               	movlw	128
  7919   000FD4  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  7920   000FD6  0E4B               	movlw	75
  7921   000FD8  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7922   000FDA  A0D8               	btfss	status,0,c
  7923   000FDC  EFF2  F007         	goto	u7161
  7924   000FE0  EFF4  F007         	goto	u7160
  7925   000FE4                     u7161:
  7926   000FE4  EFFE  F007         	goto	l7072
  7927   000FE8                     u7160:
  7928   000FE8                     
  7929                           ; BSR set to: 1
  7930   000FE8  0E02               	movlw	2
  7931   000FEA  6F54               	movwf	powf@yisint& (0+255),b
  7932   000FEC  0E00               	movlw	0
  7933   000FEE  6F55               	movwf	(powf@yisint+1)& (0+255),b
  7934   000FF0  0E00               	movlw	0
  7935   000FF2  6F56               	movwf	(powf@yisint+2)& (0+255),b
  7936   000FF4  0E00               	movlw	0
  7937   000FF6  6F57               	movwf	(powf@yisint+3)& (0+255),b
  7938   000FF8  EFB2  F008         	goto	l1382
  7939   000FFC                     l7072:
  7940                           
  7941                           ; BSR set to: 1
  7942   000FFC  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7943   000FFE  EF0A  F008         	goto	u7171
  7944   001002  0E80               	movlw	128
  7945   001004  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  7946   001006  0E3F               	movlw	63
  7947   001008  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7948   00100A  A0D8               	btfss	status,0,c
  7949   00100C  EF0A  F008         	goto	u7171
  7950   001010  EF0C  F008         	goto	u7170
  7951   001014                     u7171:
  7952   001014  EFB2  F008         	goto	l1382
  7953   001018                     u7170:
  7954   001018                     
  7955                           ; BSR set to: 1
  7956   001018  0E17               	movlw	23
  7957   00101A  0100               	movlb	0	; () banked
  7958   00101C  6FE2               	movwf	??_powf& (0+255),b
  7959   00101E  C194  F0E3         	movff	powf@iy,??_powf+1
  7960   001022  C195  F0E4         	movff	powf@iy+1,??_powf+2
  7961   001026  C196  F0E5         	movff	powf@iy+2,??_powf+3
  7962   00102A  C197  F0E6         	movff	powf@iy+3,??_powf+4
  7963   00102E                     u7185:
  7964   00102E  67E2               	tstfsz	??_powf& (0+255),b
  7965   001030  EF1C  F008         	goto	u7186
  7966   001034  EF24  F008         	goto	u7187
  7967   001038                     u7186:
  7968   001038  35E6               	rlcf	(??_powf+4)& (0+255),w,b
  7969   00103A  33E6               	rrcf	(??_powf+4)& (0+255),f,b
  7970   00103C  33E5               	rrcf	(??_powf+3)& (0+255),f,b
  7971   00103E  33E4               	rrcf	(??_powf+2)& (0+255),f,b
  7972   001040  33E3               	rrcf	(??_powf+1)& (0+255),f,b
  7973   001042  2FE2               	decfsz	??_powf& (0+255),f,b
  7974   001044  EF17  F008         	goto	u7185
  7975   001048                     u7187:
  7976   001048  0E81               	movlw	129
  7977   00104A  0100               	movlb	0	; () banked
  7978   00104C  25E3               	addwf	(??_powf+1)& (0+255),w,b
  7979   00104E  0101               	movlb	1	; () banked
  7980   001050  6FA4               	movwf	powf@k& (0+255),b
  7981   001052  0EFF               	movlw	255
  7982   001054  0100               	movlb	0	; () banked
  7983   001056  21E4               	addwfc	(??_powf+2)& (0+255),w,b
  7984   001058  0101               	movlb	1	; () banked
  7985   00105A  6FA5               	movwf	(powf@k+1)& (0+255),b
  7986   00105C  0EFF               	movlw	255
  7987   00105E  0100               	movlb	0	; () banked
  7988   001060  21E5               	addwfc	(??_powf+3)& (0+255),w,b
  7989   001062  0101               	movlb	1	; () banked
  7990   001064  6FA6               	movwf	(powf@k+2)& (0+255),b
  7991   001066  0EFF               	movlw	255
  7992   001068  0100               	movlb	0	; () banked
  7993   00106A  21E6               	addwfc	(??_powf+4)& (0+255),w,b
  7994   00106C  0101               	movlb	1	; () banked
  7995   00106E  6FA7               	movwf	(powf@k+3)& (0+255),b
  7996   001070  51A4               	movf	powf@k& (0+255),w,b
  7997   001072  0817               	sublw	23
  7998   001074  0100               	movlb	0	; () banked
  7999   001076  6FE2               	movwf	??_powf& (0+255),b
  8000   001078  C194  F0E3         	movff	powf@iy,??_powf+1
  8001   00107C  C195  F0E4         	movff	powf@iy+1,??_powf+2
  8002   001080  C196  F0E5         	movff	powf@iy+2,??_powf+3
  8003   001084  C197  F0E6         	movff	powf@iy+3,??_powf+4
  8004   001088                     u7195:
  8005   001088  67E2               	tstfsz	??_powf& (0+255),b
  8006   00108A  EF49  F008         	goto	u7196
  8007   00108E  EF51  F008         	goto	u7197
  8008   001092                     u7196:
  8009   001092  35E6               	rlcf	(??_powf+4)& (0+255),w,b
  8010   001094  33E6               	rrcf	(??_powf+4)& (0+255),f,b
  8011   001096  33E5               	rrcf	(??_powf+3)& (0+255),f,b
  8012   001098  33E4               	rrcf	(??_powf+2)& (0+255),f,b
  8013   00109A  33E3               	rrcf	(??_powf+1)& (0+255),f,b
  8014   00109C  2FE2               	decfsz	??_powf& (0+255),f,b
  8015   00109E  EF44  F008         	goto	u7195
  8016   0010A2                     u7197:
  8017   0010A2  C0E3  F1A8         	movff	??_powf+1,powf@j
  8018   0010A6  C0E4  F1A9         	movff	??_powf+2,powf@j+1
  8019   0010AA  C0E5  F1AA         	movff	??_powf+3,powf@j+2
  8020   0010AE  C0E6  F1AB         	movff	??_powf+4,powf@j+3
  8021   0010B2  0101               	movlb	1	; () banked
  8022   0010B4  51A4               	movf	powf@k& (0+255),w,b
  8023   0010B6  0817               	sublw	23
  8024   0010B8  0100               	movlb	0	; () banked
  8025   0010BA  6FE2               	movwf	??_powf& (0+255),b
  8026   0010BC  C1A8  F0E3         	movff	powf@j,??_powf+1
  8027   0010C0  C1A9  F0E4         	movff	powf@j+1,??_powf+2
  8028   0010C4  C1AA  F0E5         	movff	powf@j+2,??_powf+3
  8029   0010C8  C1AB  F0E6         	movff	powf@j+3,??_powf+4
  8030   0010CC  2BE2               	incf	??_powf& (0+255),f,b
  8031   0010CE  EF6E  F008         	goto	u7200
  8032   0010D2                     u7205:
  8033   0010D2  90D8               	bcf	status,0,c
  8034   0010D4  37E3               	rlcf	(??_powf+1)& (0+255),f,b
  8035   0010D6  37E4               	rlcf	(??_powf+2)& (0+255),f,b
  8036   0010D8  37E5               	rlcf	(??_powf+3)& (0+255),f,b
  8037   0010DA  37E6               	rlcf	(??_powf+4)& (0+255),f,b
  8038   0010DC                     u7200:
  8039   0010DC  2FE2               	decfsz	??_powf& (0+255),f,b
  8040   0010DE  EF69  F008         	goto	u7205
  8041   0010E2  0101               	movlb	1	; () banked
  8042   0010E4  5194               	movf	powf@iy& (0+255),w,b
  8043   0010E6  0100               	movlb	0	; () banked
  8044   0010E8  19E3               	xorwf	(??_powf+1)& (0+255),w,b
  8045   0010EA  E113               	bnz	u7211
  8046   0010EC  0101               	movlb	1	; () banked
  8047   0010EE  5195               	movf	(powf@iy+1)& (0+255),w,b
  8048   0010F0  0100               	movlb	0	; () banked
  8049   0010F2  19E4               	xorwf	(??_powf+2)& (0+255),w,b
  8050   0010F4  E10E               	bnz	u7211
  8051   0010F6  0101               	movlb	1	; () banked
  8052   0010F8  5196               	movf	(powf@iy+2)& (0+255),w,b
  8053   0010FA  0100               	movlb	0	; () banked
  8054   0010FC  19E5               	xorwf	(??_powf+3)& (0+255),w,b
  8055   0010FE  E109               	bnz	u7211
  8056   001100  0101               	movlb	1	; () banked
  8057   001102  5197               	movf	(powf@iy+3)& (0+255),w,b
  8058   001104  0100               	movlb	0	; () banked
  8059   001106  19E6               	xorwf	(??_powf+4)& (0+255),w,b
  8060   001108  A4D8               	btfss	status,2,c
  8061   00110A  EF89  F008         	goto	u7211
  8062   00110E  EF8B  F008         	goto	u7210
  8063   001112                     u7211:
  8064   001112  EFB2  F008         	goto	l1382
  8065   001116                     u7210:
  8066   001116                     
  8067                           ; BSR set to: 0
  8068   001116  0E01               	movlw	1
  8069   001118  0101               	movlb	1	; () banked
  8070   00111A  15A8               	andwf	powf@j& (0+255),w,b
  8071   00111C  0100               	movlb	0	; () banked
  8072   00111E  6FE2               	movwf	??_powf& (0+255),b
  8073   001120  0E00               	movlw	0
  8074   001122  0101               	movlb	1	; () banked
  8075   001124  15A9               	andwf	(powf@j+1)& (0+255),w,b
  8076   001126  0100               	movlb	0	; () banked
  8077   001128  6FE3               	movwf	(??_powf+1)& (0+255),b
  8078   00112A  0E00               	movlw	0
  8079   00112C  0101               	movlb	1	; () banked
  8080   00112E  15AA               	andwf	(powf@j+2)& (0+255),w,b
  8081   001130  0100               	movlb	0	; () banked
  8082   001132  6FE4               	movwf	(??_powf+2)& (0+255),b
  8083   001134  0E00               	movlw	0
  8084   001136  0101               	movlb	1	; () banked
  8085   001138  15AB               	andwf	(powf@j+3)& (0+255),w,b
  8086   00113A  0100               	movlb	0	; () banked
  8087   00113C  6FE5               	movwf	(??_powf+3)& (0+255),b
  8088   00113E  51E2               	movf	??_powf& (0+255),w,b
  8089   001140  0802               	sublw	2
  8090   001142  0101               	movlb	1	; () banked
  8091   001144  6F54               	movwf	powf@yisint& (0+255),b
  8092   001146  0E00               	movlw	0
  8093   001148  0100               	movlb	0	; () banked
  8094   00114A  55E3               	subfwb	(??_powf+1)& (0+255),w,b
  8095   00114C  0101               	movlb	1	; () banked
  8096   00114E  6F55               	movwf	(powf@yisint+1)& (0+255),b
  8097   001150  0E00               	movlw	0
  8098   001152  0100               	movlb	0	; () banked
  8099   001154  55E4               	subfwb	(??_powf+2)& (0+255),w,b
  8100   001156  0101               	movlb	1	; () banked
  8101   001158  6F56               	movwf	(powf@yisint+2)& (0+255),b
  8102   00115A  0E00               	movlw	0
  8103   00115C  0100               	movlb	0	; () banked
  8104   00115E  55E5               	subfwb	(??_powf+3)& (0+255),w,b
  8105   001160  0101               	movlb	1	; () banked
  8106   001162  6F57               	movwf	(powf@yisint+3)& (0+255),b
  8107   001164                     l1382:
  8108   001164  0E80               	movlw	128
  8109   001166  0101               	movlb	1	; () banked
  8110   001168  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  8111   00116A  E109               	bnz	u7221
  8112   00116C  0E7F               	movlw	127
  8113   00116E  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  8114   001170  1194               	iorwf	powf@iy& (0+255),w,b
  8115   001172  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  8116   001174  A4D8               	btfss	status,2,c
  8117   001176  EFBF  F008         	goto	u7221
  8118   00117A  EFC1  F008         	goto	u7220
  8119   00117E                     u7221:
  8120   00117E  EF2D  F009         	goto	l7102
  8121   001182                     u7220:
  8122   001182                     
  8123                           ; BSR set to: 1
  8124   001182  0E80               	movlw	128
  8125   001184  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  8126   001186  E109               	bnz	u7231
  8127   001188  0E3F               	movlw	63
  8128   00118A  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  8129   00118C  11AC               	iorwf	powf@ix& (0+255),w,b
  8130   00118E  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8131   001190  A4D8               	btfss	status,2,c
  8132   001192  EFCD  F008         	goto	u7231
  8133   001196  EFCF  F008         	goto	u7230
  8134   00119A                     u7231:
  8135   00119A  EFDA  F008         	goto	l7086
  8136   00119E                     u7230:
  8137   00119E                     
  8138                           ; BSR set to: 1
  8139   00119E  0E00               	movlw	0
  8140   0011A0  0100               	movlb	0	; () banked
  8141   0011A2  6FDA               	movwf	?_powf& (0+255),b
  8142   0011A4  0E00               	movlw	0
  8143   0011A6  6FDB               	movwf	(?_powf+1)& (0+255),b
  8144   0011A8  0E80               	movlw	128
  8145   0011AA  6FDC               	movwf	(?_powf+2)& (0+255),b
  8146   0011AC  0E3F               	movlw	63
  8147   0011AE  6FDD               	movwf	(?_powf+3)& (0+255),b
  8148   0011B0  EF80  F019         	goto	l1377
  8149   0011B4                     l7086:
  8150                           
  8151                           ; BSR set to: 1
  8152   0011B4  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8153   0011B6  EFE9  F008         	goto	u7241
  8154   0011BA  05AC               	decf	powf@ix& (0+255),w,b
  8155   0011BC  0E00               	movlw	0
  8156   0011BE  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  8157   0011C0  0E80               	movlw	128
  8158   0011C2  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  8159   0011C4  0E3F               	movlw	63
  8160   0011C6  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  8161   0011C8  A0D8               	btfss	status,0,c
  8162   0011CA  EFE9  F008         	goto	u7241
  8163   0011CE  EFEB  F008         	goto	u7240
  8164   0011D2                     u7241:
  8165   0011D2  EF07  F009         	goto	l7094
  8166   0011D6                     u7240:
  8167   0011D6                     
  8168                           ; BSR set to: 1
  8169   0011D6  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8170   0011D8  EFF2  F008         	goto	u7250
  8171   0011DC  EFF0  F008         	goto	u7251
  8172   0011E0                     u7251:
  8173   0011E0  EFFD  F008         	goto	l1392
  8174   0011E4                     u7250:
  8175   0011E4                     
  8176                           ; BSR set to: 1
  8177   0011E4  0E00               	movlw	0
  8178   0011E6  0100               	movlb	0	; () banked
  8179   0011E8  6FDA               	movwf	?_powf& (0+255),b
  8180   0011EA  0E00               	movlw	0
  8181   0011EC  6FDB               	movwf	(?_powf+1)& (0+255),b
  8182   0011EE  0E00               	movlw	0
  8183   0011F0  6FDC               	movwf	(?_powf+2)& (0+255),b
  8184   0011F2  0E00               	movlw	0
  8185   0011F4  6FDD               	movwf	(?_powf+3)& (0+255),b
  8186   0011F6  EF80  F019         	goto	l1377
  8187   0011FA                     l1392:
  8188                           
  8189                           ; BSR set to: 1
  8190   0011FA  C0DE  F0DA         	movff	powf@y,?_powf
  8191   0011FE  C0DF  F0DB         	movff	powf@y+1,?_powf+1
  8192   001202  C0E0  F0DC         	movff	powf@y+2,?_powf+2
  8193   001206  C0E1  F0DD         	movff	powf@y+3,?_powf+3
  8194   00120A  EF80  F019         	goto	l1377
  8195   00120E                     l7094:
  8196                           
  8197                           ; BSR set to: 1
  8198   00120E  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8199   001210  EF0E  F009         	goto	u7260
  8200   001214  EF0C  F009         	goto	u7261
  8201   001218                     u7261:
  8202   001218  EF22  F009         	goto	l7098
  8203   00121C                     u7260:
  8204   00121C                     
  8205                           ; BSR set to: 1
  8206   00121C  C0DE  F002         	movff	powf@y,___flneg@f1
  8207   001220  C0DF  F003         	movff	powf@y+1,___flneg@f1+1
  8208   001224  C0E0  F004         	movff	powf@y+2,___flneg@f1+2
  8209   001228  C0E1  F005         	movff	powf@y+3,___flneg@f1+3
  8210   00122C  EC1D  F03A         	call	___flneg	;wreg free
  8211   001230  C002  F0DA         	movff	?___flneg,?_powf
  8212   001234  C003  F0DB         	movff	?___flneg+1,?_powf+1
  8213   001238  C004  F0DC         	movff	?___flneg+2,?_powf+2
  8214   00123C  C005  F0DD         	movff	?___flneg+3,?_powf+3
  8215   001240  EF80  F019         	goto	l1377
  8216   001244                     l7098:
  8217                           
  8218                           ; BSR set to: 1
  8219   001244  0E00               	movlw	0
  8220   001246  0100               	movlb	0	; () banked
  8221   001248  6FDA               	movwf	?_powf& (0+255),b
  8222   00124A  0E00               	movlw	0
  8223   00124C  6FDB               	movwf	(?_powf+1)& (0+255),b
  8224   00124E  0E00               	movlw	0
  8225   001250  6FDC               	movwf	(?_powf+2)& (0+255),b
  8226   001252  0E00               	movlw	0
  8227   001254  6FDD               	movwf	(?_powf+3)& (0+255),b
  8228   001256  EF80  F019         	goto	l1377
  8229   00125A                     l7102:
  8230                           
  8231                           ; BSR set to: 1
  8232   00125A  0E80               	movlw	128
  8233   00125C  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  8234   00125E  E109               	bnz	u7271
  8235   001260  0E3F               	movlw	63
  8236   001262  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  8237   001264  1194               	iorwf	powf@iy& (0+255),w,b
  8238   001266  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  8239   001268  A4D8               	btfss	status,2,c
  8240   00126A  EF39  F009         	goto	u7271
  8241   00126E  EF3B  F009         	goto	u7270
  8242   001272                     u7271:
  8243   001272  EF68  F009         	goto	l7108
  8244   001276                     u7270:
  8245   001276                     
  8246                           ; BSR set to: 1
  8247   001276  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8248   001278  EF42  F009         	goto	u7280
  8249   00127C  EF40  F009         	goto	u7281
  8250   001280                     u7281:
  8251   001280  EF5E  F009         	goto	l1402
  8252   001284                     u7280:
  8253   001284                     
  8254                           ; BSR set to: 1
  8255   001284  0E00               	movlw	0
  8256   001286  6E2B               	movwf	___fldiv@b^0,c
  8257   001288  0E00               	movlw	0
  8258   00128A  6E2C               	movwf	(___fldiv@b+1)^0,c
  8259   00128C  0E80               	movlw	128
  8260   00128E  6E2D               	movwf	(___fldiv@b+2)^0,c
  8261   001290  0E3F               	movlw	63
  8262   001292  6E2E               	movwf	(___fldiv@b+3)^0,c
  8263   001294  C0DA  F02F         	movff	powf@x,___fldiv@a
  8264   001298  C0DB  F030         	movff	powf@x+1,___fldiv@a+1
  8265   00129C  C0DC  F031         	movff	powf@x+2,___fldiv@a+2
  8266   0012A0  C0DD  F032         	movff	powf@x+3,___fldiv@a+3
  8267   0012A4  ECDE  F02C         	call	___fldiv	;wreg free
  8268   0012A8  C02B  F0DA         	movff	?___fldiv,?_powf
  8269   0012AC  C02C  F0DB         	movff	?___fldiv+1,?_powf+1
  8270   0012B0  C02D  F0DC         	movff	?___fldiv+2,?_powf+2
  8271   0012B4  C02E  F0DD         	movff	?___fldiv+3,?_powf+3
  8272   0012B8  EF80  F019         	goto	l1377
  8273   0012BC                     l1402:
  8274                           
  8275                           ; BSR set to: 1
  8276   0012BC  C0DA  F0DA         	movff	powf@x,?_powf
  8277   0012C0  C0DB  F0DB         	movff	powf@x+1,?_powf+1
  8278   0012C4  C0DC  F0DC         	movff	powf@x+2,?_powf+2
  8279   0012C8  C0DD  F0DD         	movff	powf@x+3,?_powf+3
  8280   0012CC  EF80  F019         	goto	l1377
  8281   0012D0                     l7108:
  8282                           
  8283                           ; BSR set to: 1
  8284   0012D0  0E40               	movlw	64
  8285   0012D2  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  8286   0012D4  1184               	iorwf	powf@hy& (0+255),w,b
  8287   0012D6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  8288   0012D8  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  8289   0012DA  A4D8               	btfss	status,2,c
  8290   0012DC  EF72  F009         	goto	u7291
  8291   0012E0  EF74  F009         	goto	u7290
  8292   0012E4                     u7291:
  8293   0012E4  EF90  F009         	goto	l7114
  8294   0012E8                     u7290:
  8295   0012E8                     
  8296                           ; BSR set to: 1
  8297   0012E8  C0DA  F012         	movff	powf@x,___flmul@b
  8298   0012EC  C0DB  F013         	movff	powf@x+1,___flmul@b+1
  8299   0012F0  C0DC  F014         	movff	powf@x+2,___flmul@b+2
  8300   0012F4  C0DD  F015         	movff	powf@x+3,___flmul@b+3
  8301   0012F8  C0DA  F016         	movff	powf@x,___flmul@a
  8302   0012FC  C0DB  F017         	movff	powf@x+1,___flmul@a+1
  8303   001300  C0DC  F018         	movff	powf@x+2,___flmul@a+2
  8304   001304  C0DD  F019         	movff	powf@x+3,___flmul@a+3
  8305   001308  ECDA  F028         	call	___flmul	;wreg free
  8306   00130C  C012  F0DA         	movff	?___flmul,?_powf
  8307   001310  C013  F0DB         	movff	?___flmul+1,?_powf+1
  8308   001314  C014  F0DC         	movff	?___flmul+2,?_powf+2
  8309   001318  C015  F0DD         	movff	?___flmul+3,?_powf+3
  8310   00131C  EF80  F019         	goto	l1377
  8311   001320                     l7114:
  8312                           
  8313                           ; BSR set to: 1
  8314   001320  0E3F               	movlw	63
  8315   001322  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  8316   001324  1184               	iorwf	powf@hy& (0+255),w,b
  8317   001326  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  8318   001328  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  8319   00132A  A4D8               	btfss	status,2,c
  8320   00132C  EF9A  F009         	goto	u7301
  8321   001330  EF9C  F009         	goto	u7300
  8322   001334                     u7301:
  8323   001334  EFB7  F009         	goto	l1406
  8324   001338                     u7300:
  8325   001338                     
  8326                           ; BSR set to: 1
  8327   001338  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  8328   00133A  EFA1  F009         	goto	u7311
  8329   00133E  EFA3  F009         	goto	u7310
  8330   001342                     u7311:
  8331   001342  EFB7  F009         	goto	l1406
  8332   001346                     u7310:
  8333   001346                     
  8334                           ; BSR set to: 1
  8335   001346  C0DA  F012         	movff	powf@x,sqrtf@x
  8336   00134A  C0DB  F013         	movff	powf@x+1,sqrtf@x+1
  8337   00134E  C0DC  F014         	movff	powf@x+2,sqrtf@x+2
  8338   001352  C0DD  F015         	movff	powf@x+3,sqrtf@x+3
  8339   001356  ECEF  F02A         	call	_sqrtf	;wreg free
  8340   00135A  C012  F0DA         	movff	?_sqrtf,?_powf
  8341   00135E  C013  F0DB         	movff	?_sqrtf+1,?_powf+1
  8342   001362  C014  F0DC         	movff	?_sqrtf+2,?_powf+2
  8343   001366  C015  F0DD         	movff	?_sqrtf+3,?_powf+3
  8344   00136A  EF80  F019         	goto	l1377
  8345   00136E                     l1406:
  8346                           
  8347                           ; BSR set to: 1
  8348   00136E  C1AC  F178         	movff	powf@ix,powf@ax
  8349   001372  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  8350   001376  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  8351   00137A  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  8352   00137E                     
  8353                           ; BSR set to: 1
  8354   00137E  0E80               	movlw	128
  8355   001380  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  8356   001382  E10B               	bnz	u7320
  8357   001384  0E7F               	movlw	127
  8358   001386  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  8359   001388  11AC               	iorwf	powf@ix& (0+255),w,b
  8360   00138A  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8361   00138C  B4D8               	btfsc	status,2,c
  8362   00138E  EFCB  F009         	goto	u7321
  8363   001392  EFCD  F009         	goto	u7320
  8364   001396                     u7321:
  8365   001396  EFE6  F009         	goto	l1410
  8366   00139A                     u7320:
  8367   00139A                     
  8368                           ; BSR set to: 1
  8369   00139A  51AC               	movf	powf@ix& (0+255),w,b
  8370   00139C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8371   00139E  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  8372   0013A0  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  8373   0013A2  B4D8               	btfsc	status,2,c
  8374   0013A4  EFD6  F009         	goto	u7331
  8375   0013A8  EFD8  F009         	goto	u7330
  8376   0013AC                     u7331:
  8377   0013AC  EFE6  F009         	goto	l1410
  8378   0013B0                     u7330:
  8379   0013B0                     
  8380                           ; BSR set to: 1
  8381   0013B0  0E80               	movlw	128
  8382   0013B2  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  8383   0013B4  E109               	bnz	u7341
  8384   0013B6  0E3F               	movlw	63
  8385   0013B8  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  8386   0013BA  11AC               	iorwf	powf@ix& (0+255),w,b
  8387   0013BC  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8388   0013BE  A4D8               	btfss	status,2,c
  8389   0013C0  EFE4  F009         	goto	u7341
  8390   0013C4  EFE6  F009         	goto	u7340
  8391   0013C8                     u7341:
  8392   0013C8  EF81  F00A         	goto	l7146
  8393   0013CC                     u7340:
  8394   0013CC                     l1410:
  8395                           
  8396                           ; BSR set to: 1
  8397   0013CC  C178  F1B4         	movff	powf@ax,powf@z
  8398   0013D0  C179  F1B5         	movff	powf@ax+1,powf@z+1
  8399   0013D4  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  8400   0013D8  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  8401   0013DC                     
  8402                           ; BSR set to: 1
  8403   0013DC  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8404   0013DE  EFF5  F009         	goto	u7350
  8405   0013E2  EFF3  F009         	goto	u7351
  8406   0013E6                     u7351:
  8407   0013E6  EF0F  F00A         	goto	l7132
  8408   0013EA                     u7350:
  8409   0013EA                     
  8410                           ; BSR set to: 1
  8411   0013EA  0E00               	movlw	0
  8412   0013EC  6E2B               	movwf	___fldiv@b^0,c
  8413   0013EE  0E00               	movlw	0
  8414   0013F0  6E2C               	movwf	(___fldiv@b+1)^0,c
  8415   0013F2  0E80               	movlw	128
  8416   0013F4  6E2D               	movwf	(___fldiv@b+2)^0,c
  8417   0013F6  0E3F               	movlw	63
  8418   0013F8  6E2E               	movwf	(___fldiv@b+3)^0,c
  8419   0013FA  C1B4  F02F         	movff	powf@z,___fldiv@a
  8420   0013FE  C1B5  F030         	movff	powf@z+1,___fldiv@a+1
  8421   001402  C1B6  F031         	movff	powf@z+2,___fldiv@a+2
  8422   001406  C1B7  F032         	movff	powf@z+3,___fldiv@a+3
  8423   00140A  ECDE  F02C         	call	___fldiv	;wreg free
  8424   00140E  C02B  F1B4         	movff	?___fldiv,powf@z
  8425   001412  C02C  F1B5         	movff	?___fldiv+1,powf@z+1
  8426   001416  C02D  F1B6         	movff	?___fldiv+2,powf@z+2
  8427   00141A  C02E  F1B7         	movff	?___fldiv+3,powf@z+3
  8428   00141E                     l7132:
  8429   00141E  0101               	movlb	1	; () banked
  8430   001420  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  8431   001422  EF17  F00A         	goto	u7360
  8432   001426  EF15  F00A         	goto	u7361
  8433   00142A                     u7361:
  8434   00142A  EF77  F00A         	goto	l7142
  8435   00142E                     u7360:
  8436   00142E                     
  8437                           ; BSR set to: 1
  8438   00142E  0E00               	movlw	0
  8439   001430  25AC               	addwf	powf@ix& (0+255),w,b
  8440   001432  0100               	movlb	0	; () banked
  8441   001434  6FE2               	movwf	??_powf& (0+255),b
  8442   001436  0E00               	movlw	0
  8443   001438  0101               	movlb	1	; () banked
  8444   00143A  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  8445   00143C  0100               	movlb	0	; () banked
  8446   00143E  6FE3               	movwf	(??_powf+1)& (0+255),b
  8447   001440  0E80               	movlw	128
  8448   001442  0101               	movlb	1	; () banked
  8449   001444  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  8450   001446  0100               	movlb	0	; () banked
  8451   001448  6FE4               	movwf	(??_powf+2)& (0+255),b
  8452   00144A  0EC0               	movlw	192
  8453   00144C  0101               	movlb	1	; () banked
  8454   00144E  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  8455   001450  0100               	movlb	0	; () banked
  8456   001452  6FE5               	movwf	(??_powf+3)& (0+255),b
  8457   001454  0101               	movlb	1	; () banked
  8458   001456  5154               	movf	powf@yisint& (0+255),w,b
  8459   001458  0100               	movlb	0	; () banked
  8460   00145A  11E2               	iorwf	??_powf& (0+255),w,b
  8461   00145C  6FE6               	movwf	(??_powf+4)& (0+255),b
  8462   00145E  0101               	movlb	1	; () banked
  8463   001460  5155               	movf	(powf@yisint+1)& (0+255),w,b
  8464   001462  0100               	movlb	0	; () banked
  8465   001464  11E3               	iorwf	(??_powf+1)& (0+255),w,b
  8466   001466  6FE7               	movwf	(??_powf+5)& (0+255),b
  8467   001468  0101               	movlb	1	; () banked
  8468   00146A  5156               	movf	(powf@yisint+2)& (0+255),w,b
  8469   00146C  0100               	movlb	0	; () banked
  8470   00146E  11E4               	iorwf	(??_powf+2)& (0+255),w,b
  8471   001470  6FE8               	movwf	(??_powf+6)& (0+255),b
  8472   001472  0101               	movlb	1	; () banked
  8473   001474  5157               	movf	(powf@yisint+3)& (0+255),w,b
  8474   001476  0100               	movlb	0	; () banked
  8475   001478  11E5               	iorwf	(??_powf+3)& (0+255),w,b
  8476   00147A  6FE9               	movwf	(??_powf+7)& (0+255),b
  8477   00147C  51E6               	movf	(??_powf+4)& (0+255),w,b
  8478   00147E  11E7               	iorwf	(??_powf+5)& (0+255),w,b
  8479   001480  11E8               	iorwf	(??_powf+6)& (0+255),w,b
  8480   001482  11E9               	iorwf	(??_powf+7)& (0+255),w,b
  8481   001484  A4D8               	btfss	status,2,c
  8482   001486  EF47  F00A         	goto	u7371
  8483   00148A  EF49  F00A         	goto	u7370
  8484   00148E                     u7371:
  8485   00148E  EF59  F00A         	goto	l7138
  8486   001492                     u7370:
  8487   001492                     l7136:
  8488   001492  0E00               	movlw	0
  8489   001494  0100               	movlb	0	; () banked
  8490   001496  6FD1               	movwf	(_errno+1)& (0+255),b
  8491   001498  0E21               	movlw	33
  8492   00149A  6FD0               	movwf	_errno& (0+255),b
  8493   00149C  0EFF               	movlw	255
  8494   00149E  0101               	movlb	1	; () banked
  8495   0014A0  6FB4               	movwf	powf@z& (0+255),b
  8496   0014A2  0EFF               	movlw	255
  8497   0014A4  6FB5               	movwf	(powf@z+1)& (0+255),b
  8498   0014A6  0EFF               	movlw	255
  8499   0014A8  6FB6               	movwf	(powf@z+2)& (0+255),b
  8500   0014AA  0E7F               	movlw	127
  8501   0014AC  6FB7               	movwf	(powf@z+3)& (0+255),b
  8502   0014AE  EF77  F00A         	goto	l7142
  8503   0014B2                     l7138:
  8504                           
  8505                           ; BSR set to: 0
  8506   0014B2  0101               	movlb	1	; () banked
  8507   0014B4  0554               	decf	powf@yisint& (0+255),w,b
  8508   0014B6  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  8509   0014B8  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  8510   0014BA  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  8511   0014BC  A4D8               	btfss	status,2,c
  8512   0014BE  EF63  F00A         	goto	u7381
  8513   0014C2  EF65  F00A         	goto	u7380
  8514   0014C6                     u7381:
  8515   0014C6  EF77  F00A         	goto	l7142
  8516   0014CA                     u7380:
  8517   0014CA                     
  8518                           ; BSR set to: 1
  8519   0014CA  C1B4  F002         	movff	powf@z,___flneg@f1
  8520   0014CE  C1B5  F003         	movff	powf@z+1,___flneg@f1+1
  8521   0014D2  C1B6  F004         	movff	powf@z+2,___flneg@f1+2
  8522   0014D6  C1B7  F005         	movff	powf@z+3,___flneg@f1+3
  8523   0014DA  EC1D  F03A         	call	___flneg	;wreg free
  8524   0014DE  C002  F1B4         	movff	?___flneg,powf@z
  8525   0014E2  C003  F1B5         	movff	?___flneg+1,powf@z+1
  8526   0014E6  C004  F1B6         	movff	?___flneg+2,powf@z+2
  8527   0014EA  C005  F1B7         	movff	?___flneg+3,powf@z+3
  8528   0014EE                     l7142:
  8529   0014EE  C1B4  F0DA         	movff	powf@z,?_powf
  8530   0014F2  C1B5  F0DB         	movff	powf@z+1,?_powf+1
  8531   0014F6  C1B6  F0DC         	movff	powf@z+2,?_powf+2
  8532   0014FA  C1B7  F0DD         	movff	powf@z+3,?_powf+3
  8533   0014FE  EF80  F019         	goto	l1377
  8534   001502                     l7146:
  8535                           
  8536                           ; BSR set to: 1
  8537   001502  0E00               	movlw	0
  8538   001504  6F64               	movwf	powf@sn& (0+255),b
  8539   001506  0E00               	movlw	0
  8540   001508  6F65               	movwf	(powf@sn+1)& (0+255),b
  8541   00150A  0E00               	movlw	0
  8542   00150C  6F66               	movwf	(powf@sn+2)& (0+255),b
  8543   00150E  0E00               	movlw	0
  8544   001510  6F67               	movwf	(powf@sn+3)& (0+255),b
  8545   001512                     
  8546                           ; BSR set to: 1
  8547   001512  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  8548   001514  EF90  F00A         	goto	u7390
  8549   001518  EF8E  F00A         	goto	u7391
  8550   00151C                     u7391:
  8551   00151C  EFB0  F00A         	goto	l7162
  8552   001520                     u7390:
  8553   001520                     
  8554                           ; BSR set to: 1
  8555   001520  5154               	movf	powf@yisint& (0+255),w,b
  8556   001522  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  8557   001524  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  8558   001526  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  8559   001528  A4D8               	btfss	status,2,c
  8560   00152A  EF99  F00A         	goto	u7401
  8561   00152E  EF9B  F00A         	goto	u7400
  8562   001532                     u7401:
  8563   001532  EF9D  F00A         	goto	l7158
  8564   001536                     u7400:
  8565   001536  EF49  F00A         	goto	l7136
  8566   00153A                     l7158:
  8567                           
  8568                           ; BSR set to: 1
  8569   00153A  0554               	decf	powf@yisint& (0+255),w,b
  8570   00153C  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  8571   00153E  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  8572   001540  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  8573   001542  A4D8               	btfss	status,2,c
  8574   001544  EFA6  F00A         	goto	u7411
  8575   001548  EFA8  F00A         	goto	u7410
  8576   00154C                     u7411:
  8577   00154C  EFB0  F00A         	goto	l7162
  8578   001550                     u7410:
  8579   001550                     
  8580                           ; BSR set to: 1
  8581   001550  0E00               	movlw	0
  8582   001552  6F64               	movwf	powf@sn& (0+255),b
  8583   001554  0E00               	movlw	0
  8584   001556  6F65               	movwf	(powf@sn+1)& (0+255),b
  8585   001558  0E00               	movlw	0
  8586   00155A  6F66               	movwf	(powf@sn+2)& (0+255),b
  8587   00155C  0E80               	movlw	128
  8588   00155E  6F67               	movwf	(powf@sn+3)& (0+255),b
  8589   001560                     l7162:
  8590                           
  8591                           ; BSR set to: 1
  8592   001560  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  8593   001562  EFBF  F00A         	goto	u7421
  8594   001566  0594               	decf	powf@iy& (0+255),w,b
  8595   001568  0E00               	movlw	0
  8596   00156A  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  8597   00156C  0E00               	movlw	0
  8598   00156E  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  8599   001570  0E4D               	movlw	77
  8600   001572  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  8601   001574  A0D8               	btfss	status,0,c
  8602   001576  EFBF  F00A         	goto	u7421
  8603   00157A  EFC1  F00A         	goto	u7420
  8604   00157E                     u7421:
  8605   00157E  EF85  F00C         	goto	l7218
  8606   001582                     u7420:
  8607   001582                     
  8608                           ; BSR set to: 1
  8609   001582  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8610   001584  EFD3  F00A         	goto	u7430
  8611   001588  0EF8               	movlw	248
  8612   00158A  5DAC               	subwf	powf@ix& (0+255),w,b
  8613   00158C  0EFF               	movlw	255
  8614   00158E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  8615   001590  0E7F               	movlw	127
  8616   001592  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  8617   001594  0E3F               	movlw	63
  8618   001596  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  8619   001598  B0D8               	btfsc	status,0,c
  8620   00159A  EFD1  F00A         	goto	u7431
  8621   00159E  EFD3  F00A         	goto	u7430
  8622   0015A2                     u7431:
  8623   0015A2  EFF4  F00A         	goto	l7180
  8624   0015A6                     u7430:
  8625   0015A6                     
  8626                           ; BSR set to: 1
  8627   0015A6  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8628   0015A8  EFDA  F00A         	goto	u7440
  8629   0015AC  EFD8  F00A         	goto	u7441
  8630   0015B0                     u7441:
  8631   0015B0  EFE9  F00A         	goto	l7176
  8632   0015B4                     u7440:
  8633   0015B4                     l7168:
  8634   0015B4  0E00               	movlw	0
  8635   0015B6  0101               	movlb	1	; () banked
  8636   0015B8  1164               	iorwf	powf@sn& (0+255),w,b
  8637   0015BA  6FB4               	movwf	powf@z& (0+255),b
  8638   0015BC  0E00               	movlw	0
  8639   0015BE  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  8640   0015C0  6FB5               	movwf	(powf@z+1)& (0+255),b
  8641   0015C2  0E80               	movlw	128
  8642   0015C4  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  8643   0015C6  6FB6               	movwf	(powf@z+2)& (0+255),b
  8644   0015C8  0E7F               	movlw	127
  8645   0015CA  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  8646   0015CC  6FB7               	movwf	(powf@z+3)& (0+255),b
  8647   0015CE  EF77  F00A         	goto	l7142
  8648   0015D2                     l7176:
  8649                           
  8650                           ; BSR set to: 1
  8651   0015D2  0E00               	movlw	0
  8652   0015D4  0100               	movlb	0	; () banked
  8653   0015D6  6FDA               	movwf	?_powf& (0+255),b
  8654   0015D8  0E00               	movlw	0
  8655   0015DA  6FDB               	movwf	(?_powf+1)& (0+255),b
  8656   0015DC  0E00               	movlw	0
  8657   0015DE  6FDC               	movwf	(?_powf+2)& (0+255),b
  8658   0015E0  0E00               	movlw	0
  8659   0015E2  6FDD               	movwf	(?_powf+3)& (0+255),b
  8660   0015E4  EF80  F019         	goto	l1377
  8661   0015E8                     l7180:
  8662                           
  8663                           ; BSR set to: 1
  8664   0015E8  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8665   0015EA  EF04  F00B         	goto	u7451
  8666   0015EE  0E08               	movlw	8
  8667   0015F0  5DAC               	subwf	powf@ix& (0+255),w,b
  8668   0015F2  0E00               	movlw	0
  8669   0015F4  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  8670   0015F6  0E80               	movlw	128
  8671   0015F8  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  8672   0015FA  0E3F               	movlw	63
  8673   0015FC  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  8674   0015FE  A0D8               	btfss	status,0,c
  8675   001600  EF04  F00B         	goto	u7451
  8676   001604  EF06  F00B         	goto	u7450
  8677   001608                     u7451:
  8678   001608  EF22  F00B         	goto	l7196
  8679   00160C                     u7450:
  8680   00160C                     
  8681                           ; BSR set to: 1
  8682   00160C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8683   00160E  EF13  F00B         	goto	u7461
  8684   001612  5187               	movf	(powf@hy+3)& (0+255),w,b
  8685   001614  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  8686   001616  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  8687   001618  E108               	bnz	u7460
  8688   00161A  0584               	decf	powf@hy& (0+255),w,b
  8689   00161C  A0D8               	btfss	status,0,c
  8690   00161E  EF13  F00B         	goto	u7461
  8691   001622  EF15  F00B         	goto	u7460
  8692   001626                     u7461:
  8693   001626  EF17  F00B         	goto	l7192
  8694   00162A                     u7460:
  8695   00162A  EFDA  F00A         	goto	l7168
  8696   00162E                     l7192:
  8697                           
  8698                           ; BSR set to: 1
  8699   00162E  0E00               	movlw	0
  8700   001630  0100               	movlb	0	; () banked
  8701   001632  6FDA               	movwf	?_powf& (0+255),b
  8702   001634  0E00               	movlw	0
  8703   001636  6FDB               	movwf	(?_powf+1)& (0+255),b
  8704   001638  0E00               	movlw	0
  8705   00163A  6FDC               	movwf	(?_powf+2)& (0+255),b
  8706   00163C  0E00               	movlw	0
  8707   00163E  6FDD               	movwf	(?_powf+3)& (0+255),b
  8708   001640  EF80  F019         	goto	l1377
  8709   001644                     l7196:
  8710                           
  8711                           ; BSR set to: 1
  8712   001644  C178  F002         	movff	powf@ax,___fladd@b
  8713   001648  C179  F003         	movff	powf@ax+1,___fladd@b+1
  8714   00164C  C17A  F004         	movff	powf@ax+2,___fladd@b+2
  8715   001650  C17B  F005         	movff	powf@ax+3,___fladd@b+3
  8716   001654  0E00               	movlw	0
  8717   001656  6E06               	movwf	___fladd@a^0,c
  8718   001658  0E00               	movlw	0
  8719   00165A  6E07               	movwf	(___fladd@a+1)^0,c
  8720   00165C  0E80               	movlw	128
  8721   00165E  6E08               	movwf	(___fladd@a+2)^0,c
  8722   001660  0EBF               	movlw	191
  8723   001662  6E09               	movwf	(___fladd@a+3)^0,c
  8724   001664  EC7A  F026         	call	___fladd	;wreg free
  8725   001668  C002  F1B0         	movff	?___fladd,powf@t
  8726   00166C  C003  F1B1         	movff	?___fladd+1,powf@t+1
  8727   001670  C004  F1B2         	movff	?___fladd+2,powf@t+2
  8728   001674  C005  F1B3         	movff	?___fladd+3,powf@t+3
  8729   001678  0E00               	movlw	0
  8730   00167A  6E16               	movwf	___flmul@a^0,c
  8731   00167C  0E00               	movlw	0
  8732   00167E  6E17               	movwf	(___flmul@a+1)^0,c
  8733   001680  0E80               	movlw	128
  8734   001682  6E18               	movwf	(___flmul@a+2)^0,c
  8735   001684  0E3E               	movlw	62
  8736   001686  6E19               	movwf	(___flmul@a+3)^0,c
  8737   001688  C1B0  F012         	movff	powf@t,___flmul@b
  8738   00168C  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8739   001690  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8740   001694  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8741   001698  ECDA  F028         	call	___flmul	;wreg free
  8742   00169C  C012  F048         	movff	?___flmul,___flsub@a
  8743   0016A0  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8744   0016A4  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8745   0016A8  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8746   0016AC  0EAB               	movlw	171
  8747   0016AE  6E44               	movwf	___flsub@b^0,c
  8748   0016B0  0EAA               	movlw	170
  8749   0016B2  6E45               	movwf	(___flsub@b+1)^0,c
  8750   0016B4  0EAA               	movlw	170
  8751   0016B6  6E46               	movwf	(___flsub@b+2)^0,c
  8752   0016B8  0E3E               	movlw	62
  8753   0016BA  6E47               	movwf	(___flsub@b+3)^0,c
  8754   0016BC  EC9A  F039         	call	___flsub	;wreg free
  8755   0016C0  C044  F148         	movff	?___flsub,_powf$3073
  8756   0016C4  C045  F149         	movff	?___flsub+1,_powf$3073+1
  8757   0016C8  C046  F14A         	movff	?___flsub+2,_powf$3073+2
  8758   0016CC  C047  F14B         	movff	?___flsub+3,_powf$3073+3
  8759   0016D0  C1B0  F016         	movff	powf@t,___flmul@a
  8760   0016D4  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  8761   0016D8  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  8762   0016DC  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  8763   0016E0  C1B0  F012         	movff	powf@t,___flmul@b
  8764   0016E4  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8765   0016E8  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8766   0016EC  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8767   0016F0  ECDA  F028         	call	___flmul	;wreg free
  8768   0016F4  C012  F15C         	movff	?___flmul,_powf$3074
  8769   0016F8  C013  F15D         	movff	?___flmul+1,_powf$3074+1
  8770   0016FC  C014  F15E         	movff	?___flmul+2,_powf$3074+2
  8771   001700  C015  F15F         	movff	?___flmul+3,_powf$3074+3
  8772   001704  C1B0  F016         	movff	powf@t,___flmul@a
  8773   001708  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  8774   00170C  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  8775   001710  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  8776   001714  C148  F012         	movff	_powf$3073,___flmul@b
  8777   001718  C149  F013         	movff	_powf$3073+1,___flmul@b+1
  8778   00171C  C14A  F014         	movff	_powf$3073+2,___flmul@b+2
  8779   001720  C14B  F015         	movff	_powf$3073+3,___flmul@b+3
  8780   001724  ECDA  F028         	call	___flmul	;wreg free
  8781   001728  C012  F048         	movff	?___flmul,___flsub@a
  8782   00172C  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8783   001730  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8784   001734  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8785   001738  0E00               	movlw	0
  8786   00173A  6E44               	movwf	___flsub@b^0,c
  8787   00173C  0E00               	movlw	0
  8788   00173E  6E45               	movwf	(___flsub@b+1)^0,c
  8789   001740  0E00               	movlw	0
  8790   001742  6E46               	movwf	(___flsub@b+2)^0,c
  8791   001744  0E3F               	movlw	63
  8792   001746  6E47               	movwf	(___flsub@b+3)^0,c
  8793   001748  EC9A  F039         	call	___flsub	;wreg free
  8794   00174C  C044  F14C         	movff	?___flsub,_powf$3075
  8795   001750  C045  F14D         	movff	?___flsub+1,_powf$3075+1
  8796   001754  C046  F14E         	movff	?___flsub+2,_powf$3075+2
  8797   001758  C047  F14F         	movff	?___flsub+3,_powf$3075+3
  8798   00175C  C15C  F012         	movff	_powf$3074,___flmul@b
  8799   001760  C15D  F013         	movff	_powf$3074+1,___flmul@b+1
  8800   001764  C15E  F014         	movff	_powf$3074+2,___flmul@b+2
  8801   001768  C15F  F015         	movff	_powf$3074+3,___flmul@b+3
  8802   00176C  C14C  F016         	movff	_powf$3075,___flmul@a
  8803   001770  C14D  F017         	movff	_powf$3075+1,___flmul@a+1
  8804   001774  C14E  F018         	movff	_powf$3075+2,___flmul@a+2
  8805   001778  C14F  F019         	movff	_powf$3075+3,___flmul@a+3
  8806   00177C  ECDA  F028         	call	___flmul	;wreg free
  8807   001780  C012  F144         	movff	?___flmul,powf@w
  8808   001784  C013  F145         	movff	?___flmul+1,powf@w+1
  8809   001788  C014  F146         	movff	?___flmul+2,powf@w+2
  8810   00178C  C015  F147         	movff	?___flmul+3,powf@w+3
  8811   001790  C1B0  F012         	movff	powf@t,___flmul@b
  8812   001794  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8813   001798  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8814   00179C  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8815   0017A0  0E00               	movlw	0
  8816   0017A2  6E16               	movwf	___flmul@a^0,c
  8817   0017A4  0EAA               	movlw	170
  8818   0017A6  6E17               	movwf	(___flmul@a+1)^0,c
  8819   0017A8  0EB8               	movlw	184
  8820   0017AA  6E18               	movwf	(___flmul@a+2)^0,c
  8821   0017AC  0E3F               	movlw	63
  8822   0017AE  6E19               	movwf	(___flmul@a+3)^0,c
  8823   0017B0  ECDA  F028         	call	___flmul	;wreg free
  8824   0017B4  C012  F17C         	movff	?___flmul,powf@u
  8825   0017B8  C013  F17D         	movff	?___flmul+1,powf@u+1
  8826   0017BC  C014  F17E         	movff	?___flmul+2,powf@u+2
  8827   0017C0  C015  F17F         	movff	?___flmul+3,powf@u+3
  8828   0017C4  0E70               	movlw	112
  8829   0017C6  6E16               	movwf	___flmul@a^0,c
  8830   0017C8  0EA5               	movlw	165
  8831   0017CA  6E17               	movwf	(___flmul@a+1)^0,c
  8832   0017CC  0EEC               	movlw	236
  8833   0017CE  6E18               	movwf	(___flmul@a+2)^0,c
  8834   0017D0  0E36               	movlw	54
  8835   0017D2  6E19               	movwf	(___flmul@a+3)^0,c
  8836   0017D4  C1B0  F012         	movff	powf@t,___flmul@b
  8837   0017D8  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8838   0017DC  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8839   0017E0  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8840   0017E4  ECDA  F028         	call	___flmul	;wreg free
  8841   0017E8  C012  F044         	movff	?___flmul,___flsub@b
  8842   0017EC  C013  F045         	movff	?___flmul+1,___flsub@b+1
  8843   0017F0  C014  F046         	movff	?___flmul+2,___flsub@b+2
  8844   0017F4  C015  F047         	movff	?___flmul+3,___flsub@b+3
  8845   0017F8  0E3B               	movlw	59
  8846   0017FA  6E16               	movwf	___flmul@a^0,c
  8847   0017FC  0EAA               	movlw	170
  8848   0017FE  6E17               	movwf	(___flmul@a+1)^0,c
  8849   001800  0EB8               	movlw	184
  8850   001802  6E18               	movwf	(___flmul@a+2)^0,c
  8851   001804  0E3F               	movlw	63
  8852   001806  6E19               	movwf	(___flmul@a+3)^0,c
  8853   001808  C144  F012         	movff	powf@w,___flmul@b
  8854   00180C  C145  F013         	movff	powf@w+1,___flmul@b+1
  8855   001810  C146  F014         	movff	powf@w+2,___flmul@b+2
  8856   001814  C147  F015         	movff	powf@w+3,___flmul@b+3
  8857   001818  ECDA  F028         	call	___flmul	;wreg free
  8858   00181C  C012  F048         	movff	?___flmul,___flsub@a
  8859   001820  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8860   001824  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8861   001828  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8862   00182C  EC9A  F039         	call	___flsub	;wreg free
  8863   001830  C044  F180         	movff	?___flsub,powf@v
  8864   001834  C045  F181         	movff	?___flsub+1,powf@v+1
  8865   001838  C046  F182         	movff	?___flsub+2,powf@v+2
  8866   00183C  C047  F183         	movff	?___flsub+3,powf@v+3
  8867   001840  C17C  F002         	movff	powf@u,___fladd@b
  8868   001844  C17D  F003         	movff	powf@u+1,___fladd@b+1
  8869   001848  C17E  F004         	movff	powf@u+2,___fladd@b+2
  8870   00184C  C17F  F005         	movff	powf@u+3,___fladd@b+3
  8871   001850  C180  F006         	movff	powf@v,___fladd@a
  8872   001854  C181  F007         	movff	powf@v+1,___fladd@a+1
  8873   001858  C182  F008         	movff	powf@v+2,___fladd@a+2
  8874   00185C  C183  F009         	movff	powf@v+3,___fladd@a+3
  8875   001860  EC7A  F026         	call	___fladd	;wreg free
  8876   001864  C002  F18C         	movff	?___fladd,powf@t1
  8877   001868  C003  F18D         	movff	?___fladd+1,powf@t1+1
  8878   00186C  C004  F18E         	movff	?___fladd+2,powf@t1+2
  8879   001870  C005  F18F         	movff	?___fladd+3,powf@t1+3
  8880   001874  C18C  F198         	movff	powf@t1,powf@is
  8881   001878  C18D  F199         	movff	powf@t1+1,powf@is+1
  8882   00187C  C18E  F19A         	movff	powf@t1+2,powf@is+2
  8883   001880  C18F  F19B         	movff	powf@t1+3,powf@is+3
  8884   001884  0E00               	movlw	0
  8885   001886  0101               	movlb	1	; () banked
  8886   001888  1598               	andwf	powf@is& (0+255),w,b
  8887   00188A  6F8C               	movwf	powf@t1& (0+255),b
  8888   00188C  0EF0               	movlw	240
  8889   00188E  1599               	andwf	(powf@is+1)& (0+255),w,b
  8890   001890  6F8D               	movwf	(powf@t1+1)& (0+255),b
  8891   001892  0EFF               	movlw	255
  8892   001894  159A               	andwf	(powf@is+2)& (0+255),w,b
  8893   001896  6F8E               	movwf	(powf@t1+2)& (0+255),b
  8894   001898  0EFF               	movlw	255
  8895   00189A  159B               	andwf	(powf@is+3)& (0+255),w,b
  8896   00189C  6F8F               	movwf	(powf@t1+3)& (0+255),b
  8897   00189E                     
  8898                           ; BSR set to: 1
  8899   00189E  C17C  F048         	movff	powf@u,___flsub@a
  8900   0018A2  C17D  F049         	movff	powf@u+1,___flsub@a+1
  8901   0018A6  C17E  F04A         	movff	powf@u+2,___flsub@a+2
  8902   0018AA  C17F  F04B         	movff	powf@u+3,___flsub@a+3
  8903   0018AE  C18C  F044         	movff	powf@t1,___flsub@b
  8904   0018B2  C18D  F045         	movff	powf@t1+1,___flsub@b+1
  8905   0018B6  C18E  F046         	movff	powf@t1+2,___flsub@b+2
  8906   0018BA  C18F  F047         	movff	powf@t1+3,___flsub@b+3
  8907   0018BE  EC9A  F039         	call	___flsub	;wreg free
  8908   0018C2  C044  F19C         	movff	?___flsub,_powf$3076
  8909   0018C6  C045  F19D         	movff	?___flsub+1,_powf$3076+1
  8910   0018CA  C046  F19E         	movff	?___flsub+2,_powf$3076+2
  8911   0018CE  C047  F19F         	movff	?___flsub+3,_powf$3076+3
  8912   0018D2  C180  F044         	movff	powf@v,___flsub@b
  8913   0018D6  C181  F045         	movff	powf@v+1,___flsub@b+1
  8914   0018DA  C182  F046         	movff	powf@v+2,___flsub@b+2
  8915   0018DE  C183  F047         	movff	powf@v+3,___flsub@b+3
  8916   0018E2  C19C  F048         	movff	_powf$3076,___flsub@a
  8917   0018E6  C19D  F049         	movff	_powf$3076+1,___flsub@a+1
  8918   0018EA  C19E  F04A         	movff	_powf$3076+2,___flsub@a+2
  8919   0018EE  C19F  F04B         	movff	_powf$3076+3,___flsub@a+3
  8920   0018F2  EC9A  F039         	call	___flsub	;wreg free
  8921   0018F6  C044  F11C         	movff	?___flsub,powf@t2
  8922   0018FA  C045  F11D         	movff	?___flsub+1,powf@t2+1
  8923   0018FE  C046  F11E         	movff	?___flsub+2,powf@t2+2
  8924   001902  C047  F11F         	movff	?___flsub+3,powf@t2+3
  8925   001906  EF79  F013         	goto	l7346
  8926   00190A                     l7218:
  8927                           
  8928                           ; BSR set to: 1
  8929   00190A  0E00               	movlw	0
  8930   00190C  6F88               	movwf	powf@n& (0+255),b
  8931   00190E  0E00               	movlw	0
  8932   001910  6F89               	movwf	(powf@n+1)& (0+255),b
  8933   001912  0E00               	movlw	0
  8934   001914  6F8A               	movwf	(powf@n+2)& (0+255),b
  8935   001916  0E00               	movlw	0
  8936   001918  6F8B               	movwf	(powf@n+3)& (0+255),b
  8937   00191A                     
  8938                           ; BSR set to: 1
  8939   00191A  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8940   00191C  EF9B  F00C         	goto	u7470
  8941   001920  51AF               	movf	(powf@ix+3)& (0+255),w,b
  8942   001922  E107               	bnz	u7471
  8943   001924  0E80               	movlw	128
  8944   001926  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
  8945   001928  B0D8               	btfsc	status,0,c
  8946   00192A  EF99  F00C         	goto	u7471
  8947   00192E  EF9B  F00C         	goto	u7470
  8948   001932                     u7471:
  8949   001932  EFC6  F00C         	goto	l7228
  8950   001936                     u7470:
  8951   001936                     
  8952                           ; BSR set to: 1
  8953   001936  C178  F012         	movff	powf@ax,___flmul@b
  8954   00193A  C179  F013         	movff	powf@ax+1,___flmul@b+1
  8955   00193E  C17A  F014         	movff	powf@ax+2,___flmul@b+2
  8956   001942  C17B  F015         	movff	powf@ax+3,___flmul@b+3
  8957   001946  0E00               	movlw	0
  8958   001948  6E16               	movwf	___flmul@a^0,c
  8959   00194A  0E00               	movlw	0
  8960   00194C  6E17               	movwf	(___flmul@a+1)^0,c
  8961   00194E  0E80               	movlw	128
  8962   001950  6E18               	movwf	(___flmul@a+2)^0,c
  8963   001952  0E4B               	movlw	75
  8964   001954  6E19               	movwf	(___flmul@a+3)^0,c
  8965   001956  ECDA  F028         	call	___flmul	;wreg free
  8966   00195A  C012  F178         	movff	?___flmul,powf@ax
  8967   00195E  C013  F179         	movff	?___flmul+1,powf@ax+1
  8968   001962  C014  F17A         	movff	?___flmul+2,powf@ax+2
  8969   001966  C015  F17B         	movff	?___flmul+3,powf@ax+3
  8970   00196A  0EE8               	movlw	232
  8971   00196C  0101               	movlb	1	; () banked
  8972   00196E  2788               	addwf	powf@n& (0+255),f,b
  8973   001970  0EFF               	movlw	255
  8974   001972  2389               	addwfc	(powf@n+1)& (0+255),f,b
  8975   001974  0EFF               	movlw	255
  8976   001976  238A               	addwfc	(powf@n+2)& (0+255),f,b
  8977   001978  0EFF               	movlw	255
  8978   00197A  238B               	addwfc	(powf@n+3)& (0+255),f,b
  8979   00197C                     
  8980                           ; BSR set to: 1
  8981   00197C  C178  F1AC         	movff	powf@ax,powf@ix
  8982   001980  C179  F1AD         	movff	powf@ax+1,powf@ix+1
  8983   001984  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
  8984   001988  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
  8985   00198C                     l7228:
  8986                           
  8987                           ; BSR set to: 1
  8988   00198C  0E17               	movlw	23
  8989   00198E  0100               	movlb	0	; () banked
  8990   001990  6FE2               	movwf	??_powf& (0+255),b
  8991   001992  C1AC  F0E3         	movff	powf@ix,??_powf+1
  8992   001996  C1AD  F0E4         	movff	powf@ix+1,??_powf+2
  8993   00199A  C1AE  F0E5         	movff	powf@ix+2,??_powf+3
  8994   00199E  C1AF  F0E6         	movff	powf@ix+3,??_powf+4
  8995   0019A2                     u7485:
  8996   0019A2  67E2               	tstfsz	??_powf& (0+255),b
  8997   0019A4  EFD6  F00C         	goto	u7486
  8998   0019A8  EFDE  F00C         	goto	u7487
  8999   0019AC                     u7486:
  9000   0019AC  35E6               	rlcf	(??_powf+4)& (0+255),w,b
  9001   0019AE  33E6               	rrcf	(??_powf+4)& (0+255),f,b
  9002   0019B0  33E5               	rrcf	(??_powf+3)& (0+255),f,b
  9003   0019B2  33E4               	rrcf	(??_powf+2)& (0+255),f,b
  9004   0019B4  33E3               	rrcf	(??_powf+1)& (0+255),f,b
  9005   0019B6  2FE2               	decfsz	??_powf& (0+255),f,b
  9006   0019B8  EFD1  F00C         	goto	u7485
  9007   0019BC                     u7487:
  9008   0019BC  0E81               	movlw	129
  9009   0019BE  0100               	movlb	0	; () banked
  9010   0019C0  25E3               	addwf	(??_powf+1)& (0+255),w,b
  9011   0019C2  6FE7               	movwf	(??_powf+5)& (0+255),b
  9012   0019C4  0EFF               	movlw	255
  9013   0019C6  21E4               	addwfc	(??_powf+2)& (0+255),w,b
  9014   0019C8  6FE8               	movwf	(??_powf+6)& (0+255),b
  9015   0019CA  0EFF               	movlw	255
  9016   0019CC  21E5               	addwfc	(??_powf+3)& (0+255),w,b
  9017   0019CE  6FE9               	movwf	(??_powf+7)& (0+255),b
  9018   0019D0  0EFF               	movlw	255
  9019   0019D2  21E6               	addwfc	(??_powf+4)& (0+255),w,b
  9020   0019D4  6FEA               	movwf	(??_powf+8)& (0+255),b
  9021   0019D6  51E7               	movf	(??_powf+5)& (0+255),w,b
  9022   0019D8  0101               	movlb	1	; () banked
  9023   0019DA  2788               	addwf	powf@n& (0+255),f,b
  9024   0019DC  0100               	movlb	0	; () banked
  9025   0019DE  51E8               	movf	(??_powf+6)& (0+255),w,b
  9026   0019E0  0101               	movlb	1	; () banked
  9027   0019E2  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9028   0019E4  0100               	movlb	0	; () banked
  9029   0019E6  51E9               	movf	(??_powf+7)& (0+255),w,b
  9030   0019E8  0101               	movlb	1	; () banked
  9031   0019EA  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9032   0019EC  0100               	movlb	0	; () banked
  9033   0019EE  51EA               	movf	(??_powf+8)& (0+255),w,b
  9034   0019F0  0101               	movlb	1	; () banked
  9035   0019F2  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9036   0019F4                     
  9037                           ; BSR set to: 1
  9038   0019F4  0EFF               	movlw	255
  9039   0019F6  15AC               	andwf	powf@ix& (0+255),w,b
  9040   0019F8  6FA8               	movwf	powf@j& (0+255),b
  9041   0019FA  0EFF               	movlw	255
  9042   0019FC  15AD               	andwf	(powf@ix+1)& (0+255),w,b
  9043   0019FE  6FA9               	movwf	(powf@j+1)& (0+255),b
  9044   001A00  0E7F               	movlw	127
  9045   001A02  15AE               	andwf	(powf@ix+2)& (0+255),w,b
  9046   001A04  6FAA               	movwf	(powf@j+2)& (0+255),b
  9047   001A06  0E00               	movlw	0
  9048   001A08  15AF               	andwf	(powf@ix+3)& (0+255),w,b
  9049   001A0A  6FAB               	movwf	(powf@j+3)& (0+255),b
  9050   001A0C                     
  9051                           ; BSR set to: 1
  9052   001A0C  0E00               	movlw	0
  9053   001A0E  6FA4               	movwf	powf@k& (0+255),b
  9054   001A10  0E00               	movlw	0
  9055   001A12  6FA5               	movwf	(powf@k+1)& (0+255),b
  9056   001A14  0E00               	movlw	0
  9057   001A16  6FA6               	movwf	(powf@k+2)& (0+255),b
  9058   001A18  0E00               	movlw	0
  9059   001A1A  6FA7               	movwf	(powf@k+3)& (0+255),b
  9060   001A1C                     
  9061                           ; BSR set to: 1
  9062   001A1C  0E00               	movlw	0
  9063   001A1E  11A8               	iorwf	powf@j& (0+255),w,b
  9064   001A20  6FAC               	movwf	powf@ix& (0+255),b
  9065   001A22  0E00               	movlw	0
  9066   001A24  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  9067   001A26  6FAD               	movwf	(powf@ix+1)& (0+255),b
  9068   001A28  0E80               	movlw	128
  9069   001A2A  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  9070   001A2C  6FAE               	movwf	(powf@ix+2)& (0+255),b
  9071   001A2E  0E3F               	movlw	63
  9072   001A30  11AB               	iorwf	(powf@j+3)& (0+255),w,b
  9073   001A32  6FAF               	movwf	(powf@ix+3)& (0+255),b
  9074   001A34                     
  9075                           ; BSR set to: 1
  9076   001A34  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  9077   001A36  EF2C  F00D         	goto	u7490
  9078   001A3A  51AB               	movf	(powf@j+3)& (0+255),w,b
  9079   001A3C  E10B               	bnz	u7491
  9080   001A3E  0E72               	movlw	114
  9081   001A40  5DA8               	subwf	powf@j& (0+255),w,b
  9082   001A42  0EC4               	movlw	196
  9083   001A44  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  9084   001A46  0E1C               	movlw	28
  9085   001A48  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  9086   001A4A  B0D8               	btfsc	status,0,c
  9087   001A4C  EF2A  F00D         	goto	u7491
  9088   001A50  EF2C  F00D         	goto	u7490
  9089   001A54                     u7491:
  9090   001A54  EF2E  F00D         	goto	l7240
  9091   001A58                     u7490:
  9092   001A58  EF58  F00D         	goto	l7246
  9093   001A5C                     l7240:
  9094                           
  9095                           ; BSR set to: 1
  9096   001A5C  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  9097   001A5E  EF40  F00D         	goto	u7500
  9098   001A62  51AB               	movf	(powf@j+3)& (0+255),w,b
  9099   001A64  E10B               	bnz	u7501
  9100   001A66  0ED7               	movlw	215
  9101   001A68  5DA8               	subwf	powf@j& (0+255),w,b
  9102   001A6A  0EB3               	movlw	179
  9103   001A6C  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  9104   001A6E  0E5D               	movlw	93
  9105   001A70  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  9106   001A72  B0D8               	btfsc	status,0,c
  9107   001A74  EF3E  F00D         	goto	u7501
  9108   001A78  EF40  F00D         	goto	u7500
  9109   001A7C                     u7501:
  9110   001A7C  EF4A  F00D         	goto	l7244
  9111   001A80                     u7500:
  9112   001A80                     
  9113                           ; BSR set to: 1
  9114   001A80  0E01               	movlw	1
  9115   001A82  6FA4               	movwf	powf@k& (0+255),b
  9116   001A84  0E00               	movlw	0
  9117   001A86  6FA5               	movwf	(powf@k+1)& (0+255),b
  9118   001A88  0E00               	movlw	0
  9119   001A8A  6FA6               	movwf	(powf@k+2)& (0+255),b
  9120   001A8C  0E00               	movlw	0
  9121   001A8E  6FA7               	movwf	(powf@k+3)& (0+255),b
  9122   001A90  EF58  F00D         	goto	l7246
  9123   001A94                     l7244:
  9124                           
  9125                           ; BSR set to: 1
  9126   001A94  0E01               	movlw	1
  9127   001A96  2788               	addwf	powf@n& (0+255),f,b
  9128   001A98  0E00               	movlw	0
  9129   001A9A  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9130   001A9C  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9131   001A9E  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9132   001AA0  0E00               	movlw	0
  9133   001AA2  27AC               	addwf	powf@ix& (0+255),f,b
  9134   001AA4  0E00               	movlw	0
  9135   001AA6  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
  9136   001AA8  0E80               	movlw	128
  9137   001AAA  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
  9138   001AAC  0EFF               	movlw	255
  9139   001AAE  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
  9140   001AB0                     l7246:
  9141                           
  9142                           ; BSR set to: 1
  9143   001AB0  C1AC  F178         	movff	powf@ix,powf@ax
  9144   001AB4  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  9145   001AB8  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  9146   001ABC  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  9147   001AC0                     
  9148                           ; BSR set to: 1
  9149   001AC0  C178  F044         	movff	powf@ax,___flsub@b
  9150   001AC4  C179  F045         	movff	powf@ax+1,___flsub@b+1
  9151   001AC8  C17A  F046         	movff	powf@ax+2,___flsub@b+2
  9152   001ACC  C17B  F047         	movff	powf@ax+3,___flsub@b+3
  9153   001AD0  51A4               	movf	powf@k& (0+255),w,b
  9154   001AD2  0D04               	mullw	4
  9155   001AD4  50F3               	movf	243,w,c
  9156   001AD6  0F11               	addlw	low _bp
  9157   001AD8  0100               	movlb	0	; () banked
  9158   001ADA  6FE2               	movwf	??_powf& (0+255),b
  9159   001ADC  C0E2  FFF6         	movff	??_powf,tblptrl
  9160   001AE0                     	if	1	;There is more than 1 active tblptr byte
  9161   001AE0  0E0E               	movlw	high __smallconst
  9162   001AE2  6EF7               	movwf	tblptrh,c
  9163   001AE4                     	endif
  9164   001AE4                     	if	0	;tblptru may be non-zero
  9165   001AE4                     	endif
  9166   001AE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9167   001AE4  0E00               	movlw	low (__smallconst shr (0+16))
  9168   001AE6  6EF8               	movwf	tblptru,c
  9169   001AE8                     	endif
  9170   001AE8  0009               	tblrd		*+
  9171   001AEA  CFF5 F048          	movff	tablat,___flsub@a
  9172   001AEE  0009               	tblrd		*+
  9173   001AF0  CFF5 F049          	movff	tablat,___flsub@a+1
  9174   001AF4  0009               	tblrd		*+
  9175   001AF6  CFF5 F04A          	movff	tablat,___flsub@a+2
  9176   001AFA  000A               	tblrd		*-
  9177   001AFC  CFF5 F04B          	movff	tablat,___flsub@a+3
  9178   001B00  EC9A  F039         	call	___flsub	;wreg free
  9179   001B04  C044  F17C         	movff	?___flsub,powf@u
  9180   001B08  C045  F17D         	movff	?___flsub+1,powf@u+1
  9181   001B0C  C046  F17E         	movff	?___flsub+2,powf@u+2
  9182   001B10  C047  F17F         	movff	?___flsub+3,powf@u+3
  9183   001B14  0E00               	movlw	0
  9184   001B16  6E2B               	movwf	___fldiv@b^0,c
  9185   001B18  0E00               	movlw	0
  9186   001B1A  6E2C               	movwf	(___fldiv@b+1)^0,c
  9187   001B1C  0E80               	movlw	128
  9188   001B1E  6E2D               	movwf	(___fldiv@b+2)^0,c
  9189   001B20  0E3F               	movlw	63
  9190   001B22  6E2E               	movwf	(___fldiv@b+3)^0,c
  9191   001B24  C178  F006         	movff	powf@ax,___fladd@a
  9192   001B28  C179  F007         	movff	powf@ax+1,___fladd@a+1
  9193   001B2C  C17A  F008         	movff	powf@ax+2,___fladd@a+2
  9194   001B30  C17B  F009         	movff	powf@ax+3,___fladd@a+3
  9195   001B34  0101               	movlb	1	; () banked
  9196   001B36  51A4               	movf	powf@k& (0+255),w,b
  9197   001B38  0D04               	mullw	4
  9198   001B3A  50F3               	movf	243,w,c
  9199   001B3C  0F11               	addlw	low _bp
  9200   001B3E  0100               	movlb	0	; () banked
  9201   001B40  6FE2               	movwf	??_powf& (0+255),b
  9202   001B42  C0E2  FFF6         	movff	??_powf,tblptrl
  9203   001B46                     	if	1	;There is more than 1 active tblptr byte
  9204   001B46  0E0E               	movlw	high __smallconst
  9205   001B48  6EF7               	movwf	tblptrh,c
  9206   001B4A                     	endif
  9207   001B4A                     	if	0	;tblptru may be non-zero
  9208   001B4A                     	endif
  9209   001B4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9210   001B4A  0E00               	movlw	low (__smallconst shr (0+16))
  9211   001B4C  6EF8               	movwf	tblptru,c
  9212   001B4E                     	endif
  9213   001B4E  0009               	tblrd		*+
  9214   001B50  CFF5 F002          	movff	tablat,___fladd@b
  9215   001B54  0009               	tblrd		*+
  9216   001B56  CFF5 F003          	movff	tablat,___fladd@b+1
  9217   001B5A  0009               	tblrd		*+
  9218   001B5C  CFF5 F004          	movff	tablat,___fladd@b+2
  9219   001B60  000A               	tblrd		*-
  9220   001B62  CFF5 F005          	movff	tablat,___fladd@b+3
  9221   001B66  EC7A  F026         	call	___fladd	;wreg free
  9222   001B6A  C002  F02F         	movff	?___fladd,___fldiv@a
  9223   001B6E  C003  F030         	movff	?___fladd+1,___fldiv@a+1
  9224   001B72  C004  F031         	movff	?___fladd+2,___fldiv@a+2
  9225   001B76  C005  F032         	movff	?___fladd+3,___fldiv@a+3
  9226   001B7A  ECDE  F02C         	call	___fldiv	;wreg free
  9227   001B7E  C02B  F180         	movff	?___fldiv,powf@v
  9228   001B82  C02C  F181         	movff	?___fldiv+1,powf@v+1
  9229   001B86  C02D  F182         	movff	?___fldiv+2,powf@v+2
  9230   001B8A  C02E  F183         	movff	?___fldiv+3,powf@v+3
  9231   001B8E  C17C  F012         	movff	powf@u,___flmul@b
  9232   001B92  C17D  F013         	movff	powf@u+1,___flmul@b+1
  9233   001B96  C17E  F014         	movff	powf@u+2,___flmul@b+2
  9234   001B9A  C17F  F015         	movff	powf@u+3,___flmul@b+3
  9235   001B9E  C180  F016         	movff	powf@v,___flmul@a
  9236   001BA2  C181  F017         	movff	powf@v+1,___flmul@a+1
  9237   001BA6  C182  F018         	movff	powf@v+2,___flmul@a+2
  9238   001BAA  C183  F019         	movff	powf@v+3,___flmul@a+3
  9239   001BAE  ECDA  F028         	call	___flmul	;wreg free
  9240   001BB2  C012  F158         	movff	?___flmul,powf@s
  9241   001BB6  C013  F159         	movff	?___flmul+1,powf@s+1
  9242   001BBA  C014  F15A         	movff	?___flmul+2,powf@s+2
  9243   001BBE  C015  F15B         	movff	?___flmul+3,powf@s+3
  9244   001BC2  C158  F174         	movff	powf@s,powf@s_h
  9245   001BC6  C159  F175         	movff	powf@s+1,powf@s_h+1
  9246   001BCA  C15A  F176         	movff	powf@s+2,powf@s_h+2
  9247   001BCE  C15B  F177         	movff	powf@s+3,powf@s_h+3
  9248   001BD2  C174  F198         	movff	powf@s_h,powf@is
  9249   001BD6  C175  F199         	movff	powf@s_h+1,powf@is+1
  9250   001BDA  C176  F19A         	movff	powf@s_h+2,powf@is+2
  9251   001BDE  C177  F19B         	movff	powf@s_h+3,powf@is+3
  9252   001BE2  0E00               	movlw	0
  9253   001BE4  0101               	movlb	1	; () banked
  9254   001BE6  1598               	andwf	powf@is& (0+255),w,b
  9255   001BE8  6F74               	movwf	powf@s_h& (0+255),b
  9256   001BEA  0EF0               	movlw	240
  9257   001BEC  1599               	andwf	(powf@is+1)& (0+255),w,b
  9258   001BEE  6F75               	movwf	(powf@s_h+1)& (0+255),b
  9259   001BF0  0EFF               	movlw	255
  9260   001BF2  159A               	andwf	(powf@is+2)& (0+255),w,b
  9261   001BF4  6F76               	movwf	(powf@s_h+2)& (0+255),b
  9262   001BF6  0EFF               	movlw	255
  9263   001BF8  159B               	andwf	(powf@is+3)& (0+255),w,b
  9264   001BFA  6F77               	movwf	(powf@s_h+3)& (0+255),b
  9265   001BFC                     
  9266                           ; BSR set to: 1
  9267   001BFC  C1AC  F0E2         	movff	powf@ix,??_powf
  9268   001C00  C1AD  F0E3         	movff	powf@ix+1,??_powf+1
  9269   001C04  C1AE  F0E4         	movff	powf@ix+2,??_powf+2
  9270   001C08  C1AF  F0E5         	movff	powf@ix+3,??_powf+3
  9271   001C0C  0100               	movlb	0	; () banked
  9272   001C0E  35E5               	rlcf	(??_powf+3)& (0+255),w,b
  9273   001C10  33E5               	rrcf	(??_powf+3)& (0+255),f,b
  9274   001C12  33E4               	rrcf	(??_powf+2)& (0+255),f,b
  9275   001C14  33E3               	rrcf	(??_powf+1)& (0+255),f,b
  9276   001C16  33E2               	rrcf	??_powf& (0+255),f,b
  9277   001C18  0E00               	movlw	0
  9278   001C1A  15E2               	andwf	??_powf& (0+255),w,b
  9279   001C1C  6FE6               	movwf	(??_powf+4)& (0+255),b
  9280   001C1E  0EF0               	movlw	240
  9281   001C20  15E3               	andwf	(??_powf+1)& (0+255),w,b
  9282   001C22  6FE7               	movwf	(??_powf+5)& (0+255),b
  9283   001C24  0EFF               	movlw	255
  9284   001C26  15E4               	andwf	(??_powf+2)& (0+255),w,b
  9285   001C28  6FE8               	movwf	(??_powf+6)& (0+255),b
  9286   001C2A  0EFF               	movlw	255
  9287   001C2C  15E5               	andwf	(??_powf+3)& (0+255),w,b
  9288   001C2E  6FE9               	movwf	(??_powf+7)& (0+255),b
  9289   001C30  0E00               	movlw	0
  9290   001C32  11E6               	iorwf	(??_powf+4)& (0+255),w,b
  9291   001C34  0101               	movlb	1	; () banked
  9292   001C36  6F98               	movwf	powf@is& (0+255),b
  9293   001C38  0E00               	movlw	0
  9294   001C3A  0100               	movlb	0	; () banked
  9295   001C3C  11E7               	iorwf	(??_powf+5)& (0+255),w,b
  9296   001C3E  0101               	movlb	1	; () banked
  9297   001C40  6F99               	movwf	(powf@is+1)& (0+255),b
  9298   001C42  0E00               	movlw	0
  9299   001C44  0100               	movlb	0	; () banked
  9300   001C46  11E8               	iorwf	(??_powf+6)& (0+255),w,b
  9301   001C48  0101               	movlb	1	; () banked
  9302   001C4A  6F9A               	movwf	(powf@is+2)& (0+255),b
  9303   001C4C  0E20               	movlw	32
  9304   001C4E  0100               	movlb	0	; () banked
  9305   001C50  11E9               	iorwf	(??_powf+7)& (0+255),w,b
  9306   001C52  0101               	movlb	1	; () banked
  9307   001C54  6F9B               	movwf	(powf@is+3)& (0+255),b
  9308   001C56                     
  9309                           ; BSR set to: 1
  9310   001C56  C1A4  F0E2         	movff	powf@k,??_powf
  9311   001C5A  C1A5  F0E3         	movff	powf@k+1,??_powf+1
  9312   001C5E  C1A6  F0E4         	movff	powf@k+2,??_powf+2
  9313   001C62  C1A7  F0E5         	movff	powf@k+3,??_powf+3
  9314   001C66  0E15               	movlw	21
  9315   001C68                     u7515:
  9316   001C68  90D8               	bcf	status,0,c
  9317   001C6A  0100               	movlb	0	; () banked
  9318   001C6C  37E2               	rlcf	??_powf& (0+255),f,b
  9319   001C6E  37E3               	rlcf	(??_powf+1)& (0+255),f,b
  9320   001C70  37E4               	rlcf	(??_powf+2)& (0+255),f,b
  9321   001C72  37E5               	rlcf	(??_powf+3)& (0+255),f,b
  9322   001C74  2EE8               	decfsz	wreg,f,c
  9323   001C76  EF34  F00E         	goto	u7515
  9324   001C7A  0101               	movlb	1	; () banked
  9325   001C7C  5198               	movf	powf@is& (0+255),w,b
  9326   001C7E  0100               	movlb	0	; () banked
  9327   001C80  25E2               	addwf	??_powf& (0+255),w,b
  9328   001C82  6FE6               	movwf	(??_powf+4)& (0+255),b
  9329   001C84  0101               	movlb	1	; () banked
  9330   001C86  5199               	movf	(powf@is+1)& (0+255),w,b
  9331   001C88  0100               	movlb	0	; () banked
  9332   001C8A  21E3               	addwfc	(??_powf+1)& (0+255),w,b
  9333   001C8C  6FE7               	movwf	(??_powf+5)& (0+255),b
  9334   001C8E  0101               	movlb	1	; () banked
  9335   001C90  519A               	movf	(powf@is+2)& (0+255),w,b
  9336   001C92  0100               	movlb	0	; () banked
  9337   001C94  21E4               	addwfc	(??_powf+2)& (0+255),w,b
  9338   001C96  6FE8               	movwf	(??_powf+6)& (0+255),b
  9339   001C98  0101               	movlb	1	; () banked
  9340   001C9A  519B               	movf	(powf@is+3)& (0+255),w,b
  9341   001C9C  0100               	movlb	0	; () banked
  9342   001C9E  21E5               	addwfc	(??_powf+3)& (0+255),w,b
  9343   001CA0  6FE9               	movwf	(??_powf+7)& (0+255),b
  9344   001CA2  0E00               	movlw	0
  9345   001CA4  25E6               	addwf	(??_powf+4)& (0+255),w,b
  9346   001CA6  0101               	movlb	1	; () banked
  9347   001CA8  6F70               	movwf	powf@t_h& (0+255),b
  9348   001CAA  0E00               	movlw	0
  9349   001CAC  0100               	movlb	0	; () banked
  9350   001CAE  21E7               	addwfc	(??_powf+5)& (0+255),w,b
  9351   001CB0  0101               	movlb	1	; () banked
  9352   001CB2  6F71               	movwf	(powf@t_h+1)& (0+255),b
  9353   001CB4  0E40               	movlw	64
  9354   001CB6  0100               	movlb	0	; () banked
  9355   001CB8  21E8               	addwfc	(??_powf+6)& (0+255),w,b
  9356   001CBA  0101               	movlb	1	; () banked
  9357   001CBC  6F72               	movwf	(powf@t_h+2)& (0+255),b
  9358   001CBE  0E00               	movlw	0
  9359   001CC0  0100               	movlb	0	; () banked
  9360   001CC2  21E9               	addwfc	(??_powf+7)& (0+255),w,b
  9361   001CC4  0101               	movlb	1	; () banked
  9362   001CC6  6F73               	movwf	(powf@t_h+3)& (0+255),b
  9363   001CC8                     
  9364                           ; BSR set to: 1
  9365   001CC8  51A4               	movf	powf@k& (0+255),w,b
  9366   001CCA  0D04               	mullw	4
  9367   001CCC  50F3               	movf	243,w,c
  9368   001CCE  0F11               	addlw	low _bp
  9369   001CD0  0100               	movlb	0	; () banked
  9370   001CD2  6FE2               	movwf	??_powf& (0+255),b
  9371   001CD4  C0E2  FFF6         	movff	??_powf,tblptrl
  9372   001CD8                     	if	1	;There is more than 1 active tblptr byte
  9373   001CD8  0E0E               	movlw	high __smallconst
  9374   001CDA  6EF7               	movwf	tblptrh,c
  9375   001CDC                     	endif
  9376   001CDC                     	if	0	;tblptru may be non-zero
  9377   001CDC                     	endif
  9378   001CDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9379   001CDC  0E00               	movlw	low (__smallconst shr (0+16))
  9380   001CDE  6EF8               	movwf	tblptru,c
  9381   001CE0                     	endif
  9382   001CE0  0009               	tblrd		*+
  9383   001CE2  CFF5 F048          	movff	tablat,___flsub@a
  9384   001CE6  0009               	tblrd		*+
  9385   001CE8  CFF5 F049          	movff	tablat,___flsub@a+1
  9386   001CEC  0009               	tblrd		*+
  9387   001CEE  CFF5 F04A          	movff	tablat,___flsub@a+2
  9388   001CF2  000A               	tblrd		*-
  9389   001CF4  CFF5 F04B          	movff	tablat,___flsub@a+3
  9390   001CF8  C170  F044         	movff	powf@t_h,___flsub@b
  9391   001CFC  C171  F045         	movff	powf@t_h+1,___flsub@b+1
  9392   001D00  C172  F046         	movff	powf@t_h+2,___flsub@b+2
  9393   001D04  C173  F047         	movff	powf@t_h+3,___flsub@b+3
  9394   001D08  EC9A  F039         	call	___flsub	;wreg free
  9395   001D0C  C044  F19C         	movff	?___flsub,_powf$3076
  9396   001D10  C045  F19D         	movff	?___flsub+1,_powf$3076+1
  9397   001D14  C046  F19E         	movff	?___flsub+2,_powf$3076+2
  9398   001D18  C047  F19F         	movff	?___flsub+3,_powf$3076+3
  9399   001D1C  C178  F044         	movff	powf@ax,___flsub@b
  9400   001D20  C179  F045         	movff	powf@ax+1,___flsub@b+1
  9401   001D24  C17A  F046         	movff	powf@ax+2,___flsub@b+2
  9402   001D28  C17B  F047         	movff	powf@ax+3,___flsub@b+3
  9403   001D2C  C19C  F048         	movff	_powf$3076,___flsub@a
  9404   001D30  C19D  F049         	movff	_powf$3076+1,___flsub@a+1
  9405   001D34  C19E  F04A         	movff	_powf$3076+2,___flsub@a+2
  9406   001D38  C19F  F04B         	movff	_powf$3076+3,___flsub@a+3
  9407   001D3C  EC9A  F039         	call	___flsub	;wreg free
  9408   001D40  C044  F134         	movff	?___flsub,powf@t_l
  9409   001D44  C045  F135         	movff	?___flsub+1,powf@t_l+1
  9410   001D48  C046  F136         	movff	?___flsub+2,powf@t_l+2
  9411   001D4C  C047  F137         	movff	?___flsub+3,powf@t_l+3
  9412   001D50  C170  F016         	movff	powf@t_h,___flmul@a
  9413   001D54  C171  F017         	movff	powf@t_h+1,___flmul@a+1
  9414   001D58  C172  F018         	movff	powf@t_h+2,___flmul@a+2
  9415   001D5C  C173  F019         	movff	powf@t_h+3,___flmul@a+3
  9416   001D60  C174  F012         	movff	powf@s_h,___flmul@b
  9417   001D64  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9418   001D68  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9419   001D6C  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9420   001D70  ECDA  F028         	call	___flmul	;wreg free
  9421   001D74  C012  F048         	movff	?___flmul,___flsub@a
  9422   001D78  C013  F049         	movff	?___flmul+1,___flsub@a+1
  9423   001D7C  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  9424   001D80  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  9425   001D84  C17C  F044         	movff	powf@u,___flsub@b
  9426   001D88  C17D  F045         	movff	powf@u+1,___flsub@b+1
  9427   001D8C  C17E  F046         	movff	powf@u+2,___flsub@b+2
  9428   001D90  C17F  F047         	movff	powf@u+3,___flsub@b+3
  9429   001D94  EC9A  F039         	call	___flsub	;wreg free
  9430   001D98  C044  F19C         	movff	?___flsub,_powf$3076
  9431   001D9C  C045  F19D         	movff	?___flsub+1,_powf$3076+1
  9432   001DA0  C046  F19E         	movff	?___flsub+2,_powf$3076+2
  9433   001DA4  C047  F19F         	movff	?___flsub+3,_powf$3076+3
  9434   001DA8  C134  F016         	movff	powf@t_l,___flmul@a
  9435   001DAC  C135  F017         	movff	powf@t_l+1,___flmul@a+1
  9436   001DB0  C136  F018         	movff	powf@t_l+2,___flmul@a+2
  9437   001DB4  C137  F019         	movff	powf@t_l+3,___flmul@a+3
  9438   001DB8  C174  F012         	movff	powf@s_h,___flmul@b
  9439   001DBC  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9440   001DC0  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9441   001DC4  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9442   001DC8  ECDA  F028         	call	___flmul	;wreg free
  9443   001DCC  C012  F048         	movff	?___flmul,___flsub@a
  9444   001DD0  C013  F049         	movff	?___flmul+1,___flsub@a+1
  9445   001DD4  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  9446   001DD8  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  9447   001DDC  C19C  F044         	movff	_powf$3076,___flsub@b
  9448   001DE0  C19D  F045         	movff	_powf$3076+1,___flsub@b+1
  9449   001DE4  C19E  F046         	movff	_powf$3076+2,___flsub@b+2
  9450   001DE8  C19F  F047         	movff	_powf$3076+3,___flsub@b+3
  9451   001DEC  EC9A  F039         	call	___flsub	;wreg free
  9452   001DF0  C044  F15C         	movff	?___flsub,_powf$3074
  9453   001DF4  C045  F15D         	movff	?___flsub+1,_powf$3074+1
  9454   001DF8  C046  F15E         	movff	?___flsub+2,_powf$3074+2
  9455   001DFC  C047  F15F         	movff	?___flsub+3,_powf$3074+3
  9456   001E00  C15C  F012         	movff	_powf$3074,___flmul@b
  9457   001E04  C15D  F013         	movff	_powf$3074+1,___flmul@b+1
  9458   001E08  C15E  F014         	movff	_powf$3074+2,___flmul@b+2
  9459   001E0C  C15F  F015         	movff	_powf$3074+3,___flmul@b+3
  9460   001E10  C180  F016         	movff	powf@v,___flmul@a
  9461   001E14  C181  F017         	movff	powf@v+1,___flmul@a+1
  9462   001E18  C182  F018         	movff	powf@v+2,___flmul@a+2
  9463   001E1C  C183  F019         	movff	powf@v+3,___flmul@a+3
  9464   001E20  ECDA  F028         	call	___flmul	;wreg free
  9465   001E24  C012  F130         	movff	?___flmul,powf@s_l
  9466   001E28  C013  F131         	movff	?___flmul+1,powf@s_l+1
  9467   001E2C  C014  F132         	movff	?___flmul+2,powf@s_l+2
  9468   001E30  C015  F133         	movff	?___flmul+3,powf@s_l+3
  9469   001E34  C158  F012         	movff	powf@s,___flmul@b
  9470   001E38  C159  F013         	movff	powf@s+1,___flmul@b+1
  9471   001E3C  C15A  F014         	movff	powf@s+2,___flmul@b+2
  9472   001E40  C15B  F015         	movff	powf@s+3,___flmul@b+3
  9473   001E44  C158  F016         	movff	powf@s,___flmul@a
  9474   001E48  C159  F017         	movff	powf@s+1,___flmul@a+1
  9475   001E4C  C15A  F018         	movff	powf@s+2,___flmul@a+2
  9476   001E50  C15B  F019         	movff	powf@s+3,___flmul@a+3
  9477   001E54  ECDA  F028         	call	___flmul	;wreg free
  9478   001E58  C012  F190         	movff	?___flmul,powf@s2
  9479   001E5C  C013  F191         	movff	?___flmul+1,powf@s2+1
  9480   001E60  C014  F192         	movff	?___flmul+2,powf@s2+2
  9481   001E64  C015  F193         	movff	?___flmul+3,powf@s2+3
  9482   001E68  0E55               	movlw	85
  9483   001E6A  6E06               	movwf	___fladd@a^0,c
  9484   001E6C  0E32               	movlw	50
  9485   001E6E  6E07               	movwf	(___fladd@a+1)^0,c
  9486   001E70  0E6C               	movlw	108
  9487   001E72  6E08               	movwf	(___fladd@a+2)^0,c
  9488   001E74  0E3E               	movlw	62
  9489   001E76  6E09               	movwf	(___fladd@a+3)^0,c
  9490   001E78  0E42               	movlw	66
  9491   001E7A  6E16               	movwf	___flmul@a^0,c
  9492   001E7C  0EF1               	movlw	241
  9493   001E7E  6E17               	movwf	(___flmul@a+1)^0,c
  9494   001E80  0E53               	movlw	83
  9495   001E82  6E18               	movwf	(___flmul@a+2)^0,c
  9496   001E84  0E3E               	movlw	62
  9497   001E86  6E19               	movwf	(___flmul@a+3)^0,c
  9498   001E88  C190  F012         	movff	powf@s2,___flmul@b
  9499   001E8C  C191  F013         	movff	powf@s2+1,___flmul@b+1
  9500   001E90  C192  F014         	movff	powf@s2+2,___flmul@b+2
  9501   001E94  C193  F015         	movff	powf@s2+3,___flmul@b+3
  9502   001E98  ECDA  F028         	call	___flmul	;wreg free
  9503   001E9C  C012  F002         	movff	?___flmul,___fladd@b
  9504   001EA0  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9505   001EA4  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9506   001EA8  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9507   001EAC  EC7A  F026         	call	___fladd	;wreg free
  9508   001EB0  C002  F148         	movff	?___fladd,_powf$3073
  9509   001EB4  C003  F149         	movff	?___fladd+1,_powf$3073+1
  9510   001EB8  C004  F14A         	movff	?___fladd+2,_powf$3073+2
  9511   001EBC  C005  F14B         	movff	?___fladd+3,_powf$3073+3
  9512   001EC0  0E05               	movlw	5
  9513   001EC2  6E06               	movwf	___fladd@a^0,c
  9514   001EC4  0EA3               	movlw	163
  9515   001EC6  6E07               	movwf	(___fladd@a+1)^0,c
  9516   001EC8  0E8B               	movlw	139
  9517   001ECA  6E08               	movwf	(___fladd@a+2)^0,c
  9518   001ECC  0E3E               	movlw	62
  9519   001ECE  6E09               	movwf	(___fladd@a+3)^0,c
  9520   001ED0  C190  F016         	movff	powf@s2,___flmul@a
  9521   001ED4  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9522   001ED8  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9523   001EDC  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9524   001EE0  C148  F012         	movff	_powf$3073,___flmul@b
  9525   001EE4  C149  F013         	movff	_powf$3073+1,___flmul@b+1
  9526   001EE8  C14A  F014         	movff	_powf$3073+2,___flmul@b+2
  9527   001EEC  C14B  F015         	movff	_powf$3073+3,___flmul@b+3
  9528   001EF0  ECDA  F028         	call	___flmul	;wreg free
  9529   001EF4  C012  F002         	movff	?___flmul,___fladd@b
  9530   001EF8  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9531   001EFC  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9532   001F00  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9533   001F04  EC7A  F026         	call	___fladd	;wreg free
  9534   001F08  C002  F15C         	movff	?___fladd,_powf$3074
  9535   001F0C  C003  F15D         	movff	?___fladd+1,_powf$3074+1
  9536   001F10  C004  F15E         	movff	?___fladd+2,_powf$3074+2
  9537   001F14  C005  F15F         	movff	?___fladd+3,_powf$3074+3
  9538   001F18  0EAB               	movlw	171
  9539   001F1A  6E06               	movwf	___fladd@a^0,c
  9540   001F1C  0EAA               	movlw	170
  9541   001F1E  6E07               	movwf	(___fladd@a+1)^0,c
  9542   001F20  0EAA               	movlw	170
  9543   001F22  6E08               	movwf	(___fladd@a+2)^0,c
  9544   001F24  0E3E               	movlw	62
  9545   001F26  6E09               	movwf	(___fladd@a+3)^0,c
  9546   001F28  C190  F016         	movff	powf@s2,___flmul@a
  9547   001F2C  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9548   001F30  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9549   001F34  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9550   001F38  C15C  F012         	movff	_powf$3074,___flmul@b
  9551   001F3C  C15D  F013         	movff	_powf$3074+1,___flmul@b+1
  9552   001F40  C15E  F014         	movff	_powf$3074+2,___flmul@b+2
  9553   001F44  C15F  F015         	movff	_powf$3074+3,___flmul@b+3
  9554   001F48  ECDA  F028         	call	___flmul	;wreg free
  9555   001F4C  C012  F002         	movff	?___flmul,___fladd@b
  9556   001F50  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9557   001F54  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9558   001F58  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9559   001F5C  EC7A  F026         	call	___fladd	;wreg free
  9560   001F60  C002  F14C         	movff	?___fladd,_powf$3075
  9561   001F64  C003  F14D         	movff	?___fladd+1,_powf$3075+1
  9562   001F68  C004  F14E         	movff	?___fladd+2,_powf$3075+2
  9563   001F6C  C005  F14F         	movff	?___fladd+3,_powf$3075+3
  9564   001F70  0EB7               	movlw	183
  9565   001F72  6E06               	movwf	___fladd@a^0,c
  9566   001F74  0E6D               	movlw	109
  9567   001F76  6E07               	movwf	(___fladd@a+1)^0,c
  9568   001F78  0EDB               	movlw	219
  9569   001F7A  6E08               	movwf	(___fladd@a+2)^0,c
  9570   001F7C  0E3E               	movlw	62
  9571   001F7E  6E09               	movwf	(___fladd@a+3)^0,c
  9572   001F80  C190  F016         	movff	powf@s2,___flmul@a
  9573   001F84  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9574   001F88  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9575   001F8C  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9576   001F90  C14C  F012         	movff	_powf$3075,___flmul@b
  9577   001F94  C14D  F013         	movff	_powf$3075+1,___flmul@b+1
  9578   001F98  C14E  F014         	movff	_powf$3075+2,___flmul@b+2
  9579   001F9C  C14F  F015         	movff	_powf$3075+3,___flmul@b+3
  9580   001FA0  ECDA  F028         	call	___flmul	;wreg free
  9581   001FA4  C012  F002         	movff	?___flmul,___fladd@b
  9582   001FA8  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9583   001FAC  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9584   001FB0  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9585   001FB4  EC7A  F026         	call	___fladd	;wreg free
  9586   001FB8  C002  F138         	movff	?___fladd,_powf$3077
  9587   001FBC  C003  F139         	movff	?___fladd+1,_powf$3077+1
  9588   001FC0  C004  F13A         	movff	?___fladd+2,_powf$3077+2
  9589   001FC4  C005  F13B         	movff	?___fladd+3,_powf$3077+3
  9590   001FC8  0E9A               	movlw	154
  9591   001FCA  6E06               	movwf	___fladd@a^0,c
  9592   001FCC  0E99               	movlw	153
  9593   001FCE  6E07               	movwf	(___fladd@a+1)^0,c
  9594   001FD0  0E19               	movlw	25
  9595   001FD2  6E08               	movwf	(___fladd@a+2)^0,c
  9596   001FD4  0E3F               	movlw	63
  9597   001FD6  6E09               	movwf	(___fladd@a+3)^0,c
  9598   001FD8  C190  F016         	movff	powf@s2,___flmul@a
  9599   001FDC  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9600   001FE0  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9601   001FE4  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9602   001FE8  C138  F012         	movff	_powf$3077,___flmul@b
  9603   001FEC  C139  F013         	movff	_powf$3077+1,___flmul@b+1
  9604   001FF0  C13A  F014         	movff	_powf$3077+2,___flmul@b+2
  9605   001FF4  C13B  F015         	movff	_powf$3077+3,___flmul@b+3
  9606   001FF8  ECDA  F028         	call	___flmul	;wreg free
  9607   001FFC  C012  F002         	movff	?___flmul,___fladd@b
  9608   002000  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9609   002004  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9610   002008  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9611   00200C  EC7A  F026         	call	___fladd	;wreg free
  9612   002010  C002  F100         	movff	?___fladd,_powf$3078
  9613   002014  C003  F101         	movff	?___fladd+1,_powf$3078+1
  9614   002018  C004  F102         	movff	?___fladd+2,_powf$3078+2
  9615   00201C  C005  F103         	movff	?___fladd+3,_powf$3078+3
  9616   002020  C190  F016         	movff	powf@s2,___flmul@a
  9617   002024  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9618   002028  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9619   00202C  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9620   002030  C190  F012         	movff	powf@s2,___flmul@b
  9621   002034  C191  F013         	movff	powf@s2+1,___flmul@b+1
  9622   002038  C192  F014         	movff	powf@s2+2,___flmul@b+2
  9623   00203C  C193  F015         	movff	powf@s2+3,___flmul@b+3
  9624   002040  ECDA  F028         	call	___flmul	;wreg free
  9625   002044  C012  F104         	movff	?___flmul,_powf$3079
  9626   002048  C013  F105         	movff	?___flmul+1,_powf$3079+1
  9627   00204C  C014  F106         	movff	?___flmul+2,_powf$3079+2
  9628   002050  C015  F107         	movff	?___flmul+3,_powf$3079+3
  9629   002054  C100  F012         	movff	_powf$3078,___flmul@b
  9630   002058  C101  F013         	movff	_powf$3078+1,___flmul@b+1
  9631   00205C  C102  F014         	movff	_powf$3078+2,___flmul@b+2
  9632   002060  C103  F015         	movff	_powf$3078+3,___flmul@b+3
  9633   002064  C104  F016         	movff	_powf$3079,___flmul@a
  9634   002068  C105  F017         	movff	_powf$3079+1,___flmul@a+1
  9635   00206C  C106  F018         	movff	_powf$3079+2,___flmul@a+2
  9636   002070  C107  F019         	movff	_powf$3079+3,___flmul@a+3
  9637   002074  ECDA  F028         	call	___flmul	;wreg free
  9638   002078  C012  F150         	movff	?___flmul,powf@r
  9639   00207C  C013  F151         	movff	?___flmul+1,powf@r+1
  9640   002080  C014  F152         	movff	?___flmul+2,powf@r+2
  9641   002084  C015  F153         	movff	?___flmul+3,powf@r+3
  9642   002088  C130  F016         	movff	powf@s_l,___flmul@a
  9643   00208C  C131  F017         	movff	powf@s_l+1,___flmul@a+1
  9644   002090  C132  F018         	movff	powf@s_l+2,___flmul@a+2
  9645   002094  C133  F019         	movff	powf@s_l+3,___flmul@a+3
  9646   002098  C158  F006         	movff	powf@s,___fladd@a
  9647   00209C  C159  F007         	movff	powf@s+1,___fladd@a+1
  9648   0020A0  C15A  F008         	movff	powf@s+2,___fladd@a+2
  9649   0020A4  C15B  F009         	movff	powf@s+3,___fladd@a+3
  9650   0020A8  C174  F002         	movff	powf@s_h,___fladd@b
  9651   0020AC  C175  F003         	movff	powf@s_h+1,___fladd@b+1
  9652   0020B0  C176  F004         	movff	powf@s_h+2,___fladd@b+2
  9653   0020B4  C177  F005         	movff	powf@s_h+3,___fladd@b+3
  9654   0020B8  EC7A  F026         	call	___fladd	;wreg free
  9655   0020BC  C002  F012         	movff	?___fladd,___flmul@b
  9656   0020C0  C003  F013         	movff	?___fladd+1,___flmul@b+1
  9657   0020C4  C004  F014         	movff	?___fladd+2,___flmul@b+2
  9658   0020C8  C005  F015         	movff	?___fladd+3,___flmul@b+3
  9659   0020CC  ECDA  F028         	call	___flmul	;wreg free
  9660   0020D0  C012  F160         	movff	?___flmul,_powf$3080
  9661   0020D4  C013  F161         	movff	?___flmul+1,_powf$3080+1
  9662   0020D8  C014  F162         	movff	?___flmul+2,_powf$3080+2
  9663   0020DC  C015  F163         	movff	?___flmul+3,_powf$3080+3
  9664   0020E0  C150  F002         	movff	powf@r,___fladd@b
  9665   0020E4  C151  F003         	movff	powf@r+1,___fladd@b+1
  9666   0020E8  C152  F004         	movff	powf@r+2,___fladd@b+2
  9667   0020EC  C153  F005         	movff	powf@r+3,___fladd@b+3
  9668   0020F0  C160  F006         	movff	_powf$3080,___fladd@a
  9669   0020F4  C161  F007         	movff	_powf$3080+1,___fladd@a+1
  9670   0020F8  C162  F008         	movff	_powf$3080+2,___fladd@a+2
  9671   0020FC  C163  F009         	movff	_powf$3080+3,___fladd@a+3
  9672   002100  EC7A  F026         	call	___fladd	;wreg free
  9673   002104  C002  F150         	movff	?___fladd,powf@r
  9674   002108  C003  F151         	movff	?___fladd+1,powf@r+1
  9675   00210C  C004  F152         	movff	?___fladd+2,powf@r+2
  9676   002110  C005  F153         	movff	?___fladd+3,powf@r+3
  9677   002114  C174  F012         	movff	powf@s_h,___flmul@b
  9678   002118  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9679   00211C  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9680   002120  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9681   002124  C174  F016         	movff	powf@s_h,___flmul@a
  9682   002128  C175  F017         	movff	powf@s_h+1,___flmul@a+1
  9683   00212C  C176  F018         	movff	powf@s_h+2,___flmul@a+2
  9684   002130  C177  F019         	movff	powf@s_h+3,___flmul@a+3
  9685   002134  ECDA  F028         	call	___flmul	;wreg free
  9686   002138  C012  F190         	movff	?___flmul,powf@s2
  9687   00213C  C013  F191         	movff	?___flmul+1,powf@s2+1
  9688   002140  C014  F192         	movff	?___flmul+2,powf@s2+2
  9689   002144  C015  F193         	movff	?___flmul+3,powf@s2+3
  9690   002148  0E00               	movlw	0
  9691   00214A  6E06               	movwf	___fladd@a^0,c
  9692   00214C  0E00               	movlw	0
  9693   00214E  6E07               	movwf	(___fladd@a+1)^0,c
  9694   002150  0E40               	movlw	64
  9695   002152  6E08               	movwf	(___fladd@a+2)^0,c
  9696   002154  0E40               	movlw	64
  9697   002156  6E09               	movwf	(___fladd@a+3)^0,c
  9698   002158  C190  F002         	movff	powf@s2,___fladd@b
  9699   00215C  C191  F003         	movff	powf@s2+1,___fladd@b+1
  9700   002160  C192  F004         	movff	powf@s2+2,___fladd@b+2
  9701   002164  C193  F005         	movff	powf@s2+3,___fladd@b+3
  9702   002168  EC7A  F026         	call	___fladd	;wreg free
  9703   00216C  C002  F160         	movff	?___fladd,_powf$3080
  9704   002170  C003  F161         	movff	?___fladd+1,_powf$3080+1
  9705   002174  C004  F162         	movff	?___fladd+2,_powf$3080+2
  9706   002178  C005  F163         	movff	?___fladd+3,_powf$3080+3
  9707   00217C  C160  F002         	movff	_powf$3080,___fladd@b
  9708   002180  C161  F003         	movff	_powf$3080+1,___fladd@b+1
  9709   002184  C162  F004         	movff	_powf$3080+2,___fladd@b+2
  9710   002188  C163  F005         	movff	_powf$3080+3,___fladd@b+3
  9711   00218C  C150  F006         	movff	powf@r,___fladd@a
  9712   002190  C151  F007         	movff	powf@r+1,___fladd@a+1
  9713   002194  C152  F008         	movff	powf@r+2,___fladd@a+2
  9714   002198  C153  F009         	movff	powf@r+3,___fladd@a+3
  9715   00219C  EC7A  F026         	call	___fladd	;wreg free
  9716   0021A0  C002  F170         	movff	?___fladd,powf@t_h
  9717   0021A4  C003  F171         	movff	?___fladd+1,powf@t_h+1
  9718   0021A8  C004  F172         	movff	?___fladd+2,powf@t_h+2
  9719   0021AC  C005  F173         	movff	?___fladd+3,powf@t_h+3
  9720   0021B0  C170  F198         	movff	powf@t_h,powf@is
  9721   0021B4  C171  F199         	movff	powf@t_h+1,powf@is+1
  9722   0021B8  C172  F19A         	movff	powf@t_h+2,powf@is+2
  9723   0021BC  C173  F19B         	movff	powf@t_h+3,powf@is+3
  9724   0021C0  0E00               	movlw	0
  9725   0021C2  0101               	movlb	1	; () banked
  9726   0021C4  1598               	andwf	powf@is& (0+255),w,b
  9727   0021C6  6F70               	movwf	powf@t_h& (0+255),b
  9728   0021C8  0EF0               	movlw	240
  9729   0021CA  1599               	andwf	(powf@is+1)& (0+255),w,b
  9730   0021CC  6F71               	movwf	(powf@t_h+1)& (0+255),b
  9731   0021CE  0EFF               	movlw	255
  9732   0021D0  159A               	andwf	(powf@is+2)& (0+255),w,b
  9733   0021D2  6F72               	movwf	(powf@t_h+2)& (0+255),b
  9734   0021D4  0EFF               	movlw	255
  9735   0021D6  159B               	andwf	(powf@is+3)& (0+255),w,b
  9736   0021D8  6F73               	movwf	(powf@t_h+3)& (0+255),b
  9737   0021DA                     
  9738                           ; BSR set to: 1
  9739   0021DA  0E00               	movlw	0
  9740   0021DC  6E06               	movwf	___fladd@a^0,c
  9741   0021DE  0E00               	movlw	0
  9742   0021E0  6E07               	movwf	(___fladd@a+1)^0,c
  9743   0021E2  0E40               	movlw	64
  9744   0021E4  6E08               	movwf	(___fladd@a+2)^0,c
  9745   0021E6  0EC0               	movlw	192
  9746   0021E8  6E09               	movwf	(___fladd@a+3)^0,c
  9747   0021EA  C170  F002         	movff	powf@t_h,___fladd@b
  9748   0021EE  C171  F003         	movff	powf@t_h+1,___fladd@b+1
  9749   0021F2  C172  F004         	movff	powf@t_h+2,___fladd@b+2
  9750   0021F6  C173  F005         	movff	powf@t_h+3,___fladd@b+3
  9751   0021FA  EC7A  F026         	call	___fladd	;wreg free
  9752   0021FE  C002  F13C         	movff	?___fladd,_powf$3081
  9753   002202  C003  F13D         	movff	?___fladd+1,_powf$3081+1
  9754   002206  C004  F13E         	movff	?___fladd+2,_powf$3081+2
  9755   00220A  C005  F13F         	movff	?___fladd+3,_powf$3081+3
  9756   00220E  C190  F048         	movff	powf@s2,___flsub@a
  9757   002212  C191  F049         	movff	powf@s2+1,___flsub@a+1
  9758   002216  C192  F04A         	movff	powf@s2+2,___flsub@a+2
  9759   00221A  C193  F04B         	movff	powf@s2+3,___flsub@a+3
  9760   00221E  C13C  F044         	movff	_powf$3081,___flsub@b
  9761   002222  C13D  F045         	movff	_powf$3081+1,___flsub@b+1
  9762   002226  C13E  F046         	movff	_powf$3081+2,___flsub@b+2
  9763   00222A  C13F  F047         	movff	_powf$3081+3,___flsub@b+3
  9764   00222E  EC9A  F039         	call	___flsub	;wreg free
  9765   002232  C044  F140         	movff	?___flsub,_powf$3082
  9766   002236  C045  F141         	movff	?___flsub+1,_powf$3082+1
  9767   00223A  C046  F142         	movff	?___flsub+2,_powf$3082+2
  9768   00223E  C047  F143         	movff	?___flsub+3,_powf$3082+3
  9769   002242  C150  F044         	movff	powf@r,___flsub@b
  9770   002246  C151  F045         	movff	powf@r+1,___flsub@b+1
  9771   00224A  C152  F046         	movff	powf@r+2,___flsub@b+2
  9772   00224E  C153  F047         	movff	powf@r+3,___flsub@b+3
  9773   002252  C140  F048         	movff	_powf$3082,___flsub@a
  9774   002256  C141  F049         	movff	_powf$3082+1,___flsub@a+1
  9775   00225A  C142  F04A         	movff	_powf$3082+2,___flsub@a+2
  9776   00225E  C143  F04B         	movff	_powf$3082+3,___flsub@a+3
  9777   002262  EC9A  F039         	call	___flsub	;wreg free
  9778   002266  C044  F134         	movff	?___flsub,powf@t_l
  9779   00226A  C045  F135         	movff	?___flsub+1,powf@t_l+1
  9780   00226E  C046  F136         	movff	?___flsub+2,powf@t_l+2
  9781   002272  C047  F137         	movff	?___flsub+3,powf@t_l+3
  9782   002276  C174  F012         	movff	powf@s_h,___flmul@b
  9783   00227A  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9784   00227E  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9785   002282  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9786   002286  C170  F016         	movff	powf@t_h,___flmul@a
  9787   00228A  C171  F017         	movff	powf@t_h+1,___flmul@a+1
  9788   00228E  C172  F018         	movff	powf@t_h+2,___flmul@a+2
  9789   002292  C173  F019         	movff	powf@t_h+3,___flmul@a+3
  9790   002296  ECDA  F028         	call	___flmul	;wreg free
  9791   00229A  C012  F17C         	movff	?___flmul,powf@u
  9792   00229E  C013  F17D         	movff	?___flmul+1,powf@u+1
  9793   0022A2  C014  F17E         	movff	?___flmul+2,powf@u+2
  9794   0022A6  C015  F17F         	movff	?___flmul+3,powf@u+3
  9795   0022AA  C130  F016         	movff	powf@s_l,___flmul@a
  9796   0022AE  C131  F017         	movff	powf@s_l+1,___flmul@a+1
  9797   0022B2  C132  F018         	movff	powf@s_l+2,___flmul@a+2
  9798   0022B6  C133  F019         	movff	powf@s_l+3,___flmul@a+3
  9799   0022BA  C170  F012         	movff	powf@t_h,___flmul@b
  9800   0022BE  C171  F013         	movff	powf@t_h+1,___flmul@b+1
  9801   0022C2  C172  F014         	movff	powf@t_h+2,___flmul@b+2
  9802   0022C6  C173  F015         	movff	powf@t_h+3,___flmul@b+3
  9803   0022CA  ECDA  F028         	call	___flmul	;wreg free
  9804   0022CE  C012  F002         	movff	?___flmul,___fladd@b
  9805   0022D2  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9806   0022D6  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9807   0022DA  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9808   0022DE  C158  F016         	movff	powf@s,___flmul@a
  9809   0022E2  C159  F017         	movff	powf@s+1,___flmul@a+1
  9810   0022E6  C15A  F018         	movff	powf@s+2,___flmul@a+2
  9811   0022EA  C15B  F019         	movff	powf@s+3,___flmul@a+3
  9812   0022EE  C134  F012         	movff	powf@t_l,___flmul@b
  9813   0022F2  C135  F013         	movff	powf@t_l+1,___flmul@b+1
  9814   0022F6  C136  F014         	movff	powf@t_l+2,___flmul@b+2
  9815   0022FA  C137  F015         	movff	powf@t_l+3,___flmul@b+3
  9816   0022FE  ECDA  F028         	call	___flmul	;wreg free
  9817   002302  C012  F006         	movff	?___flmul,___fladd@a
  9818   002306  C013  F007         	movff	?___flmul+1,___fladd@a+1
  9819   00230A  C014  F008         	movff	?___flmul+2,___fladd@a+2
  9820   00230E  C015  F009         	movff	?___flmul+3,___fladd@a+3
  9821   002312  EC7A  F026         	call	___fladd	;wreg free
  9822   002316  C002  F180         	movff	?___fladd,powf@v
  9823   00231A  C003  F181         	movff	?___fladd+1,powf@v+1
  9824   00231E  C004  F182         	movff	?___fladd+2,powf@v+2
  9825   002322  C005  F183         	movff	?___fladd+3,powf@v+3
  9826   002326  C17C  F002         	movff	powf@u,___fladd@b
  9827   00232A  C17D  F003         	movff	powf@u+1,___fladd@b+1
  9828   00232E  C17E  F004         	movff	powf@u+2,___fladd@b+2
  9829   002332  C17F  F005         	movff	powf@u+3,___fladd@b+3
  9830   002336  C180  F006         	movff	powf@v,___fladd@a
  9831   00233A  C181  F007         	movff	powf@v+1,___fladd@a+1
  9832   00233E  C182  F008         	movff	powf@v+2,___fladd@a+2
  9833   002342  C183  F009         	movff	powf@v+3,___fladd@a+3
  9834   002346  EC7A  F026         	call	___fladd	;wreg free
  9835   00234A  C002  F1A0         	movff	?___fladd,powf@p_h
  9836   00234E  C003  F1A1         	movff	?___fladd+1,powf@p_h+1
  9837   002352  C004  F1A2         	movff	?___fladd+2,powf@p_h+2
  9838   002356  C005  F1A3         	movff	?___fladd+3,powf@p_h+3
  9839   00235A  C1A0  F198         	movff	powf@p_h,powf@is
  9840   00235E  C1A1  F199         	movff	powf@p_h+1,powf@is+1
  9841   002362  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
  9842   002366  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
  9843   00236A  0E00               	movlw	0
  9844   00236C  0101               	movlb	1	; () banked
  9845   00236E  1598               	andwf	powf@is& (0+255),w,b
  9846   002370  6FA0               	movwf	powf@p_h& (0+255),b
  9847   002372  0EF0               	movlw	240
  9848   002374  1599               	andwf	(powf@is+1)& (0+255),w,b
  9849   002376  6FA1               	movwf	(powf@p_h+1)& (0+255),b
  9850   002378  0EFF               	movlw	255
  9851   00237A  159A               	andwf	(powf@is+2)& (0+255),w,b
  9852   00237C  6FA2               	movwf	(powf@p_h+2)& (0+255),b
  9853   00237E  0EFF               	movlw	255
  9854   002380  159B               	andwf	(powf@is+3)& (0+255),w,b
  9855   002382  6FA3               	movwf	(powf@p_h+3)& (0+255),b
  9856   002384                     
  9857                           ; BSR set to: 1
  9858   002384  C17C  F048         	movff	powf@u,___flsub@a
  9859   002388  C17D  F049         	movff	powf@u+1,___flsub@a+1
  9860   00238C  C17E  F04A         	movff	powf@u+2,___flsub@a+2
  9861   002390  C17F  F04B         	movff	powf@u+3,___flsub@a+3
  9862   002394  C1A0  F044         	movff	powf@p_h,___flsub@b
  9863   002398  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
  9864   00239C  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
  9865   0023A0  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
  9866   0023A4  EC9A  F039         	call	___flsub	;wreg free
  9867   0023A8  C044  F19C         	movff	?___flsub,_powf$3076
  9868   0023AC  C045  F19D         	movff	?___flsub+1,_powf$3076+1
  9869   0023B0  C046  F19E         	movff	?___flsub+2,_powf$3076+2
  9870   0023B4  C047  F19F         	movff	?___flsub+3,_powf$3076+3
  9871   0023B8  C180  F044         	movff	powf@v,___flsub@b
  9872   0023BC  C181  F045         	movff	powf@v+1,___flsub@b+1
  9873   0023C0  C182  F046         	movff	powf@v+2,___flsub@b+2
  9874   0023C4  C183  F047         	movff	powf@v+3,___flsub@b+3
  9875   0023C8  C19C  F048         	movff	_powf$3076,___flsub@a
  9876   0023CC  C19D  F049         	movff	_powf$3076+1,___flsub@a+1
  9877   0023D0  C19E  F04A         	movff	_powf$3076+2,___flsub@a+2
  9878   0023D4  C19F  F04B         	movff	_powf$3076+3,___flsub@a+3
  9879   0023D8  EC9A  F039         	call	___flsub	;wreg free
  9880   0023DC  C044  F16C         	movff	?___flsub,powf@p_l
  9881   0023E0  C045  F16D         	movff	?___flsub+1,powf@p_l+1
  9882   0023E4  C046  F16E         	movff	?___flsub+2,powf@p_l+2
  9883   0023E8  C047  F16F         	movff	?___flsub+3,powf@p_l+3
  9884   0023EC  C1A0  F012         	movff	powf@p_h,___flmul@b
  9885   0023F0  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
  9886   0023F4  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
  9887   0023F8  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
  9888   0023FC  0E00               	movlw	0
  9889   0023FE  6E16               	movwf	___flmul@a^0,c
  9890   002400  0E40               	movlw	64
  9891   002402  6E17               	movwf	(___flmul@a+1)^0,c
  9892   002404  0E76               	movlw	118
  9893   002406  6E18               	movwf	(___flmul@a+2)^0,c
  9894   002408  0E3F               	movlw	63
  9895   00240A  6E19               	movwf	(___flmul@a+3)^0,c
  9896   00240C  ECDA  F028         	call	___flmul	;wreg free
  9897   002410  C012  F120         	movff	?___flmul,powf@z_h
  9898   002414  C013  F121         	movff	?___flmul+1,powf@z_h+1
  9899   002418  C014  F122         	movff	?___flmul+2,powf@z_h+2
  9900   00241C  C015  F123         	movff	?___flmul+3,powf@z_h+3
  9901   002420  0E4F               	movlw	79
  9902   002422  6E16               	movwf	___flmul@a^0,c
  9903   002424  0E38               	movlw	56
  9904   002426  6E17               	movwf	(___flmul@a+1)^0,c
  9905   002428  0E76               	movlw	118
  9906   00242A  6E18               	movwf	(___flmul@a+2)^0,c
  9907   00242C  0E3F               	movlw	63
  9908   00242E  6E19               	movwf	(___flmul@a+3)^0,c
  9909   002430  C16C  F012         	movff	powf@p_l,___flmul@b
  9910   002434  C16D  F013         	movff	powf@p_l+1,___flmul@b+1
  9911   002438  C16E  F014         	movff	powf@p_l+2,___flmul@b+2
  9912   00243C  C16F  F015         	movff	powf@p_l+3,___flmul@b+3
  9913   002440  ECDA  F028         	call	___flmul	;wreg free
  9914   002444  C012  F006         	movff	?___flmul,___fladd@a
  9915   002448  C013  F007         	movff	?___flmul+1,___fladd@a+1
  9916   00244C  C014  F008         	movff	?___flmul+2,___fladd@a+2
  9917   002450  C015  F009         	movff	?___flmul+3,___fladd@a+3
  9918   002454  0EC6               	movlw	198
  9919   002456  6E16               	movwf	___flmul@a^0,c
  9920   002458  0E23               	movlw	35
  9921   00245A  6E17               	movwf	(___flmul@a+1)^0,c
  9922   00245C  0EF6               	movlw	246
  9923   00245E  6E18               	movwf	(___flmul@a+2)^0,c
  9924   002460  0EB8               	movlw	184
  9925   002462  6E19               	movwf	(___flmul@a+3)^0,c
  9926   002464  C1A0  F012         	movff	powf@p_h,___flmul@b
  9927   002468  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
  9928   00246C  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
  9929   002470  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
  9930   002474  ECDA  F028         	call	___flmul	;wreg free
  9931   002478  C012  F002         	movff	?___flmul,___fladd@b
  9932   00247C  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9933   002480  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9934   002484  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9935   002488  EC7A  F026         	call	___fladd	;wreg free
  9936   00248C  C002  F160         	movff	?___fladd,_powf$3080
  9937   002490  C003  F161         	movff	?___fladd+1,_powf$3080+1
  9938   002494  C004  F162         	movff	?___fladd+2,_powf$3080+2
  9939   002498  C005  F163         	movff	?___fladd+3,_powf$3080+3
  9940   00249C  C160  F002         	movff	_powf$3080,___fladd@b
  9941   0024A0  C161  F003         	movff	_powf$3080+1,___fladd@b+1
  9942   0024A4  C162  F004         	movff	_powf$3080+2,___fladd@b+2
  9943   0024A8  C163  F005         	movff	_powf$3080+3,___fladd@b+3
  9944   0024AC  0101               	movlb	1	; () banked
  9945   0024AE  51A4               	movf	powf@k& (0+255),w,b
  9946   0024B0  0D04               	mullw	4
  9947   0024B2  50F3               	movf	243,w,c
  9948   0024B4  0F01               	addlw	low _dp_l
  9949   0024B6  0100               	movlb	0	; () banked
  9950   0024B8  6FE2               	movwf	??_powf& (0+255),b
  9951   0024BA  C0E2  FFF6         	movff	??_powf,tblptrl
  9952   0024BE                     	if	1	;There is more than 1 active tblptr byte
  9953   0024BE  0E0E               	movlw	high __smallconst
  9954   0024C0  6EF7               	movwf	tblptrh,c
  9955   0024C2                     	endif
  9956   0024C2                     	if	0	;tblptru may be non-zero
  9957   0024C2                     	endif
  9958   0024C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9959   0024C2  0E00               	movlw	low (__smallconst shr (0+16))
  9960   0024C4  6EF8               	movwf	tblptru,c
  9961   0024C6                     	endif
  9962   0024C6  0009               	tblrd		*+
  9963   0024C8  CFF5 F006          	movff	tablat,___fladd@a
  9964   0024CC  0009               	tblrd		*+
  9965   0024CE  CFF5 F007          	movff	tablat,___fladd@a+1
  9966   0024D2  0009               	tblrd		*+
  9967   0024D4  CFF5 F008          	movff	tablat,___fladd@a+2
  9968   0024D8  000A               	tblrd		*-
  9969   0024DA  CFF5 F009          	movff	tablat,___fladd@a+3
  9970   0024DE  EC7A  F026         	call	___fladd	;wreg free
  9971   0024E2  C002  F124         	movff	?___fladd,powf@z_l
  9972   0024E6  C003  F125         	movff	?___fladd+1,powf@z_l+1
  9973   0024EA  C004  F126         	movff	?___fladd+2,powf@z_l+2
  9974   0024EE  C005  F127         	movff	?___fladd+3,powf@z_l+3
  9975   0024F2  C188  F002         	movff	powf@n,___xxtofl@val
  9976   0024F6  C189  F003         	movff	powf@n+1,___xxtofl@val+1
  9977   0024FA  C18A  F004         	movff	powf@n+2,___xxtofl@val+2
  9978   0024FE  C18B  F005         	movff	powf@n+3,___xxtofl@val+3
  9979   002502  0E01               	movlw	1
  9980   002504  ECAA  F030         	call	___xxtofl
  9981   002508  C002  F1B0         	movff	?___xxtofl,powf@t
  9982   00250C  C003  F1B1         	movff	?___xxtofl+1,powf@t+1
  9983   002510  C004  F1B2         	movff	?___xxtofl+2,powf@t+2
  9984   002514  C005  F1B3         	movff	?___xxtofl+3,powf@t+3
  9985   002518  C124  F006         	movff	powf@z_l,___fladd@a
  9986   00251C  C125  F007         	movff	powf@z_l+1,___fladd@a+1
  9987   002520  C126  F008         	movff	powf@z_l+2,___fladd@a+2
  9988   002524  C127  F009         	movff	powf@z_l+3,___fladd@a+3
  9989   002528  C120  F002         	movff	powf@z_h,___fladd@b
  9990   00252C  C121  F003         	movff	powf@z_h+1,___fladd@b+1
  9991   002530  C122  F004         	movff	powf@z_h+2,___fladd@b+2
  9992   002534  C123  F005         	movff	powf@z_h+3,___fladd@b+3
  9993   002538  EC7A  F026         	call	___fladd	;wreg free
  9994   00253C  C002  F160         	movff	?___fladd,_powf$3080
  9995   002540  C003  F161         	movff	?___fladd+1,_powf$3080+1
  9996   002544  C004  F162         	movff	?___fladd+2,_powf$3080+2
  9997   002548  C005  F163         	movff	?___fladd+3,_powf$3080+3
  9998   00254C  0101               	movlb	1	; () banked
  9999   00254E  51A4               	movf	powf@k& (0+255),w,b
 10000   002550  0D04               	mullw	4
 10001   002552  50F3               	movf	243,w,c
 10002   002554  0F09               	addlw	low _dp_h
 10003   002556  0100               	movlb	0	; () banked
 10004   002558  6FE2               	movwf	??_powf& (0+255),b
 10005   00255A  C0E2  FFF6         	movff	??_powf,tblptrl
 10006   00255E                     	if	1	;There is more than 1 active tblptr byte
 10007   00255E  0E0E               	movlw	high __smallconst
 10008   002560  6EF7               	movwf	tblptrh,c
 10009   002562                     	endif
 10010   002562                     	if	0	;tblptru may be non-zero
 10011   002562                     	endif
 10012   002562                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10013   002562  0E00               	movlw	low (__smallconst shr (0+16))
 10014   002564  6EF8               	movwf	tblptru,c
 10015   002566                     	endif
 10016   002566  0009               	tblrd		*+
 10017   002568  CFF5 F006          	movff	tablat,___fladd@a
 10018   00256C  0009               	tblrd		*+
 10019   00256E  CFF5 F007          	movff	tablat,___fladd@a+1
 10020   002572  0009               	tblrd		*+
 10021   002574  CFF5 F008          	movff	tablat,___fladd@a+2
 10022   002578  000A               	tblrd		*-
 10023   00257A  CFF5 F009          	movff	tablat,___fladd@a+3
 10024   00257E  C160  F002         	movff	_powf$3080,___fladd@b
 10025   002582  C161  F003         	movff	_powf$3080+1,___fladd@b+1
 10026   002586  C162  F004         	movff	_powf$3080+2,___fladd@b+2
 10027   00258A  C163  F005         	movff	_powf$3080+3,___fladd@b+3
 10028   00258E  EC7A  F026         	call	___fladd	;wreg free
 10029   002592  C002  F108         	movff	?___fladd,_powf$3083
 10030   002596  C003  F109         	movff	?___fladd+1,_powf$3083+1
 10031   00259A  C004  F10A         	movff	?___fladd+2,_powf$3083+2
 10032   00259E  C005  F10B         	movff	?___fladd+3,_powf$3083+3
 10033   0025A2  C108  F002         	movff	_powf$3083,___fladd@b
 10034   0025A6  C109  F003         	movff	_powf$3083+1,___fladd@b+1
 10035   0025AA  C10A  F004         	movff	_powf$3083+2,___fladd@b+2
 10036   0025AE  C10B  F005         	movff	_powf$3083+3,___fladd@b+3
 10037   0025B2  C1B0  F006         	movff	powf@t,___fladd@a
 10038   0025B6  C1B1  F007         	movff	powf@t+1,___fladd@a+1
 10039   0025BA  C1B2  F008         	movff	powf@t+2,___fladd@a+2
 10040   0025BE  C1B3  F009         	movff	powf@t+3,___fladd@a+3
 10041   0025C2  EC7A  F026         	call	___fladd	;wreg free
 10042   0025C6  C002  F18C         	movff	?___fladd,powf@t1
 10043   0025CA  C003  F18D         	movff	?___fladd+1,powf@t1+1
 10044   0025CE  C004  F18E         	movff	?___fladd+2,powf@t1+2
 10045   0025D2  C005  F18F         	movff	?___fladd+3,powf@t1+3
 10046   0025D6  C18C  F198         	movff	powf@t1,powf@is
 10047   0025DA  C18D  F199         	movff	powf@t1+1,powf@is+1
 10048   0025DE  C18E  F19A         	movff	powf@t1+2,powf@is+2
 10049   0025E2  C18F  F19B         	movff	powf@t1+3,powf@is+3
 10050   0025E6  0E00               	movlw	0
 10051   0025E8  0101               	movlb	1	; () banked
 10052   0025EA  1598               	andwf	powf@is& (0+255),w,b
 10053   0025EC  6F8C               	movwf	powf@t1& (0+255),b
 10054   0025EE  0EF0               	movlw	240
 10055   0025F0  1599               	andwf	(powf@is+1)& (0+255),w,b
 10056   0025F2  6F8D               	movwf	(powf@t1+1)& (0+255),b
 10057   0025F4  0EFF               	movlw	255
 10058   0025F6  159A               	andwf	(powf@is+2)& (0+255),w,b
 10059   0025F8  6F8E               	movwf	(powf@t1+2)& (0+255),b
 10060   0025FA  0EFF               	movlw	255
 10061   0025FC  159B               	andwf	(powf@is+3)& (0+255),w,b
 10062   0025FE  6F8F               	movwf	(powf@t1+3)& (0+255),b
 10063   002600                     
 10064                           ; BSR set to: 1
 10065   002600  C1B0  F048         	movff	powf@t,___flsub@a
 10066   002604  C1B1  F049         	movff	powf@t+1,___flsub@a+1
 10067   002608  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
 10068   00260C  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
 10069   002610  C18C  F044         	movff	powf@t1,___flsub@b
 10070   002614  C18D  F045         	movff	powf@t1+1,___flsub@b+1
 10071   002618  C18E  F046         	movff	powf@t1+2,___flsub@b+2
 10072   00261C  C18F  F047         	movff	powf@t1+3,___flsub@b+3
 10073   002620  EC9A  F039         	call	___flsub	;wreg free
 10074   002624  C044  F19C         	movff	?___flsub,_powf$3076
 10075   002628  C045  F19D         	movff	?___flsub+1,_powf$3076+1
 10076   00262C  C046  F19E         	movff	?___flsub+2,_powf$3076+2
 10077   002630  C047  F19F         	movff	?___flsub+3,_powf$3076+3
 10078   002634  0101               	movlb	1	; () banked
 10079   002636  51A4               	movf	powf@k& (0+255),w,b
 10080   002638  0D04               	mullw	4
 10081   00263A  50F3               	movf	243,w,c
 10082   00263C  0F09               	addlw	low _dp_h
 10083   00263E  0100               	movlb	0	; () banked
 10084   002640  6FE2               	movwf	??_powf& (0+255),b
 10085   002642  C0E2  FFF6         	movff	??_powf,tblptrl
 10086   002646                     	if	1	;There is more than 1 active tblptr byte
 10087   002646  0E0E               	movlw	high __smallconst
 10088   002648  6EF7               	movwf	tblptrh,c
 10089   00264A                     	endif
 10090   00264A                     	if	0	;tblptru may be non-zero
 10091   00264A                     	endif
 10092   00264A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10093   00264A  0E00               	movlw	low (__smallconst shr (0+16))
 10094   00264C  6EF8               	movwf	tblptru,c
 10095   00264E                     	endif
 10096   00264E  0009               	tblrd		*+
 10097   002650  CFF5 F048          	movff	tablat,___flsub@a
 10098   002654  0009               	tblrd		*+
 10099   002656  CFF5 F049          	movff	tablat,___flsub@a+1
 10100   00265A  0009               	tblrd		*+
 10101   00265C  CFF5 F04A          	movff	tablat,___flsub@a+2
 10102   002660  000A               	tblrd		*-
 10103   002662  CFF5 F04B          	movff	tablat,___flsub@a+3
 10104   002666  C19C  F044         	movff	_powf$3076,___flsub@b
 10105   00266A  C19D  F045         	movff	_powf$3076+1,___flsub@b+1
 10106   00266E  C19E  F046         	movff	_powf$3076+2,___flsub@b+2
 10107   002672  C19F  F047         	movff	_powf$3076+3,___flsub@b+3
 10108   002676  EC9A  F039         	call	___flsub	;wreg free
 10109   00267A  C044  F140         	movff	?___flsub,_powf$3082
 10110   00267E  C045  F141         	movff	?___flsub+1,_powf$3082+1
 10111   002682  C046  F142         	movff	?___flsub+2,_powf$3082+2
 10112   002686  C047  F143         	movff	?___flsub+3,_powf$3082+3
 10113   00268A  C120  F048         	movff	powf@z_h,___flsub@a
 10114   00268E  C121  F049         	movff	powf@z_h+1,___flsub@a+1
 10115   002692  C122  F04A         	movff	powf@z_h+2,___flsub@a+2
 10116   002696  C123  F04B         	movff	powf@z_h+3,___flsub@a+3
 10117   00269A  C140  F044         	movff	_powf$3082,___flsub@b
 10118   00269E  C141  F045         	movff	_powf$3082+1,___flsub@b+1
 10119   0026A2  C142  F046         	movff	_powf$3082+2,___flsub@b+2
 10120   0026A6  C143  F047         	movff	_powf$3082+3,___flsub@b+3
 10121   0026AA  EC9A  F039         	call	___flsub	;wreg free
 10122   0026AE  C044  F10C         	movff	?___flsub,_powf$3084
 10123   0026B2  C045  F10D         	movff	?___flsub+1,_powf$3084+1
 10124   0026B6  C046  F10E         	movff	?___flsub+2,_powf$3084+2
 10125   0026BA  C047  F10F         	movff	?___flsub+3,_powf$3084+3
 10126   0026BE  C124  F044         	movff	powf@z_l,___flsub@b
 10127   0026C2  C125  F045         	movff	powf@z_l+1,___flsub@b+1
 10128   0026C6  C126  F046         	movff	powf@z_l+2,___flsub@b+2
 10129   0026CA  C127  F047         	movff	powf@z_l+3,___flsub@b+3
 10130   0026CE  C10C  F048         	movff	_powf$3084,___flsub@a
 10131   0026D2  C10D  F049         	movff	_powf$3084+1,___flsub@a+1
 10132   0026D6  C10E  F04A         	movff	_powf$3084+2,___flsub@a+2
 10133   0026DA  C10F  F04B         	movff	_powf$3084+3,___flsub@a+3
 10134   0026DE  EC9A  F039         	call	___flsub	;wreg free
 10135   0026E2  C044  F11C         	movff	?___flsub,powf@t2
 10136   0026E6  C045  F11D         	movff	?___flsub+1,powf@t2+1
 10137   0026EA  C046  F11E         	movff	?___flsub+2,powf@t2+2
 10138   0026EE  C047  F11F         	movff	?___flsub+3,powf@t2+3
 10139   0026F2                     l7346:
 10140   0026F2  C0DE  F198         	movff	powf@y,powf@is
 10141   0026F6  C0DF  F199         	movff	powf@y+1,powf@is+1
 10142   0026FA  C0E0  F19A         	movff	powf@y+2,powf@is+2
 10143   0026FE  C0E1  F19B         	movff	powf@y+3,powf@is+3
 10144   002702  0E00               	movlw	0
 10145   002704  0101               	movlb	1	; () banked
 10146   002706  1598               	andwf	powf@is& (0+255),w,b
 10147   002708  6F2C               	movwf	powf@y1& (0+255),b
 10148   00270A  0EF0               	movlw	240
 10149   00270C  1599               	andwf	(powf@is+1)& (0+255),w,b
 10150   00270E  6F2D               	movwf	(powf@y1+1)& (0+255),b
 10151   002710  0EFF               	movlw	255
 10152   002712  159A               	andwf	(powf@is+2)& (0+255),w,b
 10153   002714  6F2E               	movwf	(powf@y1+2)& (0+255),b
 10154   002716  0EFF               	movlw	255
 10155   002718  159B               	andwf	(powf@is+3)& (0+255),w,b
 10156   00271A  6F2F               	movwf	(powf@y1+3)& (0+255),b
 10157   00271C                     
 10158                           ; BSR set to: 1
 10159   00271C  C18C  F016         	movff	powf@t1,___flmul@a
 10160   002720  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 10161   002724  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 10162   002728  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 10163   00272C  C12C  F048         	movff	powf@y1,___flsub@a
 10164   002730  C12D  F049         	movff	powf@y1+1,___flsub@a+1
 10165   002734  C12E  F04A         	movff	powf@y1+2,___flsub@a+2
 10166   002738  C12F  F04B         	movff	powf@y1+3,___flsub@a+3
 10167   00273C  C0DE  F044         	movff	powf@y,___flsub@b
 10168   002740  C0DF  F045         	movff	powf@y+1,___flsub@b+1
 10169   002744  C0E0  F046         	movff	powf@y+2,___flsub@b+2
 10170   002748  C0E1  F047         	movff	powf@y+3,___flsub@b+3
 10171   00274C  EC9A  F039         	call	___flsub	;wreg free
 10172   002750  C044  F012         	movff	?___flsub,___flmul@b
 10173   002754  C045  F013         	movff	?___flsub+1,___flmul@b+1
 10174   002758  C046  F014         	movff	?___flsub+2,___flmul@b+2
 10175   00275C  C047  F015         	movff	?___flsub+3,___flmul@b+3
 10176   002760  ECDA  F028         	call	___flmul	;wreg free
 10177   002764  C012  F110         	movff	?___flmul,_powf$3085
 10178   002768  C013  F111         	movff	?___flmul+1,_powf$3085+1
 10179   00276C  C014  F112         	movff	?___flmul+2,_powf$3085+2
 10180   002770  C015  F113         	movff	?___flmul+3,_powf$3085+3
 10181   002774  C110  F002         	movff	_powf$3085,___fladd@b
 10182   002778  C111  F003         	movff	_powf$3085+1,___fladd@b+1
 10183   00277C  C112  F004         	movff	_powf$3085+2,___fladd@b+2
 10184   002780  C113  F005         	movff	_powf$3085+3,___fladd@b+3
 10185   002784  C11C  F016         	movff	powf@t2,___flmul@a
 10186   002788  C11D  F017         	movff	powf@t2+1,___flmul@a+1
 10187   00278C  C11E  F018         	movff	powf@t2+2,___flmul@a+2
 10188   002790  C11F  F019         	movff	powf@t2+3,___flmul@a+3
 10189   002794  C0DE  F012         	movff	powf@y,___flmul@b
 10190   002798  C0DF  F013         	movff	powf@y+1,___flmul@b+1
 10191   00279C  C0E0  F014         	movff	powf@y+2,___flmul@b+2
 10192   0027A0  C0E1  F015         	movff	powf@y+3,___flmul@b+3
 10193   0027A4  ECDA  F028         	call	___flmul	;wreg free
 10194   0027A8  C012  F006         	movff	?___flmul,___fladd@a
 10195   0027AC  C013  F007         	movff	?___flmul+1,___fladd@a+1
 10196   0027B0  C014  F008         	movff	?___flmul+2,___fladd@a+2
 10197   0027B4  C015  F009         	movff	?___flmul+3,___fladd@a+3
 10198   0027B8  EC7A  F026         	call	___fladd	;wreg free
 10199   0027BC  C002  F16C         	movff	?___fladd,powf@p_l
 10200   0027C0  C003  F16D         	movff	?___fladd+1,powf@p_l+1
 10201   0027C4  C004  F16E         	movff	?___fladd+2,powf@p_l+2
 10202   0027C8  C005  F16F         	movff	?___fladd+3,powf@p_l+3
 10203   0027CC  C12C  F012         	movff	powf@y1,___flmul@b
 10204   0027D0  C12D  F013         	movff	powf@y1+1,___flmul@b+1
 10205   0027D4  C12E  F014         	movff	powf@y1+2,___flmul@b+2
 10206   0027D8  C12F  F015         	movff	powf@y1+3,___flmul@b+3
 10207   0027DC  C18C  F016         	movff	powf@t1,___flmul@a
 10208   0027E0  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 10209   0027E4  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 10210   0027E8  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 10211   0027EC  ECDA  F028         	call	___flmul	;wreg free
 10212   0027F0  C012  F1A0         	movff	?___flmul,powf@p_h
 10213   0027F4  C013  F1A1         	movff	?___flmul+1,powf@p_h+1
 10214   0027F8  C014  F1A2         	movff	?___flmul+2,powf@p_h+2
 10215   0027FC  C015  F1A3         	movff	?___flmul+3,powf@p_h+3
 10216   002800  C1A0  F002         	movff	powf@p_h,___fladd@b
 10217   002804  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
 10218   002808  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
 10219   00280C  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
 10220   002810  C16C  F006         	movff	powf@p_l,___fladd@a
 10221   002814  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
 10222   002818  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
 10223   00281C  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
 10224   002820  EC7A  F026         	call	___fladd	;wreg free
 10225   002824  C002  F1B4         	movff	?___fladd,powf@z
 10226   002828  C003  F1B5         	movff	?___fladd+1,powf@z+1
 10227   00282C  C004  F1B6         	movff	?___fladd+2,powf@z+2
 10228   002830  C005  F1B7         	movff	?___fladd+3,powf@z+3
 10229   002834  C1B4  F1A8         	movff	powf@z,powf@j
 10230   002838  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 10231   00283C  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 10232   002840  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 10233   002844  0101               	movlb	1	; () banked
 10234   002846  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 10235   002848  EF32  F014         	goto	u7521
 10236   00284C  05A8               	decf	powf@j& (0+255),w,b
 10237   00284E  0E00               	movlw	0
 10238   002850  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 10239   002852  0E00               	movlw	0
 10240   002854  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 10241   002856  0E43               	movlw	67
 10242   002858  59AB               	subwfb	(powf@j+3)& (0+255),w,b
 10243   00285A  A0D8               	btfss	status,0,c
 10244   00285C  EF32  F014         	goto	u7521
 10245   002860  EF34  F014         	goto	u7520
 10246   002864                     u7521:
 10247   002864  EF36  F014         	goto	l7368
 10248   002868                     u7520:
 10249   002868  EFDA  F00A         	goto	l7168
 10250   00286C                     l7368:
 10251                           
 10252                           ; BSR set to: 1
 10253   00286C  0E43               	movlw	67
 10254   00286E  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 10255   002870  11A8               	iorwf	powf@j& (0+255),w,b
 10256   002872  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 10257   002874  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 10258   002876  A4D8               	btfss	status,2,c
 10259   002878  EF40  F014         	goto	u7531
 10260   00287C  EF42  F014         	goto	u7530
 10261   002880                     u7531:
 10262   002880  EF81  F014         	goto	l7378
 10263   002884                     u7530:
 10264   002884                     
 10265                           ; BSR set to: 1
 10266   002884  C1A0  F048         	movff	powf@p_h,___flsub@a
 10267   002888  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 10268   00288C  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 10269   002890  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 10270   002894  C1B4  F044         	movff	powf@z,___flsub@b
 10271   002898  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10272   00289C  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10273   0028A0  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10274   0028A4  EC9A  F039         	call	___flsub	;wreg free
 10275   0028A8  C044  F04C         	movff	?___flsub,___flge@ff1
 10276   0028AC  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
 10277   0028B0  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
 10278   0028B4  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
 10279   0028B8  0E3C               	movlw	60
 10280   0028BA  6E06               	movwf	___fladd@a^0,c
 10281   0028BC  0EAA               	movlw	170
 10282   0028BE  6E07               	movwf	(___fladd@a+1)^0,c
 10283   0028C0  0E38               	movlw	56
 10284   0028C2  6E08               	movwf	(___fladd@a+2)^0,c
 10285   0028C4  0E33               	movlw	51
 10286   0028C6  6E09               	movwf	(___fladd@a+3)^0,c
 10287   0028C8  C16C  F002         	movff	powf@p_l,___fladd@b
 10288   0028CC  C16D  F003         	movff	powf@p_l+1,___fladd@b+1
 10289   0028D0  C16E  F004         	movff	powf@p_l+2,___fladd@b+2
 10290   0028D4  C16F  F005         	movff	powf@p_l+3,___fladd@b+3
 10291   0028D8  EC7A  F026         	call	___fladd	;wreg free
 10292   0028DC  C002  F050         	movff	?___fladd,___flge@ff2
 10293   0028E0  C003  F051         	movff	?___fladd+1,___flge@ff2+1
 10294   0028E4  C004  F052         	movff	?___fladd+2,___flge@ff2+2
 10295   0028E8  C005  F053         	movff	?___fladd+3,___flge@ff2+3
 10296   0028EC  ECBD  F032         	call	___flge	;wreg free
 10297   0028F0  B0D8               	btfsc	status,0,c
 10298   0028F2  EF7D  F014         	goto	u7541
 10299   0028F6  EF7F  F014         	goto	u7540
 10300   0028FA                     u7541:
 10301   0028FA  EFF4  F014         	goto	l7394
 10302   0028FE                     u7540:
 10303   0028FE  EFDA  F00A         	goto	l7168
 10304   002902                     l7378:
 10305                           
 10306                           ; BSR set to: 1
 10307   002902  0EFF               	movlw	255
 10308   002904  15A8               	andwf	powf@j& (0+255),w,b
 10309   002906  0100               	movlb	0	; () banked
 10310   002908  6FE2               	movwf	??_powf& (0+255),b
 10311   00290A  0EFF               	movlw	255
 10312   00290C  0101               	movlb	1	; () banked
 10313   00290E  15A9               	andwf	(powf@j+1)& (0+255),w,b
 10314   002910  0100               	movlb	0	; () banked
 10315   002912  6FE3               	movwf	(??_powf+1)& (0+255),b
 10316   002914  0EFF               	movlw	255
 10317   002916  0101               	movlb	1	; () banked
 10318   002918  15AA               	andwf	(powf@j+2)& (0+255),w,b
 10319   00291A  0100               	movlb	0	; () banked
 10320   00291C  6FE4               	movwf	(??_powf+2)& (0+255),b
 10321   00291E  0E7F               	movlw	127
 10322   002920  0101               	movlb	1	; () banked
 10323   002922  15AB               	andwf	(powf@j+3)& (0+255),w,b
 10324   002924  0100               	movlb	0	; () banked
 10325   002926  6FE5               	movwf	(??_powf+3)& (0+255),b
 10326   002928  BFE5               	btfsc	(??_powf+3)& (0+255),7,b
 10327   00292A  EFA3  F014         	goto	u7551
 10328   00292E  05E2               	decf	??_powf& (0+255),w,b
 10329   002930  0E00               	movlw	0
 10330   002932  59E3               	subwfb	(??_powf+1)& (0+255),w,b
 10331   002934  0E16               	movlw	22
 10332   002936  59E4               	subwfb	(??_powf+2)& (0+255),w,b
 10333   002938  0E43               	movlw	67
 10334   00293A  59E5               	subwfb	(??_powf+3)& (0+255),w,b
 10335   00293C  A0D8               	btfss	status,0,c
 10336   00293E  EFA3  F014         	goto	u7551
 10337   002942  EFA5  F014         	goto	u7550
 10338   002946                     u7551:
 10339   002946  EFAF  F014         	goto	l7386
 10340   00294A                     u7550:
 10341   00294A                     
 10342                           ; BSR set to: 0
 10343   00294A  0E00               	movlw	0
 10344   00294C  6FDA               	movwf	?_powf& (0+255),b
 10345   00294E  0E00               	movlw	0
 10346   002950  6FDB               	movwf	(?_powf+1)& (0+255),b
 10347   002952  0E00               	movlw	0
 10348   002954  6FDC               	movwf	(?_powf+2)& (0+255),b
 10349   002956  0E00               	movlw	0
 10350   002958  6FDD               	movwf	(?_powf+3)& (0+255),b
 10351   00295A  EF80  F019         	goto	l1377
 10352   00295E                     l7386:
 10353                           
 10354                           ; BSR set to: 0
 10355   00295E  0E16               	movlw	22
 10356   002960  0101               	movlb	1	; () banked
 10357   002962  19AA               	xorwf	(powf@j+2)& (0+255),w,b
 10358   002964  E109               	bnz	u7561
 10359   002966  0EC3               	movlw	195
 10360   002968  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 10361   00296A  11A8               	iorwf	powf@j& (0+255),w,b
 10362   00296C  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 10363   00296E  A4D8               	btfss	status,2,c
 10364   002970  EFBC  F014         	goto	u7561
 10365   002974  EFBE  F014         	goto	u7560
 10366   002978                     u7561:
 10367   002978  EFF4  F014         	goto	l7394
 10368   00297C                     u7560:
 10369   00297C                     
 10370                           ; BSR set to: 1
 10371   00297C  C1A0  F048         	movff	powf@p_h,___flsub@a
 10372   002980  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 10373   002984  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 10374   002988  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 10375   00298C  C1B4  F044         	movff	powf@z,___flsub@b
 10376   002990  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10377   002994  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10378   002998  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10379   00299C  EC9A  F039         	call	___flsub	;wreg free
 10380   0029A0  C044  F04C         	movff	?___flsub,___flge@ff1
 10381   0029A4  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
 10382   0029A8  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
 10383   0029AC  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
 10384   0029B0  C16C  F050         	movff	powf@p_l,___flge@ff2
 10385   0029B4  C16D  F051         	movff	powf@p_l+1,___flge@ff2+1
 10386   0029B8  C16E  F052         	movff	powf@p_l+2,___flge@ff2+2
 10387   0029BC  C16F  F053         	movff	powf@p_l+3,___flge@ff2+3
 10388   0029C0  ECBD  F032         	call	___flge	;wreg free
 10389   0029C4  A0D8               	btfss	status,0,c
 10390   0029C6  EFE7  F014         	goto	u7571
 10391   0029CA  EFE9  F014         	goto	u7570
 10392   0029CE                     u7571:
 10393   0029CE  EFF4  F014         	goto	l7394
 10394   0029D2                     u7570:
 10395   0029D2  0E00               	movlw	0
 10396   0029D4  0100               	movlb	0	; () banked
 10397   0029D6  6FDA               	movwf	?_powf& (0+255),b
 10398   0029D8  0E00               	movlw	0
 10399   0029DA  6FDB               	movwf	(?_powf+1)& (0+255),b
 10400   0029DC  0E00               	movlw	0
 10401   0029DE  6FDC               	movwf	(?_powf+2)& (0+255),b
 10402   0029E0  0E00               	movlw	0
 10403   0029E2  6FDD               	movwf	(?_powf+3)& (0+255),b
 10404   0029E4  EF80  F019         	goto	l1377
 10405   0029E8                     l7394:
 10406   0029E8  0EFF               	movlw	255
 10407   0029EA  0101               	movlb	1	; () banked
 10408   0029EC  15A8               	andwf	powf@j& (0+255),w,b
 10409   0029EE  6F28               	movwf	powf@i& (0+255),b
 10410   0029F0  0EFF               	movlw	255
 10411   0029F2  15A9               	andwf	(powf@j+1)& (0+255),w,b
 10412   0029F4  6F29               	movwf	(powf@i+1)& (0+255),b
 10413   0029F6  0EFF               	movlw	255
 10414   0029F8  15AA               	andwf	(powf@j+2)& (0+255),w,b
 10415   0029FA  6F2A               	movwf	(powf@i+2)& (0+255),b
 10416   0029FC  0E7F               	movlw	127
 10417   0029FE  15AB               	andwf	(powf@j+3)& (0+255),w,b
 10418   002A00  6F2B               	movwf	(powf@i+3)& (0+255),b
 10419   002A02  0E17               	movlw	23
 10420   002A04  0100               	movlb	0	; () banked
 10421   002A06  6FE2               	movwf	??_powf& (0+255),b
 10422   002A08  C128  F0E3         	movff	powf@i,??_powf+1
 10423   002A0C  C129  F0E4         	movff	powf@i+1,??_powf+2
 10424   002A10  C12A  F0E5         	movff	powf@i+2,??_powf+3
 10425   002A14  C12B  F0E6         	movff	powf@i+3,??_powf+4
 10426   002A18                     u7585:
 10427   002A18  67E2               	tstfsz	??_powf& (0+255),b
 10428   002A1A  EF11  F015         	goto	u7586
 10429   002A1E  EF19  F015         	goto	u7587
 10430   002A22                     u7586:
 10431   002A22  35E6               	rlcf	(??_powf+4)& (0+255),w,b
 10432   002A24  33E6               	rrcf	(??_powf+4)& (0+255),f,b
 10433   002A26  33E5               	rrcf	(??_powf+3)& (0+255),f,b
 10434   002A28  33E4               	rrcf	(??_powf+2)& (0+255),f,b
 10435   002A2A  33E3               	rrcf	(??_powf+1)& (0+255),f,b
 10436   002A2C  2FE2               	decfsz	??_powf& (0+255),f,b
 10437   002A2E  EF0C  F015         	goto	u7585
 10438   002A32                     u7587:
 10439   002A32  0E81               	movlw	129
 10440   002A34  0100               	movlb	0	; () banked
 10441   002A36  25E3               	addwf	(??_powf+1)& (0+255),w,b
 10442   002A38  0101               	movlb	1	; () banked
 10443   002A3A  6FA4               	movwf	powf@k& (0+255),b
 10444   002A3C  0EFF               	movlw	255
 10445   002A3E  0100               	movlb	0	; () banked
 10446   002A40  21E4               	addwfc	(??_powf+2)& (0+255),w,b
 10447   002A42  0101               	movlb	1	; () banked
 10448   002A44  6FA5               	movwf	(powf@k+1)& (0+255),b
 10449   002A46  0EFF               	movlw	255
 10450   002A48  0100               	movlb	0	; () banked
 10451   002A4A  21E5               	addwfc	(??_powf+3)& (0+255),w,b
 10452   002A4C  0101               	movlb	1	; () banked
 10453   002A4E  6FA6               	movwf	(powf@k+2)& (0+255),b
 10454   002A50  0EFF               	movlw	255
 10455   002A52  0100               	movlb	0	; () banked
 10456   002A54  21E6               	addwfc	(??_powf+4)& (0+255),w,b
 10457   002A56  0101               	movlb	1	; () banked
 10458   002A58  6FA7               	movwf	(powf@k+3)& (0+255),b
 10459   002A5A                     
 10460                           ; BSR set to: 1
 10461   002A5A  0E00               	movlw	0
 10462   002A5C  6F88               	movwf	powf@n& (0+255),b
 10463   002A5E  0E00               	movlw	0
 10464   002A60  6F89               	movwf	(powf@n+1)& (0+255),b
 10465   002A62  0E00               	movlw	0
 10466   002A64  6F8A               	movwf	(powf@n+2)& (0+255),b
 10467   002A66  0E00               	movlw	0
 10468   002A68  6F8B               	movwf	(powf@n+3)& (0+255),b
 10469   002A6A                     
 10470                           ; BSR set to: 1
 10471   002A6A  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
 10472   002A6C  EF44  F015         	goto	u7591
 10473   002A70  0528               	decf	powf@i& (0+255),w,b
 10474   002A72  0E00               	movlw	0
 10475   002A74  5929               	subwfb	(powf@i+1)& (0+255),w,b
 10476   002A76  0E00               	movlw	0
 10477   002A78  592A               	subwfb	(powf@i+2)& (0+255),w,b
 10478   002A7A  0E3F               	movlw	63
 10479   002A7C  592B               	subwfb	(powf@i+3)& (0+255),w,b
 10480   002A7E  A0D8               	btfss	status,0,c
 10481   002A80  EF44  F015         	goto	u7591
 10482   002A84  EF46  F015         	goto	u7590
 10483   002A88                     u7591:
 10484   002A88  EF42  F016         	goto	l7406
 10485   002A8C                     u7590:
 10486   002A8C                     
 10487                           ; BSR set to: 1
 10488   002A8C  C1A4  F0E2         	movff	powf@k,??_powf
 10489   002A90  0E01               	movlw	1
 10490   002A92  0100               	movlb	0	; () banked
 10491   002A94  27E2               	addwf	??_powf& (0+255),f,b
 10492   002A96  0E00               	movlw	0
 10493   002A98  6FE3               	movwf	(??_powf+1)& (0+255),b
 10494   002A9A  0E00               	movlw	0
 10495   002A9C  6FE4               	movwf	(??_powf+2)& (0+255),b
 10496   002A9E  0E80               	movlw	128
 10497   002AA0  6FE5               	movwf	(??_powf+3)& (0+255),b
 10498   002AA2  0E00               	movlw	0
 10499   002AA4  6FE6               	movwf	(??_powf+4)& (0+255),b
 10500   002AA6                     u7605:
 10501   002AA6  67E2               	tstfsz	??_powf& (0+255),b
 10502   002AA8  EF58  F015         	goto	u7606
 10503   002AAC  EF60  F015         	goto	u7607
 10504   002AB0                     u7606:
 10505   002AB0  35E6               	rlcf	(??_powf+4)& (0+255),w,b
 10506   002AB2  33E6               	rrcf	(??_powf+4)& (0+255),f,b
 10507   002AB4  33E5               	rrcf	(??_powf+3)& (0+255),f,b
 10508   002AB6  33E4               	rrcf	(??_powf+2)& (0+255),f,b
 10509   002AB8  33E3               	rrcf	(??_powf+1)& (0+255),f,b
 10510   002ABA  2FE2               	decfsz	??_powf& (0+255),f,b
 10511   002ABC  EF53  F015         	goto	u7605
 10512   002AC0                     u7607:
 10513   002AC0  0101               	movlb	1	; () banked
 10514   002AC2  51A8               	movf	powf@j& (0+255),w,b
 10515   002AC4  0100               	movlb	0	; () banked
 10516   002AC6  25E3               	addwf	(??_powf+1)& (0+255),w,b
 10517   002AC8  0101               	movlb	1	; () banked
 10518   002ACA  6F88               	movwf	powf@n& (0+255),b
 10519   002ACC  51A9               	movf	(powf@j+1)& (0+255),w,b
 10520   002ACE  0100               	movlb	0	; () banked
 10521   002AD0  21E4               	addwfc	(??_powf+2)& (0+255),w,b
 10522   002AD2  0101               	movlb	1	; () banked
 10523   002AD4  6F89               	movwf	(powf@n+1)& (0+255),b
 10524   002AD6  51AA               	movf	(powf@j+2)& (0+255),w,b
 10525   002AD8  0100               	movlb	0	; () banked
 10526   002ADA  21E5               	addwfc	(??_powf+3)& (0+255),w,b
 10527   002ADC  0101               	movlb	1	; () banked
 10528   002ADE  6F8A               	movwf	(powf@n+2)& (0+255),b
 10529   002AE0  51AB               	movf	(powf@j+3)& (0+255),w,b
 10530   002AE2  0100               	movlb	0	; () banked
 10531   002AE4  21E6               	addwfc	(??_powf+4)& (0+255),w,b
 10532   002AE6  0101               	movlb	1	; () banked
 10533   002AE8  6F8B               	movwf	(powf@n+3)& (0+255),b
 10534   002AEA  0E81               	movlw	129
 10535   002AEC  0100               	movlb	0	; () banked
 10536   002AEE  6FE2               	movwf	??_powf& (0+255),b
 10537   002AF0  0EFF               	movlw	255
 10538   002AF2  6FE3               	movwf	(??_powf+1)& (0+255),b
 10539   002AF4  0EFF               	movlw	255
 10540   002AF6  6FE4               	movwf	(??_powf+2)& (0+255),b
 10541   002AF8  0EFF               	movlw	255
 10542   002AFA  6FE5               	movwf	(??_powf+3)& (0+255),b
 10543   002AFC  0E17               	movlw	23
 10544   002AFE  6FE6               	movwf	(??_powf+4)& (0+255),b
 10545   002B00  C188  F0E7         	movff	powf@n,??_powf+5
 10546   002B04  C189  F0E8         	movff	powf@n+1,??_powf+6
 10547   002B08  C18A  F0E9         	movff	powf@n+2,??_powf+7
 10548   002B0C  C18B  F0EA         	movff	powf@n+3,??_powf+8
 10549   002B10                     u7615:
 10550   002B10  67E6               	tstfsz	(??_powf+4)& (0+255),b
 10551   002B12  EF8D  F015         	goto	u7616
 10552   002B16  EF95  F015         	goto	u7617
 10553   002B1A                     u7616:
 10554   002B1A  35EA               	rlcf	(??_powf+8)& (0+255),w,b
 10555   002B1C  33EA               	rrcf	(??_powf+8)& (0+255),f,b
 10556   002B1E  33E9               	rrcf	(??_powf+7)& (0+255),f,b
 10557   002B20  33E8               	rrcf	(??_powf+6)& (0+255),f,b
 10558   002B22  33E7               	rrcf	(??_powf+5)& (0+255),f,b
 10559   002B24  2FE6               	decfsz	(??_powf+4)& (0+255),f,b
 10560   002B26  EF88  F015         	goto	u7615
 10561   002B2A                     u7617:
 10562   002B2A  0100               	movlb	0	; () banked
 10563   002B2C  51E7               	movf	(??_powf+5)& (0+255),w,b
 10564   002B2E  25E2               	addwf	??_powf& (0+255),w,b
 10565   002B30  0101               	movlb	1	; () banked
 10566   002B32  6FA4               	movwf	powf@k& (0+255),b
 10567   002B34  0E00               	movlw	0
 10568   002B36  0100               	movlb	0	; () banked
 10569   002B38  21E3               	addwfc	(??_powf+1)& (0+255),w,b
 10570   002B3A  0101               	movlb	1	; () banked
 10571   002B3C  6FA5               	movwf	(powf@k+1)& (0+255),b
 10572   002B3E  0E00               	movlw	0
 10573   002B40  0100               	movlb	0	; () banked
 10574   002B42  21E4               	addwfc	(??_powf+2)& (0+255),w,b
 10575   002B44  0101               	movlb	1	; () banked
 10576   002B46  6FA6               	movwf	(powf@k+2)& (0+255),b
 10577   002B48  0E00               	movlw	0
 10578   002B4A  0100               	movlb	0	; () banked
 10579   002B4C  21E5               	addwfc	(??_powf+3)& (0+255),w,b
 10580   002B4E  0101               	movlb	1	; () banked
 10581   002B50  6FA7               	movwf	(powf@k+3)& (0+255),b
 10582   002B52  C1A4  F0E2         	movff	powf@k,??_powf
 10583   002B56  0EFF               	movlw	255
 10584   002B58  0100               	movlb	0	; () banked
 10585   002B5A  6FE3               	movwf	(??_powf+1)& (0+255),b
 10586   002B5C  0EFF               	movlw	255
 10587   002B5E  6FE4               	movwf	(??_powf+2)& (0+255),b
 10588   002B60  0E7F               	movlw	127
 10589   002B62  6FE5               	movwf	(??_powf+3)& (0+255),b
 10590   002B64  0E00               	movlw	0
 10591   002B66  6FE6               	movwf	(??_powf+4)& (0+255),b
 10592   002B68                     u7625:
 10593   002B68  67E2               	tstfsz	??_powf& (0+255),b
 10594   002B6A  EFB9  F015         	goto	u7626
 10595   002B6E  EFC1  F015         	goto	u7627
 10596   002B72                     u7626:
 10597   002B72  35E6               	rlcf	(??_powf+4)& (0+255),w,b
 10598   002B74  33E6               	rrcf	(??_powf+4)& (0+255),f,b
 10599   002B76  33E5               	rrcf	(??_powf+3)& (0+255),f,b
 10600   002B78  33E4               	rrcf	(??_powf+2)& (0+255),f,b
 10601   002B7A  33E3               	rrcf	(??_powf+1)& (0+255),f,b
 10602   002B7C  2FE2               	decfsz	??_powf& (0+255),f,b
 10603   002B7E  EFB4  F015         	goto	u7625
 10604   002B82                     u7627:
 10605   002B82  0100               	movlb	0	; () banked
 10606   002B84  1DE3               	comf	(??_powf+1)& (0+255),w,b
 10607   002B86  6FE7               	movwf	(??_powf+5)& (0+255),b
 10608   002B88  1DE4               	comf	(??_powf+2)& (0+255),w,b
 10609   002B8A  6FE8               	movwf	(??_powf+6)& (0+255),b
 10610   002B8C  1DE5               	comf	(??_powf+3)& (0+255),w,b
 10611   002B8E  6FE9               	movwf	(??_powf+7)& (0+255),b
 10612   002B90  1DE6               	comf	(??_powf+4)& (0+255),w,b
 10613   002B92  6FEA               	movwf	(??_powf+8)& (0+255),b
 10614   002B94  0101               	movlb	1	; () banked
 10615   002B96  5188               	movf	powf@n& (0+255),w,b
 10616   002B98  0100               	movlb	0	; () banked
 10617   002B9A  15E7               	andwf	(??_powf+5)& (0+255),w,b
 10618   002B9C  0101               	movlb	1	; () banked
 10619   002B9E  6FB0               	movwf	powf@t& (0+255),b
 10620   002BA0  5189               	movf	(powf@n+1)& (0+255),w,b
 10621   002BA2  0100               	movlb	0	; () banked
 10622   002BA4  15E8               	andwf	(??_powf+6)& (0+255),w,b
 10623   002BA6  0101               	movlb	1	; () banked
 10624   002BA8  6FB1               	movwf	(powf@t+1)& (0+255),b
 10625   002BAA  518A               	movf	(powf@n+2)& (0+255),w,b
 10626   002BAC  0100               	movlb	0	; () banked
 10627   002BAE  15E9               	andwf	(??_powf+7)& (0+255),w,b
 10628   002BB0  0101               	movlb	1	; () banked
 10629   002BB2  6FB2               	movwf	(powf@t+2)& (0+255),b
 10630   002BB4  518B               	movf	(powf@n+3)& (0+255),w,b
 10631   002BB6  0100               	movlb	0	; () banked
 10632   002BB8  15EA               	andwf	(??_powf+8)& (0+255),w,b
 10633   002BBA  0101               	movlb	1	; () banked
 10634   002BBC  6FB3               	movwf	(powf@t+3)& (0+255),b
 10635   002BBE  51A4               	movf	powf@k& (0+255),w,b
 10636   002BC0  0817               	sublw	23
 10637   002BC2  0100               	movlb	0	; () banked
 10638   002BC4  6FE2               	movwf	??_powf& (0+255),b
 10639   002BC6  0EFF               	movlw	255
 10640   002BC8  0101               	movlb	1	; () banked
 10641   002BCA  1588               	andwf	powf@n& (0+255),w,b
 10642   002BCC  0100               	movlb	0	; () banked
 10643   002BCE  6FE3               	movwf	(??_powf+1)& (0+255),b
 10644   002BD0  0EFF               	movlw	255
 10645   002BD2  0101               	movlb	1	; () banked
 10646   002BD4  1589               	andwf	(powf@n+1)& (0+255),w,b
 10647   002BD6  0100               	movlb	0	; () banked
 10648   002BD8  6FE4               	movwf	(??_powf+2)& (0+255),b
 10649   002BDA  0E7F               	movlw	127
 10650   002BDC  0101               	movlb	1	; () banked
 10651   002BDE  158A               	andwf	(powf@n+2)& (0+255),w,b
 10652   002BE0  0100               	movlb	0	; () banked
 10653   002BE2  6FE5               	movwf	(??_powf+3)& (0+255),b
 10654   002BE4  0E00               	movlw	0
 10655   002BE6  0101               	movlb	1	; () banked
 10656   002BE8  158B               	andwf	(powf@n+3)& (0+255),w,b
 10657   002BEA  0100               	movlb	0	; () banked
 10658   002BEC  6FE6               	movwf	(??_powf+4)& (0+255),b
 10659   002BEE  0E00               	movlw	0
 10660   002BF0  11E3               	iorwf	(??_powf+1)& (0+255),w,b
 10661   002BF2  6FE7               	movwf	(??_powf+5)& (0+255),b
 10662   002BF4  0E00               	movlw	0
 10663   002BF6  11E4               	iorwf	(??_powf+2)& (0+255),w,b
 10664   002BF8  6FE8               	movwf	(??_powf+6)& (0+255),b
 10665   002BFA  0E80               	movlw	128
 10666   002BFC  11E5               	iorwf	(??_powf+3)& (0+255),w,b
 10667   002BFE  6FE9               	movwf	(??_powf+7)& (0+255),b
 10668   002C00  0E00               	movlw	0
 10669   002C02  11E6               	iorwf	(??_powf+4)& (0+255),w,b
 10670   002C04  6FEA               	movwf	(??_powf+8)& (0+255),b
 10671   002C06                     u7635:
 10672   002C06  67E2               	tstfsz	??_powf& (0+255),b
 10673   002C08  EF08  F016         	goto	u7636
 10674   002C0C  EF10  F016         	goto	u7637
 10675   002C10                     u7636:
 10676   002C10  35EA               	rlcf	(??_powf+8)& (0+255),w,b
 10677   002C12  33EA               	rrcf	(??_powf+8)& (0+255),f,b
 10678   002C14  33E9               	rrcf	(??_powf+7)& (0+255),f,b
 10679   002C16  33E8               	rrcf	(??_powf+6)& (0+255),f,b
 10680   002C18  33E7               	rrcf	(??_powf+5)& (0+255),f,b
 10681   002C1A  2FE2               	decfsz	??_powf& (0+255),f,b
 10682   002C1C  EF03  F016         	goto	u7635
 10683   002C20                     u7637:
 10684   002C20  C0E7  F188         	movff	??_powf+5,powf@n
 10685   002C24  C0E8  F189         	movff	??_powf+6,powf@n+1
 10686   002C28  C0E9  F18A         	movff	??_powf+7,powf@n+2
 10687   002C2C  C0EA  F18B         	movff	??_powf+8,powf@n+3
 10688   002C30  0101               	movlb	1	; () banked
 10689   002C32  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 10690   002C34  EF20  F016         	goto	u7640
 10691   002C38  EF1E  F016         	goto	u7641
 10692   002C3C                     u7641:
 10693   002C3C  EF28  F016         	goto	l7404
 10694   002C40                     u7640:
 10695   002C40                     
 10696                           ; BSR set to: 1
 10697   002C40  1F8B               	comf	(powf@n+3)& (0+255),f,b
 10698   002C42  1F8A               	comf	(powf@n+2)& (0+255),f,b
 10699   002C44  1F89               	comf	(powf@n+1)& (0+255),f,b
 10700   002C46  6D88               	negf	powf@n& (0+255),b
 10701   002C48  0E00               	movlw	0
 10702   002C4A  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10703   002C4C  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10704   002C4E  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10705   002C50                     l7404:
 10706                           
 10707                           ; BSR set to: 1
 10708   002C50  C1A0  F044         	movff	powf@p_h,___flsub@b
 10709   002C54  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
 10710   002C58  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
 10711   002C5C  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
 10712   002C60  C1B0  F048         	movff	powf@t,___flsub@a
 10713   002C64  C1B1  F049         	movff	powf@t+1,___flsub@a+1
 10714   002C68  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
 10715   002C6C  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
 10716   002C70  EC9A  F039         	call	___flsub	;wreg free
 10717   002C74  C044  F1A0         	movff	?___flsub,powf@p_h
 10718   002C78  C045  F1A1         	movff	?___flsub+1,powf@p_h+1
 10719   002C7C  C046  F1A2         	movff	?___flsub+2,powf@p_h+2
 10720   002C80  C047  F1A3         	movff	?___flsub+3,powf@p_h+3
 10721   002C84                     l7406:
 10722   002C84  C1A0  F002         	movff	powf@p_h,___fladd@b
 10723   002C88  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
 10724   002C8C  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
 10725   002C90  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
 10726   002C94  C16C  F006         	movff	powf@p_l,___fladd@a
 10727   002C98  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
 10728   002C9C  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
 10729   002CA0  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
 10730   002CA4  EC7A  F026         	call	___fladd	;wreg free
 10731   002CA8  C002  F1B0         	movff	?___fladd,powf@t
 10732   002CAC  C003  F1B1         	movff	?___fladd+1,powf@t+1
 10733   002CB0  C004  F1B2         	movff	?___fladd+2,powf@t+2
 10734   002CB4  C005  F1B3         	movff	?___fladd+3,powf@t+3
 10735   002CB8  C1B0  F198         	movff	powf@t,powf@is
 10736   002CBC  C1B1  F199         	movff	powf@t+1,powf@is+1
 10737   002CC0  C1B2  F19A         	movff	powf@t+2,powf@is+2
 10738   002CC4  C1B3  F19B         	movff	powf@t+3,powf@is+3
 10739   002CC8  0E00               	movlw	0
 10740   002CCA  0101               	movlb	1	; () banked
 10741   002CCC  1598               	andwf	powf@is& (0+255),w,b
 10742   002CCE  6FB0               	movwf	powf@t& (0+255),b
 10743   002CD0  0E80               	movlw	128
 10744   002CD2  1599               	andwf	(powf@is+1)& (0+255),w,b
 10745   002CD4  6FB1               	movwf	(powf@t+1)& (0+255),b
 10746   002CD6  0EFF               	movlw	255
 10747   002CD8  159A               	andwf	(powf@is+2)& (0+255),w,b
 10748   002CDA  6FB2               	movwf	(powf@t+2)& (0+255),b
 10749   002CDC  0EFF               	movlw	255
 10750   002CDE  159B               	andwf	(powf@is+3)& (0+255),w,b
 10751   002CE0  6FB3               	movwf	(powf@t+3)& (0+255),b
 10752   002CE2                     
 10753                           ; BSR set to: 1
 10754   002CE2  C1B0  F012         	movff	powf@t,___flmul@b
 10755   002CE6  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10756   002CEA  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10757   002CEE  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10758   002CF2  0E00               	movlw	0
 10759   002CF4  6E16               	movwf	___flmul@a^0,c
 10760   002CF6  0E72               	movlw	114
 10761   002CF8  6E17               	movwf	(___flmul@a+1)^0,c
 10762   002CFA  0E31               	movlw	49
 10763   002CFC  6E18               	movwf	(___flmul@a+2)^0,c
 10764   002CFE  0E3F               	movlw	63
 10765   002D00  6E19               	movwf	(___flmul@a+3)^0,c
 10766   002D02  ECDA  F028         	call	___flmul	;wreg free
 10767   002D06  C012  F17C         	movff	?___flmul,powf@u
 10768   002D0A  C013  F17D         	movff	?___flmul+1,powf@u+1
 10769   002D0E  C014  F17E         	movff	?___flmul+2,powf@u+2
 10770   002D12  C015  F17F         	movff	?___flmul+3,powf@u+3
 10771   002D16  C1A0  F048         	movff	powf@p_h,___flsub@a
 10772   002D1A  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 10773   002D1E  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 10774   002D22  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 10775   002D26  C1B0  F044         	movff	powf@t,___flsub@b
 10776   002D2A  C1B1  F045         	movff	powf@t+1,___flsub@b+1
 10777   002D2E  C1B2  F046         	movff	powf@t+2,___flsub@b+2
 10778   002D32  C1B3  F047         	movff	powf@t+3,___flsub@b+3
 10779   002D36  EC9A  F039         	call	___flsub	;wreg free
 10780   002D3A  C044  F19C         	movff	?___flsub,_powf$3076
 10781   002D3E  C045  F19D         	movff	?___flsub+1,_powf$3076+1
 10782   002D42  C046  F19E         	movff	?___flsub+2,_powf$3076+2
 10783   002D46  C047  F19F         	movff	?___flsub+3,_powf$3076+3
 10784   002D4A  0E18               	movlw	24
 10785   002D4C  6E16               	movwf	___flmul@a^0,c
 10786   002D4E  0E72               	movlw	114
 10787   002D50  6E17               	movwf	(___flmul@a+1)^0,c
 10788   002D52  0E31               	movlw	49
 10789   002D54  6E18               	movwf	(___flmul@a+2)^0,c
 10790   002D56  0E3F               	movlw	63
 10791   002D58  6E19               	movwf	(___flmul@a+3)^0,c
 10792   002D5A  C19C  F048         	movff	_powf$3076,___flsub@a
 10793   002D5E  C19D  F049         	movff	_powf$3076+1,___flsub@a+1
 10794   002D62  C19E  F04A         	movff	_powf$3076+2,___flsub@a+2
 10795   002D66  C19F  F04B         	movff	_powf$3076+3,___flsub@a+3
 10796   002D6A  C16C  F044         	movff	powf@p_l,___flsub@b
 10797   002D6E  C16D  F045         	movff	powf@p_l+1,___flsub@b+1
 10798   002D72  C16E  F046         	movff	powf@p_l+2,___flsub@b+2
 10799   002D76  C16F  F047         	movff	powf@p_l+3,___flsub@b+3
 10800   002D7A  EC9A  F039         	call	___flsub	;wreg free
 10801   002D7E  C044  F012         	movff	?___flsub,___flmul@b
 10802   002D82  C045  F013         	movff	?___flsub+1,___flmul@b+1
 10803   002D86  C046  F014         	movff	?___flsub+2,___flmul@b+2
 10804   002D8A  C047  F015         	movff	?___flsub+3,___flmul@b+3
 10805   002D8E  ECDA  F028         	call	___flmul	;wreg free
 10806   002D92  C012  F114         	movff	?___flmul,_powf$3086
 10807   002D96  C013  F115         	movff	?___flmul+1,_powf$3086+1
 10808   002D9A  C014  F116         	movff	?___flmul+2,_powf$3086+2
 10809   002D9E  C015  F117         	movff	?___flmul+3,_powf$3086+3
 10810   002DA2  C114  F002         	movff	_powf$3086,___fladd@b
 10811   002DA6  C115  F003         	movff	_powf$3086+1,___fladd@b+1
 10812   002DAA  C116  F004         	movff	_powf$3086+2,___fladd@b+2
 10813   002DAE  C117  F005         	movff	_powf$3086+3,___fladd@b+3
 10814   002DB2  0E8C               	movlw	140
 10815   002DB4  6E16               	movwf	___flmul@a^0,c
 10816   002DB6  0EBE               	movlw	190
 10817   002DB8  6E17               	movwf	(___flmul@a+1)^0,c
 10818   002DBA  0EBF               	movlw	191
 10819   002DBC  6E18               	movwf	(___flmul@a+2)^0,c
 10820   002DBE  0E35               	movlw	53
 10821   002DC0  6E19               	movwf	(___flmul@a+3)^0,c
 10822   002DC2  C1B0  F012         	movff	powf@t,___flmul@b
 10823   002DC6  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10824   002DCA  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10825   002DCE  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10826   002DD2  ECDA  F028         	call	___flmul	;wreg free
 10827   002DD6  C012  F006         	movff	?___flmul,___fladd@a
 10828   002DDA  C013  F007         	movff	?___flmul+1,___fladd@a+1
 10829   002DDE  C014  F008         	movff	?___flmul+2,___fladd@a+2
 10830   002DE2  C015  F009         	movff	?___flmul+3,___fladd@a+3
 10831   002DE6  EC7A  F026         	call	___fladd	;wreg free
 10832   002DEA  C002  F180         	movff	?___fladd,powf@v
 10833   002DEE  C003  F181         	movff	?___fladd+1,powf@v+1
 10834   002DF2  C004  F182         	movff	?___fladd+2,powf@v+2
 10835   002DF6  C005  F183         	movff	?___fladd+3,powf@v+3
 10836   002DFA  C17C  F002         	movff	powf@u,___fladd@b
 10837   002DFE  C17D  F003         	movff	powf@u+1,___fladd@b+1
 10838   002E02  C17E  F004         	movff	powf@u+2,___fladd@b+2
 10839   002E06  C17F  F005         	movff	powf@u+3,___fladd@b+3
 10840   002E0A  C180  F006         	movff	powf@v,___fladd@a
 10841   002E0E  C181  F007         	movff	powf@v+1,___fladd@a+1
 10842   002E12  C182  F008         	movff	powf@v+2,___fladd@a+2
 10843   002E16  C183  F009         	movff	powf@v+3,___fladd@a+3
 10844   002E1A  EC7A  F026         	call	___fladd	;wreg free
 10845   002E1E  C002  F1B4         	movff	?___fladd,powf@z
 10846   002E22  C003  F1B5         	movff	?___fladd+1,powf@z+1
 10847   002E26  C004  F1B6         	movff	?___fladd+2,powf@z+2
 10848   002E2A  C005  F1B7         	movff	?___fladd+3,powf@z+3
 10849   002E2E  C17C  F048         	movff	powf@u,___flsub@a
 10850   002E32  C17D  F049         	movff	powf@u+1,___flsub@a+1
 10851   002E36  C17E  F04A         	movff	powf@u+2,___flsub@a+2
 10852   002E3A  C17F  F04B         	movff	powf@u+3,___flsub@a+3
 10853   002E3E  C1B4  F044         	movff	powf@z,___flsub@b
 10854   002E42  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10855   002E46  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10856   002E4A  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10857   002E4E  EC9A  F039         	call	___flsub	;wreg free
 10858   002E52  C044  F19C         	movff	?___flsub,_powf$3076
 10859   002E56  C045  F19D         	movff	?___flsub+1,_powf$3076+1
 10860   002E5A  C046  F19E         	movff	?___flsub+2,_powf$3076+2
 10861   002E5E  C047  F19F         	movff	?___flsub+3,_powf$3076+3
 10862   002E62  C180  F044         	movff	powf@v,___flsub@b
 10863   002E66  C181  F045         	movff	powf@v+1,___flsub@b+1
 10864   002E6A  C182  F046         	movff	powf@v+2,___flsub@b+2
 10865   002E6E  C183  F047         	movff	powf@v+3,___flsub@b+3
 10866   002E72  C19C  F048         	movff	_powf$3076,___flsub@a
 10867   002E76  C19D  F049         	movff	_powf$3076+1,___flsub@a+1
 10868   002E7A  C19E  F04A         	movff	_powf$3076+2,___flsub@a+2
 10869   002E7E  C19F  F04B         	movff	_powf$3076+3,___flsub@a+3
 10870   002E82  EC9A  F039         	call	___flsub	;wreg free
 10871   002E86  C044  F144         	movff	?___flsub,powf@w
 10872   002E8A  C045  F145         	movff	?___flsub+1,powf@w+1
 10873   002E8E  C046  F146         	movff	?___flsub+2,powf@w+2
 10874   002E92  C047  F147         	movff	?___flsub+3,powf@w+3
 10875   002E96  C1B4  F012         	movff	powf@z,___flmul@b
 10876   002E9A  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 10877   002E9E  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 10878   002EA2  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 10879   002EA6  C1B4  F016         	movff	powf@z,___flmul@a
 10880   002EAA  C1B5  F017         	movff	powf@z+1,___flmul@a+1
 10881   002EAE  C1B6  F018         	movff	powf@z+2,___flmul@a+2
 10882   002EB2  C1B7  F019         	movff	powf@z+3,___flmul@a+3
 10883   002EB6  ECDA  F028         	call	___flmul	;wreg free
 10884   002EBA  C012  F1B0         	movff	?___flmul,powf@t
 10885   002EBE  C013  F1B1         	movff	?___flmul+1,powf@t+1
 10886   002EC2  C014  F1B2         	movff	?___flmul+2,powf@t+2
 10887   002EC6  C015  F1B3         	movff	?___flmul+3,powf@t+3
 10888   002ECA  0E0E               	movlw	14
 10889   002ECC  6E06               	movwf	___fladd@a^0,c
 10890   002ECE  0EEA               	movlw	234
 10891   002ED0  6E07               	movwf	(___fladd@a+1)^0,c
 10892   002ED2  0EDD               	movlw	221
 10893   002ED4  6E08               	movwf	(___fladd@a+2)^0,c
 10894   002ED6  0EB5               	movlw	181
 10895   002ED8  6E09               	movwf	(___fladd@a+3)^0,c
 10896   002EDA  0E4C               	movlw	76
 10897   002EDC  6E16               	movwf	___flmul@a^0,c
 10898   002EDE  0EBB               	movlw	187
 10899   002EE0  6E17               	movwf	(___flmul@a+1)^0,c
 10900   002EE2  0E31               	movlw	49
 10901   002EE4  6E18               	movwf	(___flmul@a+2)^0,c
 10902   002EE6  0E33               	movlw	51
 10903   002EE8  6E19               	movwf	(___flmul@a+3)^0,c
 10904   002EEA  C1B0  F012         	movff	powf@t,___flmul@b
 10905   002EEE  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10906   002EF2  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10907   002EF6  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10908   002EFA  ECDA  F028         	call	___flmul	;wreg free
 10909   002EFE  C012  F002         	movff	?___flmul,___fladd@b
 10910   002F02  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10911   002F06  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10912   002F0A  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10913   002F0E  EC7A  F026         	call	___fladd	;wreg free
 10914   002F12  C002  F148         	movff	?___fladd,_powf$3073
 10915   002F16  C003  F149         	movff	?___fladd+1,_powf$3073+1
 10916   002F1A  C004  F14A         	movff	?___fladd+2,_powf$3073+2
 10917   002F1E  C005  F14B         	movff	?___fladd+3,_powf$3073+3
 10918   002F22  0E55               	movlw	85
 10919   002F24  6E06               	movwf	___fladd@a^0,c
 10920   002F26  0EB3               	movlw	179
 10921   002F28  6E07               	movwf	(___fladd@a+1)^0,c
 10922   002F2A  0E8A               	movlw	138
 10923   002F2C  6E08               	movwf	(___fladd@a+2)^0,c
 10924   002F2E  0E38               	movlw	56
 10925   002F30  6E09               	movwf	(___fladd@a+3)^0,c
 10926   002F32  C1B0  F016         	movff	powf@t,___flmul@a
 10927   002F36  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10928   002F3A  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10929   002F3E  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10930   002F42  C148  F012         	movff	_powf$3073,___flmul@b
 10931   002F46  C149  F013         	movff	_powf$3073+1,___flmul@b+1
 10932   002F4A  C14A  F014         	movff	_powf$3073+2,___flmul@b+2
 10933   002F4E  C14B  F015         	movff	_powf$3073+3,___flmul@b+3
 10934   002F52  ECDA  F028         	call	___flmul	;wreg free
 10935   002F56  C012  F002         	movff	?___flmul,___fladd@b
 10936   002F5A  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10937   002F5E  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10938   002F62  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10939   002F66  EC7A  F026         	call	___fladd	;wreg free
 10940   002F6A  C002  F15C         	movff	?___fladd,_powf$3074
 10941   002F6E  C003  F15D         	movff	?___fladd+1,_powf$3074+1
 10942   002F72  C004  F15E         	movff	?___fladd+2,_powf$3074+2
 10943   002F76  C005  F15F         	movff	?___fladd+3,_powf$3074+3
 10944   002F7A  0E61               	movlw	97
 10945   002F7C  6E06               	movwf	___fladd@a^0,c
 10946   002F7E  0E0B               	movlw	11
 10947   002F80  6E07               	movwf	(___fladd@a+1)^0,c
 10948   002F82  0E36               	movlw	54
 10949   002F84  6E08               	movwf	(___fladd@a+2)^0,c
 10950   002F86  0EBB               	movlw	187
 10951   002F88  6E09               	movwf	(___fladd@a+3)^0,c
 10952   002F8A  C1B0  F016         	movff	powf@t,___flmul@a
 10953   002F8E  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10954   002F92  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10955   002F96  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10956   002F9A  C15C  F012         	movff	_powf$3074,___flmul@b
 10957   002F9E  C15D  F013         	movff	_powf$3074+1,___flmul@b+1
 10958   002FA2  C15E  F014         	movff	_powf$3074+2,___flmul@b+2
 10959   002FA6  C15F  F015         	movff	_powf$3074+3,___flmul@b+3
 10960   002FAA  ECDA  F028         	call	___flmul	;wreg free
 10961   002FAE  C012  F002         	movff	?___flmul,___fladd@b
 10962   002FB2  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10963   002FB6  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10964   002FBA  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10965   002FBE  EC7A  F026         	call	___fladd	;wreg free
 10966   002FC2  C002  F14C         	movff	?___fladd,_powf$3075
 10967   002FC6  C003  F14D         	movff	?___fladd+1,_powf$3075+1
 10968   002FCA  C004  F14E         	movff	?___fladd+2,_powf$3075+2
 10969   002FCE  C005  F14F         	movff	?___fladd+3,_powf$3075+3
 10970   002FD2  0EAB               	movlw	171
 10971   002FD4  6E06               	movwf	___fladd@a^0,c
 10972   002FD6  0EAA               	movlw	170
 10973   002FD8  6E07               	movwf	(___fladd@a+1)^0,c
 10974   002FDA  0E2A               	movlw	42
 10975   002FDC  6E08               	movwf	(___fladd@a+2)^0,c
 10976   002FDE  0E3E               	movlw	62
 10977   002FE0  6E09               	movwf	(___fladd@a+3)^0,c
 10978   002FE2  C1B0  F016         	movff	powf@t,___flmul@a
 10979   002FE6  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10980   002FEA  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10981   002FEE  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10982   002FF2  C14C  F012         	movff	_powf$3075,___flmul@b
 10983   002FF6  C14D  F013         	movff	_powf$3075+1,___flmul@b+1
 10984   002FFA  C14E  F014         	movff	_powf$3075+2,___flmul@b+2
 10985   002FFE  C14F  F015         	movff	_powf$3075+3,___flmul@b+3
 10986   003002  ECDA  F028         	call	___flmul	;wreg free
 10987   003006  C012  F002         	movff	?___flmul,___fladd@b
 10988   00300A  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10989   00300E  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10990   003012  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10991   003016  EC7A  F026         	call	___fladd	;wreg free
 10992   00301A  C002  F138         	movff	?___fladd,_powf$3077
 10993   00301E  C003  F139         	movff	?___fladd+1,_powf$3077+1
 10994   003022  C004  F13A         	movff	?___fladd+2,_powf$3077+2
 10995   003026  C005  F13B         	movff	?___fladd+3,_powf$3077+3
 10996   00302A  C1B4  F044         	movff	powf@z,___flsub@b
 10997   00302E  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10998   003032  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10999   003036  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 11000   00303A  C1B0  F016         	movff	powf@t,___flmul@a
 11001   00303E  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 11002   003042  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 11003   003046  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 11004   00304A  C138  F012         	movff	_powf$3077,___flmul@b
 11005   00304E  C139  F013         	movff	_powf$3077+1,___flmul@b+1
 11006   003052  C13A  F014         	movff	_powf$3077+2,___flmul@b+2
 11007   003056  C13B  F015         	movff	_powf$3077+3,___flmul@b+3
 11008   00305A  ECDA  F028         	call	___flmul	;wreg free
 11009   00305E  C012  F048         	movff	?___flmul,___flsub@a
 11010   003062  C013  F049         	movff	?___flmul+1,___flsub@a+1
 11011   003066  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 11012   00306A  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 11013   00306E  EC9A  F039         	call	___flsub	;wreg free
 11014   003072  C044  F18C         	movff	?___flsub,powf@t1
 11015   003076  C045  F18D         	movff	?___flsub+1,powf@t1+1
 11016   00307A  C046  F18E         	movff	?___flsub+2,powf@t1+2
 11017   00307E  C047  F18F         	movff	?___flsub+3,powf@t1+3
 11018   003082  0E00               	movlw	0
 11019   003084  6E06               	movwf	___fladd@a^0,c
 11020   003086  0E00               	movlw	0
 11021   003088  6E07               	movwf	(___fladd@a+1)^0,c
 11022   00308A  0E00               	movlw	0
 11023   00308C  6E08               	movwf	(___fladd@a+2)^0,c
 11024   00308E  0EC0               	movlw	192
 11025   003090  6E09               	movwf	(___fladd@a+3)^0,c
 11026   003092  C18C  F002         	movff	powf@t1,___fladd@b
 11027   003096  C18D  F003         	movff	powf@t1+1,___fladd@b+1
 11028   00309A  C18E  F004         	movff	powf@t1+2,___fladd@b+2
 11029   00309E  C18F  F005         	movff	powf@t1+3,___fladd@b+3
 11030   0030A2  EC7A  F026         	call	___fladd	;wreg free
 11031   0030A6  C002  F02F         	movff	?___fladd,___fldiv@a
 11032   0030AA  C003  F030         	movff	?___fladd+1,___fldiv@a+1
 11033   0030AE  C004  F031         	movff	?___fladd+2,___fldiv@a+2
 11034   0030B2  C005  F032         	movff	?___fladd+3,___fldiv@a+3
 11035   0030B6  C18C  F016         	movff	powf@t1,___flmul@a
 11036   0030BA  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 11037   0030BE  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 11038   0030C2  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 11039   0030C6  C1B4  F012         	movff	powf@z,___flmul@b
 11040   0030CA  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 11041   0030CE  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 11042   0030D2  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 11043   0030D6  ECDA  F028         	call	___flmul	;wreg free
 11044   0030DA  C012  F02B         	movff	?___flmul,___fldiv@b
 11045   0030DE  C013  F02C         	movff	?___flmul+1,___fldiv@b+1
 11046   0030E2  C014  F02D         	movff	?___flmul+2,___fldiv@b+2
 11047   0030E6  C015  F02E         	movff	?___flmul+3,___fldiv@b+3
 11048   0030EA  ECDE  F02C         	call	___fldiv	;wreg free
 11049   0030EE  C02B  F13C         	movff	?___fldiv,_powf$3081
 11050   0030F2  C02C  F13D         	movff	?___fldiv+1,_powf$3081+1
 11051   0030F6  C02D  F13E         	movff	?___fldiv+2,_powf$3081+2
 11052   0030FA  C02E  F13F         	movff	?___fldiv+3,_powf$3081+3
 11053   0030FE  C144  F006         	movff	powf@w,___fladd@a
 11054   003102  C145  F007         	movff	powf@w+1,___fladd@a+1
 11055   003106  C146  F008         	movff	powf@w+2,___fladd@a+2
 11056   00310A  C147  F009         	movff	powf@w+3,___fladd@a+3
 11057   00310E  C144  F016         	movff	powf@w,___flmul@a
 11058   003112  C145  F017         	movff	powf@w+1,___flmul@a+1
 11059   003116  C146  F018         	movff	powf@w+2,___flmul@a+2
 11060   00311A  C147  F019         	movff	powf@w+3,___flmul@a+3
 11061   00311E  C1B4  F012         	movff	powf@z,___flmul@b
 11062   003122  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 11063   003126  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 11064   00312A  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 11065   00312E  ECDA  F028         	call	___flmul	;wreg free
 11066   003132  C012  F002         	movff	?___flmul,___fladd@b
 11067   003136  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11068   00313A  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11069   00313E  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11070   003142  EC7A  F026         	call	___fladd	;wreg free
 11071   003146  C002  F118         	movff	?___fladd,_powf$3087
 11072   00314A  C003  F119         	movff	?___fladd+1,_powf$3087+1
 11073   00314E  C004  F11A         	movff	?___fladd+2,_powf$3087+2
 11074   003152  C005  F11B         	movff	?___fladd+3,_powf$3087+3
 11075   003156  C13C  F044         	movff	_powf$3081,___flsub@b
 11076   00315A  C13D  F045         	movff	_powf$3081+1,___flsub@b+1
 11077   00315E  C13E  F046         	movff	_powf$3081+2,___flsub@b+2
 11078   003162  C13F  F047         	movff	_powf$3081+3,___flsub@b+3
 11079   003166  C118  F048         	movff	_powf$3087,___flsub@a
 11080   00316A  C119  F049         	movff	_powf$3087+1,___flsub@a+1
 11081   00316E  C11A  F04A         	movff	_powf$3087+2,___flsub@a+2
 11082   003172  C11B  F04B         	movff	_powf$3087+3,___flsub@a+3
 11083   003176  EC9A  F039         	call	___flsub	;wreg free
 11084   00317A  C044  F150         	movff	?___flsub,powf@r
 11085   00317E  C045  F151         	movff	?___flsub+1,powf@r+1
 11086   003182  C046  F152         	movff	?___flsub+2,powf@r+2
 11087   003186  C047  F153         	movff	?___flsub+3,powf@r+3
 11088   00318A  C1B4  F048         	movff	powf@z,___flsub@a
 11089   00318E  C1B5  F049         	movff	powf@z+1,___flsub@a+1
 11090   003192  C1B6  F04A         	movff	powf@z+2,___flsub@a+2
 11091   003196  C1B7  F04B         	movff	powf@z+3,___flsub@a+3
 11092   00319A  C150  F044         	movff	powf@r,___flsub@b
 11093   00319E  C151  F045         	movff	powf@r+1,___flsub@b+1
 11094   0031A2  C152  F046         	movff	powf@r+2,___flsub@b+2
 11095   0031A6  C153  F047         	movff	powf@r+3,___flsub@b+3
 11096   0031AA  EC9A  F039         	call	___flsub	;wreg free
 11097   0031AE  C044  F19C         	movff	?___flsub,_powf$3076
 11098   0031B2  C045  F19D         	movff	?___flsub+1,_powf$3076+1
 11099   0031B6  C046  F19E         	movff	?___flsub+2,_powf$3076+2
 11100   0031BA  C047  F19F         	movff	?___flsub+3,_powf$3076+3
 11101   0031BE  0E00               	movlw	0
 11102   0031C0  6E44               	movwf	___flsub@b^0,c
 11103   0031C2  0E00               	movlw	0
 11104   0031C4  6E45               	movwf	(___flsub@b+1)^0,c
 11105   0031C6  0E80               	movlw	128
 11106   0031C8  6E46               	movwf	(___flsub@b+2)^0,c
 11107   0031CA  0E3F               	movlw	63
 11108   0031CC  6E47               	movwf	(___flsub@b+3)^0,c
 11109   0031CE  C19C  F048         	movff	_powf$3076,___flsub@a
 11110   0031D2  C19D  F049         	movff	_powf$3076+1,___flsub@a+1
 11111   0031D6  C19E  F04A         	movff	_powf$3076+2,___flsub@a+2
 11112   0031DA  C19F  F04B         	movff	_powf$3076+3,___flsub@a+3
 11113   0031DE  EC9A  F039         	call	___flsub	;wreg free
 11114   0031E2  C044  F1B4         	movff	?___flsub,powf@z
 11115   0031E6  C045  F1B5         	movff	?___flsub+1,powf@z+1
 11116   0031EA  C046  F1B6         	movff	?___flsub+2,powf@z+2
 11117   0031EE  C047  F1B7         	movff	?___flsub+3,powf@z+3
 11118   0031F2  C1B4  F1A8         	movff	powf@z,powf@j
 11119   0031F6  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 11120   0031FA  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 11121   0031FE  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 11122   003202  C188  F0E2         	movff	powf@n,??_powf
 11123   003206  C189  F0E3         	movff	powf@n+1,??_powf+1
 11124   00320A  C18A  F0E4         	movff	powf@n+2,??_powf+2
 11125   00320E  C18B  F0E5         	movff	powf@n+3,??_powf+3
 11126   003212  0E17               	movlw	23
 11127   003214                     u7655:
 11128   003214  90D8               	bcf	status,0,c
 11129   003216  0100               	movlb	0	; () banked
 11130   003218  37E2               	rlcf	??_powf& (0+255),f,b
 11131   00321A  37E3               	rlcf	(??_powf+1)& (0+255),f,b
 11132   00321C  37E4               	rlcf	(??_powf+2)& (0+255),f,b
 11133   00321E  37E5               	rlcf	(??_powf+3)& (0+255),f,b
 11134   003220  2EE8               	decfsz	wreg,f,c
 11135   003222  EF0A  F019         	goto	u7655
 11136   003226  51E2               	movf	??_powf& (0+255),w,b
 11137   003228  0101               	movlb	1	; () banked
 11138   00322A  27A8               	addwf	powf@j& (0+255),f,b
 11139   00322C  0100               	movlb	0	; () banked
 11140   00322E  51E3               	movf	(??_powf+1)& (0+255),w,b
 11141   003230  0101               	movlb	1	; () banked
 11142   003232  23A9               	addwfc	(powf@j+1)& (0+255),f,b
 11143   003234  0100               	movlb	0	; () banked
 11144   003236  51E4               	movf	(??_powf+2)& (0+255),w,b
 11145   003238  0101               	movlb	1	; () banked
 11146   00323A  23AA               	addwfc	(powf@j+2)& (0+255),f,b
 11147   00323C  0100               	movlb	0	; () banked
 11148   00323E  51E5               	movf	(??_powf+3)& (0+255),w,b
 11149   003240  0101               	movlb	1	; () banked
 11150   003242  23AB               	addwfc	(powf@j+3)& (0+255),f,b
 11151   003244                     
 11152                           ; BSR set to: 1
 11153   003244  0E17               	movlw	23
 11154   003246  0100               	movlb	0	; () banked
 11155   003248  6FE2               	movwf	??_powf& (0+255),b
 11156   00324A  C1A8  F0E3         	movff	powf@j,??_powf+1
 11157   00324E  C1A9  F0E4         	movff	powf@j+1,??_powf+2
 11158   003252  C1AA  F0E5         	movff	powf@j+2,??_powf+3
 11159   003256  C1AB  F0E6         	movff	powf@j+3,??_powf+4
 11160   00325A                     u7665:
 11161   00325A  67E2               	tstfsz	??_powf& (0+255),b
 11162   00325C  EF32  F019         	goto	u7666
 11163   003260  EF3A  F019         	goto	u7667
 11164   003264                     u7666:
 11165   003264  35E6               	rlcf	(??_powf+4)& (0+255),w,b
 11166   003266  33E6               	rrcf	(??_powf+4)& (0+255),f,b
 11167   003268  33E5               	rrcf	(??_powf+3)& (0+255),f,b
 11168   00326A  33E4               	rrcf	(??_powf+2)& (0+255),f,b
 11169   00326C  33E3               	rrcf	(??_powf+1)& (0+255),f,b
 11170   00326E  2FE2               	decfsz	??_powf& (0+255),f,b
 11171   003270  EF2D  F019         	goto	u7665
 11172   003274                     u7667:
 11173   003274  0100               	movlb	0	; () banked
 11174   003276  BFE6               	btfsc	(??_powf+4)& (0+255),7,b
 11175   003278  EF4A  F019         	goto	u7670
 11176   00327C  51E6               	movf	(??_powf+4)& (0+255),w,b
 11177   00327E  11E5               	iorwf	(??_powf+3)& (0+255),w,b
 11178   003280  11E4               	iorwf	(??_powf+2)& (0+255),w,b
 11179   003282  E106               	bnz	u7671
 11180   003284  05E3               	decf	(??_powf+1)& (0+255),w,b
 11181   003286  B0D8               	btfsc	status,0,c
 11182   003288  EF48  F019         	goto	u7671
 11183   00328C  EF4A  F019         	goto	u7670
 11184   003290                     u7671:
 11185   003290  EF62  F019         	goto	l1443
 11186   003294                     u7670:
 11187   003294                     
 11188                           ; BSR set to: 0
 11189   003294  C1B4  F02B         	movff	powf@z,scalbnf@x
 11190   003298  C1B5  F02C         	movff	powf@z+1,scalbnf@x+1
 11191   00329C  C1B6  F02D         	movff	powf@z+2,scalbnf@x+2
 11192   0032A0  C1B7  F02E         	movff	powf@z+3,scalbnf@x+3
 11193   0032A4  C188  F02F         	movff	powf@n,scalbnf@n
 11194   0032A8  C189  F030         	movff	powf@n+1,scalbnf@n+1
 11195   0032AC  ECAB  F02E         	call	_scalbnf	;wreg free
 11196   0032B0  C02B  F1B4         	movff	?_scalbnf,powf@z
 11197   0032B4  C02C  F1B5         	movff	?_scalbnf+1,powf@z+1
 11198   0032B8  C02D  F1B6         	movff	?_scalbnf+2,powf@z+2
 11199   0032BC  C02E  F1B7         	movff	?_scalbnf+3,powf@z+3
 11200   0032C0  EF6A  F019         	goto	l7456
 11201   0032C4                     l1443:
 11202                           
 11203                           ; BSR set to: 0
 11204   0032C4  C1A8  F1B4         	movff	powf@j,powf@z
 11205   0032C8  C1A9  F1B5         	movff	powf@j+1,powf@z+1
 11206   0032CC  C1AA  F1B6         	movff	powf@j+2,powf@z+2
 11207   0032D0  C1AB  F1B7         	movff	powf@j+3,powf@z+3
 11208   0032D4                     l7456:
 11209   0032D4  0101               	movlb	1	; () banked
 11210   0032D6  51B4               	movf	powf@z& (0+255),w,b
 11211   0032D8  11B5               	iorwf	(powf@z+1)& (0+255),w,b
 11212   0032DA  11B6               	iorwf	(powf@z+2)& (0+255),w,b
 11213   0032DC  11B7               	iorwf	(powf@z+3)& (0+255),w,b
 11214   0032DE  B4D8               	btfsc	status,2,c
 11215   0032E0  EF74  F019         	goto	u7681
 11216   0032E4  EF76  F019         	goto	u7680
 11217   0032E8                     u7681:
 11218   0032E8  EF77  F00A         	goto	l7142
 11219   0032EC                     u7680:
 11220   0032EC                     
 11221                           ; BSR set to: 1
 11222   0032EC  5164               	movf	powf@sn& (0+255),w,b
 11223   0032EE  1BB4               	xorwf	powf@z& (0+255),f,b
 11224   0032F0  5165               	movf	(powf@sn+1)& (0+255),w,b
 11225   0032F2  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
 11226   0032F4  5166               	movf	(powf@sn+2)& (0+255),w,b
 11227   0032F6  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
 11228   0032F8  5167               	movf	(powf@sn+3)& (0+255),w,b
 11229   0032FA  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
 11230   0032FC  EF77  F00A         	goto	l7142
 11231   003300                     l1377:
 11232   003300  0012               	return		;funcret
 11233   003302                     __end_of_powf:
 11234                           	callstack 0
 11235                           
 11236 ;; *************** function _sqrtf *****************
 11237 ;; Defined at:
 11238 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sqrtf.c"
 11239 ;; Parameters:    Size  Location     Type
 11240 ;;  x               4   17[COMRAM] float 
 11241 ;; Auto vars:     Size  Location     Type
 11242 ;;  ix              4   50[COMRAM] struct .
 11243 ;;  r               4   46[COMRAM] unsigned long 
 11244 ;;  m               4   42[COMRAM] long 
 11245 ;;  t               4   38[COMRAM] long 
 11246 ;;  q               4   34[COMRAM] long 
 11247 ;;  i               4   30[COMRAM] long 
 11248 ;;  s               4   26[COMRAM] long 
 11249 ;;  z               4    0        float 
 11250 ;; Return value:  Size  Location     Type
 11251 ;;                  4   17[COMRAM] float 
 11252 ;; Registers used:
 11253 ;;		wreg, status,2, status,0
 11254 ;; Tracked objects:
 11255 ;;		On entry : 0/0
 11256 ;;		On exit  : 0/0
 11257 ;;		Unchanged: 0/0
 11258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11260 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11261 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11262 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11263 ;;Total ram usage:       37 bytes
 11264 ;; Hardware stack levels used: 1
 11265 ;; Hardware stack levels required when called: 2
 11266 ;; This function calls:
 11267 ;;		Nothing
 11268 ;; This function is called by:
 11269 ;;		_decide_action
 11270 ;;		_powf
 11271 ;; This function uses a non-reentrant model
 11272 ;;
 11273                           
 11274                           	psect	text30
 11275   0055DE                     __ptext30:
 11276                           	callstack 0
 11277   0055DE                     _sqrtf:
 11278                           	callstack 27
 11279   0055DE  C012  F033         	movff	sqrtf@x,sqrtf@ix
 11280   0055E2  C013  F034         	movff	sqrtf@x+1,sqrtf@ix+1
 11281   0055E6  C014  F035         	movff	sqrtf@x+2,sqrtf@ix+2
 11282   0055EA  C015  F036         	movff	sqrtf@x+3,sqrtf@ix+3
 11283   0055EE  0E00               	movlw	0
 11284   0055F0  1433               	andwf	sqrtf@ix^0,w,c
 11285   0055F2  6E16               	movwf	??_sqrtf^0,c
 11286   0055F4  0E00               	movlw	0
 11287   0055F6  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11288   0055F8  6E17               	movwf	(??_sqrtf+1)^0,c
 11289   0055FA  0E80               	movlw	128
 11290   0055FC  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11291   0055FE  6E18               	movwf	(??_sqrtf+2)^0,c
 11292   005600  0E7F               	movlw	127
 11293   005602  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11294   005604  6E19               	movwf	(??_sqrtf+3)^0,c
 11295   005606  0E80               	movlw	128
 11296   005608  1818               	xorwf	(??_sqrtf+2)^0,w,c
 11297   00560A  E109               	bnz	u3791
 11298   00560C  0E7F               	movlw	127
 11299   00560E  1819               	xorwf	(??_sqrtf+3)^0,w,c
 11300   005610  1016               	iorwf	??_sqrtf^0,w,c
 11301   005612  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11302   005614  A4D8               	btfss	status,2,c
 11303   005616  EF0F  F02B         	goto	u3791
 11304   00561A  EF11  F02B         	goto	u3790
 11305   00561E                     u3791:
 11306   00561E  EF41  F02B         	goto	l4156
 11307   005622                     u3790:
 11308   005622  0EFF               	movlw	255
 11309   005624  1433               	andwf	sqrtf@ix^0,w,c
 11310   005626  6E16               	movwf	??_sqrtf^0,c
 11311   005628  0EFF               	movlw	255
 11312   00562A  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11313   00562C  6E17               	movwf	(??_sqrtf+1)^0,c
 11314   00562E  0E7F               	movlw	127
 11315   005630  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11316   005632  6E18               	movwf	(??_sqrtf+2)^0,c
 11317   005634  0E00               	movlw	0
 11318   005636  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11319   005638  6E19               	movwf	(??_sqrtf+3)^0,c
 11320   00563A  5016               	movf	??_sqrtf^0,w,c
 11321   00563C  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11322   00563E  1018               	iorwf	(??_sqrtf+2)^0,w,c
 11323   005640  1019               	iorwf	(??_sqrtf+3)^0,w,c
 11324   005642  A4D8               	btfss	status,2,c
 11325   005644  EF26  F02B         	goto	u3801
 11326   005648  EF28  F02B         	goto	u3800
 11327   00564C                     u3801:
 11328   00564C  EF2F  F02B         	goto	l4150
 11329   005650                     u3800:
 11330   005650  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 11331   005652  EF2F  F02B         	goto	u3810
 11332   005656  EF2D  F02B         	goto	u3811
 11333   00565A                     u3811:
 11334   00565A  EF37  F02B         	goto	l4152
 11335   00565E                     u3810:
 11336   00565E                     l4150:
 11337   00565E  0EFF               	movlw	255
 11338   005660  1233               	iorwf	sqrtf@ix^0,f,c
 11339   005662  0EFF               	movlw	255
 11340   005664  1234               	iorwf	(sqrtf@ix+1)^0,f,c
 11341   005666  0E7F               	movlw	127
 11342   005668  1235               	iorwf	(sqrtf@ix+2)^0,f,c
 11343   00566A  0E00               	movlw	0
 11344   00566C  1236               	iorwf	(sqrtf@ix+3)^0,f,c
 11345   00566E                     l4152:
 11346   00566E  C033  F012         	movff	sqrtf@ix,?_sqrtf
 11347   005672  C034  F013         	movff	sqrtf@ix+1,?_sqrtf+1
 11348   005676  C035  F014         	movff	sqrtf@ix+2,?_sqrtf+2
 11349   00567A  C036  F015         	movff	sqrtf@ix+3,?_sqrtf+3
 11350   00567E  EFDD  F02C         	goto	l1469
 11351   005682                     l4156:
 11352   005682  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 11353   005684  EF50  F02B         	goto	u3820
 11354   005688  5036               	movf	(sqrtf@ix+3)^0,w,c
 11355   00568A  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 11356   00568C  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 11357   00568E  E106               	bnz	u3821
 11358   005690  0433               	decf	sqrtf@ix^0,w,c
 11359   005692  B0D8               	btfsc	status,0,c
 11360   005694  EF4E  F02B         	goto	u3821
 11361   005698  EF50  F02B         	goto	u3820
 11362   00569C                     u3821:
 11363   00569C  EF87  F02B         	goto	l4172
 11364   0056A0                     u3820:
 11365   0056A0  0EFF               	movlw	255
 11366   0056A2  1433               	andwf	sqrtf@ix^0,w,c
 11367   0056A4  6E16               	movwf	??_sqrtf^0,c
 11368   0056A6  0EFF               	movlw	255
 11369   0056A8  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11370   0056AA  6E17               	movwf	(??_sqrtf+1)^0,c
 11371   0056AC  0EFF               	movlw	255
 11372   0056AE  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11373   0056B0  6E18               	movwf	(??_sqrtf+2)^0,c
 11374   0056B2  0E7F               	movlw	127
 11375   0056B4  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11376   0056B6  6E19               	movwf	(??_sqrtf+3)^0,c
 11377   0056B8  5016               	movf	??_sqrtf^0,w,c
 11378   0056BA  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11379   0056BC  1018               	iorwf	(??_sqrtf+2)^0,w,c
 11380   0056BE  1019               	iorwf	(??_sqrtf+3)^0,w,c
 11381   0056C0  A4D8               	btfss	status,2,c
 11382   0056C2  EF65  F02B         	goto	u3831
 11383   0056C6  EF67  F02B         	goto	u3830
 11384   0056CA                     u3831:
 11385   0056CA  EF71  F02B         	goto	l4164
 11386   0056CE                     u3830:
 11387   0056CE  0E00               	movlw	0
 11388   0056D0  6E12               	movwf	?_sqrtf^0,c
 11389   0056D2  0E00               	movlw	0
 11390   0056D4  6E13               	movwf	(?_sqrtf+1)^0,c
 11391   0056D6  0E00               	movlw	0
 11392   0056D8  6E14               	movwf	(?_sqrtf+2)^0,c
 11393   0056DA  0E00               	movlw	0
 11394   0056DC  6E15               	movwf	(?_sqrtf+3)^0,c
 11395   0056DE  EFDD  F02C         	goto	l1469
 11396   0056E2                     l4164:
 11397   0056E2  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 11398   0056E4  EF78  F02B         	goto	u3840
 11399   0056E8  EF76  F02B         	goto	u3841
 11400   0056EC                     u3841:
 11401   0056EC  EF87  F02B         	goto	l4172
 11402   0056F0                     u3840:
 11403   0056F0  0E00               	movlw	0
 11404   0056F2  0100               	movlb	0	; () banked
 11405   0056F4  6FD1               	movwf	(_errno+1)& (0+255),b
 11406   0056F6  0E21               	movlw	33
 11407   0056F8  6FD0               	movwf	_errno& (0+255),b
 11408   0056FA  0EFF               	movlw	255
 11409   0056FC  6E33               	movwf	sqrtf@ix^0,c
 11410   0056FE  0EFF               	movlw	255
 11411   005700  6E34               	movwf	(sqrtf@ix+1)^0,c
 11412   005702  0EFF               	movlw	255
 11413   005704  6E35               	movwf	(sqrtf@ix+2)^0,c
 11414   005706  0E7F               	movlw	127
 11415   005708  6E36               	movwf	(sqrtf@ix+3)^0,c
 11416   00570A  EF37  F02B         	goto	l4152
 11417   00570E                     l4172:
 11418   00570E  0E17               	movlw	23
 11419   005710  6E16               	movwf	??_sqrtf^0,c
 11420   005712  C033  F017         	movff	sqrtf@ix,??_sqrtf+1
 11421   005716  C034  F018         	movff	sqrtf@ix+1,??_sqrtf+2
 11422   00571A  C035  F019         	movff	sqrtf@ix+2,??_sqrtf+3
 11423   00571E  C036  F01A         	movff	sqrtf@ix+3,??_sqrtf+4
 11424   005722                     u3855:
 11425   005722  6616               	tstfsz	??_sqrtf^0,c
 11426   005724  EF96  F02B         	goto	u3856
 11427   005728  EF9E  F02B         	goto	u3857
 11428   00572C                     u3856:
 11429   00572C  341A               	rlcf	(??_sqrtf+4)^0,w,c
 11430   00572E  321A               	rrcf	(??_sqrtf+4)^0,f,c
 11431   005730  3219               	rrcf	(??_sqrtf+3)^0,f,c
 11432   005732  3218               	rrcf	(??_sqrtf+2)^0,f,c
 11433   005734  3217               	rrcf	(??_sqrtf+1)^0,f,c
 11434   005736  2E16               	decfsz	??_sqrtf^0,f,c
 11435   005738  EF91  F02B         	goto	u3855
 11436   00573C                     u3857:
 11437   00573C  C017  F02B         	movff	??_sqrtf+1,sqrtf@m
 11438   005740  C018  F02C         	movff	??_sqrtf+2,sqrtf@m+1
 11439   005744  C019  F02D         	movff	??_sqrtf+3,sqrtf@m+2
 11440   005748  C01A  F02E         	movff	??_sqrtf+4,sqrtf@m+3
 11441   00574C  502B               	movf	sqrtf@m^0,w,c
 11442   00574E  102C               	iorwf	(sqrtf@m+1)^0,w,c
 11443   005750  102D               	iorwf	(sqrtf@m+2)^0,w,c
 11444   005752  102E               	iorwf	(sqrtf@m+3)^0,w,c
 11445   005754  A4D8               	btfss	status,2,c
 11446   005756  EFAF  F02B         	goto	u3861
 11447   00575A  EFB1  F02B         	goto	u3860
 11448   00575E                     u3861:
 11449   00575E  EFE1  F02B         	goto	l1473
 11450   005762                     u3860:
 11451   005762  0E00               	movlw	0
 11452   005764  6E1F               	movwf	sqrtf@i^0,c
 11453   005766  0E00               	movlw	0
 11454   005768  6E20               	movwf	(sqrtf@i+1)^0,c
 11455   00576A  0E00               	movlw	0
 11456   00576C  6E21               	movwf	(sqrtf@i+2)^0,c
 11457   00576E  0E00               	movlw	0
 11458   005770  6E22               	movwf	(sqrtf@i+3)^0,c
 11459   005772  EFC6  F02B         	goto	l4180
 11460   005776                     l4176:
 11461   005776  90D8               	bcf	status,0,c
 11462   005778  3633               	rlcf	sqrtf@ix^0,f,c
 11463   00577A  3634               	rlcf	(sqrtf@ix+1)^0,f,c
 11464   00577C  3635               	rlcf	(sqrtf@ix+2)^0,f,c
 11465   00577E  3636               	rlcf	(sqrtf@ix+3)^0,f,c
 11466   005780  0E01               	movlw	1
 11467   005782  261F               	addwf	sqrtf@i^0,f,c
 11468   005784  0E00               	movlw	0
 11469   005786  2220               	addwfc	(sqrtf@i+1)^0,f,c
 11470   005788  2221               	addwfc	(sqrtf@i+2)^0,f,c
 11471   00578A  2222               	addwfc	(sqrtf@i+3)^0,f,c
 11472   00578C                     l4180:
 11473   00578C  AE35               	btfss	(sqrtf@ix+2)^0,7,c
 11474   00578E  EFCB  F02B         	goto	u3871
 11475   005792  EFCD  F02B         	goto	u3870
 11476   005796                     u3871:
 11477   005796  EFBB  F02B         	goto	l4176
 11478   00579A                     u3870:
 11479   00579A  0EFF               	movlw	255
 11480   00579C  241F               	addwf	sqrtf@i^0,w,c
 11481   00579E  6E16               	movwf	??_sqrtf^0,c
 11482   0057A0  0EFF               	movlw	255
 11483   0057A2  2020               	addwfc	(sqrtf@i+1)^0,w,c
 11484   0057A4  6E17               	movwf	(??_sqrtf+1)^0,c
 11485   0057A6  0EFF               	movlw	255
 11486   0057A8  2021               	addwfc	(sqrtf@i+2)^0,w,c
 11487   0057AA  6E18               	movwf	(??_sqrtf+2)^0,c
 11488   0057AC  0EFF               	movlw	255
 11489   0057AE  2022               	addwfc	(sqrtf@i+3)^0,w,c
 11490   0057B0  6E19               	movwf	(??_sqrtf+3)^0,c
 11491   0057B2  5016               	movf	??_sqrtf^0,w,c
 11492   0057B4  5E2B               	subwf	sqrtf@m^0,f,c
 11493   0057B6  5017               	movf	(??_sqrtf+1)^0,w,c
 11494   0057B8  5A2C               	subwfb	(sqrtf@m+1)^0,f,c
 11495   0057BA  5018               	movf	(??_sqrtf+2)^0,w,c
 11496   0057BC  5A2D               	subwfb	(sqrtf@m+2)^0,f,c
 11497   0057BE  5019               	movf	(??_sqrtf+3)^0,w,c
 11498   0057C0  5A2E               	subwfb	(sqrtf@m+3)^0,f,c
 11499   0057C2                     l1473:
 11500   0057C2  0E81               	movlw	129
 11501   0057C4  262B               	addwf	sqrtf@m^0,f,c
 11502   0057C6  0EFF               	movlw	255
 11503   0057C8  222C               	addwfc	(sqrtf@m+1)^0,f,c
 11504   0057CA  0EFF               	movlw	255
 11505   0057CC  222D               	addwfc	(sqrtf@m+2)^0,f,c
 11506   0057CE  0EFF               	movlw	255
 11507   0057D0  222E               	addwfc	(sqrtf@m+3)^0,f,c
 11508   0057D2  0EFF               	movlw	255
 11509   0057D4  1433               	andwf	sqrtf@ix^0,w,c
 11510   0057D6  6E16               	movwf	??_sqrtf^0,c
 11511   0057D8  0EFF               	movlw	255
 11512   0057DA  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11513   0057DC  6E17               	movwf	(??_sqrtf+1)^0,c
 11514   0057DE  0E7F               	movlw	127
 11515   0057E0  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11516   0057E2  6E18               	movwf	(??_sqrtf+2)^0,c
 11517   0057E4  0E00               	movlw	0
 11518   0057E6  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11519   0057E8  6E19               	movwf	(??_sqrtf+3)^0,c
 11520   0057EA  0E00               	movlw	0
 11521   0057EC  1016               	iorwf	??_sqrtf^0,w,c
 11522   0057EE  6E33               	movwf	sqrtf@ix^0,c
 11523   0057F0  0E00               	movlw	0
 11524   0057F2  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11525   0057F4  6E34               	movwf	(sqrtf@ix+1)^0,c
 11526   0057F6  0E80               	movlw	128
 11527   0057F8  1018               	iorwf	(??_sqrtf+2)^0,w,c
 11528   0057FA  6E35               	movwf	(sqrtf@ix+2)^0,c
 11529   0057FC  0E00               	movlw	0
 11530   0057FE  1019               	iorwf	(??_sqrtf+3)^0,w,c
 11531   005800  6E36               	movwf	(sqrtf@ix+3)^0,c
 11532   005802  A02B               	btfss	sqrtf@m^0,0,c
 11533   005804  EF06  F02C         	goto	u3881
 11534   005808  EF08  F02C         	goto	u3880
 11535   00580C                     u3881:
 11536   00580C  EF10  F02C         	goto	l1477
 11537   005810                     u3880:
 11538   005810  5033               	movf	sqrtf@ix^0,w,c
 11539   005812  2633               	addwf	sqrtf@ix^0,f,c
 11540   005814  5034               	movf	(sqrtf@ix+1)^0,w,c
 11541   005816  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11542   005818  5035               	movf	(sqrtf@ix+2)^0,w,c
 11543   00581A  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11544   00581C  5036               	movf	(sqrtf@ix+3)^0,w,c
 11545   00581E  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11546   005820                     l1477:
 11547   005820  342E               	rlcf	(sqrtf@m+3)^0,w,c
 11548   005822  322E               	rrcf	(sqrtf@m+3)^0,f,c
 11549   005824  322D               	rrcf	(sqrtf@m+2)^0,f,c
 11550   005826  322C               	rrcf	(sqrtf@m+1)^0,f,c
 11551   005828  322B               	rrcf	sqrtf@m^0,f,c
 11552   00582A  5033               	movf	sqrtf@ix^0,w,c
 11553   00582C  2633               	addwf	sqrtf@ix^0,f,c
 11554   00582E  5034               	movf	(sqrtf@ix+1)^0,w,c
 11555   005830  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11556   005832  5035               	movf	(sqrtf@ix+2)^0,w,c
 11557   005834  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11558   005836  5036               	movf	(sqrtf@ix+3)^0,w,c
 11559   005838  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11560   00583A  0E00               	movlw	0
 11561   00583C  6E1B               	movwf	sqrtf@s^0,c
 11562   00583E  0E00               	movlw	0
 11563   005840  6E1C               	movwf	(sqrtf@s+1)^0,c
 11564   005842  0E00               	movlw	0
 11565   005844  6E1D               	movwf	(sqrtf@s+2)^0,c
 11566   005846  0E00               	movlw	0
 11567   005848  6E1E               	movwf	(sqrtf@s+3)^0,c
 11568   00584A  C01B  F023         	movff	sqrtf@s,sqrtf@q
 11569   00584E  C01C  F024         	movff	sqrtf@s+1,sqrtf@q+1
 11570   005852  C01D  F025         	movff	sqrtf@s+2,sqrtf@q+2
 11571   005856  C01E  F026         	movff	sqrtf@s+3,sqrtf@q+3
 11572   00585A  0E00               	movlw	0
 11573   00585C  6E2F               	movwf	sqrtf@r^0,c
 11574   00585E  0E00               	movlw	0
 11575   005860  6E30               	movwf	(sqrtf@r+1)^0,c
 11576   005862  0E00               	movlw	0
 11577   005864  6E31               	movwf	(sqrtf@r+2)^0,c
 11578   005866  0E01               	movlw	1
 11579   005868  6E32               	movwf	(sqrtf@r+3)^0,c
 11580   00586A  EF7F  F02C         	goto	l4198
 11581   00586E                     l4192:
 11582   00586E  501B               	movf	sqrtf@s^0,w,c
 11583   005870  242F               	addwf	sqrtf@r^0,w,c
 11584   005872  6E27               	movwf	sqrtf@t^0,c
 11585   005874  501C               	movf	(sqrtf@s+1)^0,w,c
 11586   005876  2030               	addwfc	(sqrtf@r+1)^0,w,c
 11587   005878  6E28               	movwf	(sqrtf@t+1)^0,c
 11588   00587A  501D               	movf	(sqrtf@s+2)^0,w,c
 11589   00587C  2031               	addwfc	(sqrtf@r+2)^0,w,c
 11590   00587E  6E29               	movwf	(sqrtf@t+2)^0,c
 11591   005880  501E               	movf	(sqrtf@s+3)^0,w,c
 11592   005882  2032               	addwfc	(sqrtf@r+3)^0,w,c
 11593   005884  6E2A               	movwf	(sqrtf@t+3)^0,c
 11594   005886  5027               	movf	sqrtf@t^0,w,c
 11595   005888  5C33               	subwf	sqrtf@ix^0,w,c
 11596   00588A  5028               	movf	(sqrtf@t+1)^0,w,c
 11597   00588C  5834               	subwfb	(sqrtf@ix+1)^0,w,c
 11598   00588E  5029               	movf	(sqrtf@t+2)^0,w,c
 11599   005890  5835               	subwfb	(sqrtf@ix+2)^0,w,c
 11600   005892  5036               	movf	(sqrtf@ix+3)^0,w,c
 11601   005894  0A80               	xorlw	128
 11602   005896  6E16               	movwf	??_sqrtf^0,c
 11603   005898  502A               	movf	(sqrtf@t+3)^0,w,c
 11604   00589A  0A80               	xorlw	128
 11605   00589C  5816               	subwfb	??_sqrtf^0,w,c
 11606   00589E  A0D8               	btfss	status,0,c
 11607   0058A0  EF54  F02C         	goto	u3891
 11608   0058A4  EF56  F02C         	goto	u3890
 11609   0058A8                     u3891:
 11610   0058A8  EF72  F02C         	goto	l1480
 11611   0058AC                     u3890:
 11612   0058AC  5027               	movf	sqrtf@t^0,w,c
 11613   0058AE  242F               	addwf	sqrtf@r^0,w,c
 11614   0058B0  6E1B               	movwf	sqrtf@s^0,c
 11615   0058B2  5028               	movf	(sqrtf@t+1)^0,w,c
 11616   0058B4  2030               	addwfc	(sqrtf@r+1)^0,w,c
 11617   0058B6  6E1C               	movwf	(sqrtf@s+1)^0,c
 11618   0058B8  5029               	movf	(sqrtf@t+2)^0,w,c
 11619   0058BA  2031               	addwfc	(sqrtf@r+2)^0,w,c
 11620   0058BC  6E1D               	movwf	(sqrtf@s+2)^0,c
 11621   0058BE  502A               	movf	(sqrtf@t+3)^0,w,c
 11622   0058C0  2032               	addwfc	(sqrtf@r+3)^0,w,c
 11623   0058C2  6E1E               	movwf	(sqrtf@s+3)^0,c
 11624   0058C4  5027               	movf	sqrtf@t^0,w,c
 11625   0058C6  5E33               	subwf	sqrtf@ix^0,f,c
 11626   0058C8  5028               	movf	(sqrtf@t+1)^0,w,c
 11627   0058CA  5A34               	subwfb	(sqrtf@ix+1)^0,f,c
 11628   0058CC  5029               	movf	(sqrtf@t+2)^0,w,c
 11629   0058CE  5A35               	subwfb	(sqrtf@ix+2)^0,f,c
 11630   0058D0  502A               	movf	(sqrtf@t+3)^0,w,c
 11631   0058D2  5A36               	subwfb	(sqrtf@ix+3)^0,f,c
 11632   0058D4  502F               	movf	sqrtf@r^0,w,c
 11633   0058D6  2623               	addwf	sqrtf@q^0,f,c
 11634   0058D8  5030               	movf	(sqrtf@r+1)^0,w,c
 11635   0058DA  2224               	addwfc	(sqrtf@q+1)^0,f,c
 11636   0058DC  5031               	movf	(sqrtf@r+2)^0,w,c
 11637   0058DE  2225               	addwfc	(sqrtf@q+2)^0,f,c
 11638   0058E0  5032               	movf	(sqrtf@r+3)^0,w,c
 11639   0058E2  2226               	addwfc	(sqrtf@q+3)^0,f,c
 11640   0058E4                     l1480:
 11641   0058E4  5033               	movf	sqrtf@ix^0,w,c
 11642   0058E6  2633               	addwf	sqrtf@ix^0,f,c
 11643   0058E8  5034               	movf	(sqrtf@ix+1)^0,w,c
 11644   0058EA  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11645   0058EC  5035               	movf	(sqrtf@ix+2)^0,w,c
 11646   0058EE  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11647   0058F0  5036               	movf	(sqrtf@ix+3)^0,w,c
 11648   0058F2  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11649   0058F4  90D8               	bcf	status,0,c
 11650   0058F6  3232               	rrcf	(sqrtf@r+3)^0,f,c
 11651   0058F8  3231               	rrcf	(sqrtf@r+2)^0,f,c
 11652   0058FA  3230               	rrcf	(sqrtf@r+1)^0,f,c
 11653   0058FC  322F               	rrcf	sqrtf@r^0,f,c
 11654   0058FE                     l4198:
 11655   0058FE  502F               	movf	sqrtf@r^0,w,c
 11656   005900  1030               	iorwf	(sqrtf@r+1)^0,w,c
 11657   005902  1031               	iorwf	(sqrtf@r+2)^0,w,c
 11658   005904  1032               	iorwf	(sqrtf@r+3)^0,w,c
 11659   005906  A4D8               	btfss	status,2,c
 11660   005908  EF88  F02C         	goto	u3901
 11661   00590C  EF8A  F02C         	goto	u3900
 11662   005910                     u3901:
 11663   005910  EF37  F02C         	goto	l4192
 11664   005914                     u3900:
 11665   005914  5033               	movf	sqrtf@ix^0,w,c
 11666   005916  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 11667   005918  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 11668   00591A  1036               	iorwf	(sqrtf@ix+3)^0,w,c
 11669   00591C  B4D8               	btfsc	status,2,c
 11670   00591E  EF93  F02C         	goto	u3911
 11671   005922  EF95  F02C         	goto	u3910
 11672   005926                     u3911:
 11673   005926  EFA9  F02C         	goto	l1482
 11674   00592A                     u3910:
 11675   00592A  0E01               	movlw	1
 11676   00592C  1423               	andwf	sqrtf@q^0,w,c
 11677   00592E  6E16               	movwf	??_sqrtf^0,c
 11678   005930  0E00               	movlw	0
 11679   005932  1424               	andwf	(sqrtf@q+1)^0,w,c
 11680   005934  6E17               	movwf	(??_sqrtf+1)^0,c
 11681   005936  0E00               	movlw	0
 11682   005938  1425               	andwf	(sqrtf@q+2)^0,w,c
 11683   00593A  6E18               	movwf	(??_sqrtf+2)^0,c
 11684   00593C  0E00               	movlw	0
 11685   00593E  1426               	andwf	(sqrtf@q+3)^0,w,c
 11686   005940  6E19               	movwf	(??_sqrtf+3)^0,c
 11687   005942  5016               	movf	??_sqrtf^0,w,c
 11688   005944  2623               	addwf	sqrtf@q^0,f,c
 11689   005946  5017               	movf	(??_sqrtf+1)^0,w,c
 11690   005948  2224               	addwfc	(sqrtf@q+1)^0,f,c
 11691   00594A  5018               	movf	(??_sqrtf+2)^0,w,c
 11692   00594C  2225               	addwfc	(sqrtf@q+2)^0,f,c
 11693   00594E  5019               	movf	(??_sqrtf+3)^0,w,c
 11694   005950  2226               	addwfc	(sqrtf@q+3)^0,f,c
 11695   005952                     l1482:
 11696   005952  C023  F016         	movff	sqrtf@q,??_sqrtf
 11697   005956  C024  F017         	movff	sqrtf@q+1,??_sqrtf+1
 11698   00595A  C025  F018         	movff	sqrtf@q+2,??_sqrtf+2
 11699   00595E  C026  F019         	movff	sqrtf@q+3,??_sqrtf+3
 11700   005962  3419               	rlcf	(??_sqrtf+3)^0,w,c
 11701   005964  3219               	rrcf	(??_sqrtf+3)^0,f,c
 11702   005966  3218               	rrcf	(??_sqrtf+2)^0,f,c
 11703   005968  3217               	rrcf	(??_sqrtf+1)^0,f,c
 11704   00596A  3216               	rrcf	??_sqrtf^0,f,c
 11705   00596C  0E00               	movlw	0
 11706   00596E  2416               	addwf	??_sqrtf^0,w,c
 11707   005970  6E33               	movwf	sqrtf@ix^0,c
 11708   005972  0E00               	movlw	0
 11709   005974  2017               	addwfc	(??_sqrtf+1)^0,w,c
 11710   005976  6E34               	movwf	(sqrtf@ix+1)^0,c
 11711   005978  0E00               	movlw	0
 11712   00597A  2018               	addwfc	(??_sqrtf+2)^0,w,c
 11713   00597C  6E35               	movwf	(sqrtf@ix+2)^0,c
 11714   00597E  0E3F               	movlw	63
 11715   005980  2019               	addwfc	(??_sqrtf+3)^0,w,c
 11716   005982  6E36               	movwf	(sqrtf@ix+3)^0,c
 11717   005984  C02B  F016         	movff	sqrtf@m,??_sqrtf
 11718   005988  C02C  F017         	movff	sqrtf@m+1,??_sqrtf+1
 11719   00598C  C02D  F018         	movff	sqrtf@m+2,??_sqrtf+2
 11720   005990  C02E  F019         	movff	sqrtf@m+3,??_sqrtf+3
 11721   005994  0E17               	movlw	23
 11722   005996                     u3925:
 11723   005996  90D8               	bcf	status,0,c
 11724   005998  3616               	rlcf	??_sqrtf^0,f,c
 11725   00599A  3617               	rlcf	(??_sqrtf+1)^0,f,c
 11726   00599C  3618               	rlcf	(??_sqrtf+2)^0,f,c
 11727   00599E  3619               	rlcf	(??_sqrtf+3)^0,f,c
 11728   0059A0  2EE8               	decfsz	wreg,f,c
 11729   0059A2  EFCB  F02C         	goto	u3925
 11730   0059A6  5016               	movf	??_sqrtf^0,w,c
 11731   0059A8  2633               	addwf	sqrtf@ix^0,f,c
 11732   0059AA  5017               	movf	(??_sqrtf+1)^0,w,c
 11733   0059AC  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11734   0059AE  5018               	movf	(??_sqrtf+2)^0,w,c
 11735   0059B0  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11736   0059B2  5019               	movf	(??_sqrtf+3)^0,w,c
 11737   0059B4  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11738   0059B6  EF37  F02B         	goto	l4152
 11739   0059BA                     l1469:
 11740   0059BA  0012               	return		;funcret
 11741   0059BC                     __end_of_sqrtf:
 11742                           	callstack 0
 11743                           
 11744 ;; *************** function _scalbnf *****************
 11745 ;; Defined at:
 11746 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\scalbnf.c"
 11747 ;; Parameters:    Size  Location     Type
 11748 ;;  x               4   42[COMRAM] float 
 11749 ;;  n               2   46[COMRAM] int 
 11750 ;; Auto vars:     Size  Location     Type
 11751 ;;  y               4   56[COMRAM] float 
 11752 ;;  u               4   52[COMRAM] struct .
 11753 ;; Return value:  Size  Location     Type
 11754 ;;                  4   42[COMRAM] float 
 11755 ;; Registers used:
 11756 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11757 ;; Tracked objects:
 11758 ;;		On entry : 0/0
 11759 ;;		On exit  : 0/0
 11760 ;;		Unchanged: 0/0
 11761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11762 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11763 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11764 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11765 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11766 ;;Total ram usage:       18 bytes
 11767 ;; Hardware stack levels used: 1
 11768 ;; Hardware stack levels required when called: 3
 11769 ;; This function calls:
 11770 ;;		___flmul
 11771 ;; This function is called by:
 11772 ;;		_powf
 11773 ;; This function uses a non-reentrant model
 11774 ;;
 11775                           
 11776                           	psect	text31
 11777   005D56                     __ptext31:
 11778                           	callstack 0
 11779   005D56                     _scalbnf:
 11780                           	callstack 25
 11781   005D56  C02B  F039         	movff	scalbnf@x,scalbnf@y
 11782   005D5A  C02C  F03A         	movff	scalbnf@x+1,scalbnf@y+1
 11783   005D5E  C02D  F03B         	movff	scalbnf@x+2,scalbnf@y+2
 11784   005D62  C02E  F03C         	movff	scalbnf@x+3,scalbnf@y+3
 11785   005D66  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11786   005D68  EFBF  F02E         	goto	u4441
 11787   005D6C  5030               	movf	(scalbnf@n+1)^0,w,c
 11788   005D6E  E109               	bnz	u4440
 11789   005D70  0E80               	movlw	128
 11790   005D72  5C2F               	subwf	scalbnf@n^0,w,c
 11791   005D74  A0D8               	btfss	status,0,c
 11792   005D76  EFBF  F02E         	goto	u4441
 11793   005D7A  EFC1  F02E         	goto	u4440
 11794   005D7E                     u4441:
 11795   005D7E  EF1F  F02F         	goto	l4512
 11796   005D82                     u4440:
 11797   005D82  C039  F012         	movff	scalbnf@y,___flmul@b
 11798   005D86  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11799   005D8A  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11800   005D8E  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11801   005D92  0E00               	movlw	0
 11802   005D94  6E16               	movwf	___flmul@a^0,c
 11803   005D96  0E00               	movlw	0
 11804   005D98  6E17               	movwf	(___flmul@a+1)^0,c
 11805   005D9A  0E00               	movlw	0
 11806   005D9C  6E18               	movwf	(___flmul@a+2)^0,c
 11807   005D9E  0E7F               	movlw	127
 11808   005DA0  6E19               	movwf	(___flmul@a+3)^0,c
 11809   005DA2  ECDA  F028         	call	___flmul	;wreg free
 11810   005DA6  C012  F039         	movff	?___flmul,scalbnf@y
 11811   005DAA  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11812   005DAE  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11813   005DB2  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11814   005DB6  0E81               	movlw	129
 11815   005DB8  262F               	addwf	scalbnf@n^0,f,c
 11816   005DBA  0EFF               	movlw	255
 11817   005DBC  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11818   005DBE  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11819   005DC0  EFEB  F02E         	goto	u4451
 11820   005DC4  5030               	movf	(scalbnf@n+1)^0,w,c
 11821   005DC6  E109               	bnz	u4450
 11822   005DC8  0E80               	movlw	128
 11823   005DCA  5C2F               	subwf	scalbnf@n^0,w,c
 11824   005DCC  A0D8               	btfss	status,0,c
 11825   005DCE  EFEB  F02E         	goto	u4451
 11826   005DD2  EFED  F02E         	goto	u4450
 11827   005DD6                     u4451:
 11828   005DD6  EF89  F02F         	goto	l4528
 11829   005DDA                     u4450:
 11830   005DDA  C039  F012         	movff	scalbnf@y,___flmul@b
 11831   005DDE  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11832   005DE2  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11833   005DE6  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11834   005DEA  0E00               	movlw	0
 11835   005DEC  6E16               	movwf	___flmul@a^0,c
 11836   005DEE  0E00               	movlw	0
 11837   005DF0  6E17               	movwf	(___flmul@a+1)^0,c
 11838   005DF2  0E00               	movlw	0
 11839   005DF4  6E18               	movwf	(___flmul@a+2)^0,c
 11840   005DF6  0E7F               	movlw	127
 11841   005DF8  6E19               	movwf	(___flmul@a+3)^0,c
 11842   005DFA  ECDA  F028         	call	___flmul	;wreg free
 11843   005DFE  C012  F039         	movff	?___flmul,scalbnf@y
 11844   005E02  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11845   005E06  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11846   005E0A  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11847   005E0E  0E81               	movlw	129
 11848   005E10  262F               	addwf	scalbnf@n^0,f,c
 11849   005E12  0EFF               	movlw	255
 11850   005E14  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11851   005E16  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11852   005E18  EF17  F02F         	goto	u4461
 11853   005E1C  5030               	movf	(scalbnf@n+1)^0,w,c
 11854   005E1E  E109               	bnz	u4460
 11855   005E20  0E80               	movlw	128
 11856   005E22  5C2F               	subwf	scalbnf@n^0,w,c
 11857   005E24  A0D8               	btfss	status,0,c
 11858   005E26  EF17  F02F         	goto	u4461
 11859   005E2A  EF19  F02F         	goto	u4460
 11860   005E2E                     u4461:
 11861   005E2E  EF89  F02F         	goto	l4528
 11862   005E32                     u4460:
 11863   005E32  0E00               	movlw	0
 11864   005E34  6E30               	movwf	(scalbnf@n+1)^0,c
 11865   005E36  0E7F               	movlw	127
 11866   005E38  6E2F               	movwf	scalbnf@n^0,c
 11867   005E3A  EF89  F02F         	goto	l4528
 11868   005E3E                     l4512:
 11869   005E3E  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11870   005E40  EF2B  F02F         	goto	u4471
 11871   005E44  0E82               	movlw	130
 11872   005E46  5C2F               	subwf	scalbnf@n^0,w,c
 11873   005E48  0EFF               	movlw	255
 11874   005E4A  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11875   005E4C  B0D8               	btfsc	status,0,c
 11876   005E4E  EF2B  F02F         	goto	u4471
 11877   005E52  EF2D  F02F         	goto	u4470
 11878   005E56                     u4471:
 11879   005E56  EF89  F02F         	goto	l4528
 11880   005E5A                     u4470:
 11881   005E5A  C039  F012         	movff	scalbnf@y,___flmul@b
 11882   005E5E  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11883   005E62  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11884   005E66  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11885   005E6A  0E00               	movlw	0
 11886   005E6C  6E16               	movwf	___flmul@a^0,c
 11887   005E6E  0E00               	movlw	0
 11888   005E70  6E17               	movwf	(___flmul@a+1)^0,c
 11889   005E72  0E80               	movlw	128
 11890   005E74  6E18               	movwf	(___flmul@a+2)^0,c
 11891   005E76  0E0C               	movlw	12
 11892   005E78  6E19               	movwf	(___flmul@a+3)^0,c
 11893   005E7A  ECDA  F028         	call	___flmul	;wreg free
 11894   005E7E  C012  F039         	movff	?___flmul,scalbnf@y
 11895   005E82  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11896   005E86  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11897   005E8A  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11898   005E8E  0E66               	movlw	102
 11899   005E90  262F               	addwf	scalbnf@n^0,f,c
 11900   005E92  0E00               	movlw	0
 11901   005E94  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11902   005E96  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11903   005E98  EF57  F02F         	goto	u4481
 11904   005E9C  0E82               	movlw	130
 11905   005E9E  5C2F               	subwf	scalbnf@n^0,w,c
 11906   005EA0  0EFF               	movlw	255
 11907   005EA2  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11908   005EA4  B0D8               	btfsc	status,0,c
 11909   005EA6  EF57  F02F         	goto	u4481
 11910   005EAA  EF59  F02F         	goto	u4480
 11911   005EAE                     u4481:
 11912   005EAE  EF89  F02F         	goto	l4528
 11913   005EB2                     u4480:
 11914   005EB2  C039  F012         	movff	scalbnf@y,___flmul@b
 11915   005EB6  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11916   005EBA  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11917   005EBE  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11918   005EC2  0E00               	movlw	0
 11919   005EC4  6E16               	movwf	___flmul@a^0,c
 11920   005EC6  0E00               	movlw	0
 11921   005EC8  6E17               	movwf	(___flmul@a+1)^0,c
 11922   005ECA  0E80               	movlw	128
 11923   005ECC  6E18               	movwf	(___flmul@a+2)^0,c
 11924   005ECE  0E0C               	movlw	12
 11925   005ED0  6E19               	movwf	(___flmul@a+3)^0,c
 11926   005ED2  ECDA  F028         	call	___flmul	;wreg free
 11927   005ED6  C012  F039         	movff	?___flmul,scalbnf@y
 11928   005EDA  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11929   005EDE  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11930   005EE2  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11931   005EE6  0E66               	movlw	102
 11932   005EE8  262F               	addwf	scalbnf@n^0,f,c
 11933   005EEA  0E00               	movlw	0
 11934   005EEC  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11935   005EEE  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11936   005EF0  EF83  F02F         	goto	u4491
 11937   005EF4  0E82               	movlw	130
 11938   005EF6  5C2F               	subwf	scalbnf@n^0,w,c
 11939   005EF8  0EFF               	movlw	255
 11940   005EFA  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11941   005EFC  B0D8               	btfsc	status,0,c
 11942   005EFE  EF83  F02F         	goto	u4491
 11943   005F02  EF85  F02F         	goto	u4490
 11944   005F06                     u4491:
 11945   005F06  EF89  F02F         	goto	l4528
 11946   005F0A                     u4490:
 11947   005F0A  0EFF               	movlw	255
 11948   005F0C  6E30               	movwf	(scalbnf@n+1)^0,c
 11949   005F0E  0E82               	movlw	130
 11950   005F10  6E2F               	movwf	scalbnf@n^0,c
 11951   005F12                     l4528:
 11952   005F12  0E7F               	movlw	127
 11953   005F14  242F               	addwf	scalbnf@n^0,w,c
 11954   005F16  6E31               	movwf	??_scalbnf^0,c
 11955   005F18  0E00               	movlw	0
 11956   005F1A  2030               	addwfc	(scalbnf@n+1)^0,w,c
 11957   005F1C  6E32               	movwf	(??_scalbnf+1)^0,c
 11958   005F1E  6A33               	clrf	(??_scalbnf+2)^0,c
 11959   005F20  6A34               	clrf	(??_scalbnf+3)^0,c
 11960   005F22  0E17               	movlw	23
 11961   005F24                     u4505:
 11962   005F24  90D8               	bcf	status,0,c
 11963   005F26  3631               	rlcf	??_scalbnf^0,f,c
 11964   005F28  3632               	rlcf	(??_scalbnf+1)^0,f,c
 11965   005F2A  3633               	rlcf	(??_scalbnf+2)^0,f,c
 11966   005F2C  3634               	rlcf	(??_scalbnf+3)^0,f,c
 11967   005F2E  2EE8               	decfsz	wreg,f,c
 11968   005F30  EF92  F02F         	goto	u4505
 11969   005F34  C031  F035         	movff	??_scalbnf,scalbnf@u
 11970   005F38  C032  F036         	movff	??_scalbnf+1,scalbnf@u+1
 11971   005F3C  C033  F037         	movff	??_scalbnf+2,scalbnf@u+2
 11972   005F40  C034  F038         	movff	??_scalbnf+3,scalbnf@u+3
 11973   005F44  C035  F012         	movff	scalbnf@u,___flmul@b
 11974   005F48  C036  F013         	movff	scalbnf@u+1,___flmul@b+1
 11975   005F4C  C037  F014         	movff	scalbnf@u+2,___flmul@b+2
 11976   005F50  C038  F015         	movff	scalbnf@u+3,___flmul@b+3
 11977   005F54  C039  F016         	movff	scalbnf@y,___flmul@a
 11978   005F58  C03A  F017         	movff	scalbnf@y+1,___flmul@a+1
 11979   005F5C  C03B  F018         	movff	scalbnf@y+2,___flmul@a+2
 11980   005F60  C03C  F019         	movff	scalbnf@y+3,___flmul@a+3
 11981   005F64  ECDA  F028         	call	___flmul	;wreg free
 11982   005F68  C012  F02B         	movff	?___flmul,scalbnf@x
 11983   005F6C  C013  F02C         	movff	?___flmul+1,scalbnf@x+1
 11984   005F70  C014  F02D         	movff	?___flmul+2,scalbnf@x+2
 11985   005F74  C015  F02E         	movff	?___flmul+3,scalbnf@x+3
 11986   005F78  C02B  F02B         	movff	scalbnf@x,?_scalbnf
 11987   005F7C  C02C  F02C         	movff	scalbnf@x+1,?_scalbnf+1
 11988   005F80  C02D  F02D         	movff	scalbnf@x+2,?_scalbnf+2
 11989   005F84  C02E  F02E         	movff	scalbnf@x+3,?_scalbnf+3
 11990   005F88  0012               	return		;funcret
 11991   005F8A                     __end_of_scalbnf:
 11992                           	callstack 0
 11993                           
 11994 ;; *************** function ___flmul *****************
 11995 ;; Defined at:
 11996 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;  b               4   17[COMRAM] float 
 11999 ;;  a               4   21[COMRAM] float 
 12000 ;; Auto vars:     Size  Location     Type
 12001 ;;  prod            4   36[COMRAM] struct .
 12002 ;;  grs             4   30[COMRAM] unsigned long 
 12003 ;;  temp            2   40[COMRAM] struct .
 12004 ;;  bexp            1   35[COMRAM] unsigned char 
 12005 ;;  aexp            1   34[COMRAM] unsigned char 
 12006 ;;  sign            1   29[COMRAM] unsigned char 
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  4   17[COMRAM] unsigned char 
 12009 ;; Registers used:
 12010 ;;		wreg, status,2, status,0, prodl, prodh
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 0/0
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12016 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12017 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12018 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12019 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12020 ;;Total ram usage:       25 bytes
 12021 ;; Hardware stack levels used: 1
 12022 ;; Hardware stack levels required when called: 2
 12023 ;; This function calls:
 12024 ;;		Nothing
 12025 ;; This function is called by:
 12026 ;;		_powf
 12027 ;;		_scalbnf
 12028 ;; This function uses a non-reentrant model
 12029 ;;
 12030                           
 12031                           	psect	text32
 12032   0051B4                     __ptext32:
 12033                           	callstack 0
 12034   0051B4                     ___flmul:
 12035                           	callstack 25
 12036   0051B4  5015               	movf	(___flmul@b+3)^0,w,c
 12037   0051B6  0B80               	andlw	128
 12038   0051B8  6E1E               	movwf	___flmul@sign^0,c
 12039   0051BA  5015               	movf	(___flmul@b+3)^0,w,c
 12040   0051BC  2415               	addwf	(___flmul@b+3)^0,w,c
 12041   0051BE  6E24               	movwf	___flmul@bexp^0,c
 12042   0051C0  AE14               	btfss	(___flmul@b+2)^0,7,c
 12043   0051C2  EFE5  F028         	goto	u3401
 12044   0051C6  EFE7  F028         	goto	u3400
 12045   0051CA                     u3401:
 12046   0051CA  EFE8  F028         	goto	l3886
 12047   0051CE                     u3400:
 12048   0051CE  8024               	bsf	___flmul@bexp^0,0,c
 12049   0051D0                     l3886:
 12050   0051D0  5024               	movf	___flmul@bexp^0,w,c
 12051   0051D2  B4D8               	btfsc	status,2,c
 12052   0051D4  EFEE  F028         	goto	u3411
 12053   0051D8  EFF0  F028         	goto	u3410
 12054   0051DC                     u3411:
 12055   0051DC  EF03  F029         	goto	l3894
 12056   0051E0                     u3410:
 12057   0051E0  2824               	incf	___flmul@bexp^0,w,c
 12058   0051E2  A4D8               	btfss	status,2,c
 12059   0051E4  EFF6  F028         	goto	u3421
 12060   0051E8  EFF8  F028         	goto	u3420
 12061   0051EC                     u3421:
 12062   0051EC  EF00  F029         	goto	l3892
 12063   0051F0                     u3420:
 12064   0051F0  0E00               	movlw	0
 12065   0051F2  6E12               	movwf	___flmul@b^0,c
 12066   0051F4  0E00               	movlw	0
 12067   0051F6  6E13               	movwf	(___flmul@b+1)^0,c
 12068   0051F8  0E00               	movlw	0
 12069   0051FA  6E14               	movwf	(___flmul@b+2)^0,c
 12070   0051FC  0E00               	movlw	0
 12071   0051FE  6E15               	movwf	(___flmul@b+3)^0,c
 12072   005200                     l3892:
 12073   005200  8E14               	bsf	(___flmul@b+2)^0,7,c
 12074   005202  EF0B  F029         	goto	l3896
 12075   005206                     l3894:
 12076   005206  0E00               	movlw	0
 12077   005208  6E12               	movwf	___flmul@b^0,c
 12078   00520A  0E00               	movlw	0
 12079   00520C  6E13               	movwf	(___flmul@b+1)^0,c
 12080   00520E  0E00               	movlw	0
 12081   005210  6E14               	movwf	(___flmul@b+2)^0,c
 12082   005212  0E00               	movlw	0
 12083   005214  6E15               	movwf	(___flmul@b+3)^0,c
 12084   005216                     l3896:
 12085   005216  5019               	movf	(___flmul@a+3)^0,w,c
 12086   005218  0B80               	andlw	128
 12087   00521A  1A1E               	xorwf	___flmul@sign^0,f,c
 12088   00521C  5019               	movf	(___flmul@a+3)^0,w,c
 12089   00521E  2419               	addwf	(___flmul@a+3)^0,w,c
 12090   005220  6E23               	movwf	___flmul@aexp^0,c
 12091   005222  AE18               	btfss	(___flmul@a+2)^0,7,c
 12092   005224  EF16  F029         	goto	u3431
 12093   005228  EF18  F029         	goto	u3430
 12094   00522C                     u3431:
 12095   00522C  EF19  F029         	goto	l3904
 12096   005230                     u3430:
 12097   005230  8023               	bsf	___flmul@aexp^0,0,c
 12098   005232                     l3904:
 12099   005232  5023               	movf	___flmul@aexp^0,w,c
 12100   005234  B4D8               	btfsc	status,2,c
 12101   005236  EF1F  F029         	goto	u3441
 12102   00523A  EF21  F029         	goto	u3440
 12103   00523E                     u3441:
 12104   00523E  EF34  F029         	goto	l3912
 12105   005242                     u3440:
 12106   005242  2823               	incf	___flmul@aexp^0,w,c
 12107   005244  A4D8               	btfss	status,2,c
 12108   005246  EF27  F029         	goto	u3451
 12109   00524A  EF29  F029         	goto	u3450
 12110   00524E                     u3451:
 12111   00524E  EF31  F029         	goto	l3910
 12112   005252                     u3450:
 12113   005252  0E00               	movlw	0
 12114   005254  6E16               	movwf	___flmul@a^0,c
 12115   005256  0E00               	movlw	0
 12116   005258  6E17               	movwf	(___flmul@a+1)^0,c
 12117   00525A  0E00               	movlw	0
 12118   00525C  6E18               	movwf	(___flmul@a+2)^0,c
 12119   00525E  0E00               	movlw	0
 12120   005260  6E19               	movwf	(___flmul@a+3)^0,c
 12121   005262                     l3910:
 12122   005262  8E18               	bsf	(___flmul@a+2)^0,7,c
 12123   005264  EF3C  F029         	goto	l1182
 12124   005268                     l3912:
 12125   005268  0E00               	movlw	0
 12126   00526A  6E16               	movwf	___flmul@a^0,c
 12127   00526C  0E00               	movlw	0
 12128   00526E  6E17               	movwf	(___flmul@a+1)^0,c
 12129   005270  0E00               	movlw	0
 12130   005272  6E18               	movwf	(___flmul@a+2)^0,c
 12131   005274  0E00               	movlw	0
 12132   005276  6E19               	movwf	(___flmul@a+3)^0,c
 12133   005278                     l1182:
 12134   005278  5023               	movf	___flmul@aexp^0,w,c
 12135   00527A  B4D8               	btfsc	status,2,c
 12136   00527C  EF42  F029         	goto	u3461
 12137   005280  EF44  F029         	goto	u3460
 12138   005284                     u3461:
 12139   005284  EF4C  F029         	goto	l3916
 12140   005288                     u3460:
 12141   005288  5024               	movf	___flmul@bexp^0,w,c
 12142   00528A  A4D8               	btfss	status,2,c
 12143   00528C  EF4A  F029         	goto	u3471
 12144   005290  EF4C  F029         	goto	u3470
 12145   005294                     u3471:
 12146   005294  EF56  F029         	goto	l3920
 12147   005298                     u3470:
 12148   005298                     l3916:
 12149   005298  0E00               	movlw	0
 12150   00529A  6E12               	movwf	?___flmul^0,c
 12151   00529C  0E00               	movlw	0
 12152   00529E  6E13               	movwf	(?___flmul+1)^0,c
 12153   0052A0  0E00               	movlw	0
 12154   0052A2  6E14               	movwf	(?___flmul+2)^0,c
 12155   0052A4  0E00               	movlw	0
 12156   0052A6  6E15               	movwf	(?___flmul+3)^0,c
 12157   0052A8  EFEE  F02A         	goto	l1186
 12158   0052AC                     l3920:
 12159   0052AC  5018               	movf	(___flmul@a+2)^0,w,c
 12160   0052AE  0212               	mulwf	___flmul@b^0,c
 12161   0052B0  CFF3 F029          	movff	prodl,___flmul@temp
 12162   0052B4  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12163   0052B8  5029               	movf	___flmul@temp^0,w,c
 12164   0052BA  6E1F               	movwf	___flmul@grs^0,c
 12165   0052BC  6A20               	clrf	(___flmul@grs+1)^0,c
 12166   0052BE  6A21               	clrf	(___flmul@grs+2)^0,c
 12167   0052C0  6A22               	clrf	(___flmul@grs+3)^0,c
 12168   0052C2  502A               	movf	(___flmul@temp+1)^0,w,c
 12169   0052C4  6E25               	movwf	___flmul@prod^0,c
 12170   0052C6  6A26               	clrf	(___flmul@prod+1)^0,c
 12171   0052C8  6A27               	clrf	(___flmul@prod+2)^0,c
 12172   0052CA  6A28               	clrf	(___flmul@prod+3)^0,c
 12173   0052CC  5017               	movf	(___flmul@a+1)^0,w,c
 12174   0052CE  0213               	mulwf	(___flmul@b+1)^0,c
 12175   0052D0  CFF3 F029          	movff	prodl,___flmul@temp
 12176   0052D4  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12177   0052D8  5029               	movf	___flmul@temp^0,w,c
 12178   0052DA  261F               	addwf	___flmul@grs^0,f,c
 12179   0052DC  0E00               	movlw	0
 12180   0052DE  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12181   0052E0  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12182   0052E2  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12183   0052E4  502A               	movf	(___flmul@temp+1)^0,w,c
 12184   0052E6  2625               	addwf	___flmul@prod^0,f,c
 12185   0052E8  0E00               	movlw	0
 12186   0052EA  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12187   0052EC  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12188   0052EE  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12189   0052F0  5016               	movf	___flmul@a^0,w,c
 12190   0052F2  0214               	mulwf	(___flmul@b+2)^0,c
 12191   0052F4  CFF3 F029          	movff	prodl,___flmul@temp
 12192   0052F8  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12193   0052FC  5029               	movf	___flmul@temp^0,w,c
 12194   0052FE  261F               	addwf	___flmul@grs^0,f,c
 12195   005300  0E00               	movlw	0
 12196   005302  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12197   005304  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12198   005306  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12199   005308  502A               	movf	(___flmul@temp+1)^0,w,c
 12200   00530A  2625               	addwf	___flmul@prod^0,f,c
 12201   00530C  0E00               	movlw	0
 12202   00530E  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12203   005310  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12204   005312  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12205   005314  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12206   005318  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12207   00531C  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12208   005320  6A1F               	clrf	___flmul@grs^0,c
 12209   005322  5016               	movf	___flmul@a^0,w,c
 12210   005324  0213               	mulwf	(___flmul@b+1)^0,c
 12211   005326  CFF3 F029          	movff	prodl,___flmul@temp
 12212   00532A  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12213   00532E  5029               	movf	___flmul@temp^0,w,c
 12214   005330  261F               	addwf	___flmul@grs^0,f,c
 12215   005332  502A               	movf	(___flmul@temp+1)^0,w,c
 12216   005334  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12217   005336  0E00               	movlw	0
 12218   005338  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12219   00533A  0E00               	movlw	0
 12220   00533C  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12221   00533E  5017               	movf	(___flmul@a+1)^0,w,c
 12222   005340  0212               	mulwf	___flmul@b^0,c
 12223   005342  CFF3 F029          	movff	prodl,___flmul@temp
 12224   005346  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12225   00534A  5029               	movf	___flmul@temp^0,w,c
 12226   00534C  261F               	addwf	___flmul@grs^0,f,c
 12227   00534E  502A               	movf	(___flmul@temp+1)^0,w,c
 12228   005350  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12229   005352  0E00               	movlw	0
 12230   005354  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12231   005356  0E00               	movlw	0
 12232   005358  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12233   00535A  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12234   00535E  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12235   005362  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12236   005366  6A1F               	clrf	___flmul@grs^0,c
 12237   005368  5016               	movf	___flmul@a^0,w,c
 12238   00536A  0212               	mulwf	___flmul@b^0,c
 12239   00536C  CFF3 F029          	movff	prodl,___flmul@temp
 12240   005370  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12241   005374  5029               	movf	___flmul@temp^0,w,c
 12242   005376  261F               	addwf	___flmul@grs^0,f,c
 12243   005378  502A               	movf	(___flmul@temp+1)^0,w,c
 12244   00537A  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12245   00537C  0E00               	movlw	0
 12246   00537E  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12247   005380  0E00               	movlw	0
 12248   005382  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12249   005384  5018               	movf	(___flmul@a+2)^0,w,c
 12250   005386  0213               	mulwf	(___flmul@b+1)^0,c
 12251   005388  CFF3 F029          	movff	prodl,___flmul@temp
 12252   00538C  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12253   005390  5029               	movf	___flmul@temp^0,w,c
 12254   005392  2625               	addwf	___flmul@prod^0,f,c
 12255   005394  502A               	movf	(___flmul@temp+1)^0,w,c
 12256   005396  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12257   005398  0E00               	movlw	0
 12258   00539A  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12259   00539C  0E00               	movlw	0
 12260   00539E  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12261   0053A0  5017               	movf	(___flmul@a+1)^0,w,c
 12262   0053A2  0214               	mulwf	(___flmul@b+2)^0,c
 12263   0053A4  CFF3 F029          	movff	prodl,___flmul@temp
 12264   0053A8  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12265   0053AC  5029               	movf	___flmul@temp^0,w,c
 12266   0053AE  2625               	addwf	___flmul@prod^0,f,c
 12267   0053B0  502A               	movf	(___flmul@temp+1)^0,w,c
 12268   0053B2  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12269   0053B4  0E00               	movlw	0
 12270   0053B6  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12271   0053B8  0E00               	movlw	0
 12272   0053BA  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12273   0053BC  5018               	movf	(___flmul@a+2)^0,w,c
 12274   0053BE  0214               	mulwf	(___flmul@b+2)^0,c
 12275   0053C0  CFF3 F029          	movff	prodl,___flmul@temp
 12276   0053C4  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12277   0053C8  5029               	movf	___flmul@temp^0,w,c
 12278   0053CA  6E1A               	movwf	??___flmul^0,c
 12279   0053CC  502A               	movf	(___flmul@temp+1)^0,w,c
 12280   0053CE  6E1B               	movwf	(??___flmul+1)^0,c
 12281   0053D0  6A1C               	clrf	(??___flmul+2)^0,c
 12282   0053D2  6A1D               	clrf	(??___flmul+3)^0,c
 12283   0053D4  C01C  F01D         	movff	??___flmul+2,??___flmul+3
 12284   0053D8  C01B  F01C         	movff	??___flmul+1,??___flmul+2
 12285   0053DC  C01A  F01B         	movff	??___flmul,??___flmul+1
 12286   0053E0  6A1A               	clrf	??___flmul^0,c
 12287   0053E2  501A               	movf	??___flmul^0,w,c
 12288   0053E4  2625               	addwf	___flmul@prod^0,f,c
 12289   0053E6  501B               	movf	(??___flmul+1)^0,w,c
 12290   0053E8  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12291   0053EA  501C               	movf	(??___flmul+2)^0,w,c
 12292   0053EC  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12293   0053EE  501D               	movf	(??___flmul+3)^0,w,c
 12294   0053F0  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12295   0053F2  C01F  F01A         	movff	___flmul@grs,??___flmul
 12296   0053F6  C020  F01B         	movff	___flmul@grs+1,??___flmul+1
 12297   0053FA  C021  F01C         	movff	___flmul@grs+2,??___flmul+2
 12298   0053FE  C022  F01D         	movff	___flmul@grs+3,??___flmul+3
 12299   005402  0E19               	movlw	25
 12300   005404  EF09  F02A         	goto	u3480
 12301   005408                     u3485:
 12302   005408  90D8               	bcf	status,0,c
 12303   00540A  321D               	rrcf	(??___flmul+3)^0,f,c
 12304   00540C  321C               	rrcf	(??___flmul+2)^0,f,c
 12305   00540E  321B               	rrcf	(??___flmul+1)^0,f,c
 12306   005410  321A               	rrcf	??___flmul^0,f,c
 12307   005412                     u3480:
 12308   005412  2EE8               	decfsz	wreg,f,c
 12309   005414  EF04  F02A         	goto	u3485
 12310   005418  501A               	movf	??___flmul^0,w,c
 12311   00541A  2625               	addwf	___flmul@prod^0,f,c
 12312   00541C  501B               	movf	(??___flmul+1)^0,w,c
 12313   00541E  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12314   005420  501C               	movf	(??___flmul+2)^0,w,c
 12315   005422  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12316   005424  501D               	movf	(??___flmul+3)^0,w,c
 12317   005426  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12318   005428  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12319   00542C  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12320   005430  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12321   005434  6A1F               	clrf	___flmul@grs^0,c
 12322   005436  5023               	movf	___flmul@aexp^0,w,c
 12323   005438  C024  F01A         	movff	___flmul@bexp,??___flmul
 12324   00543C  6A1B               	clrf	(??___flmul+1)^0,c
 12325   00543E  261A               	addwf	??___flmul^0,f,c
 12326   005440  0E00               	movlw	0
 12327   005442  221B               	addwfc	(??___flmul+1)^0,f,c
 12328   005444  0E82               	movlw	130
 12329   005446  241A               	addwf	??___flmul^0,w,c
 12330   005448  6E29               	movwf	___flmul@temp^0,c
 12331   00544A  0EFF               	movlw	255
 12332   00544C  201B               	addwfc	(??___flmul+1)^0,w,c
 12333   00544E  6E2A               	movwf	(___flmul@temp+1)^0,c
 12334   005450  EF3F  F02A         	goto	l3968
 12335   005454                     l3962:
 12336   005454  90D8               	bcf	status,0,c
 12337   005456  3625               	rlcf	___flmul@prod^0,f,c
 12338   005458  3626               	rlcf	(___flmul@prod+1)^0,f,c
 12339   00545A  3627               	rlcf	(___flmul@prod+2)^0,f,c
 12340   00545C  3628               	rlcf	(___flmul@prod+3)^0,f,c
 12341   00545E  AE22               	btfss	(___flmul@grs+3)^0,7,c
 12342   005460  EF34  F02A         	goto	u3491
 12343   005464  EF36  F02A         	goto	u3490
 12344   005468                     u3491:
 12345   005468  EF37  F02A         	goto	l1189
 12346   00546C                     u3490:
 12347   00546C  8025               	bsf	___flmul@prod^0,0,c
 12348   00546E                     l1189:
 12349   00546E  90D8               	bcf	status,0,c
 12350   005470  361F               	rlcf	___flmul@grs^0,f,c
 12351   005472  3620               	rlcf	(___flmul@grs+1)^0,f,c
 12352   005474  3621               	rlcf	(___flmul@grs+2)^0,f,c
 12353   005476  3622               	rlcf	(___flmul@grs+3)^0,f,c
 12354   005478  0629               	decf	___flmul@temp^0,f,c
 12355   00547A  A0D8               	btfss	status,0,c
 12356   00547C  062A               	decf	(___flmul@temp+1)^0,f,c
 12357   00547E                     l3968:
 12358   00547E  AE27               	btfss	(___flmul@prod+2)^0,7,c
 12359   005480  EF44  F02A         	goto	u3501
 12360   005484  EF46  F02A         	goto	u3500
 12361   005488                     u3501:
 12362   005488  EF2A  F02A         	goto	l3962
 12363   00548C                     u3500:
 12364   00548C  0E00               	movlw	0
 12365   00548E  6E23               	movwf	___flmul@aexp^0,c
 12366   005490  AE22               	btfss	(___flmul@grs+3)^0,7,c
 12367   005492  EF4D  F02A         	goto	u3511
 12368   005496  EF4F  F02A         	goto	u3510
 12369   00549A                     u3511:
 12370   00549A  EF73  F02A         	goto	l1191
 12371   00549E                     u3510:
 12372   00549E  0EFF               	movlw	255
 12373   0054A0  141F               	andwf	___flmul@grs^0,w,c
 12374   0054A2  6E1A               	movwf	??___flmul^0,c
 12375   0054A4  0EFF               	movlw	255
 12376   0054A6  1420               	andwf	(___flmul@grs+1)^0,w,c
 12377   0054A8  6E1B               	movwf	(??___flmul+1)^0,c
 12378   0054AA  0EFF               	movlw	255
 12379   0054AC  1421               	andwf	(___flmul@grs+2)^0,w,c
 12380   0054AE  6E1C               	movwf	(??___flmul+2)^0,c
 12381   0054B0  0E7F               	movlw	127
 12382   0054B2  1422               	andwf	(___flmul@grs+3)^0,w,c
 12383   0054B4  6E1D               	movwf	(??___flmul+3)^0,c
 12384   0054B6  501A               	movf	??___flmul^0,w,c
 12385   0054B8  101B               	iorwf	(??___flmul+1)^0,w,c
 12386   0054BA  101C               	iorwf	(??___flmul+2)^0,w,c
 12387   0054BC  101D               	iorwf	(??___flmul+3)^0,w,c
 12388   0054BE  B4D8               	btfsc	status,2,c
 12389   0054C0  EF64  F02A         	goto	u3521
 12390   0054C4  EF66  F02A         	goto	u3520
 12391   0054C8                     u3521:
 12392   0054C8  EF6A  F02A         	goto	l1192
 12393   0054CC                     u3520:
 12394   0054CC                     l3976:
 12395   0054CC  0E01               	movlw	1
 12396   0054CE  6E23               	movwf	___flmul@aexp^0,c
 12397   0054D0  EF73  F02A         	goto	l1191
 12398   0054D4                     l1192:
 12399   0054D4  A025               	btfss	___flmul@prod^0,0,c
 12400   0054D6  EF6F  F02A         	goto	u3531
 12401   0054DA  EF71  F02A         	goto	u3530
 12402   0054DE                     u3531:
 12403   0054DE  EF73  F02A         	goto	l1191
 12404   0054E2                     u3530:
 12405   0054E2  EF66  F02A         	goto	l3976
 12406   0054E6                     l1191:
 12407   0054E6  5023               	movf	___flmul@aexp^0,w,c
 12408   0054E8  B4D8               	btfsc	status,2,c
 12409   0054EA  EF79  F02A         	goto	u3541
 12410   0054EE  EF7B  F02A         	goto	u3540
 12411   0054F2                     u3541:
 12412   0054F2  EF9F  F02A         	goto	l3988
 12413   0054F6                     u3540:
 12414   0054F6  0E01               	movlw	1
 12415   0054F8  2625               	addwf	___flmul@prod^0,f,c
 12416   0054FA  0E00               	movlw	0
 12417   0054FC  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12418   0054FE  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12419   005500  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12420   005502  A028               	btfss	(___flmul@prod+3)^0,0,c
 12421   005504  EF86  F02A         	goto	u3551
 12422   005508  EF88  F02A         	goto	u3550
 12423   00550C                     u3551:
 12424   00550C  EF9F  F02A         	goto	l3988
 12425   005510                     u3550:
 12426   005510  C025  F01A         	movff	___flmul@prod,??___flmul
 12427   005514  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
 12428   005518  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
 12429   00551C  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
 12430   005520  341D               	rlcf	(??___flmul+3)^0,w,c
 12431   005522  321D               	rrcf	(??___flmul+3)^0,f,c
 12432   005524  321C               	rrcf	(??___flmul+2)^0,f,c
 12433   005526  321B               	rrcf	(??___flmul+1)^0,f,c
 12434   005528  321A               	rrcf	??___flmul^0,f,c
 12435   00552A  C01A  F025         	movff	??___flmul,___flmul@prod
 12436   00552E  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
 12437   005532  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
 12438   005536  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
 12439   00553A  4A29               	infsnz	___flmul@temp^0,f,c
 12440   00553C  2A2A               	incf	(___flmul@temp+1)^0,f,c
 12441   00553E                     l3988:
 12442   00553E  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 12443   005540  EFAA  F02A         	goto	u3561
 12444   005544  502A               	movf	(___flmul@temp+1)^0,w,c
 12445   005546  E108               	bnz	u3560
 12446   005548  2829               	incf	___flmul@temp^0,w,c
 12447   00554A  A0D8               	btfss	status,0,c
 12448   00554C  EFAA  F02A         	goto	u3561
 12449   005550  EFAC  F02A         	goto	u3560
 12450   005554                     u3561:
 12451   005554  EFB6  F02A         	goto	l3992
 12452   005558                     u3560:
 12453   005558  0E00               	movlw	0
 12454   00555A  6E25               	movwf	___flmul@prod^0,c
 12455   00555C  0E00               	movlw	0
 12456   00555E  6E26               	movwf	(___flmul@prod+1)^0,c
 12457   005560  0E80               	movlw	128
 12458   005562  6E27               	movwf	(___flmul@prod+2)^0,c
 12459   005564  0E7F               	movlw	127
 12460   005566  6E28               	movwf	(___flmul@prod+3)^0,c
 12461   005568  EFE4  F02A         	goto	l4004
 12462   00556C                     l3992:
 12463   00556C  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 12464   00556E  EFC3  F02A         	goto	u3570
 12465   005572  502A               	movf	(___flmul@temp+1)^0,w,c
 12466   005574  E106               	bnz	u3571
 12467   005576  0429               	decf	___flmul@temp^0,w,c
 12468   005578  B0D8               	btfsc	status,0,c
 12469   00557A  EFC1  F02A         	goto	u3571
 12470   00557E  EFC3  F02A         	goto	u3570
 12471   005582                     u3571:
 12472   005582  EFCF  F02A         	goto	l1199
 12473   005586                     u3570:
 12474   005586  0E00               	movlw	0
 12475   005588  6E25               	movwf	___flmul@prod^0,c
 12476   00558A  0E00               	movlw	0
 12477   00558C  6E26               	movwf	(___flmul@prod+1)^0,c
 12478   00558E  0E00               	movlw	0
 12479   005590  6E27               	movwf	(___flmul@prod+2)^0,c
 12480   005592  0E00               	movlw	0
 12481   005594  6E28               	movwf	(___flmul@prod+3)^0,c
 12482   005596  0E00               	movlw	0
 12483   005598  6E1E               	movwf	___flmul@sign^0,c
 12484   00559A  EFE4  F02A         	goto	l4004
 12485   00559E                     l1199:
 12486   00559E  C029  F024         	movff	___flmul@temp,___flmul@bexp
 12487   0055A2  0EFF               	movlw	255
 12488   0055A4  1625               	andwf	___flmul@prod^0,f,c
 12489   0055A6  0EFF               	movlw	255
 12490   0055A8  1626               	andwf	(___flmul@prod+1)^0,f,c
 12491   0055AA  0E7F               	movlw	127
 12492   0055AC  1627               	andwf	(___flmul@prod+2)^0,f,c
 12493   0055AE  0E00               	movlw	0
 12494   0055B0  1628               	andwf	(___flmul@prod+3)^0,f,c
 12495   0055B2  A024               	btfss	___flmul@bexp^0,0,c
 12496   0055B4  EFDE  F02A         	goto	u3581
 12497   0055B8  EFE0  F02A         	goto	u3580
 12498   0055BC                     u3581:
 12499   0055BC  EFE1  F02A         	goto	l4002
 12500   0055C0                     u3580:
 12501   0055C0  8E27               	bsf	(___flmul@prod+2)^0,7,c
 12502   0055C2                     l4002:
 12503   0055C2  90D8               	bcf	status,0,c
 12504   0055C4  3024               	rrcf	___flmul@bexp^0,w,c
 12505   0055C6  6E28               	movwf	(___flmul@prod+3)^0,c
 12506   0055C8                     l4004:
 12507   0055C8  501E               	movf	___flmul@sign^0,w,c
 12508   0055CA  1228               	iorwf	(___flmul@prod+3)^0,f,c
 12509   0055CC  C025  F012         	movff	___flmul@prod,?___flmul
 12510   0055D0  C026  F013         	movff	___flmul@prod+1,?___flmul+1
 12511   0055D4  C027  F014         	movff	___flmul@prod+2,?___flmul+2
 12512   0055D8  C028  F015         	movff	___flmul@prod+3,?___flmul+3
 12513   0055DC                     l1186:
 12514   0055DC  0012               	return		;funcret
 12515   0055DE                     __end_of___flmul:
 12516                           	callstack 0
 12517                           
 12518 ;; *************** function ___xxtofl *****************
 12519 ;; Defined at:
 12520 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 12521 ;; Parameters:    Size  Location     Type
 12522 ;;  sign            1    wreg     unsigned char 
 12523 ;;  val             4    1[COMRAM] long 
 12524 ;; Auto vars:     Size  Location     Type
 12525 ;;  sign            1    9[COMRAM] unsigned char 
 12526 ;;  arg             4   11[COMRAM] unsigned long 
 12527 ;;  exp             1   10[COMRAM] unsigned char 
 12528 ;; Return value:  Size  Location     Type
 12529 ;;                  4    1[COMRAM] unsigned char 
 12530 ;; Registers used:
 12531 ;;		wreg, status,2, status,0
 12532 ;; Tracked objects:
 12533 ;;		On entry : 0/0
 12534 ;;		On exit  : 0/0
 12535 ;;		Unchanged: 0/0
 12536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12537 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12538 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12539 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12540 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12541 ;;Total ram usage:       14 bytes
 12542 ;; Hardware stack levels used: 1
 12543 ;; Hardware stack levels required when called: 2
 12544 ;; This function calls:
 12545 ;;		Nothing
 12546 ;; This function is called by:
 12547 ;;		_decide_action
 12548 ;;		_powf
 12549 ;; This function uses a non-reentrant model
 12550 ;;
 12551                           
 12552                           	psect	text33
 12553   006154                     __ptext33:
 12554                           	callstack 0
 12555   006154                     ___xxtofl:
 12556                           	callstack 26
 12557                           
 12558                           ;incstack = 0
 12559                           ;___xxtofl@sign stored from wreg
 12560   006154  6E0A               	movwf	___xxtofl@sign^0,c
 12561   006156  500A               	movf	___xxtofl@sign^0,w,c
 12562   006158  B4D8               	btfsc	status,2,c
 12563   00615A  EFB1  F030         	goto	u4241
 12564   00615E  EFB3  F030         	goto	u4240
 12565   006162                     u4241:
 12566   006162  EFD5  F030         	goto	l1223
 12567   006166                     u4240:
 12568   006166  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 12569   006168  EFBA  F030         	goto	u4250
 12570   00616C  EFB8  F030         	goto	u4251
 12571   006170                     u4251:
 12572   006170  EFD5  F030         	goto	l1223
 12573   006174                     u4250:
 12574   006174  C002  F006         	movff	___xxtofl@val,??___xxtofl
 12575   006178  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
 12576   00617C  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
 12577   006180  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
 12578   006184  1E06               	comf	??___xxtofl^0,f,c
 12579   006186  1E07               	comf	(??___xxtofl+1)^0,f,c
 12580   006188  1E08               	comf	(??___xxtofl+2)^0,f,c
 12581   00618A  1E09               	comf	(??___xxtofl+3)^0,f,c
 12582   00618C  2A06               	incf	??___xxtofl^0,f,c
 12583   00618E  0E00               	movlw	0
 12584   006190  2207               	addwfc	(??___xxtofl+1)^0,f,c
 12585   006192  2208               	addwfc	(??___xxtofl+2)^0,f,c
 12586   006194  2209               	addwfc	(??___xxtofl+3)^0,f,c
 12587   006196  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
 12588   00619A  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
 12589   00619E  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
 12590   0061A2  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
 12591   0061A6  EFDD  F030         	goto	l4404
 12592   0061AA                     l1223:
 12593   0061AA  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
 12594   0061AE  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12595   0061B2  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12596   0061B6  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12597   0061BA                     l4404:
 12598   0061BA  5002               	movf	___xxtofl@val^0,w,c
 12599   0061BC  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 12600   0061BE  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 12601   0061C0  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 12602   0061C2  A4D8               	btfss	status,2,c
 12603   0061C4  EFE6  F030         	goto	u4261
 12604   0061C8  EFE8  F030         	goto	u4260
 12605   0061CC                     u4261:
 12606   0061CC  EFF2  F030         	goto	l4410
 12607   0061D0                     u4260:
 12608   0061D0  0E00               	movlw	0
 12609   0061D2  6E02               	movwf	?___xxtofl^0,c
 12610   0061D4  0E00               	movlw	0
 12611   0061D6  6E03               	movwf	(?___xxtofl+1)^0,c
 12612   0061D8  0E00               	movlw	0
 12613   0061DA  6E04               	movwf	(?___xxtofl+2)^0,c
 12614   0061DC  0E00               	movlw	0
 12615   0061DE  6E05               	movwf	(?___xxtofl+3)^0,c
 12616   0061E0  EF83  F031         	goto	l1226
 12617   0061E4                     l4410:
 12618   0061E4  0E96               	movlw	150
 12619   0061E6  6E0B               	movwf	___xxtofl@exp^0,c
 12620   0061E8  EFFC  F030         	goto	l4414
 12621   0061EC                     l4412:
 12622   0061EC  2A0B               	incf	___xxtofl@exp^0,f,c
 12623   0061EE  90D8               	bcf	status,0,c
 12624   0061F0  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 12625   0061F2  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 12626   0061F4  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 12627   0061F6  320C               	rrcf	___xxtofl@arg^0,f,c
 12628   0061F8                     l4414:
 12629   0061F8  0E00               	movlw	0
 12630   0061FA  140C               	andwf	___xxtofl@arg^0,w,c
 12631   0061FC  6E06               	movwf	??___xxtofl^0,c
 12632   0061FE  0E00               	movlw	0
 12633   006200  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 12634   006202  6E07               	movwf	(??___xxtofl+1)^0,c
 12635   006204  0E00               	movlw	0
 12636   006206  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 12637   006208  6E08               	movwf	(??___xxtofl+2)^0,c
 12638   00620A  0EFE               	movlw	254
 12639   00620C  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 12640   00620E  6E09               	movwf	(??___xxtofl+3)^0,c
 12641   006210  5006               	movf	??___xxtofl^0,w,c
 12642   006212  1007               	iorwf	(??___xxtofl+1)^0,w,c
 12643   006214  1008               	iorwf	(??___xxtofl+2)^0,w,c
 12644   006216  1009               	iorwf	(??___xxtofl+3)^0,w,c
 12645   006218  A4D8               	btfss	status,2,c
 12646   00621A  EF11  F031         	goto	u4271
 12647   00621E  EF13  F031         	goto	u4270
 12648   006222                     u4271:
 12649   006222  EFF6  F030         	goto	l4412
 12650   006226                     u4270:
 12651   006226  EF21  F031         	goto	l1230
 12652   00622A                     l4416:
 12653   00622A  2A0B               	incf	___xxtofl@exp^0,f,c
 12654   00622C  0E01               	movlw	1
 12655   00622E  260C               	addwf	___xxtofl@arg^0,f,c
 12656   006230  0E00               	movlw	0
 12657   006232  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 12658   006234  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 12659   006236  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 12660   006238  90D8               	bcf	status,0,c
 12661   00623A  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 12662   00623C  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 12663   00623E  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 12664   006240  320C               	rrcf	___xxtofl@arg^0,f,c
 12665   006242                     l1230:
 12666   006242  0E00               	movlw	0
 12667   006244  140C               	andwf	___xxtofl@arg^0,w,c
 12668   006246  6E06               	movwf	??___xxtofl^0,c
 12669   006248  0E00               	movlw	0
 12670   00624A  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 12671   00624C  6E07               	movwf	(??___xxtofl+1)^0,c
 12672   00624E  0E00               	movlw	0
 12673   006250  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 12674   006252  6E08               	movwf	(??___xxtofl+2)^0,c
 12675   006254  0EFF               	movlw	255
 12676   006256  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 12677   006258  6E09               	movwf	(??___xxtofl+3)^0,c
 12678   00625A  5006               	movf	??___xxtofl^0,w,c
 12679   00625C  1007               	iorwf	(??___xxtofl+1)^0,w,c
 12680   00625E  1008               	iorwf	(??___xxtofl+2)^0,w,c
 12681   006260  1009               	iorwf	(??___xxtofl+3)^0,w,c
 12682   006262  A4D8               	btfss	status,2,c
 12683   006264  EF36  F031         	goto	u4281
 12684   006268  EF38  F031         	goto	u4280
 12685   00626C                     u4281:
 12686   00626C  EF15  F031         	goto	l4416
 12687   006270                     u4280:
 12688   006270  EF40  F031         	goto	l4424
 12689   006274                     l4422:
 12690   006274  060B               	decf	___xxtofl@exp^0,f,c
 12691   006276  90D8               	bcf	status,0,c
 12692   006278  360C               	rlcf	___xxtofl@arg^0,f,c
 12693   00627A  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 12694   00627C  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 12695   00627E  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 12696   006280                     l4424:
 12697   006280  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 12698   006282  EF45  F031         	goto	u4291
 12699   006286  EF47  F031         	goto	u4290
 12700   00628A                     u4291:
 12701   00628A  EF4F  F031         	goto	l1237
 12702   00628E                     u4290:
 12703   00628E  0E02               	movlw	2
 12704   006290  600B               	cpfslt	___xxtofl@exp^0,c
 12705   006292  EF4D  F031         	goto	u4301
 12706   006296  EF4F  F031         	goto	u4300
 12707   00629A                     u4301:
 12708   00629A  EF3A  F031         	goto	l4422
 12709   00629E                     u4300:
 12710   00629E                     l1237:
 12711   00629E  B00B               	btfsc	___xxtofl@exp^0,0,c
 12712   0062A0  EF54  F031         	goto	u4311
 12713   0062A4  EF56  F031         	goto	u4310
 12714   0062A8                     u4311:
 12715   0062A8  EF57  F031         	goto	l4430
 12716   0062AC                     u4310:
 12717   0062AC  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 12718   0062AE                     l4430:
 12719   0062AE  90D8               	bcf	status,0,c
 12720   0062B0  320B               	rrcf	___xxtofl@exp^0,f,c
 12721   0062B2  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
 12722   0062B6  6A07               	clrf	(??___xxtofl+1)^0,c
 12723   0062B8  6A08               	clrf	(??___xxtofl+2)^0,c
 12724   0062BA  6A09               	clrf	(??___xxtofl+3)^0,c
 12725   0062BC  C006  F009         	movff	??___xxtofl,??___xxtofl+3
 12726   0062C0  6A08               	clrf	(??___xxtofl+2)^0,c
 12727   0062C2  6A07               	clrf	(??___xxtofl+1)^0,c
 12728   0062C4  6A06               	clrf	??___xxtofl^0,c
 12729   0062C6  5006               	movf	??___xxtofl^0,w,c
 12730   0062C8  120C               	iorwf	___xxtofl@arg^0,f,c
 12731   0062CA  5007               	movf	(??___xxtofl+1)^0,w,c
 12732   0062CC  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 12733   0062CE  5008               	movf	(??___xxtofl+2)^0,w,c
 12734   0062D0  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 12735   0062D2  5009               	movf	(??___xxtofl+3)^0,w,c
 12736   0062D4  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 12737   0062D6  500A               	movf	___xxtofl@sign^0,w,c
 12738   0062D8  B4D8               	btfsc	status,2,c
 12739   0062DA  EF71  F031         	goto	u4321
 12740   0062DE  EF73  F031         	goto	u4320
 12741   0062E2                     u4321:
 12742   0062E2  EF7B  F031         	goto	l4440
 12743   0062E6                     u4320:
 12744   0062E6  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 12745   0062E8  EF7A  F031         	goto	u4330
 12746   0062EC  EF78  F031         	goto	u4331
 12747   0062F0                     u4331:
 12748   0062F0  EF7B  F031         	goto	l4440
 12749   0062F4                     u4330:
 12750   0062F4  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 12751   0062F6                     l4440:
 12752   0062F6  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
 12753   0062FA  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
 12754   0062FE  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
 12755   006302  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
 12756   006306                     l1226:
 12757   006306  0012               	return		;funcret
 12758   006308                     __end_of___xxtofl:
 12759                           	callstack 0
 12760                           
 12761 ;; *************** function ___flsub *****************
 12762 ;; Defined at:
 12763 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 12764 ;; Parameters:    Size  Location     Type
 12765 ;;  b               4   67[COMRAM] unsigned char 
 12766 ;;  a               4   71[COMRAM] unsigned char 
 12767 ;; Auto vars:     Size  Location     Type
 12768 ;;		None
 12769 ;; Return value:  Size  Location     Type
 12770 ;;                  4   67[COMRAM] unsigned char 
 12771 ;; Registers used:
 12772 ;;		wreg, status,2, status,0, cstack
 12773 ;; Tracked objects:
 12774 ;;		On entry : 0/0
 12775 ;;		On exit  : 0/0
 12776 ;;		Unchanged: 0/0
 12777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12778 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12781 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12782 ;;Total ram usage:        8 bytes
 12783 ;; Hardware stack levels used: 1
 12784 ;; Hardware stack levels required when called: 3
 12785 ;; This function calls:
 12786 ;;		___fladd
 12787 ;; This function is called by:
 12788 ;;		_decide_action
 12789 ;;		_powf
 12790 ;; This function uses a non-reentrant model
 12791 ;;
 12792                           
 12793                           	psect	text34
 12794   007334                     __ptext34:
 12795                           	callstack 0
 12796   007334                     ___flsub:
 12797                           	callstack 25
 12798   007334  0E00               	movlw	0
 12799   007336  1A48               	xorwf	___flsub@a^0,f,c
 12800   007338  0E00               	movlw	0
 12801   00733A  1A49               	xorwf	(___flsub@a+1)^0,f,c
 12802   00733C  0E00               	movlw	0
 12803   00733E  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 12804   007340  0E80               	movlw	128
 12805   007342  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 12806   007344  C044  F002         	movff	___flsub@b,___fladd@b
 12807   007348  C045  F003         	movff	___flsub@b+1,___fladd@b+1
 12808   00734C  C046  F004         	movff	___flsub@b+2,___fladd@b+2
 12809   007350  C047  F005         	movff	___flsub@b+3,___fladd@b+3
 12810   007354  C048  F006         	movff	___flsub@a,___fladd@a
 12811   007358  C049  F007         	movff	___flsub@a+1,___fladd@a+1
 12812   00735C  C04A  F008         	movff	___flsub@a+2,___fladd@a+2
 12813   007360  C04B  F009         	movff	___flsub@a+3,___fladd@a+3
 12814   007364  EC7A  F026         	call	___fladd	;wreg free
 12815   007368  C002  F044         	movff	?___fladd,?___flsub
 12816   00736C  C003  F045         	movff	?___fladd+1,?___flsub+1
 12817   007370  C004  F046         	movff	?___fladd+2,?___flsub+2
 12818   007374  C005  F047         	movff	?___fladd+3,?___flsub+3
 12819   007378  0012               	return		;funcret
 12820   00737A                     __end_of___flsub:
 12821                           	callstack 0
 12822                           
 12823 ;; *************** function ___fladd *****************
 12824 ;; Defined at:
 12825 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 12826 ;; Parameters:    Size  Location     Type
 12827 ;;  b               4    1[COMRAM] unsigned char 
 12828 ;;  a               4    5[COMRAM] unsigned char 
 12829 ;; Auto vars:     Size  Location     Type
 12830 ;;  grs             1   16[COMRAM] unsigned char 
 12831 ;;  bexp            1   15[COMRAM] unsigned char 
 12832 ;;  aexp            1   14[COMRAM] unsigned char 
 12833 ;;  signs           1   13[COMRAM] unsigned char 
 12834 ;; Return value:  Size  Location     Type
 12835 ;;                  4    1[COMRAM] unsigned char 
 12836 ;; Registers used:
 12837 ;;		wreg, status,2, status,0
 12838 ;; Tracked objects:
 12839 ;;		On entry : 0/0
 12840 ;;		On exit  : 0/0
 12841 ;;		Unchanged: 0/0
 12842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12843 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12844 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12845 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12846 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12847 ;;Total ram usage:       16 bytes
 12848 ;; Hardware stack levels used: 1
 12849 ;; Hardware stack levels required when called: 2
 12850 ;; This function calls:
 12851 ;;		Nothing
 12852 ;; This function is called by:
 12853 ;;		_decide_action
 12854 ;;		___flsub
 12855 ;;		_powf
 12856 ;; This function uses a non-reentrant model
 12857 ;;
 12858                           
 12859                           	psect	text35
 12860   004CF4                     __ptext35:
 12861                           	callstack 0
 12862   004CF4                     ___fladd:
 12863                           	callstack 25
 12864   004CF4  5005               	movf	(___fladd@b+3)^0,w,c
 12865   004CF6  0B80               	andlw	128
 12866   004CF8  6E0E               	movwf	___fladd@signs^0,c
 12867   004CFA  5005               	movf	(___fladd@b+3)^0,w,c
 12868   004CFC  2405               	addwf	(___fladd@b+3)^0,w,c
 12869   004CFE  6E10               	movwf	___fladd@bexp^0,c
 12870   004D00  AE04               	btfss	(___fladd@b+2)^0,7,c
 12871   004D02  EF85  F026         	goto	u3011
 12872   004D06  EF87  F026         	goto	u3010
 12873   004D0A                     u3011:
 12874   004D0A  EF88  F026         	goto	l3684
 12875   004D0E                     u3010:
 12876   004D0E  8010               	bsf	___fladd@bexp^0,0,c
 12877   004D10                     l3684:
 12878   004D10  5010               	movf	___fladd@bexp^0,w,c
 12879   004D12  B4D8               	btfsc	status,2,c
 12880   004D14  EF8E  F026         	goto	u3021
 12881   004D18  EF90  F026         	goto	u3020
 12882   004D1C                     u3021:
 12883   004D1C  EFA5  F026         	goto	l3694
 12884   004D20                     u3020:
 12885   004D20  2810               	incf	___fladd@bexp^0,w,c
 12886   004D22  A4D8               	btfss	status,2,c
 12887   004D24  EF96  F026         	goto	u3031
 12888   004D28  EF98  F026         	goto	u3030
 12889   004D2C                     u3031:
 12890   004D2C  EFA0  F026         	goto	l3690
 12891   004D30                     u3030:
 12892   004D30  0E00               	movlw	0
 12893   004D32  6E02               	movwf	___fladd@b^0,c
 12894   004D34  0E00               	movlw	0
 12895   004D36  6E03               	movwf	(___fladd@b+1)^0,c
 12896   004D38  0E00               	movlw	0
 12897   004D3A  6E04               	movwf	(___fladd@b+2)^0,c
 12898   004D3C  0E00               	movlw	0
 12899   004D3E  6E05               	movwf	(___fladd@b+3)^0,c
 12900   004D40                     l3690:
 12901   004D40  8E04               	bsf	(___fladd@b+2)^0,7,c
 12902   004D42  0E00               	movlw	0
 12903   004D44  6E05               	movwf	(___fladd@b+3)^0,c
 12904   004D46  EFAD  F026         	goto	l3696
 12905   004D4A                     l3694:
 12906   004D4A  0E00               	movlw	0
 12907   004D4C  6E02               	movwf	___fladd@b^0,c
 12908   004D4E  0E00               	movlw	0
 12909   004D50  6E03               	movwf	(___fladd@b+1)^0,c
 12910   004D52  0E00               	movlw	0
 12911   004D54  6E04               	movwf	(___fladd@b+2)^0,c
 12912   004D56  0E00               	movlw	0
 12913   004D58  6E05               	movwf	(___fladd@b+3)^0,c
 12914   004D5A                     l3696:
 12915   004D5A  5009               	movf	(___fladd@a+3)^0,w,c
 12916   004D5C  0B80               	andlw	128
 12917   004D5E  6E0F               	movwf	___fladd@aexp^0,c
 12918   004D60  500E               	movf	___fladd@signs^0,w,c
 12919   004D62  180F               	xorwf	___fladd@aexp^0,w,c
 12920   004D64  B4D8               	btfsc	status,2,c
 12921   004D66  EFB7  F026         	goto	u3041
 12922   004D6A  EFB9  F026         	goto	u3040
 12923   004D6E                     u3041:
 12924   004D6E  EFBA  F026         	goto	l3702
 12925   004D72                     u3040:
 12926   004D72  8C0E               	bsf	___fladd@signs^0,6,c
 12927   004D74                     l3702:
 12928   004D74  5009               	movf	(___fladd@a+3)^0,w,c
 12929   004D76  2409               	addwf	(___fladd@a+3)^0,w,c
 12930   004D78  6E0F               	movwf	___fladd@aexp^0,c
 12931   004D7A  AE08               	btfss	(___fladd@a+2)^0,7,c
 12932   004D7C  EFC2  F026         	goto	u3051
 12933   004D80  EFC4  F026         	goto	u3050
 12934   004D84                     u3051:
 12935   004D84  EFC5  F026         	goto	l3708
 12936   004D88                     u3050:
 12937   004D88  800F               	bsf	___fladd@aexp^0,0,c
 12938   004D8A                     l3708:
 12939   004D8A  500F               	movf	___fladd@aexp^0,w,c
 12940   004D8C  B4D8               	btfsc	status,2,c
 12941   004D8E  EFCB  F026         	goto	u3061
 12942   004D92  EFCD  F026         	goto	u3060
 12943   004D96                     u3061:
 12944   004D96  EFE2  F026         	goto	l3718
 12945   004D9A                     u3060:
 12946   004D9A  280F               	incf	___fladd@aexp^0,w,c
 12947   004D9C  A4D8               	btfss	status,2,c
 12948   004D9E  EFD3  F026         	goto	u3071
 12949   004DA2  EFD5  F026         	goto	u3070
 12950   004DA6                     u3071:
 12951   004DA6  EFDD  F026         	goto	l3714
 12952   004DAA                     u3070:
 12953   004DAA  0E00               	movlw	0
 12954   004DAC  6E06               	movwf	___fladd@a^0,c
 12955   004DAE  0E00               	movlw	0
 12956   004DB0  6E07               	movwf	(___fladd@a+1)^0,c
 12957   004DB2  0E00               	movlw	0
 12958   004DB4  6E08               	movwf	(___fladd@a+2)^0,c
 12959   004DB6  0E00               	movlw	0
 12960   004DB8  6E09               	movwf	(___fladd@a+3)^0,c
 12961   004DBA                     l3714:
 12962   004DBA  8E08               	bsf	(___fladd@a+2)^0,7,c
 12963   004DBC  0E00               	movlw	0
 12964   004DBE  6E09               	movwf	(___fladd@a+3)^0,c
 12965   004DC0  EFEA  F026         	goto	l3720
 12966   004DC4                     l3718:
 12967   004DC4  0E00               	movlw	0
 12968   004DC6  6E06               	movwf	___fladd@a^0,c
 12969   004DC8  0E00               	movlw	0
 12970   004DCA  6E07               	movwf	(___fladd@a+1)^0,c
 12971   004DCC  0E00               	movlw	0
 12972   004DCE  6E08               	movwf	(___fladd@a+2)^0,c
 12973   004DD0  0E00               	movlw	0
 12974   004DD2  6E09               	movwf	(___fladd@a+3)^0,c
 12975   004DD4                     l3720:
 12976   004DD4  5010               	movf	___fladd@bexp^0,w,c
 12977   004DD6  5C0F               	subwf	___fladd@aexp^0,w,c
 12978   004DD8  B0D8               	btfsc	status,0,c
 12979   004DDA  EFF1  F026         	goto	u3081
 12980   004DDE  EFF3  F026         	goto	u3080
 12981   004DE2                     u3081:
 12982   004DE2  EF1A  F027         	goto	l3756
 12983   004DE6                     u3080:
 12984   004DE6  AC0E               	btfss	___fladd@signs^0,6,c
 12985   004DE8  EFF8  F026         	goto	u3091
 12986   004DEC  EFFA  F026         	goto	u3090
 12987   004DF0                     u3091:
 12988   004DF0  EFFC  F026         	goto	l3726
 12989   004DF4                     u3090:
 12990   004DF4  0E80               	movlw	128
 12991   004DF6  1A0E               	xorwf	___fladd@signs^0,f,c
 12992   004DF8                     l3726:
 12993   004DF8  C010  F011         	movff	___fladd@bexp,___fladd@grs
 12994   004DFC  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 12995   004E00  C011  F00F         	movff	___fladd@grs,___fladd@aexp
 12996   004E04  C002  F011         	movff	___fladd@b,___fladd@grs
 12997   004E08  C006  F002         	movff	___fladd@a,___fladd@b
 12998   004E0C  C011  F006         	movff	___fladd@grs,___fladd@a
 12999   004E10  C003  F011         	movff	___fladd@b+1,___fladd@grs
 13000   004E14  C007  F003         	movff	___fladd@a+1,___fladd@b+1
 13001   004E18  C011  F007         	movff	___fladd@grs,___fladd@a+1
 13002   004E1C  C004  F011         	movff	___fladd@b+2,___fladd@grs
 13003   004E20  C008  F004         	movff	___fladd@a+2,___fladd@b+2
 13004   004E24  C011  F008         	movff	___fladd@grs,___fladd@a+2
 13005   004E28  C005  F011         	movff	___fladd@b+3,___fladd@grs
 13006   004E2C  C009  F005         	movff	___fladd@a+3,___fladd@b+3
 13007   004E30  C011  F009         	movff	___fladd@grs,___fladd@a+3
 13008   004E34                     l3756:
 13009   004E34  0E00               	movlw	0
 13010   004E36  6E11               	movwf	___fladd@grs^0,c
 13011   004E38  5010               	movf	___fladd@bexp^0,w,c
 13012   004E3A  C00F  F00A         	movff	___fladd@aexp,??___fladd
 13013   004E3E  6A0B               	clrf	(??___fladd+1)^0,c
 13014   004E40  5E0A               	subwf	??___fladd^0,f,c
 13015   004E42  0E00               	movlw	0
 13016   004E44  5A0B               	subwfb	(??___fladd+1)^0,f,c
 13017   004E46  BE0B               	btfsc	(??___fladd+1)^0,7,c
 13018   004E48  EF2F  F027         	goto	u3101
 13019   004E4C  500B               	movf	(??___fladd+1)^0,w,c
 13020   004E4E  E109               	bnz	u3100
 13021   004E50  0E1A               	movlw	26
 13022   004E52  5C0A               	subwf	??___fladd^0,w,c
 13023   004E54  A0D8               	btfss	status,0,c
 13024   004E56  EF2F  F027         	goto	u3101
 13025   004E5A  EF31  F027         	goto	u3100
 13026   004E5E                     u3101:
 13027   004E5E  EF68  F027         	goto	l1097
 13028   004E62                     u3100:
 13029   004E62  5002               	movf	___fladd@b^0,w,c
 13030   004E64  1003               	iorwf	(___fladd@b+1)^0,w,c
 13031   004E66  1004               	iorwf	(___fladd@b+2)^0,w,c
 13032   004E68  1005               	iorwf	(___fladd@b+3)^0,w,c
 13033   004E6A  A4D8               	btfss	status,2,c
 13034   004E6C  EF3A  F027         	goto	u3111
 13035   004E70  EF3D  F027         	goto	u3110
 13036   004E74                     u3111:
 13037   004E74  0E01               	movlw	1
 13038   004E76  EF3E  F027         	goto	u3120
 13039   004E7A                     u3110:
 13040   004E7A  0E00               	movlw	0
 13041   004E7C                     u3120:
 13042   004E7C  6E11               	movwf	___fladd@grs^0,c
 13043   004E7E  0E00               	movlw	0
 13044   004E80  6E02               	movwf	___fladd@b^0,c
 13045   004E82  0E00               	movlw	0
 13046   004E84  6E03               	movwf	(___fladd@b+1)^0,c
 13047   004E86  0E00               	movlw	0
 13048   004E88  6E04               	movwf	(___fladd@b+2)^0,c
 13049   004E8A  0E00               	movlw	0
 13050   004E8C  6E05               	movwf	(___fladd@b+3)^0,c
 13051   004E8E  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 13052   004E92  EF71  F027         	goto	l1096
 13053   004E96                     l1098:
 13054   004E96  A011               	btfss	___fladd@grs^0,0,c
 13055   004E98  EF50  F027         	goto	u3131
 13056   004E9C  EF52  F027         	goto	u3130
 13057   004EA0                     u3131:
 13058   004EA0  EF58  F027         	goto	l3768
 13059   004EA4                     u3130:
 13060   004EA4  90D8               	bcf	status,0,c
 13061   004EA6  3011               	rrcf	___fladd@grs^0,w,c
 13062   004EA8  0901               	iorlw	1
 13063   004EAA  6E11               	movwf	___fladd@grs^0,c
 13064   004EAC  EF5A  F027         	goto	l3770
 13065   004EB0                     l3768:
 13066   004EB0  90D8               	bcf	status,0,c
 13067   004EB2  3211               	rrcf	___fladd@grs^0,f,c
 13068   004EB4                     l3770:
 13069   004EB4  A002               	btfss	___fladd@b^0,0,c
 13070   004EB6  EF5F  F027         	goto	u3141
 13071   004EBA  EF61  F027         	goto	u3140
 13072   004EBE                     u3141:
 13073   004EBE  EF62  F027         	goto	l3774
 13074   004EC2                     u3140:
 13075   004EC2  8E11               	bsf	___fladd@grs^0,7,c
 13076   004EC4                     l3774:
 13077   004EC4  3405               	rlcf	(___fladd@b+3)^0,w,c
 13078   004EC6  3205               	rrcf	(___fladd@b+3)^0,f,c
 13079   004EC8  3204               	rrcf	(___fladd@b+2)^0,f,c
 13080   004ECA  3203               	rrcf	(___fladd@b+1)^0,f,c
 13081   004ECC  3202               	rrcf	___fladd@b^0,f,c
 13082   004ECE  2A10               	incf	___fladd@bexp^0,f,c
 13083   004ED0                     l1097:
 13084   004ED0  500F               	movf	___fladd@aexp^0,w,c
 13085   004ED2  5C10               	subwf	___fladd@bexp^0,w,c
 13086   004ED4  A0D8               	btfss	status,0,c
 13087   004ED6  EF6F  F027         	goto	u3151
 13088   004EDA  EF71  F027         	goto	u3150
 13089   004EDE                     u3151:
 13090   004EDE  EF4B  F027         	goto	l1098
 13091   004EE2                     u3150:
 13092   004EE2                     l1096:
 13093   004EE2  BC0E               	btfsc	___fladd@signs^0,6,c
 13094   004EE4  EF76  F027         	goto	u3161
 13095   004EE8  EF78  F027         	goto	u3160
 13096   004EEC                     u3161:
 13097   004EEC  EFB8  F027         	goto	l3802
 13098   004EF0                     u3160:
 13099   004EF0  5010               	movf	___fladd@bexp^0,w,c
 13100   004EF2  A4D8               	btfss	status,2,c
 13101   004EF4  EF7E  F027         	goto	u3171
 13102   004EF8  EF80  F027         	goto	u3170
 13103   004EFC                     u3171:
 13104   004EFC  EF8A  F027         	goto	l3784
 13105   004F00                     u3170:
 13106   004F00  0E00               	movlw	0
 13107   004F02  6E02               	movwf	?___fladd^0,c
 13108   004F04  0E00               	movlw	0
 13109   004F06  6E03               	movwf	(?___fladd+1)^0,c
 13110   004F08  0E00               	movlw	0
 13111   004F0A  6E04               	movwf	(?___fladd+2)^0,c
 13112   004F0C  0E00               	movlw	0
 13113   004F0E  6E05               	movwf	(?___fladd+3)^0,c
 13114   004F10  EFD9  F028         	goto	l1105
 13115   004F14                     l3784:
 13116   004F14  5006               	movf	___fladd@a^0,w,c
 13117   004F16  2602               	addwf	___fladd@b^0,f,c
 13118   004F18  5007               	movf	(___fladd@a+1)^0,w,c
 13119   004F1A  2203               	addwfc	(___fladd@b+1)^0,f,c
 13120   004F1C  5008               	movf	(___fladd@a+2)^0,w,c
 13121   004F1E  2204               	addwfc	(___fladd@b+2)^0,f,c
 13122   004F20  5009               	movf	(___fladd@a+3)^0,w,c
 13123   004F22  2205               	addwfc	(___fladd@b+3)^0,f,c
 13124   004F24  A005               	btfss	(___fladd@b+3)^0,0,c
 13125   004F26  EF97  F027         	goto	u3181
 13126   004F2A  EF99  F027         	goto	u3180
 13127   004F2E                     u3181:
 13128   004F2E  EF45  F028         	goto	l3838
 13129   004F32                     u3180:
 13130   004F32  A011               	btfss	___fladd@grs^0,0,c
 13131   004F34  EF9E  F027         	goto	u3191
 13132   004F38  EFA0  F027         	goto	u3190
 13133   004F3C                     u3191:
 13134   004F3C  EFA6  F027         	goto	l3792
 13135   004F40                     u3190:
 13136   004F40  90D8               	bcf	status,0,c
 13137   004F42  3011               	rrcf	___fladd@grs^0,w,c
 13138   004F44  0901               	iorlw	1
 13139   004F46  6E11               	movwf	___fladd@grs^0,c
 13140   004F48  EFA8  F027         	goto	l3794
 13141   004F4C                     l3792:
 13142   004F4C  90D8               	bcf	status,0,c
 13143   004F4E  3211               	rrcf	___fladd@grs^0,f,c
 13144   004F50                     l3794:
 13145   004F50  A002               	btfss	___fladd@b^0,0,c
 13146   004F52  EFAD  F027         	goto	u3201
 13147   004F56  EFAF  F027         	goto	u3200
 13148   004F5A                     u3201:
 13149   004F5A  EFB0  F027         	goto	l3798
 13150   004F5E                     u3200:
 13151   004F5E  8E11               	bsf	___fladd@grs^0,7,c
 13152   004F60                     l3798:
 13153   004F60  3405               	rlcf	(___fladd@b+3)^0,w,c
 13154   004F62  3205               	rrcf	(___fladd@b+3)^0,f,c
 13155   004F64  3204               	rrcf	(___fladd@b+2)^0,f,c
 13156   004F66  3203               	rrcf	(___fladd@b+1)^0,f,c
 13157   004F68  3202               	rrcf	___fladd@b^0,f,c
 13158   004F6A  2A10               	incf	___fladd@bexp^0,f,c
 13159   004F6C  EF45  F028         	goto	l3838
 13160   004F70                     l3802:
 13161   004F70  5006               	movf	___fladd@a^0,w,c
 13162   004F72  5C02               	subwf	___fladd@b^0,w,c
 13163   004F74  5007               	movf	(___fladd@a+1)^0,w,c
 13164   004F76  5803               	subwfb	(___fladd@b+1)^0,w,c
 13165   004F78  5008               	movf	(___fladd@a+2)^0,w,c
 13166   004F7A  5804               	subwfb	(___fladd@b+2)^0,w,c
 13167   004F7C  5005               	movf	(___fladd@b+3)^0,w,c
 13168   004F7E  0A80               	xorlw	128
 13169   004F80  6E0A               	movwf	??___fladd^0,c
 13170   004F82  5009               	movf	(___fladd@a+3)^0,w,c
 13171   004F84  0A80               	xorlw	128
 13172   004F86  580A               	subwfb	??___fladd^0,w,c
 13173   004F88  B0D8               	btfsc	status,0,c
 13174   004F8A  EFC9  F027         	goto	u3211
 13175   004F8E  EFCB  F027         	goto	u3210
 13176   004F92                     u3211:
 13177   004F92  EFF6  F027         	goto	l3812
 13178   004F96                     u3210:
 13179   004F96  5002               	movf	___fladd@b^0,w,c
 13180   004F98  5C06               	subwf	___fladd@a^0,w,c
 13181   004F9A  6E0A               	movwf	??___fladd^0,c
 13182   004F9C  5003               	movf	(___fladd@b+1)^0,w,c
 13183   004F9E  5807               	subwfb	(___fladd@a+1)^0,w,c
 13184   004FA0  6E0B               	movwf	(??___fladd+1)^0,c
 13185   004FA2  5004               	movf	(___fladd@b+2)^0,w,c
 13186   004FA4  5808               	subwfb	(___fladd@a+2)^0,w,c
 13187   004FA6  6E0C               	movwf	(??___fladd+2)^0,c
 13188   004FA8  5005               	movf	(___fladd@b+3)^0,w,c
 13189   004FAA  5809               	subwfb	(___fladd@a+3)^0,w,c
 13190   004FAC  6E0D               	movwf	(??___fladd+3)^0,c
 13191   004FAE  0EFF               	movlw	255
 13192   004FB0  240A               	addwf	??___fladd^0,w,c
 13193   004FB2  6E02               	movwf	___fladd@b^0,c
 13194   004FB4  0EFF               	movlw	255
 13195   004FB6  200B               	addwfc	(??___fladd+1)^0,w,c
 13196   004FB8  6E03               	movwf	(___fladd@b+1)^0,c
 13197   004FBA  0EFF               	movlw	255
 13198   004FBC  200C               	addwfc	(??___fladd+2)^0,w,c
 13199   004FBE  6E04               	movwf	(___fladd@b+2)^0,c
 13200   004FC0  0EFF               	movlw	255
 13201   004FC2  200D               	addwfc	(??___fladd+3)^0,w,c
 13202   004FC4  6E05               	movwf	(___fladd@b+3)^0,c
 13203   004FC6  0E80               	movlw	128
 13204   004FC8  1A0E               	xorwf	___fladd@signs^0,f,c
 13205   004FCA  6C11               	negf	___fladd@grs^0,c
 13206   004FCC  5011               	movf	___fladd@grs^0,w,c
 13207   004FCE  A4D8               	btfss	status,2,c
 13208   004FD0  EFEC  F027         	goto	u3221
 13209   004FD4  EFEE  F027         	goto	u3220
 13210   004FD8                     u3221:
 13211   004FD8  EFFE  F027         	goto	l1113
 13212   004FDC                     u3220:
 13213   004FDC  0E01               	movlw	1
 13214   004FDE  2602               	addwf	___fladd@b^0,f,c
 13215   004FE0  0E00               	movlw	0
 13216   004FE2  2203               	addwfc	(___fladd@b+1)^0,f,c
 13217   004FE4  2204               	addwfc	(___fladd@b+2)^0,f,c
 13218   004FE6  2205               	addwfc	(___fladd@b+3)^0,f,c
 13219   004FE8  EFFE  F027         	goto	l1113
 13220   004FEC                     l3812:
 13221   004FEC  5006               	movf	___fladd@a^0,w,c
 13222   004FEE  5E02               	subwf	___fladd@b^0,f,c
 13223   004FF0  5007               	movf	(___fladd@a+1)^0,w,c
 13224   004FF2  5A03               	subwfb	(___fladd@b+1)^0,f,c
 13225   004FF4  5008               	movf	(___fladd@a+2)^0,w,c
 13226   004FF6  5A04               	subwfb	(___fladd@b+2)^0,f,c
 13227   004FF8  5009               	movf	(___fladd@a+3)^0,w,c
 13228   004FFA  5A05               	subwfb	(___fladd@b+3)^0,f,c
 13229   004FFC                     l1113:
 13230   004FFC  5002               	movf	___fladd@b^0,w,c
 13231   004FFE  1003               	iorwf	(___fladd@b+1)^0,w,c
 13232   005000  1004               	iorwf	(___fladd@b+2)^0,w,c
 13233   005002  1005               	iorwf	(___fladd@b+3)^0,w,c
 13234   005004  A4D8               	btfss	status,2,c
 13235   005006  EF07  F028         	goto	u3231
 13236   00500A  EF09  F028         	goto	u3230
 13237   00500E                     u3231:
 13238   00500E  EF3E  F028         	goto	l3836
 13239   005012                     u3230:
 13240   005012  5011               	movf	___fladd@grs^0,w,c
 13241   005014  A4D8               	btfss	status,2,c
 13242   005016  EF0F  F028         	goto	u3241
 13243   00501A  EF11  F028         	goto	u3240
 13244   00501E                     u3241:
 13245   00501E  EF3E  F028         	goto	l3836
 13246   005022                     u3240:
 13247   005022  0E00               	movlw	0
 13248   005024  6E02               	movwf	?___fladd^0,c
 13249   005026  0E00               	movlw	0
 13250   005028  6E03               	movwf	(?___fladd+1)^0,c
 13251   00502A  0E00               	movlw	0
 13252   00502C  6E04               	movwf	(?___fladd+2)^0,c
 13253   00502E  0E00               	movlw	0
 13254   005030  6E05               	movwf	(?___fladd+3)^0,c
 13255   005032  EFD9  F028         	goto	l1105
 13256   005036                     l3820:
 13257   005036  90D8               	bcf	status,0,c
 13258   005038  3602               	rlcf	___fladd@b^0,f,c
 13259   00503A  3603               	rlcf	(___fladd@b+1)^0,f,c
 13260   00503C  3604               	rlcf	(___fladd@b+2)^0,f,c
 13261   00503E  3605               	rlcf	(___fladd@b+3)^0,f,c
 13262   005040  AE11               	btfss	___fladd@grs^0,7,c
 13263   005042  EF25  F028         	goto	u3251
 13264   005046  EF27  F028         	goto	u3250
 13265   00504A                     u3251:
 13266   00504A  EF28  F028         	goto	l3826
 13267   00504E                     u3250:
 13268   00504E  8002               	bsf	___fladd@b^0,0,c
 13269   005050                     l3826:
 13270   005050  A011               	btfss	___fladd@grs^0,0,c
 13271   005052  EF2D  F028         	goto	u3261
 13272   005056  EF2F  F028         	goto	u3260
 13273   00505A                     u3261:
 13274   00505A  EF33  F028         	goto	l3830
 13275   00505E                     u3260:
 13276   00505E  80D8               	bsf	status,0,c
 13277   005060  3611               	rlcf	___fladd@grs^0,f,c
 13278   005062  EF35  F028         	goto	l3832
 13279   005066                     l3830:
 13280   005066  90D8               	bcf	status,0,c
 13281   005068  3611               	rlcf	___fladd@grs^0,f,c
 13282   00506A                     l3832:
 13283   00506A  5010               	movf	___fladd@bexp^0,w,c
 13284   00506C  B4D8               	btfsc	status,2,c
 13285   00506E  EF3B  F028         	goto	u3271
 13286   005072  EF3D  F028         	goto	u3270
 13287   005076                     u3271:
 13288   005076  EF3E  F028         	goto	l3836
 13289   00507A                     u3270:
 13290   00507A  0610               	decf	___fladd@bexp^0,f,c
 13291   00507C                     l3836:
 13292   00507C  AE04               	btfss	(___fladd@b+2)^0,7,c
 13293   00507E  EF43  F028         	goto	u3281
 13294   005082  EF45  F028         	goto	u3280
 13295   005086                     u3281:
 13296   005086  EF1B  F028         	goto	l3820
 13297   00508A                     u3280:
 13298   00508A                     l3838:
 13299   00508A  0E00               	movlw	0
 13300   00508C  6E0F               	movwf	___fladd@aexp^0,c
 13301   00508E  AE11               	btfss	___fladd@grs^0,7,c
 13302   005090  EF4C  F028         	goto	u3291
 13303   005094  EF4E  F028         	goto	u3290
 13304   005098                     u3291:
 13305   005098  EF66  F028         	goto	l1122
 13306   00509C                     u3290:
 13307   00509C  C011  F00A         	movff	___fladd@grs,??___fladd
 13308   0050A0  0E7F               	movlw	127
 13309   0050A2  160A               	andwf	??___fladd^0,f,c
 13310   0050A4  B4D8               	btfsc	status,2,c
 13311   0050A6  EF57  F028         	goto	u3301
 13312   0050AA  EF59  F028         	goto	u3300
 13313   0050AE                     u3301:
 13314   0050AE  EF5D  F028         	goto	l1123
 13315   0050B2                     u3300:
 13316   0050B2                     l3844:
 13317   0050B2  0E01               	movlw	1
 13318   0050B4  6E0F               	movwf	___fladd@aexp^0,c
 13319   0050B6  EF66  F028         	goto	l1122
 13320   0050BA                     l1123:
 13321   0050BA  A002               	btfss	___fladd@b^0,0,c
 13322   0050BC  EF62  F028         	goto	u3311
 13323   0050C0  EF64  F028         	goto	u3310
 13324   0050C4                     u3311:
 13325   0050C4  EF66  F028         	goto	l1122
 13326   0050C8                     u3310:
 13327   0050C8  EF59  F028         	goto	l3844
 13328   0050CC                     l1122:
 13329   0050CC  500F               	movf	___fladd@aexp^0,w,c
 13330   0050CE  B4D8               	btfsc	status,2,c
 13331   0050D0  EF6C  F028         	goto	u3321
 13332   0050D4  EF6E  F028         	goto	u3320
 13333   0050D8                     u3321:
 13334   0050D8  EF99  F028         	goto	l3856
 13335   0050DC                     u3320:
 13336   0050DC  0E01               	movlw	1
 13337   0050DE  2602               	addwf	___fladd@b^0,f,c
 13338   0050E0  0E00               	movlw	0
 13339   0050E2  2203               	addwfc	(___fladd@b+1)^0,f,c
 13340   0050E4  2204               	addwfc	(___fladd@b+2)^0,f,c
 13341   0050E6  2205               	addwfc	(___fladd@b+3)^0,f,c
 13342   0050E8  A005               	btfss	(___fladd@b+3)^0,0,c
 13343   0050EA  EF79  F028         	goto	u3331
 13344   0050EE  EF7B  F028         	goto	u3330
 13345   0050F2                     u3331:
 13346   0050F2  EF99  F028         	goto	l3856
 13347   0050F6                     u3330:
 13348   0050F6  C002  F00A         	movff	___fladd@b,??___fladd
 13349   0050FA  C003  F00B         	movff	___fladd@b+1,??___fladd+1
 13350   0050FE  C004  F00C         	movff	___fladd@b+2,??___fladd+2
 13351   005102  C005  F00D         	movff	___fladd@b+3,??___fladd+3
 13352   005106  340D               	rlcf	(??___fladd+3)^0,w,c
 13353   005108  320D               	rrcf	(??___fladd+3)^0,f,c
 13354   00510A  320C               	rrcf	(??___fladd+2)^0,f,c
 13355   00510C  320B               	rrcf	(??___fladd+1)^0,f,c
 13356   00510E  320A               	rrcf	??___fladd^0,f,c
 13357   005110  C00A  F002         	movff	??___fladd,___fladd@b
 13358   005114  C00B  F003         	movff	??___fladd+1,___fladd@b+1
 13359   005118  C00C  F004         	movff	??___fladd+2,___fladd@b+2
 13360   00511C  C00D  F005         	movff	??___fladd+3,___fladd@b+3
 13361   005120  2810               	incf	___fladd@bexp^0,w,c
 13362   005122  B4D8               	btfsc	status,2,c
 13363   005124  EF96  F028         	goto	u3341
 13364   005128  EF98  F028         	goto	u3340
 13365   00512C                     u3341:
 13366   00512C  EF99  F028         	goto	l3856
 13367   005130                     u3340:
 13368   005130  2A10               	incf	___fladd@bexp^0,f,c
 13369   005132                     l3856:
 13370   005132  2810               	incf	___fladd@bexp^0,w,c
 13371   005134  B4D8               	btfsc	status,2,c
 13372   005136  EF9F  F028         	goto	u3351
 13373   00513A  EFA1  F028         	goto	u3350
 13374   00513E                     u3351:
 13375   00513E  EFA9  F028         	goto	l3860
 13376   005142                     u3350:
 13377   005142  5010               	movf	___fladd@bexp^0,w,c
 13378   005144  A4D8               	btfss	status,2,c
 13379   005146  EFA7  F028         	goto	u3361
 13380   00514A  EFA9  F028         	goto	u3360
 13381   00514E                     u3361:
 13382   00514E  EFBB  F028         	goto	l3864
 13383   005152                     u3360:
 13384   005152                     l3860:
 13385   005152  0E00               	movlw	0
 13386   005154  6E02               	movwf	___fladd@b^0,c
 13387   005156  0E00               	movlw	0
 13388   005158  6E03               	movwf	(___fladd@b+1)^0,c
 13389   00515A  0E00               	movlw	0
 13390   00515C  6E04               	movwf	(___fladd@b+2)^0,c
 13391   00515E  0E00               	movlw	0
 13392   005160  6E05               	movwf	(___fladd@b+3)^0,c
 13393   005162  5010               	movf	___fladd@bexp^0,w,c
 13394   005164  A4D8               	btfss	status,2,c
 13395   005166  EFB7  F028         	goto	u3371
 13396   00516A  EFB9  F028         	goto	u3370
 13397   00516E                     u3371:
 13398   00516E  EFBB  F028         	goto	l3864
 13399   005172                     u3370:
 13400   005172  0E00               	movlw	0
 13401   005174  6E0E               	movwf	___fladd@signs^0,c
 13402   005176                     l3864:
 13403   005176  A010               	btfss	___fladd@bexp^0,0,c
 13404   005178  EFC0  F028         	goto	u3381
 13405   00517C  EFC2  F028         	goto	u3380
 13406   005180                     u3381:
 13407   005180  EFC5  F028         	goto	l3868
 13408   005184                     u3380:
 13409   005184  8E04               	bsf	(___fladd@b+2)^0,7,c
 13410   005186  EFC6  F028         	goto	l3870
 13411   00518A                     l3868:
 13412   00518A  9E04               	bcf	(___fladd@b+2)^0,7,c
 13413   00518C                     l3870:
 13414   00518C  90D8               	bcf	status,0,c
 13415   00518E  3010               	rrcf	___fladd@bexp^0,w,c
 13416   005190  6E05               	movwf	(___fladd@b+3)^0,c
 13417   005192  AE0E               	btfss	___fladd@signs^0,7,c
 13418   005194  EFCE  F028         	goto	u3391
 13419   005198  EFD0  F028         	goto	u3390
 13420   00519C                     u3391:
 13421   00519C  EFD1  F028         	goto	l3876
 13422   0051A0                     u3390:
 13423   0051A0  8E05               	bsf	(___fladd@b+3)^0,7,c
 13424   0051A2                     l3876:
 13425   0051A2  C002  F002         	movff	___fladd@b,?___fladd
 13426   0051A6  C003  F003         	movff	___fladd@b+1,?___fladd+1
 13427   0051AA  C004  F004         	movff	___fladd@b+2,?___fladd+2
 13428   0051AE  C005  F005         	movff	___fladd@b+3,?___fladd+3
 13429   0051B2                     l1105:
 13430   0051B2  0012               	return		;funcret
 13431   0051B4                     __end_of___fladd:
 13432                           	callstack 0
 13433                           
 13434 ;; *************** function ___flneg *****************
 13435 ;; Defined at:
 13436 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
 13437 ;; Parameters:    Size  Location     Type
 13438 ;;  f1              4    1[COMRAM] unsigned char 
 13439 ;; Auto vars:     Size  Location     Type
 13440 ;;		None
 13441 ;; Return value:  Size  Location     Type
 13442 ;;                  4    1[COMRAM] unsigned char 
 13443 ;; Registers used:
 13444 ;;		wreg, status,2, status,0
 13445 ;; Tracked objects:
 13446 ;;		On entry : 0/0
 13447 ;;		On exit  : 0/0
 13448 ;;		Unchanged: 0/0
 13449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13450 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13454 ;;Total ram usage:        4 bytes
 13455 ;; Hardware stack levels used: 1
 13456 ;; Hardware stack levels required when called: 2
 13457 ;; This function calls:
 13458 ;;		Nothing
 13459 ;; This function is called by:
 13460 ;;		_powf
 13461 ;; This function uses a non-reentrant model
 13462 ;;
 13463                           
 13464                           	psect	text36
 13465   00743A                     __ptext36:
 13466                           	callstack 0
 13467   00743A                     ___flneg:
 13468                           	callstack 26
 13469   00743A  5002               	movf	___flneg@f1^0,w,c
 13470   00743C  1003               	iorwf	(___flneg@f1+1)^0,w,c
 13471   00743E  1004               	iorwf	(___flneg@f1+2)^0,w,c
 13472   007440  1005               	iorwf	(___flneg@f1+3)^0,w,c
 13473   007442  B4D8               	btfsc	status,2,c
 13474   007444  EF26  F03A         	goto	u4231
 13475   007448  EF28  F03A         	goto	u4230
 13476   00744C                     u4231:
 13477   00744C  EF30  F03A         	goto	l4394
 13478   007450                     u4230:
 13479   007450  0E00               	movlw	0
 13480   007452  1A02               	xorwf	___flneg@f1^0,f,c
 13481   007454  0E00               	movlw	0
 13482   007456  1A03               	xorwf	(___flneg@f1+1)^0,f,c
 13483   007458  0E00               	movlw	0
 13484   00745A  1A04               	xorwf	(___flneg@f1+2)^0,f,c
 13485   00745C  0E80               	movlw	128
 13486   00745E  1A05               	xorwf	(___flneg@f1+3)^0,f,c
 13487   007460                     l4394:
 13488   007460  C002  F002         	movff	___flneg@f1,?___flneg
 13489   007464  C003  F003         	movff	___flneg@f1+1,?___flneg+1
 13490   007468  C004  F004         	movff	___flneg@f1+2,?___flneg+2
 13491   00746C  C005  F005         	movff	___flneg@f1+3,?___flneg+3
 13492   007470  0012               	return		;funcret
 13493   007472                     __end_of___flneg:
 13494                           	callstack 0
 13495                           
 13496 ;; *************** function ___flge *****************
 13497 ;; Defined at:
 13498 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 13499 ;; Parameters:    Size  Location     Type
 13500 ;;  ff1             4   75[COMRAM] unsigned char 
 13501 ;;  ff2             4   79[COMRAM] unsigned char 
 13502 ;; Auto vars:     Size  Location     Type
 13503 ;;		None
 13504 ;; Return value:  Size  Location     Type
 13505 ;;		None               void
 13506 ;; Registers used:
 13507 ;;		wreg, status,2, status,0
 13508 ;; Tracked objects:
 13509 ;;		On entry : 0/0
 13510 ;;		On exit  : 0/0
 13511 ;;		Unchanged: 0/0
 13512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13513 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13515 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13516 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13517 ;;Total ram usage:       12 bytes
 13518 ;; Hardware stack levels used: 1
 13519 ;; Hardware stack levels required when called: 2
 13520 ;; This function calls:
 13521 ;;		Nothing
 13522 ;; This function is called by:
 13523 ;;		_decide_action
 13524 ;;		_powf
 13525 ;; This function uses a non-reentrant model
 13526 ;;
 13527                           
 13528                           	psect	text37
 13529   00657A                     __ptext37:
 13530                           	callstack 0
 13531   00657A                     ___flge:
 13532                           	callstack 26
 13533   00657A  0E00               	movlw	0
 13534   00657C  144C               	andwf	___flge@ff1^0,w,c
 13535   00657E  6E54               	movwf	??___flge^0,c
 13536   006580  0E00               	movlw	0
 13537   006582  144D               	andwf	(___flge@ff1+1)^0,w,c
 13538   006584  6E55               	movwf	(??___flge+1)^0,c
 13539   006586  0E80               	movlw	128
 13540   006588  144E               	andwf	(___flge@ff1+2)^0,w,c
 13541   00658A  6E56               	movwf	(??___flge+2)^0,c
 13542   00658C  0E7F               	movlw	127
 13543   00658E  144F               	andwf	(___flge@ff1+3)^0,w,c
 13544   006590  6E57               	movwf	(??___flge+3)^0,c
 13545   006592  5054               	movf	??___flge^0,w,c
 13546   006594  1055               	iorwf	(??___flge+1)^0,w,c
 13547   006596  1056               	iorwf	(??___flge+2)^0,w,c
 13548   006598  1057               	iorwf	(??___flge+3)^0,w,c
 13549   00659A  A4D8               	btfss	status,2,c
 13550   00659C  EFD2  F032         	goto	u4181
 13551   0065A0  EFD4  F032         	goto	u4180
 13552   0065A4                     u4181:
 13553   0065A4  EFDC  F032         	goto	l4372
 13554   0065A8                     u4180:
 13555   0065A8  0E00               	movlw	0
 13556   0065AA  6E4C               	movwf	___flge@ff1^0,c
 13557   0065AC  0E00               	movlw	0
 13558   0065AE  6E4D               	movwf	(___flge@ff1+1)^0,c
 13559   0065B0  0E00               	movlw	0
 13560   0065B2  6E4E               	movwf	(___flge@ff1+2)^0,c
 13561   0065B4  0E00               	movlw	0
 13562   0065B6  6E4F               	movwf	(___flge@ff1+3)^0,c
 13563   0065B8                     l4372:
 13564   0065B8  0E00               	movlw	0
 13565   0065BA  1450               	andwf	___flge@ff2^0,w,c
 13566   0065BC  6E54               	movwf	??___flge^0,c
 13567   0065BE  0E00               	movlw	0
 13568   0065C0  1451               	andwf	(___flge@ff2+1)^0,w,c
 13569   0065C2  6E55               	movwf	(??___flge+1)^0,c
 13570   0065C4  0E80               	movlw	128
 13571   0065C6  1452               	andwf	(___flge@ff2+2)^0,w,c
 13572   0065C8  6E56               	movwf	(??___flge+2)^0,c
 13573   0065CA  0E7F               	movlw	127
 13574   0065CC  1453               	andwf	(___flge@ff2+3)^0,w,c
 13575   0065CE  6E57               	movwf	(??___flge+3)^0,c
 13576   0065D0  5054               	movf	??___flge^0,w,c
 13577   0065D2  1055               	iorwf	(??___flge+1)^0,w,c
 13578   0065D4  1056               	iorwf	(??___flge+2)^0,w,c
 13579   0065D6  1057               	iorwf	(??___flge+3)^0,w,c
 13580   0065D8  A4D8               	btfss	status,2,c
 13581   0065DA  EFF1  F032         	goto	u4191
 13582   0065DE  EFF3  F032         	goto	u4190
 13583   0065E2                     u4191:
 13584   0065E2  EFFB  F032         	goto	l4376
 13585   0065E6                     u4190:
 13586   0065E6  0E00               	movlw	0
 13587   0065E8  6E50               	movwf	___flge@ff2^0,c
 13588   0065EA  0E00               	movlw	0
 13589   0065EC  6E51               	movwf	(___flge@ff2+1)^0,c
 13590   0065EE  0E00               	movlw	0
 13591   0065F0  6E52               	movwf	(___flge@ff2+2)^0,c
 13592   0065F2  0E00               	movlw	0
 13593   0065F4  6E53               	movwf	(___flge@ff2+3)^0,c
 13594   0065F6                     l4376:
 13595   0065F6  AE4F               	btfss	(___flge@ff1+3)^0,7,c
 13596   0065F8  EF00  F033         	goto	u4201
 13597   0065FC  EF02  F033         	goto	u4200
 13598   006600                     u4201:
 13599   006600  EF0B  F033         	goto	l4380
 13600   006604                     u4200:
 13601   006604  6C4C               	negf	___flge@ff1^0,c
 13602   006606  1E4D               	comf	(___flge@ff1+1)^0,f,c
 13603   006608  B0D8               	btfsc	status,0,c
 13604   00660A  2A4D               	incf	(___flge@ff1+1)^0,f,c
 13605   00660C  1E4E               	comf	(___flge@ff1+2)^0,f,c
 13606   00660E  B0D8               	btfsc	status,0,c
 13607   006610  2A4E               	incf	(___flge@ff1+2)^0,f,c
 13608   006612  0E80               	movlw	128
 13609   006614  564F               	subfwb	(___flge@ff1+3)^0,f,c
 13610   006616                     l4380:
 13611   006616  AE53               	btfss	(___flge@ff2+3)^0,7,c
 13612   006618  EF10  F033         	goto	u4211
 13613   00661C  EF12  F033         	goto	u4210
 13614   006620                     u4211:
 13615   006620  EF1B  F033         	goto	l833
 13616   006624                     u4210:
 13617   006624  6C50               	negf	___flge@ff2^0,c
 13618   006626  1E51               	comf	(___flge@ff2+1)^0,f,c
 13619   006628  B0D8               	btfsc	status,0,c
 13620   00662A  2A51               	incf	(___flge@ff2+1)^0,f,c
 13621   00662C  1E52               	comf	(___flge@ff2+2)^0,f,c
 13622   00662E  B0D8               	btfsc	status,0,c
 13623   006630  2A52               	incf	(___flge@ff2+2)^0,f,c
 13624   006632  0E80               	movlw	128
 13625   006634  5653               	subfwb	(___flge@ff2+3)^0,f,c
 13626   006636                     l833:
 13627   006636  0E00               	movlw	0
 13628   006638  1A4C               	xorwf	___flge@ff1^0,f,c
 13629   00663A  0E00               	movlw	0
 13630   00663C  1A4D               	xorwf	(___flge@ff1+1)^0,f,c
 13631   00663E  0E00               	movlw	0
 13632   006640  1A4E               	xorwf	(___flge@ff1+2)^0,f,c
 13633   006642  0E80               	movlw	128
 13634   006644  1A4F               	xorwf	(___flge@ff1+3)^0,f,c
 13635   006646  0E00               	movlw	0
 13636   006648  1A50               	xorwf	___flge@ff2^0,f,c
 13637   00664A  0E00               	movlw	0
 13638   00664C  1A51               	xorwf	(___flge@ff2+1)^0,f,c
 13639   00664E  0E00               	movlw	0
 13640   006650  1A52               	xorwf	(___flge@ff2+2)^0,f,c
 13641   006652  0E80               	movlw	128
 13642   006654  1A53               	xorwf	(___flge@ff2+3)^0,f,c
 13643   006656  5050               	movf	___flge@ff2^0,w,c
 13644   006658  5C4C               	subwf	___flge@ff1^0,w,c
 13645   00665A  5051               	movf	(___flge@ff2+1)^0,w,c
 13646   00665C  584D               	subwfb	(___flge@ff1+1)^0,w,c
 13647   00665E  5052               	movf	(___flge@ff2+2)^0,w,c
 13648   006660  584E               	subwfb	(___flge@ff1+2)^0,w,c
 13649   006662  5053               	movf	(___flge@ff2+3)^0,w,c
 13650   006664  584F               	subwfb	(___flge@ff1+3)^0,w,c
 13651   006666  B0D8               	btfsc	status,0,c
 13652   006668  EF38  F033         	goto	u4221
 13653   00666C  EF3A  F033         	goto	u4220
 13654   006670                     u4221:
 13655   006670  EF3D  F033         	goto	l4386
 13656   006674                     u4220:
 13657   006674  90D8               	bcf	status,0,c
 13658   006676  EF3E  F033         	goto	l838
 13659   00667A                     l4386:
 13660   00667A  80D8               	bsf	status,0,c
 13661   00667C                     l838:
 13662   00667C  0012               	return		;funcret
 13663   00667E                     __end_of___flge:
 13664                           	callstack 0
 13665                           
 13666 ;; *************** function ___fldiv *****************
 13667 ;; Defined at:
 13668 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 13669 ;; Parameters:    Size  Location     Type
 13670 ;;  b               4   42[COMRAM] unsigned char 
 13671 ;;  a               4   46[COMRAM] unsigned char 
 13672 ;; Auto vars:     Size  Location     Type
 13673 ;;  grs             4   61[COMRAM] unsigned long 
 13674 ;;  rem             4   54[COMRAM] unsigned long 
 13675 ;;  new_exp         2   59[COMRAM] short 
 13676 ;;  aexp            1   66[COMRAM] unsigned char 
 13677 ;;  bexp            1   65[COMRAM] unsigned char 
 13678 ;;  sign            1   58[COMRAM] unsigned char 
 13679 ;; Return value:  Size  Location     Type
 13680 ;;                  4   42[COMRAM] unsigned char 
 13681 ;; Registers used:
 13682 ;;		wreg, status,2, status,0
 13683 ;; Tracked objects:
 13684 ;;		On entry : 0/0
 13685 ;;		On exit  : 0/0
 13686 ;;		Unchanged: 0/0
 13687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13688 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13689 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13690 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13691 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13692 ;;Total ram usage:       25 bytes
 13693 ;; Hardware stack levels used: 1
 13694 ;; Hardware stack levels required when called: 2
 13695 ;; This function calls:
 13696 ;;		Nothing
 13697 ;; This function is called by:
 13698 ;;		_decide_action
 13699 ;;		_powf
 13700 ;; This function uses a non-reentrant model
 13701 ;;
 13702                           
 13703                           	psect	text38
 13704   0059BC                     __ptext38:
 13705                           	callstack 0
 13706   0059BC                     ___fldiv:
 13707                           	callstack 26
 13708   0059BC  502E               	movf	(___fldiv@b+3)^0,w,c
 13709   0059BE  0B80               	andlw	128
 13710   0059C0  6E3B               	movwf	___fldiv@sign^0,c
 13711   0059C2  502E               	movf	(___fldiv@b+3)^0,w,c
 13712   0059C4  242E               	addwf	(___fldiv@b+3)^0,w,c
 13713   0059C6  6E42               	movwf	___fldiv@bexp^0,c
 13714   0059C8  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 13715   0059CA  EFE9  F02C         	goto	u3951
 13716   0059CE  EFEB  F02C         	goto	u3950
 13717   0059D2                     u3951:
 13718   0059D2  EFEC  F02C         	goto	l4230
 13719   0059D6                     u3950:
 13720   0059D6  8042               	bsf	___fldiv@bexp^0,0,c
 13721   0059D8                     l4230:
 13722   0059D8  5042               	movf	___fldiv@bexp^0,w,c
 13723   0059DA  B4D8               	btfsc	status,2,c
 13724   0059DC  EFF2  F02C         	goto	u3961
 13725   0059E0  EFF4  F02C         	goto	u3960
 13726   0059E4                     u3961:
 13727   0059E4  EF09  F02D         	goto	l4240
 13728   0059E8                     u3960:
 13729   0059E8  2842               	incf	___fldiv@bexp^0,w,c
 13730   0059EA  A4D8               	btfss	status,2,c
 13731   0059EC  EFFA  F02C         	goto	u3971
 13732   0059F0  EFFC  F02C         	goto	u3970
 13733   0059F4                     u3971:
 13734   0059F4  EF04  F02D         	goto	l4236
 13735   0059F8                     u3970:
 13736   0059F8  0E00               	movlw	0
 13737   0059FA  6E2B               	movwf	___fldiv@b^0,c
 13738   0059FC  0E00               	movlw	0
 13739   0059FE  6E2C               	movwf	(___fldiv@b+1)^0,c
 13740   005A00  0E00               	movlw	0
 13741   005A02  6E2D               	movwf	(___fldiv@b+2)^0,c
 13742   005A04  0E00               	movlw	0
 13743   005A06  6E2E               	movwf	(___fldiv@b+3)^0,c
 13744   005A08                     l4236:
 13745   005A08  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 13746   005A0A  0E00               	movlw	0
 13747   005A0C  6E2E               	movwf	(___fldiv@b+3)^0,c
 13748   005A0E  EF11  F02D         	goto	l4242
 13749   005A12                     l4240:
 13750   005A12  0E00               	movlw	0
 13751   005A14  6E2B               	movwf	___fldiv@b^0,c
 13752   005A16  0E00               	movlw	0
 13753   005A18  6E2C               	movwf	(___fldiv@b+1)^0,c
 13754   005A1A  0E00               	movlw	0
 13755   005A1C  6E2D               	movwf	(___fldiv@b+2)^0,c
 13756   005A1E  0E00               	movlw	0
 13757   005A20  6E2E               	movwf	(___fldiv@b+3)^0,c
 13758   005A22                     l4242:
 13759   005A22  5032               	movf	(___fldiv@a+3)^0,w,c
 13760   005A24  0B80               	andlw	128
 13761   005A26  1A3B               	xorwf	___fldiv@sign^0,f,c
 13762   005A28  5032               	movf	(___fldiv@a+3)^0,w,c
 13763   005A2A  2432               	addwf	(___fldiv@a+3)^0,w,c
 13764   005A2C  6E43               	movwf	___fldiv@aexp^0,c
 13765   005A2E  AE31               	btfss	(___fldiv@a+2)^0,7,c
 13766   005A30  EF1C  F02D         	goto	u3981
 13767   005A34  EF1E  F02D         	goto	u3980
 13768   005A38                     u3981:
 13769   005A38  EF1F  F02D         	goto	l4250
 13770   005A3C                     u3980:
 13771   005A3C  8043               	bsf	___fldiv@aexp^0,0,c
 13772   005A3E                     l4250:
 13773   005A3E  5043               	movf	___fldiv@aexp^0,w,c
 13774   005A40  B4D8               	btfsc	status,2,c
 13775   005A42  EF25  F02D         	goto	u3991
 13776   005A46  EF27  F02D         	goto	u3990
 13777   005A4A                     u3991:
 13778   005A4A  EF3C  F02D         	goto	l4260
 13779   005A4E                     u3990:
 13780   005A4E  2843               	incf	___fldiv@aexp^0,w,c
 13781   005A50  A4D8               	btfss	status,2,c
 13782   005A52  EF2D  F02D         	goto	u4001
 13783   005A56  EF2F  F02D         	goto	u4000
 13784   005A5A                     u4001:
 13785   005A5A  EF37  F02D         	goto	l4256
 13786   005A5E                     u4000:
 13787   005A5E  0E00               	movlw	0
 13788   005A60  6E2F               	movwf	___fldiv@a^0,c
 13789   005A62  0E00               	movlw	0
 13790   005A64  6E30               	movwf	(___fldiv@a+1)^0,c
 13791   005A66  0E00               	movlw	0
 13792   005A68  6E31               	movwf	(___fldiv@a+2)^0,c
 13793   005A6A  0E00               	movlw	0
 13794   005A6C  6E32               	movwf	(___fldiv@a+3)^0,c
 13795   005A6E                     l4256:
 13796   005A6E  8E31               	bsf	(___fldiv@a+2)^0,7,c
 13797   005A70  0E00               	movlw	0
 13798   005A72  6E32               	movwf	(___fldiv@a+3)^0,c
 13799   005A74  EF44  F02D         	goto	l4262
 13800   005A78                     l4260:
 13801   005A78  0E00               	movlw	0
 13802   005A7A  6E2F               	movwf	___fldiv@a^0,c
 13803   005A7C  0E00               	movlw	0
 13804   005A7E  6E30               	movwf	(___fldiv@a+1)^0,c
 13805   005A80  0E00               	movlw	0
 13806   005A82  6E31               	movwf	(___fldiv@a+2)^0,c
 13807   005A84  0E00               	movlw	0
 13808   005A86  6E32               	movwf	(___fldiv@a+3)^0,c
 13809   005A88                     l4262:
 13810   005A88  502F               	movf	___fldiv@a^0,w,c
 13811   005A8A  1030               	iorwf	(___fldiv@a+1)^0,w,c
 13812   005A8C  1031               	iorwf	(___fldiv@a+2)^0,w,c
 13813   005A8E  1032               	iorwf	(___fldiv@a+3)^0,w,c
 13814   005A90  A4D8               	btfss	status,2,c
 13815   005A92  EF4D  F02D         	goto	u4011
 13816   005A96  EF4F  F02D         	goto	u4010
 13817   005A9A                     u4011:
 13818   005A9A  EF67  F02D         	goto	l4274
 13819   005A9E                     u4010:
 13820   005A9E  0E00               	movlw	0
 13821   005AA0  6E2B               	movwf	___fldiv@b^0,c
 13822   005AA2  0E00               	movlw	0
 13823   005AA4  6E2C               	movwf	(___fldiv@b+1)^0,c
 13824   005AA6  0E00               	movlw	0
 13825   005AA8  6E2D               	movwf	(___fldiv@b+2)^0,c
 13826   005AAA  0E00               	movlw	0
 13827   005AAC  6E2E               	movwf	(___fldiv@b+3)^0,c
 13828   005AAE  0E80               	movlw	128
 13829   005AB0  122D               	iorwf	(___fldiv@b+2)^0,f,c
 13830   005AB2  0E7F               	movlw	127
 13831   005AB4  122E               	iorwf	(___fldiv@b+3)^0,f,c
 13832   005AB6                     l4268:
 13833   005AB6  503B               	movf	___fldiv@sign^0,w,c
 13834   005AB8  122E               	iorwf	(___fldiv@b+3)^0,f,c
 13835   005ABA  C02B  F02B         	movff	___fldiv@b,?___fldiv
 13836   005ABE  C02C  F02C         	movff	___fldiv@b+1,?___fldiv+1
 13837   005AC2  C02D  F02D         	movff	___fldiv@b+2,?___fldiv+2
 13838   005AC6  C02E  F02E         	movff	___fldiv@b+3,?___fldiv+3
 13839   005ACA  EFAA  F02E         	goto	l1150
 13840   005ACE                     l4274:
 13841   005ACE  5042               	movf	___fldiv@bexp^0,w,c
 13842   005AD0  A4D8               	btfss	status,2,c
 13843   005AD2  EF6D  F02D         	goto	u4021
 13844   005AD6  EF6F  F02D         	goto	u4020
 13845   005ADA                     u4021:
 13846   005ADA  EF79  F02D         	goto	l4282
 13847   005ADE                     u4020:
 13848   005ADE  0E00               	movlw	0
 13849   005AE0  6E2B               	movwf	?___fldiv^0,c
 13850   005AE2  0E00               	movlw	0
 13851   005AE4  6E2C               	movwf	(?___fldiv+1)^0,c
 13852   005AE6  0E00               	movlw	0
 13853   005AE8  6E2D               	movwf	(?___fldiv+2)^0,c
 13854   005AEA  0E00               	movlw	0
 13855   005AEC  6E2E               	movwf	(?___fldiv+3)^0,c
 13856   005AEE  EFAA  F02E         	goto	l1150
 13857   005AF2                     l4282:
 13858   005AF2  5043               	movf	___fldiv@aexp^0,w,c
 13859   005AF4  C042  F033         	movff	___fldiv@bexp,??___fldiv
 13860   005AF8  6A34               	clrf	(??___fldiv+1)^0,c
 13861   005AFA  5E33               	subwf	??___fldiv^0,f,c
 13862   005AFC  0E00               	movlw	0
 13863   005AFE  5A34               	subwfb	(??___fldiv+1)^0,f,c
 13864   005B00  0E7F               	movlw	127
 13865   005B02  2433               	addwf	??___fldiv^0,w,c
 13866   005B04  6E3C               	movwf	___fldiv@new_exp^0,c
 13867   005B06  0E00               	movlw	0
 13868   005B08  2034               	addwfc	(??___fldiv+1)^0,w,c
 13869   005B0A  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 13870   005B0C  C02B  F037         	movff	___fldiv@b,___fldiv@rem
 13871   005B10  C02C  F038         	movff	___fldiv@b+1,___fldiv@rem+1
 13872   005B14  C02D  F039         	movff	___fldiv@b+2,___fldiv@rem+2
 13873   005B18  C02E  F03A         	movff	___fldiv@b+3,___fldiv@rem+3
 13874   005B1C  0E00               	movlw	0
 13875   005B1E  6E2B               	movwf	___fldiv@b^0,c
 13876   005B20  0E00               	movlw	0
 13877   005B22  6E2C               	movwf	(___fldiv@b+1)^0,c
 13878   005B24  0E00               	movlw	0
 13879   005B26  6E2D               	movwf	(___fldiv@b+2)^0,c
 13880   005B28  0E00               	movlw	0
 13881   005B2A  6E2E               	movwf	(___fldiv@b+3)^0,c
 13882   005B2C  0E00               	movlw	0
 13883   005B2E  6E3E               	movwf	___fldiv@grs^0,c
 13884   005B30  0E00               	movlw	0
 13885   005B32  6E3F               	movwf	(___fldiv@grs+1)^0,c
 13886   005B34  0E00               	movlw	0
 13887   005B36  6E40               	movwf	(___fldiv@grs+2)^0,c
 13888   005B38  0E00               	movlw	0
 13889   005B3A  6E41               	movwf	(___fldiv@grs+3)^0,c
 13890   005B3C  0E00               	movlw	0
 13891   005B3E  6E43               	movwf	___fldiv@aexp^0,c
 13892   005B40  EFDA  F02D         	goto	l1152
 13893   005B44                     l4292:
 13894   005B44  5043               	movf	___fldiv@aexp^0,w,c
 13895   005B46  B4D8               	btfsc	status,2,c
 13896   005B48  EFA8  F02D         	goto	u4031
 13897   005B4C  EFAA  F02D         	goto	u4030
 13898   005B50                     u4031:
 13899   005B50  EFC1  F02D         	goto	l4300
 13900   005B54                     u4030:
 13901   005B54  90D8               	bcf	status,0,c
 13902   005B56  3637               	rlcf	___fldiv@rem^0,f,c
 13903   005B58  3638               	rlcf	(___fldiv@rem+1)^0,f,c
 13904   005B5A  3639               	rlcf	(___fldiv@rem+2)^0,f,c
 13905   005B5C  363A               	rlcf	(___fldiv@rem+3)^0,f,c
 13906   005B5E  90D8               	bcf	status,0,c
 13907   005B60  362B               	rlcf	___fldiv@b^0,f,c
 13908   005B62  362C               	rlcf	(___fldiv@b+1)^0,f,c
 13909   005B64  362D               	rlcf	(___fldiv@b+2)^0,f,c
 13910   005B66  362E               	rlcf	(___fldiv@b+3)^0,f,c
 13911   005B68  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 13912   005B6A  EFB9  F02D         	goto	u4041
 13913   005B6E  EFBB  F02D         	goto	u4040
 13914   005B72                     u4041:
 13915   005B72  EFBC  F02D         	goto	l1155
 13916   005B76                     u4040:
 13917   005B76  802B               	bsf	___fldiv@b^0,0,c
 13918   005B78                     l1155:
 13919   005B78  90D8               	bcf	status,0,c
 13920   005B7A  363E               	rlcf	___fldiv@grs^0,f,c
 13921   005B7C  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 13922   005B7E  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 13923   005B80  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 13924   005B82                     l4300:
 13925   005B82  502F               	movf	___fldiv@a^0,w,c
 13926   005B84  5C37               	subwf	___fldiv@rem^0,w,c
 13927   005B86  5030               	movf	(___fldiv@a+1)^0,w,c
 13928   005B88  5838               	subwfb	(___fldiv@rem+1)^0,w,c
 13929   005B8A  5031               	movf	(___fldiv@a+2)^0,w,c
 13930   005B8C  5839               	subwfb	(___fldiv@rem+2)^0,w,c
 13931   005B8E  5032               	movf	(___fldiv@a+3)^0,w,c
 13932   005B90  583A               	subwfb	(___fldiv@rem+3)^0,w,c
 13933   005B92  A0D8               	btfss	status,0,c
 13934   005B94  EFCE  F02D         	goto	u4051
 13935   005B98  EFD0  F02D         	goto	u4050
 13936   005B9C                     u4051:
 13937   005B9C  EFD9  F02D         	goto	l4306
 13938   005BA0                     u4050:
 13939   005BA0  8C41               	bsf	(___fldiv@grs+3)^0,6,c
 13940   005BA2  502F               	movf	___fldiv@a^0,w,c
 13941   005BA4  5E37               	subwf	___fldiv@rem^0,f,c
 13942   005BA6  5030               	movf	(___fldiv@a+1)^0,w,c
 13943   005BA8  5A38               	subwfb	(___fldiv@rem+1)^0,f,c
 13944   005BAA  5031               	movf	(___fldiv@a+2)^0,w,c
 13945   005BAC  5A39               	subwfb	(___fldiv@rem+2)^0,f,c
 13946   005BAE  5032               	movf	(___fldiv@a+3)^0,w,c
 13947   005BB0  5A3A               	subwfb	(___fldiv@rem+3)^0,f,c
 13948   005BB2                     l4306:
 13949   005BB2  2A43               	incf	___fldiv@aexp^0,f,c
 13950   005BB4                     l1152:
 13951   005BB4  0E19               	movlw	25
 13952   005BB6  6443               	cpfsgt	___fldiv@aexp^0,c
 13953   005BB8  EFE0  F02D         	goto	u4061
 13954   005BBC  EFE2  F02D         	goto	u4060
 13955   005BC0                     u4061:
 13956   005BC0  EFA2  F02D         	goto	l4292
 13957   005BC4                     u4060:
 13958   005BC4  5037               	movf	___fldiv@rem^0,w,c
 13959   005BC6  1038               	iorwf	(___fldiv@rem+1)^0,w,c
 13960   005BC8  1039               	iorwf	(___fldiv@rem+2)^0,w,c
 13961   005BCA  103A               	iorwf	(___fldiv@rem+3)^0,w,c
 13962   005BCC  B4D8               	btfsc	status,2,c
 13963   005BCE  EFEB  F02D         	goto	u4071
 13964   005BD2  EFED  F02D         	goto	u4070
 13965   005BD6                     u4071:
 13966   005BD6  EF05  F02E         	goto	l4318
 13967   005BDA                     u4070:
 13968   005BDA  803E               	bsf	___fldiv@grs^0,0,c
 13969   005BDC  EF05  F02E         	goto	l4318
 13970   005BE0                     l4312:
 13971   005BE0  90D8               	bcf	status,0,c
 13972   005BE2  362B               	rlcf	___fldiv@b^0,f,c
 13973   005BE4  362C               	rlcf	(___fldiv@b+1)^0,f,c
 13974   005BE6  362D               	rlcf	(___fldiv@b+2)^0,f,c
 13975   005BE8  362E               	rlcf	(___fldiv@b+3)^0,f,c
 13976   005BEA  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 13977   005BEC  EFFA  F02D         	goto	u4081
 13978   005BF0  EFFC  F02D         	goto	u4080
 13979   005BF4                     u4081:
 13980   005BF4  EFFD  F02D         	goto	l1161
 13981   005BF8                     u4080:
 13982   005BF8  802B               	bsf	___fldiv@b^0,0,c
 13983   005BFA                     l1161:
 13984   005BFA  90D8               	bcf	status,0,c
 13985   005BFC  363E               	rlcf	___fldiv@grs^0,f,c
 13986   005BFE  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 13987   005C00  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 13988   005C02  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 13989   005C04  063C               	decf	___fldiv@new_exp^0,f,c
 13990   005C06  A0D8               	btfss	status,0,c
 13991   005C08  063D               	decf	(___fldiv@new_exp+1)^0,f,c
 13992   005C0A                     l4318:
 13993   005C0A  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 13994   005C0C  EF0A  F02E         	goto	u4091
 13995   005C10  EF0C  F02E         	goto	u4090
 13996   005C14                     u4091:
 13997   005C14  EFF0  F02D         	goto	l4312
 13998   005C18                     u4090:
 13999   005C18  0E00               	movlw	0
 14000   005C1A  6E43               	movwf	___fldiv@aexp^0,c
 14001   005C1C  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 14002   005C1E  EF13  F02E         	goto	u4101
 14003   005C22  EF15  F02E         	goto	u4100
 14004   005C26                     u4101:
 14005   005C26  EF39  F02E         	goto	l1163
 14006   005C2A                     u4100:
 14007   005C2A  0EFF               	movlw	255
 14008   005C2C  143E               	andwf	___fldiv@grs^0,w,c
 14009   005C2E  6E33               	movwf	??___fldiv^0,c
 14010   005C30  0EFF               	movlw	255
 14011   005C32  143F               	andwf	(___fldiv@grs+1)^0,w,c
 14012   005C34  6E34               	movwf	(??___fldiv+1)^0,c
 14013   005C36  0EFF               	movlw	255
 14014   005C38  1440               	andwf	(___fldiv@grs+2)^0,w,c
 14015   005C3A  6E35               	movwf	(??___fldiv+2)^0,c
 14016   005C3C  0E7F               	movlw	127
 14017   005C3E  1441               	andwf	(___fldiv@grs+3)^0,w,c
 14018   005C40  6E36               	movwf	(??___fldiv+3)^0,c
 14019   005C42  5033               	movf	??___fldiv^0,w,c
 14020   005C44  1034               	iorwf	(??___fldiv+1)^0,w,c
 14021   005C46  1035               	iorwf	(??___fldiv+2)^0,w,c
 14022   005C48  1036               	iorwf	(??___fldiv+3)^0,w,c
 14023   005C4A  B4D8               	btfsc	status,2,c
 14024   005C4C  EF2A  F02E         	goto	u4111
 14025   005C50  EF2C  F02E         	goto	u4110
 14026   005C54                     u4111:
 14027   005C54  EF30  F02E         	goto	l1164
 14028   005C58                     u4110:
 14029   005C58                     l4326:
 14030   005C58  0E01               	movlw	1
 14031   005C5A  6E43               	movwf	___fldiv@aexp^0,c
 14032   005C5C  EF39  F02E         	goto	l1163
 14033   005C60                     l1164:
 14034   005C60  A02B               	btfss	___fldiv@b^0,0,c
 14035   005C62  EF35  F02E         	goto	u4121
 14036   005C66  EF37  F02E         	goto	u4120
 14037   005C6A                     u4121:
 14038   005C6A  EF39  F02E         	goto	l1163
 14039   005C6E                     u4120:
 14040   005C6E  EF2C  F02E         	goto	l4326
 14041   005C72                     l1163:
 14042   005C72  5043               	movf	___fldiv@aexp^0,w,c
 14043   005C74  B4D8               	btfsc	status,2,c
 14044   005C76  EF3F  F02E         	goto	u4131
 14045   005C7A  EF41  F02E         	goto	u4130
 14046   005C7E                     u4131:
 14047   005C7E  EF65  F02E         	goto	l4338
 14048   005C82                     u4130:
 14049   005C82  0E01               	movlw	1
 14050   005C84  262B               	addwf	___fldiv@b^0,f,c
 14051   005C86  0E00               	movlw	0
 14052   005C88  222C               	addwfc	(___fldiv@b+1)^0,f,c
 14053   005C8A  222D               	addwfc	(___fldiv@b+2)^0,f,c
 14054   005C8C  222E               	addwfc	(___fldiv@b+3)^0,f,c
 14055   005C8E  A02E               	btfss	(___fldiv@b+3)^0,0,c
 14056   005C90  EF4C  F02E         	goto	u4141
 14057   005C94  EF4E  F02E         	goto	u4140
 14058   005C98                     u4141:
 14059   005C98  EF65  F02E         	goto	l4338
 14060   005C9C                     u4140:
 14061   005C9C  C02B  F033         	movff	___fldiv@b,??___fldiv
 14062   005CA0  C02C  F034         	movff	___fldiv@b+1,??___fldiv+1
 14063   005CA4  C02D  F035         	movff	___fldiv@b+2,??___fldiv+2
 14064   005CA8  C02E  F036         	movff	___fldiv@b+3,??___fldiv+3
 14065   005CAC  3436               	rlcf	(??___fldiv+3)^0,w,c
 14066   005CAE  3236               	rrcf	(??___fldiv+3)^0,f,c
 14067   005CB0  3235               	rrcf	(??___fldiv+2)^0,f,c
 14068   005CB2  3234               	rrcf	(??___fldiv+1)^0,f,c
 14069   005CB4  3233               	rrcf	??___fldiv^0,f,c
 14070   005CB6  C033  F02B         	movff	??___fldiv,___fldiv@b
 14071   005CBA  C034  F02C         	movff	??___fldiv+1,___fldiv@b+1
 14072   005CBE  C035  F02D         	movff	??___fldiv+2,___fldiv@b+2
 14073   005CC2  C036  F02E         	movff	??___fldiv+3,___fldiv@b+3
 14074   005CC6  4A3C               	infsnz	___fldiv@new_exp^0,f,c
 14075   005CC8  2A3D               	incf	(___fldiv@new_exp+1)^0,f,c
 14076   005CCA                     l4338:
 14077   005CCA  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14078   005CCC  EF70  F02E         	goto	u4151
 14079   005CD0  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 14080   005CD2  E108               	bnz	u4150
 14081   005CD4  283C               	incf	___fldiv@new_exp^0,w,c
 14082   005CD6  A0D8               	btfss	status,0,c
 14083   005CD8  EF70  F02E         	goto	u4151
 14084   005CDC  EF72  F02E         	goto	u4150
 14085   005CE0                     u4151:
 14086   005CE0  EF7D  F02E         	goto	l4342
 14087   005CE4                     u4150:
 14088   005CE4  0E00               	movlw	0
 14089   005CE6  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 14090   005CE8  683C               	setf	___fldiv@new_exp^0,c
 14091   005CEA  0E00               	movlw	0
 14092   005CEC  6E2B               	movwf	___fldiv@b^0,c
 14093   005CEE  0E00               	movlw	0
 14094   005CF0  6E2C               	movwf	(___fldiv@b+1)^0,c
 14095   005CF2  0E00               	movlw	0
 14096   005CF4  6E2D               	movwf	(___fldiv@b+2)^0,c
 14097   005CF6  0E00               	movlw	0
 14098   005CF8  6E2E               	movwf	(___fldiv@b+3)^0,c
 14099   005CFA                     l4342:
 14100   005CFA  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14101   005CFC  EF8A  F02E         	goto	u4160
 14102   005D00  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 14103   005D02  E106               	bnz	u4161
 14104   005D04  043C               	decf	___fldiv@new_exp^0,w,c
 14105   005D06  B0D8               	btfsc	status,0,c
 14106   005D08  EF88  F02E         	goto	u4161
 14107   005D0C  EF8A  F02E         	goto	u4160
 14108   005D10                     u4161:
 14109   005D10  EF98  F02E         	goto	l4346
 14110   005D14                     u4160:
 14111   005D14  0E00               	movlw	0
 14112   005D16  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 14113   005D18  0E00               	movlw	0
 14114   005D1A  6E3C               	movwf	___fldiv@new_exp^0,c
 14115   005D1C  0E00               	movlw	0
 14116   005D1E  6E2B               	movwf	___fldiv@b^0,c
 14117   005D20  0E00               	movlw	0
 14118   005D22  6E2C               	movwf	(___fldiv@b+1)^0,c
 14119   005D24  0E00               	movlw	0
 14120   005D26  6E2D               	movwf	(___fldiv@b+2)^0,c
 14121   005D28  0E00               	movlw	0
 14122   005D2A  6E2E               	movwf	(___fldiv@b+3)^0,c
 14123   005D2C  0E00               	movlw	0
 14124   005D2E  6E3B               	movwf	___fldiv@sign^0,c
 14125   005D30                     l4346:
 14126   005D30  C03C  F042         	movff	___fldiv@new_exp,___fldiv@bexp
 14127   005D34  A042               	btfss	___fldiv@bexp^0,0,c
 14128   005D36  EF9F  F02E         	goto	u4171
 14129   005D3A  EFA1  F02E         	goto	u4170
 14130   005D3E                     u4171:
 14131   005D3E  EFA4  F02E         	goto	l4352
 14132   005D42                     u4170:
 14133   005D42  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 14134   005D44  EFA5  F02E         	goto	l4354
 14135   005D48                     l4352:
 14136   005D48  9E2D               	bcf	(___fldiv@b+2)^0,7,c
 14137   005D4A                     l4354:
 14138   005D4A  90D8               	bcf	status,0,c
 14139   005D4C  3042               	rrcf	___fldiv@bexp^0,w,c
 14140   005D4E  6E2E               	movwf	(___fldiv@b+3)^0,c
 14141   005D50  EF5B  F02D         	goto	l4268
 14142   005D54                     l1150:
 14143   005D54  0012               	return		;funcret
 14144   005D56                     __end_of___fldiv:
 14145                           	callstack 0
 14146                           
 14147 ;; *************** function _color_read_Red *****************
 14148 ;; Defined at:
 14149 ;;		line 68 in file "color.c"
 14150 ;; Parameters:    Size  Location     Type
 14151 ;;		None
 14152 ;; Auto vars:     Size  Location     Type
 14153 ;;  tmp             2   10[COMRAM] unsigned int 
 14154 ;; Return value:  Size  Location     Type
 14155 ;;                  2    5[COMRAM] unsigned int 
 14156 ;; Registers used:
 14157 ;;		wreg, status,2, status,0, cstack
 14158 ;; Tracked objects:
 14159 ;;		On entry : 0/0
 14160 ;;		On exit  : 0/0
 14161 ;;		Unchanged: 0/0
 14162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14165 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14166 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14167 ;;Total ram usage:        7 bytes
 14168 ;; Hardware stack levels used: 1
 14169 ;; Hardware stack levels required when called: 4
 14170 ;; This function calls:
 14171 ;;		_I2C_2_Master_Read
 14172 ;;		_I2C_2_Master_RepStart
 14173 ;;		_I2C_2_Master_Start
 14174 ;;		_I2C_2_Master_Stop
 14175 ;;		_I2C_2_Master_Write
 14176 ;; This function is called by:
 14177 ;;		_main
 14178 ;; This function uses a non-reentrant model
 14179 ;;
 14180                           
 14181                           	psect	text39
 14182   0071AA                     __ptext39:
 14183                           	callstack 0
 14184   0071AA                     _color_read_Red:
 14185                           	callstack 26
 14186   0071AA                     
 14187                           ;color.c: 69:  unsigned int tmp;;color.c: 70:  I2C_2_Master_Start();
 14188   0071AA  EC31  F03B         	call	_I2C_2_Master_Start	;wreg free
 14189                           
 14190                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x00);
 14191   0071AE  0E52               	movlw	82
 14192   0071B0  EC16  F03B         	call	_I2C_2_Master_Write
 14193                           
 14194                           ;color.c: 72:  I2C_2_Master_Write(0xA0 | 0x16);
 14195   0071B4  0EB6               	movlw	182
 14196   0071B6  EC16  F03B         	call	_I2C_2_Master_Write
 14197                           
 14198                           ;color.c: 73:  I2C_2_Master_RepStart();
 14199   0071BA  EC27  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14200                           
 14201                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x01);
 14202   0071BE  0E53               	movlw	83
 14203   0071C0  EC16  F03B         	call	_I2C_2_Master_Write
 14204                           
 14205                           ;color.c: 75:  tmp=I2C_2_Master_Read(1);
 14206   0071C4  0E01               	movlw	1
 14207   0071C6  ECDE  F039         	call	_I2C_2_Master_Read
 14208   0071CA  6E08               	movwf	??_color_read_Red^0,c
 14209   0071CC  5008               	movf	??_color_read_Red^0,w,c
 14210   0071CE  6E0B               	movwf	color_read_Red@tmp^0,c
 14211   0071D0  6A0C               	clrf	(color_read_Red@tmp+1)^0,c
 14212                           
 14213                           ;color.c: 76:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14214   0071D2  0E00               	movlw	0
 14215   0071D4  ECDE  F039         	call	_I2C_2_Master_Read
 14216   0071D8  6E08               	movwf	??_color_read_Red^0,c
 14217   0071DA  5008               	movf	??_color_read_Red^0,w,c
 14218   0071DC  6E0A               	movwf	(??_color_read_Red+2)^0,c
 14219   0071DE  6A09               	clrf	(??_color_read_Red+1)^0,c
 14220   0071E0  500B               	movf	color_read_Red@tmp^0,w,c
 14221   0071E2  1009               	iorwf	(??_color_read_Red+1)^0,w,c
 14222   0071E4  6E0B               	movwf	color_read_Red@tmp^0,c
 14223   0071E6  500C               	movf	(color_read_Red@tmp+1)^0,w,c
 14224   0071E8  100A               	iorwf	(??_color_read_Red+2)^0,w,c
 14225   0071EA  6E0C               	movwf	(color_read_Red@tmp+1)^0,c
 14226                           
 14227                           ;color.c: 77:  I2C_2_Master_Stop();
 14228   0071EC  EC2C  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14229   0071F0                     
 14230                           ;color.c: 78:  return tmp;
 14231   0071F0  C00B  F006         	movff	color_read_Red@tmp,?_color_read_Red
 14232   0071F4  C00C  F007         	movff	color_read_Red@tmp+1,?_color_read_Red+1
 14233   0071F8  0012               	return		;funcret
 14234   0071FA                     __end_of_color_read_Red:
 14235                           	callstack 0
 14236                           
 14237 ;; *************** function _color_read_Green *****************
 14238 ;; Defined at:
 14239 ;;		line 81 in file "color.c"
 14240 ;; Parameters:    Size  Location     Type
 14241 ;;		None
 14242 ;; Auto vars:     Size  Location     Type
 14243 ;;  tmp             2   10[COMRAM] unsigned int 
 14244 ;; Return value:  Size  Location     Type
 14245 ;;                  2    5[COMRAM] unsigned int 
 14246 ;; Registers used:
 14247 ;;		wreg, status,2, status,0, cstack
 14248 ;; Tracked objects:
 14249 ;;		On entry : 0/0
 14250 ;;		On exit  : 0/0
 14251 ;;		Unchanged: 0/0
 14252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14254 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14255 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14256 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14257 ;;Total ram usage:        7 bytes
 14258 ;; Hardware stack levels used: 1
 14259 ;; Hardware stack levels required when called: 4
 14260 ;; This function calls:
 14261 ;;		_I2C_2_Master_Read
 14262 ;;		_I2C_2_Master_RepStart
 14263 ;;		_I2C_2_Master_Start
 14264 ;;		_I2C_2_Master_Stop
 14265 ;;		_I2C_2_Master_Write
 14266 ;; This function is called by:
 14267 ;;		_main
 14268 ;; This function uses a non-reentrant model
 14269 ;;
 14270                           
 14271                           	psect	text40
 14272   0071FA                     __ptext40:
 14273                           	callstack 0
 14274   0071FA                     _color_read_Green:
 14275                           	callstack 26
 14276   0071FA                     
 14277                           ;color.c: 82:  unsigned int tmp;;color.c: 83:  I2C_2_Master_Start();
 14278   0071FA  EC31  F03B         	call	_I2C_2_Master_Start	;wreg free
 14279                           
 14280                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x00);
 14281   0071FE  0E52               	movlw	82
 14282   007200  EC16  F03B         	call	_I2C_2_Master_Write
 14283                           
 14284                           ;color.c: 85:  I2C_2_Master_Write(0xA0 | 0x18);
 14285   007204  0EB8               	movlw	184
 14286   007206  EC16  F03B         	call	_I2C_2_Master_Write
 14287                           
 14288                           ;color.c: 86:  I2C_2_Master_RepStart();
 14289   00720A  EC27  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14290                           
 14291                           ;color.c: 87:  I2C_2_Master_Write(0x52 | 0x01);
 14292   00720E  0E53               	movlw	83
 14293   007210  EC16  F03B         	call	_I2C_2_Master_Write
 14294                           
 14295                           ;color.c: 88:  tmp=I2C_2_Master_Read(1);
 14296   007214  0E01               	movlw	1
 14297   007216  ECDE  F039         	call	_I2C_2_Master_Read
 14298   00721A  6E08               	movwf	??_color_read_Green^0,c
 14299   00721C  5008               	movf	??_color_read_Green^0,w,c
 14300   00721E  6E0B               	movwf	color_read_Green@tmp^0,c
 14301   007220  6A0C               	clrf	(color_read_Green@tmp+1)^0,c
 14302                           
 14303                           ;color.c: 89:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14304   007222  0E00               	movlw	0
 14305   007224  ECDE  F039         	call	_I2C_2_Master_Read
 14306   007228  6E08               	movwf	??_color_read_Green^0,c
 14307   00722A  5008               	movf	??_color_read_Green^0,w,c
 14308   00722C  6E0A               	movwf	(??_color_read_Green+2)^0,c
 14309   00722E  6A09               	clrf	(??_color_read_Green+1)^0,c
 14310   007230  500B               	movf	color_read_Green@tmp^0,w,c
 14311   007232  1009               	iorwf	(??_color_read_Green+1)^0,w,c
 14312   007234  6E0B               	movwf	color_read_Green@tmp^0,c
 14313   007236  500C               	movf	(color_read_Green@tmp+1)^0,w,c
 14314   007238  100A               	iorwf	(??_color_read_Green+2)^0,w,c
 14315   00723A  6E0C               	movwf	(color_read_Green@tmp+1)^0,c
 14316                           
 14317                           ;color.c: 90:  I2C_2_Master_Stop();
 14318   00723C  EC2C  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14319   007240                     
 14320                           ;color.c: 91:  return tmp;
 14321   007240  C00B  F006         	movff	color_read_Green@tmp,?_color_read_Green
 14322   007244  C00C  F007         	movff	color_read_Green@tmp+1,?_color_read_Green+1
 14323   007248  0012               	return		;funcret
 14324   00724A                     __end_of_color_read_Green:
 14325                           	callstack 0
 14326                           
 14327 ;; *************** function _color_read_Clear *****************
 14328 ;; Defined at:
 14329 ;;		line 55 in file "color.c"
 14330 ;; Parameters:    Size  Location     Type
 14331 ;;		None
 14332 ;; Auto vars:     Size  Location     Type
 14333 ;;  tmp             2   10[COMRAM] unsigned int 
 14334 ;; Return value:  Size  Location     Type
 14335 ;;                  2    5[COMRAM] unsigned int 
 14336 ;; Registers used:
 14337 ;;		wreg, status,2, status,0, cstack
 14338 ;; Tracked objects:
 14339 ;;		On entry : 0/0
 14340 ;;		On exit  : 0/0
 14341 ;;		Unchanged: 0/0
 14342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14344 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14345 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14346 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14347 ;;Total ram usage:        7 bytes
 14348 ;; Hardware stack levels used: 1
 14349 ;; Hardware stack levels required when called: 4
 14350 ;; This function calls:
 14351 ;;		_I2C_2_Master_Read
 14352 ;;		_I2C_2_Master_RepStart
 14353 ;;		_I2C_2_Master_Start
 14354 ;;		_I2C_2_Master_Stop
 14355 ;;		_I2C_2_Master_Write
 14356 ;; This function is called by:
 14357 ;;		_main
 14358 ;; This function uses a non-reentrant model
 14359 ;;
 14360                           
 14361                           	psect	text41
 14362   00724A                     __ptext41:
 14363                           	callstack 0
 14364   00724A                     _color_read_Clear:
 14365                           	callstack 26
 14366   00724A                     
 14367                           ;color.c: 56:  unsigned int tmp;;color.c: 57:  I2C_2_Master_Start();
 14368   00724A  EC31  F03B         	call	_I2C_2_Master_Start	;wreg free
 14369                           
 14370                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
 14371   00724E  0E52               	movlw	82
 14372   007250  EC16  F03B         	call	_I2C_2_Master_Write
 14373                           
 14374                           ;color.c: 59:  I2C_2_Master_Write(0xA0 | 0x14);
 14375   007254  0EB4               	movlw	180
 14376   007256  EC16  F03B         	call	_I2C_2_Master_Write
 14377                           
 14378                           ;color.c: 60:  I2C_2_Master_RepStart();
 14379   00725A  EC27  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14380                           
 14381                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
 14382   00725E  0E53               	movlw	83
 14383   007260  EC16  F03B         	call	_I2C_2_Master_Write
 14384                           
 14385                           ;color.c: 62:  tmp=I2C_2_Master_Read(1);
 14386   007264  0E01               	movlw	1
 14387   007266  ECDE  F039         	call	_I2C_2_Master_Read
 14388   00726A  6E08               	movwf	??_color_read_Clear^0,c
 14389   00726C  5008               	movf	??_color_read_Clear^0,w,c
 14390   00726E  6E0B               	movwf	color_read_Clear@tmp^0,c
 14391   007270  6A0C               	clrf	(color_read_Clear@tmp+1)^0,c
 14392                           
 14393                           ;color.c: 63:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14394   007272  0E00               	movlw	0
 14395   007274  ECDE  F039         	call	_I2C_2_Master_Read
 14396   007278  6E08               	movwf	??_color_read_Clear^0,c
 14397   00727A  5008               	movf	??_color_read_Clear^0,w,c
 14398   00727C  6E0A               	movwf	(??_color_read_Clear+2)^0,c
 14399   00727E  6A09               	clrf	(??_color_read_Clear+1)^0,c
 14400   007280  500B               	movf	color_read_Clear@tmp^0,w,c
 14401   007282  1009               	iorwf	(??_color_read_Clear+1)^0,w,c
 14402   007284  6E0B               	movwf	color_read_Clear@tmp^0,c
 14403   007286  500C               	movf	(color_read_Clear@tmp+1)^0,w,c
 14404   007288  100A               	iorwf	(??_color_read_Clear+2)^0,w,c
 14405   00728A  6E0C               	movwf	(color_read_Clear@tmp+1)^0,c
 14406                           
 14407                           ;color.c: 64:  I2C_2_Master_Stop();
 14408   00728C  EC2C  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14409   007290                     
 14410                           ;color.c: 65:  return tmp;
 14411   007290  C00B  F006         	movff	color_read_Clear@tmp,?_color_read_Clear
 14412   007294  C00C  F007         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 14413   007298  0012               	return		;funcret
 14414   00729A                     __end_of_color_read_Clear:
 14415                           	callstack 0
 14416                           
 14417 ;; *************** function _color_read_Blue *****************
 14418 ;; Defined at:
 14419 ;;		line 94 in file "color.c"
 14420 ;; Parameters:    Size  Location     Type
 14421 ;;		None
 14422 ;; Auto vars:     Size  Location     Type
 14423 ;;  tmp             2   10[COMRAM] unsigned int 
 14424 ;; Return value:  Size  Location     Type
 14425 ;;                  2    5[COMRAM] unsigned int 
 14426 ;; Registers used:
 14427 ;;		wreg, status,2, status,0, cstack
 14428 ;; Tracked objects:
 14429 ;;		On entry : 0/0
 14430 ;;		On exit  : 0/0
 14431 ;;		Unchanged: 0/0
 14432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14434 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14435 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14436 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14437 ;;Total ram usage:        7 bytes
 14438 ;; Hardware stack levels used: 1
 14439 ;; Hardware stack levels required when called: 4
 14440 ;; This function calls:
 14441 ;;		_I2C_2_Master_Read
 14442 ;;		_I2C_2_Master_RepStart
 14443 ;;		_I2C_2_Master_Start
 14444 ;;		_I2C_2_Master_Stop
 14445 ;;		_I2C_2_Master_Write
 14446 ;; This function is called by:
 14447 ;;		_main
 14448 ;; This function uses a non-reentrant model
 14449 ;;
 14450                           
 14451                           	psect	text42
 14452   00729A                     __ptext42:
 14453                           	callstack 0
 14454   00729A                     _color_read_Blue:
 14455                           	callstack 26
 14456   00729A                     
 14457                           ;color.c: 95:  unsigned int tmp;;color.c: 96:  I2C_2_Master_Start();
 14458   00729A  EC31  F03B         	call	_I2C_2_Master_Start	;wreg free
 14459                           
 14460                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x00);
 14461   00729E  0E52               	movlw	82
 14462   0072A0  EC16  F03B         	call	_I2C_2_Master_Write
 14463                           
 14464                           ;color.c: 98:  I2C_2_Master_Write(0xA0 | 0x1A);
 14465   0072A4  0EBA               	movlw	186
 14466   0072A6  EC16  F03B         	call	_I2C_2_Master_Write
 14467                           
 14468                           ;color.c: 99:  I2C_2_Master_RepStart();
 14469   0072AA  EC27  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14470                           
 14471                           ;color.c: 100:  I2C_2_Master_Write(0x52 | 0x01);
 14472   0072AE  0E53               	movlw	83
 14473   0072B0  EC16  F03B         	call	_I2C_2_Master_Write
 14474                           
 14475                           ;color.c: 101:  tmp=I2C_2_Master_Read(1);
 14476   0072B4  0E01               	movlw	1
 14477   0072B6  ECDE  F039         	call	_I2C_2_Master_Read
 14478   0072BA  6E08               	movwf	??_color_read_Blue^0,c
 14479   0072BC  5008               	movf	??_color_read_Blue^0,w,c
 14480   0072BE  6E0B               	movwf	color_read_Blue@tmp^0,c
 14481   0072C0  6A0C               	clrf	(color_read_Blue@tmp+1)^0,c
 14482                           
 14483                           ;color.c: 102:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14484   0072C2  0E00               	movlw	0
 14485   0072C4  ECDE  F039         	call	_I2C_2_Master_Read
 14486   0072C8  6E08               	movwf	??_color_read_Blue^0,c
 14487   0072CA  5008               	movf	??_color_read_Blue^0,w,c
 14488   0072CC  6E0A               	movwf	(??_color_read_Blue+2)^0,c
 14489   0072CE  6A09               	clrf	(??_color_read_Blue+1)^0,c
 14490   0072D0  500B               	movf	color_read_Blue@tmp^0,w,c
 14491   0072D2  1009               	iorwf	(??_color_read_Blue+1)^0,w,c
 14492   0072D4  6E0B               	movwf	color_read_Blue@tmp^0,c
 14493   0072D6  500C               	movf	(color_read_Blue@tmp+1)^0,w,c
 14494   0072D8  100A               	iorwf	(??_color_read_Blue+2)^0,w,c
 14495   0072DA  6E0C               	movwf	(color_read_Blue@tmp+1)^0,c
 14496                           
 14497                           ;color.c: 103:  I2C_2_Master_Stop();
 14498   0072DC  EC2C  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14499   0072E0                     
 14500                           ;color.c: 104:  return tmp;
 14501   0072E0  C00B  F006         	movff	color_read_Blue@tmp,?_color_read_Blue
 14502   0072E4  C00C  F007         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
 14503   0072E8  0012               	return		;funcret
 14504   0072EA                     __end_of_color_read_Blue:
 14505                           	callstack 0
 14506                           
 14507 ;; *************** function _I2C_2_Master_RepStart *****************
 14508 ;; Defined at:
 14509 ;;		line 30 in file "i2c.c"
 14510 ;; Parameters:    Size  Location     Type
 14511 ;;		None
 14512 ;; Auto vars:     Size  Location     Type
 14513 ;;		None
 14514 ;; Return value:  Size  Location     Type
 14515 ;;                  1    wreg      void 
 14516 ;; Registers used:
 14517 ;;		wreg, status,2, status,0, cstack
 14518 ;; Tracked objects:
 14519 ;;		On entry : 0/0
 14520 ;;		On exit  : 0/0
 14521 ;;		Unchanged: 0/0
 14522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14527 ;;Total ram usage:        0 bytes
 14528 ;; Hardware stack levels used: 1
 14529 ;; Hardware stack levels required when called: 3
 14530 ;; This function calls:
 14531 ;;		_I2C_2_Master_Idle
 14532 ;; This function is called by:
 14533 ;;		_color_read_Clear
 14534 ;;		_color_read_Red
 14535 ;;		_color_read_Green
 14536 ;;		_color_read_Blue
 14537 ;; This function uses a non-reentrant model
 14538 ;;
 14539                           
 14540                           	psect	text43
 14541   00764E                     __ptext43:
 14542                           	callstack 0
 14543   00764E                     _I2C_2_Master_RepStart:
 14544                           	callstack 26
 14545   00764E                     
 14546                           ;i2c.c: 31:   I2C_2_Master_Idle();
 14547   00764E  EC80  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14548   007652                     
 14549                           ;i2c.c: 32:   SSP2CON2bits.RSEN = 1;
 14550   007652  010E               	movlb	14	; () banked
 14551   007654  83DA               	bsf	218,1,b	;volatile
 14552   007656                     
 14553                           ; BSR set to: 14
 14554   007656  0012               	return		;funcret
 14555   007658                     __end_of_I2C_2_Master_RepStart:
 14556                           	callstack 0
 14557                           
 14558 ;; *************** function _I2C_2_Master_Read *****************
 14559 ;; Defined at:
 14560 ;;		line 45 in file "i2c.c"
 14561 ;; Parameters:    Size  Location     Type
 14562 ;;  ack             1    wreg     unsigned char 
 14563 ;; Auto vars:     Size  Location     Type
 14564 ;;  ack             1    3[COMRAM] unsigned char 
 14565 ;;  tmp             1    4[COMRAM] unsigned char 
 14566 ;; Return value:  Size  Location     Type
 14567 ;;                  1    wreg      unsigned char 
 14568 ;; Registers used:
 14569 ;;		wreg, status,2, status,0, cstack
 14570 ;; Tracked objects:
 14571 ;;		On entry : 0/0
 14572 ;;		On exit  : 0/0
 14573 ;;		Unchanged: 0/0
 14574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14578 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14579 ;;Total ram usage:        3 bytes
 14580 ;; Hardware stack levels used: 1
 14581 ;; Hardware stack levels required when called: 3
 14582 ;; This function calls:
 14583 ;;		_I2C_2_Master_Idle
 14584 ;; This function is called by:
 14585 ;;		_color_read_Clear
 14586 ;;		_color_read_Red
 14587 ;;		_color_read_Green
 14588 ;;		_color_read_Blue
 14589 ;; This function uses a non-reentrant model
 14590 ;;
 14591                           
 14592                           	psect	text44
 14593   0073BC                     __ptext44:
 14594                           	callstack 0
 14595   0073BC                     _I2C_2_Master_Read:
 14596                           	callstack 26
 14597                           
 14598                           ; BSR set to: 14
 14599                           ;incstack = 0
 14600                           ;I2C_2_Master_Read@ack stored from wreg
 14601   0073BC  6E04               	movwf	I2C_2_Master_Read@ack^0,c
 14602   0073BE                     
 14603                           ;i2c.c: 46:   unsigned char tmp;;i2c.c: 47:   I2C_2_Master_Idle();
 14604   0073BE  EC80  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14605   0073C2                     
 14606                           ;i2c.c: 48:   SSP2CON2bits.RCEN = 1;
 14607   0073C2  010E               	movlb	14	; () banked
 14608   0073C4  87DA               	bsf	218,3,b	;volatile
 14609                           
 14610                           ;i2c.c: 49:   I2C_2_Master_Idle();
 14611   0073C6  EC80  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14612   0073CA                     
 14613                           ;i2c.c: 50:   tmp = SSP2BUF;
 14614   0073CA  CED5 F005          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 14615                           
 14616                           ;i2c.c: 51:   I2C_2_Master_Idle();
 14617   0073CE  EC80  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14618   0073D2                     
 14619                           ;i2c.c: 52:   SSP2CON2bits.ACKDT = !ack;
 14620   0073D2  5004               	movf	I2C_2_Master_Read@ack^0,w,c
 14621   0073D4  B4D8               	btfsc	status,2,c
 14622   0073D6  EFEF  F039         	goto	u4511
 14623   0073DA  EFF3  F039         	goto	u4510
 14624   0073DE                     u4511:
 14625   0073DE  6A03               	clrf	??_I2C_2_Master_Read^0,c
 14626   0073E0  2A03               	incf	??_I2C_2_Master_Read^0,f,c
 14627   0073E2  EFF4  F039         	goto	u4528
 14628   0073E6                     u4510:
 14629   0073E6  6A03               	clrf	??_I2C_2_Master_Read^0,c
 14630   0073E8                     u4528:
 14631   0073E8  3A03               	swapf	??_I2C_2_Master_Read^0,f,c
 14632   0073EA  4603               	rlncf	??_I2C_2_Master_Read^0,f,c
 14633   0073EC  010E               	movlb	14	; () banked
 14634   0073EE  51DA               	movf	218,w,b	;volatile
 14635   0073F0  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 14636   0073F2  0BDF               	andlw	-33
 14637   0073F4  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 14638   0073F6  6FDA               	movwf	218,b	;volatile
 14639   0073F8                     
 14640                           ; BSR set to: 14
 14641                           ;i2c.c: 53:   SSP2CON2bits.ACKEN = 1;
 14642   0073F8  89DA               	bsf	218,4,b	;volatile
 14643   0073FA                     
 14644                           ; BSR set to: 14
 14645                           ;i2c.c: 54:   return tmp;
 14646   0073FA  5005               	movf	I2C_2_Master_Read@tmp^0,w,c
 14647   0073FC                     
 14648                           ; BSR set to: 14
 14649   0073FC  0012               	return		;funcret
 14650   0073FE                     __end_of_I2C_2_Master_Read:
 14651                           	callstack 0
 14652                           
 14653 ;; *************** function _color_click_toggleLED *****************
 14654 ;; Defined at:
 14655 ;;		line 108 in file "color.c"
 14656 ;; Parameters:    Size  Location     Type
 14657 ;;		None
 14658 ;; Auto vars:     Size  Location     Type
 14659 ;;		None
 14660 ;; Return value:  Size  Location     Type
 14661 ;;                  1    wreg      void 
 14662 ;; Registers used:
 14663 ;;		wreg, status,2, status,0
 14664 ;; Tracked objects:
 14665 ;;		On entry : 0/0
 14666 ;;		On exit  : 0/0
 14667 ;;		Unchanged: 0/0
 14668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14672 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14673 ;;Total ram usage:        1 bytes
 14674 ;; Hardware stack levels used: 1
 14675 ;; Hardware stack levels required when called: 2
 14676 ;; This function calls:
 14677 ;;		Nothing
 14678 ;; This function is called by:
 14679 ;;		_main
 14680 ;; This function uses a non-reentrant model
 14681 ;;
 14682                           
 14683                           	psect	text45
 14684   007144                     __ptext45:
 14685                           	callstack 0
 14686   007144                     _color_click_toggleLED:
 14687                           	callstack 28
 14688   007144                     
 14689                           ;color.c: 109:     LATGbits.LATG0 = !LATGbits.LATG0;
 14690   007144  A07F               	btfss	127,0,c	;volatile
 14691   007146  EFA7  F038         	goto	u5171
 14692   00714A  EFAB  F038         	goto	u5170
 14693   00714E                     u5171:
 14694   00714E  6A02               	clrf	??_color_click_toggleLED^0,c
 14695   007150  2A02               	incf	??_color_click_toggleLED^0,f,c
 14696   007152  EFAC  F038         	goto	u5188
 14697   007156                     u5170:
 14698   007156  6A02               	clrf	??_color_click_toggleLED^0,c
 14699   007158                     u5188:
 14700   007158  507F               	movf	127,w,c	;volatile
 14701   00715A  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14702   00715C  0BFE               	andlw	-2
 14703   00715E  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14704   007160  6E7F               	movwf	127,c	;volatile
 14705                           
 14706                           ;color.c: 110:     LATAbits.LATA3 = !LATAbits.LATA3;
 14707   007162  A679               	btfss	121,3,c	;volatile
 14708   007164  EFB6  F038         	goto	u5191
 14709   007168  EFBA  F038         	goto	u5190
 14710   00716C                     u5191:
 14711   00716C  6A02               	clrf	??_color_click_toggleLED^0,c
 14712   00716E  2A02               	incf	??_color_click_toggleLED^0,f,c
 14713   007170  EFBB  F038         	goto	u5208
 14714   007174                     u5190:
 14715   007174  6A02               	clrf	??_color_click_toggleLED^0,c
 14716   007176                     u5208:
 14717   007176  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14718   007178  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14719   00717A  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14720   00717C  5079               	movf	121,w,c	;volatile
 14721   00717E  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14722   007180  0BF7               	andlw	-9
 14723   007182  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14724   007184  6E79               	movwf	121,c	;volatile
 14725                           
 14726                           ;color.c: 111:     LATEbits.LATE7 = !LATEbits.LATE7;
 14727   007186  AE7D               	btfss	125,7,c	;volatile
 14728   007188  EFC8  F038         	goto	u5211
 14729   00718C  EFCC  F038         	goto	u5210
 14730   007190                     u5211:
 14731   007190  6A02               	clrf	??_color_click_toggleLED^0,c
 14732   007192  2A02               	incf	??_color_click_toggleLED^0,f,c
 14733   007194  EFCD  F038         	goto	u5228
 14734   007198                     u5210:
 14735   007198  6A02               	clrf	??_color_click_toggleLED^0,c
 14736   00719A                     u5228:
 14737   00719A  3202               	rrcf	??_color_click_toggleLED^0,f,c
 14738   00719C  3202               	rrcf	??_color_click_toggleLED^0,f,c
 14739   00719E  507D               	movf	125,w,c	;volatile
 14740   0071A0  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14741   0071A2  0B7F               	andlw	-129
 14742   0071A4  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14743   0071A6  6E7D               	movwf	125,c	;volatile
 14744   0071A8  0012               	return		;funcret
 14745   0071AA                     __end_of_color_click_toggleLED:
 14746                           	callstack 0
 14747                           
 14748 ;; *************** function _color_click_init *****************
 14749 ;; Defined at:
 14750 ;;		line 8 in file "color.c"
 14751 ;; Parameters:    Size  Location     Type
 14752 ;;		None
 14753 ;; Auto vars:     Size  Location     Type
 14754 ;;		None
 14755 ;; Return value:  Size  Location     Type
 14756 ;;                  1    wreg      void 
 14757 ;; Registers used:
 14758 ;;		wreg, status,2, status,0, cstack
 14759 ;; Tracked objects:
 14760 ;;		On entry : 0/0
 14761 ;;		On exit  : 0/0
 14762 ;;		Unchanged: 0/0
 14763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14767 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14768 ;;Total ram usage:        1 bytes
 14769 ;; Hardware stack levels used: 1
 14770 ;; Hardware stack levels required when called: 5
 14771 ;; This function calls:
 14772 ;;		_I2C_2_Master_Init
 14773 ;;		_color_writetoaddr
 14774 ;; This function is called by:
 14775 ;;		_main
 14776 ;; This function uses a non-reentrant model
 14777 ;;
 14778                           
 14779                           	psect	text46
 14780   0072EA                     __ptext46:
 14781                           	callstack 0
 14782   0072EA                     _color_click_init:
 14783                           	callstack 25
 14784   0072EA                     
 14785                           ;color.c: 10:     I2C_2_Master_Init();
 14786   0072EA  EC6B  F03A         	call	_I2C_2_Master_Init	;wreg free
 14787   0072EE                     
 14788                           ;color.c: 11:  color_writetoaddr(0x00, 0x01);
 14789   0072EE  0E01               	movlw	1
 14790   0072F0  6E04               	movwf	color_writetoaddr@value^0,c
 14791   0072F2  0E00               	movlw	0
 14792   0072F4  ECA7  F03A         	call	_color_writetoaddr
 14793   0072F8                     
 14794                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
 14795   0072F8  0E3F               	movlw	63
 14796   0072FA  6E06               	movwf	??_color_click_init^0,c
 14797   0072FC  0E55               	movlw	85
 14798   0072FE                     u8277:
 14799   0072FE  2EE8               	decfsz	wreg,f,c
 14800   007300  D7FE               	bra	u8277
 14801   007302  2E06               	decfsz	??_color_click_init^0,f,c
 14802   007304  D7FC               	bra	u8277
 14803   007306  0000               	nop	
 14804   007308                     
 14805                           ;color.c: 13:  color_writetoaddr(0x00, 0x03);
 14806   007308  0E03               	movlw	3
 14807   00730A  6E04               	movwf	color_writetoaddr@value^0,c
 14808   00730C  0E00               	movlw	0
 14809   00730E  ECA7  F03A         	call	_color_writetoaddr
 14810   007312                     
 14811                           ;color.c: 14:  color_writetoaddr(0x01, 0xFF);
 14812   007312  0EFF               	movlw	255
 14813   007314  6E04               	movwf	color_writetoaddr@value^0,c
 14814   007316  0E01               	movlw	1
 14815   007318  ECA7  F03A         	call	_color_writetoaddr
 14816   00731C                     
 14817                           ;color.c: 15:     color_writetoaddr(0x03, 0xFF);
 14818   00731C  0EFF               	movlw	255
 14819   00731E  6E04               	movwf	color_writetoaddr@value^0,c
 14820   007320  0E03               	movlw	3
 14821   007322  ECA7  F03A         	call	_color_writetoaddr
 14822   007326                     
 14823                           ;color.c: 27:     LATGbits.LATG0=0;
 14824   007326  907F               	bcf	127,0,c	;volatile
 14825   007328                     
 14826                           ;color.c: 28:     LATAbits.LATA3=0;
 14827   007328  9679               	bcf	121,3,c	;volatile
 14828   00732A                     
 14829                           ;color.c: 29:     LATEbits.LATE7=0;
 14830   00732A  9E7D               	bcf	125,7,c	;volatile
 14831   00732C                     
 14832                           ;color.c: 32:     TRISGbits.TRISG0=0;
 14833   00732C  9087               	bcf	135,0,c	;volatile
 14834   00732E                     
 14835                           ;color.c: 33:     TRISAbits.TRISA3=0;
 14836   00732E  9681               	bcf	129,3,c	;volatile
 14837   007330                     
 14838                           ;color.c: 34:     TRISEbits.TRISE7=0;
 14839   007330  9E85               	bcf	133,7,c	;volatile
 14840   007332  0012               	return		;funcret
 14841   007334                     __end_of_color_click_init:
 14842                           	callstack 0
 14843                           
 14844 ;; *************** function _color_writetoaddr *****************
 14845 ;; Defined at:
 14846 ;;		line 38 in file "color.c"
 14847 ;; Parameters:    Size  Location     Type
 14848 ;;  address         1    wreg     unsigned char 
 14849 ;;  value           1    3[COMRAM] unsigned char 
 14850 ;; Auto vars:     Size  Location     Type
 14851 ;;  address         1    4[COMRAM] unsigned char 
 14852 ;; Return value:  Size  Location     Type
 14853 ;;                  1    wreg      void 
 14854 ;; Registers used:
 14855 ;;		wreg, status,2, status,0, cstack
 14856 ;; Tracked objects:
 14857 ;;		On entry : 0/0
 14858 ;;		On exit  : 0/0
 14859 ;;		Unchanged: 0/0
 14860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14861 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14865 ;;Total ram usage:        2 bytes
 14866 ;; Hardware stack levels used: 1
 14867 ;; Hardware stack levels required when called: 4
 14868 ;; This function calls:
 14869 ;;		_I2C_2_Master_Start
 14870 ;;		_I2C_2_Master_Stop
 14871 ;;		_I2C_2_Master_Write
 14872 ;; This function is called by:
 14873 ;;		_color_click_init
 14874 ;;		_decide_action
 14875 ;;		_main
 14876 ;; This function uses a non-reentrant model
 14877 ;;
 14878                           
 14879                           	psect	text47
 14880   00754E                     __ptext47:
 14881                           	callstack 0
 14882   00754E                     _color_writetoaddr:
 14883                           	callstack 25
 14884                           
 14885                           ;incstack = 0
 14886                           ;color_writetoaddr@address stored from wreg
 14887   00754E  6E05               	movwf	color_writetoaddr@address^0,c
 14888   007550                     
 14889                           ;color.c: 39:     I2C_2_Master_Start();
 14890   007550  EC31  F03B         	call	_I2C_2_Master_Start	;wreg free
 14891                           
 14892                           ;color.c: 40:     I2C_2_Master_Write(0x52 | 0x00);
 14893   007554  0E52               	movlw	82
 14894   007556  EC16  F03B         	call	_I2C_2_Master_Write
 14895                           
 14896                           ;color.c: 41:     I2C_2_Master_Write(0x80 | address);
 14897   00755A  5005               	movf	color_writetoaddr@address^0,w,c
 14898   00755C  0980               	iorlw	128
 14899   00755E  EC16  F03B         	call	_I2C_2_Master_Write
 14900                           
 14901                           ;color.c: 42:     I2C_2_Master_Write(value);
 14902   007562  5004               	movf	color_writetoaddr@value^0,w,c
 14903   007564  EC16  F03B         	call	_I2C_2_Master_Write
 14904                           
 14905                           ;color.c: 43:     I2C_2_Master_Stop();
 14906   007568  EC2C  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14907   00756C  0012               	return		;funcret
 14908   00756E                     __end_of_color_writetoaddr:
 14909                           	callstack 0
 14910                           
 14911 ;; *************** function _I2C_2_Master_Write *****************
 14912 ;; Defined at:
 14913 ;;		line 40 in file "i2c.c"
 14914 ;; Parameters:    Size  Location     Type
 14915 ;;  data_byte       1    wreg     unsigned char 
 14916 ;; Auto vars:     Size  Location     Type
 14917 ;;  data_byte       1    2[COMRAM] unsigned char 
 14918 ;; Return value:  Size  Location     Type
 14919 ;;                  1    wreg      void 
 14920 ;; Registers used:
 14921 ;;		wreg, status,2, status,0, cstack
 14922 ;; Tracked objects:
 14923 ;;		On entry : 0/0
 14924 ;;		On exit  : 0/0
 14925 ;;		Unchanged: 0/0
 14926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14931 ;;Total ram usage:        1 bytes
 14932 ;; Hardware stack levels used: 1
 14933 ;; Hardware stack levels required when called: 3
 14934 ;; This function calls:
 14935 ;;		_I2C_2_Master_Idle
 14936 ;; This function is called by:
 14937 ;;		_color_writetoaddr
 14938 ;;		_color_read_Clear
 14939 ;;		_color_read_Red
 14940 ;;		_color_read_Green
 14941 ;;		_color_read_Blue
 14942 ;; This function uses a non-reentrant model
 14943 ;;
 14944                           
 14945                           	psect	text48
 14946   00762C                     __ptext48:
 14947                           	callstack 0
 14948   00762C                     _I2C_2_Master_Write:
 14949                           	callstack 25
 14950                           
 14951                           ;incstack = 0
 14952                           ;I2C_2_Master_Write@data_byte stored from wreg
 14953   00762C  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
 14954   00762E                     
 14955                           ;i2c.c: 41:   I2C_2_Master_Idle();
 14956   00762E  EC80  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14957   007632                     
 14958                           ;i2c.c: 42:   SSP2BUF = data_byte;
 14959   007632  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 14960   007636  0012               	return		;funcret
 14961   007638                     __end_of_I2C_2_Master_Write:
 14962                           	callstack 0
 14963                           
 14964 ;; *************** function _I2C_2_Master_Stop *****************
 14965 ;; Defined at:
 14966 ;;		line 35 in file "i2c.c"
 14967 ;; Parameters:    Size  Location     Type
 14968 ;;		None
 14969 ;; Auto vars:     Size  Location     Type
 14970 ;;		None
 14971 ;; Return value:  Size  Location     Type
 14972 ;;                  1    wreg      void 
 14973 ;; Registers used:
 14974 ;;		wreg, status,2, status,0, cstack
 14975 ;; Tracked objects:
 14976 ;;		On entry : 0/0
 14977 ;;		On exit  : 0/0
 14978 ;;		Unchanged: 0/0
 14979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14984 ;;Total ram usage:        0 bytes
 14985 ;; Hardware stack levels used: 1
 14986 ;; Hardware stack levels required when called: 3
 14987 ;; This function calls:
 14988 ;;		_I2C_2_Master_Idle
 14989 ;; This function is called by:
 14990 ;;		_color_writetoaddr
 14991 ;;		_color_read_Clear
 14992 ;;		_color_read_Red
 14993 ;;		_color_read_Green
 14994 ;;		_color_read_Blue
 14995 ;; This function uses a non-reentrant model
 14996 ;;
 14997                           
 14998                           	psect	text49
 14999   007658                     __ptext49:
 15000                           	callstack 0
 15001   007658                     _I2C_2_Master_Stop:
 15002                           	callstack 25
 15003   007658                     
 15004                           ;i2c.c: 36:   I2C_2_Master_Idle();
 15005   007658  EC80  F03A         	call	_I2C_2_Master_Idle	;wreg free
 15006   00765C                     
 15007                           ;i2c.c: 37:   SSP2CON2bits.PEN = 1;
 15008   00765C  010E               	movlb	14	; () banked
 15009   00765E  85DA               	bsf	218,2,b	;volatile
 15010   007660                     
 15011                           ; BSR set to: 14
 15012   007660  0012               	return		;funcret
 15013   007662                     __end_of_I2C_2_Master_Stop:
 15014                           	callstack 0
 15015                           
 15016 ;; *************** function _I2C_2_Master_Start *****************
 15017 ;; Defined at:
 15018 ;;		line 25 in file "i2c.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;		None
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;		None
 15023 ;; Return value:  Size  Location     Type
 15024 ;;                  1    wreg      void 
 15025 ;; Registers used:
 15026 ;;		wreg, status,2, status,0, cstack
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15036 ;;Total ram usage:        0 bytes
 15037 ;; Hardware stack levels used: 1
 15038 ;; Hardware stack levels required when called: 3
 15039 ;; This function calls:
 15040 ;;		_I2C_2_Master_Idle
 15041 ;; This function is called by:
 15042 ;;		_color_writetoaddr
 15043 ;;		_color_read_Clear
 15044 ;;		_color_read_Red
 15045 ;;		_color_read_Green
 15046 ;;		_color_read_Blue
 15047 ;; This function uses a non-reentrant model
 15048 ;;
 15049                           
 15050                           	psect	text50
 15051   007662                     __ptext50:
 15052                           	callstack 0
 15053   007662                     _I2C_2_Master_Start:
 15054                           	callstack 25
 15055   007662                     
 15056                           ;i2c.c: 26:   I2C_2_Master_Idle();
 15057   007662  EC80  F03A         	call	_I2C_2_Master_Idle	;wreg free
 15058   007666                     
 15059                           ;i2c.c: 27:   SSP2CON2bits.SEN = 1;
 15060   007666  010E               	movlb	14	; () banked
 15061   007668  81DA               	bsf	218,0,b	;volatile
 15062   00766A                     
 15063                           ; BSR set to: 14
 15064   00766A  0012               	return		;funcret
 15065   00766C                     __end_of_I2C_2_Master_Start:
 15066                           	callstack 0
 15067                           
 15068 ;; *************** function _I2C_2_Master_Idle *****************
 15069 ;; Defined at:
 15070 ;;		line 21 in file "i2c.c"
 15071 ;; Parameters:    Size  Location     Type
 15072 ;;		None
 15073 ;; Auto vars:     Size  Location     Type
 15074 ;;		None
 15075 ;; Return value:  Size  Location     Type
 15076 ;;                  1    wreg      void 
 15077 ;; Registers used:
 15078 ;;		wreg, status,2, status,0
 15079 ;; Tracked objects:
 15080 ;;		On entry : 0/0
 15081 ;;		On exit  : 0/0
 15082 ;;		Unchanged: 0/0
 15083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15086 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15087 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15088 ;;Total ram usage:        1 bytes
 15089 ;; Hardware stack levels used: 1
 15090 ;; Hardware stack levels required when called: 2
 15091 ;; This function calls:
 15092 ;;		Nothing
 15093 ;; This function is called by:
 15094 ;;		_I2C_2_Master_Start
 15095 ;;		_I2C_2_Master_RepStart
 15096 ;;		_I2C_2_Master_Stop
 15097 ;;		_I2C_2_Master_Write
 15098 ;;		_I2C_2_Master_Read
 15099 ;; This function uses a non-reentrant model
 15100 ;;
 15101                           
 15102                           	psect	text51
 15103   007500                     __ptext51:
 15104                           	callstack 0
 15105   007500                     _I2C_2_Master_Idle:
 15106                           	callstack 25
 15107   007500                     l119:
 15108   007500  010E               	movlb	14	; () banked
 15109   007502  B5D8               	btfsc	216,2,b	;volatile
 15110   007504  EF86  F03A         	goto	u2991
 15111   007508  EF88  F03A         	goto	u2990
 15112   00750C                     u2991:
 15113   00750C  EF80  F03A         	goto	l119
 15114   007510                     u2990:
 15115   007510                     
 15116                           ; BSR set to: 14
 15117   007510  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
 15118   007514  0E1F               	movlw	31
 15119   007516  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
 15120   007518  A4D8               	btfss	status,2,c
 15121   00751A  EF91  F03A         	goto	u3001
 15122   00751E  EF93  F03A         	goto	u3000
 15123   007522                     u3001:
 15124   007522  EF80  F03A         	goto	l119
 15125   007526                     u3000:
 15126   007526                     
 15127                           ; BSR set to: 14
 15128   007526  0012               	return		;funcret
 15129   007528                     __end_of_I2C_2_Master_Idle:
 15130                           	callstack 0
 15131                           
 15132 ;; *************** function _I2C_2_Master_Init *****************
 15133 ;; Defined at:
 15134 ;;		line 4 in file "i2c.c"
 15135 ;; Parameters:    Size  Location     Type
 15136 ;;		None
 15137 ;; Auto vars:     Size  Location     Type
 15138 ;;		None
 15139 ;; Return value:  Size  Location     Type
 15140 ;;                  1    wreg      void 
 15141 ;; Registers used:
 15142 ;;		wreg, status,2
 15143 ;; Tracked objects:
 15144 ;;		On entry : 0/0
 15145 ;;		On exit  : 0/0
 15146 ;;		Unchanged: 0/0
 15147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15152 ;;Total ram usage:        0 bytes
 15153 ;; Hardware stack levels used: 1
 15154 ;; Hardware stack levels required when called: 2
 15155 ;; This function calls:
 15156 ;;		Nothing
 15157 ;; This function is called by:
 15158 ;;		_color_click_init
 15159 ;;		_main
 15160 ;; This function uses a non-reentrant model
 15161 ;;
 15162                           
 15163                           	psect	text52
 15164   0074D6                     __ptext52:
 15165                           	callstack 0
 15166   0074D6                     _I2C_2_Master_Init:
 15167                           	callstack 27
 15168   0074D6                     
 15169                           ;i2c.c: 6:   SSP2CON1bits.SSPM= 0b1000;
 15170   0074D6  010E               	movlb	14	; () banked
 15171   0074D8  51D9               	movf	217,w,b	;volatile
 15172   0074DA  0BF0               	andlw	-16
 15173   0074DC  0908               	iorlw	8
 15174   0074DE  6FD9               	movwf	217,b	;volatile
 15175   0074E0                     
 15176                           ; BSR set to: 14
 15177                           ;i2c.c: 7:   SSP2CON1bits.SSPEN = 1;
 15178   0074E0  8BD9               	bsf	217,5,b	;volatile
 15179                           
 15180                           ;i2c.c: 8:   SSP2ADD = (64000000/(4*100000))-1;
 15181   0074E2  0E9F               	movlw	159
 15182   0074E4  6FD6               	movwf	214,b	;volatile
 15183   0074E6                     
 15184                           ; BSR set to: 14
 15185                           ;i2c.c: 11:   TRISDbits.TRISD5 = 1;
 15186   0074E6  8A84               	bsf	132,5,c	;volatile
 15187   0074E8                     
 15188                           ; BSR set to: 14
 15189                           ;i2c.c: 12:   TRISDbits.TRISD6 = 1;
 15190   0074E8  8C84               	bsf	132,6,c	;volatile
 15191   0074EA                     
 15192                           ; BSR set to: 14
 15193                           ;i2c.c: 13:   ANSELDbits.ANSELD5=0;
 15194   0074EA  9BA7               	bcf	167,5,b	;volatile
 15195   0074EC                     
 15196                           ; BSR set to: 14
 15197                           ;i2c.c: 14:   ANSELDbits.ANSELD6=0;
 15198   0074EC  9DA7               	bcf	167,6,b	;volatile
 15199                           
 15200                           ;i2c.c: 15:   SSP2DATPPS=0x1D;
 15201   0074EE  0E1D               	movlw	29
 15202   0074F0  6F1D               	movwf	29,b	;volatile
 15203                           
 15204                           ;i2c.c: 16:   SSP2CLKPPS=0x1E;
 15205   0074F2  0E1E               	movlw	30
 15206   0074F4  6F1C               	movwf	28,b	;volatile
 15207                           
 15208                           ;i2c.c: 17:   RD5PPS=0x1C;
 15209   0074F6  0E1C               	movlw	28
 15210   0074F8  6F6F               	movwf	111,b	;volatile
 15211                           
 15212                           ;i2c.c: 18:   RD6PPS=0x1B;
 15213   0074FA  0E1B               	movlw	27
 15214   0074FC  6F70               	movwf	112,b	;volatile
 15215   0074FE                     
 15216                           ; BSR set to: 14
 15217   0074FE  0012               	return		;funcret
 15218   007500                     __end_of_I2C_2_Master_Init:
 15219                           	callstack 0
 15220                           
 15221 ;; *************** function _Timer0_init *****************
 15222 ;; Defined at:
 15223 ;;		line 7 in file "timers.c"
 15224 ;; Parameters:    Size  Location     Type
 15225 ;;		None
 15226 ;; Auto vars:     Size  Location     Type
 15227 ;;		None
 15228 ;; Return value:  Size  Location     Type
 15229 ;;                  1    wreg      void 
 15230 ;; Registers used:
 15231 ;;		wreg, status,2
 15232 ;; Tracked objects:
 15233 ;;		On entry : 0/0
 15234 ;;		On exit  : 0/0
 15235 ;;		Unchanged: 0/0
 15236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15241 ;;Total ram usage:        0 bytes
 15242 ;; Hardware stack levels used: 1
 15243 ;; Hardware stack levels required when called: 2
 15244 ;; This function calls:
 15245 ;;		Nothing
 15246 ;; This function is called by:
 15247 ;;		_main
 15248 ;; This function uses a non-reentrant model
 15249 ;;
 15250                           
 15251                           	psect	text53
 15252   00756E                     __ptext53:
 15253                           	callstack 0
 15254   00756E                     _Timer0_init:
 15255                           	callstack 28
 15256   00756E                     
 15257                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 15258   00756E  50D6               	movf	214,w,c	;volatile
 15259   007570  0B1F               	andlw	-225
 15260   007572  0940               	iorlw	64
 15261   007574  6ED6               	movwf	214,c	;volatile
 15262   007576                     
 15263                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 15264   007576  88D6               	bsf	214,4,c	;volatile
 15265                           
 15266                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1111;
 15267   007578  0E0F               	movlw	15
 15268   00757A  12D6               	iorwf	214,f,c	;volatile
 15269                           
 15270                           ;timers.c: 12:     T0CON0bits.T0OUTPS=0b000;
 15271   00757C  0EF0               	movlw	-16
 15272   00757E  16D5               	andwf	213,f,c	;volatile
 15273   007580                     
 15274                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
 15275   007580  88D5               	bsf	213,4,c	;volatile
 15276                           
 15277                           ;timers.c: 17:     TMR0H=0b00001011;
 15278   007582  0E0B               	movlw	11
 15279   007584  6ED4               	movwf	212,c	;volatile
 15280                           
 15281                           ;timers.c: 18:     TMR0L=0b11011011;
 15282   007586  0EDB               	movlw	219
 15283   007588  6ED3               	movwf	211,c	;volatile
 15284   00758A                     
 15285                           ;timers.c: 20:     T0CON0bits.T0EN=1;
 15286   00758A  8ED5               	bsf	213,7,c	;volatile
 15287   00758C  0012               	return		;funcret
 15288   00758E                     __end_of_Timer0_init:
 15289                           	callstack 0
 15290                           
 15291 ;; *************** function _Interrupts_init *****************
 15292 ;; Defined at:
 15293 ;;		line 7 in file "interrupts.c"
 15294 ;; Parameters:    Size  Location     Type
 15295 ;;		None
 15296 ;; Auto vars:     Size  Location     Type
 15297 ;;		None
 15298 ;; Return value:  Size  Location     Type
 15299 ;;                  1    wreg      void 
 15300 ;; Registers used:
 15301 ;;		None
 15302 ;; Tracked objects:
 15303 ;;		On entry : 0/0
 15304 ;;		On exit  : 0/0
 15305 ;;		Unchanged: 0/0
 15306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15311 ;;Total ram usage:        0 bytes
 15312 ;; Hardware stack levels used: 1
 15313 ;; Hardware stack levels required when called: 2
 15314 ;; This function calls:
 15315 ;;		Nothing
 15316 ;; This function is called by:
 15317 ;;		_main
 15318 ;; This function uses a non-reentrant model
 15319 ;;
 15320                           
 15321                           	psect	text54
 15322   007638                     __ptext54:
 15323                           	callstack 0
 15324   007638                     _Interrupts_init:
 15325                           	callstack 28
 15326   007638                     
 15327                           ;interrupts.c: 9:     INTCONbits.PEIE=1;
 15328   007638  8CF2               	bsf	242,6,c	;volatile
 15329                           
 15330                           ;interrupts.c: 10:     PIE2bits.C1IE=1;
 15331   00763A  010E               	movlb	14	; () banked
 15332   00763C  812B               	bsf	43,0,b	;volatile
 15333                           
 15334                           ;interrupts.c: 14:     PIE0bits.IOCIE=1;
 15335   00763E  8929               	bsf	41,4,b	;volatile
 15336                           
 15337                           ;interrupts.c: 15:     INTCONbits.GIE=1;
 15338   007640  8EF2               	bsf	242,7,c	;volatile
 15339   007642                     
 15340                           ; BSR set to: 14
 15341   007642  0012               	return		;funcret
 15342   007644                     __end_of_Interrupts_init:
 15343                           	callstack 0
 15344                           
 15345 ;; *************** function _ADC_init *****************
 15346 ;; Defined at:
 15347 ;;		line 9 in file "ADC.c"
 15348 ;; Parameters:    Size  Location     Type
 15349 ;;		None
 15350 ;; Auto vars:     Size  Location     Type
 15351 ;;		None
 15352 ;; Return value:  Size  Location     Type
 15353 ;;                  1    wreg      void 
 15354 ;; Registers used:
 15355 ;;		wreg, status,2
 15356 ;; Tracked objects:
 15357 ;;		On entry : 0/0
 15358 ;;		On exit  : 0/0
 15359 ;;		Unchanged: 0/0
 15360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15365 ;;Total ram usage:        0 bytes
 15366 ;; Hardware stack levels used: 1
 15367 ;; Hardware stack levels required when called: 2
 15368 ;; This function calls:
 15369 ;;		Nothing
 15370 ;; This function is called by:
 15371 ;;		_main
 15372 ;; This function uses a non-reentrant model
 15373 ;;
 15374                           
 15375                           	psect	text55
 15376   0075CA                     __ptext55:
 15377                           	callstack 0
 15378   0075CA                     _ADC_init:
 15379                           	callstack 28
 15380   0075CA                     
 15381                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
 15382   0075CA  8C86               	bsf	134,6,c	;volatile
 15383                           
 15384                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
 15385   0075CC  010E               	movlb	14	; () banked
 15386   0075CE  8DB4               	bsf	180,6,b	;volatile
 15387                           
 15388                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
 15389   0075D0  010F               	movlb	15	; () banked
 15390   0075D2  9958               	bcf	88,4,b	;volatile
 15391   0075D4                     
 15392                           ; BSR set to: 15
 15393                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
 15394   0075D4  0EFC               	movlw	-4
 15395   0075D6  1758               	andwf	88,f,b	;volatile
 15396                           
 15397                           ;ADC.c: 17:     ADPCH=0b101110;
 15398   0075D8  0E2E               	movlw	46
 15399   0075DA  6F5F               	movwf	95,b	;volatile
 15400   0075DC                     
 15401                           ; BSR set to: 15
 15402                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
 15403   0075DC  9460               	bcf	96,2,c	;volatile
 15404   0075DE                     
 15405                           ; BSR set to: 15
 15406                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
 15407   0075DE  8860               	bsf	96,4,c	;volatile
 15408   0075E0                     
 15409                           ; BSR set to: 15
 15410                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
 15411   0075E0  8E60               	bsf	96,7,c	;volatile
 15412   0075E2                     
 15413                           ; BSR set to: 15
 15414   0075E2  0012               	return		;funcret
 15415   0075E4                     __end_of_ADC_init:
 15416                           	callstack 0
 15417                           
 15418 ;; *************** function _HighISR *****************
 15419 ;; Defined at:
 15420 ;;		line 23 in file "interrupts.c"
 15421 ;; Parameters:    Size  Location     Type
 15422 ;;		None
 15423 ;; Auto vars:     Size  Location     Type
 15424 ;;		None
 15425 ;; Return value:  Size  Location     Type
 15426 ;;                  1    wreg      void 
 15427 ;; Registers used:
 15428 ;;		wreg, cstack
 15429 ;; Tracked objects:
 15430 ;;		On entry : 0/0
 15431 ;;		On exit  : 0/0
 15432 ;;		Unchanged: 0/0
 15433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15438 ;;Total ram usage:        0 bytes
 15439 ;; Hardware stack levels used: 1
 15440 ;; Hardware stack levels required when called: 1
 15441 ;; This function calls:
 15442 ;;		i2_sendCharSerial4
 15443 ;; This function is called by:
 15444 ;;		Interrupt level 2
 15445 ;; This function uses a non-reentrant model
 15446 ;;
 15447                           
 15448                           	psect	intcode
 15449   000008                     __pintcode:
 15450                           	callstack 0
 15451   000008                     _HighISR:
 15452                           	callstack 24
 15453                           
 15454                           ; BSR set to: 15
 15455                           ;incstack = 0
 15456   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15457   00000A                     
 15458                           ;interrupts.c: 48:     if (PORTBbits.RB0){
 15459   00000A  A08A               	btfss	138,0,c	;volatile
 15460   00000C  EF0A  F000         	goto	i2u589_41
 15461   000010  EF0C  F000         	goto	i2u589_40
 15462   000014                     i2u589_41:
 15463   000014  EF10  F000         	goto	i2l457
 15464   000018                     i2u589_40:
 15465   000018                     
 15466                           ;interrupts.c: 49:         LATHbits.LATH3 = 0;
 15467   000018  9680               	bcf	128,3,c	;volatile
 15468   00001A                     
 15469                           ;interrupts.c: 50:         sendCharSerial4('a');
 15470   00001A  0E61               	movlw	97
 15471   00001C  EC0A  F03B         	call	i2_sendCharSerial4
 15472   000020                     i2l457:
 15473   000020  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15474   000022  0011               	retfie		f
 15475   000024                     __end_of_HighISR:
 15476                           	callstack 0
 15477                           
 15478 ;; *************** function i2_sendCharSerial4 *****************
 15479 ;; Defined at:
 15480 ;;		line 31 in file "serial.c"
 15481 ;; Parameters:    Size  Location     Type
 15482 ;;  charToSend      1    wreg     unsigned char 
 15483 ;; Auto vars:     Size  Location     Type
 15484 ;;  charToSend      1    0[COMRAM] unsigned char 
 15485 ;; Return value:  Size  Location     Type
 15486 ;;                  1    wreg      void 
 15487 ;; Registers used:
 15488 ;;		wreg
 15489 ;; Tracked objects:
 15490 ;;		On entry : 0/0
 15491 ;;		On exit  : 0/0
 15492 ;;		Unchanged: 0/0
 15493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15498 ;;Total ram usage:        1 bytes
 15499 ;; Hardware stack levels used: 1
 15500 ;; This function calls:
 15501 ;;		Nothing
 15502 ;; This function is called by:
 15503 ;;		_HighISR
 15504 ;; This function uses a non-reentrant model
 15505 ;;
 15506                           
 15507                           	psect	text57
 15508   007614                     __ptext57:
 15509                           	callstack 0
 15510   007614                     i2_sendCharSerial4:
 15511                           	callstack 24
 15512                           
 15513                           ;incstack = 0
 15514                           ;i2sendCharSerial4@charToSend stored from wreg
 15515   007614  6E01               	movwf	i2sendCharSerial4@charToSend^0,c
 15516   007616                     i2l503:
 15517   007616  010E               	movlb	14	; () banked
 15518   007618  A537               	btfss	55,2,b	;volatile
 15519   00761A  EF11  F03B         	goto	i2u564_41
 15520   00761E  EF13  F03B         	goto	i2u564_40
 15521   007622                     i2u564_41:
 15522   007622  EF0B  F03B         	goto	i2l503
 15523   007626                     i2u564_40:
 15524   007626                     
 15525                           ; BSR set to: 14
 15526                           ;serial.c: 33:     TX4REG = charToSend;
 15527   007626  C001  FEE4         	movff	i2sendCharSerial4@charToSend,3812	;volatile
 15528   00762A                     
 15529                           ; BSR set to: 14
 15530   00762A  0012               	return		;funcret
 15531   00762C                     __end_ofi2_sendCharSerial4:
 15532                           	callstack 0
 15533                           
 15534                           	psect	rparam
 15535   000000                     
 15536                           	psect	temp
 15537   00005E                     btemp:
 15538                           	callstack 0
 15539   00005E                     	ds	1
 15540   000000                     int$flags	set	btemp
 15541   000000                     wtemp8	set	btemp+1
 15542   000000                     ttemp5	set	btemp+1
 15543   000000                     ttemp6	set	btemp+4
 15544   000000                     ttemp7	set	btemp+8
 15545                           
 15546                           	psect	config
 15547                           
 15548                           ;Config register CONFIG1L @ 0x300000
 15549                           ;	External Oscillator mode Selection bits
 15550                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15551                           ;	Power-up default value for COSC bits
 15552                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15553   300000                     	org	3145728
 15554   300000  AA                 	db	170
 15555                           
 15556                           ;Config register CONFIG1H @ 0x300001
 15557                           ;	unspecified, using default values
 15558                           ;	Clock Out Enable bit
 15559                           ;	CLKOUTEN = 0x1, unprogrammed default
 15560                           ;	Clock Switch Enable bit
 15561                           ;	CSWEN = 0x1, unprogrammed default
 15562                           ;	Fail-Safe Clock Monitor Enable bit
 15563                           ;	FCMEN = 0x1, unprogrammed default
 15564   300001                     	org	3145729
 15565   300001  FF                 	db	255
 15566                           
 15567                           ;Config register CONFIG3L @ 0x300004
 15568                           ;	WDT Period Select bits
 15569                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15570                           ;	WDT operating mode
 15571                           ;	WDTE = OFF, WDT Disabled
 15572   300004                     	org	3145732
 15573   300004  9F                 	db	159
 15574                           
 15575                           ;Config register CONFIG3H @ 0x300005
 15576                           ;	unspecified, using default values
 15577                           ;	WDT Window Select bits
 15578                           ;	WDTCWS = 0x7, unprogrammed default
 15579                           ;	WDT input clock selector
 15580                           ;	WDTCCS = 0x7, unprogrammed default
 15581   300005                     	org	3145733
 15582   300005  FF                 	db	255
 15583                           tosu	equ	0xFFF
 15584                           tosh	equ	0xFFE
 15585                           tosl	equ	0xFFD
 15586                           stkptr	equ	0xFFC
 15587                           pclatu	equ	0xFFB
 15588                           pclath	equ	0xFFA
 15589                           pcl	equ	0xFF9
 15590                           tblptru	equ	0xFF8
 15591                           tblptrh	equ	0xFF7
 15592                           tblptrl	equ	0xFF6
 15593                           tablat	equ	0xFF5
 15594                           prodh	equ	0xFF4
 15595                           prodl	equ	0xFF3
 15596                           indf0	equ	0xFEF
 15597                           postinc0	equ	0xFEE
 15598                           postdec0	equ	0xFED
 15599                           preinc0	equ	0xFEC
 15600                           plusw0	equ	0xFEB
 15601                           fsr0h	equ	0xFEA
 15602                           fsr0l	equ	0xFE9
 15603                           wreg	equ	0xFE8
 15604                           indf1	equ	0xFE7
 15605                           postinc1	equ	0xFE6
 15606                           postdec1	equ	0xFE5
 15607                           preinc1	equ	0xFE4
 15608                           plusw1	equ	0xFE3
 15609                           fsr1h	equ	0xFE2
 15610                           fsr1l	equ	0xFE1
 15611                           bsr	equ	0xFE0
 15612                           indf2	equ	0xFDF
 15613                           postinc2	equ	0xFDE
 15614                           postdec2	equ	0xFDD
 15615                           preinc2	equ	0xFDC
 15616                           plusw2	equ	0xFDB
 15617                           fsr2h	equ	0xFDA
 15618                           fsr2l	equ	0xFD9
 15619                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    112
    Data        0
    BSS         123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      93
    BANK0           160     23     145
    BANK1           256    184     184
    BANK2           256    180     180
    BANK3           256    202     202
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    decide_action@pblue_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@blue_val(BANK2[20]), 

    decide_action@pclear_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@clear_val(BANK2[20]), 

    decide_action@pgreen_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@green_val(BANK2[20]), 

    decide_action@pred_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@red_val(BANK2[20]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    inch_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    inch_forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    inch_forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    inch_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    inch_forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    inch_forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pblue_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@blue_val(BANK3[20]), 

    main@pclear_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK3[20]), 

    main@pgreen_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@green_val(BANK3[20]), 

    main@pmL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    main@pmL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pmR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    main@pmR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pred_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@red_val(BANK3[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    reverse_after_read@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    reverse_after_read@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    reverse_one_square@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    reverse_one_square@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S1069DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    S1069DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S2553$buffer	PTR unsigned char  size(2) Largest target is 0

    S2553$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK3[20]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), main@motorR(BANK3[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK3[20]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_left_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_left_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_left_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_left_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_right_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_right_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_right_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_right_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _turn_right_90->_stop
    _turn_right_135->_stop
    _turn_left_90->_stop
    _turn_left_135->_stop
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _reverse_one_square->_stop
    _reverse_after_read->_stop
    _inch_forward->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _decide_action->___flge
    _powf->___flge
    _sqrtf->___fladd
    _scalbnf->___flmul
    ___flmul->___fladd
    ___flsub->___fldiv
    ___flge->___flsub
    ___fldiv->___flmul
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_sendCharSerial4

Critical Paths under _main in BANK0

    _main->_decide_action
    _decide_action->_powf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _decide_action->_powf

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_decide_action

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               218   218      0  194953
                                             87 COMRAM     5     5      0
                                              0 BANK3    202   202      0
                           _ADC_init
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
              _color_click_toggleLED
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _color_writetoaddr
                      _decide_action
                     _fullSpeedAhead
                    _get16bitTMR0val
                       _inch_forward
                    _initDCmotorsPWM
                         _initUSART4
                      _invert_action
                        _resetTimer0
                 _reverse_after_read
                 _reverse_one_square
                  _sendStringSerial4
                            _sprintf
                               _stop
                      _turn_left_135
                       _turn_left_90
                     _turn_right_135
                      _turn_right_90
 ---------------------------------------------------------------------------------
 (1) _turn_right_90                                        6     2      4    8202
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_right_135                                       6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_90                                         6     2      4    7290
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_135                                        6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    15      5    3439
                                             26 COMRAM    18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2936
                                             22 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    2586
                                             11 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              2 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reverse_one_square                                   6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse_after_read                                   6     2      4    8050
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _resetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _invert_action                                        4     4      0      51
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _inch_forward                                         6     2      4    6986
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    4133
                                             20 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _get16bitTMR0val                                      6     4      2      24
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    2961
                                             20 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          6     4      2    2437
                                             14 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              7 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _decide_action                                      188   182      6  121545
                                             17 BANK0      6     0      6
                                              0 BANK2    180   180      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flsub
                           ___xxtofl
                  _color_writetoaddr
                               _powf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   74453
                                              0 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sqrtf                                               41    37      4    1413
                                             17 COMRAM    37    33      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6    9383
                                             42 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    8888
                                             17 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8   18849
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8   13662
                                              1 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1094
                                             75 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2767
                                             42 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              2 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_toggleLED                                1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     674
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     674
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0      22
                  i2_sendCharSerial4
 ---------------------------------------------------------------------------------
 (7) i2_sendCharSerial4                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_click_toggleLED
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_writetoaddr
   _decide_action
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
     ___flge
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
     ___flsub
     ___xxtofl
     _color_writetoaddr
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
         ___fladd (ARG)
     _sqrtf
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _get16bitTMR0val
   _inch_forward
     _setMotorPWM
     _stop
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _invert_action
   _resetTimer0
   _reverse_after_read
     _setMotorPWM
     _stop
   _reverse_one_square
     _setMotorPWM
     _stop
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch
   _stop
   _turn_left_135
     _setMotorPWM
     _stop
   _turn_left_90
     _setMotorPWM
     _stop
   _turn_right_135
     _setMotorPWM
     _stop
   _turn_right_90
     _setMotorPWM
     _stop

 _HighISR (ROOT)
   i2_sendCharSerial4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      68        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     CA      CA      11       78.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100     B4      B4       9       70.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B8      B8       7       71.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     17      91       5       90.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5D       1       98.9%
BITBIGSFRllhllh     37      0       0      49        0.0%
BITBIGSFRllhhl      31      0       0      47        0.0%
BITBIGSFRlllllh     2A      0       0      60        0.0%
BITBIGSFRllllll     26      0       0      66        0.0%
BITBIGSFRllllhh     20      0       0      52        0.0%
BITBIGSFRlllllh     1E      0       0      54        0.0%
BITBIGSFRhhlllh     1B      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      44        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      53        0.0%
BITBIGSFRlllllh      B      0       0      64        0.0%
BITBIGSFRlllllh      9      0       0      61        0.0%
BITBIGSFRllhlll      8      0       0      50        0.0%
BITBIGSFRllhhhl      6      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      65        0.0%
BITBIGSFRlllllh      6      0       0      59        0.0%
BITBIGSFRlllllh      5      0       0      58        0.0%
BITBIGSFRllhhhh      3      0       0      45        0.0%
BITBIGSFRlllllh      3      0       0      57        0.0%
BITBIGSFRllhlh       2      0       0      48        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRlllllh      1      0       0      62        0.0%
BITBIGSFRlhlh        1      0       0      42        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      51        0.0%
BITBIGSFRhlhl        1      0       0      40        0.0%
BITBIGSFRhhllll      1      0       0      39        0.0%
BITBIGSFRlhh         1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     324      67        0.0%
DATA                 0      0     324       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 17:40:59 2024

               _color_read_Red 71AA                   ___fldiv@aexp 0043                   ___fldiv@bexp 0042  
                 ___fldiv@sign 003B                _color_read_Blue 729A                             _L1 0E5D  
                           _L2 0E59                             _L3 0E55                             _L4 0E51  
                           _L5 0E4D                             l50 756C                             _L6 0E49  
                           l53 7298                             _P1 0E45                             l62 72E8  
                           _P2 0E41                             l47 7332                             l71 347A  
                           _P3 0E3D                             l56 71F8                             _P4 0E39  
                           l65 71A8                             l73 34F6                             _P5 0E35  
                           l59 7248                             l77 44FA                             l69 33FE  
                           l89 70CE                   ___awdiv@sign 0007                             _bp 0E11  
                           _cp 0E21            ___wmul@multiplicand 0004          __end_of_invert_action 70D0  
             _color_read_Clear 724A               _color_read_Green 71FA              ??_Interrupts_init 0002  
                          l122 7526                            l131 7660                            l203 6D94  
                          l211 703A                            l116 74FE                            l125 766A  
                          l134 7636                            l230 68FA                            l214 6AD0  
                          l222 69E6                            l119 7500                            l128 7656  
                          l137 73FC                            l251 6578                            l235 6956  
                          l219 6B2A                            l243 686A                            l227 6A40  
                          l421 75C8                            l262 6BB8                            l246 6504  
                          l254 670A                            l238 680E                            l503 75FE  
                          l424 764C                            l512 74D4                            l418 758C  
                          l506 7612                            l451 7642                            l195 6472  
                          l267 6C14                            l259 677E                            l188 6FA0  
                          l198 6D64                            l375 49C4                            l812 6EFE  
                          l397 4C3A                            l494 75AA                            l559 75E2  
                          l568 754C                            l833 6636                            l842 7470  
                          l838 667C                            l799 6CD8                            _lg2 0E31  
                          _abs 7472                            _ovt 0E25                   ___awmod@sign 0007  
                          prod 0FF3                            wreg 0FE8                   ___flmul@aexp 0023  
                 ___flmul@bexp 0024                   ___flmul@sign 001E                   ___flmul@temp 0029  
                 ___flmul@prod 0025                    main@actions 033C                           l1113 4FFC  
                         l1105 51B2                           l1122 50CC                           l1123 50BA  
                         ?_abs 0008                           l1150 5D54                           l1230 6242  
                         l1223 61AA                           l1152 5BB4                           l1161 5BFA  
                         l1138 7378                           l1226 6306                           l1410 13CC  
                         l1402 12BC                           l1066 7142                           l1163 5C72  
                         l1155 5B78                           l1059 713A                           l1164 5C60  
                         l1237 629E                           l1309 6E4E                           l1182 5278  
                         l1406 136E                           l1246 7438                           l1191 54E6  
                         l1096 4EE2                           l4000 55C0                           l1192 54D4  
                         l1097 4ED0                           l1098 4E96                           l4002 55C2  
                         l1186 55DC                           l4010 6C16                           l1450 766C  
                         l1290 73BA                           l1443 32C4                           l4004 55C8  
                         l1460 5F88                           l4100 7108                           l4020 6C42  
                         l4012 6C1A                           l1284 6152                           l1189 546E  
                         l4006 55CC                           l1382 1164                           l4110 7134  
                         l4102 710E                           l4030 6C70                           l4022 6C4A  
                         l4014 6C28                           l1294 748C                           l1199 559E  
                         l4200 5914                           l1480 58E4                           l1392 11FA  
                         l4104 7124                           l5000 6FEA                           l4040 6CAA  
                         l4032 6C78                           l4024 6C4E                           l4016 6C30  
                         l4120 6DDC                           l4112 6D96                           l1473 57C2  
                         l1377 3300                           l1297 74A4                           l4130 7662  
                         l4202 592A                           l1482 5952                           l4106 712C  
                         l4210 6324                           l5002 6FF6                           l5010 75FE  
                         l4050 6CD0                           l4042 6CAC                           l4034 6C86  
                         l4026 6C56                           l4018 6C34                           l4122 6E0E  
                         l4114 6DA6                           l4132 7666                           l4140 765C  
                         l4300 5B82                           l4108 712E                           l4220 63EE  
                         l4212 6378                           l5004 7002                           l5012 760E  
                         l4044 6CB2                           l4036 6C8C                           l4028 6C68  
                         l4060 6E6A                           l4116 6DB6                           l5020 73B2  
                         l1477 5820                           l1469 59BA                           l4134 762E  
                         l5030 7308                           l4310 5BDA                           l4302 5BA0  
                         l4230 59D8                           l4150 565E                           l4142 55DE  
                         l4222 6432                           l4214 638C                           l5006 700A  
                         l4038 6CA2                           l4046 6CB8                           l4070 6E9E  
                         l4062 6E6E                           l4054 6E50                           l4126 7472  
                         l4118 6DC0                           l5014 737A                           l4136 7632  
                         l5040 732A                           l5032 7312                           l5024 72EA  
                         l4320 5C18                           l4312 5BE0                           l4304 5BA2  
                         l4232 59E8                           l4240 5A12                           l4224 59BC  
                         l4400 6166                           l4160 56CE                           l4152 566E  
                         l4144 55EE                           l4216 6390                           l4208 6308  
                         l5008 7022                           l5200 703E                           l4048 6CC8  
                         l4080 6ED8                           l4072 6EA6                           l4064 6E7C  
                         l4056 6E54                           l4128 7480                           l5016 7382  
                         l4138 7658                           l5042 732C                           l5034 731C  
                         l5026 72EE                           l5050 7290                           l4330 5C82  
                         l4322 5C1C                           l4314 5BEA                           l4306 5BB2  
                         l4250 5A3E                           l4242 5A22                           l4234 59F8  
                         l4226 59C8                           l4410 61E4                           l4402 6174  
                         l4146 5622                           l4090 70D0                           l4218 63D2  
                         l5210 7062                           l5202 7042                           l4074 6EB4  
                         l4082 6EDE                           l4066 6E84                           l4058 6E62  
                         l5018 7392                           l5044 732E                           l5036 7326  
                         l5028 72F8                           l5060 71FA                           l4340 5CE4  
                         l4332 5C8E                           l4324 5C2A                           l4316 5BF8  
                         l4308 5BC4                           l4252 5A4E                           l4260 5A78  
                         l4244 5A28                           l4236 5A08                           l4228 59D6  
                         l3700 4D72                           l4420 6238                           l4412 61EC  
                         l4404 61BA                           l4500 5DB6                           l4180 578C  
                         l4164 56E2                           l4172 570E                           l4148 5650  
                         l4156 5682                           l4092 70D8                           l5212 706A  
                         l5204 704A                           l5220 70CC                           l4084 6EEE  
                         l4076 6ECA                           l4068 6E96                           l5300 6B00  
                         l5046 7330                           l5038 7328                           l5062 7240  
                         l5054 71AA                           l4350 5D42                           l4342 5CFA  
                         l4334 5C9C                           l4326 5C58                           l4318 5C0A  
                         l4270 5ABA                           l4262 5A88                           l4254 5A5E  
                         l4246 5A2E                           l4238 5A0A                           l3710 4D9A  
                         l3702 4D74                           l4430 62AE                           l4422 6274  
                         l4414 61F8                           l4406 61D0                           l4510 5E32  
                         l4502 5DBE                           l4190 585A                           l4182 579A  
                         l4174 5762                           l4166 56F0                           l4158 56A0  
                         l4094 70EA                           l5230 6F2A                           l5214 7072  
                         l5206 7052                           l4086 6EF6                           l4078 6ED2  
                         l5302 6B16                           l5310 699C                           l5072 7144  
                         l5048 724A                           l5056 71F0                           l4352 5D48  
                         l4344 5D14                           l4336 5CC6                           l4264 5A9E  
                         l4256 5A6E                           l4248 5A3C                           l3800 4F6A  
                         l3720 4DD4                           l3712 4DAA                           l3704 4D7A  
                         l4440 62F6                           l4432 62B2                           l4424 6280  
                         l4416 622A                           l4520 5EB2                           l4504 5DDA  
                         l4512 5E3E                           l4192 586E                           l4184 5802  
                         l4176 5776                           l4096 70F2                           l5240 6F66  
                         l5232 6F4E                           l5208 705A                           l5400 66C0  
                         l5320 69FE                           l5312 69B4                           l5304 6958  
                         l5066 729A                           l4354 5D4A                           l4346 5D30  
                         l4338 5CCA                           l4290 5B3C                           l4282 5AF2  
                         l4266 5AAE                           l4274 5ACE                           l4258 5A70  
                         l4370 65A8                           l3810 4FDC                           l3802 4F70  
                         l3730 4E00                           l3722 4DE6                           l3714 4DBA  
                         l3706 4D88                           l4362 7334                           l4434 62D6  
                         l4426 628E                           l4418 622C                           l4530 5F44  
                         l4522 5EE6                           l4514 5E5A                           l4506 5E0E  
                         l4194 58AC                           l4186 5810                           l4178 5780  
                         l4098 70FA                           l5250 6F92                           l5242 6F70  
                         l5234 6F58                           l5218 707A                           l5410 6722  
                         l5402 66D8                           l4450 5FC6                           l5330 68A6  
                         l5322 6A16                           l5314 69BE                           l5306 697A  
                         l4540 74E6                           l5068 72E0                           l4348 5D34  
                         l4292 5B44                           l4284 5B0C                           l4276 5ADE  
                         l4268 5AB6                           l4380 6616                           l4372 65B8  
                         l3820 5036                           l3804 4F96                           l3812 4FEC  
                         l3740 4E14                           l3732 4E04                           l3724 4DF4  
                         l3716 4DBC                           l3708 4D8A                           l4364 7344  
                         l4436 62E6                           l4428 62AC                           l3900 5222  
                         l4532 5F78                           l4524 5EEE                           l4516 5E8E  
                         l4508 5E16                           l4196 58F4                           l4188 583A  
                         l5420 6B4C                           l5260 6F9C                           l5252 6F94  
                         l5244 6F72                           l5236 6F5A                           l5228 6F00  
                         l5412 673A                           l5404 66E2                           l5500 74BC  
                         l4460 602C                           l4452 5FCA                           l4444 5F8A  
                         l5340 68EA                           l5332 68B0                           l5324 6A2C  
                         l5316 69CA                           l5308 6992                           l4542 74E8  
                         l3670 7510                           l4550 764E                           l4294 5B54  
                         l4286 5B1C                           l4278 5ADE                           l4382 6624  
                         l4374 65E6                           l4390 743A                           l3830 5066  
                         l3822 5040                           l3814 5012                           l3806 4FCA  
                         l3750 4E28                           l3742 4E18                           l3734 4E08  
                         l3726 4DF8                           l3718 4DC4                           l4438 62F4  
                         l3910 5262                           l3902 5230                           l4526 5F0A  
                         l4518 5E96                           l4198 58FE                           l7110 12E8  
                         l7102 125A                           l5270 6D1C                           l5430 6B9C  
                         l5422 6B64                           l5262 6F9E                           l5254 6F96  
                         l5246 6F7C                           l5238 6F64                           l5414 6752  
                         l5406 66EE                           l4470 60AC                           l4462 6036  
                         l4454 5FD4                           l4446 5FB0                           l5342 6912  
                         l5334 68C8                           l5326 686C                           l5350 67A2  
                         l5318 69D6                           l5440 756E                           l4544 74EA  
                         l4536 74D6                           l4560 73D2                           l4552 7652  
                         l4296 5B68                           l4288 5B2C                           l4384 6674  
                         l4376 65F6                           l4368 657A                           l4392 7450  
                         l3840 508E                           l3832 506A                           l3824 504E  
                         l3816 5022                           l3808 4FCC                           l3760 4E62  
                         l3752 4E2C                           l3744 4E1C                           l3736 4E0C  
                         l3728 4DFC                           l3680 4D00                           l3920 52AC  
                         l3912 5268                           l3904 5232                           l4528 5F12  
                         l7200 16D0                           l7104 1276                           l3672 7528  
                         l5280 6D7C                           l5272 6D34                           l5264 6CDA  
                         l5432 6BA8                           l5424 6B6E                           l5256 6F98  
                         l5248 6F90                           l5416 6766                           l5408 66FA  
                         l4480 6108                           l4472 60BC                           l4464 604E  
                         l4456 5FF4                           l4448 5FB8                           l5344 692A  
                         l5336 68D2                           l5328 688E                           l5360 67F2  
                         l5352 67BA                           l5450 75D4                           l5442 7576  
                         l4546 74EC                           l4538 74E0                           l4562 73F8  
                         l4554 73BE                           l4298 5B76                           l4386 667A  
                         l4378 6604                           l4394 7460                           l3850 50E8  
                         l3842 509C                           l3834 507A                           l3826 5050  
                         l3770 4EB4                           l3762 4E7E                           l3754 4E30  
                         l3746 4E20                           l3738 4E10                           l3690 4D40  
                         l3682 4D0E                           l3930 52FC                           l3922 52B8  
                         l3914 5288                           l3906 5242                           l7210 1874  
                         l7202 1704                           l7130 13EA                           l7122 137E  
                         l7114 1320                           l7106 1284                           l7050 0F00  
                         l7042 0E82                           l3674 7544                           l5274 6D3E  
                         l5266 6CFA                           l5434 6BD0                           l5426 6B86  
                         l5418 6B2C                           l5258 6F9A                           l5370 6474  
                         l4474 60CC                           l4482 610A                           l4466 607E  
                         l4458 6014                           l5346 6942                           l5338 68DE  
                         l5290 6A9E                           l5282 6A42                           l5362 67FE  
                         l5354 67C4                           l5452 75DC                           l5444 7580  
                         l3668 7500                           l4548 7550                           l4564 73FA  
                         l4556 73C2                           l3860 5152                           l3852 50F6  
                         l3844 50B2                           l3828 505E                           l3836 507C  
                         l3780 4F00                           l3772 4EC2                           l3764 4E8E  
                         l3748 4E24                           l3756 4E34                           l3692 4D42  
                         l3684 4D10                           l3940 533E                           l3932 5308  
                         l3924 52C2                           l3916 5298                           l3908 5252  
                         l7300 21B0                           l7220 191A                           l7212 1884  
                         l7204 175C                           l7140 14CA                           l7132 141E  
                         l7124 139A                           l7116 1338                           l7108 12D0  
                         l7060 0F76                           l7052 0F1C                           l7044 0EA2  
                         l5276 6D4A                           l5268 6D12                           l5436 6BE8  
                         l5428 6B90                           l5460 758E                           l5380 64DC  
                         l5372 6498                           l4476 60DC                           l4468 609A  
                         l4484 6120                           l5292 6AA8                           l5284 6A64  
                         l5364 6826                           l5356 67DC                           l5348 6780  
                         l5454 75DE                           l5446 758A                           l4558 73CA  
                         l3870 518C                           l3862 5172                           l3854 5130  
                         l3790 4F40                           l3838 508A                           l3774 4EC4  
                         l3766 4EA4                           l3758 4E38                           l3686 4D20  
                         l3694 4D4A                           l3678 4CF4                           l4398 6156  
                         l3950 53A0                           l3942 534A                           l3934 5314  
                         l3926 52D8                           l4494 5D56                           l7310 2276  
                         l7302 21C0                           l7230 19F4                           l7222 1936  
                         l7214 189E                           l7206 1790                           l7150 1520  
                         l7134 142E                           l7142 14EE                           l7126 13B0  
                         l7118 1346                           l7070 0FE8                           l7046 0EEA  
                         l5278 6D56                           l5438 6C00                           l5470 75A8  
                         l5462 7598                           l5390 654C                           l5382 64E8  
                         l5374 64B0                           l4478 60EE                           l5294 6AB4  
                         l5286 6A7C                           l5366 683E                           l5358 67E6  
                         l5456 75E0                           l5448 75CA                           l3872 5192  
                         l3864 5176                           l3848 50DC                           l3856 5132  
                         l3792 4F4C                           l3784 4F14                           l3776 4ECE  
                         l3768 4EB0                           l3696 4D5A                           l3688 4D30  
                         l3960 5436                           l3952 53AC                           l3944 535A  
                         l3936 5322                           l3928 52E4                           l3880 51B4  
                         l4496 5D66                           l7400 2A8C                           l7320 2384  
                         l7312 22AA                           l7304 21DA                           l7240 1A5C  
                         l7232 1A0C                           l7224 196A                           l7216 18D2  
                         l7208 17C4                           l7160 1550                           l7136 1492  
                         l7128 13DC                           l7080 119E                           l7072 0FFC  
                         l7064 0FAE                           l7056 0F32                           l5464 759A  
                         l5472 7644                           l5392 6560                           l5384 64F4  
                         l5376 64BA                           l4488 612C                           l5296 6AC0  
                         l5288 6A86                           l5368 6856                           l5458 7638  
                         l3874 51A0                           l3866 5184                           l3858 5142  
                         l3794 4F50                           l3786 4F24                           l3778 4EF0  
                         l3698 4D60                           l3970 548C                           l3962 5454  
                         l3954 53C8                           l3946 5374                           l3938 532E  
                         l3890 51F0                           l3882 51C0                           l4498 5D82  
                         l7410 2CC8                           l7402 2C40                           l7330 2518  
                         l7322 23B8                           l7314 2326                           l7306 220E  
                         l7250 1B14                           l7242 1A80                           l7234 1A1C  
                         l7226 197C                           l7218 190A                           l7162 1560  
                         l7138 14B2                           l7146 1502                           l7090 11E4  
                         l7074 1018                           l7066 0FBE                           l7058 0F54  
                         l5474 75AC                           l5466 75A4                           l5386 651C  
                         l5378 64D2                           l5394 667E                           l5490 742A  
                         l5482 73FE                           l5298 6AE8                           l3876 51A2  
                         l3868 518A                           l3796 4F5E                           l3788 4F32  
                         l3980 54F6                           l3972 5490                           l3964 545E  
                         l3956 53F2                           l3948 5384                           l3892 5200  
                         l3884 51CE                           l7420 2DFA                           l7412 2CE2  
                         l7404 2C50                           l7340 2634                           l7332 25A2  
                         l7324 23EC                           l7316 235A                           l7308 2242  
                         l7260 1BFC                           l7252 1B8E                           l7244 1A94  
                         l7236 1A34                           l7228 198C                           l7180 15E8  
                         l7164 1582                           l7148 1512                           l7076 1116  
                         l7068 0FCC                           l7500 3958                           l5476 75B2  
                         l5468 75A6                           l5388 6534                           l5396 669E  
                         l5484 740A                           l3798 4F60                           l3990 5558  
                         l3982 5502                           l3974 549E                           l3966 546C  
                         l3958 5428                           l3894 5206                           l3886 51D0  
                         l7430 2F22                           l7422 2E2E                           l7414 2D16  
                         l7406 2C84                           l7350 2774                           l7342 268A  
                         l7334 25D6                           l7326 2420                           l7318 236A  
                         l7270 1DA8                           l7262 1C56                           l7254 1BC2  
                         l7246 1AB0                           l7182 160C                           l7166 15A6  
                         l7158 153A                           l7094 120E                           l7086 11B4  
                         l7078 1182                           l7510 3AA8                           l7502 39C2  
                         l5478 75C0                           l5398 66B6                           l5494 74A6  
                         l5486 7412                           l3992 556C                           l3984 5510  
                         l3976 54CC                           l3968 547E                           l3896 5216  
                         l3888 51E0                           l7440 30FE                           l7432 2F7A  
                         l7424 2E62                           l7416 2D4A                           l7408 2CB8  
                         l7352 27CC                           l7344 26BE                           l7336 25E6  
                         l7328 24F2                           l7280 1F18                           l7272 1E00  
                         l7264 1CC8                           l7256 1BD2                           l7248 1AC0  
                         l7192 162E                           l7168 15B4                           l7176 15D2  
                         l7096 121C                           l7088 11D6                           l7520 3C62  
                         l7512 3ADE                           l7504 3A0A                           l5496 74AA  
                         l5488 741A                           l7600 451C                           l3994 5586  
                         l3986 553A                           l3898 521C                           l7450 3202  
                         l7442 3156                           l7434 2FD2                           l7426 2E96  
                         l7418 2DA2                           l7370 2884                           l7354 2800  
                         l7338 2600                           l7290 2088                           l7282 1F70  
                         l7274 1E34                           l7266 1D1C                           l7258 1BE2  
                         l7346 26F2                           l7098 1244                           l7530 3E52  
                         l7522 3D00                           l7514 3B12                           l7506 3A3E  
                         l5498 74B8                           l7610 452A                           l7602 4520  
                         l3996 55A2                           l3988 553E                           l7452 3244  
                         l7444 318A                           l7436 302A                           l7428 2ECA  
                         l7380 294A                           l7356 2834                           l7348 271C  
                         l7292 20E0                           l7284 1FC8                           l7276 1E68  
                         l7268 1D50                           l7196 1644                           l7540 3FA0  
                         l7532 3E86                           l7524 3D36                           l7516 3B46  
                         l7508 3A72                           l7700 4710                           l7620 453C  
                         l7612 452E                           l7604 4524                           l3998 55B2  
                         l7454 3294                           l7446 31BE                           l7438 3082  
                         l7390 29D2                           l7358 2844                           l7294 2114  
                         l7286 2020                           l7278 1EC0                           l7198 1678  
                         l7550 415A                           l7542 3FD6                           l7534 3EF0  
                         l7526 3D7E                           l7518 3C2C                           l7470 3360  
                         l4990 6FA2                           l7710 4772                           l7702 471C  
                         l7630 455C                           l7622 4544                           l7614 452E  
                         l7606 4526                           l7456 32D4                           l7448 31F2  
                         l7368 286C                           l7296 2148                           l7288 2054  
                         l7560 42E0                           l7552 4190                           l7544 400C  
                         l7536 3F38                           l7528 3DB2                           l7480 3446  
                         l7472 3382                           l7464 3302                           l4992 6FA6  
                         l7800 4B9A                           l7720 4830                           l7712 479E  
                         l7704 4742                           l7640 4580                           l7632 4560  
                         l7624 454C                           l7616 4534                           l7608 4528  
                         l7458 32EC                           l7386 295E                           l7394 29E8  
                         l7378 2902                           l7298 217C                           l7570 446C  
                         l7562 4380                           l7554 422E                           l7546 4040  
                         l7538 3F6C                           l7490 37D2                           l7482 34AC  
                         l7474 33B4                           l7466 331C                           l4994 6FBE  
                         l7810 4BF6                           l7802 4BAE                           l7730 48EC  
                         l7722 4844                           l7714 47B0                           l7706 475C  
                         l7650 4590                           l7642 4588                           l7634 4568  
                         l7626 4554                           l7618 4538                           l7396 2A5A  
                         l7388 297C                           l7580 44DA                           l7572 4470  
                         l7564 43B4                           l7556 4264                           l7548 4074  
                         l7492 3808                           l7484 34C2                           l7476 33CA  
                         l7468 333E                           l4996 6FC8                           l7812 4C0A  
                         l7820 4C3A                           l7740 4994                           l7732 4918  
                         l7724 4884                           l7716 47DC                           l7708 4760  
                         l7660 45CE                           l7652 4594                           l7644 4590  
                         l7636 4570                           l7628 4558                           l7398 2A6A  
                         l7566 441E                           l7558 42AC                           l7494 3850  
                         l7486 36FE                           l7478 3430                           l4998 6FE0  
                         l7822 4C52                           l7814 4C22                           l7806 4BCA  
                         l7830 4C8C                           l7750 4A00                           l7742 49AC  
                         l7734 492C                           l7726 4898                           l7718 47F0  
                         l7670 460A                           l7662 45E0                           l7654 459C  
                         l7646 4590                           l7638 4578                           l7590 44FC  
                         l7584 44E2                           l7576 4484                           l7568 4466  
                         l7496 3884                           l7488 3734                           l7832 4C9C  
                         l7824 4C6A                           l7808 4BDE                           l7752 4A14  
                         l7736 4958                           l7728 48D8                           l7744 49C4  
                         l7680 4666                           l7672 4622                           l7664 45E4  
                         l7656 45B4                           l7648 4590                           l7592 4504  
                         l7586 44F6                           l7578 44D6                           l7498 3924  
                         l7834 4CB0                           l7826 4C76                           l7762 4A38  
                         l7754 4A1C                           l7746 49DC                           l7738 496C  
                         l7690 46CC                           l7682 467E                           l7674 462E  
                         l7666 45F8                           l7658 45C0                           l7594 4508  
                         l7836 4CD4                           l7828 4C7E                           l7780 4AAC  
                         l7772 4A7E                           l7764 4A50                           l7756 4A20  
                         l7748 49F4                           l7692 46D6                           l7684 4692  
                         l7676 4642                           l7668 45FE                           l7596 450C  
                         l7790 4B32                           l7782 4AB8                           l7774 4A8E  
                         l7766 4A60                           l7758 4A24                           l7694 46E0  
                         l7686 46AE                           l7678 465A                           l7598 4510  
                         l7792 4B44                           l7784 4AE2                           l7776 4A92  
                         l7768 4A78                           l7696 46F8                           l7688 46B2  
                         l7858 708E                           l7794 4B5C                           l7786 4AF6  
                         l7778 4AA6                           l7698 4704                           l7796 4B6E  
                         l7788 4AFC                           l7798 4B86                           STR_1 0E71  
                         STR_2 0E71                           u3000 7526                           u3001 7522  
                         u3010 4D0E                           u3011 4D0A                           u3100 4E62  
                         u3020 4D20                           u3101 4E5E                           u3021 4D1C  
                         u3110 4E7A                           u3030 4D30                           u3111 4E74  
                         u3031 4D2C                           u4000 5A5E                           u3200 4F5E  
                         u3120 4E7C                           u3040 4D72                   _BAUD4CONbits 0EE9  
                         u4001 5A5A                           u3201 4F5A                           u3041 4D6E  
                         u4010 5A9E                           u3210 4F96                           u3130 4EA4  
                         u3050 4D88                           u4011 5A9A                           u3211 4F92  
                         u3131 4EA0                           u3051 4D84                           u4100 5C2A  
                         u4020 5ADE                           u3300 50B2                           u3220 4FDC  
                         u3140 4EC2                           u3060 4D9A                           u4101 5C26  
                         u4021 5ADA                           u3301 50AE                           u3221 4FD8  
                         u3141 4EBE                           u3061 4D96                           u4110 5C58  
                         u4030 5B54                           u3310 50C8                           u3230 5012  
                         u3150 4EE2                           u3070 4DAA                           u4111 5C54  
                         u4031 5B50                           u3311 50C4                           u3231 500E  
                         u3151 4EDE                           u3071 4DA6                           u4120 5C6E  
                         u4040 5B76                           u4200 6604                           u3320 50DC  
                         u3240 5022                           u3160 4EF0                           u3080 4DE6  
                         u3400 51CE                           u4121 5C6A                           u4041 5B72  
                         u4201 6600                           u3321 50D8                           u3241 501E  
                         u3161 4EEC                           u3081 4DE2                           u3401 51CA  
                         u4130 5C82                           u4050 5BA0                           u4210 6624  
                         u3330 50F6                           u3250 504E                           u3170 4F00  
                         u3090 4DF4                           u3410 51E0                           _T2PR 0FBC  
                         u4131 5C7E                           u4051 5B9C                           u4211 6620  
                         u3331 50F2                           u3251 504A                           u3171 4EFC  
                         u3091 4DF0                           u3411 51DC                           u4140 5C9C  
                         u4060 5BC4                           u4220 6674                           u3340 5130  
                         u3260 505E                           u3180 4F32                           u4300 629E  
                         u3500 548C                           u3420 51F0                           u4141 5C98  
                         u4061 5BC0                           u4221 6670                           u3341 512C  
                         u3261 505A                           u3181 4F2E                           u4301 629A  
                         u3501 5488                           u3421 51EC                           u4150 5CE4  
                         u4070 5BDA                           u4230 7450                           u3350 5142  
                         u3270 507A                           u3190 4F40                           u4310 62AC  
                         u3510 549E                           u3430 5230                           u5110 6FBE  
                         u4151 5CE0                           u4071 5BD6                           u4231 744C  
                         u3351 513E                           u3271 5076                           u3191 4F3C  
                         u4311 62A8                           u3511 549A                           u3431 522C  
                         u5111 6FBA                           u4160 5D14                           u4080 5BF8  
                         u3360 5152                           u3280 508A                           u4320 62E6  
                         u4240 6166                           u3520 54CC                           u3440 5242  
                         u5120 6FE0                           u3600 6C42                           u4400 60BC  
                         u4161 5D10                           u4081 5BF4                           u3361 514E  
                         u3281 5086                           u4321 62E2                           u4241 6162  
                         u3521 54C8                           u3441 523E                           u5121 6FDC  
                         u3601 6C3E                           u4401 60B8                           u5210 7198  
                         u4170 5D42                           u4090 5C18                           u3370 5172  
                         u3290 509C                           u4330 62F4                           u4250 6174  
                         u3530 54E2                           u3450 5252                           u5130 7022  
                         u3610 6C68                           u4410 60CC                           u5211 7190  
                         u4171 5D3E                           u4091 5C14                           u3371 516E  
                         u3291 5098                           u4331 62F0                           u4251 6170  
                         u3531 54DE                           u3451 524E                           u5131 701E  
                         u3611 6C64                           u4411 60C8                           u4180 65A8  
                         u3380 5184                           u4260 61D0                           u3540 54F6  
                         u3460 5288                           u5300 6D7C                           u5140 703A  
                         u3620 6C86                           u3700 6EEE                           u4420 60DC  
                         u4340 5FB0                           u4181 65A4                           u3381 5180  
                         u4261 61CC                           u3541 54F2                           u3461 5284  
                         u5301 6D78                           u5141 7036                           u3621 6C82  
                         u3701 6EEA                           u4421 60D8                           u4341 5FAC  
                         u4510 73E6                           u4190 65E6                           u3390 51A0  
                         u4270 6226                           u3550 5510                           u3470 5298  
                         u3710 70EA                           u5310 6D94                           u5150 760E  
                         u3630 6CA2                           u4430 611C                           u4350 5FF4  
                         u4511 73DE                           u4191 65E2                           u3391 519C  
                         u4271 6222                           u3551 550C                           u3471 5294  
                         u3711 70E6                           u5311 6D90                           u5151 760A  
                         u3631 6C9E                           u4431 6118                           u4351 5FF0  
                         u5208 7176                           u4280 6270                           u3560 5558  
                         u3480 5412                           u4440 5D82                           u3800 5650  
                         u3720 7108                           u3640 6CC8                           u4360 6014  
                         u5160 73B2                           u5400 68A6                           u5320 6A7C  
                         u4281 626C                           u3561 5554                           u4505 5F24  
                         u4441 5D7E                           u3801 564C                           u3721 7104  
                         u3641 6CC4                           u4361 6010                           u5161 73AE  
                         u5401 68A2                           u5321 6A78                           u5170 7156  
                         u4290 628E                           u3570 5586                           u3490 546C  
                         u4450 5DDA                           u3810 565E                           u3730 7124  
                         u3650 6E62                           u4370 604A                           u5410 68C8  
                         u5330 6A9E                           u5171 714E                           u4291 628A  
                         u3571 5582                           u3491 5468                           u4451 5DD6  
                         u3811 565A                           u3731 7120                           u3651 6E5E  
                         u4371 6044                           u5411 68C4                           u5331 6A9A  
                         u5228 719A                           u3580 55C0                           u4460 5E32  
                         u3900 5914                           u3820 56A0                           u5500 651C  
                         u3660 6E7C                           u3740 6DA6                           u4380 604C  
                         u5420 6912                           u5340 6AE8                           u3581 55BC  
                         u3485 5408                           u4461 5E2E                           u3901 5910  
                         u3821 569C                           u5501 6518                           u3661 6E78  
                         u3741 6DA2                           u5421 690E                           u5341 6AE4  
                         u5190 7174                           u4470 5E5A                           u3910 592A  
                         u3830 56CE                           u7110 0EEA                           u5510 6534  
                         u3590 6C28                           u3670 6E96                           u3750 6DB6  
                         u4390 60AC                           u5430 692A                           u5350 6B00  
                         u5191 716C                           u4471 5E56                           u3911 5926  
                         u3831 56CA                           u7111 0EE6                           u5511 6530  
                         u3591 6C24                           u3671 6E92                           u3751 6DB2  
                         u4391 60A8                           u5431 6926                           u5351 6AFC  
                         u4528 73E8                           u4480 5EB2                           u3840 56F0  
                         u7200 10DC                           u7120 0F1C                           u5280 6D12  
                         u5520 66B6                           u5600 74D4                           u3680 6EB4  
                         u3760 6DDC                           u5440 67BA                           u5360 6992  
                         u4481 5EAE                           u3841 56EC                           u7121 0F18  
                         u5281 6D0E                           u5521 66B2                           u5601 74D0  
                         u3681 6EB0                           u3761 6DD8                           u5441 67B6  
                         u5361 698E                           u4490 5F0A                           u7210 1116  
                         u7130 0F54                           u3930 6324                           u5290 6D34  
                         u5530 66D8                           u3690 6ECA                           u3770 6E0E  
                         u5450 67DC                           u5370 69B4                           u4491 5F06  
                         u7211 1112                           u7131 0F50                           u3931 6320  
                         u5291 6D30                           u5531 66D4                           u3691 6EC6  
                         u3771 6E0A                           u5451 67D8                           u5371 69B0  
                         u5188 7158                           u3860 5762                           u7300 1338  
                         u7220 1182                           u7140 0F76                           u3940 63EE  
                         u5540 6722                           u3780 7480                           u5460 6826  
                         u5380 69FE                           u3925 5996                           u3861 575E  
                         u7301 1334                           u7221 117E                           u7205 10D2  
                         u7141 0F72                           u3941 63EA                           u5541 671E  
                         u3781 747C                           u5461 6822                           u5381 69FA  
                         u2990 7510                           u3950 59D6                           u3870 579A  
                         u3790 5622                           u7310 1346                           u7230 119E  
                         u7150 0FCC                           u5550 673A                           u5470 683E  
                         u5390 6A16                           u2991 750C                           u3951 59D2  
                         u3871 5796                           u3855 5722                           u3791 561E  
                         u7311 1342                           u7231 119A                           u7151 0FC8  
                         u5551 6736                           u5471 683A                           u5391 6A12  
                         u8007 469C                           u3960 59E8                           u3880 5810  
                         u3856 572C                           u7400 1536                           u7320 139A  
                         u7240 11D6                           u7160 0FE8                           u5560 6B64  
                         u5480 64B0                           u3961 59E4                           u3881 580C  
                         u3857 573C                           u7401 1532                           u7321 1396  
                         u7241 11D2                           u7161 0FE4                           u5561 6B60  
                         u5481 64AC                           u8017 46EA                           u3970 59F8  
                         u3890 58AC                           u7410 1550                           u7330 13B0  
                         u7250 11E4                           u7170 1018                           u5570 6B86  
                         u5490 64D2                           u3971 59F4                           u3891 58A8  
                         u7411 154C                           u7331 13AC                           u7251 11E0  
                         u7171 1014                           u5571 6B82                           u5491 64CE  
                         u8107 6A20                           u8027 499E                           u3980 5A3C  
                         u7500 1A80                           u7420 1582                           u7340 13CC  
                         u7260 121C                           u5580 6BD0                           u3981 5A38  
                         u7501 1A7C                           u7421 157E                           u7341 13C8  
                         u7261 1218                           u5581 6BCC                           u8117 6804  
                         u8037 49CE                           u3990 5A4E                           u7430 15A6  
                         u7350 13EA                           u7270 1276                           u5590 6BE8  
                         u3991 5A4A                           u7431 15A2                           u7351 13E6  
                         u7271 1272                           u5591 6BE4                           u8207 64FA  
                         u8127 6848                           u8047 4A06                           u7520 2868  
                         u7440 15B4                           u7360 142E                           u7280 1284  
                         u7521 2864                           u7441 15B0                           u7361 142A  
                         u7281 1280                           u7185 102E                           u8217 653E  
                         u8137 6AC6                           u8057 4BB8                           u7530 2884  
                         u7450 160C                           u7370 1492                           u7290 12E8  
                         u7186 1038                           u7531 2880                           u7515 1C68  
                         u7451 1608                           u7371 148E                           u7291 12E4  
                         u7195 1088                           u7187 1048                           u8227 656A  
                         u8147 6B0A                           u8067 4C44                           u7540 28FE  
                         u7460 162A                           u7380 14CA                           u7196 1092  
                         u7700 3430                           u7605 2AA6                           u7541 28FA  
                         u7461 1626                           u7381 14C6                           u7197 10A2  
                         u7701 342C                           u8237 6BAE                           u8157 68F0  
                         u8077 4C84                           u7606 2AB0                           u7550 294A  
                         u7470 1936                           u7390 1520                           u7710 34AC  
                         u7615 2B10                           u7607 2AC0                           u7551 2946  
                         u7471 1932                           u7391 151C                           u7711 34A8  
                         u8247 6BF2                           u8167 6934                           u8087 4CDE  
                         u7640 2C40                           u7616 2B1A                           u7560 297C  
                         u7720 4480                           u7800 4844                           u7641 2C3C  
                         u7625 2B68                           u7617 2B2A                           u7561 2978  
                         u7721 447C                           u8257 7004                           u8177 6700  
                         u8097 69DC                           u7801 4840                           u7626 2B72  
                         u7570 29D2                           u7490 1A58                           u7730 44D6  
                         u7810 4898                           u7635 2C06                           u7627 2B82  
                         u7571 29CE                           u7491 1A54                           u7731 44D2  
                         u8267 6D5C                           u8187 6744                           u7811 4894  
                         u7636 2C10                           u7900 4B6E                           u7820 48EC  
                         u7740 45E0                           u8277 72FE                           u7637 2C20  
                         u7485 19A2                           u8197 6770                           u7901 4B6A  
                         u7821 48E8                           u7741 45DC                           u7670 3294  
                         u7590 2A8C                           u7486 19AC                           u7910 4B9A  
                         u7830 492C                           u7750 4622                           u7671 3290  
                         u7655 3214                           u7591 2A88                           u7487 19BC  
                         u7911 4B96                           u7831 4928                           u7751 461E  
                         u7680 32EC                           u7920 4BDE                           u7840 496C  
                         u7760 467E                           u7681 32E8                           u7665 325A  
                         u7585 2A18                           u7921 4BDA                           u7841 4968  
                         u7761 467A                           u7666 3264                           u7586 2A22  
                         u7690 33B4                           u7930 4C0A                           u7850 4A34  
                         u7770 4772                           u7667 3274                           u7587 2A32  
                         u7691 33B0                           u7931 4C06                           u7851 4A30  
                         u7771 476E                           u7940 4C36                           u7860 4A60  
                         u7780 47B0                           u7941 4C32                           u7861 4A5C  
                         u7781 47AC                           u7950 4C9C                           u7870 4A8E  
                         u7790 47F0                           u7951 4C98                           u7871 4A8A  
                         u7791 47EC                           u7960 4CC2                           u7880 4AE2  
                         u7961 4CBA                           u7881 4ADE                           u7890 4B44  
                         u7891 4B40                           u7978 4CC4                           u7987 45A6  
                         u7997 464C                    main@red_val 0300                           abs@a 0008  
                         _dbuf 009C                           _cp_h 0E6D                           _cp_l 0E69  
                         _dp_h 0E09                           _dp_l 0E01                           _main 44FC  
                         _prec 00D4                           _powf 0E82                           fsr1h 0FE2  
                         fsr2h 0FDA                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005E                           _stop 6FA2  
                  main@timings 0378     __end_of_reverse_after_read 657A                           prodh 0FF4  
                         prodl 0FF3                           start 0024               __end_of_ADC_init 75E4  
              ___fldiv@new_exp 003C         __end_of_color_read_Red 71FA                __end_of_HighISR 0024  
                 ___param_bank 0000      invert_action@input_action 0004                 turn_left_90@mL 0019  
               turn_left_90@mR 001B                          ??_abs 000A                   main@blue_val 0328  
                ?_inch_forward 0019                __end_of___fladd 51B4                          ?_main 0001  
                        _ADPCH 0F5F                __end_of___fldiv 5D56                __end_of___awdiv 6CDA  
              __end_of___flneg 7472                __end_of___awmod 6F00                __end_of___flmul 55DE  
                        ?_powf 00DA                __end_of___flsub 737A                          ?_stop 0015  
              ___awdiv@divisor 0004                __end_of___lwdiv 7144                          i2l503 7616  
                        i2l506 762A                          i2l457 0020                ___awdiv@counter 0006  
                 vfpfcnvrt@fmt 000D                          _TMR0H 0FD4                          _TMR0L 0FD3  
      __end_of_sendCharSerial4 7614     __end_of_I2C_2_Master_Start 766C     __end_of_I2C_2_Master_Write 7638  
                        _lg2_h 0E2D                          _lg2_l 0E29                          _flags 00D6  
__end_of_color_click_toggleLED 71AA                          _errno 00D0                          _ivln2 0E1D  
                        _fputc 6D96                __end_of_ivln2_h 0E69                __end_of_ivln2_l 0E1D  
                        _two24 0E61                __end_of_scalbnf 5F8A                          _width 00D2  
                        _putch 766C                          main@i 03AF                          _sqrtf 55DE  
                        tablat 0FF5                          powf@i 0128                          powf@j 01A8  
                        powf@k 01A4                          powf@n 0188                          powf@r 0150  
                        powf@s 0158                          powf@t 01B0                          powf@u 017C  
                        powf@v 0180                          powf@w 0144                          powf@x 00DA  
                        powf@y 00DE                          powf@z 01B4                          ttemp5 005F  
                        ttemp6 0062                          ttemp7 0066                          status 0FD8  
                        wtemp8 005F                __end_of_sprintf 743A        __end_of_color_read_Blue 72EA  
        _I2C_2_Master_RepStart 764E                ?_color_read_Red 0006                __initialization 75E4  
                 __end_of_cp_h 0E71                   __end_of_cp_l 0E6D                   __end_of_dp_h 0E11  
                 __end_of_dp_l 0E09                   __end_of_main 4CF4                   __end_of_powf 3302  
                 __end_of_stop 703C                turn_left_135@mL 0019                turn_left_135@mR 001B  
             main@action_to_do 03B2                 ??_inch_forward 001D                  main@clear_val 0364  
              _get16bitTMR0val 75AC                         ??_main 0058                         ??_powf 00E2  
                       ??_stop 0019                  __activetblptr 0003              decide_action@blue 0288  
                 ?_setMotorPWM 000F                         ?_fputc 0002                         _ADRESH 0F64  
                       _CCPR1H 0FAA                         _CCPR2H 0FA6                         _CCPR3H 0F25  
                       _CCPR4H 0F21               ___awdiv@dividend 0002                         ?_putch 0001  
                       ?_sqrtf 0012     __end_of_reverse_one_square 6780                         _RC0PPS 0E62  
                       _RC4REG 0EE3                         _RE2PPS 0E74                         _RD5PPS 0E6F  
                       _RC7PPS 0E69                         _RE4PPS 0E76                         _RD6PPS 0E70  
                       i2l5514 7616                  main@green_val 0314                         _RG6PPS 0E88  
                       i2l5516 7626                         i2l5770 001A                         i2l5766 000A  
                       i2l5768 0018               ??_turn_right_135 001D                  vfpfcnvrt@done 0010  
                    ??_HighISR 0002       __end_of_color_click_init 7334                         _RX4PPS 0E15  
                       _TX4REG 0EE4               __end_of___xxtofl 6308                   ?_resetTimer0 0001  
                 _turn_left_90 6A42                  ??_Timer0_init 0002                   _CCPTMRS0bits 0FAD  
                 vfprintf@cfmt 001A                         ___flge 657A                      ??___fladd 000A  
                       ___wmul 7528                      ??___fldiv 0033                      ??___awdiv 0006  
                    ??___flneg 0006                      ??___awmod 0006                      ??___flmul 001A  
                    ??___flsub 004C                      ??___lwdiv 000C                         clear_0 75EA  
             ___awdiv@quotient 0008                ___awmod@divisor 0004                         isa$std 0001  
              ___awmod@counter 0006                         fputc@c 0002                      ??_scalbnf 0031  
                 __mediumconst 0000                         powf@s2 0190                         powf@t1 018C  
                       powf@t2 011C                         tblptrh 0FF7                         tblptrl 0FF6  
                       powf@y1 012C                         tblptru 0FF8                         powf@ax 0178  
                       powf@is 0198                         powf@hx 0168                      ?_ADC_init 0001  
                       powf@hy 0184                         powf@ix 01AC                         powf@iy 0194  
             ?_sendCharSerial4 0001                         powf@sn 0164                         putch@c 0001  
             __end_of_vfprintf 73BC                         stop@mL 0015                         stop@mR 0017  
                       sqrtf@i 001F                         sqrtf@m 002B                         sqrtf@q 0023  
                       sqrtf@r 002F                         sqrtf@s 001B                         sqrtf@t 0027  
            ??_initDCmotorsPWM 0004                         sqrtf@x 0012                      ??_sprintf 0020  
                   ___flge@ff1 004C                     ___flge@ff2 0050                   ___xxtofl@arg 000C  
                 ___xxtofl@exp 000B                   ___xxtofl@val 0002                     __accesstop 0060  
      __end_of__initialization 75F2       __end_of_color_read_Clear 729A                     ___flneg@f1 0002  
     __end_of_color_read_Green 724A         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001  
             ?_color_read_Blue 0006                _Interrupts_init 7638                 __pcstackCOMRAM 0001  
      __end_of_get16bitTMR0val 75CA                  __end_of_lg2_h 0E31                  __end_of_lg2_l 0E2D  
     get16bitTMR0val@timer_val 0006                  __end_of_ivln2 0E21                  __end_of_fputc 6E50  
                __end_of_two24 0E65                  __end_of_putch 766E                  __end_of_sqrtf 59BC  
                   __end_of_L1 0E61                     __end_of_L2 0E5D                     __end_of_L3 0E59  
                   __end_of_L4 0E55                     __end_of_L5 0E51                     __end_of_L6 0E4D  
                   __end_of_P1 0E49                     __end_of_P2 0E45                     __end_of_P3 0E41  
                   __end_of_P4 0E3D                     __end_of_P5 0E39            __end_of_Timer0_init 758E  
                   __end_of_bp 0E19                     __end_of_cp 0E25                     ??_ADC_init 0002  
              turn_right_90@mL 0019                turn_right_90@mR 001B                        ??_fputc 0005  
                      ??_putch 0002                        ??_sqrtf 0016                     __pbssBANK0 0060  
         __end_of_inch_forward 6C16              _color_writetoaddr 754E           reverse_one_square@mL 0019  
         reverse_one_square@mR 001B                   _T2CLKCONbits 0FBF             decide_action@green 0284  
                      ?___flge 004C             decide_action@red_r 028C             ?_color_writetoaddr 0004  
                      ?___wmul 0002             decide_action@total 027B           decide_action@green_r 0290  
           _reverse_after_read 6474           decide_action@red_val 0214         decide_action@clear_val 0200  
          ??_color_writetoaddr 0005                      ?___xxtofl 0002                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5            ?_reverse_after_read 0019           reverse_after_read@mL 0019  
         reverse_after_read@mR 001B                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
      __end_of_Interrupts_init 7644         color_writetoaddr@value 0004               ??_color_read_Red 0008  
                _turn_left_135 686C         decide_action@green_val 0228                        _HighISR 0008  
               main@pclear_val 03A8      __end_of_color_writetoaddr 756E                      _ADREFbits 0F58  
           _I2C_2_Master_Start 7662                     _initUSART4 758E             _I2C_2_Master_Write 762C  
               decide_action@i 027F                        __Hparam 0000           ??_reverse_after_read 001D  
                      __Lparam 0000              color_read_Red@tmp 000B                    _Timer0_init 756E  
       decide_action@pblue_val 0252        sendStringSerial4@string 0003                  _turn_right_90 6958  
             ?_get16bitTMR0val 0002                        ___fladd 4CF4                        ___fldiv 59BC  
                      ___awdiv 6C16                        ___flneg 743A                        ___awmod 6E50  
                      ___flmul 51B4                        ___flsub 7334            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 70D0            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0017  
                 __psmallconst 0E00                        __pcinit 75E4                        __ramtop 0E00  
                      __ptext0 44FC                        __ptext1 6958                        __ptext2 6780  
                      __ptext3 6A42                        __ptext4 686C                        __ptext5 73FE  
                      __ptext6 737A                        __ptext7 5F8A                        __ptext8 6D96  
                      __ptext9 766C                      _T2CONbits 0FBD                        _ivln2_h 0E65  
                      _ivln2_l 0E19                     ??___xxtofl 0006                        _scalbnf 5D56  
             ___awmod@dividend 0002                      _T2HLTbits 0FBE                  _RxBufWriteCnt 00D9  
                      main@pmL 03C6                        main@pmR 03C8                        _sprintf 73FE  
                      main@lum 03AC           ??_I2C_2_Master_Start 0003           ??_I2C_2_Master_Write 0003  
         end_of_initialization 75F2     invert_action@output_action 0005                 ?_turn_left_135 0019  
        _color_click_toggleLED 7144                        fputc@fp 0004              ?_color_click_init 0001  
           ??_color_click_init 0006              main@lum_threshold 03A0                  _decide_action 3302  
               ?_turn_right_90 0019                        powf@p_h 01A0                        powf@p_l 016C  
                      powf@s_h 0174                        powf@t_h 0170                        powf@s_l 0130  
                      powf@t_l 0134                        powf@z_h 0120                        powf@z_l 0124  
            __end_of_vfpfcnvrt 6154             _reverse_one_square 667E                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0012                     ??_vfprintf 001A                        sqrtf@ix 0033  
              _initDCmotorsPWM 6F00                      _PORTBbits 0F8A                  _invert_action 703C  
          ?_reverse_one_square 0019             setMotorPWM@negDuty 0014                    ___fladd@grs 0011  
                ___xxtofl@sign 000A                      _TRISAbits 0F81             setMotorPWM@posDuty 0013  
                    _TRISCbits 0F83                      _TRISDbits 0F84                      _TRISEbits 0F85  
                    _TRISFbits 0F86                      _TRISGbits 0F87                      _TRISHbits 0F88  
                  ___fldiv@grs 003E                    ___fldiv@rem 0037               fullSpeedAhead@mL 0015  
             fullSpeedAhead@mR 0017       color_writetoaddr@address 0005        ??_I2C_2_Master_RepStart 0003  
             ?_Interrupts_init 0001                    ___flmul@grs 001F           ??_reverse_one_square 001D  
                  _CCP1CONbits 0FAB              ?_color_read_Clear 0006                   _EUSART4RXbuf 00BC  
                 _EUSART4TXbuf 0060                    _CCP2CONbits 0FA7                     main@greenm 03A4  
            ?_color_read_Green 0006                    _CCP3CONbits 0F26                    ?_initUSART4 0001  
                  _CCP4CONbits 0F22      sendCharSerial4@charToSend 0002                 ?_decide_action 00EB  
                   main@motorL 03B4                     main@motorR 03BD             ??_color_read_Clear 0008  
           ??_color_read_Green 0008                 __end_of___flge 667E                 _fullSpeedAhead 6CDA  
                  vfpfcnvrt@ap 000E                    vfpfcnvrt@cp 0011                    vfpfcnvrt@fp 000C  
               __end_of___wmul 754E                 ?_invert_action 0001                   _inch_forward 6B2C  
          color_read_Clear@tmp 000B            start_initialization 75E4                    __end_of_lg2 0E35  
                  __end_of_abs 74A6                    __end_of_ovt 0E29                  _TxBufWriteCnt 005D  
              ??_turn_left_135 001D         ?_color_click_toggleLED 0001               decide_action@red 0280  
              ??_turn_right_90 001D            color_read_Green@tmp 000B        __end_of_initDCmotorsPWM 6FA2  
                  vfprintf@fmt 0018         __end_of_fullSpeedAhead 6D96                       ??___flge 0054  
             turn_right_135@mL 0019               turn_right_135@mR 001B                       ??___wmul 0006  
                    ___fladd@a 0006                      ___fladd@b 0002                      ___fldiv@a 002F  
                    ___fldiv@b 002B                      ___flmul@a 0016                      ___flmul@b 0012  
                  __pbssCOMRAM 005D     decide_action@blue_unsigned 00EF                      ___flsub@a 0048  
                    ___flsub@b 0044                  __pcstackBANK0 00DA                  __pcstackBANK1 0100  
                __pcstackBANK2 0200                  __pcstackBANK3 0300                       ?_HighISR 0001  
              ??_decide_action 0058              i2_sendCharSerial4 7614             ?i2_sendCharSerial4 0001  
             ___lwdiv@dividend 0008                   ?_Timer0_init 0001            decide_action@action 027A  
              ?_fullSpeedAhead 0015                      __pintcode 0008            decide_action@blue_r 0294  
                     ?___fladd 0002                       ?___fldiv 002B                       ?___awdiv 0002  
                     ?___flneg 0002                       ?___awmod 0002                       ?___flmul 0012  
                     ?___flsub 0044                ??_invert_action 0002                       ?___lwdiv 0008  
          ??i2_sendCharSerial4 0001          decide_action@blue_val 023C           I2C_2_Master_Read@ack 0004  
         I2C_2_Master_Read@tmp 0005                    __smallconst 0E00              _I2C_2_Master_Idle 7500  
            _I2C_2_Master_Init 74D6                       ?_scalbnf 002B              _I2C_2_Master_Read 73BC  
            _I2C_2_Master_Stop 7658          decide_action@rgb_comp 025A                   _RxBufReadCnt 00D8  
                     _ADC_init 75CA             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0011             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000C       initDCmotorsPWM@PWMperiod 0002                       ?_sprintf 001B  
        decide_action@pred_val 0250      __end_ofi2_sendCharSerial4 762C                      _powf$3080 0160  
                    _powf$3073 0148                      _powf$3081 013C                      _powf$3074 015C  
                    _powf$3082 0140                      _powf$3075 014C                      _powf$3083 0108  
                    _powf$3076 019C                      _powf$3084 010C                      _powf$3077 0138  
                    _powf$3085 0110                      _powf$3086 0114                      _powf$3078 0100  
                    _powf$3087 0118                      _powf$3079 0104              _sendStringSerial4 74A6  
          ??_I2C_2_Master_Idle 0002            ??_I2C_2_Master_Init 0002            ??_I2C_2_Master_Read 0003  
               ___wmul@product 0006                       _LATAbits 0F79                  ??_resetTimer0 0002  
          ??_I2C_2_Master_Stop 0003                       _LATCbits 0F7B                       _LATEbits 0F7D  
                     _LATGbits 0F7F                       _LATHbits 0F80                  ?_turn_left_90 0019  
                     _PIE0bits 0E29                       _PIE2bits 0E2B             ?_sendStringSerial4 0003  
                     _PIE4bits 0E2D                       _PIR4bits 0E37                       i2u564_40 7626  
                     i2u564_41 7622                       i2u589_40 0018                       i2u589_41 0014  
             ?_initDCmotorsPWM 0002              ??_sendCharSerial4 0002                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0005                       _SSP2STAT 0ED8                     powf@yisint 0154  
                    _vfpfcnvrt 5F8A                     _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 7528  
    __end_of_I2C_2_Master_Init 7500      __end_of_I2C_2_Master_Read 73FE              ___wmul@multiplier 0002  
    __end_of_I2C_2_Master_Stop 7662                   setMotorPWM@m 000F    I2C_2_Master_Write@data_byte 0003  
                    main@bluem 03A6          main@actions_completed 03B0              ??_color_read_Blue 0008  
                 _TxBufReadCnt 00D7                     vfpfcnvrt@c 0016      __end_of_sendStringSerial4 74D6  
__end_of_I2C_2_Master_RepStart 7658             color_read_Blue@tmp 000B                 ??_turn_left_90 001D  
          __end_of_setMotorPWM 6474                   ??_initUSART4 0002                       __Hrparam 0000  
                   vfprintf@ap 0019                       __Lrparam 0000                     vfprintf@fp 0017  
               _turn_right_135 6780            __end_of_resetTimer0 764E      decide_action@red_unsigned 00EB  
                   ?_vfpfcnvrt 000C                     _ANSELDbits 0EA7        decide_action@pgreen_val 0254  
                   _ANSELFbits 0EB4             _decide_action$3070 02A8             _decide_action$3071 02AC  
           _decide_action$3072 02B0             _decide_action$3065 0256             _decide_action$3066 0298  
           _decide_action$3067 029C             _decide_action$3068 02A0             _decide_action$3069 02A4  
                   sprintf@fmt 001D                       ___xxtofl 6154                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6        ??_color_click_toggleLED 0002                ___lwdiv@divisor 000A  
           __end_of_initUSART4 75AC                ___lwdiv@counter 000E                       __ptext10 7472  
                     __ptext11 6E50                       __ptext20 6F00                       __ptext12 6C16  
                     __ptext21 6B2C                       __ptext13 74A6                       __ptext30 55DE  
                     __ptext22 6FA2                       __ptext14 75FC                       __ptext31 5D56  
                     __ptext23 75AC                       __ptext15 667E                       __ptext40 71FA  
                     __ptext32 51B4                       __ptext24 6CDA                       __ptext16 6474  
                     __ptext41 724A                       __ptext33 6154                       __ptext25 6308  
                     __ptext17 7644                       __ptext50 7662                       __ptext42 729A  
                     __ptext34 7334                       __ptext26 7528                       __ptext18 703C  
                     __ptext51 7500                       __ptext43 764E                       __ptext35 4CF4  
                     __ptext27 70D0                       __ptext19 758E                       __ptext52 74D6  
                     __ptext44 73BC                       __ptext36 743A                       __ptext28 3302  
                     __ptext53 756E                       __ptext45 7144                       __ptext37 657A  
                     __ptext29 0E82                       __ptext54 7638                       __ptext46 72EA  
                     __ptext38 59BC                       __ptext55 75CA                       __ptext47 754E  
                     __ptext39 71AA                       __ptext48 762C                       __ptext57 7614  
                     __ptext49 7658                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
  decide_action@green_unsigned 00ED         __end_of_turn_right_135 686C                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       int$flags 005E                       _vfprintf 737A  
                     main@redm 03A2                     _INTCONbits 0FF2              main@going_forward 03AE  
                  _setMotorPWM 6308              ??_get16bitTMR0val 0004                       scalbnf@n 002F  
                     scalbnf@u 0035                       scalbnf@x 002B                       scalbnf@y 0039  
                     intlevel2 0000          __end_of_turn_left_135 6958                      sprintf@ap 0020  
             ??_fullSpeedAhead 0019                    _resetTimer0 7644                ?_turn_right_135 0019  
        __end_of_turn_right_90 6A42                    ??_vfpfcnvrt 000F               _color_click_init 72EA  
                     sprintf@f 0021                       sprintf@s 001B           __end_of_turn_left_90 6B2C  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C              main@measured_time 03AA  
               inch_forward@mL 0019                 inch_forward@mR 001B                  ___fladd@signs 000E  
                   _TX4STAbits 0EE8                _sendCharSerial4 75FC                   ___fladd@aexp 000F  
                 ___fladd@bexp 0010    i2sendCharSerial4@charToSend 0001          __end_of_decide_action 44FC  
