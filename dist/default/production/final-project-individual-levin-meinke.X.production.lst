

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 15 11:57:43 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77   000000                     
    78                           ; Generated 21/07/2023 GMT
    79                           ; 
    80                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F67K40 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	smallconst
   114   000E00                     __psmallconst:
   115                           	callstack 0
   116   000E00  00                 	db	0
   117   000E01                     _dp_l:
   118                           	callstack 0
   119   000E01  0000               	dw	0
   120   000E03  0000               	dw	0
   121   000E05  CFDC               	dw	53212
   122   000E07  35D1               	dw	13777
   123   000E09                     __end_of_dp_l:
   124                           	callstack 0
   125   000E09                     _dp_h:
   126                           	callstack 0
   127   000E09  0000               	dw	0
   128   000E0B  0000               	dw	0
   129   000E0D  C000               	dw	49152
   130   000E0F  3F15               	dw	16149
   131   000E11                     __end_of_dp_h:
   132                           	callstack 0
   133   000E11                     _bp:
   134                           	callstack 0
   135   000E11  0000               	dw	0
   136   000E13  3F80               	dw	16256
   137   000E15  0000               	dw	0
   138   000E17  3FC0               	dw	16320
   139   000E19                     __end_of_bp:
   140                           	callstack 0
   141   000E19  A570               	dw	42352
   142   000E1B  36EC               	dw	14060
   143   000E1D                     __end_of_ivln2_l:
   144                           	callstack 0
   145   000E1D  AA3B               	dw	43579
   146   000E1F  3FB8               	dw	16312
   147   000E21                     __end_of_ivln2:
   148                           	callstack 0
   149   000E21  384F               	dw	14415
   150   000E23  3F76               	dw	16246
   151   000E25                     __end_of_cp:
   152                           	callstack 0
   153   000E25  AA3C               	dw	43580
   154   000E27  3338               	dw	13112
   155   000E29                     __end_of_ovt:
   156                           	callstack 0
   157   000E29  BE8C               	dw	48780
   158   000E2B  35BF               	dw	13759
   159   000E2D                     __end_of_lg2_l:
   160                           	callstack 0
   161   000E2D  7200               	dw	29184
   162   000E2F  3F31               	dw	16177
   163   000E31                     __end_of_lg2_h:
   164                           	callstack 0
   165   000E31  7218               	dw	29208
   166   000E33  3F31               	dw	16177
   167   000E35                     __end_of_lg2:
   168                           	callstack 0
   169   000E35  BB4C               	dw	47948
   170   000E37  3331               	dw	13105
   171   000E39                     __end_of_P5:
   172                           	callstack 0
   173   000E39  EA0E               	dw	59918
   174   000E3B  B5DD               	dw	46557
   175   000E3D                     __end_of_P4:
   176                           	callstack 0
   177   000E3D  B355               	dw	45909
   178   000E3F  388A               	dw	14474
   179   000E41                     __end_of_P3:
   180                           	callstack 0
   181   000E41  0B61               	dw	2913
   182   000E43  BB36               	dw	47926
   183   000E45                     __end_of_P2:
   184                           	callstack 0
   185   000E45  AAAB               	dw	43691
   186   000E47  3E2A               	dw	15914
   187   000E49                     __end_of_P1:
   188                           	callstack 0
   189   000E49  F142               	dw	61762
   190   000E4B  3E53               	dw	15955
   191   000E4D                     __end_of_L6:
   192                           	callstack 0
   193   000E4D  3255               	dw	12885
   194   000E4F  3E6C               	dw	15980
   195   000E51                     __end_of_L5:
   196                           	callstack 0
   197   000E51  A305               	dw	41733
   198   000E53  3E8B               	dw	16011
   199   000E55                     __end_of_L4:
   200                           	callstack 0
   201   000E55  AAAB               	dw	43691
   202   000E57  3EAA               	dw	16042
   203   000E59                     __end_of_L3:
   204                           	callstack 0
   205   000E59  6DB7               	dw	28087
   206   000E5B  3EDB               	dw	16091
   207   000E5D                     __end_of_L2:
   208                           	callstack 0
   209   000E5D  999A               	dw	39322
   210   000E5F  3F19               	dw	16153
   211   000E61                     __end_of_L1:
   212                           	callstack 0
   213   000E61  0000               	dw	0
   214   000E63  4B80               	dw	19328
   215   000E65                     __end_of_two24:
   216                           	callstack 0
   217   000E65  AA00               	dw	43520
   218   000E67  3FB8               	dw	16312
   219   000E69                     __end_of_ivln2_h:
   220                           	callstack 0
   221   000E69  23C6               	dw	9158
   222   000E6B  B8F6               	dw	47350
   223   000E6D                     __end_of_cp_l:
   224                           	callstack 0
   225   000E6D  4000               	dw	16384
   226   000E6F  3F76               	dw	16246
   227   000E71                     __end_of_cp_h:
   228                           	callstack 0
   229   000000                     _TX4REG	set	3812
   230   000000                     _RC4STAbits	set	3815
   231   000000                     _SP4BRGH	set	3814
   232   000000                     _TRISFbits	set	3974
   233   000000                     _LATHbits	set	3968
   234   000000                     _TRISAbits	set	3969
   235   000000                     _TRISGbits	set	3975
   236   000000                     _SSP2CON2bits	set	3802
   237   000000                     _RX4PPS	set	3605
   238   000000                     _SSP2CLKPPS	set	3612
   239   000000                     _SSP2DATPPS	set	3613
   240   000000                     _ANSELDbits	set	3751
   241   000000                     _SSP2ADD	set	3798
   242   000000                     _SSP2CON1bits	set	3801
   243   000000                     _LATAbits	set	3961
   244   000000                     _LATGbits	set	3967
   245   000000                     _LATCbits	set	3963
   246   000000                     _LATEbits	set	3965
   247   000000                     _PORTBbits	set	3978
   248   000000                     _TRISHbits	set	3976
   249   000000                     _T2PR	set	4028
   250   000000                     _T2CONbits	set	4029
   251   000000                     _CCPR2H	set	4006
   252   000000                     _CCPR1H	set	4010
   253   000000                     _TRISCbits	set	3971
   254   000000                     _TRISDbits	set	3972
   255   000000                     _TRISEbits	set	3973
   256   000000                     _RC4REG	set	3811
   257   000000                     _SP4BRGL	set	3813
   258   000000                     _TX4STAbits	set	3816
   259   000000                     _BAUD4CONbits	set	3817
   260   000000                     _SSP2CON2	set	3802
   261   000000                     _CCPR4H	set	3873
   262   000000                     _CCPR3H	set	3877
   263   000000                     _SSP2STAT	set	3800
   264   000000                     _ANSELFbits	set	3764
   265   000000                     _SSP2BUF	set	3797
   266   000000                     _PIE0bits	set	3625
   267   000000                     _PIE2bits	set	3627
   268   000000                     _RC7PPS	set	3689
   269   000000                     _RD5PPS	set	3695
   270   000000                     _RE2PPS	set	3700
   271   000000                     _RD6PPS	set	3696
   272   000000                     _RE4PPS	set	3702
   273   000000                     _RG6PPS	set	3720
   274   000000                     _TMR0L	set	4051
   275   000000                     _TMR0H	set	4052
   276   000000                     _T0CON0bits	set	4053
   277   000000                     _T0CON1bits	set	4054
   278   000000                     _T2CLKCONbits	set	4031
   279   000000                     _T2HLTbits	set	4030
   280   000000                     _CCP1CONbits	set	4011
   281   000000                     _CCPTMRS0bits	set	4013
   282   000000                     _CCP2CONbits	set	4007
   283   000000                     _ADREFbits	set	3928
   284   000000                     _CCP3CONbits	set	3878
   285   000000                     _CCP4CONbits	set	3874
   286   000000                     _INTCONbits	set	4082
   287   000000                     _PIE4bits	set	3629
   288   000000                     _PIR4bits	set	3639
   289   000000                     _RC0PPS	set	3682
   290   000000                     _ADPCH	set	3935
   291   000000                     _ADRESH	set	3940
   292   000000                     _ADCON0bits	set	3936
   293   000E71                     STR_1:
   294                           
   295                           ; BSR set to: 14
   296   000E71  61                 	db	97	;'a'
   297   000E72  63                 	db	99	;'c'
   298   000E73  74                 	db	116	;'t'
   299   000E74  69                 	db	105	;'i'
   300   000E75  6F                 	db	111	;'o'
   301   000E76  6E                 	db	110	;'n'
   302   000E77  20                 	db	32
   303   000E78  3D                 	db	61	;'='
   304   000E79  20                 	db	32
   305   000E7A  25                 	db	37
   306   000E7B  64                 	db	100	;'d'
   307   000E7C  20                 	db	32
   308   000E7D  0D                 	db	13
   309   000E7E  0A                 	db	10
   310   000E7F  00                 	db	0
   311   000E80  00                 	db	0	; dummy byte at the end
   312   000000                     
   313                           ; #config settings
   314                           
   315                           	psect	cinit
   316   007464                     __pcinit:
   317                           	callstack 0
   318   007464                     start_initialization:
   319                           	callstack 0
   320   007464                     __initialization:
   321                           	callstack 0
   322                           
   323                           ; Clear objects allocated to BANK3 (60 bytes)
   324   007464  EE03  F000         	lfsr	0,__pbssBANK3
   325   007468  0E3C               	movlw	60
   326   00746A                     clear_0:
   327   00746A  6AEE               	clrf	postinc0,c
   328   00746C  06E8               	decf	wreg,f,c
   329   00746E  E1FD               	bnz	clear_0
   330                           
   331                           ; Clear objects allocated to BANK1 (32 bytes)
   332   007470  EE01  F0B8         	lfsr	0,__pbssBANK1
   333   007474  0E20               	movlw	32
   334   007476                     clear_1:
   335   007476  6AEE               	clrf	postinc0,c
   336   007478  06E8               	decf	wreg,f,c
   337   00747A  E1FD               	bnz	clear_1
   338                           
   339                           ; Clear objects allocated to BANK0 (26 bytes)
   340   00747C  EE00  F0D6         	lfsr	0,__pbssBANK0
   341   007480  0E1A               	movlw	26
   342   007482                     clear_2:
   343   007482  6AEE               	clrf	postinc0,c
   344   007484  06E8               	decf	wreg,f,c
   345   007486  E1FD               	bnz	clear_2
   346                           
   347                           ; Clear objects allocated to COMRAM (5 bytes)
   348   007488  6A5C               	clrf	(__pbssCOMRAM+4)& (0+255),c
   349   00748A  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   350   00748C  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   351   00748E  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   352   007490  6A58               	clrf	__pbssCOMRAM& (0+255),c
   353   007492                     end_of_initialization:
   354                           	callstack 0
   355   007492                     __end_of__initialization:
   356                           	callstack 0
   357   007492  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   358   007494  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   359   007496  0100               	movlb	0
   360   007498  EF88  F022         	goto	_main	;jump to C main() function
   361                           
   362                           	psect	bssCOMRAM
   363   000058                     __pbssCOMRAM:
   364                           	callstack 0
   365   000058                     _flags:
   366                           	callstack 0
   367   000058                     	ds	1
   368   000059                     _TxBufReadCnt:
   369                           	callstack 0
   370   000059                     	ds	1
   371   00005A                     _TxBufWriteCnt:
   372                           	callstack 0
   373   00005A                     	ds	1
   374   00005B                     _RxBufReadCnt:
   375                           	callstack 0
   376   00005B                     	ds	1
   377   00005C                     _RxBufWriteCnt:
   378                           	callstack 0
   379   00005C                     	ds	1
   380                           
   381                           	psect	bssBANK0
   382   0000D6                     __pbssBANK0:
   383                           	callstack 0
   384   0000D6                     _EUSART4RXbuf:
   385                           	callstack 0
   386   0000D6                     	ds	20
   387   0000EA                     _errno:
   388                           	callstack 0
   389   0000EA                     	ds	2
   390   0000EC                     _width:
   391                           	callstack 0
   392   0000EC                     	ds	2
   393   0000EE                     _prec:
   394                           	callstack 0
   395   0000EE                     	ds	2
   396                           
   397                           	psect	bssBANK1
   398   0001B8                     __pbssBANK1:
   399                           	callstack 0
   400   0001B8                     _dbuf:
   401                           	callstack 0
   402   0001B8                     	ds	32
   403                           
   404                           	psect	bssBANK3
   405   000300                     __pbssBANK3:
   406                           	callstack 0
   407   000300                     _EUSART4TXbuf:
   408                           	callstack 0
   409   000300                     	ds	60
   410                           
   411                           	psect	cstackBANK2
   412   000200                     __pcstackBANK2:
   413                           	callstack 0
   414   000200                     main@red_val:
   415                           	callstack 0
   416                           
   417                           ; 20 bytes @ 0x0
   418   000200                     	ds	20
   419   000214                     main@green_val:
   420                           	callstack 0
   421                           
   422                           ; 20 bytes @ 0x14
   423   000214                     	ds	20
   424   000228                     main@blue_val:
   425                           	callstack 0
   426                           
   427                           ; 20 bytes @ 0x28
   428   000228                     	ds	20
   429   00023C                     main@clear_val:
   430                           	callstack 0
   431                           
   432                           ; 20 bytes @ 0x3C
   433   00023C                     	ds	20
   434   000250                     main@actions:
   435                           	callstack 0
   436                           
   437                           ; 40 bytes @ 0x50
   438   000250                     	ds	40
   439   000278                     main@timings:
   440                           	callstack 0
   441                           
   442                           ; 40 bytes @ 0x78
   443   000278                     	ds	40
   444   0002A0                     main@pclear_val:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0xA0
   448   0002A0                     	ds	2
   449   0002A2                     main@lum_threshold:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0xA2
   453   0002A2                     	ds	2
   454   0002A4                     main@lost_detection:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0xA4
   458   0002A4                     	ds	2
   459   0002A6                     main@measured_time:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0xA6
   463   0002A6                     	ds	2
   464   0002A8                     main@lum:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0xA8
   468   0002A8                     	ds	2
   469   0002AA                     main@going_forward:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0xAA
   473   0002AA                     	ds	1
   474   0002AB                     main@i:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0xAB
   478   0002AB                     	ds	1
   479   0002AC                     main@actions_completed:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0xAC
   483   0002AC                     	ds	2
   484   0002AE                     main@motorL:
   485                           	callstack 0
   486                           
   487                           ; 9 bytes @ 0xAE
   488   0002AE                     	ds	9
   489   0002B7                     main@motorR:
   490                           	callstack 0
   491                           
   492                           ; 9 bytes @ 0xB7
   493   0002B7                     	ds	9
   494   0002C0                     main@action_to_do:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0xC0
   498   0002C0                     	ds	2
   499   0002C2                     main@pmL:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0xC2
   503   0002C2                     	ds	2
   504   0002C4                     main@pmR:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xC4
   508   0002C4                     	ds	2
   509                           
   510                           	psect	cstackBANK1
   511   000100                     __pcstackBANK1:
   512                           	callstack 0
   513   000100                     _powf$3063:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x0
   517   000100                     	ds	4
   518   000104                     _powf$3064:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x4
   522   000104                     	ds	4
   523   000108                     _powf$3068:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x8
   527   000108                     	ds	4
   528   00010C                     _powf$3069:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0xC
   532   00010C                     	ds	4
   533   000110                     _powf$3070:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x10
   537   000110                     	ds	4
   538   000114                     _powf$3071:
   539                           	callstack 0
   540                           
   541                           ; 4 bytes @ 0x14
   542   000114                     	ds	4
   543   000118                     _powf$3072:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0x18
   547   000118                     	ds	4
   548   00011C                     powf@t2:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0x1C
   552   00011C                     	ds	4
   553   000120                     powf@z_h:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0x20
   557   000120                     	ds	4
   558   000124                     powf@z_l:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x24
   562   000124                     	ds	4
   563   000128                     powf@i:
   564                           	callstack 0
   565                           
   566                           ; 4 bytes @ 0x28
   567   000128                     	ds	4
   568   00012C                     powf@y1:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0x2C
   572   00012C                     	ds	4
   573   000130                     powf@s_l:
   574                           	callstack 0
   575                           
   576                           ; 4 bytes @ 0x30
   577   000130                     	ds	4
   578   000134                     powf@t_l:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x34
   582   000134                     	ds	4
   583   000138                     _powf$3062:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x38
   587   000138                     	ds	4
   588   00013C                     _powf$3066:
   589                           	callstack 0
   590                           
   591                           ; 4 bytes @ 0x3C
   592   00013C                     	ds	4
   593   000140                     _powf$3067:
   594                           	callstack 0
   595                           
   596                           ; 4 bytes @ 0x40
   597   000140                     	ds	4
   598   000144                     powf@w:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0x44
   602   000144                     	ds	4
   603   000148                     _powf$3058:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x48
   607   000148                     	ds	4
   608   00014C                     _powf$3060:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x4C
   612   00014C                     	ds	4
   613   000150                     powf@r:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x50
   617   000150                     	ds	4
   618   000154                     powf@yisint:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0x54
   622   000154                     	ds	4
   623   000158                     powf@s:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x58
   627   000158                     	ds	4
   628   00015C                     _powf$3059:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x5C
   632   00015C                     	ds	4
   633   000160                     _powf$3065:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x60
   637   000160                     	ds	4
   638   000164                     powf@sn:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x64
   642   000164                     	ds	4
   643   000168                     powf@hx:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x68
   647   000168                     	ds	4
   648   00016C                     powf@p_l:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x6C
   652   00016C                     	ds	4
   653   000170                     powf@t_h:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x70
   657   000170                     	ds	4
   658   000174                     powf@s_h:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x74
   662   000174                     	ds	4
   663   000178                     powf@ax:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x78
   667   000178                     	ds	4
   668   00017C                     powf@u:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0x7C
   672   00017C                     	ds	4
   673   000180                     powf@v:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0x80
   677   000180                     	ds	4
   678   000184                     powf@hy:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x84
   682   000184                     	ds	4
   683   000188                     powf@n:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x88
   687   000188                     	ds	4
   688   00018C                     powf@t1:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x8C
   692   00018C                     	ds	4
   693   000190                     powf@s2:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x90
   697   000190                     	ds	4
   698   000194                     powf@iy:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x94
   702   000194                     	ds	4
   703   000198                     powf@is:
   704                           	callstack 0
   705                           
   706                           ; 4 bytes @ 0x98
   707   000198                     	ds	4
   708   00019C                     _powf$3061:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x9C
   712   00019C                     	ds	4
   713   0001A0                     powf@p_h:
   714                           	callstack 0
   715                           
   716                           ; 4 bytes @ 0xA0
   717   0001A0                     	ds	4
   718   0001A4                     powf@k:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0xA4
   722   0001A4                     	ds	4
   723   0001A8                     powf@j:
   724                           	callstack 0
   725                           
   726                           ; 4 bytes @ 0xA8
   727   0001A8                     	ds	4
   728   0001AC                     powf@ix:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0xAC
   732   0001AC                     	ds	4
   733   0001B0                     powf@t:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0xB0
   737   0001B0                     	ds	4
   738   0001B4                     powf@z:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0xB4
   742   0001B4                     	ds	4
   743                           
   744                           	psect	cstackBANK0
   745   000060                     __pcstackBANK0:
   746                           	callstack 0
   747   000060                     ?_powf:
   748                           	callstack 0
   749   000060                     powf@x:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x0
   753   000060                     	ds	4
   754   000064                     powf@y:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0x4
   758   000064                     	ds	4
   759   000068                     ??_powf:
   760                           
   761                           ; 1 bytes @ 0x8
   762   000068                     	ds	9
   763   000071                     ??_decide_action:
   764                           
   765                           ; 1 bytes @ 0x11
   766   000071                     	ds	2
   767   000073                     _decide_action$3050:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x13
   771   000073                     	ds	4
   772   000077                     decide_action@rgb_comp:
   773                           	callstack 0
   774                           
   775                           ; 32 bytes @ 0x17
   776   000077                     	ds	32
   777   000097                     decide_action@action:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x37
   781   000097                     	ds	1
   782   000098                     decide_action@total:
   783                           	callstack 0
   784                           
   785                           ; 4 bytes @ 0x38
   786   000098                     	ds	4
   787   00009C                     decide_action@i:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x3C
   791   00009C                     	ds	1
   792   00009D                     decide_action@red:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x3D
   796   00009D                     	ds	4
   797   0000A1                     decide_action@green:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x41
   801   0000A1                     	ds	4
   802   0000A5                     decide_action@blue:
   803                           	callstack 0
   804                           
   805                           ; 4 bytes @ 0x45
   806   0000A5                     	ds	4
   807   0000A9                     decide_action@red_r:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x49
   811   0000A9                     	ds	4
   812   0000AD                     decide_action@green_r:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x4D
   816   0000AD                     	ds	4
   817   0000B1                     decide_action@blue_r:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0x51
   821   0000B1                     	ds	4
   822   0000B5                     _decide_action$3051:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x55
   826   0000B5                     	ds	4
   827   0000B9                     _decide_action$3052:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0x59
   831   0000B9                     	ds	4
   832   0000BD                     _decide_action$3053:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x5D
   836   0000BD                     	ds	4
   837   0000C1                     _decide_action$3054:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0x61
   841   0000C1                     	ds	4
   842   0000C5                     _decide_action$3055:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0x65
   846   0000C5                     	ds	4
   847   0000C9                     _decide_action$3056:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x69
   851   0000C9                     	ds	4
   852   0000CD                     _decide_action$3057:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0x6D
   856   0000CD                     	ds	4
   857   0000D1                     ??_main:
   858                           
   859                           ; 1 bytes @ 0x71
   860   0000D1                     	ds	5
   861                           
   862                           	psect	cstackCOMRAM
   863   000001                     __pcstackCOMRAM:
   864                           	callstack 0
   865   000001                     i2sendCharSerial4@charToSend:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x0
   869   000001                     	ds	1
   870   000002                     ??_color_click_toggleLED:
   871   000002                     ??_invert_action:
   872   000002                     ??_I2C_2_Master_Idle:
   873   000002                     ?_get16bitTMR0val:
   874                           	callstack 0
   875   000002                     ?___wmul:
   876                           	callstack 0
   877   000002                     ?___awdiv:
   878                           	callstack 0
   879   000002                     ?___awmod:
   880                           	callstack 0
   881   000002                     ?___fladd:
   882                           	callstack 0
   883   000002                     ?___flneg:
   884                           	callstack 0
   885   000002                     sendCharSerial4@charToSend:
   886                           	callstack 0
   887   000002                     initDCmotorsPWM@PWMperiod:
   888                           	callstack 0
   889   000002                     ___wmul@multiplier:
   890                           	callstack 0
   891   000002                     ___awdiv@dividend:
   892                           	callstack 0
   893   000002                     ___awmod@dividend:
   894                           	callstack 0
   895   000002                     fputc@c:
   896                           	callstack 0
   897   000002                     ___flneg@f1:
   898                           	callstack 0
   899   000002                     ___fladd@b:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0x1
   903   000002                     	ds	1
   904   000003                     ??_I2C_2_Master_Read:
   905   000003                     I2C_2_Master_Write@data_byte:
   906                           	callstack 0
   907   000003                     sendStringSerial4@string:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x2
   911   000003                     	ds	1
   912   000004                     ??_get16bitTMR0val:
   913   000004                     color_writetoaddr@value:
   914                           	callstack 0
   915   000004                     invert_action@input_action:
   916                           	callstack 0
   917   000004                     I2C_2_Master_Read@ack:
   918                           	callstack 0
   919   000004                     fputc@fp:
   920                           	callstack 0
   921   000004                     ___wmul@multiplicand:
   922                           	callstack 0
   923   000004                     ___awdiv@divisor:
   924                           	callstack 0
   925   000004                     ___awmod@divisor:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x3
   929   000004                     	ds	1
   930   000005                     ??_fputc:
   931   000005                     color_writetoaddr@address:
   932                           	callstack 0
   933   000005                     invert_action@output_action:
   934                           	callstack 0
   935   000005                     I2C_2_Master_Read@tmp:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x4
   939   000005                     	ds	1
   940   000006                     ??_color_click_init:
   941   000006                     ?_color_read_Clear:
   942                           	callstack 0
   943   000006                     ?_color_read_Red:
   944                           	callstack 0
   945   000006                     ?_color_read_Green:
   946                           	callstack 0
   947   000006                     ?_color_read_Blue:
   948                           	callstack 0
   949   000006                     ___awdiv@counter:
   950                           	callstack 0
   951   000006                     ___awmod@counter:
   952                           	callstack 0
   953   000006                     get16bitTMR0val@timer_val:
   954                           	callstack 0
   955   000006                     ___wmul@product:
   956                           	callstack 0
   957   000006                     ___fladd@a:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x5
   961   000006                     	ds	1
   962   000007                     ___awdiv@sign:
   963                           	callstack 0
   964   000007                     ___awmod@sign:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x6
   968   000007                     	ds	1
   969   000008                     ??_color_read_Clear:
   970   000008                     ??_color_read_Red:
   971   000008                     ??_color_read_Green:
   972   000008                     ??_color_read_Blue:
   973   000008                     ?_abs:
   974                           	callstack 0
   975   000008                     ?___lwdiv:
   976                           	callstack 0
   977   000008                     ___awdiv@quotient:
   978                           	callstack 0
   979   000008                     ___lwdiv@dividend:
   980                           	callstack 0
   981   000008                     abs@a:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x7
   985   000008                     	ds	2
   986   00000A                     ??___fladd:
   987   00000A                     ??_abs:
   988   00000A                     ___lwdiv@divisor:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x9
   992   00000A                     	ds	1
   993   00000B                     color_read_Clear@tmp:
   994                           	callstack 0
   995   00000B                     color_read_Red@tmp:
   996                           	callstack 0
   997   00000B                     color_read_Green@tmp:
   998                           	callstack 0
   999   00000B                     color_read_Blue@tmp:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0xA
  1003   00000B                     	ds	1
  1004   00000C                     vfpfcnvrt@fp:
  1005                           	callstack 0
  1006   00000C                     ___lwdiv@quotient:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0xB
  1010   00000C                     	ds	1
  1011   00000D                     ?___xxtofl:
  1012                           	callstack 0
  1013   00000D                     vfpfcnvrt@fmt:
  1014                           	callstack 0
  1015   00000D                     ___xxtofl@val:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0xC
  1019   00000D                     	ds	1
  1020   00000E                     ___lwdiv@counter:
  1021                           	callstack 0
  1022   00000E                     ___fladd@signs:
  1023                           	callstack 0
  1024   00000E                     vfpfcnvrt@ap:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0xD
  1028   00000E                     	ds	1
  1029   00000F                     ??_vfpfcnvrt:
  1030   00000F                     ___fladd@aexp:
  1031                           	callstack 0
  1032   00000F                     setMotorPWM@m:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0xE
  1036   00000F                     	ds	1
  1037   000010                     ___fladd@bexp:
  1038                           	callstack 0
  1039   000010                     vfpfcnvrt@done:
  1040                           	callstack 0
  1041                           
  1042                           ; 1 bytes @ 0xF
  1043   000010                     	ds	1
  1044   000011                     ??_setMotorPWM:
  1045   000011                     ??___xxtofl:
  1046   000011                     ___fladd@grs:
  1047                           	callstack 0
  1048   000011                     vfpfcnvrt@cp:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x10
  1052   000011                     	ds	1
  1053   000012                     ?_sqrtf:
  1054                           	callstack 0
  1055   000012                     ?___flmul:
  1056                           	callstack 0
  1057   000012                     ___flmul@b:
  1058                           	callstack 0
  1059   000012                     vfpfcnvrt@convarg:
  1060                           	callstack 0
  1061   000012                     sqrtf@x:
  1062                           	callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x11
  1065   000012                     	ds	1
  1066   000013                     setMotorPWM@posDuty:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x12
  1070   000013                     	ds	1
  1071   000014                     setMotorPWM@negDuty:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x13
  1075   000014                     	ds	1
  1076   000015                     ___xxtofl@sign:
  1077                           	callstack 0
  1078   000015                     fullSpeedAhead@mL:
  1079                           	callstack 0
  1080   000015                     stop@mL:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x14
  1084   000015                     	ds	1
  1085   000016                     ??_sqrtf:
  1086   000016                     ___xxtofl@exp:
  1087                           	callstack 0
  1088   000016                     vfpfcnvrt@c:
  1089                           	callstack 0
  1090   000016                     ___flmul@a:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0x15
  1094   000016                     	ds	1
  1095   000017                     ?_vfprintf:
  1096                           	callstack 0
  1097   000017                     vfprintf@fp:
  1098                           	callstack 0
  1099   000017                     fullSpeedAhead@mR:
  1100                           	callstack 0
  1101   000017                     stop@mR:
  1102                           	callstack 0
  1103   000017                     ___xxtofl@arg:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x16
  1107   000017                     	ds	1
  1108   000018                     vfprintf@fmt:
  1109                           	callstack 0
  1110                           
  1111                           ; 1 bytes @ 0x17
  1112   000018                     	ds	1
  1113   000019                     ??_fullSpeedAhead:
  1114   000019                     vfprintf@ap:
  1115                           	callstack 0
  1116   000019                     turn_left_90@mL:
  1117                           	callstack 0
  1118   000019                     turn_right_90@mL:
  1119                           	callstack 0
  1120   000019                     turn_left_135@mL:
  1121                           	callstack 0
  1122   000019                     turn_right_135@mL:
  1123                           	callstack 0
  1124   000019                     reverse_after_read@mL:
  1125                           	callstack 0
  1126   000019                     reverse_one_square@mL:
  1127                           	callstack 0
  1128   000019                     inch_forward@mL:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x18
  1132   000019                     	ds	1
  1133   00001A                     ??___flmul:
  1134   00001A                     vfprintf@cfmt:
  1135                           	callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x19
  1138   00001A                     	ds	1
  1139   00001B                     ?_sprintf:
  1140                           	callstack 0
  1141   00001B                     turn_left_90@mR:
  1142                           	callstack 0
  1143   00001B                     turn_right_90@mR:
  1144                           	callstack 0
  1145   00001B                     turn_left_135@mR:
  1146                           	callstack 0
  1147   00001B                     turn_right_135@mR:
  1148                           	callstack 0
  1149   00001B                     reverse_after_read@mR:
  1150                           	callstack 0
  1151   00001B                     reverse_one_square@mR:
  1152                           	callstack 0
  1153   00001B                     inch_forward@mR:
  1154                           	callstack 0
  1155   00001B                     sprintf@s:
  1156                           	callstack 0
  1157   00001B                     sqrtf@s:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x1A
  1161   00001B                     	ds	2
  1162   00001D                     ??_turn_left_90:
  1163   00001D                     ??_turn_right_90:
  1164   00001D                     ??_turn_left_135:
  1165   00001D                     ??_turn_right_135:
  1166   00001D                     ??_reverse_after_read:
  1167   00001D                     ??_reverse_one_square:
  1168   00001D                     ??_inch_forward:
  1169   00001D                     sprintf@fmt:
  1170                           	callstack 0
  1171                           
  1172                           ; 1 bytes @ 0x1C
  1173   00001D                     	ds	1
  1174   00001E                     ___flmul@sign:
  1175                           	callstack 0
  1176                           
  1177                           ; 1 bytes @ 0x1D
  1178   00001E                     	ds	1
  1179   00001F                     ___flmul@grs:
  1180                           	callstack 0
  1181   00001F                     sqrtf@i:
  1182                           	callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x1E
  1185   00001F                     	ds	1
  1186   000020                     sprintf@ap:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x1F
  1190   000020                     	ds	1
  1191   000021                     sprintf@f:
  1192                           	callstack 0
  1193                           
  1194                           ; 12 bytes @ 0x20
  1195   000021                     	ds	2
  1196   000023                     ___flmul@aexp:
  1197                           	callstack 0
  1198   000023                     sqrtf@q:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x22
  1202   000023                     	ds	1
  1203   000024                     ___flmul@bexp:
  1204                           	callstack 0
  1205                           
  1206                           ; 1 bytes @ 0x23
  1207   000024                     	ds	1
  1208   000025                     ___flmul@prod:
  1209                           	callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x24
  1212   000025                     	ds	2
  1213   000027                     sqrtf@t:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x26
  1217   000027                     	ds	2
  1218   000029                     ___flmul@temp:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x28
  1222   000029                     	ds	2
  1223   00002B                     ?___fldiv:
  1224                           	callstack 0
  1225   00002B                     ?_scalbnf:
  1226                           	callstack 0
  1227   00002B                     ___fldiv@b:
  1228                           	callstack 0
  1229   00002B                     scalbnf@x:
  1230                           	callstack 0
  1231   00002B                     sqrtf@m:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x2A
  1235   00002B                     	ds	4
  1236   00002F                     scalbnf@n:
  1237                           	callstack 0
  1238   00002F                     ___fldiv@a:
  1239                           	callstack 0
  1240   00002F                     sqrtf@r:
  1241                           	callstack 0
  1242                           
  1243                           ; 4 bytes @ 0x2E
  1244   00002F                     	ds	2
  1245   000031                     ??_scalbnf:
  1246                           
  1247                           ; 1 bytes @ 0x30
  1248   000031                     	ds	2
  1249   000033                     ??___fldiv:
  1250   000033                     sqrtf@ix:
  1251                           	callstack 0
  1252                           
  1253                           ; 4 bytes @ 0x32
  1254   000033                     	ds	2
  1255   000035                     scalbnf@u:
  1256                           	callstack 0
  1257                           
  1258                           ; 4 bytes @ 0x34
  1259   000035                     	ds	2
  1260   000037                     ___fldiv@rem:
  1261                           	callstack 0
  1262                           
  1263                           ; 4 bytes @ 0x36
  1264   000037                     	ds	2
  1265   000039                     scalbnf@y:
  1266                           	callstack 0
  1267                           
  1268                           ; 4 bytes @ 0x38
  1269   000039                     	ds	2
  1270   00003B                     ___fldiv@sign:
  1271                           	callstack 0
  1272                           
  1273                           ; 1 bytes @ 0x3A
  1274   00003B                     	ds	1
  1275   00003C                     ___fldiv@new_exp:
  1276                           	callstack 0
  1277                           
  1278                           ; 2 bytes @ 0x3B
  1279   00003C                     	ds	2
  1280   00003E                     ___fldiv@grs:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x3D
  1284   00003E                     	ds	4
  1285   000042                     ___fldiv@bexp:
  1286                           	callstack 0
  1287                           
  1288                           ; 1 bytes @ 0x41
  1289   000042                     	ds	1
  1290   000043                     ___fldiv@aexp:
  1291                           	callstack 0
  1292                           
  1293                           ; 1 bytes @ 0x42
  1294   000043                     	ds	1
  1295   000044                     ?___flsub:
  1296                           	callstack 0
  1297   000044                     ___flsub@b:
  1298                           	callstack 0
  1299                           
  1300                           ; 4 bytes @ 0x43
  1301   000044                     	ds	4
  1302   000048                     ___flsub@a:
  1303                           	callstack 0
  1304                           
  1305                           ; 4 bytes @ 0x47
  1306   000048                     	ds	4
  1307   00004C                     ___flge@ff1:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x4B
  1311   00004C                     	ds	4
  1312   000050                     ___flge@ff2:
  1313                           	callstack 0
  1314                           
  1315                           ; 4 bytes @ 0x4F
  1316   000050                     	ds	4
  1317   000054                     ??___flge:
  1318                           
  1319                           ; 1 bytes @ 0x53
  1320   000054                     	ds	4
  1321                           
  1322 ;;
  1323 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1324 ;;
  1325 ;; *************** function _main *****************
  1326 ;; Defined at:
  1327 ;;		line 23 in file "main.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  i               1  171[BANK2 ] unsigned char 
  1332 ;;  timings        40  120[BANK2 ] unsigned int [20]
  1333 ;;  actions        40   80[BANK2 ] int [20]
  1334 ;;  clear_val      20   60[BANK2 ] unsigned char [20]
  1335 ;;  blue_val       20   40[BANK2 ] unsigned char [20]
  1336 ;;  green_val      20   20[BANK2 ] unsigned char [20]
  1337 ;;  red_val        20    0[BANK2 ] unsigned char [20]
  1338 ;;  motorR          9  183[BANK2 ] struct DC_motor
  1339 ;;  motorL          9  174[BANK2 ] struct DC_motor
  1340 ;;  pmR             2  196[BANK2 ] PTR struct DC_motor
  1341 ;;		 -> main@motorR(9), 
  1342 ;;  pmL             2  194[BANK2 ] PTR struct DC_motor
  1343 ;;		 -> main@motorL(9), 
  1344 ;;  action_to_do    2  192[BANK2 ] int 
  1345 ;;  actions_comp    2  172[BANK2 ] int 
  1346 ;;  lum             2  168[BANK2 ] unsigned int 
  1347 ;;  measured_tim    2  166[BANK2 ] unsigned int 
  1348 ;;  PWMcycle        2    0        unsigned int 
  1349 ;;  lost_detecti    2  164[BANK2 ] unsigned int 
  1350 ;;  lum_threshol    2  162[BANK2 ] unsigned int 
  1351 ;;  pclear_val      2  160[BANK2 ] PTR unsigned char 
  1352 ;;		 -> main@clear_val(20), 
  1353 ;;  pgreen_val      2    0        PTR unsigned char 
  1354 ;;		 -> main@green_val(20), 
  1355 ;;  pblue_val       2    0        PTR unsigned char 
  1356 ;;		 -> main@blue_val(20), 
  1357 ;;  pred_val        2    0        PTR unsigned char 
  1358 ;;		 -> main@red_val(20), 
  1359 ;;  previously_m    2    0        unsigned int 
  1360 ;;  bluem           2    0        unsigned int 
  1361 ;;  greenm          2    0        unsigned int 
  1362 ;;  redm            2    0        unsigned int 
  1363 ;;  going_forwar    1  170[BANK2 ] _Bool 
  1364 ;;  action          1    0        unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1375 ;;      Locals:         0       0       0     198       0       0       0       0       0       0       0       0       
      +0       0       0
  1376 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1377 ;;      Totals:         0       5       0     198       0       0       0       0       0       0       0       0       
      +0       0       0
  1378 ;;Total ram usage:      203 bytes
  1379 ;; Hardware stack levels required when called: 7
  1380 ;; This function calls:
  1381 ;;		_ADC_init
  1382 ;;		_I2C_2_Master_Init
  1383 ;;		_Interrupts_init
  1384 ;;		_Timer0_init
  1385 ;;		_color_click_init
  1386 ;;		_color_click_toggleLED
  1387 ;;		_color_read_Clear
  1388 ;;		_decide_action
  1389 ;;		_fullSpeedAhead
  1390 ;;		_get16bitTMR0val
  1391 ;;		_inch_forward
  1392 ;;		_initDCmotorsPWM
  1393 ;;		_initUSART4
  1394 ;;		_invert_action
  1395 ;;		_resetTimer0
  1396 ;;		_reverse_after_read
  1397 ;;		_reverse_one_square
  1398 ;;		_sendStringSerial4
  1399 ;;		_sprintf
  1400 ;;		_stop
  1401 ;;		_turn_left_135
  1402 ;;		_turn_left_90
  1403 ;;		_turn_right_135
  1404 ;;		_turn_right_90
  1405 ;; This function is called by:
  1406 ;;		Startup code after reset
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text0
  1411   004510                     __ptext0:
  1412                           	callstack 0
  1413   004510                     _main:
  1414                           	callstack 24
  1415   004510                     
  1416                           ;main.c: 25:     Timer0_init();
  1417   004510  ECE8  F03A         	call	_Timer0_init	;wreg free
  1418                           
  1419                           ;main.c: 26:     ADC_init();
  1420   004514  EC16  F03B         	call	_ADC_init	;wreg free
  1421   004518                     
  1422                           ;main.c: 27:     Interrupts_init();
  1423   004518  EC41  F03B         	call	_Interrupts_init	;wreg free
  1424   00451C                     
  1425                           ;main.c: 28:     I2C_2_Master_Init();
  1426   00451C  EC9C  F03A         	call	_I2C_2_Master_Init	;wreg free
  1427   004520                     
  1428                           ;main.c: 29:     color_click_init();
  1429   004520  EC8A  F039         	call	_color_click_init	;wreg free
  1430   004524                     
  1431                           ;main.c: 30:     initDCmotorsPWM(99);
  1432   004524  0E00               	movlw	0
  1433   004526  6E03               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1434   004528  0E63               	movlw	99
  1435   00452A  6E02               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1436   00452C  EC95  F037         	call	_initDCmotorsPWM	;wreg free
  1437   004530                     
  1438                           ;main.c: 31:     initUSART4();
  1439   004530  ECF8  F03A         	call	_initUSART4	;wreg free
  1440   004534                     
  1441                           ;main.c: 34:     color_click_toggleLED();
  1442   004534  ECB7  F038         	call	_color_click_toggleLED	;wreg free
  1443   004538                     
  1444                           ;main.c: 37:     LATHbits.LATH3=1;
  1445   004538  8680               	bsf	128,3,c	;volatile
  1446   00453A                     
  1447                           ;main.c: 38:     TRISHbits.TRISH3=0;
  1448   00453A  9688               	bcf	136,3,c	;volatile
  1449   00453C                     
  1450                           ;main.c: 41:     TRISFbits.TRISF2=1;
  1451   00453C  8486               	bsf	134,2,c	;volatile
  1452   00453E                     
  1453                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1454   00453E  010E               	movlb	14	; () banked
  1455   004540  95B4               	bcf	180,2,b	;volatile
  1456   004542                     
  1457                           ; BSR set to: 14
  1458                           ;main.c: 48:     motorL.power=0;
  1459   004542  0E00               	movlw	0
  1460   004544  0102               	movlb	2	; () banked
  1461   004546  6FAE               	movwf	main@motorL& (0+255),b
  1462   004548                     
  1463                           ; BSR set to: 2
  1464                           ;main.c: 49:     motorL.direction=1;
  1465   004548  0E01               	movlw	1
  1466   00454A  6FAF               	movwf	(main@motorL+1)& (0+255),b
  1467   00454C                     
  1468                           ; BSR set to: 2
  1469                           ;main.c: 50:     motorL.brakemode=1;
  1470   00454C  0E01               	movlw	1
  1471   00454E  6FB0               	movwf	(main@motorL+2)& (0+255),b
  1472   004550                     
  1473                           ; BSR set to: 2
  1474                           ;main.c: 51:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1475   004550  0EAA               	movlw	170
  1476   004552  6FB3               	movwf	(main@motorL+5)& (0+255),b
  1477   004554  0E0F               	movlw	15
  1478   004556  6FB4               	movwf	(main@motorL+6)& (0+255),b
  1479   004558                     
  1480                           ; BSR set to: 2
  1481                           ;main.c: 52:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1482   004558  0EA6               	movlw	166
  1483   00455A  6FB5               	movwf	(main@motorL+7)& (0+255),b
  1484   00455C  0E0F               	movlw	15
  1485   00455E  6FB6               	movwf	(main@motorL+8)& (0+255),b
  1486   004560                     
  1487                           ; BSR set to: 2
  1488                           ;main.c: 53:     motorL.PWMperiod=PWMcycle;
  1489   004560  0E00               	movlw	0
  1490   004562  6FB2               	movwf	(main@motorL+4)& (0+255),b
  1491   004564  0E63               	movlw	99
  1492   004566  6FB1               	movwf	(main@motorL+3)& (0+255),b
  1493   004568                     
  1494                           ; BSR set to: 2
  1495                           ;main.c: 55:     motorR.power=0;
  1496   004568  0E00               	movlw	0
  1497   00456A  6FB7               	movwf	main@motorR& (0+255),b
  1498   00456C                     
  1499                           ; BSR set to: 2
  1500                           ;main.c: 56:     motorR.direction=1;
  1501   00456C  0E01               	movlw	1
  1502   00456E  6FB8               	movwf	(main@motorR+1)& (0+255),b
  1503   004570                     
  1504                           ; BSR set to: 2
  1505                           ;main.c: 57:     motorR.brakemode=1;
  1506   004570  0E01               	movlw	1
  1507   004572  6FB9               	movwf	(main@motorR+2)& (0+255),b
  1508   004574                     
  1509                           ; BSR set to: 2
  1510                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1511   004574  0E25               	movlw	37
  1512   004576  6FBC               	movwf	(main@motorR+5)& (0+255),b
  1513   004578  0E0F               	movlw	15
  1514   00457A  6FBD               	movwf	(main@motorR+6)& (0+255),b
  1515   00457C                     
  1516                           ; BSR set to: 2
  1517                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1518   00457C  0E21               	movlw	33
  1519   00457E  6FBE               	movwf	(main@motorR+7)& (0+255),b
  1520   004580  0E0F               	movlw	15
  1521   004582  6FBF               	movwf	(main@motorR+8)& (0+255),b
  1522   004584                     
  1523                           ; BSR set to: 2
  1524                           ;main.c: 60:     motorR.PWMperiod=PWMcycle;
  1525   004584  0E00               	movlw	0
  1526   004586  6FBB               	movwf	(main@motorR+4)& (0+255),b
  1527   004588  0E63               	movlw	99
  1528   00458A  6FBA               	movwf	(main@motorR+3)& (0+255),b
  1529   00458C                     
  1530                           ; BSR set to: 2
  1531                           ;main.c: 63:     struct DC_motor *pmL= &motorL;
  1532   00458C  0EAE               	movlw	low main@motorL
  1533   00458E  6FC2               	movwf	main@pmL& (0+255),b
  1534   004590  0E02               	movlw	high main@motorL
  1535   004592  6FC3               	movwf	(main@pmL+1)& (0+255),b
  1536   004594                     
  1537                           ; BSR set to: 2
  1538                           ;main.c: 64:     struct DC_motor *pmR= &motorR;
  1539   004594  0EB7               	movlw	low main@motorR
  1540   004596  6FC4               	movwf	main@pmR& (0+255),b
  1541   004598  0E02               	movlw	high main@motorR
  1542   00459A  6FC5               	movwf	(main@pmR+1)& (0+255),b
  1543   00459C                     
  1544                           ; BSR set to: 2
  1545                           ;main.c: 67:     char clear_val[20];;main.c: 68:     char red_val[20];;main.c: 69:     c
      +                          har green_val[20];;main.c: 70:     char blue_val[20];;main.c: 71:     char *pclear_val;;
      +                          main.c: 72:     char *pred_val;;main.c: 73:     char *pblue_val;;main.c: 74:     char *p
      +                          green_val;;main.c: 75:     pclear_val = &clear_val[0];
  1546   00459C  0E3C               	movlw	low main@clear_val
  1547   00459E  6FA0               	movwf	main@pclear_val& (0+255),b
  1548   0045A0  0E02               	movlw	high main@clear_val
  1549   0045A2  6FA1               	movwf	(main@pclear_val+1)& (0+255),b
  1550   0045A4                     
  1551                           ; BSR set to: 2
  1552                           ;main.c: 80:     unsigned int lum;;main.c: 81:     unsigned int lum_threshold;;main.c: 8
      +                          2:     unsigned int redm, greenm, bluem;;main.c: 83:     char action;;main.c: 84:     _B
      +                          ool going_forward = 0;
  1553   0045A4  0E00               	movlw	0
  1554   0045A6  6FAA               	movwf	main@going_forward& (0+255),b
  1555   0045A8                     
  1556                           ; BSR set to: 2
  1557                           ;main.c: 85:     unsigned int previously_measured_time, measured_time;;main.c: 86:     i
      +                          nt action_to_do;;main.c: 87:     unsigned int timings[20];;main.c: 88:     int actions[2
      +                          0];;main.c: 89:     int actions_completed = 0;
  1558   0045A8  0E00               	movlw	0
  1559   0045AA  6FAD               	movwf	(main@actions_completed+1)& (0+255),b
  1560   0045AC  0E00               	movlw	0
  1561   0045AE  6FAC               	movwf	main@actions_completed& (0+255),b
  1562   0045B0                     
  1563                           ; BSR set to: 2
  1564                           ;main.c: 102:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1565   0045B0  0EA3               	movlw	163
  1566   0045B2  0100               	movlb	0	; () banked
  1567   0045B4  6FD2               	movwf	(??_main+1)& (0+255),b
  1568   0045B6  0E57               	movlw	87
  1569   0045B8  6FD1               	movwf	??_main& (0+255),b
  1570   0045BA  0E02               	movlw	2
  1571   0045BC                     u8107:
  1572   0045BC  2EE8               	decfsz	wreg,f,c
  1573   0045BE  D7FE               	bra	u8107
  1574   0045C0  2FD1               	decfsz	??_main& (0+255),f,b
  1575   0045C2  D7FC               	bra	u8107
  1576   0045C4  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1577   0045C6  D7FA               	bra	u8107
  1578   0045C8  0000               	nop	
  1579   0045CA                     
  1580                           ;main.c: 104:     lum = color_read_Clear();
  1581   0045CA  EC62  F039         	call	_color_read_Clear	;wreg free
  1582   0045CE  C006  F2A8         	movff	?_color_read_Clear,main@lum
  1583   0045D2  C007  F2A9         	movff	?_color_read_Clear+1,main@lum+1
  1584   0045D6                     
  1585                           ;main.c: 105:     lum_threshold = lum + 10;
  1586   0045D6  0E0A               	movlw	10
  1587   0045D8  0102               	movlb	2	; () banked
  1588   0045DA  25A8               	addwf	main@lum& (0+255),w,b
  1589   0045DC  6FA2               	movwf	main@lum_threshold& (0+255),b
  1590   0045DE  0E00               	movlw	0
  1591   0045E0  21A9               	addwfc	(main@lum+1)& (0+255),w,b
  1592   0045E2  6FA3               	movwf	(main@lum_threshold+1)& (0+255),b
  1593   0045E4                     
  1594                           ; BSR set to: 2
  1595                           ;main.c: 107:     unsigned int lost_detection = 0;
  1596   0045E4  0E00               	movlw	0
  1597   0045E6  6FA5               	movwf	(main@lost_detection+1)& (0+255),b
  1598   0045E8  0E00               	movlw	0
  1599   0045EA  6FA4               	movwf	main@lost_detection& (0+255),b
  1600   0045EC                     l7668:
  1601                           
  1602                           ;main.c: 134:         if(!going_forward){
  1603   0045EC  0102               	movlb	2	; () banked
  1604   0045EE  51AA               	movf	main@going_forward& (0+255),w,b
  1605   0045F0  A4D8               	btfss	status,2,c
  1606   0045F2  EFFD  F022         	goto	u7831
  1607   0045F6  EFFF  F022         	goto	u7830
  1608   0045FA                     u7831:
  1609   0045FA  EF0E  F023         	goto	l7676
  1610   0045FE                     u7830:
  1611   0045FE                     
  1612                           ; BSR set to: 2
  1613                           ;main.c: 137:             resetTimer0();
  1614   0045FE  EC47  F03B         	call	_resetTimer0	;wreg free
  1615   004602                     
  1616                           ;main.c: 138:             fullSpeedAhead(pmL, pmR);
  1617   004602  C2C2  F015         	movff	main@pmL,fullSpeedAhead@mL
  1618   004606  C2C3  F016         	movff	main@pmL+1,fullSpeedAhead@mL+1
  1619   00460A  C2C4  F017         	movff	main@pmR,fullSpeedAhead@mR
  1620   00460E  C2C5  F018         	movff	main@pmR+1,fullSpeedAhead@mR+1
  1621   004612  EC82  F036         	call	_fullSpeedAhead	;wreg free
  1622   004616                     
  1623                           ;main.c: 139:             going_forward = 1;
  1624   004616  0E01               	movlw	1
  1625   004618  0102               	movlb	2	; () banked
  1626   00461A  6FAA               	movwf	main@going_forward& (0+255),b
  1627   00461C                     l7676:
  1628                           
  1629                           ; BSR set to: 2
  1630                           ;main.c: 142:         lum = color_read_Clear();
  1631   00461C  EC62  F039         	call	_color_read_Clear	;wreg free
  1632   004620  C006  F2A8         	movff	?_color_read_Clear,main@lum
  1633   004624  C007  F2A9         	movff	?_color_read_Clear+1,main@lum+1
  1634   004628                     
  1635                           ;main.c: 144:         if (lum > lum_threshold){
  1636   004628  0102               	movlb	2	; () banked
  1637   00462A  51A8               	movf	main@lum& (0+255),w,b
  1638   00462C  5DA2               	subwf	main@lum_threshold& (0+255),w,b
  1639   00462E  51A9               	movf	(main@lum+1)& (0+255),w,b
  1640   004630  59A3               	subwfb	(main@lum_threshold+1)& (0+255),w,b
  1641   004632  B0D8               	btfsc	status,0,c
  1642   004634  EF1E  F023         	goto	u7841
  1643   004638  EF20  F023         	goto	u7840
  1644   00463C                     u7841:
  1645   00463C  EFF6  F022         	goto	l7668
  1646   004640                     u7840:
  1647   004640                     
  1648                           ; BSR set to: 2
  1649                           ;main.c: 146:             measured_time = get16bitTMR0val();
  1650   004640  EC07  F03B         	call	_get16bitTMR0val	;wreg free
  1651   004644  C002  F2A6         	movff	?_get16bitTMR0val,main@measured_time
  1652   004648  C003  F2A7         	movff	?_get16bitTMR0val+1,main@measured_time+1
  1653   00464C                     
  1654                           ;main.c: 147:             stop(pmL, pmR);
  1655   00464C  C2C2  F015         	movff	main@pmL,stop@mL
  1656   004650  C2C3  F016         	movff	main@pmL+1,stop@mL+1
  1657   004654  C2C4  F017         	movff	main@pmR,stop@mR
  1658   004658  C2C5  F018         	movff	main@pmR+1,stop@mR+1
  1659   00465C  ECE6  F037         	call	_stop	;wreg free
  1660   004660                     
  1661                           ;main.c: 148:             _delay((unsigned long)((250)*(64000000/4000.0)));
  1662   004660  0E15               	movlw	21
  1663   004662  0100               	movlb	0	; () banked
  1664   004664  6FD2               	movwf	(??_main+1)& (0+255),b
  1665   004666  0E4B               	movlw	75
  1666   004668  6FD1               	movwf	??_main& (0+255),b
  1667   00466A  0EBE               	movlw	190
  1668   00466C                     u8117:
  1669   00466C  2EE8               	decfsz	wreg,f,c
  1670   00466E  D7FE               	bra	u8117
  1671   004670  2FD1               	decfsz	??_main& (0+255),f,b
  1672   004672  D7FC               	bra	u8117
  1673   004674  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1674   004676  D7FA               	bra	u8117
  1675   004678  0000               	nop	
  1676   00467A                     l7686:
  1677                           
  1678                           ;main.c: 152:                 lum = color_read_Clear();
  1679   00467A  EC62  F039         	call	_color_read_Clear	;wreg free
  1680   00467E  C006  F2A8         	movff	?_color_read_Clear,main@lum
  1681   004682  C007  F2A9         	movff	?_color_read_Clear+1,main@lum+1
  1682   004686                     
  1683                           ;main.c: 153:                 if(lum < 65){
  1684   004686  0102               	movlb	2	; () banked
  1685   004688  51A9               	movf	(main@lum+1)& (0+255),w,b
  1686   00468A  E107               	bnz	u7851
  1687   00468C  0E41               	movlw	65
  1688   00468E  5DA8               	subwf	main@lum& (0+255),w,b
  1689   004690  B0D8               	btfsc	status,0,c
  1690   004692  EF4D  F023         	goto	u7851
  1691   004696  EF4F  F023         	goto	u7850
  1692   00469A                     u7851:
  1693   00469A  EF79  F023         	goto	l7700
  1694   00469E                     u7850:
  1695   00469E                     
  1696                           ; BSR set to: 2
  1697                           ;main.c: 154:                     inch_forward(pmL, pmR);
  1698   00469E  C2C2  F019         	movff	main@pmL,inch_forward@mL
  1699   0046A2  C2C3  F01A         	movff	main@pmL+1,inch_forward@mL+1
  1700   0046A6  C2C4  F01B         	movff	main@pmR,inch_forward@mR
  1701   0046AA  C2C5  F01C         	movff	main@pmR+1,inch_forward@mR+1
  1702   0046AE  ECAB  F035         	call	_inch_forward	;wreg free
  1703   0046B2                     
  1704                           ;main.c: 155:                     lost_detection += 1;
  1705   0046B2  0102               	movlb	2	; () banked
  1706   0046B4  4BA4               	infsnz	main@lost_detection& (0+255),f,b
  1707   0046B6  2BA5               	incf	(main@lost_detection+1)& (0+255),f,b
  1708   0046B8                     
  1709                           ; BSR set to: 2
  1710                           ;main.c: 156:                     _delay((unsigned long)((100)*(64000000/4000.0)));
  1711   0046B8  0E09               	movlw	9
  1712   0046BA  0100               	movlb	0	; () banked
  1713   0046BC  6FD2               	movwf	(??_main+1)& (0+255),b
  1714   0046BE  0E1E               	movlw	30
  1715   0046C0  6FD1               	movwf	??_main& (0+255),b
  1716   0046C2  0EE4               	movlw	228
  1717   0046C4                     u8127:
  1718   0046C4  2EE8               	decfsz	wreg,f,c
  1719   0046C6  D7FE               	bra	u8127
  1720   0046C8  2FD1               	decfsz	??_main& (0+255),f,b
  1721   0046CA  D7FC               	bra	u8127
  1722   0046CC  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1723   0046CE  D7FA               	bra	u8127
  1724   0046D0  0000               	nop	
  1725   0046D2                     
  1726                           ;main.c: 163:                 if(lost_detection > 15){
  1727   0046D2  0102               	movlb	2	; () banked
  1728   0046D4  51A5               	movf	(main@lost_detection+1)& (0+255),w,b
  1729   0046D6  E109               	bnz	u7860
  1730   0046D8  0E10               	movlw	16
  1731   0046DA  5DA4               	subwf	main@lost_detection& (0+255),w,b
  1732   0046DC  A0D8               	btfss	status,0,c
  1733   0046DE  EF73  F023         	goto	u7861
  1734   0046E2  EF75  F023         	goto	u7860
  1735   0046E6                     u7861:
  1736   0046E6  EF3D  F023         	goto	l7686
  1737   0046EA                     u7860:
  1738   0046EA                     
  1739                           ; BSR set to: 2
  1740                           ;main.c: 164:                     action_to_do = 7;
  1741   0046EA  0E00               	movlw	0
  1742   0046EC  6FC1               	movwf	(main@action_to_do+1)& (0+255),b
  1743   0046EE  0E07               	movlw	7
  1744   0046F0  6FC0               	movwf	main@action_to_do& (0+255),b
  1745   0046F2                     l7700:
  1746                           
  1747                           ; BSR set to: 2
  1748                           ;main.c: 169:             going_forward = 0;
  1749   0046F2  0E00               	movlw	0
  1750   0046F4  6FAA               	movwf	main@going_forward& (0+255),b
  1751   0046F6                     
  1752                           ; BSR set to: 2
  1753                           ;main.c: 170:             timings[actions_completed] = measured_time;
  1754   0046F6  90D8               	bcf	status,0,c
  1755   0046F8  35AC               	rlcf	main@actions_completed& (0+255),w,b
  1756   0046FA  6ED9               	movwf	fsr2l,c
  1757   0046FC  35AD               	rlcf	(main@actions_completed+1)& (0+255),w,b
  1758   0046FE  6EDA               	movwf	fsr2h,c
  1759   004700  0E78               	movlw	low main@timings
  1760   004702  26D9               	addwf	fsr2l,f,c
  1761   004704  0E02               	movlw	high main@timings
  1762   004706  22DA               	addwfc	fsr2h,f,c
  1763   004708  C2A6  FFDE         	movff	main@measured_time,postinc2
  1764   00470C  C2A7  FFDD         	movff	main@measured_time+1,postdec2
  1765   004710                     
  1766                           ; BSR set to: 2
  1767                           ;main.c: 173:             if(action_to_do != 7){
  1768   004710  0E07               	movlw	7
  1769   004712  19C0               	xorwf	main@action_to_do& (0+255),w,b
  1770   004714  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1771   004716  B4D8               	btfsc	status,2,c
  1772   004718  EF90  F023         	goto	u7871
  1773   00471C  EF92  F023         	goto	u7870
  1774   004720                     u7871:
  1775   004720  EF9E  F023         	goto	l7710
  1776   004724                     u7870:
  1777   004724                     
  1778                           ; BSR set to: 2
  1779                           ;main.c: 174:                 action_to_do = decide_action();
  1780   004724  EC81  F019         	call	_decide_action	;wreg free
  1781   004728  0100               	movlb	0	; () banked
  1782   00472A  6FD1               	movwf	??_main& (0+255),b
  1783   00472C  51D1               	movf	??_main& (0+255),w,b
  1784   00472E  0102               	movlb	2	; () banked
  1785   004730  6FC0               	movwf	main@action_to_do& (0+255),b
  1786   004732  6BC1               	clrf	(main@action_to_do+1)& (0+255),b
  1787   004734                     
  1788                           ; BSR set to: 2
  1789                           ;main.c: 175:                 lost_detection = 0;
  1790   004734  0E00               	movlw	0
  1791   004736  6FA5               	movwf	(main@lost_detection+1)& (0+255),b
  1792   004738  0E00               	movlw	0
  1793   00473A  6FA4               	movwf	main@lost_detection& (0+255),b
  1794   00473C                     l7710:
  1795                           
  1796                           ; BSR set to: 2
  1797                           ;main.c: 178:             actions[actions_completed] = action_to_do;
  1798   00473C  90D8               	bcf	status,0,c
  1799   00473E  35AC               	rlcf	main@actions_completed& (0+255),w,b
  1800   004740  6ED9               	movwf	fsr2l,c
  1801   004742  35AD               	rlcf	(main@actions_completed+1)& (0+255),w,b
  1802   004744  6EDA               	movwf	fsr2h,c
  1803   004746  0E50               	movlw	low main@actions
  1804   004748  26D9               	addwf	fsr2l,f,c
  1805   00474A  0E02               	movlw	high main@actions
  1806   00474C  22DA               	addwfc	fsr2h,f,c
  1807   00474E  C2C0  FFDE         	movff	main@action_to_do,postinc2
  1808   004752  C2C1  FFDD         	movff	main@action_to_do+1,postdec2
  1809   004756                     
  1810                           ; BSR set to: 2
  1811                           ;main.c: 179:             actions_completed += 1;
  1812   004756  4BAC               	infsnz	main@actions_completed& (0+255),f,b
  1813   004758  2BAD               	incf	(main@actions_completed+1)& (0+255),f,b
  1814   00475A                     
  1815                           ; BSR set to: 2
  1816                           ;main.c: 182:             if(action_to_do == 0){
  1817   00475A  51C0               	movf	main@action_to_do& (0+255),w,b
  1818   00475C  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1819   00475E  A4D8               	btfss	status,2,c
  1820   004760  EFB4  F023         	goto	u7881
  1821   004764  EFB6  F023         	goto	u7880
  1822   004768                     u7881:
  1823   004768  EFCC  F023         	goto	l7718
  1824   00476C                     u7880:
  1825   00476C                     
  1826                           ; BSR set to: 2
  1827                           ;main.c: 183:                 reverse_after_read(pmL, pmR);
  1828   00476C  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  1829   004770  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1830   004774  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  1831   004778  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1832   00477C  EC4F  F032         	call	_reverse_after_read	;wreg free
  1833                           
  1834                           ;main.c: 184:                 turn_right_90(pmL, pmR);
  1835   004780  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  1836   004784  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1837   004788  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  1838   00478C  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1839   004790  EC4C  F034         	call	_turn_right_90	;wreg free
  1840                           
  1841                           ;main.c: 185:             }
  1842   004794  EFED  F024         	goto	l7754
  1843   004798                     l7718:
  1844                           
  1845                           ; BSR set to: 2
  1846   004798  05C0               	decf	main@action_to_do& (0+255),w,b
  1847   00479A  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1848   00479C  A4D8               	btfss	status,2,c
  1849   00479E  EFD3  F023         	goto	u7891
  1850   0047A2  EFD5  F023         	goto	u7890
  1851   0047A6                     u7891:
  1852   0047A6  EFEB  F023         	goto	l7722
  1853   0047AA                     u7890:
  1854   0047AA                     
  1855                           ; BSR set to: 2
  1856                           ;main.c: 187:                 reverse_after_read(pmL, pmR);
  1857   0047AA  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  1858   0047AE  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1859   0047B2  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  1860   0047B6  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1861   0047BA  EC4F  F032         	call	_reverse_after_read	;wreg free
  1862                           
  1863                           ;main.c: 188:                 turn_left_90(pmL, pmR);
  1864   0047BE  C2C2  F019         	movff	main@pmL,turn_left_90@mL
  1865   0047C2  C2C3  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  1866   0047C6  C2C4  F01B         	movff	main@pmR,turn_left_90@mR
  1867   0047CA  C2C5  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  1868   0047CE  ECC1  F034         	call	_turn_left_90	;wreg free
  1869                           
  1870                           ;main.c: 189:             }
  1871   0047D2  EFED  F024         	goto	l7754
  1872   0047D6                     l7722:
  1873                           
  1874                           ; BSR set to: 2
  1875   0047D6  0E02               	movlw	2
  1876   0047D8  19C0               	xorwf	main@action_to_do& (0+255),w,b
  1877   0047DA  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1878   0047DC  A4D8               	btfss	status,2,c
  1879   0047DE  EFF3  F023         	goto	u7901
  1880   0047E2  EFF5  F023         	goto	u7900
  1881   0047E6                     u7901:
  1882   0047E6  EF22  F024         	goto	l7730
  1883   0047EA                     u7900:
  1884   0047EA                     
  1885                           ; BSR set to: 2
  1886                           ;main.c: 191:                 reverse_after_read(pmL, pmR);
  1887   0047EA  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  1888   0047EE  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1889   0047F2  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  1890   0047F6  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1891   0047FA  EC4F  F032         	call	_reverse_after_read	;wreg free
  1892                           
  1893                           ;main.c: 192:                 turn_right_90(pmL, pmR);
  1894   0047FE  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  1895   004802  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1896   004806  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  1897   00480A  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1898   00480E  EC4C  F034         	call	_turn_right_90	;wreg free
  1899   004812                     
  1900                           ;main.c: 193:                 _delay((unsigned long)((250)*(64000000/4000.0)));
  1901   004812  0E15               	movlw	21
  1902   004814  0100               	movlb	0	; () banked
  1903   004816  6FD2               	movwf	(??_main+1)& (0+255),b
  1904   004818  0E4B               	movlw	75
  1905   00481A  6FD1               	movwf	??_main& (0+255),b
  1906   00481C  0EBE               	movlw	190
  1907   00481E                     u8137:
  1908   00481E  2EE8               	decfsz	wreg,f,c
  1909   004820  D7FE               	bra	u8137
  1910   004822  2FD1               	decfsz	??_main& (0+255),f,b
  1911   004824  D7FC               	bra	u8137
  1912   004826  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1913   004828  D7FA               	bra	u8137
  1914   00482A  0000               	nop	
  1915   00482C                     
  1916                           ;main.c: 194:                 turn_right_90(pmL, pmR);
  1917   00482C  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  1918   004830  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1919   004834  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  1920   004838  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1921   00483C  EC4C  F034         	call	_turn_right_90	;wreg free
  1922                           
  1923                           ;main.c: 195:             }
  1924   004840  EFED  F024         	goto	l7754
  1925   004844                     l7730:
  1926                           
  1927                           ; BSR set to: 2
  1928   004844  0E03               	movlw	3
  1929   004846  19C0               	xorwf	main@action_to_do& (0+255),w,b
  1930   004848  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1931   00484A  A4D8               	btfss	status,2,c
  1932   00484C  EF2A  F024         	goto	u7911
  1933   004850  EF2C  F024         	goto	u7910
  1934   004854                     u7911:
  1935   004854  EF4C  F024         	goto	l7734
  1936   004858                     u7910:
  1937   004858                     
  1938                           ; BSR set to: 2
  1939                           ;main.c: 197:                 reverse_after_read(pmL, pmR);
  1940   004858  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  1941   00485C  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1942   004860  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  1943   004864  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1944   004868  EC4F  F032         	call	_reverse_after_read	;wreg free
  1945                           
  1946                           ;main.c: 198:                 reverse_one_square(pmL, pmR);
  1947   00486C  C2C2  F019         	movff	main@pmL,reverse_one_square@mL
  1948   004870  C2C3  F01A         	movff	main@pmL+1,reverse_one_square@mL+1
  1949   004874  C2C4  F01B         	movff	main@pmR,reverse_one_square@mR
  1950   004878  C2C5  F01C         	movff	main@pmR+1,reverse_one_square@mR+1
  1951   00487C  ECD2  F032         	call	_reverse_one_square	;wreg free
  1952                           
  1953                           ;main.c: 199:                 turn_right_90(pmL, pmR);
  1954   004880  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  1955   004884  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1956   004888  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  1957   00488C  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1958   004890  EC4C  F034         	call	_turn_right_90	;wreg free
  1959                           
  1960                           ;main.c: 200:             }
  1961   004894  EFED  F024         	goto	l7754
  1962   004898                     l7734:
  1963                           
  1964                           ; BSR set to: 2
  1965   004898  0E04               	movlw	4
  1966   00489A  19C0               	xorwf	main@action_to_do& (0+255),w,b
  1967   00489C  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1968   00489E  A4D8               	btfss	status,2,c
  1969   0048A0  EF54  F024         	goto	u7921
  1970   0048A4  EF56  F024         	goto	u7920
  1971   0048A8                     u7921:
  1972   0048A8  EF76  F024         	goto	l7738
  1973   0048AC                     u7920:
  1974   0048AC                     
  1975                           ; BSR set to: 2
  1976                           ;main.c: 202:                 reverse_after_read(pmL, pmR);
  1977   0048AC  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  1978   0048B0  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1979   0048B4  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  1980   0048B8  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1981   0048BC  EC4F  F032         	call	_reverse_after_read	;wreg free
  1982                           
  1983                           ;main.c: 203:                 reverse_one_square(pmL, pmR);
  1984   0048C0  C2C2  F019         	movff	main@pmL,reverse_one_square@mL
  1985   0048C4  C2C3  F01A         	movff	main@pmL+1,reverse_one_square@mL+1
  1986   0048C8  C2C4  F01B         	movff	main@pmR,reverse_one_square@mR
  1987   0048CC  C2C5  F01C         	movff	main@pmR+1,reverse_one_square@mR+1
  1988   0048D0  ECD2  F032         	call	_reverse_one_square	;wreg free
  1989                           
  1990                           ;main.c: 204:                 turn_left_90(pmL, pmR);
  1991   0048D4  C2C2  F019         	movff	main@pmL,turn_left_90@mL
  1992   0048D8  C2C3  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  1993   0048DC  C2C4  F01B         	movff	main@pmR,turn_left_90@mR
  1994   0048E0  C2C5  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  1995   0048E4  ECC1  F034         	call	_turn_left_90	;wreg free
  1996                           
  1997                           ;main.c: 205:             }
  1998   0048E8  EFED  F024         	goto	l7754
  1999   0048EC                     l7738:
  2000                           
  2001                           ; BSR set to: 2
  2002   0048EC  0E05               	movlw	5
  2003   0048EE  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2004   0048F0  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2005   0048F2  A4D8               	btfss	status,2,c
  2006   0048F4  EF7E  F024         	goto	u7931
  2007   0048F8  EF80  F024         	goto	u7930
  2008   0048FC                     u7931:
  2009   0048FC  EF96  F024         	goto	l7742
  2010   004900                     u7930:
  2011   004900                     
  2012                           ; BSR set to: 2
  2013                           ;main.c: 207:                 reverse_after_read(pmL, pmR);
  2014   004900  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  2015   004904  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2016   004908  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  2017   00490C  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2018   004910  EC4F  F032         	call	_reverse_after_read	;wreg free
  2019                           
  2020                           ;main.c: 208:                 turn_right_135(pmL, pmR);
  2021   004914  C2C2  F019         	movff	main@pmL,turn_right_135@mL
  2022   004918  C2C3  F01A         	movff	main@pmL+1,turn_right_135@mL+1
  2023   00491C  C2C4  F01B         	movff	main@pmR,turn_right_135@mR
  2024   004920  C2C5  F01C         	movff	main@pmR+1,turn_right_135@mR+1
  2025   004924  ECD6  F033         	call	_turn_right_135	;wreg free
  2026                           
  2027                           ;main.c: 209:             }
  2028   004928  EFED  F024         	goto	l7754
  2029   00492C                     l7742:
  2030                           
  2031                           ; BSR set to: 2
  2032   00492C  0E06               	movlw	6
  2033   00492E  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2034   004930  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2035   004932  A4D8               	btfss	status,2,c
  2036   004934  EF9E  F024         	goto	u7941
  2037   004938  EFA0  F024         	goto	u7940
  2038   00493C                     u7941:
  2039   00493C  EFB6  F024         	goto	l7746
  2040   004940                     u7940:
  2041   004940                     
  2042                           ; BSR set to: 2
  2043                           ;main.c: 211:                 reverse_after_read(pmL, pmR);
  2044   004940  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  2045   004944  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2046   004948  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  2047   00494C  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2048   004950  EC4F  F032         	call	_reverse_after_read	;wreg free
  2049                           
  2050                           ;main.c: 212:                 turn_left_135(pmL, pmR);
  2051   004954  C2C2  F019         	movff	main@pmL,turn_left_135@mL
  2052   004958  C2C3  F01A         	movff	main@pmL+1,turn_left_135@mL+1
  2053   00495C  C2C4  F01B         	movff	main@pmR,turn_left_135@mR
  2054   004960  C2C5  F01C         	movff	main@pmR+1,turn_left_135@mR+1
  2055   004964  EC36  F035         	call	_turn_left_135	;wreg free
  2056                           
  2057                           ;main.c: 213:             }
  2058   004968  EFED  F024         	goto	l7754
  2059   00496C                     l7746:
  2060                           
  2061                           ; BSR set to: 2
  2062   00496C  0E07               	movlw	7
  2063   00496E  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2064   004970  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2065   004972  A4D8               	btfss	status,2,c
  2066   004974  EFBE  F024         	goto	u7951
  2067   004978  EFC0  F024         	goto	u7950
  2068   00497C                     u7951:
  2069   00497C  EFED  F024         	goto	l369
  2070   004980                     u7950:
  2071   004980                     
  2072                           ; BSR set to: 2
  2073                           ;main.c: 217:                 reverse_after_read(pmL, pmR);
  2074   004980  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  2075   004984  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2076   004988  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  2077   00498C  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2078   004990  EC4F  F032         	call	_reverse_after_read	;wreg free
  2079                           
  2080                           ;main.c: 218:                 turn_right_90(pmL, pmR);
  2081   004994  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  2082   004998  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2083   00499C  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  2084   0049A0  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2085   0049A4  EC4C  F034         	call	_turn_right_90	;wreg free
  2086   0049A8                     
  2087                           ;main.c: 219:                 _delay((unsigned long)((250)*(64000000/4000.0)));
  2088   0049A8  0E15               	movlw	21
  2089   0049AA  0100               	movlb	0	; () banked
  2090   0049AC  6FD2               	movwf	(??_main+1)& (0+255),b
  2091   0049AE  0E4B               	movlw	75
  2092   0049B0  6FD1               	movwf	??_main& (0+255),b
  2093   0049B2  0EBE               	movlw	190
  2094   0049B4                     u8147:
  2095   0049B4  2EE8               	decfsz	wreg,f,c
  2096   0049B6  D7FE               	bra	u8147
  2097   0049B8  2FD1               	decfsz	??_main& (0+255),f,b
  2098   0049BA  D7FC               	bra	u8147
  2099   0049BC  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  2100   0049BE  D7FA               	bra	u8147
  2101   0049C0  0000               	nop	
  2102   0049C2                     
  2103                           ;main.c: 220:                 turn_right_90(pmL, pmR);
  2104   0049C2  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  2105   0049C6  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2106   0049CA  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  2107   0049CE  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2108   0049D2  EC4C  F034         	call	_turn_right_90	;wreg free
  2109                           
  2110                           ;main.c: 221:                 break;
  2111   0049D6  EF05  F025         	goto	l7756
  2112   0049DA                     l369:
  2113   0049DA                     l7754:
  2114                           
  2115                           ;main.c: 223:             _delay((unsigned long)((250)*(64000000/4000.0)));
  2116   0049DA  0E15               	movlw	21
  2117   0049DC  0100               	movlb	0	; () banked
  2118   0049DE  6FD2               	movwf	(??_main+1)& (0+255),b
  2119   0049E0  0E4B               	movlw	75
  2120   0049E2  6FD1               	movwf	??_main& (0+255),b
  2121   0049E4  0EBE               	movlw	190
  2122   0049E6                     u8157:
  2123   0049E6  2EE8               	decfsz	wreg,f,c
  2124   0049E8  D7FE               	bra	u8157
  2125   0049EA  2FD1               	decfsz	??_main& (0+255),f,b
  2126   0049EC  D7FC               	bra	u8157
  2127   0049EE  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  2128   0049F0  D7FA               	bra	u8157
  2129   0049F2  0000               	nop	
  2130                           
  2131                           ;main.c: 224:         _delay((unsigned long)((5)*(64000000/4000.0)));
  2132   0049F4  0E68               	movlw	104
  2133   0049F6  0100               	movlb	0	; () banked
  2134   0049F8  6FD1               	movwf	??_main& (0+255),b
  2135   0049FA  0EE4               	movlw	228
  2136   0049FC                     u8167:
  2137   0049FC  2EE8               	decfsz	wreg,f,c
  2138   0049FE  D7FE               	bra	u8167
  2139   004A00  2FD1               	decfsz	??_main& (0+255),f,b
  2140   004A02  D7FC               	bra	u8167
  2141   004A04  0000               	nop	
  2142   004A06  EFF6  F022         	goto	l7668
  2143   004A0A                     l7756:
  2144                           
  2145                           ;main.c: 232:     actions_completed -= 1;
  2146   004A0A  0102               	movlb	2	; () banked
  2147   004A0C  07AC               	decf	main@actions_completed& (0+255),f,b
  2148   004A0E  A0D8               	btfss	status,0,c
  2149   004A10  07AD               	decf	(main@actions_completed+1)& (0+255),f,b
  2150   004A12                     
  2151                           ; BSR set to: 2
  2152                           ;main.c: 235:     going_forward = 0;
  2153   004A12  0E00               	movlw	0
  2154   004A14  6FAA               	movwf	main@going_forward& (0+255),b
  2155   004A16                     
  2156                           ; BSR set to: 2
  2157                           ;main.c: 238:     for(char i = 0; i < 20; i +=1){
  2158   004A16  0E00               	movlw	0
  2159   004A18  6FAB               	movwf	main@i& (0+255),b
  2160   004A1A                     l7762:
  2161                           
  2162                           ; BSR set to: 2
  2163   004A1A  0E13               	movlw	19
  2164   004A1C  65AB               	cpfsgt	main@i& (0+255),b
  2165   004A1E  EF13  F025         	goto	u7961
  2166   004A22  EF15  F025         	goto	u7960
  2167   004A26                     u7961:
  2168   004A26  EF17  F025         	goto	l7766
  2169   004A2A                     u7960:
  2170   004A2A  EF53  F026         	goto	l7836
  2171   004A2E                     l7766:
  2172                           
  2173                           ; BSR set to: 2
  2174                           ;main.c: 239:         timings[i] -= 125;
  2175   004A2E  51AB               	movf	main@i& (0+255),w,b
  2176   004A30  0D02               	mullw	2
  2177   004A32  0E78               	movlw	low main@timings
  2178   004A34  24F3               	addwf	243,w,c
  2179   004A36  6ED9               	movwf	fsr2l,c
  2180   004A38  0E02               	movlw	high main@timings
  2181   004A3A  20F4               	addwfc	prodh,w,c
  2182   004A3C  6EDA               	movwf	fsr2h,c
  2183   004A3E  0E7D               	movlw	125
  2184   004A40  5EDE               	subwf	postinc2,f,c
  2185   004A42  0E00               	movlw	0
  2186   004A44  5ADD               	subwfb	postdec2,f,c
  2187   004A46                     
  2188                           ; BSR set to: 2
  2189                           ;main.c: 240:         if(i > 7){
  2190   004A46  0E07               	movlw	7
  2191   004A48  65AB               	cpfsgt	main@i& (0+255),b
  2192   004A4A  EF29  F025         	goto	u7971
  2193   004A4E  EF2B  F025         	goto	u7970
  2194   004A52                     u7971:
  2195   004A52  EF37  F025         	goto	l7772
  2196   004A56                     u7970:
  2197   004A56                     
  2198                           ; BSR set to: 2
  2199                           ;main.c: 241:               timings[i] -= 550;
  2200   004A56  51AB               	movf	main@i& (0+255),w,b
  2201   004A58  0D02               	mullw	2
  2202   004A5A  0E78               	movlw	low main@timings
  2203   004A5C  24F3               	addwf	243,w,c
  2204   004A5E  6ED9               	movwf	fsr2l,c
  2205   004A60  0E02               	movlw	high main@timings
  2206   004A62  20F4               	addwfc	prodh,w,c
  2207   004A64  6EDA               	movwf	fsr2h,c
  2208   004A66  0E26               	movlw	38
  2209   004A68  5EDE               	subwf	postinc2,f,c
  2210   004A6A  0E02               	movlw	2
  2211   004A6C  5ADD               	subwfb	postdec2,f,c
  2212   004A6E                     l7772:
  2213                           
  2214                           ; BSR set to: 2
  2215                           ;main.c: 243:     }
  2216   004A6E  2BAB               	incf	main@i& (0+255),f,b
  2217   004A70  EF0D  F025         	goto	l7762
  2218   004A74                     l7776:
  2219                           
  2220                           ; BSR set to: 2
  2221                           ;main.c: 248:         if(!going_forward){
  2222   004A74  51AA               	movf	main@going_forward& (0+255),w,b
  2223   004A76  A4D8               	btfss	status,2,c
  2224   004A78  EF40  F025         	goto	u7981
  2225   004A7C  EF42  F025         	goto	u7980
  2226   004A80                     u7981:
  2227   004A80  EF51  F025         	goto	l7784
  2228   004A84                     u7980:
  2229   004A84                     
  2230                           ; BSR set to: 2
  2231                           ;main.c: 249:             resetTimer0();
  2232   004A84  EC47  F03B         	call	_resetTimer0	;wreg free
  2233   004A88                     
  2234                           ;main.c: 250:             fullSpeedAhead(pmL, pmR);
  2235   004A88  C2C2  F015         	movff	main@pmL,fullSpeedAhead@mL
  2236   004A8C  C2C3  F016         	movff	main@pmL+1,fullSpeedAhead@mL+1
  2237   004A90  C2C4  F017         	movff	main@pmR,fullSpeedAhead@mR
  2238   004A94  C2C5  F018         	movff	main@pmR+1,fullSpeedAhead@mR+1
  2239   004A98  EC82  F036         	call	_fullSpeedAhead	;wreg free
  2240   004A9C                     
  2241                           ;main.c: 251:             going_forward = 1;
  2242   004A9C  0E01               	movlw	1
  2243   004A9E  0102               	movlb	2	; () banked
  2244   004AA0  6FAA               	movwf	main@going_forward& (0+255),b
  2245   004AA2                     l7784:
  2246                           
  2247                           ; BSR set to: 2
  2248                           ;main.c: 254:         measured_time = get16bitTMR0val();
  2249   004AA2  EC07  F03B         	call	_get16bitTMR0val	;wreg free
  2250   004AA6  C002  F2A6         	movff	?_get16bitTMR0val,main@measured_time
  2251   004AAA  C003  F2A7         	movff	?_get16bitTMR0val+1,main@measured_time+1
  2252   004AAE                     
  2253                           ;main.c: 255:         if(measured_time > timings[actions_completed]){
  2254   004AAE  90D8               	bcf	status,0,c
  2255   004AB0  0102               	movlb	2	; () banked
  2256   004AB2  35AC               	rlcf	main@actions_completed& (0+255),w,b
  2257   004AB4  6ED9               	movwf	fsr2l,c
  2258   004AB6  35AD               	rlcf	(main@actions_completed+1)& (0+255),w,b
  2259   004AB8  6EDA               	movwf	fsr2h,c
  2260   004ABA  0E78               	movlw	low main@timings
  2261   004ABC  26D9               	addwf	fsr2l,f,c
  2262   004ABE  0E02               	movlw	high main@timings
  2263   004AC0  22DA               	addwfc	fsr2h,f,c
  2264   004AC2  51A6               	movf	main@measured_time& (0+255),w,b
  2265   004AC4  5CDE               	subwf	postinc2,w,c
  2266   004AC6  51A7               	movf	(main@measured_time+1)& (0+255),w,b
  2267   004AC8  58DE               	subwfb	postinc2,w,c
  2268   004ACA  B0D8               	btfsc	status,0,c
  2269   004ACC  EF6A  F025         	goto	u7991
  2270   004AD0  EF6C  F025         	goto	u7990
  2271   004AD4                     u7991:
  2272   004AD4  EF4A  F026         	goto	l7834
  2273   004AD8                     u7990:
  2274   004AD8                     
  2275                           ; BSR set to: 2
  2276                           ;main.c: 256:             stop(pmL, pmR);
  2277   004AD8  C2C2  F015         	movff	main@pmL,stop@mL
  2278   004ADC  C2C3  F016         	movff	main@pmL+1,stop@mL+1
  2279   004AE0  C2C4  F017         	movff	main@pmR,stop@mR
  2280   004AE4  C2C5  F018         	movff	main@pmR+1,stop@mR+1
  2281   004AE8  ECE6  F037         	call	_stop	;wreg free
  2282   004AEC                     
  2283                           ;main.c: 257:             going_forward = 0;
  2284   004AEC  0E00               	movlw	0
  2285   004AEE  0102               	movlb	2	; () banked
  2286   004AF0  6FAA               	movwf	main@going_forward& (0+255),b
  2287   004AF2                     
  2288                           ; BSR set to: 2
  2289                           ;main.c: 258:             action_to_do = invert_action(actions[actions_completed - 1]);
  2290   004AF2  C2AC  F0D1         	movff	main@actions_completed,??_main
  2291   004AF6  C2AD  F0D2         	movff	main@actions_completed+1,??_main+1
  2292   004AFA  90D8               	bcf	status,0,c
  2293   004AFC  0100               	movlb	0	; () banked
  2294   004AFE  37D1               	rlcf	??_main& (0+255),f,b
  2295   004B00  37D2               	rlcf	(??_main+1)& (0+255),f,b
  2296   004B02  0EFE               	movlw	254
  2297   004B04  25D1               	addwf	??_main& (0+255),w,b
  2298   004B06  6FD3               	movwf	(??_main+2)& (0+255),b
  2299   004B08  0EFF               	movlw	255
  2300   004B0A  21D2               	addwfc	(??_main+1)& (0+255),w,b
  2301   004B0C  6FD4               	movwf	(??_main+3)& (0+255),b
  2302   004B0E  0E50               	movlw	low main@actions
  2303   004B10  25D3               	addwf	(??_main+2)& (0+255),w,b
  2304   004B12  6ED9               	movwf	fsr2l,c
  2305   004B14  0E02               	movlw	high main@actions
  2306   004B16  21D4               	addwfc	(??_main+3)& (0+255),w,b
  2307   004B18  6EDA               	movwf	fsr2h,c
  2308   004B1A  50DF               	movf	indf2,w,c
  2309   004B1C  EC33  F038         	call	_invert_action
  2310   004B20  0100               	movlb	0	; () banked
  2311   004B22  6FD5               	movwf	(??_main+4)& (0+255),b
  2312   004B24  51D5               	movf	(??_main+4)& (0+255),w,b
  2313   004B26  0102               	movlb	2	; () banked
  2314   004B28  6FC0               	movwf	main@action_to_do& (0+255),b
  2315   004B2A  6BC1               	clrf	(main@action_to_do+1)& (0+255),b
  2316   004B2C                     
  2317                           ; BSR set to: 2
  2318                           ;main.c: 260:             if(action_to_do == 0){
  2319   004B2C  51C0               	movf	main@action_to_do& (0+255),w,b
  2320   004B2E  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2321   004B30  A4D8               	btfss	status,2,c
  2322   004B32  EF9D  F025         	goto	u8001
  2323   004B36  EF9F  F025         	goto	u8000
  2324   004B3A                     u8001:
  2325   004B3A  EFAB  F025         	goto	l7798
  2326   004B3E                     u8000:
  2327   004B3E                     l7796:
  2328                           
  2329                           ;main.c: 261:                 turn_right_90(pmL, pmR);
  2330   004B3E  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  2331   004B42  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2332   004B46  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  2333   004B4A  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2334   004B4E  EC4C  F034         	call	_turn_right_90	;wreg free
  2335                           
  2336                           ;main.c: 262:             }
  2337   004B52  EF27  F026         	goto	l7826
  2338   004B56                     l7798:
  2339                           
  2340                           ; BSR set to: 2
  2341   004B56  05C0               	decf	main@action_to_do& (0+255),w,b
  2342   004B58  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2343   004B5A  A4D8               	btfss	status,2,c
  2344   004B5C  EFB2  F025         	goto	u8011
  2345   004B60  EFB4  F025         	goto	u8010
  2346   004B64                     u8011:
  2347   004B64  EFC0  F025         	goto	l7802
  2348   004B68                     u8010:
  2349   004B68                     l7800:
  2350                           
  2351                           ; BSR set to: 2
  2352                           ;main.c: 264:                 turn_left_90(pmL, pmR);
  2353   004B68  C2C2  F019         	movff	main@pmL,turn_left_90@mL
  2354   004B6C  C2C3  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  2355   004B70  C2C4  F01B         	movff	main@pmR,turn_left_90@mR
  2356   004B74  C2C5  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  2357   004B78  ECC1  F034         	call	_turn_left_90	;wreg free
  2358                           
  2359                           ;main.c: 265:             }
  2360   004B7C  EF27  F026         	goto	l7826
  2361   004B80                     l7802:
  2362                           
  2363                           ; BSR set to: 2
  2364   004B80  0E02               	movlw	2
  2365   004B82  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2366   004B84  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2367   004B86  A4D8               	btfss	status,2,c
  2368   004B88  EFC8  F025         	goto	u8021
  2369   004B8C  EFCA  F025         	goto	u8020
  2370   004B90                     u8021:
  2371   004B90  EFE3  F025         	goto	l7810
  2372   004B94                     u8020:
  2373   004B94                     
  2374                           ; BSR set to: 2
  2375                           ;main.c: 267:                 turn_right_90(pmL, pmR);
  2376   004B94  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  2377   004B98  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2378   004B9C  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  2379   004BA0  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2380   004BA4  EC4C  F034         	call	_turn_right_90	;wreg free
  2381   004BA8                     
  2382                           ;main.c: 268:                 _delay((unsigned long)((250)*(64000000/4000.0)));
  2383   004BA8  0E15               	movlw	21
  2384   004BAA  0100               	movlb	0	; () banked
  2385   004BAC  6FD2               	movwf	(??_main+1)& (0+255),b
  2386   004BAE  0E4B               	movlw	75
  2387   004BB0  6FD1               	movwf	??_main& (0+255),b
  2388   004BB2  0EBE               	movlw	190
  2389   004BB4                     u8177:
  2390   004BB4  2EE8               	decfsz	wreg,f,c
  2391   004BB6  D7FE               	bra	u8177
  2392   004BB8  2FD1               	decfsz	??_main& (0+255),f,b
  2393   004BBA  D7FC               	bra	u8177
  2394   004BBC  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  2395   004BBE  D7FA               	bra	u8177
  2396   004BC0  0000               	nop	
  2397   004BC2  EF9F  F025         	goto	l7796
  2398   004BC6                     l7810:
  2399                           
  2400                           ; BSR set to: 2
  2401   004BC6  0E05               	movlw	5
  2402   004BC8  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2403   004BCA  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2404   004BCC  A4D8               	btfss	status,2,c
  2405   004BCE  EFEB  F025         	goto	u8031
  2406   004BD2  EFED  F025         	goto	u8030
  2407   004BD6                     u8031:
  2408   004BD6  EFF9  F025         	goto	l7814
  2409   004BDA                     u8030:
  2410   004BDA                     
  2411                           ; BSR set to: 2
  2412                           ;main.c: 272:                 turn_right_135(pmL, pmR);
  2413   004BDA  C2C2  F019         	movff	main@pmL,turn_right_135@mL
  2414   004BDE  C2C3  F01A         	movff	main@pmL+1,turn_right_135@mL+1
  2415   004BE2  C2C4  F01B         	movff	main@pmR,turn_right_135@mR
  2416   004BE6  C2C5  F01C         	movff	main@pmR+1,turn_right_135@mR+1
  2417   004BEA  ECD6  F033         	call	_turn_right_135	;wreg free
  2418                           
  2419                           ;main.c: 273:             }
  2420   004BEE  EF27  F026         	goto	l7826
  2421   004BF2                     l7814:
  2422                           
  2423                           ; BSR set to: 2
  2424   004BF2  0E06               	movlw	6
  2425   004BF4  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2426   004BF6  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2427   004BF8  A4D8               	btfss	status,2,c
  2428   004BFA  EF01  F026         	goto	u8041
  2429   004BFE  EF03  F026         	goto	u8040
  2430   004C02                     u8041:
  2431   004C02  EF0F  F026         	goto	l7818
  2432   004C06                     u8040:
  2433   004C06                     
  2434                           ; BSR set to: 2
  2435                           ;main.c: 275:                 turn_left_135(pmL, pmR);
  2436   004C06  C2C2  F019         	movff	main@pmL,turn_left_135@mL
  2437   004C0A  C2C3  F01A         	movff	main@pmL+1,turn_left_135@mL+1
  2438   004C0E  C2C4  F01B         	movff	main@pmR,turn_left_135@mR
  2439   004C12  C2C5  F01C         	movff	main@pmR+1,turn_left_135@mR+1
  2440   004C16  EC36  F035         	call	_turn_left_135	;wreg free
  2441                           
  2442                           ;main.c: 276:             }
  2443   004C1A  EF27  F026         	goto	l7826
  2444   004C1E                     l7818:
  2445                           
  2446                           ; BSR set to: 2
  2447   004C1E  0E08               	movlw	8
  2448   004C20  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2449   004C22  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2450   004C24  A4D8               	btfss	status,2,c
  2451   004C26  EF17  F026         	goto	u8051
  2452   004C2A  EF19  F026         	goto	u8050
  2453   004C2E                     u8051:
  2454   004C2E  EF1B  F026         	goto	l7822
  2455   004C32                     u8050:
  2456   004C32  EFB4  F025         	goto	l7800
  2457   004C36                     l7822:
  2458                           
  2459                           ; BSR set to: 2
  2460   004C36  0E09               	movlw	9
  2461   004C38  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2462   004C3A  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2463   004C3C  A4D8               	btfss	status,2,c
  2464   004C3E  EF23  F026         	goto	u8061
  2465   004C42  EF25  F026         	goto	u8060
  2466   004C46                     u8061:
  2467   004C46  EF27  F026         	goto	l391
  2468   004C4A                     u8060:
  2469   004C4A  EF9F  F025         	goto	l7796
  2470   004C4E                     l391:
  2471   004C4E                     l7826:
  2472                           
  2473                           ;main.c: 283:             _delay((unsigned long)((250)*(64000000/4000.0)));
  2474   004C4E  0E15               	movlw	21
  2475   004C50  0100               	movlb	0	; () banked
  2476   004C52  6FD2               	movwf	(??_main+1)& (0+255),b
  2477   004C54  0E4B               	movlw	75
  2478   004C56  6FD1               	movwf	??_main& (0+255),b
  2479   004C58  0EBE               	movlw	190
  2480   004C5A                     u8187:
  2481   004C5A  2EE8               	decfsz	wreg,f,c
  2482   004C5C  D7FE               	bra	u8187
  2483   004C5E  2FD1               	decfsz	??_main& (0+255),f,b
  2484   004C60  D7FC               	bra	u8187
  2485   004C62  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  2486   004C64  D7FA               	bra	u8187
  2487   004C66  0000               	nop	
  2488   004C68                     
  2489                           ;main.c: 285:             sprintf(clear_val,"action = %d \r\n",action_to_do);
  2490   004C68  0E3C               	movlw	low main@clear_val
  2491   004C6A  6E1B               	movwf	sprintf@s^0,c
  2492   004C6C  0E02               	movlw	high main@clear_val
  2493   004C6E  6E1C               	movwf	(sprintf@s+1)^0,c
  2494   004C70  0E71               	movlw	low STR_1
  2495   004C72  6E1D               	movwf	sprintf@fmt^0,c
  2496   004C74  C2C0  F01E         	movff	main@action_to_do,?_sprintf+3
  2497   004C78  C2C1  F01F         	movff	main@action_to_do+1,?_sprintf+4
  2498   004C7C  EC14  F03A         	call	_sprintf	;wreg free
  2499   004C80                     
  2500                           ;main.c: 286:             sendStringSerial4(pclear_val);
  2501   004C80  C2A0  F003         	movff	main@pclear_val,sendStringSerial4@string
  2502   004C84  C2A1  F004         	movff	main@pclear_val+1,sendStringSerial4@string+1
  2503   004C88  EC84  F03A         	call	_sendStringSerial4	;wreg free
  2504   004C8C                     
  2505                           ;main.c: 287:         actions_completed -=1 ;
  2506   004C8C  0102               	movlb	2	; () banked
  2507   004C8E  07AC               	decf	main@actions_completed& (0+255),f,b
  2508   004C90  A0D8               	btfss	status,0,c
  2509   004C92  07AD               	decf	(main@actions_completed+1)& (0+255),f,b
  2510   004C94                     l7834:
  2511                           
  2512                           ; BSR set to: 2
  2513                           ;main.c: 289:     _delay((unsigned long)((10)*(64000000/4000.0)));
  2514   004C94  0ED0               	movlw	208
  2515   004C96  0100               	movlb	0	; () banked
  2516   004C98  6FD1               	movwf	??_main& (0+255),b
  2517   004C9A  0EC9               	movlw	201
  2518   004C9C                     u8197:
  2519   004C9C  2EE8               	decfsz	wreg,f,c
  2520   004C9E  D7FE               	bra	u8197
  2521   004CA0  2FD1               	decfsz	??_main& (0+255),f,b
  2522   004CA2  D7FC               	bra	u8197
  2523   004CA4  D000               	nop2	
  2524   004CA6                     l7836:
  2525                           
  2526                           ;main.c: 247:     while(actions_completed >= 0){
  2527   004CA6  0102               	movlb	2	; () banked
  2528   004CA8  BFAD               	btfsc	(main@actions_completed+1)& (0+255),7,b
  2529   004CAA  EF5B  F026         	goto	u8070
  2530   004CAE  EF59  F026         	goto	u8071
  2531   004CB2                     u8071:
  2532   004CB2  EF3A  F025         	goto	l7776
  2533   004CB6                     u8070:
  2534   004CB6                     
  2535                           ; BSR set to: 2
  2536                           ;main.c: 291:     stop(pmL, pmR);
  2537   004CB6  C2C2  F015         	movff	main@pmL,stop@mL
  2538   004CBA  C2C3  F016         	movff	main@pmL+1,stop@mL+1
  2539   004CBE  C2C4  F017         	movff	main@pmR,stop@mR
  2540   004CC2  C2C5  F018         	movff	main@pmR+1,stop@mR+1
  2541   004CC6  ECE6  F037         	call	_stop	;wreg free
  2542   004CCA                     l7840:
  2543                           
  2544                           ;main.c: 293:         LATHbits.LATH3 = !LATHbits.LATH3;
  2545   004CCA  A680               	btfss	128,3,c	;volatile
  2546   004CCC  EF6A  F026         	goto	u8081
  2547   004CD0  EF6F  F026         	goto	u8080
  2548   004CD4                     u8081:
  2549   004CD4  0100               	movlb	0	; () banked
  2550   004CD6  6BD1               	clrf	??_main& (0+255),b
  2551   004CD8  2BD1               	incf	??_main& (0+255),f,b
  2552   004CDA  EF71  F026         	goto	u8098
  2553   004CDE                     u8080:
  2554   004CDE  0100               	movlb	0	; () banked
  2555   004CE0  6BD1               	clrf	??_main& (0+255),b
  2556   004CE2                     u8098:
  2557   004CE2  47D1               	rlncf	??_main& (0+255),f,b
  2558   004CE4  47D1               	rlncf	??_main& (0+255),f,b
  2559   004CE6  47D1               	rlncf	??_main& (0+255),f,b
  2560   004CE8  5080               	movf	128,w,c	;volatile
  2561   004CEA  19D1               	xorwf	??_main& (0+255),w,b
  2562   004CEC  0BF7               	andlw	-9
  2563   004CEE  19D1               	xorwf	??_main& (0+255),w,b
  2564   004CF0  6E80               	movwf	128,c	;volatile
  2565   004CF2                     
  2566                           ; BSR set to: 0
  2567                           ;main.c: 294:         _delay((unsigned long)((500)*(64000000/4000.0)));
  2568   004CF2  0E29               	movlw	41
  2569   004CF4  0100               	movlb	0	; () banked
  2570   004CF6  6FD2               	movwf	(??_main+1)& (0+255),b
  2571   004CF8  0E96               	movlw	150
  2572   004CFA  6FD1               	movwf	??_main& (0+255),b
  2573   004CFC  0E7F               	movlw	127
  2574   004CFE                     u8207:
  2575   004CFE  2EE8               	decfsz	wreg,f,c
  2576   004D00  D7FE               	bra	u8207
  2577   004D02  2FD1               	decfsz	??_main& (0+255),f,b
  2578   004D04  D7FC               	bra	u8207
  2579   004D06  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  2580   004D08  D7FA               	bra	u8207
  2581   004D0A  EF65  F026         	goto	l7840
  2582   004D0E  EF12  F000         	goto	start
  2583   004D12                     __end_of_main:
  2584                           	callstack 0
  2585                           
  2586 ;; *************** function _turn_right_90 *****************
  2587 ;; Defined at:
  2588 ;;		line 143 in file "dc_motor.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2591 ;;		 -> main@motorL(9), 
  2592 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2593 ;;		 -> main@motorR(9), 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;Total ram usage:        6 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 5
  2612 ;; This function calls:
  2613 ;;		_setMotorPWM
  2614 ;;		_stop
  2615 ;; This function is called by:
  2616 ;;		_main
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text1
  2621   006898                     __ptext1:
  2622                           	callstack 0
  2623   006898                     _turn_right_90:
  2624                           	callstack 25
  2625   006898                     
  2626                           ;dc_motor.c: 144:     mL->direction = 0;
  2627   006898  EE20 F001          	lfsr	2,1
  2628   00689C  5019               	movf	turn_right_90@mL^0,w,c
  2629   00689E  26D9               	addwf	fsr2l,f,c
  2630   0068A0  501A               	movf	(turn_right_90@mL+1)^0,w,c
  2631   0068A2  22DA               	addwfc	fsr2h,f,c
  2632   0068A4  6ADF               	clrf	indf2,c
  2633                           
  2634                           ;dc_motor.c: 145:     mR->direction = 1;
  2635   0068A6  EE20 F001          	lfsr	2,1
  2636   0068AA  501B               	movf	turn_right_90@mR^0,w,c
  2637   0068AC  26D9               	addwf	fsr2l,f,c
  2638   0068AE  501C               	movf	(turn_right_90@mR+1)^0,w,c
  2639   0068B0  22DA               	addwfc	fsr2h,f,c
  2640   0068B2  0E01               	movlw	1
  2641   0068B4  6EDF               	movwf	indf2,c
  2642                           
  2643                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2644   0068B6  EF93  F034         	goto	l222
  2645   0068BA                     l5308:
  2646                           
  2647                           ;dc_motor.c: 148:         if ((mL->power) < 70) (mL->power) += 1;
  2648   0068BA  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2649   0068BE  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2650   0068C2  0E46               	movlw	70
  2651   0068C4  60DF               	cpfslt	indf2,c
  2652   0068C6  EF67  F034         	goto	u5391
  2653   0068CA  EF69  F034         	goto	u5390
  2654   0068CE                     u5391:
  2655   0068CE  EF6E  F034         	goto	l5312
  2656   0068D2                     u5390:
  2657   0068D2  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2658   0068D6  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2659   0068DA  2ADF               	incf	indf2,f,c
  2660   0068DC                     l5312:
  2661                           
  2662                           ;dc_motor.c: 149:         if ((mR->power) < 70) (mR->power) += 1;
  2663   0068DC  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2664   0068E0  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2665   0068E4  0E46               	movlw	70
  2666   0068E6  60DF               	cpfslt	indf2,c
  2667   0068E8  EF78  F034         	goto	u5401
  2668   0068EC  EF7A  F034         	goto	u5400
  2669   0068F0                     u5401:
  2670   0068F0  EF7F  F034         	goto	l5316
  2671   0068F4                     u5400:
  2672   0068F4  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2673   0068F8  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2674   0068FC  2ADF               	incf	indf2,f,c
  2675   0068FE                     l5316:
  2676                           
  2677                           ;dc_motor.c: 151:         setMotorPWM(mL);
  2678   0068FE  C019  F00F         	movff	turn_right_90@mL,setMotorPWM@m
  2679   006902  C01A  F010         	movff	turn_right_90@mL+1,setMotorPWM@m+1
  2680   006906  EC99  F031         	call	_setMotorPWM	;wreg free
  2681   00690A                     
  2682                           ;dc_motor.c: 152:         setMotorPWM(mR);
  2683   00690A  C01B  F00F         	movff	turn_right_90@mR,setMotorPWM@m
  2684   00690E  C01C  F010         	movff	turn_right_90@mR+1,setMotorPWM@m+1
  2685   006912  EC99  F031         	call	_setMotorPWM	;wreg free
  2686   006916                     
  2687                           ;dc_motor.c: 153:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2688   006916  0E15               	movlw	21
  2689   006918  6E1D               	movwf	??_turn_right_90^0,c
  2690   00691A  0EC6               	movlw	198
  2691   00691C                     u8217:
  2692   00691C  2EE8               	decfsz	wreg,f,c
  2693   00691E  D7FE               	bra	u8217
  2694   006920  2E1D               	decfsz	??_turn_right_90^0,f,c
  2695   006922  D7FC               	bra	u8217
  2696   006924  D000               	nop2	
  2697   006926                     l222:
  2698                           
  2699                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2700   006926  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2701   00692A  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2702   00692E  0E45               	movlw	69
  2703   006930  64DF               	cpfsgt	indf2,c
  2704   006932  EF9D  F034         	goto	u5411
  2705   006936  EF9F  F034         	goto	u5410
  2706   00693A                     u5411:
  2707   00693A  EF5D  F034         	goto	l5308
  2708   00693E                     u5410:
  2709   00693E  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2710   006942  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2711   006946  0E45               	movlw	69
  2712   006948  64DF               	cpfsgt	indf2,c
  2713   00694A  EFA9  F034         	goto	u5421
  2714   00694E  EFAB  F034         	goto	u5420
  2715   006952                     u5421:
  2716   006952  EF5D  F034         	goto	l5308
  2717   006956                     u5420:
  2718   006956                     
  2719                           ;dc_motor.c: 155:     _delay((unsigned long)((415)*(64000000/4000.0)));
  2720   006956  0E22               	movlw	34
  2721   006958  6E1E               	movwf	(??_turn_right_90+1)^0,c
  2722   00695A  0EB0               	movlw	176
  2723   00695C  6E1D               	movwf	??_turn_right_90^0,c
  2724   00695E  0E48               	movlw	72
  2725   006960                     u8227:
  2726   006960  2EE8               	decfsz	wreg,f,c
  2727   006962  D7FE               	bra	u8227
  2728   006964  2E1D               	decfsz	??_turn_right_90^0,f,c
  2729   006966  D7FC               	bra	u8227
  2730   006968  2E1E               	decfsz	(??_turn_right_90+1)^0,f,c
  2731   00696A  D7FA               	bra	u8227
  2732   00696C                     
  2733                           ;dc_motor.c: 156:     stop(mL, mR);
  2734   00696C  C019  F015         	movff	turn_right_90@mL,stop@mL
  2735   006970  C01A  F016         	movff	turn_right_90@mL+1,stop@mL+1
  2736   006974  C01B  F017         	movff	turn_right_90@mR,stop@mR
  2737   006978  C01C  F018         	movff	turn_right_90@mR+1,stop@mR+1
  2738   00697C  ECE6  F037         	call	_stop	;wreg free
  2739   006980  0012               	return		;funcret
  2740   006982                     __end_of_turn_right_90:
  2741                           	callstack 0
  2742                           
  2743 ;; *************** function _turn_right_135 *****************
  2744 ;; Defined at:
  2745 ;;		line 177 in file "dc_motor.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2748 ;;		 -> main@motorL(9), 
  2749 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2750 ;;		 -> main@motorR(9), 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2764 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2765 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2766 ;;Total ram usage:        6 bytes
  2767 ;; Hardware stack levels used: 1
  2768 ;; Hardware stack levels required when called: 5
  2769 ;; This function calls:
  2770 ;;		_setMotorPWM
  2771 ;;		_stop
  2772 ;; This function is called by:
  2773 ;;		_main
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text2
  2778   0067AC                     __ptext2:
  2779                           	callstack 0
  2780   0067AC                     _turn_right_135:
  2781                           	callstack 25
  2782   0067AC                     
  2783                           ;dc_motor.c: 178:     mL->direction = 0;
  2784   0067AC  EE20 F001          	lfsr	2,1
  2785   0067B0  5019               	movf	turn_right_135@mL^0,w,c
  2786   0067B2  26D9               	addwf	fsr2l,f,c
  2787   0067B4  501A               	movf	(turn_right_135@mL+1)^0,w,c
  2788   0067B6  22DA               	addwfc	fsr2h,f,c
  2789   0067B8  6ADF               	clrf	indf2,c
  2790                           
  2791                           ;dc_motor.c: 179:     mR->direction = 1;
  2792   0067BA  EE20 F001          	lfsr	2,1
  2793   0067BE  501B               	movf	turn_right_135@mR^0,w,c
  2794   0067C0  26D9               	addwf	fsr2l,f,c
  2795   0067C2  501C               	movf	(turn_right_135@mR+1)^0,w,c
  2796   0067C4  22DA               	addwfc	fsr2h,f,c
  2797   0067C6  0E01               	movlw	1
  2798   0067C8  6EDF               	movwf	indf2,c
  2799                           
  2800                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2801   0067CA  EF1D  F034         	goto	l238
  2802   0067CE                     l5352:
  2803                           
  2804                           ;dc_motor.c: 182:         if ((mL->power) < 70) (mL->power) += 1;
  2805   0067CE  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2806   0067D2  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2807   0067D6  0E46               	movlw	70
  2808   0067D8  60DF               	cpfslt	indf2,c
  2809   0067DA  EFF1  F033         	goto	u5471
  2810   0067DE  EFF3  F033         	goto	u5470
  2811   0067E2                     u5471:
  2812   0067E2  EFF8  F033         	goto	l5356
  2813   0067E6                     u5470:
  2814   0067E6  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2815   0067EA  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2816   0067EE  2ADF               	incf	indf2,f,c
  2817   0067F0                     l5356:
  2818                           
  2819                           ;dc_motor.c: 183:         if ((mR->power) < 70) (mR->power) += 1;
  2820   0067F0  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2821   0067F4  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2822   0067F8  0E46               	movlw	70
  2823   0067FA  60DF               	cpfslt	indf2,c
  2824   0067FC  EF02  F034         	goto	u5481
  2825   006800  EF04  F034         	goto	u5480
  2826   006804                     u5481:
  2827   006804  EF09  F034         	goto	l5360
  2828   006808                     u5480:
  2829   006808  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2830   00680C  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2831   006810  2ADF               	incf	indf2,f,c
  2832   006812                     l5360:
  2833                           
  2834                           ;dc_motor.c: 185:         setMotorPWM(mL);
  2835   006812  C019  F00F         	movff	turn_right_135@mL,setMotorPWM@m
  2836   006816  C01A  F010         	movff	turn_right_135@mL+1,setMotorPWM@m+1
  2837   00681A  EC99  F031         	call	_setMotorPWM	;wreg free
  2838   00681E                     
  2839                           ;dc_motor.c: 186:         setMotorPWM(mR);
  2840   00681E  C01B  F00F         	movff	turn_right_135@mR,setMotorPWM@m
  2841   006822  C01C  F010         	movff	turn_right_135@mR+1,setMotorPWM@m+1
  2842   006826  EC99  F031         	call	_setMotorPWM	;wreg free
  2843   00682A                     
  2844                           ;dc_motor.c: 187:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2845   00682A  0E15               	movlw	21
  2846   00682C  6E1D               	movwf	??_turn_right_135^0,c
  2847   00682E  0EC6               	movlw	198
  2848   006830                     u8237:
  2849   006830  2EE8               	decfsz	wreg,f,c
  2850   006832  D7FE               	bra	u8237
  2851   006834  2E1D               	decfsz	??_turn_right_135^0,f,c
  2852   006836  D7FC               	bra	u8237
  2853   006838  D000               	nop2	
  2854   00683A                     l238:
  2855                           
  2856                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2857   00683A  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2858   00683E  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2859   006842  0E45               	movlw	69
  2860   006844  64DF               	cpfsgt	indf2,c
  2861   006846  EF27  F034         	goto	u5491
  2862   00684A  EF29  F034         	goto	u5490
  2863   00684E                     u5491:
  2864   00684E  EFE7  F033         	goto	l5352
  2865   006852                     u5490:
  2866   006852  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2867   006856  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2868   00685A  0E45               	movlw	69
  2869   00685C  64DF               	cpfsgt	indf2,c
  2870   00685E  EF33  F034         	goto	u5501
  2871   006862  EF35  F034         	goto	u5500
  2872   006866                     u5501:
  2873   006866  EFE7  F033         	goto	l5352
  2874   00686A                     u5500:
  2875   00686A                     
  2876                           ;dc_motor.c: 189:     _delay((unsigned long)((630)*(64000000/4000.0)));
  2877   00686A  0E34               	movlw	52
  2878   00686C  6E1E               	movwf	(??_turn_right_135+1)^0,c
  2879   00686E  0E23               	movlw	35
  2880   006870  6E1D               	movwf	??_turn_right_135^0,c
  2881   006872  0EC4               	movlw	196
  2882   006874                     u8247:
  2883   006874  2EE8               	decfsz	wreg,f,c
  2884   006876  D7FE               	bra	u8247
  2885   006878  2E1D               	decfsz	??_turn_right_135^0,f,c
  2886   00687A  D7FC               	bra	u8247
  2887   00687C  2E1E               	decfsz	(??_turn_right_135+1)^0,f,c
  2888   00687E  D7FA               	bra	u8247
  2889   006880  D000               	nop2	
  2890   006882                     
  2891                           ;dc_motor.c: 190:     stop(mL, mR);
  2892   006882  C019  F015         	movff	turn_right_135@mL,stop@mL
  2893   006886  C01A  F016         	movff	turn_right_135@mL+1,stop@mL+1
  2894   00688A  C01B  F017         	movff	turn_right_135@mR,stop@mR
  2895   00688E  C01C  F018         	movff	turn_right_135@mR+1,stop@mR+1
  2896   006892  ECE6  F037         	call	_stop	;wreg free
  2897   006896  0012               	return		;funcret
  2898   006898                     __end_of_turn_right_135:
  2899                           	callstack 0
  2900                           
  2901 ;; *************** function _turn_left_90 *****************
  2902 ;; Defined at:
  2903 ;;		line 126 in file "dc_motor.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2906 ;;		 -> main@motorL(9), 
  2907 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2908 ;;		 -> main@motorR(9), 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2922 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2924 ;;Total ram usage:        6 bytes
  2925 ;; Hardware stack levels used: 1
  2926 ;; Hardware stack levels required when called: 5
  2927 ;; This function calls:
  2928 ;;		_setMotorPWM
  2929 ;;		_stop
  2930 ;; This function is called by:
  2931 ;;		_main
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text3
  2936   006982                     __ptext3:
  2937                           	callstack 0
  2938   006982                     _turn_left_90:
  2939                           	callstack 25
  2940   006982                     
  2941                           ;dc_motor.c: 127:     mL->direction = 1;
  2942   006982  EE20 F001          	lfsr	2,1
  2943   006986  5019               	movf	turn_left_90@mL^0,w,c
  2944   006988  26D9               	addwf	fsr2l,f,c
  2945   00698A  501A               	movf	(turn_left_90@mL+1)^0,w,c
  2946   00698C  22DA               	addwfc	fsr2h,f,c
  2947   00698E  0E01               	movlw	1
  2948   006990  6EDF               	movwf	indf2,c
  2949                           
  2950                           ;dc_motor.c: 128:     mR->direction = 0;
  2951   006992  EE20 F001          	lfsr	2,1
  2952   006996  501B               	movf	turn_left_90@mR^0,w,c
  2953   006998  26D9               	addwf	fsr2l,f,c
  2954   00699A  501C               	movf	(turn_left_90@mR+1)^0,w,c
  2955   00699C  22DA               	addwfc	fsr2h,f,c
  2956   00699E  6ADF               	clrf	indf2,c
  2957                           
  2958                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  2959   0069A0  EF08  F035         	goto	l214
  2960   0069A4                     l5286:
  2961                           
  2962                           ;dc_motor.c: 131:         if ((mL->power) < 70) (mL->power) += 1;
  2963   0069A4  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2964   0069A8  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2965   0069AC  0E46               	movlw	70
  2966   0069AE  60DF               	cpfslt	indf2,c
  2967   0069B0  EFDC  F034         	goto	u5351
  2968   0069B4  EFDE  F034         	goto	u5350
  2969   0069B8                     u5351:
  2970   0069B8  EFE3  F034         	goto	l5290
  2971   0069BC                     u5350:
  2972   0069BC  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2973   0069C0  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2974   0069C4  2ADF               	incf	indf2,f,c
  2975   0069C6                     l5290:
  2976                           
  2977                           ;dc_motor.c: 132:         if ((mR->power) < 70) (mR->power) += 1;
  2978   0069C6  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2979   0069CA  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2980   0069CE  0E46               	movlw	70
  2981   0069D0  60DF               	cpfslt	indf2,c
  2982   0069D2  EFED  F034         	goto	u5361
  2983   0069D6  EFEF  F034         	goto	u5360
  2984   0069DA                     u5361:
  2985   0069DA  EFF4  F034         	goto	l5294
  2986   0069DE                     u5360:
  2987   0069DE  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2988   0069E2  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2989   0069E6  2ADF               	incf	indf2,f,c
  2990   0069E8                     l5294:
  2991                           
  2992                           ;dc_motor.c: 134:         setMotorPWM(mL);
  2993   0069E8  C019  F00F         	movff	turn_left_90@mL,setMotorPWM@m
  2994   0069EC  C01A  F010         	movff	turn_left_90@mL+1,setMotorPWM@m+1
  2995   0069F0  EC99  F031         	call	_setMotorPWM	;wreg free
  2996   0069F4                     
  2997                           ;dc_motor.c: 135:         setMotorPWM(mR);
  2998   0069F4  C01B  F00F         	movff	turn_left_90@mR,setMotorPWM@m
  2999   0069F8  C01C  F010         	movff	turn_left_90@mR+1,setMotorPWM@m+1
  3000   0069FC  EC99  F031         	call	_setMotorPWM	;wreg free
  3001   006A00                     
  3002                           ;dc_motor.c: 136:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3003   006A00  0E15               	movlw	21
  3004   006A02  6E1D               	movwf	??_turn_left_90^0,c
  3005   006A04  0EC6               	movlw	198
  3006   006A06                     u8257:
  3007   006A06  2EE8               	decfsz	wreg,f,c
  3008   006A08  D7FE               	bra	u8257
  3009   006A0A  2E1D               	decfsz	??_turn_left_90^0,f,c
  3010   006A0C  D7FC               	bra	u8257
  3011   006A0E  D000               	nop2	
  3012   006A10                     l214:
  3013                           
  3014                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  3015   006A10  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  3016   006A14  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  3017   006A18  0E45               	movlw	69
  3018   006A1A  64DF               	cpfsgt	indf2,c
  3019   006A1C  EF12  F035         	goto	u5371
  3020   006A20  EF14  F035         	goto	u5370
  3021   006A24                     u5371:
  3022   006A24  EFD2  F034         	goto	l5286
  3023   006A28                     u5370:
  3024   006A28  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  3025   006A2C  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  3026   006A30  0E45               	movlw	69
  3027   006A32  64DF               	cpfsgt	indf2,c
  3028   006A34  EF1E  F035         	goto	u5381
  3029   006A38  EF20  F035         	goto	u5380
  3030   006A3C                     u5381:
  3031   006A3C  EFD2  F034         	goto	l5286
  3032   006A40                     u5380:
  3033   006A40                     
  3034                           ;dc_motor.c: 138:     _delay((unsigned long)((415)*(64000000/4000.0)));
  3035   006A40  0E22               	movlw	34
  3036   006A42  6E1E               	movwf	(??_turn_left_90+1)^0,c
  3037   006A44  0EB0               	movlw	176
  3038   006A46  6E1D               	movwf	??_turn_left_90^0,c
  3039   006A48  0E48               	movlw	72
  3040   006A4A                     u8267:
  3041   006A4A  2EE8               	decfsz	wreg,f,c
  3042   006A4C  D7FE               	bra	u8267
  3043   006A4E  2E1D               	decfsz	??_turn_left_90^0,f,c
  3044   006A50  D7FC               	bra	u8267
  3045   006A52  2E1E               	decfsz	(??_turn_left_90+1)^0,f,c
  3046   006A54  D7FA               	bra	u8267
  3047   006A56                     
  3048                           ;dc_motor.c: 139:     stop(mL, mR);
  3049   006A56  C019  F015         	movff	turn_left_90@mL,stop@mL
  3050   006A5A  C01A  F016         	movff	turn_left_90@mL+1,stop@mL+1
  3051   006A5E  C01B  F017         	movff	turn_left_90@mR,stop@mR
  3052   006A62  C01C  F018         	movff	turn_left_90@mR+1,stop@mR+1
  3053   006A66  ECE6  F037         	call	_stop	;wreg free
  3054   006A6A  0012               	return		;funcret
  3055   006A6C                     __end_of_turn_left_90:
  3056                           	callstack 0
  3057                           
  3058 ;; *************** function _turn_left_135 *****************
  3059 ;; Defined at:
  3060 ;;		line 160 in file "dc_motor.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  3063 ;;		 -> main@motorL(9), 
  3064 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  3065 ;;		 -> main@motorR(9), 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3077 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3079 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;Total ram usage:        6 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; Hardware stack levels required when called: 5
  3084 ;; This function calls:
  3085 ;;		_setMotorPWM
  3086 ;;		_stop
  3087 ;; This function is called by:
  3088 ;;		_main
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           	psect	text4
  3093   006A6C                     __ptext4:
  3094                           	callstack 0
  3095   006A6C                     _turn_left_135:
  3096                           	callstack 25
  3097   006A6C                     
  3098                           ;dc_motor.c: 161:     mL->direction = 1;
  3099   006A6C  EE20 F001          	lfsr	2,1
  3100   006A70  5019               	movf	turn_left_135@mL^0,w,c
  3101   006A72  26D9               	addwf	fsr2l,f,c
  3102   006A74  501A               	movf	(turn_left_135@mL+1)^0,w,c
  3103   006A76  22DA               	addwfc	fsr2h,f,c
  3104   006A78  0E01               	movlw	1
  3105   006A7A  6EDF               	movwf	indf2,c
  3106                           
  3107                           ;dc_motor.c: 162:     mR->direction = 0;
  3108   006A7C  EE20 F001          	lfsr	2,1
  3109   006A80  501B               	movf	turn_left_135@mR^0,w,c
  3110   006A82  26D9               	addwf	fsr2l,f,c
  3111   006A84  501C               	movf	(turn_left_135@mR+1)^0,w,c
  3112   006A86  22DA               	addwfc	fsr2h,f,c
  3113   006A88  6ADF               	clrf	indf2,c
  3114                           
  3115                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  3116   006A8A  EF7D  F035         	goto	l230
  3117   006A8E                     l5330:
  3118                           
  3119                           ;dc_motor.c: 165:         if ((mL->power) < 70) (mL->power) += 1;
  3120   006A8E  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3121   006A92  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3122   006A96  0E46               	movlw	70
  3123   006A98  60DF               	cpfslt	indf2,c
  3124   006A9A  EF51  F035         	goto	u5431
  3125   006A9E  EF53  F035         	goto	u5430
  3126   006AA2                     u5431:
  3127   006AA2  EF58  F035         	goto	l5334
  3128   006AA6                     u5430:
  3129   006AA6  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3130   006AAA  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3131   006AAE  2ADF               	incf	indf2,f,c
  3132   006AB0                     l5334:
  3133                           
  3134                           ;dc_motor.c: 166:         if ((mR->power) < 70) (mR->power) += 1;
  3135   006AB0  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3136   006AB4  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3137   006AB8  0E46               	movlw	70
  3138   006ABA  60DF               	cpfslt	indf2,c
  3139   006ABC  EF62  F035         	goto	u5441
  3140   006AC0  EF64  F035         	goto	u5440
  3141   006AC4                     u5441:
  3142   006AC4  EF69  F035         	goto	l5338
  3143   006AC8                     u5440:
  3144   006AC8  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3145   006ACC  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3146   006AD0  2ADF               	incf	indf2,f,c
  3147   006AD2                     l5338:
  3148                           
  3149                           ;dc_motor.c: 168:         setMotorPWM(mL);
  3150   006AD2  C019  F00F         	movff	turn_left_135@mL,setMotorPWM@m
  3151   006AD6  C01A  F010         	movff	turn_left_135@mL+1,setMotorPWM@m+1
  3152   006ADA  EC99  F031         	call	_setMotorPWM	;wreg free
  3153   006ADE                     
  3154                           ;dc_motor.c: 169:         setMotorPWM(mR);
  3155   006ADE  C01B  F00F         	movff	turn_left_135@mR,setMotorPWM@m
  3156   006AE2  C01C  F010         	movff	turn_left_135@mR+1,setMotorPWM@m+1
  3157   006AE6  EC99  F031         	call	_setMotorPWM	;wreg free
  3158   006AEA                     
  3159                           ;dc_motor.c: 170:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3160   006AEA  0E15               	movlw	21
  3161   006AEC  6E1D               	movwf	??_turn_left_135^0,c
  3162   006AEE  0EC6               	movlw	198
  3163   006AF0                     u8277:
  3164   006AF0  2EE8               	decfsz	wreg,f,c
  3165   006AF2  D7FE               	bra	u8277
  3166   006AF4  2E1D               	decfsz	??_turn_left_135^0,f,c
  3167   006AF6  D7FC               	bra	u8277
  3168   006AF8  D000               	nop2	
  3169   006AFA                     l230:
  3170                           
  3171                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  3172   006AFA  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3173   006AFE  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3174   006B02  0E45               	movlw	69
  3175   006B04  64DF               	cpfsgt	indf2,c
  3176   006B06  EF87  F035         	goto	u5451
  3177   006B0A  EF89  F035         	goto	u5450
  3178   006B0E                     u5451:
  3179   006B0E  EF47  F035         	goto	l5330
  3180   006B12                     u5450:
  3181   006B12  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3182   006B16  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3183   006B1A  0E45               	movlw	69
  3184   006B1C  64DF               	cpfsgt	indf2,c
  3185   006B1E  EF93  F035         	goto	u5461
  3186   006B22  EF95  F035         	goto	u5460
  3187   006B26                     u5461:
  3188   006B26  EF47  F035         	goto	l5330
  3189   006B2A                     u5460:
  3190   006B2A                     
  3191                           ;dc_motor.c: 172:     _delay((unsigned long)((600)*(64000000/4000.0)));
  3192   006B2A  0E31               	movlw	49
  3193   006B2C  6E1E               	movwf	(??_turn_left_135+1)^0,c
  3194   006B2E  0EB4               	movlw	180
  3195   006B30  6E1D               	movwf	??_turn_left_135^0,c
  3196   006B32  0E66               	movlw	102
  3197   006B34                     u8287:
  3198   006B34  2EE8               	decfsz	wreg,f,c
  3199   006B36  D7FE               	bra	u8287
  3200   006B38  2E1D               	decfsz	??_turn_left_135^0,f,c
  3201   006B3A  D7FC               	bra	u8287
  3202   006B3C  2E1E               	decfsz	(??_turn_left_135+1)^0,f,c
  3203   006B3E  D7FA               	bra	u8287
  3204   006B40                     
  3205                           ;dc_motor.c: 173:     stop(mL, mR);
  3206   006B40  C019  F015         	movff	turn_left_135@mL,stop@mL
  3207   006B44  C01A  F016         	movff	turn_left_135@mL+1,stop@mL+1
  3208   006B48  C01B  F017         	movff	turn_left_135@mR,stop@mR
  3209   006B4C  C01C  F018         	movff	turn_left_135@mR+1,stop@mR+1
  3210   006B50  ECE6  F037         	call	_stop	;wreg free
  3211   006B54  0012               	return		;funcret
  3212   006B56                     __end_of_turn_left_135:
  3213                           	callstack 0
  3214                           
  3215 ;; *************** function _sprintf *****************
  3216 ;; Defined at:
  3217 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;  s               2   26[COMRAM] PTR unsigned char 
  3220 ;;		 -> main@clear_val(20), 
  3221 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  3222 ;;		 -> STR_1(15), 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  f              12   32[COMRAM] struct _IO_FILE
  3225 ;;  ret             2    0        int 
  3226 ;;  ap              1   31[COMRAM] PTR void [1]
  3227 ;;		 -> ?_sprintf(2), 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  2   26[COMRAM] int 
  3230 ;; Registers used:
  3231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3237 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3238 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3240 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3241 ;;Total ram usage:       18 bytes
  3242 ;; Hardware stack levels used: 1
  3243 ;; Hardware stack levels required when called: 6
  3244 ;; This function calls:
  3245 ;;		_vfprintf
  3246 ;; This function is called by:
  3247 ;;		_main
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text5
  3252   007428                     __ptext5:
  3253                           	callstack 0
  3254   007428                     _sprintf:
  3255                           	callstack 24
  3256   007428  0E1E               	movlw	low (?_sprintf+3)
  3257   00742A  6E20               	movwf	sprintf@ap^0,c
  3258   00742C  C01B  F021         	movff	sprintf@s,sprintf@f
  3259   007430  C01C  F022         	movff	sprintf@s+1,sprintf@f+1
  3260   007434  0E00               	movlw	0
  3261   007436  6E25               	movwf	(sprintf@f+4)^0,c
  3262   007438  0E00               	movlw	0
  3263   00743A  6E24               	movwf	(sprintf@f+3)^0,c
  3264   00743C  0E00               	movlw	0
  3265   00743E  6E2C               	movwf	(sprintf@f+11)^0,c
  3266   007440  0E00               	movlw	0
  3267   007442  6E2B               	movwf	(sprintf@f+10)^0,c
  3268   007444  0E21               	movlw	low sprintf@f
  3269   007446  6E17               	movwf	vfprintf@fp^0,c
  3270   007448  C01D  F018         	movff	sprintf@fmt,vfprintf@fmt
  3271   00744C  0E20               	movlw	low sprintf@ap
  3272   00744E  6E19               	movwf	vfprintf@ap^0,c
  3273   007450  ECD2  F039         	call	_vfprintf	;wreg free
  3274   007454  5024               	movf	(sprintf@f+3)^0,w,c
  3275   007456  241B               	addwf	sprintf@s^0,w,c
  3276   007458  6ED9               	movwf	fsr2l,c
  3277   00745A  5025               	movf	(sprintf@f+4)^0,w,c
  3278   00745C  201C               	addwfc	(sprintf@s+1)^0,w,c
  3279   00745E  6EDA               	movwf	fsr2h,c
  3280   007460  6ADF               	clrf	indf2,c
  3281   007462  0012               	return		;funcret
  3282   007464                     __end_of_sprintf:
  3283                           	callstack 0
  3284                           
  3285 ;; *************** function _vfprintf *****************
  3286 ;; Defined at:
  3287 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  3290 ;;		 -> sprintf@f(12), 
  3291 ;;  fmt             1   23[COMRAM] PTR const unsigned char 
  3292 ;;		 -> STR_1(15), 
  3293 ;;  ap              1   24[COMRAM] PTR PTR void 
  3294 ;;		 -> sprintf@ap(1), 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  cfmt            1   25[COMRAM] PTR unsigned char 
  3297 ;;		 -> STR_1(15), 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  2   22[COMRAM] int 
  3300 ;; Registers used:
  3301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3307 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3310 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3311 ;;Total ram usage:        4 bytes
  3312 ;; Hardware stack levels used: 1
  3313 ;; Hardware stack levels required when called: 5
  3314 ;; This function calls:
  3315 ;;		_vfpfcnvrt
  3316 ;; This function is called by:
  3317 ;;		_sprintf
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text6
  3322   0073A4                     __ptext6:
  3323                           	callstack 0
  3324   0073A4                     _vfprintf:
  3325                           	callstack 24
  3326   0073A4                     
  3327                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3328   0073A4  C018  F01A         	movff	vfprintf@fmt,vfprintf@cfmt
  3329                           
  3330                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3331   0073A8  EFDE  F039         	goto	l5034
  3332   0073AC                     l5032:
  3333                           
  3334                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3335   0073AC  C017  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  3336   0073B0  0E1A               	movlw	low vfprintf@cfmt
  3337   0073B2  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  3338   0073B4  C019  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  3339   0073B8  ECD4  F02F         	call	_vfpfcnvrt	;wreg free
  3340   0073BC                     l5034:
  3341                           
  3342                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3343   0073BC  C01A  FFF6         	movff	vfprintf@cfmt,tblptrl
  3344   0073C0                     	if	1	;There is more than 1 active tblptr byte
  3345   0073C0  0E0E               	movlw	high __smallconst
  3346   0073C2  6EF7               	movwf	tblptrh,c
  3347   0073C4                     	endif
  3348   0073C4                     	if	0	;tblptru may be non-zero
  3349   0073C4                     	endif
  3350   0073C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3351   0073C4  0E00               	movlw	low (__smallconst shr (0+16))
  3352   0073C6  6EF8               	movwf	tblptru,c
  3353   0073C8                     	endif
  3354   0073C8  0008               	tblrd		*
  3355   0073CA  50F5               	movf	tablat,w,c
  3356   0073CC  0900               	iorlw	0
  3357   0073CE  A4D8               	btfss	status,2,c
  3358   0073D0  EFEC  F039         	goto	u5191
  3359   0073D4  EFEE  F039         	goto	u5190
  3360   0073D8                     u5191:
  3361   0073D8  EFD6  F039         	goto	l5032
  3362   0073DC                     u5190:
  3363   0073DC                     
  3364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3365   0073DC  0E00               	movlw	0
  3366   0073DE  6E18               	movwf	(?_vfprintf+1)^0,c
  3367   0073E0  0E00               	movlw	0
  3368   0073E2  6E17               	movwf	?_vfprintf^0,c
  3369   0073E4  0012               	return		;funcret
  3370   0073E6                     __end_of_vfprintf:
  3371                           	callstack 0
  3372                           
  3373 ;; *************** function _vfpfcnvrt *****************
  3374 ;; Defined at:
  3375 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  3378 ;;		 -> sprintf@f(12), 
  3379 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  3380 ;;		 -> vfprintf@cfmt(1), 
  3381 ;;  ap              1   13[COMRAM] PTR PTR void 
  3382 ;;		 -> sprintf@ap(1), 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;  convarg         4   17[COMRAM] struct .
  3385 ;;  c               1   21[COMRAM] unsigned char 
  3386 ;;  cp              1   16[COMRAM] PTR unsigned char 
  3387 ;;		 -> STR_1(15), 
  3388 ;;  done            1   15[COMRAM] _Bool 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3398 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3399 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3400 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3401 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3402 ;;Total ram usage:       11 bytes
  3403 ;; Hardware stack levels used: 1
  3404 ;; Hardware stack levels required when called: 4
  3405 ;; This function calls:
  3406 ;;		___awdiv
  3407 ;;		___awmod
  3408 ;;		_abs
  3409 ;;		_fputc
  3410 ;; This function is called by:
  3411 ;;		_vfprintf
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text7
  3416   005FA8                     __ptext7:
  3417                           	callstack 0
  3418   005FA8                     _vfpfcnvrt:
  3419                           	callstack 24
  3420   005FA8                     
  3421                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3422   005FA8  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3423   005FAA  6ED9               	movwf	fsr2l,c
  3424   005FAC  6ADA               	clrf	fsr2h,c
  3425   005FAE  CFDF FFF6          	movff	indf2,tblptrl
  3426   005FB2                     	if	1	;There is more than 1 active tblptr byte
  3427   005FB2  0E0E               	movlw	high __smallconst
  3428   005FB4  6EF7               	movwf	tblptrh,c
  3429   005FB6                     	endif
  3430   005FB6                     	if	0	;tblptru may be non-zero
  3431   005FB6                     	endif
  3432   005FB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3433   005FB6  0E00               	movlw	low (__smallconst shr (0+16))
  3434   005FB8  6EF8               	movwf	tblptru,c
  3435   005FBA                     	endif
  3436   005FBA  0008               	tblrd		*
  3437   005FBC  50F5               	movf	tablat,w,c
  3438   005FBE  0A25               	xorlw	37
  3439   005FC0  A4D8               	btfss	status,2,c
  3440   005FC2  EFE5  F02F         	goto	u4391
  3441   005FC6  EFE7  F02F         	goto	u4390
  3442   005FCA                     u4391:
  3443   005FCA  EFAB  F030         	goto	l4504
  3444   005FCE                     u4390:
  3445   005FCE                     
  3446                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3447   005FCE  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3448   005FD0  6ED9               	movwf	fsr2l,c
  3449   005FD2  6ADA               	clrf	fsr2h,c
  3450   005FD4  2ADF               	incf	indf2,f,c
  3451   005FD6                     
  3452                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3453   005FD6  0E00               	movlw	0
  3454   005FD8  0100               	movlb	0	; () banked
  3455   005FDA  6FED               	movwf	(_width+1)& (0+255),b
  3456   005FDC  0E00               	movlw	0
  3457   005FDE  6FEC               	movwf	_width& (0+255),b
  3458   005FE0  C0EC  F058         	movff	_width,_flags
  3459   005FE4                     
  3460                           ; BSR set to: 0
  3461                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3462   005FE4  69EE               	setf	_prec& (0+255),b
  3463   005FE6  69EF               	setf	(_prec+1)& (0+255),b
  3464   005FE8                     
  3465                           ; BSR set to: 0
  3466                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3467   005FE8  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3468   005FEA  6ED9               	movwf	fsr2l,c
  3469   005FEC  6ADA               	clrf	fsr2h,c
  3470   005FEE  50DF               	movf	indf2,w,c
  3471   005FF0  6E11               	movwf	vfpfcnvrt@cp^0,c
  3472   005FF2                     
  3473                           ; BSR set to: 0
  3474                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3475   005FF2  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3476   005FF6                     	if	1	;There is more than 1 active tblptr byte
  3477   005FF6  0E0E               	movlw	high __smallconst
  3478   005FF8  6EF7               	movwf	tblptrh,c
  3479   005FFA                     	endif
  3480   005FFA                     	if	0	;tblptru may be non-zero
  3481   005FFA                     	endif
  3482   005FFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3483   005FFA  0E00               	movlw	low (__smallconst shr (0+16))
  3484   005FFC  6EF8               	movwf	tblptru,c
  3485   005FFE                     	endif
  3486   005FFE  0008               	tblrd		*
  3487   006000  50F5               	movf	tablat,w,c
  3488   006002  0A64               	xorlw	100
  3489   006004  B4D8               	btfsc	status,2,c
  3490   006006  EF07  F030         	goto	u4401
  3491   00600A  EF09  F030         	goto	u4400
  3492   00600E                     u4401:
  3493   00600E  EF19  F030         	goto	l4474
  3494   006012                     u4400:
  3495   006012                     
  3496                           ; BSR set to: 0
  3497   006012  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3498   006016                     	if	1	;There is more than 1 active tblptr byte
  3499   006016  0E0E               	movlw	high __smallconst
  3500   006018  6EF7               	movwf	tblptrh,c
  3501   00601A                     	endif
  3502   00601A                     	if	0	;tblptru may be non-zero
  3503   00601A                     	endif
  3504   00601A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3505   00601A  0E00               	movlw	low (__smallconst shr (0+16))
  3506   00601C  6EF8               	movwf	tblptru,c
  3507   00601E                     	endif
  3508   00601E  0008               	tblrd		*
  3509   006020  50F5               	movf	tablat,w,c
  3510   006022  0A69               	xorlw	105
  3511   006024  A4D8               	btfss	status,2,c
  3512   006026  EF17  F030         	goto	u4411
  3513   00602A  EF19  F030         	goto	u4410
  3514   00602E                     u4411:
  3515   00602E  EFA5  F030         	goto	l4500
  3516   006032                     u4410:
  3517   006032                     l4474:
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3521   006032  500E               	movf	vfpfcnvrt@ap^0,w,c
  3522   006034  6ED9               	movwf	fsr2l,c
  3523   006036  6ADA               	clrf	fsr2h,c
  3524   006038  0E02               	movlw	2
  3525   00603A  26DF               	addwf	indf2,f,c
  3526   00603C  5CDF               	subwf	indf2,w,c
  3527   00603E  6ED9               	movwf	fsr2l,c
  3528   006040  6ADA               	clrf	fsr2h,c
  3529   006042  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
  3530   006046  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
  3531   00604A                     
  3532                           ; BSR set to: 0
  3533                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3534   00604A  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3535   00604C  6ED9               	movwf	fsr2l,c
  3536   00604E  6ADA               	clrf	fsr2h,c
  3537   006050  2811               	incf	vfpfcnvrt@cp^0,w,c
  3538   006052  6EDF               	movwf	indf2,c
  3539   006054                     
  3540                           ; BSR set to: 0
  3541                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3542   006054  0E20               	movlw	32
  3543   006056  6E16               	movwf	vfpfcnvrt@c^0,c
  3544                           
  3545                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3546   006058  BE13               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3547   00605A  EF31  F030         	goto	u4421
  3548   00605E  EF34  F030         	goto	u4420
  3549   006062                     u4421:
  3550   006062  0E01               	movlw	1
  3551   006064  EF35  F030         	goto	u4430
  3552   006068                     u4420:
  3553   006068  0E00               	movlw	0
  3554   00606A                     u4430:
  3555   00606A  6E10               	movwf	vfpfcnvrt@done^0,c
  3556   00606C                     l4480:
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3559   00606C  0616               	decf	vfpfcnvrt@c^0,f,c
  3560   00606E  0EB8               	movlw	low _dbuf
  3561   006070  2416               	addwf	vfpfcnvrt@c^0,w,c
  3562   006072  6ED9               	movwf	fsr2l,c
  3563   006074  6ADA               	clrf	fsr2h,c
  3564   006076  0E01               	movlw	high _dbuf
  3565   006078  22DA               	addwfc	fsr2h,f,c
  3566   00607A  C012  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3567   00607E  C013  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3568   006082  0E00               	movlw	0
  3569   006084  6E05               	movwf	(___awmod@divisor+1)^0,c
  3570   006086  0E0A               	movlw	10
  3571   006088  6E04               	movwf	___awmod@divisor^0,c
  3572   00608A  EC3D  F037         	call	___awmod	;wreg free
  3573   00608E  C002  F008         	movff	?___awmod,abs@a
  3574   006092  C003  F009         	movff	?___awmod+1,abs@a+1
  3575   006096  EC6A  F03A         	call	_abs	;wreg free
  3576   00609A  5008               	movf	?_abs^0,w,c
  3577   00609C  0F30               	addlw	48
  3578   00609E  6EDF               	movwf	indf2,c
  3579   0060A0                     
  3580                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3581   0060A0  C012  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3582   0060A4  C013  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3583   0060A8  0E00               	movlw	0
  3584   0060AA  6E05               	movwf	(___awdiv@divisor+1)^0,c
  3585   0060AC  0E0A               	movlw	10
  3586   0060AE  6E04               	movwf	___awdiv@divisor^0,c
  3587   0060B0  EC20  F036         	call	___awdiv	;wreg free
  3588   0060B4  C002  F012         	movff	?___awdiv,vfpfcnvrt@convarg
  3589   0060B8  C003  F013         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3590   0060BC                     
  3591                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3592   0060BC  5012               	movf	vfpfcnvrt@convarg^0,w,c
  3593   0060BE  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3594   0060C0  B4D8               	btfsc	status,2,c
  3595   0060C2  EF65  F030         	goto	u4441
  3596   0060C6  EF67  F030         	goto	u4440
  3597   0060CA                     u4441:
  3598   0060CA  EF6F  F030         	goto	l4488
  3599   0060CE                     u4440:
  3600   0060CE  5016               	movf	vfpfcnvrt@c^0,w,c
  3601   0060D0  A4D8               	btfss	status,2,c
  3602   0060D2  EF6D  F030         	goto	u4451
  3603   0060D6  EF6F  F030         	goto	u4450
  3604   0060DA                     u4451:
  3605   0060DA  EF36  F030         	goto	l4480
  3606   0060DE                     u4450:
  3607   0060DE                     l4488:
  3608                           
  3609                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3610   0060DE  5016               	movf	vfpfcnvrt@c^0,w,c
  3611   0060E0  B4D8               	btfsc	status,2,c
  3612   0060E2  EF75  F030         	goto	u4461
  3613   0060E6  EF77  F030         	goto	u4460
  3614   0060EA                     u4461:
  3615   0060EA  EF9A  F030         	goto	l4498
  3616   0060EE                     u4460:
  3617   0060EE  5010               	movf	vfpfcnvrt@done^0,w,c
  3618   0060F0  B4D8               	btfsc	status,2,c
  3619   0060F2  EF7D  F030         	goto	u4471
  3620   0060F6  EF7F  F030         	goto	u4470
  3621   0060FA                     u4471:
  3622   0060FA  EF9A  F030         	goto	l4498
  3623   0060FE                     u4470:
  3624   0060FE                     
  3625                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3626   0060FE  0616               	decf	vfpfcnvrt@c^0,f,c
  3627   006100  0EB8               	movlw	low _dbuf
  3628   006102  2416               	addwf	vfpfcnvrt@c^0,w,c
  3629   006104  6ED9               	movwf	fsr2l,c
  3630   006106  6ADA               	clrf	fsr2h,c
  3631   006108  0E01               	movlw	high _dbuf
  3632   00610A  22DA               	addwfc	fsr2h,f,c
  3633   00610C  0E2D               	movlw	45
  3634   00610E  6EDF               	movwf	indf2,c
  3635   006110  EF9A  F030         	goto	l4498
  3636   006114                     l4494:
  3637                           
  3638                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3639   006114  0EB8               	movlw	low _dbuf
  3640   006116  2416               	addwf	vfpfcnvrt@c^0,w,c
  3641   006118  6ED9               	movwf	fsr2l,c
  3642   00611A  6ADA               	clrf	fsr2h,c
  3643   00611C  0E01               	movlw	high _dbuf
  3644   00611E  22DA               	addwfc	fsr2h,f,c
  3645   006120  50DF               	movf	indf2,w,c
  3646   006122  6E0F               	movwf	??_vfpfcnvrt^0,c
  3647   006124  500F               	movf	??_vfpfcnvrt^0,w,c
  3648   006126  6E02               	movwf	fputc@c^0,c
  3649   006128  6A03               	clrf	(fputc@c+1)^0,c
  3650   00612A  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3651   00612E  ECE0  F036         	call	_fputc	;wreg free
  3652   006132  2A16               	incf	vfpfcnvrt@c^0,f,c
  3653   006134                     l4498:
  3654                           
  3655                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3656   006134  0E20               	movlw	32
  3657   006136  1816               	xorwf	vfpfcnvrt@c^0,w,c
  3658   006138  A4D8               	btfss	status,2,c
  3659   00613A  EFA1  F030         	goto	u4481
  3660   00613E  EFA3  F030         	goto	u4480
  3661   006142                     u4481:
  3662   006142  EF8A  F030         	goto	l4494
  3663   006146                     u4480:
  3664   006146  EFBE  F030         	goto	l1278
  3665   00614A                     l4500:
  3666                           
  3667                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3668   00614A  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3669   00614C  6ED9               	movwf	fsr2l,c
  3670   00614E  6ADA               	clrf	fsr2h,c
  3671   006150  2ADF               	incf	indf2,f,c
  3672   006152  EFBE  F030         	goto	l1278
  3673   006156                     l4504:
  3674                           
  3675                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3676   006156  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3677   006158  6ED9               	movwf	fsr2l,c
  3678   00615A  6ADA               	clrf	fsr2h,c
  3679   00615C  CFDF FFF6          	movff	indf2,tblptrl
  3680   006160                     	if	1	;There is more than 1 active tblptr byte
  3681   006160  0E0E               	movlw	high __smallconst
  3682   006162  6EF7               	movwf	tblptrh,c
  3683   006164                     	endif
  3684   006164                     	if	0	;tblptru may be non-zero
  3685   006164                     	endif
  3686   006164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3687   006164  0E00               	movlw	low (__smallconst shr (0+16))
  3688   006166  6EF8               	movwf	tblptru,c
  3689   006168                     	endif
  3690   006168  0008               	tblrd		*
  3691   00616A  50F5               	movf	tablat,w,c
  3692   00616C  6E02               	movwf	fputc@c^0,c
  3693   00616E  6A03               	clrf	(fputc@c+1)^0,c
  3694   006170  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3695   006174  ECE0  F036         	call	_fputc	;wreg free
  3696   006178  EFA5  F030         	goto	l4500
  3697   00617C                     l1278:
  3698   00617C  0012               	return		;funcret
  3699   00617E                     __end_of_vfpfcnvrt:
  3700                           	callstack 0
  3701                           
  3702 ;; *************** function _fputc *****************
  3703 ;; Defined at:
  3704 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  c               2    1[COMRAM] int 
  3707 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  3708 ;;		 -> sprintf@f(12), 
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  2    1[COMRAM] int 
  3713 ;; Registers used:
  3714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3720 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3722 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3723 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3724 ;;Total ram usage:        8 bytes
  3725 ;; Hardware stack levels used: 1
  3726 ;; Hardware stack levels required when called: 3
  3727 ;; This function calls:
  3728 ;;		_putch
  3729 ;; This function is called by:
  3730 ;;		_vfpfcnvrt
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text8
  3735   006DC0                     __ptext8:
  3736                           	callstack 0
  3737   006DC0                     _fputc:
  3738                           	callstack 24
  3739   006DC0  5004               	movf	fputc@fp^0,w,c
  3740   006DC2  B4D8               	btfsc	status,2,c
  3741   006DC4  EFE6  F036         	goto	u3771
  3742   006DC8  EFE8  F036         	goto	u3770
  3743   006DCC                     u3771:
  3744   006DCC  EFF0  F036         	goto	l4114
  3745   006DD0                     u3770:
  3746   006DD0  5004               	movf	fputc@fp^0,w,c
  3747   006DD2  A4D8               	btfss	status,2,c
  3748   006DD4  EFEE  F036         	goto	u3781
  3749   006DD8  EFF0  F036         	goto	u3780
  3750   006DDC                     u3781:
  3751   006DDC  EFF5  F036         	goto	l4116
  3752   006DE0                     u3780:
  3753   006DE0                     l4114:
  3754   006DE0  5002               	movf	fputc@c^0,w,c
  3755   006DE2  EC5B  F03B         	call	_putch
  3756   006DE6  EF3C  F037         	goto	l1303
  3757   006DEA                     l4116:
  3758   006DEA  5004               	movf	fputc@fp^0,w,c
  3759   006DEC  6ED9               	movwf	fsr2l,c
  3760   006DEE  6ADA               	clrf	fsr2h,c
  3761   006DF0  0E0A               	movlw	10
  3762   006DF2  26D9               	addwf	fsr2l,f,c
  3763   006DF4  50DE               	movf	postinc2,w,c
  3764   006DF6  10DE               	iorwf	postinc2,w,c
  3765   006DF8  B4D8               	btfsc	status,2,c
  3766   006DFA  EF01  F037         	goto	u3791
  3767   006DFE  EF03  F037         	goto	u3790
  3768   006E02                     u3791:
  3769   006E02  EF1C  F037         	goto	l4120
  3770   006E06                     u3790:
  3771   006E06  5004               	movf	fputc@fp^0,w,c
  3772   006E08  6ED9               	movwf	fsr2l,c
  3773   006E0A  6ADA               	clrf	fsr2h,c
  3774   006E0C  0E0A               	movlw	10
  3775   006E0E  26D9               	addwf	fsr2l,f,c
  3776   006E10  5004               	movf	fputc@fp^0,w,c
  3777   006E12  6EE1               	movwf	fsr1l,c
  3778   006E14  6AE2               	clrf	fsr1h,c
  3779   006E16  0E03               	movlw	3
  3780   006E18  26E1               	addwf	fsr1l,f,c
  3781   006E1A  50DE               	movf	postinc2,w,c
  3782   006E1C  5CE6               	subwf	postinc1,w,c
  3783   006E1E  50E6               	movf	postinc1,w,c
  3784   006E20  0A80               	xorlw	128
  3785   006E22  6E09               	movwf	(??_fputc+4)^0,c
  3786   006E24  50DE               	movf	postinc2,w,c
  3787   006E26  0A80               	xorlw	128
  3788   006E28  5809               	subwfb	(??_fputc+4)^0,w,c
  3789   006E2A  B0D8               	btfsc	status,0,c
  3790   006E2C  EF1A  F037         	goto	u3801
  3791   006E30  EF1C  F037         	goto	u3800
  3792   006E34                     u3801:
  3793   006E34  EF3C  F037         	goto	l1303
  3794   006E38                     u3800:
  3795   006E38                     l4120:
  3796   006E38  5004               	movf	fputc@fp^0,w,c
  3797   006E3A  6ED9               	movwf	fsr2l,c
  3798   006E3C  6ADA               	clrf	fsr2h,c
  3799   006E3E  0E03               	movlw	3
  3800   006E40  26D9               	addwf	fsr2l,f,c
  3801   006E42  CFDE F005          	movff	postinc2,??_fputc
  3802   006E46  CFDD F006          	movff	postdec2,??_fputc+1
  3803   006E4A  5004               	movf	fputc@fp^0,w,c
  3804   006E4C  6ED9               	movwf	fsr2l,c
  3805   006E4E  6ADA               	clrf	fsr2h,c
  3806   006E50  CFDE F007          	movff	postinc2,??_fputc+2
  3807   006E54  CFDD F008          	movff	postdec2,??_fputc+3
  3808   006E58  5005               	movf	??_fputc^0,w,c
  3809   006E5A  2407               	addwf	(??_fputc+2)^0,w,c
  3810   006E5C  6ED9               	movwf	fsr2l,c
  3811   006E5E  5006               	movf	(??_fputc+1)^0,w,c
  3812   006E60  2008               	addwfc	(??_fputc+3)^0,w,c
  3813   006E62  6EDA               	movwf	fsr2h,c
  3814   006E64  C002  FFDF         	movff	fputc@c,indf2
  3815   006E68  5004               	movf	fputc@fp^0,w,c
  3816   006E6A  6ED9               	movwf	fsr2l,c
  3817   006E6C  6ADA               	clrf	fsr2h,c
  3818   006E6E  0E03               	movlw	3
  3819   006E70  26D9               	addwf	fsr2l,f,c
  3820   006E72  2ADE               	incf	postinc2,f,c
  3821   006E74  0E00               	movlw	0
  3822   006E76  22DD               	addwfc	postdec2,f,c
  3823   006E78                     l1303:
  3824   006E78  0012               	return		;funcret
  3825   006E7A                     __end_of_fputc:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function _putch *****************
  3829 ;; Defined at:
  3830 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  c               1    wreg     unsigned char 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  c               1    0[COMRAM] unsigned char 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3848 ;;Total ram usage:        0 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 2
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_fputc
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text9
  3859   0076B6                     __ptext9:
  3860                           	callstack 0
  3861   0076B6                     _putch:
  3862                           	callstack 24
  3863   0076B6  0012               	return		;funcret
  3864   0076B8                     __end_of_putch:
  3865                           	callstack 0
  3866                           
  3867 ;; *************** function _abs *****************
  3868 ;; Defined at:
  3869 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  a               2    7[COMRAM] int 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  2    7[COMRAM] int 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;Total ram usage:        4 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; Hardware stack levels required when called: 2
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_vfpfcnvrt
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text10
  3898   0074D4                     __ptext10:
  3899                           	callstack 0
  3900   0074D4                     _abs:
  3901                           	callstack 25
  3902   0074D4  BE09               	btfsc	(abs@a+1)^0,7,c
  3903   0074D6  EF6F  F03A         	goto	u3811
  3904   0074DA  EF71  F03A         	goto	u3810
  3905   0074DE                     u3811:
  3906   0074DE  EF77  F03A         	goto	l1288
  3907   0074E2                     u3810:
  3908   0074E2  C008  F008         	movff	abs@a,?_abs
  3909   0074E6  C009  F009         	movff	abs@a+1,?_abs+1
  3910   0074EA  EF83  F03A         	goto	l1291
  3911   0074EE                     l1288:
  3912   0074EE  C008  F00A         	movff	abs@a,??_abs
  3913   0074F2  C009  F00B         	movff	abs@a+1,??_abs+1
  3914   0074F6  1E0A               	comf	??_abs^0,f,c
  3915   0074F8  1E0B               	comf	(??_abs+1)^0,f,c
  3916   0074FA  4A0A               	infsnz	??_abs^0,f,c
  3917   0074FC  2A0B               	incf	(??_abs+1)^0,f,c
  3918   0074FE  C00A  F008         	movff	??_abs,?_abs
  3919   007502  C00B  F009         	movff	??_abs+1,?_abs+1
  3920   007506                     l1291:
  3921   007506  0012               	return		;funcret
  3922   007508                     __end_of_abs:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function ___awmod *****************
  3926 ;; Defined at:
  3927 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  dividend        2    1[COMRAM] int 
  3930 ;;  divisor         2    3[COMRAM] int 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  sign            1    6[COMRAM] unsigned char 
  3933 ;;  counter         1    5[COMRAM] unsigned char 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  2    1[COMRAM] int 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;Total ram usage:        6 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; Hardware stack levels required when called: 2
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_vfpfcnvrt
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text11
  3958   006E7A                     __ptext11:
  3959                           	callstack 0
  3960   006E7A                     ___awmod:
  3961                           	callstack 25
  3962   006E7A  0E00               	movlw	0
  3963   006E7C  6E07               	movwf	___awmod@sign^0,c
  3964   006E7E  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  3965   006E80  EF46  F037         	goto	u3680
  3966   006E84  EF44  F037         	goto	u3681
  3967   006E88                     u3681:
  3968   006E88  EF4C  F037         	goto	l4060
  3969   006E8C                     u3680:
  3970   006E8C  6C02               	negf	___awmod@dividend^0,c
  3971   006E8E  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3972   006E90  B0D8               	btfsc	status,0,c
  3973   006E92  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3974   006E94  0E01               	movlw	1
  3975   006E96  6E07               	movwf	___awmod@sign^0,c
  3976   006E98                     l4060:
  3977   006E98  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  3978   006E9A  EF53  F037         	goto	u3690
  3979   006E9E  EF51  F037         	goto	u3691
  3980   006EA2                     u3691:
  3981   006EA2  EF57  F037         	goto	l4064
  3982   006EA6                     u3690:
  3983   006EA6  6C04               	negf	___awmod@divisor^0,c
  3984   006EA8  1E05               	comf	(___awmod@divisor+1)^0,f,c
  3985   006EAA  B0D8               	btfsc	status,0,c
  3986   006EAC  2A05               	incf	(___awmod@divisor+1)^0,f,c
  3987   006EAE                     l4064:
  3988   006EAE  5004               	movf	___awmod@divisor^0,w,c
  3989   006EB0  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  3990   006EB2  B4D8               	btfsc	status,2,c
  3991   006EB4  EF5E  F037         	goto	u3701
  3992   006EB8  EF60  F037         	goto	u3700
  3993   006EBC                     u3701:
  3994   006EBC  EF84  F037         	goto	l4080
  3995   006EC0                     u3700:
  3996   006EC0  0E01               	movlw	1
  3997   006EC2  6E06               	movwf	___awmod@counter^0,c
  3998   006EC4  EF68  F037         	goto	l4070
  3999   006EC8                     l4068:
  4000   006EC8  90D8               	bcf	status,0,c
  4001   006ECA  3604               	rlcf	___awmod@divisor^0,f,c
  4002   006ECC  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  4003   006ECE  2A06               	incf	___awmod@counter^0,f,c
  4004   006ED0                     l4070:
  4005   006ED0  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  4006   006ED2  EF6D  F037         	goto	u3711
  4007   006ED6  EF6F  F037         	goto	u3710
  4008   006EDA                     u3711:
  4009   006EDA  EF64  F037         	goto	l4068
  4010   006EDE                     u3710:
  4011   006EDE                     l4072:
  4012   006EDE  5004               	movf	___awmod@divisor^0,w,c
  4013   006EE0  5C02               	subwf	___awmod@dividend^0,w,c
  4014   006EE2  5005               	movf	(___awmod@divisor+1)^0,w,c
  4015   006EE4  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  4016   006EE6  A0D8               	btfss	status,0,c
  4017   006EE8  EF78  F037         	goto	u3721
  4018   006EEC  EF7A  F037         	goto	u3720
  4019   006EF0                     u3721:
  4020   006EF0  EF7E  F037         	goto	l4076
  4021   006EF4                     u3720:
  4022   006EF4  5004               	movf	___awmod@divisor^0,w,c
  4023   006EF6  5E02               	subwf	___awmod@dividend^0,f,c
  4024   006EF8  5005               	movf	(___awmod@divisor+1)^0,w,c
  4025   006EFA  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  4026   006EFC                     l4076:
  4027   006EFC  90D8               	bcf	status,0,c
  4028   006EFE  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  4029   006F00  3204               	rrcf	___awmod@divisor^0,f,c
  4030   006F02  2E06               	decfsz	___awmod@counter^0,f,c
  4031   006F04  EF6F  F037         	goto	l4072
  4032   006F08                     l4080:
  4033   006F08  5007               	movf	___awmod@sign^0,w,c
  4034   006F0A  B4D8               	btfsc	status,2,c
  4035   006F0C  EF8A  F037         	goto	u3731
  4036   006F10  EF8C  F037         	goto	u3730
  4037   006F14                     u3731:
  4038   006F14  EF90  F037         	goto	l4084
  4039   006F18                     u3730:
  4040   006F18  6C02               	negf	___awmod@dividend^0,c
  4041   006F1A  1E03               	comf	(___awmod@dividend+1)^0,f,c
  4042   006F1C  B0D8               	btfsc	status,0,c
  4043   006F1E  2A03               	incf	(___awmod@dividend+1)^0,f,c
  4044   006F20                     l4084:
  4045   006F20  C002  F002         	movff	___awmod@dividend,?___awmod
  4046   006F24  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  4047   006F28  0012               	return		;funcret
  4048   006F2A                     __end_of___awmod:
  4049                           	callstack 0
  4050                           
  4051 ;; *************** function ___awdiv *****************
  4052 ;; Defined at:
  4053 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  dividend        2    1[COMRAM] int 
  4056 ;;  divisor         2    3[COMRAM] int 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  quotient        2    7[COMRAM] int 
  4059 ;;  sign            1    6[COMRAM] unsigned char 
  4060 ;;  counter         1    5[COMRAM] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  2    1[COMRAM] int 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4070 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4073 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4074 ;;Total ram usage:        8 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; Hardware stack levels required when called: 2
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_vfpfcnvrt
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text12
  4085   006C40                     __ptext12:
  4086                           	callstack 0
  4087   006C40                     ___awdiv:
  4088                           	callstack 25
  4089   006C40  0E00               	movlw	0
  4090   006C42  6E07               	movwf	___awdiv@sign^0,c
  4091   006C44  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  4092   006C46  EF29  F036         	goto	u3620
  4093   006C4A  EF27  F036         	goto	u3621
  4094   006C4E                     u3621:
  4095   006C4E  EF2F  F036         	goto	l4016
  4096   006C52                     u3620:
  4097   006C52  6C04               	negf	___awdiv@divisor^0,c
  4098   006C54  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  4099   006C56  B0D8               	btfsc	status,0,c
  4100   006C58  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  4101   006C5A  0E01               	movlw	1
  4102   006C5C  6E07               	movwf	___awdiv@sign^0,c
  4103   006C5E                     l4016:
  4104   006C5E  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  4105   006C60  EF36  F036         	goto	u3630
  4106   006C64  EF34  F036         	goto	u3631
  4107   006C68                     u3631:
  4108   006C68  EF3C  F036         	goto	l4022
  4109   006C6C                     u3630:
  4110   006C6C  6C02               	negf	___awdiv@dividend^0,c
  4111   006C6E  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  4112   006C70  B0D8               	btfsc	status,0,c
  4113   006C72  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  4114   006C74  0E01               	movlw	1
  4115   006C76  1A07               	xorwf	___awdiv@sign^0,f,c
  4116   006C78                     l4022:
  4117   006C78  0E00               	movlw	0
  4118   006C7A  6E09               	movwf	(___awdiv@quotient+1)^0,c
  4119   006C7C  0E00               	movlw	0
  4120   006C7E  6E08               	movwf	___awdiv@quotient^0,c
  4121   006C80  5004               	movf	___awdiv@divisor^0,w,c
  4122   006C82  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  4123   006C84  B4D8               	btfsc	status,2,c
  4124   006C86  EF47  F036         	goto	u3641
  4125   006C8A  EF49  F036         	goto	u3640
  4126   006C8E                     u3641:
  4127   006C8E  EF71  F036         	goto	l4044
  4128   006C92                     u3640:
  4129   006C92  0E01               	movlw	1
  4130   006C94  6E06               	movwf	___awdiv@counter^0,c
  4131   006C96  EF51  F036         	goto	l4030
  4132   006C9A                     l4028:
  4133   006C9A  90D8               	bcf	status,0,c
  4134   006C9C  3604               	rlcf	___awdiv@divisor^0,f,c
  4135   006C9E  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  4136   006CA0  2A06               	incf	___awdiv@counter^0,f,c
  4137   006CA2                     l4030:
  4138   006CA2  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  4139   006CA4  EF56  F036         	goto	u3651
  4140   006CA8  EF58  F036         	goto	u3650
  4141   006CAC                     u3651:
  4142   006CAC  EF4D  F036         	goto	l4028
  4143   006CB0                     u3650:
  4144   006CB0                     l4032:
  4145   006CB0  90D8               	bcf	status,0,c
  4146   006CB2  3608               	rlcf	___awdiv@quotient^0,f,c
  4147   006CB4  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  4148   006CB6  5004               	movf	___awdiv@divisor^0,w,c
  4149   006CB8  5C02               	subwf	___awdiv@dividend^0,w,c
  4150   006CBA  5005               	movf	(___awdiv@divisor+1)^0,w,c
  4151   006CBC  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  4152   006CBE  A0D8               	btfss	status,0,c
  4153   006CC0  EF64  F036         	goto	u3661
  4154   006CC4  EF66  F036         	goto	u3660
  4155   006CC8                     u3661:
  4156   006CC8  EF6B  F036         	goto	l4040
  4157   006CCC                     u3660:
  4158   006CCC  5004               	movf	___awdiv@divisor^0,w,c
  4159   006CCE  5E02               	subwf	___awdiv@dividend^0,f,c
  4160   006CD0  5005               	movf	(___awdiv@divisor+1)^0,w,c
  4161   006CD2  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  4162   006CD4  8008               	bsf	___awdiv@quotient^0,0,c
  4163   006CD6                     l4040:
  4164   006CD6  90D8               	bcf	status,0,c
  4165   006CD8  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  4166   006CDA  3204               	rrcf	___awdiv@divisor^0,f,c
  4167   006CDC  2E06               	decfsz	___awdiv@counter^0,f,c
  4168   006CDE  EF58  F036         	goto	l4032
  4169   006CE2                     l4044:
  4170   006CE2  5007               	movf	___awdiv@sign^0,w,c
  4171   006CE4  B4D8               	btfsc	status,2,c
  4172   006CE6  EF77  F036         	goto	u3671
  4173   006CEA  EF79  F036         	goto	u3670
  4174   006CEE                     u3671:
  4175   006CEE  EF7D  F036         	goto	l4048
  4176   006CF2                     u3670:
  4177   006CF2  6C08               	negf	___awdiv@quotient^0,c
  4178   006CF4  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  4179   006CF6  B0D8               	btfsc	status,0,c
  4180   006CF8  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  4181   006CFA                     l4048:
  4182   006CFA  C008  F002         	movff	___awdiv@quotient,?___awdiv
  4183   006CFE  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  4184   006D02  0012               	return		;funcret
  4185   006D04                     __end_of___awdiv:
  4186                           	callstack 0
  4187                           
  4188 ;; *************** function _sendStringSerial4 *****************
  4189 ;; Defined at:
  4190 ;;		line 38 in file "serial.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  string          2    2[COMRAM] PTR unsigned char 
  4193 ;;		 -> main@clear_val(20), 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4209 ;;Total ram usage:        2 bytes
  4210 ;; Hardware stack levels used: 1
  4211 ;; Hardware stack levels required when called: 3
  4212 ;; This function calls:
  4213 ;;		_sendCharSerial4
  4214 ;; This function is called by:
  4215 ;;		_main
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text13
  4220   007508                     __ptext13:
  4221                           	callstack 0
  4222   007508                     _sendStringSerial4:
  4223                           	callstack 27
  4224   007508                     
  4225                           ;serial.c: 40:     while(*string != 0){
  4226   007508  EF8F  F03A         	goto	l5502
  4227   00750C                     l5498:
  4228                           
  4229                           ;serial.c: 41:   sendCharSerial4(*string++);
  4230   00750C  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  4231   007510  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4232   007514  50DF               	movf	indf2,w,c
  4233   007516  EC23  F03B         	call	_sendCharSerial4
  4234   00751A  4A03               	infsnz	sendStringSerial4@string^0,f,c
  4235   00751C  2A04               	incf	(sendStringSerial4@string+1)^0,f,c
  4236   00751E                     l5502:
  4237                           
  4238                           ;serial.c: 40:     while(*string != 0){
  4239   00751E  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  4240   007522  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4241   007526  50DF               	movf	indf2,w,c
  4242   007528  A4D8               	btfss	status,2,c
  4243   00752A  EF99  F03A         	goto	u5631
  4244   00752E  EF9B  F03A         	goto	u5630
  4245   007532                     u5631:
  4246   007532  EF86  F03A         	goto	l5498
  4247   007536                     u5630:
  4248   007536  0012               	return		;funcret
  4249   007538                     __end_of_sendStringSerial4:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function _sendCharSerial4 *****************
  4253 ;; Defined at:
  4254 ;;		line 31 in file "serial.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  charToSend      1    wreg     unsigned char 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  charToSend      1    1[COMRAM] unsigned char 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		wreg
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4272 ;;Total ram usage:        1 bytes
  4273 ;; Hardware stack levels used: 1
  4274 ;; Hardware stack levels required when called: 2
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_sendStringSerial4
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text14
  4283   007646                     __ptext14:
  4284                           	callstack 0
  4285   007646                     _sendCharSerial4:
  4286                           	callstack 27
  4287                           
  4288                           ;incstack = 0
  4289                           ;sendCharSerial4@charToSend stored from wreg
  4290   007646  6E02               	movwf	sendCharSerial4@charToSend^0,c
  4291   007648                     l497:
  4292   007648  010E               	movlb	14	; () banked
  4293   00764A  A537               	btfss	55,2,b	;volatile
  4294   00764C  EF2A  F03B         	goto	u5181
  4295   007650  EF2C  F03B         	goto	u5180
  4296   007654                     u5181:
  4297   007654  EF24  F03B         	goto	l497
  4298   007658                     u5180:
  4299   007658                     
  4300                           ; BSR set to: 14
  4301                           ;serial.c: 33:     TX4REG = charToSend;
  4302   007658  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4303   00765C                     
  4304                           ; BSR set to: 14
  4305   00765C  0012               	return		;funcret
  4306   00765E                     __end_of_sendCharSerial4:
  4307                           	callstack 0
  4308                           
  4309 ;; *************** function _reverse_one_square *****************
  4310 ;; Defined at:
  4311 ;;		line 210 in file "dc_motor.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  4314 ;;		 -> main@motorL(9), 
  4315 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  4316 ;;		 -> main@motorR(9), 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;Total ram usage:        6 bytes
  4333 ;; Hardware stack levels used: 1
  4334 ;; Hardware stack levels required when called: 5
  4335 ;; This function calls:
  4336 ;;		_setMotorPWM
  4337 ;;		_stop
  4338 ;; This function is called by:
  4339 ;;		_main
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text15
  4344   0065A4                     __ptext15:
  4345                           	callstack 0
  4346   0065A4                     _reverse_one_square:
  4347                           	callstack 25
  4348   0065A4                     
  4349                           ;dc_motor.c: 211:     mL->direction = 1;
  4350   0065A4  EE20 F001          	lfsr	2,1
  4351   0065A8  5019               	movf	reverse_one_square@mL^0,w,c
  4352   0065AA  26D9               	addwf	fsr2l,f,c
  4353   0065AC  501A               	movf	(reverse_one_square@mL+1)^0,w,c
  4354   0065AE  22DA               	addwfc	fsr2h,f,c
  4355   0065B0  0E01               	movlw	1
  4356   0065B2  6EDF               	movwf	indf2,c
  4357                           
  4358                           ;dc_motor.c: 212:     mR->direction = 1;
  4359   0065B4  EE20 F001          	lfsr	2,1
  4360   0065B8  501B               	movf	reverse_one_square@mR^0,w,c
  4361   0065BA  26D9               	addwf	fsr2l,f,c
  4362   0065BC  501C               	movf	(reverse_one_square@mR+1)^0,w,c
  4363   0065BE  22DA               	addwfc	fsr2h,f,c
  4364   0065C0  0E01               	movlw	1
  4365   0065C2  6EDF               	movwf	indf2,c
  4366                           
  4367                           ;dc_motor.c: 214:     while ((mL->power) < 70 || (mR->power) < 70){
  4368   0065C4  EF1A  F033         	goto	l254
  4369   0065C8                     l5398:
  4370                           
  4371                           ;dc_motor.c: 215:         if ((mL->power) < 70) (mL->power) += 1;
  4372   0065C8  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  4373   0065CC  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  4374   0065D0  0E46               	movlw	70
  4375   0065D2  60DF               	cpfslt	indf2,c
  4376   0065D4  EFEE  F032         	goto	u5551
  4377   0065D8  EFF0  F032         	goto	u5550
  4378   0065DC                     u5551:
  4379   0065DC  EFF5  F032         	goto	l5402
  4380   0065E0                     u5550:
  4381   0065E0  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  4382   0065E4  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  4383   0065E8  2ADF               	incf	indf2,f,c
  4384   0065EA                     l5402:
  4385                           
  4386                           ;dc_motor.c: 216:         if ((mR->power) < 70) (mR->power) += 1;
  4387   0065EA  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  4388   0065EE  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  4389   0065F2  0E46               	movlw	70
  4390   0065F4  60DF               	cpfslt	indf2,c
  4391   0065F6  EFFF  F032         	goto	u5561
  4392   0065FA  EF01  F033         	goto	u5560
  4393   0065FE                     u5561:
  4394   0065FE  EF06  F033         	goto	l5406
  4395   006602                     u5560:
  4396   006602  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  4397   006606  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  4398   00660A  2ADF               	incf	indf2,f,c
  4399   00660C                     l5406:
  4400                           
  4401                           ;dc_motor.c: 218:         setMotorPWM(mL);
  4402   00660C  C019  F00F         	movff	reverse_one_square@mL,setMotorPWM@m
  4403   006610  C01A  F010         	movff	reverse_one_square@mL+1,setMotorPWM@m+1
  4404   006614  EC99  F031         	call	_setMotorPWM	;wreg free
  4405   006618                     
  4406                           ;dc_motor.c: 219:         setMotorPWM(mR);
  4407   006618  C01B  F00F         	movff	reverse_one_square@mR,setMotorPWM@m
  4408   00661C  C01C  F010         	movff	reverse_one_square@mR+1,setMotorPWM@m+1
  4409   006620  EC99  F031         	call	_setMotorPWM	;wreg free
  4410   006624                     
  4411                           ;dc_motor.c: 220:         _delay((unsigned long)((1)*(64000000/4000.0)));
  4412   006624  0E15               	movlw	21
  4413   006626  6E1D               	movwf	??_reverse_one_square^0,c
  4414   006628  0EC6               	movlw	198
  4415   00662A                     u8297:
  4416   00662A  2EE8               	decfsz	wreg,f,c
  4417   00662C  D7FE               	bra	u8297
  4418   00662E  2E1D               	decfsz	??_reverse_one_square^0,f,c
  4419   006630  D7FC               	bra	u8297
  4420   006632  D000               	nop2	
  4421   006634                     l254:
  4422                           
  4423                           ;dc_motor.c: 214:     while ((mL->power) < 70 || (mR->power) < 70){
  4424   006634  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  4425   006638  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  4426   00663C  0E45               	movlw	69
  4427   00663E  64DF               	cpfsgt	indf2,c
  4428   006640  EF24  F033         	goto	u5571
  4429   006644  EF26  F033         	goto	u5570
  4430   006648                     u5571:
  4431   006648  EFE4  F032         	goto	l5398
  4432   00664C                     u5570:
  4433   00664C  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  4434   006650  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  4435   006654  0E45               	movlw	69
  4436   006656  64DF               	cpfsgt	indf2,c
  4437   006658  EF30  F033         	goto	u5581
  4438   00665C  EF32  F033         	goto	u5580
  4439   006660                     u5581:
  4440   006660  EFE4  F032         	goto	l5398
  4441   006664                     u5580:
  4442   006664                     
  4443                           ;dc_motor.c: 222:     _delay((unsigned long)((1350)*(64000000/4000.0)));
  4444   006664  0E6E               	movlw	110
  4445   006666  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  4446   006668  0E94               	movlw	148
  4447   00666A  6E1D               	movwf	??_reverse_one_square^0,c
  4448   00666C  0EA8               	movlw	168
  4449   00666E                     u8307:
  4450   00666E  2EE8               	decfsz	wreg,f,c
  4451   006670  D7FE               	bra	u8307
  4452   006672  2E1D               	decfsz	??_reverse_one_square^0,f,c
  4453   006674  D7FC               	bra	u8307
  4454   006676  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  4455   006678  D7FA               	bra	u8307
  4456   00667A                     
  4457                           ;dc_motor.c: 223:     stop(mL, mR);
  4458   00667A  C019  F015         	movff	reverse_one_square@mL,stop@mL
  4459   00667E  C01A  F016         	movff	reverse_one_square@mL+1,stop@mL+1
  4460   006682  C01B  F017         	movff	reverse_one_square@mR,stop@mR
  4461   006686  C01C  F018         	movff	reverse_one_square@mR+1,stop@mR+1
  4462   00668A  ECE6  F037         	call	_stop	;wreg free
  4463   00668E                     
  4464                           ;dc_motor.c: 224:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4465   00668E  0E15               	movlw	21
  4466   006690  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  4467   006692  0E4B               	movlw	75
  4468   006694  6E1D               	movwf	??_reverse_one_square^0,c
  4469   006696  0EBE               	movlw	190
  4470   006698                     u8317:
  4471   006698  2EE8               	decfsz	wreg,f,c
  4472   00669A  D7FE               	bra	u8317
  4473   00669C  2E1D               	decfsz	??_reverse_one_square^0,f,c
  4474   00669E  D7FC               	bra	u8317
  4475   0066A0  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  4476   0066A2  D7FA               	bra	u8317
  4477   0066A4  D000               	nop2	
  4478   0066A6  0012               	return		;funcret
  4479   0066A8                     __end_of_reverse_one_square:
  4480                           	callstack 0
  4481                           
  4482 ;; *************** function _reverse_after_read *****************
  4483 ;; Defined at:
  4484 ;;		line 193 in file "dc_motor.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  4487 ;;		 -> main@motorL(9), 
  4488 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  4489 ;;		 -> main@motorR(9), 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4503 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4504 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4505 ;;Total ram usage:        6 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; Hardware stack levels required when called: 5
  4508 ;; This function calls:
  4509 ;;		_setMotorPWM
  4510 ;;		_stop
  4511 ;; This function is called by:
  4512 ;;		_main
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text16
  4517   00649E                     __ptext16:
  4518                           	callstack 0
  4519   00649E                     _reverse_after_read:
  4520                           	callstack 25
  4521   00649E                     
  4522                           ;dc_motor.c: 194:     mL->direction = 1;
  4523   00649E  EE20 F001          	lfsr	2,1
  4524   0064A2  5019               	movf	reverse_after_read@mL^0,w,c
  4525   0064A4  26D9               	addwf	fsr2l,f,c
  4526   0064A6  501A               	movf	(reverse_after_read@mL+1)^0,w,c
  4527   0064A8  22DA               	addwfc	fsr2h,f,c
  4528   0064AA  0E01               	movlw	1
  4529   0064AC  6EDF               	movwf	indf2,c
  4530                           
  4531                           ;dc_motor.c: 195:     mR->direction = 1;
  4532   0064AE  EE20 F001          	lfsr	2,1
  4533   0064B2  501B               	movf	reverse_after_read@mR^0,w,c
  4534   0064B4  26D9               	addwf	fsr2l,f,c
  4535   0064B6  501C               	movf	(reverse_after_read@mR+1)^0,w,c
  4536   0064B8  22DA               	addwfc	fsr2h,f,c
  4537   0064BA  0E01               	movlw	1
  4538   0064BC  6EDF               	movwf	indf2,c
  4539                           
  4540                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  4541   0064BE  EF97  F032         	goto	l246
  4542   0064C2                     l5374:
  4543                           
  4544                           ;dc_motor.c: 198:         if ((mL->power) < 70) (mL->power) += 1;
  4545   0064C2  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  4546   0064C6  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  4547   0064CA  0E46               	movlw	70
  4548   0064CC  60DF               	cpfslt	indf2,c
  4549   0064CE  EF6B  F032         	goto	u5511
  4550   0064D2  EF6D  F032         	goto	u5510
  4551   0064D6                     u5511:
  4552   0064D6  EF72  F032         	goto	l5378
  4553   0064DA                     u5510:
  4554   0064DA  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  4555   0064DE  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  4556   0064E2  2ADF               	incf	indf2,f,c
  4557   0064E4                     l5378:
  4558                           
  4559                           ;dc_motor.c: 199:         if ((mR->power) < 70) (mR->power) += 1;
  4560   0064E4  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  4561   0064E8  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  4562   0064EC  0E46               	movlw	70
  4563   0064EE  60DF               	cpfslt	indf2,c
  4564   0064F0  EF7C  F032         	goto	u5521
  4565   0064F4  EF7E  F032         	goto	u5520
  4566   0064F8                     u5521:
  4567   0064F8  EF83  F032         	goto	l5382
  4568   0064FC                     u5520:
  4569   0064FC  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  4570   006500  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  4571   006504  2ADF               	incf	indf2,f,c
  4572   006506                     l5382:
  4573                           
  4574                           ;dc_motor.c: 201:         setMotorPWM(mL);
  4575   006506  C019  F00F         	movff	reverse_after_read@mL,setMotorPWM@m
  4576   00650A  C01A  F010         	movff	reverse_after_read@mL+1,setMotorPWM@m+1
  4577   00650E  EC99  F031         	call	_setMotorPWM	;wreg free
  4578   006512                     
  4579                           ;dc_motor.c: 202:         setMotorPWM(mR);
  4580   006512  C01B  F00F         	movff	reverse_after_read@mR,setMotorPWM@m
  4581   006516  C01C  F010         	movff	reverse_after_read@mR+1,setMotorPWM@m+1
  4582   00651A  EC99  F031         	call	_setMotorPWM	;wreg free
  4583   00651E                     
  4584                           ;dc_motor.c: 203:         _delay((unsigned long)((1)*(64000000/4000.0)));
  4585   00651E  0E15               	movlw	21
  4586   006520  6E1D               	movwf	??_reverse_after_read^0,c
  4587   006522  0EC6               	movlw	198
  4588   006524                     u8327:
  4589   006524  2EE8               	decfsz	wreg,f,c
  4590   006526  D7FE               	bra	u8327
  4591   006528  2E1D               	decfsz	??_reverse_after_read^0,f,c
  4592   00652A  D7FC               	bra	u8327
  4593   00652C  D000               	nop2	
  4594   00652E                     l246:
  4595                           
  4596                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  4597   00652E  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  4598   006532  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  4599   006536  0E45               	movlw	69
  4600   006538  64DF               	cpfsgt	indf2,c
  4601   00653A  EFA1  F032         	goto	u5531
  4602   00653E  EFA3  F032         	goto	u5530
  4603   006542                     u5531:
  4604   006542  EF61  F032         	goto	l5374
  4605   006546                     u5530:
  4606   006546  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  4607   00654A  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  4608   00654E  0E45               	movlw	69
  4609   006550  64DF               	cpfsgt	indf2,c
  4610   006552  EFAD  F032         	goto	u5541
  4611   006556  EFAF  F032         	goto	u5540
  4612   00655A                     u5541:
  4613   00655A  EF61  F032         	goto	l5374
  4614   00655E                     u5540:
  4615   00655E                     
  4616                           ;dc_motor.c: 205:     _delay((unsigned long)((330)*(64000000/4000.0)));
  4617   00655E  0E1B               	movlw	27
  4618   006560  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  4619   006562  0ECA               	movlw	202
  4620   006564  6E1D               	movwf	??_reverse_after_read^0,c
  4621   006566  0E10               	movlw	16
  4622   006568                     u8337:
  4623   006568  2EE8               	decfsz	wreg,f,c
  4624   00656A  D7FE               	bra	u8337
  4625   00656C  2E1D               	decfsz	??_reverse_after_read^0,f,c
  4626   00656E  D7FC               	bra	u8337
  4627   006570  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  4628   006572  D7FA               	bra	u8337
  4629   006574  D000               	nop2	
  4630   006576                     
  4631                           ;dc_motor.c: 206:     stop(mL, mR);
  4632   006576  C019  F015         	movff	reverse_after_read@mL,stop@mL
  4633   00657A  C01A  F016         	movff	reverse_after_read@mL+1,stop@mL+1
  4634   00657E  C01B  F017         	movff	reverse_after_read@mR,stop@mR
  4635   006582  C01C  F018         	movff	reverse_after_read@mR+1,stop@mR+1
  4636   006586  ECE6  F037         	call	_stop	;wreg free
  4637   00658A                     
  4638                           ;dc_motor.c: 207:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4639   00658A  0E15               	movlw	21
  4640   00658C  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  4641   00658E  0E4B               	movlw	75
  4642   006590  6E1D               	movwf	??_reverse_after_read^0,c
  4643   006592  0EBE               	movlw	190
  4644   006594                     u8347:
  4645   006594  2EE8               	decfsz	wreg,f,c
  4646   006596  D7FE               	bra	u8347
  4647   006598  2E1D               	decfsz	??_reverse_after_read^0,f,c
  4648   00659A  D7FC               	bra	u8347
  4649   00659C  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  4650   00659E  D7FA               	bra	u8347
  4651   0065A0  D000               	nop2	
  4652   0065A2  0012               	return		;funcret
  4653   0065A4                     __end_of_reverse_after_read:
  4654                           	callstack 0
  4655                           
  4656 ;; *************** function _resetTimer0 *****************
  4657 ;; Defined at:
  4658 ;;		line 34 in file "timers.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;		None
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4676 ;;Total ram usage:        0 bytes
  4677 ;; Hardware stack levels used: 1
  4678 ;; Hardware stack levels required when called: 2
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_main
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text17
  4687   00768E                     __ptext17:
  4688                           	callstack 0
  4689   00768E                     _resetTimer0:
  4690                           	callstack 28
  4691   00768E                     
  4692                           ;timers.c: 35:     TMR0H = 0;
  4693   00768E  0E00               	movlw	0
  4694   007690  6ED4               	movwf	212,c	;volatile
  4695                           
  4696                           ;timers.c: 36:     TMR0L = 0;
  4697   007692  0E00               	movlw	0
  4698   007694  6ED3               	movwf	211,c	;volatile
  4699   007696  0012               	return		;funcret
  4700   007698                     __end_of_resetTimer0:
  4701                           	callstack 0
  4702                           
  4703 ;; *************** function _invert_action *****************
  4704 ;; Defined at:
  4705 ;;		line 186 in file "color.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  input_action    1    wreg     unsigned char 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  input_action    1    3[COMRAM] unsigned char 
  4710 ;;  output_actio    1    4[COMRAM] unsigned char 
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  1    wreg      unsigned char 
  4713 ;; Registers used:
  4714 ;;		wreg, status,2, status,0
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;Total ram usage:        4 bytes
  4725 ;; Hardware stack levels used: 1
  4726 ;; Hardware stack levels required when called: 2
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		_main
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           
  4734                           	psect	text18
  4735   007066                     __ptext18:
  4736                           	callstack 0
  4737   007066                     _invert_action:
  4738                           	callstack 28
  4739                           
  4740                           ;incstack = 0
  4741                           ;invert_action@input_action stored from wreg
  4742   007066  6E04               	movwf	invert_action@input_action^0,c
  4743   007068                     
  4744                           ;color.c: 187:     char output_action;;color.c: 188:     switch(input_action){
  4745   007068  EF52  F038         	goto	l5220
  4746   00706C                     l5204:
  4747                           
  4748                           ;color.c: 190:             output_action = 1;
  4749   00706C  0E01               	movlw	1
  4750   00706E  6E05               	movwf	invert_action@output_action^0,c
  4751                           
  4752                           ;color.c: 191:             break;
  4753   007070  EF7B  F038         	goto	l5222
  4754   007074                     l5206:
  4755                           
  4756                           ;color.c: 193:             output_action = 0;
  4757   007074  0E00               	movlw	0
  4758   007076  6E05               	movwf	invert_action@output_action^0,c
  4759                           
  4760                           ;color.c: 194:             break;
  4761   007078  EF7B  F038         	goto	l5222
  4762   00707C                     l5208:
  4763                           
  4764                           ;color.c: 196:             output_action = 2;
  4765   00707C  0E02               	movlw	2
  4766   00707E  6E05               	movwf	invert_action@output_action^0,c
  4767                           
  4768                           ;color.c: 197:             break;
  4769   007080  EF7B  F038         	goto	l5222
  4770   007084                     l5210:
  4771                           
  4772                           ;color.c: 199:             output_action = 8;
  4773   007084  0E08               	movlw	8
  4774   007086  6E05               	movwf	invert_action@output_action^0,c
  4775                           
  4776                           ;color.c: 200:             break;
  4777   007088  EF7B  F038         	goto	l5222
  4778   00708C                     l5212:
  4779                           
  4780                           ;color.c: 202:             output_action = 9;
  4781   00708C  0E09               	movlw	9
  4782   00708E  6E05               	movwf	invert_action@output_action^0,c
  4783                           
  4784                           ;color.c: 203:             break;
  4785   007090  EF7B  F038         	goto	l5222
  4786   007094                     l5214:
  4787                           
  4788                           ;color.c: 205:             output_action = 6;
  4789   007094  0E06               	movlw	6
  4790   007096  6E05               	movwf	invert_action@output_action^0,c
  4791                           
  4792                           ;color.c: 206:             break;
  4793   007098  EF7B  F038         	goto	l5222
  4794   00709C                     l5216:
  4795                           
  4796                           ;color.c: 208:             output_action = 5;
  4797   00709C  0E05               	movlw	5
  4798   00709E  6E05               	movwf	invert_action@output_action^0,c
  4799                           
  4800                           ;color.c: 209:             break;
  4801   0070A0  EF7B  F038         	goto	l5222
  4802   0070A4                     l5220:
  4803   0070A4  5004               	movf	invert_action@input_action^0,w,c
  4804   0070A6  6E02               	movwf	??_invert_action^0,c
  4805   0070A8  6A03               	clrf	(??_invert_action+1)^0,c
  4806                           
  4807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4808                           ; Switch size 1, requested type "simple"
  4809                           ; Number of cases is 1, Range of values is 0 to 0
  4810                           ; switch strategies available:
  4811                           ; Name         Instructions Cycles
  4812                           ; simple_byte            4     3 (average)
  4813                           ;	Chosen strategy is simple_byte
  4814   0070AA  5003               	movf	(??_invert_action+1)^0,w,c
  4815   0070AC  0A00               	xorlw	0	; case 0
  4816   0070AE  B4D8               	btfsc	status,2,c
  4817   0070B0  EF5C  F038         	goto	l7864
  4818   0070B4  EF7B  F038         	goto	l5222
  4819   0070B8                     l7864:
  4820                           
  4821                           ; Switch size 1, requested type "simple"
  4822                           ; Number of cases is 7, Range of values is 0 to 6
  4823                           ; switch strategies available:
  4824                           ; Name         Instructions Cycles
  4825                           ; simple_byte           22    12 (average)
  4826                           ;	Chosen strategy is simple_byte
  4827   0070B8  5002               	movf	??_invert_action^0,w,c
  4828   0070BA  0A00               	xorlw	0	; case 0
  4829   0070BC  B4D8               	btfsc	status,2,c
  4830   0070BE  EF36  F038         	goto	l5204
  4831   0070C2  0A01               	xorlw	1	; case 1
  4832   0070C4  B4D8               	btfsc	status,2,c
  4833   0070C6  EF3A  F038         	goto	l5206
  4834   0070CA  0A03               	xorlw	3	; case 2
  4835   0070CC  B4D8               	btfsc	status,2,c
  4836   0070CE  EF3E  F038         	goto	l5208
  4837   0070D2  0A01               	xorlw	1	; case 3
  4838   0070D4  B4D8               	btfsc	status,2,c
  4839   0070D6  EF42  F038         	goto	l5210
  4840   0070DA  0A07               	xorlw	7	; case 4
  4841   0070DC  B4D8               	btfsc	status,2,c
  4842   0070DE  EF46  F038         	goto	l5212
  4843   0070E2  0A01               	xorlw	1	; case 5
  4844   0070E4  B4D8               	btfsc	status,2,c
  4845   0070E6  EF4A  F038         	goto	l5214
  4846   0070EA  0A03               	xorlw	3	; case 6
  4847   0070EC  B4D8               	btfsc	status,2,c
  4848   0070EE  EF4E  F038         	goto	l5216
  4849   0070F2  EF7B  F038         	goto	l5222
  4850   0070F6                     l5222:
  4851                           
  4852                           ;color.c: 213:     return output_action;
  4853   0070F6  5005               	movf	invert_action@output_action^0,w,c
  4854   0070F8  0012               	return		;funcret
  4855   0070FA                     __end_of_invert_action:
  4856                           	callstack 0
  4857                           
  4858 ;; *************** function _initUSART4 *****************
  4859 ;; Defined at:
  4860 ;;		line 4 in file "serial.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;		None
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;		None
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		wreg, status,2
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4878 ;;Total ram usage:        0 bytes
  4879 ;; Hardware stack levels used: 1
  4880 ;; Hardware stack levels required when called: 2
  4881 ;; This function calls:
  4882 ;;		Nothing
  4883 ;; This function is called by:
  4884 ;;		_main
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text19
  4889   0075F0                     __ptext19:
  4890                           	callstack 0
  4891   0075F0                     _initUSART4:
  4892                           	callstack 28
  4893   0075F0                     
  4894                           ;serial.c: 8:     RC0PPS = 0x12;
  4895   0075F0  0E12               	movlw	18
  4896   0075F2  010E               	movlb	14	; () banked
  4897   0075F4  6F62               	movwf	98,b	;volatile
  4898                           
  4899                           ;serial.c: 9:     RX4PPS = 0x11;
  4900   0075F6  0E11               	movlw	17
  4901   0075F8  6F15               	movwf	21,b	;volatile
  4902   0075FA                     
  4903                           ; BSR set to: 14
  4904                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4905   0075FA  97E9               	bcf	233,3,b	;volatile
  4906   0075FC                     
  4907                           ; BSR set to: 14
  4908                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  4909   0075FC  95E8               	bcf	232,2,b	;volatile
  4910                           
  4911                           ;serial.c: 15:     SP4BRGL = 51;
  4912   0075FE  0E33               	movlw	51
  4913   007600  6FE5               	movwf	229,b	;volatile
  4914                           
  4915                           ;serial.c: 16:     SP4BRGH = 0;
  4916   007602  0E00               	movlw	0
  4917   007604  6FE6               	movwf	230,b	;volatile
  4918   007606                     
  4919                           ; BSR set to: 14
  4920                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  4921   007606  89E7               	bsf	231,4,b	;volatile
  4922   007608                     
  4923                           ; BSR set to: 14
  4924                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  4925   007608  8BE8               	bsf	232,5,b	;volatile
  4926   00760A                     
  4927                           ; BSR set to: 14
  4928                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  4929   00760A  8FE7               	bsf	231,7,b	;volatile
  4930   00760C                     
  4931                           ; BSR set to: 14
  4932   00760C  0012               	return		;funcret
  4933   00760E                     __end_of_initUSART4:
  4934                           	callstack 0
  4935                           
  4936 ;; *************** function _initDCmotorsPWM *****************
  4937 ;; Defined at:
  4938 ;;		line 6 in file "dc_motor.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  PWMperiod       2    1[COMRAM] int 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;		None
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  1    wreg      void 
  4945 ;; Registers used:
  4946 ;;		wreg, status,2
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4955 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4956 ;;Total ram usage:        2 bytes
  4957 ;; Hardware stack levels used: 1
  4958 ;; Hardware stack levels required when called: 2
  4959 ;; This function calls:
  4960 ;;		Nothing
  4961 ;; This function is called by:
  4962 ;;		_main
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text20
  4967   006F2A                     __ptext20:
  4968                           	callstack 0
  4969   006F2A                     _initDCmotorsPWM:
  4970                           	callstack 28
  4971   006F2A                     
  4972                           ;dc_motor.c: 10:     RE2PPS=0x05;
  4973   006F2A  0E05               	movlw	5
  4974   006F2C  010E               	movlb	14	; () banked
  4975   006F2E  6F74               	movwf	116,b	;volatile
  4976                           
  4977                           ;dc_motor.c: 11:     RE4PPS=0x06;
  4978   006F30  0E06               	movlw	6
  4979   006F32  6F76               	movwf	118,b	;volatile
  4980                           
  4981                           ;dc_motor.c: 12:     RC7PPS=0x07;
  4982   006F34  0E07               	movlw	7
  4983   006F36  6F69               	movwf	105,b	;volatile
  4984                           
  4985                           ;dc_motor.c: 13:     RG6PPS=0x08;
  4986   006F38  0E08               	movlw	8
  4987   006F3A  6F88               	movwf	136,b	;volatile
  4988                           
  4989                           ;dc_motor.c: 16:     T2CONbits.CKPS=0b100;
  4990   006F3C  50BD               	movf	189,w,c	;volatile
  4991   006F3E  0B8F               	andlw	-113
  4992   006F40  0940               	iorlw	64
  4993   006F42  6EBD               	movwf	189,c	;volatile
  4994                           
  4995                           ;dc_motor.c: 17:     T2HLTbits.MODE=0b00000;
  4996   006F44  0EE0               	movlw	-32
  4997   006F46  16BE               	andwf	190,f,c	;volatile
  4998                           
  4999                           ;dc_motor.c: 18:     T2CLKCONbits.CS=0b0001;
  5000   006F48  50BF               	movf	191,w,c	;volatile
  5001   006F4A  0BF0               	andlw	-16
  5002   006F4C  0901               	iorlw	1
  5003   006F4E  6EBF               	movwf	191,c	;volatile
  5004                           
  5005                           ;dc_motor.c: 22:     T2PR=99;
  5006   006F50  0E63               	movlw	99
  5007   006F52  6EBC               	movwf	188,c	;volatile
  5008   006F54                     
  5009                           ; BSR set to: 14
  5010                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  5011   006F54  8EBD               	bsf	189,7,c	;volatile
  5012                           
  5013                           ;dc_motor.c: 27:     CCPR1H=0;
  5014   006F56  0E00               	movlw	0
  5015   006F58  6EAA               	movwf	170,c	;volatile
  5016                           
  5017                           ;dc_motor.c: 28:     CCPR2H=0;
  5018   006F5A  0E00               	movlw	0
  5019   006F5C  6EA6               	movwf	166,c	;volatile
  5020                           
  5021                           ;dc_motor.c: 29:     CCPR3H=0;
  5022   006F5E  0E00               	movlw	0
  5023   006F60  010F               	movlb	15	; () banked
  5024   006F62  6F25               	movwf	37,b	;volatile
  5025                           
  5026                           ;dc_motor.c: 30:     CCPR4H=0;
  5027   006F64  0E00               	movlw	0
  5028   006F66  6F21               	movwf	33,b	;volatile
  5029                           
  5030                           ;dc_motor.c: 33:     CCPTMRS0bits.C1TSEL=0;
  5031   006F68  0EFC               	movlw	-4
  5032   006F6A  16AD               	andwf	173,f,c	;volatile
  5033                           
  5034                           ;dc_motor.c: 34:     CCPTMRS0bits.C2TSEL=0;
  5035   006F6C  0EF3               	movlw	-13
  5036   006F6E  16AD               	andwf	173,f,c	;volatile
  5037                           
  5038                           ;dc_motor.c: 35:     CCPTMRS0bits.C3TSEL=0;
  5039   006F70  0ECF               	movlw	-49
  5040   006F72  16AD               	andwf	173,f,c	;volatile
  5041                           
  5042                           ;dc_motor.c: 36:     CCPTMRS0bits.C4TSEL=0;
  5043   006F74  0E3F               	movlw	-193
  5044   006F76  16AD               	andwf	173,f,c	;volatile
  5045   006F78                     
  5046                           ; BSR set to: 15
  5047                           ;dc_motor.c: 39:     CCP1CONbits.FMT=1;
  5048   006F78  88AB               	bsf	171,4,c	;volatile
  5049                           
  5050                           ;dc_motor.c: 40:     CCP1CONbits.CCP1MODE=0b1100;
  5051   006F7A  50AB               	movf	171,w,c	;volatile
  5052   006F7C  0BF0               	andlw	-16
  5053   006F7E  090C               	iorlw	12
  5054   006F80  6EAB               	movwf	171,c	;volatile
  5055   006F82                     
  5056                           ; BSR set to: 15
  5057                           ;dc_motor.c: 41:     CCP1CONbits.EN=1;
  5058   006F82  8EAB               	bsf	171,7,c	;volatile
  5059   006F84                     
  5060                           ; BSR set to: 15
  5061                           ;dc_motor.c: 43:     CCP2CONbits.FMT=1;
  5062   006F84  88A7               	bsf	167,4,c	;volatile
  5063                           
  5064                           ;dc_motor.c: 44:     CCP2CONbits.CCP2MODE=0b1100;
  5065   006F86  50A7               	movf	167,w,c	;volatile
  5066   006F88  0BF0               	andlw	-16
  5067   006F8A  090C               	iorlw	12
  5068   006F8C  6EA7               	movwf	167,c	;volatile
  5069   006F8E                     
  5070                           ; BSR set to: 15
  5071                           ;dc_motor.c: 45:     CCP2CONbits.EN=1;
  5072   006F8E  8EA7               	bsf	167,7,c	;volatile
  5073   006F90                     
  5074                           ; BSR set to: 15
  5075                           ;dc_motor.c: 47:     CCP3CONbits.FMT=1;
  5076   006F90  8926               	bsf	38,4,b	;volatile
  5077                           
  5078                           ;dc_motor.c: 48:     CCP3CONbits.CCP3MODE=0b1100;
  5079   006F92  5126               	movf	38,w,b	;volatile
  5080   006F94  0BF0               	andlw	-16
  5081   006F96  090C               	iorlw	12
  5082   006F98  6F26               	movwf	38,b	;volatile
  5083   006F9A                     
  5084                           ; BSR set to: 15
  5085                           ;dc_motor.c: 49:     CCP3CONbits.EN=1;
  5086   006F9A  8F26               	bsf	38,7,b	;volatile
  5087   006F9C                     
  5088                           ; BSR set to: 15
  5089                           ;dc_motor.c: 51:     CCP4CONbits.FMT=1;
  5090   006F9C  8922               	bsf	34,4,b	;volatile
  5091                           
  5092                           ;dc_motor.c: 52:     CCP4CONbits.CCP4MODE=0b1100;
  5093   006F9E  5122               	movf	34,w,b	;volatile
  5094   006FA0  0BF0               	andlw	-16
  5095   006FA2  090C               	iorlw	12
  5096   006FA4  6F22               	movwf	34,b	;volatile
  5097   006FA6                     
  5098                           ; BSR set to: 15
  5099                           ;dc_motor.c: 53:     CCP4CONbits.EN=1;
  5100   006FA6  8F22               	bsf	34,7,b	;volatile
  5101                           
  5102                           ;dc_motor.c: 56:     RE2PPS=0x05;
  5103   006FA8  0E05               	movlw	5
  5104   006FAA  010E               	movlb	14	; () banked
  5105   006FAC  6F74               	movwf	116,b	;volatile
  5106                           
  5107                           ;dc_motor.c: 57:     RE4PPS=0x06;
  5108   006FAE  0E06               	movlw	6
  5109   006FB0  6F76               	movwf	118,b	;volatile
  5110                           
  5111                           ;dc_motor.c: 58:     RC7PPS=0x07;
  5112   006FB2  0E07               	movlw	7
  5113   006FB4  6F69               	movwf	105,b	;volatile
  5114                           
  5115                           ;dc_motor.c: 59:     RG6PPS=0x08;
  5116   006FB6  0E08               	movlw	8
  5117   006FB8  6F88               	movwf	136,b	;volatile
  5118   006FBA                     
  5119                           ; BSR set to: 14
  5120                           ;dc_motor.c: 62:     TRISEbits.TRISE2=0;
  5121   006FBA  9485               	bcf	133,2,c	;volatile
  5122   006FBC                     
  5123                           ; BSR set to: 14
  5124                           ;dc_motor.c: 63:     TRISEbits.TRISE4=0;
  5125   006FBC  9885               	bcf	133,4,c	;volatile
  5126   006FBE                     
  5127                           ; BSR set to: 14
  5128                           ;dc_motor.c: 64:     TRISCbits.TRISC7=0;
  5129   006FBE  9E83               	bcf	131,7,c	;volatile
  5130   006FC0                     
  5131                           ; BSR set to: 14
  5132                           ;dc_motor.c: 65:     TRISGbits.TRISG6=0;
  5133   006FC0  9C87               	bcf	135,6,c	;volatile
  5134   006FC2                     
  5135                           ; BSR set to: 14
  5136                           ;dc_motor.c: 68:     LATEbits.LATE2=0;
  5137   006FC2  947D               	bcf	125,2,c	;volatile
  5138   006FC4                     
  5139                           ; BSR set to: 14
  5140                           ;dc_motor.c: 69:     LATCbits.LATC7=0;
  5141   006FC4  9E7B               	bcf	123,7,c	;volatile
  5142   006FC6                     
  5143                           ; BSR set to: 14
  5144                           ;dc_motor.c: 70:     LATEbits.LATE4=0;
  5145   006FC6  987D               	bcf	125,4,c	;volatile
  5146   006FC8                     
  5147                           ; BSR set to: 14
  5148                           ;dc_motor.c: 71:     LATGbits.LATG6=0;
  5149   006FC8  9C7F               	bcf	127,6,c	;volatile
  5150   006FCA                     
  5151                           ; BSR set to: 14
  5152   006FCA  0012               	return		;funcret
  5153   006FCC                     __end_of_initDCmotorsPWM:
  5154                           	callstack 0
  5155                           
  5156 ;; *************** function _inch_forward *****************
  5157 ;; Defined at:
  5158 ;;		line 227 in file "dc_motor.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  5161 ;;		 -> main@motorL(9), 
  5162 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  5163 ;;		 -> main@motorR(9), 
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1    wreg      void 
  5168 ;; Registers used:
  5169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5175 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5177 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5178 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5179 ;;Total ram usage:        6 bytes
  5180 ;; Hardware stack levels used: 1
  5181 ;; Hardware stack levels required when called: 5
  5182 ;; This function calls:
  5183 ;;		_setMotorPWM
  5184 ;;		_stop
  5185 ;; This function is called by:
  5186 ;;		_main
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text21
  5191   006B56                     __ptext21:
  5192                           	callstack 0
  5193   006B56                     _inch_forward:
  5194                           	callstack 25
  5195   006B56                     
  5196                           ;dc_motor.c: 228:     mL->direction = 0;
  5197   006B56  EE20 F001          	lfsr	2,1
  5198   006B5A  5019               	movf	inch_forward@mL^0,w,c
  5199   006B5C  26D9               	addwf	fsr2l,f,c
  5200   006B5E  501A               	movf	(inch_forward@mL+1)^0,w,c
  5201   006B60  22DA               	addwfc	fsr2h,f,c
  5202   006B62  6ADF               	clrf	indf2,c
  5203                           
  5204                           ;dc_motor.c: 229:     mR->direction = 0;
  5205   006B64  EE20 F001          	lfsr	2,1
  5206   006B68  501B               	movf	inch_forward@mR^0,w,c
  5207   006B6A  26D9               	addwf	fsr2l,f,c
  5208   006B6C  501C               	movf	(inch_forward@mR+1)^0,w,c
  5209   006B6E  22DA               	addwfc	fsr2h,f,c
  5210   006B70  6ADF               	clrf	indf2,c
  5211                           
  5212                           ;dc_motor.c: 231:     while ((mL->power) < 20 || (mR->power) < 20){
  5213   006B72  EFF1  F035         	goto	l262
  5214   006B76                     l5422:
  5215                           
  5216                           ;dc_motor.c: 232:         if ((mL->power) < 20) (mL->power) += 1;
  5217   006B76  C019  FFD9         	movff	inch_forward@mL,fsr2l
  5218   006B7A  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  5219   006B7E  0E14               	movlw	20
  5220   006B80  60DF               	cpfslt	indf2,c
  5221   006B82  EFC5  F035         	goto	u5591
  5222   006B86  EFC7  F035         	goto	u5590
  5223   006B8A                     u5591:
  5224   006B8A  EFCC  F035         	goto	l5426
  5225   006B8E                     u5590:
  5226   006B8E  C019  FFD9         	movff	inch_forward@mL,fsr2l
  5227   006B92  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  5228   006B96  2ADF               	incf	indf2,f,c
  5229   006B98                     l5426:
  5230                           
  5231                           ;dc_motor.c: 233:         if ((mR->power) < 20) (mR->power) += 1;
  5232   006B98  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  5233   006B9C  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  5234   006BA0  0E14               	movlw	20
  5235   006BA2  60DF               	cpfslt	indf2,c
  5236   006BA4  EFD6  F035         	goto	u5601
  5237   006BA8  EFD8  F035         	goto	u5600
  5238   006BAC                     u5601:
  5239   006BAC  EFDD  F035         	goto	l5430
  5240   006BB0                     u5600:
  5241   006BB0  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  5242   006BB4  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  5243   006BB8  2ADF               	incf	indf2,f,c
  5244   006BBA                     l5430:
  5245                           
  5246                           ;dc_motor.c: 235:         setMotorPWM(mL);
  5247   006BBA  C019  F00F         	movff	inch_forward@mL,setMotorPWM@m
  5248   006BBE  C01A  F010         	movff	inch_forward@mL+1,setMotorPWM@m+1
  5249   006BC2  EC99  F031         	call	_setMotorPWM	;wreg free
  5250   006BC6                     
  5251                           ;dc_motor.c: 236:         setMotorPWM(mR);
  5252   006BC6  C01B  F00F         	movff	inch_forward@mR,setMotorPWM@m
  5253   006BCA  C01C  F010         	movff	inch_forward@mR+1,setMotorPWM@m+1
  5254   006BCE  EC99  F031         	call	_setMotorPWM	;wreg free
  5255   006BD2                     
  5256                           ;dc_motor.c: 237:         _delay((unsigned long)((1)*(64000000/4000.0)));
  5257   006BD2  0E15               	movlw	21
  5258   006BD4  6E1D               	movwf	??_inch_forward^0,c
  5259   006BD6  0EC6               	movlw	198
  5260   006BD8                     u8357:
  5261   006BD8  2EE8               	decfsz	wreg,f,c
  5262   006BDA  D7FE               	bra	u8357
  5263   006BDC  2E1D               	decfsz	??_inch_forward^0,f,c
  5264   006BDE  D7FC               	bra	u8357
  5265   006BE0  D000               	nop2	
  5266   006BE2                     l262:
  5267                           
  5268                           ;dc_motor.c: 231:     while ((mL->power) < 20 || (mR->power) < 20){
  5269   006BE2  C019  FFD9         	movff	inch_forward@mL,fsr2l
  5270   006BE6  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  5271   006BEA  0E13               	movlw	19
  5272   006BEC  64DF               	cpfsgt	indf2,c
  5273   006BEE  EFFB  F035         	goto	u5611
  5274   006BF2  EFFD  F035         	goto	u5610
  5275   006BF6                     u5611:
  5276   006BF6  EFBB  F035         	goto	l5422
  5277   006BFA                     u5610:
  5278   006BFA  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  5279   006BFE  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  5280   006C02  0E13               	movlw	19
  5281   006C04  64DF               	cpfsgt	indf2,c
  5282   006C06  EF07  F036         	goto	u5621
  5283   006C0A  EF09  F036         	goto	u5620
  5284   006C0E                     u5621:
  5285   006C0E  EFBB  F035         	goto	l5422
  5286   006C12                     u5620:
  5287   006C12                     
  5288                           ;dc_motor.c: 239:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5289   006C12  0E05               	movlw	5
  5290   006C14  6E1E               	movwf	(??_inch_forward+1)^0,c
  5291   006C16  0E0F               	movlw	15
  5292   006C18  6E1D               	movwf	??_inch_forward^0,c
  5293   006C1A  0EF1               	movlw	241
  5294   006C1C                     u8367:
  5295   006C1C  2EE8               	decfsz	wreg,f,c
  5296   006C1E  D7FE               	bra	u8367
  5297   006C20  2E1D               	decfsz	??_inch_forward^0,f,c
  5298   006C22  D7FC               	bra	u8367
  5299   006C24  2E1E               	decfsz	(??_inch_forward+1)^0,f,c
  5300   006C26  D7FA               	bra	u8367
  5301   006C28  0000               	nop	
  5302   006C2A                     
  5303                           ;dc_motor.c: 240:     stop(mL, mR);
  5304   006C2A  C019  F015         	movff	inch_forward@mL,stop@mL
  5305   006C2E  C01A  F016         	movff	inch_forward@mL+1,stop@mL+1
  5306   006C32  C01B  F017         	movff	inch_forward@mR,stop@mR
  5307   006C36  C01C  F018         	movff	inch_forward@mR+1,stop@mR+1
  5308   006C3A  ECE6  F037         	call	_stop	;wreg free
  5309   006C3E  0012               	return		;funcret
  5310   006C40                     __end_of_inch_forward:
  5311                           	callstack 0
  5312                           
  5313 ;; *************** function _stop *****************
  5314 ;; Defined at:
  5315 ;;		line 114 in file "dc_motor.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  5318 ;;		 -> main@motorL(9), 
  5319 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  5320 ;;		 -> main@motorR(9), 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  1    wreg      void 
  5325 ;; Registers used:
  5326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5332 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5335 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5336 ;;Total ram usage:        4 bytes
  5337 ;; Hardware stack levels used: 1
  5338 ;; Hardware stack levels required when called: 4
  5339 ;; This function calls:
  5340 ;;		_setMotorPWM
  5341 ;; This function is called by:
  5342 ;;		_turn_left_90
  5343 ;;		_turn_right_90
  5344 ;;		_turn_left_135
  5345 ;;		_turn_right_135
  5346 ;;		_reverse_after_read
  5347 ;;		_reverse_one_square
  5348 ;;		_inch_forward
  5349 ;;		_main
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           	psect	text22
  5354   006FCC                     __ptext22:
  5355                           	callstack 0
  5356   006FCC                     _stop:
  5357                           	callstack 25
  5358   006FCC                     
  5359                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  5360   006FCC  EF1A  F038         	goto	l5022
  5361   006FD0                     l5008:
  5362                           
  5363                           ;dc_motor.c: 116:         if ((mL->power) > 0) (mL->power) -= 1;
  5364   006FD0  C015  FFD9         	movff	stop@mL,fsr2l
  5365   006FD4  C016  FFDA         	movff	stop@mL+1,fsr2h
  5366   006FD8  50DF               	movf	indf2,w,c
  5367   006FDA  B4D8               	btfsc	status,2,c
  5368   006FDC  EFF2  F037         	goto	u5141
  5369   006FE0  EFF4  F037         	goto	u5140
  5370   006FE4                     u5141:
  5371   006FE4  EFF9  F037         	goto	l5012
  5372   006FE8                     u5140:
  5373   006FE8  C015  FFD9         	movff	stop@mL,fsr2l
  5374   006FEC  C016  FFDA         	movff	stop@mL+1,fsr2h
  5375   006FF0  06DF               	decf	indf2,f,c
  5376   006FF2                     l5012:
  5377                           
  5378                           ;dc_motor.c: 117:         if ((mR->power) > 0) (mR->power) -= 1;
  5379   006FF2  C017  FFD9         	movff	stop@mR,fsr2l
  5380   006FF6  C018  FFDA         	movff	stop@mR+1,fsr2h
  5381   006FFA  50DF               	movf	indf2,w,c
  5382   006FFC  B4D8               	btfsc	status,2,c
  5383   006FFE  EF03  F038         	goto	u5151
  5384   007002  EF05  F038         	goto	u5150
  5385   007006                     u5151:
  5386   007006  EF0A  F038         	goto	l5016
  5387   00700A                     u5150:
  5388   00700A  C017  FFD9         	movff	stop@mR,fsr2l
  5389   00700E  C018  FFDA         	movff	stop@mR+1,fsr2h
  5390   007012  06DF               	decf	indf2,f,c
  5391   007014                     l5016:
  5392                           
  5393                           ;dc_motor.c: 119:         setMotorPWM(mL);
  5394   007014  C015  F00F         	movff	stop@mL,setMotorPWM@m
  5395   007018  C016  F010         	movff	stop@mL+1,setMotorPWM@m+1
  5396   00701C  EC99  F031         	call	_setMotorPWM	;wreg free
  5397   007020                     
  5398                           ;dc_motor.c: 120:         setMotorPWM(mR);
  5399   007020  C017  F00F         	movff	stop@mR,setMotorPWM@m
  5400   007024  C018  F010         	movff	stop@mR+1,setMotorPWM@m+1
  5401   007028  EC99  F031         	call	_setMotorPWM	;wreg free
  5402   00702C                     
  5403                           ;dc_motor.c: 121:         _delay((unsigned long)((25)*(64000000/4000000.0)));
  5404   00702C  0E85               	movlw	133
  5405   00702E                     u8377:
  5406   00702E  2EE8               	decfsz	wreg,f,c
  5407   007030  D7FE               	bra	u8377
  5408   007032  0000               	nop	
  5409   007034                     l5022:
  5410                           
  5411                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  5412   007034  C015  FFD9         	movff	stop@mL,fsr2l
  5413   007038  C016  FFDA         	movff	stop@mL+1,fsr2h
  5414   00703C  50DF               	movf	indf2,w,c
  5415   00703E  A4D8               	btfss	status,2,c
  5416   007040  EF24  F038         	goto	u5161
  5417   007044  EF26  F038         	goto	u5160
  5418   007048                     u5161:
  5419   007048  EFE8  F037         	goto	l5008
  5420   00704C                     u5160:
  5421   00704C  C017  FFD9         	movff	stop@mR,fsr2l
  5422   007050  C018  FFDA         	movff	stop@mR+1,fsr2h
  5423   007054  50DF               	movf	indf2,w,c
  5424   007056  A4D8               	btfss	status,2,c
  5425   007058  EF30  F038         	goto	u5171
  5426   00705C  EF32  F038         	goto	u5170
  5427   007060                     u5171:
  5428   007060  EFE8  F037         	goto	l5008
  5429   007064                     u5170:
  5430   007064  0012               	return		;funcret
  5431   007066                     __end_of_stop:
  5432                           	callstack 0
  5433                           
  5434 ;; *************** function _get16bitTMR0val *****************
  5435 ;; Defined at:
  5436 ;;		line 27 in file "timers.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;		None
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  timer_val       2    5[COMRAM] unsigned int 
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  2    1[COMRAM] unsigned int 
  5443 ;; Registers used:
  5444 ;;		wreg, status,2, status,0
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5453 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5454 ;;Total ram usage:        6 bytes
  5455 ;; Hardware stack levels used: 1
  5456 ;; Hardware stack levels required when called: 2
  5457 ;; This function calls:
  5458 ;;		Nothing
  5459 ;; This function is called by:
  5460 ;;		_main
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           	psect	text23
  5465   00760E                     __ptext23:
  5466                           	callstack 0
  5467   00760E                     _get16bitTMR0val:
  5468                           	callstack 28
  5469   00760E                     
  5470                           ;timers.c: 29:     unsigned int timer_val = TMR0L;
  5471   00760E  CFD3 F006          	movff	4051,get16bitTMR0val@timer_val	;volatile
  5472   007612  6A07               	clrf	(get16bitTMR0val@timer_val+1)^0,c
  5473   007614                     
  5474                           ;timers.c: 30:     timer_val |= (TMR0H << 8);
  5475   007614  50D4               	movf	212,w,c	;volatile
  5476   007616  6E05               	movwf	(??_get16bitTMR0val+1)^0,c
  5477   007618  6A04               	clrf	??_get16bitTMR0val^0,c
  5478   00761A  5004               	movf	??_get16bitTMR0val^0,w,c
  5479   00761C  1206               	iorwf	get16bitTMR0val@timer_val^0,f,c
  5480   00761E  5005               	movf	(??_get16bitTMR0val+1)^0,w,c
  5481   007620  1207               	iorwf	(get16bitTMR0val@timer_val+1)^0,f,c
  5482   007622                     
  5483                           ;timers.c: 31:     return timer_val;
  5484   007622  C006  F002         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  5485   007626  C007  F003         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  5486   00762A  0012               	return		;funcret
  5487   00762C                     __end_of_get16bitTMR0val:
  5488                           	callstack 0
  5489                           
  5490 ;; *************** function _fullSpeedAhead *****************
  5491 ;; Defined at:
  5492 ;;		line 99 in file "dc_motor.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  5495 ;;		 -> main@motorL(9), 
  5496 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  5497 ;;		 -> main@motorR(9), 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;		None
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  1    wreg      void 
  5502 ;; Registers used:
  5503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5509 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5512 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5513 ;;Total ram usage:        5 bytes
  5514 ;; Hardware stack levels used: 1
  5515 ;; Hardware stack levels required when called: 4
  5516 ;; This function calls:
  5517 ;;		_setMotorPWM
  5518 ;; This function is called by:
  5519 ;;		_main
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text24
  5524   006D04                     __ptext24:
  5525                           	callstack 0
  5526   006D04                     _fullSpeedAhead:
  5527                           	callstack 26
  5528   006D04                     
  5529                           ;dc_motor.c: 100:     mL->direction = 0;
  5530   006D04  EE20 F001          	lfsr	2,1
  5531   006D08  5015               	movf	fullSpeedAhead@mL^0,w,c
  5532   006D0A  26D9               	addwf	fsr2l,f,c
  5533   006D0C  5016               	movf	(fullSpeedAhead@mL+1)^0,w,c
  5534   006D0E  22DA               	addwfc	fsr2h,f,c
  5535   006D10  6ADF               	clrf	indf2,c
  5536                           
  5537                           ;dc_motor.c: 101:     mR->direction = 0;
  5538   006D12  EE20 F001          	lfsr	2,1
  5539   006D16  5017               	movf	fullSpeedAhead@mR^0,w,c
  5540   006D18  26D9               	addwf	fsr2l,f,c
  5541   006D1A  5018               	movf	(fullSpeedAhead@mR+1)^0,w,c
  5542   006D1C  22DA               	addwfc	fsr2h,f,c
  5543   006D1E  6ADF               	clrf	indf2,c
  5544                           
  5545                           ;dc_motor.c: 103:     while ((mL->power) < 70 || (mR->power) < 70){
  5546   006D20  EFC7  F036         	goto	l198
  5547   006D24                     l5268:
  5548                           
  5549                           ;dc_motor.c: 104:         if ((mL->power) < 70) (mL->power) += 1;
  5550   006D24  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5551   006D28  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5552   006D2C  0E46               	movlw	70
  5553   006D2E  60DF               	cpfslt	indf2,c
  5554   006D30  EF9C  F036         	goto	u5311
  5555   006D34  EF9E  F036         	goto	u5310
  5556   006D38                     u5311:
  5557   006D38  EFA3  F036         	goto	l5272
  5558   006D3C                     u5310:
  5559   006D3C  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5560   006D40  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5561   006D44  2ADF               	incf	indf2,f,c
  5562   006D46                     l5272:
  5563                           
  5564                           ;dc_motor.c: 105:         if ((mR->power) < 70) (mR->power) += 1;
  5565   006D46  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5566   006D4A  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5567   006D4E  0E46               	movlw	70
  5568   006D50  60DF               	cpfslt	indf2,c
  5569   006D52  EFAD  F036         	goto	u5321
  5570   006D56  EFAF  F036         	goto	u5320
  5571   006D5A                     u5321:
  5572   006D5A  EFB4  F036         	goto	l5276
  5573   006D5E                     u5320:
  5574   006D5E  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5575   006D62  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5576   006D66  2ADF               	incf	indf2,f,c
  5577   006D68                     l5276:
  5578                           
  5579                           ;dc_motor.c: 107:         setMotorPWM(mL);
  5580   006D68  C015  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  5581   006D6C  C016  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  5582   006D70  EC99  F031         	call	_setMotorPWM	;wreg free
  5583   006D74                     
  5584                           ;dc_motor.c: 108:         setMotorPWM(mR);
  5585   006D74  C017  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  5586   006D78  C018  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  5587   006D7C  EC99  F031         	call	_setMotorPWM	;wreg free
  5588   006D80                     
  5589                           ;dc_motor.c: 109:         _delay((unsigned long)((2)*(64000000/4000.0)));
  5590   006D80  0E2A               	movlw	42
  5591   006D82  6E19               	movwf	??_fullSpeedAhead^0,c
  5592   006D84  0E8E               	movlw	142
  5593   006D86                     u8387:
  5594   006D86  2EE8               	decfsz	wreg,f,c
  5595   006D88  D7FE               	bra	u8387
  5596   006D8A  2E19               	decfsz	??_fullSpeedAhead^0,f,c
  5597   006D8C  D7FC               	bra	u8387
  5598   006D8E                     l198:
  5599                           
  5600                           ;dc_motor.c: 103:     while ((mL->power) < 70 || (mR->power) < 70){
  5601   006D8E  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5602   006D92  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5603   006D96  0E45               	movlw	69
  5604   006D98  64DF               	cpfsgt	indf2,c
  5605   006D9A  EFD1  F036         	goto	u5331
  5606   006D9E  EFD3  F036         	goto	u5330
  5607   006DA2                     u5331:
  5608   006DA2  EF92  F036         	goto	l5268
  5609   006DA6                     u5330:
  5610   006DA6  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5611   006DAA  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5612   006DAE  0E45               	movlw	69
  5613   006DB0  64DF               	cpfsgt	indf2,c
  5614   006DB2  EFDD  F036         	goto	u5341
  5615   006DB6  EFDF  F036         	goto	u5340
  5616   006DBA                     u5341:
  5617   006DBA  EF92  F036         	goto	l5268
  5618   006DBE                     u5340:
  5619   006DBE  0012               	return		;funcret
  5620   006DC0                     __end_of_fullSpeedAhead:
  5621                           	callstack 0
  5622                           
  5623 ;; *************** function _setMotorPWM *****************
  5624 ;; Defined at:
  5625 ;;		line 76 in file "dc_motor.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  m               2   14[COMRAM] PTR struct DC_motor
  5628 ;;		 -> main@motorR(9), main@motorL(9), 
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;  negDuty         1   19[COMRAM] unsigned char 
  5631 ;;  posDuty         1   18[COMRAM] unsigned char 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      void 
  5634 ;; Registers used:
  5635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5644 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5645 ;;Total ram usage:        6 bytes
  5646 ;; Hardware stack levels used: 1
  5647 ;; Hardware stack levels required when called: 3
  5648 ;; This function calls:
  5649 ;;		___lwdiv
  5650 ;;		___wmul
  5651 ;; This function is called by:
  5652 ;;		_fullSpeedAhead
  5653 ;;		_stop
  5654 ;;		_turn_left_90
  5655 ;;		_turn_right_90
  5656 ;;		_turn_left_135
  5657 ;;		_turn_right_135
  5658 ;;		_reverse_after_read
  5659 ;;		_reverse_one_square
  5660 ;;		_inch_forward
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           	psect	text25
  5665   006332                     __ptext25:
  5666                           	callstack 0
  5667   006332                     _setMotorPWM:
  5668                           	callstack 25
  5669   006332                     
  5670                           ;dc_motor.c: 76: void setMotorPWM(struct DC_motor *m);dc_motor.c: 77: {;dc_motor.c: 78: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 80:     if(m->brakemode) {
  5671   006332  EE20 F002          	lfsr	2,2
  5672   006336  500F               	movf	setMotorPWM@m^0,w,c
  5673   006338  26D9               	addwf	fsr2l,f,c
  5674   00633A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5675   00633C  22DA               	addwfc	fsr2h,f,c
  5676   00633E  50DF               	movf	indf2,w,c
  5677   006340  B4D8               	btfsc	status,2,c
  5678   006342  EFA5  F031         	goto	u3981
  5679   006346  EFA7  F031         	goto	u3980
  5680   00634A                     u3981:
  5681   00634A  EFDB  F031         	goto	l4230
  5682   00634E                     u3980:
  5683   00634E                     
  5684                           ;dc_motor.c: 81:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  5685   00634E  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  5686   006352  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5687   006356  50DF               	movf	indf2,w,c
  5688   006358  6E11               	movwf	??_setMotorPWM^0,c
  5689   00635A  5011               	movf	??_setMotorPWM^0,w,c
  5690   00635C  6E02               	movwf	___wmul@multiplier^0,c
  5691   00635E  6A03               	clrf	(___wmul@multiplier+1)^0,c
  5692   006360  EE20 F003          	lfsr	2,3
  5693   006364  500F               	movf	setMotorPWM@m^0,w,c
  5694   006366  26D9               	addwf	fsr2l,f,c
  5695   006368  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5696   00636A  22DA               	addwfc	fsr2h,f,c
  5697   00636C  CFDE F004          	movff	postinc2,___wmul@multiplicand
  5698   006370  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  5699   006374  ECC5  F03A         	call	___wmul	;wreg free
  5700   006378  C002  F008         	movff	?___wmul,___lwdiv@dividend
  5701   00637C  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  5702   006380  0E00               	movlw	0
  5703   006382  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  5704   006384  0E64               	movlw	100
  5705   006386  6E0A               	movwf	___lwdiv@divisor^0,c
  5706   006388  EC7D  F038         	call	___lwdiv	;wreg free
  5707   00638C  EE20 F003          	lfsr	2,3
  5708   006390  500F               	movf	setMotorPWM@m^0,w,c
  5709   006392  26D9               	addwf	fsr2l,f,c
  5710   006394  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5711   006396  22DA               	addwfc	fsr2h,f,c
  5712   006398  50DF               	movf	indf2,w,c
  5713   00639A  6E12               	movwf	(??_setMotorPWM+1)^0,c
  5714   00639C  5008               	movf	?___lwdiv^0,w,c
  5715   00639E  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  5716   0063A0  6E13               	movwf	setMotorPWM@posDuty^0,c
  5717   0063A2                     
  5718                           ;dc_motor.c: 82:         negDuty=m->PWMperiod;
  5719   0063A2  EE20 F003          	lfsr	2,3
  5720   0063A6  500F               	movf	setMotorPWM@m^0,w,c
  5721   0063A8  26D9               	addwf	fsr2l,f,c
  5722   0063AA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5723   0063AC  22DA               	addwfc	fsr2h,f,c
  5724   0063AE  50DF               	movf	indf2,w,c
  5725   0063B0  6E14               	movwf	setMotorPWM@negDuty^0,c
  5726                           
  5727                           ;dc_motor.c: 83:     }
  5728   0063B2  EFFE  F031         	goto	l4234
  5729   0063B6                     l4230:
  5730                           
  5731                           ;dc_motor.c: 85:         posDuty=0;
  5732   0063B6  0E00               	movlw	0
  5733   0063B8  6E13               	movwf	setMotorPWM@posDuty^0,c
  5734   0063BA                     
  5735                           ;dc_motor.c: 86:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  5736   0063BA  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  5737   0063BE  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5738   0063C2  50DF               	movf	indf2,w,c
  5739   0063C4  6E11               	movwf	??_setMotorPWM^0,c
  5740   0063C6  5011               	movf	??_setMotorPWM^0,w,c
  5741   0063C8  6E02               	movwf	___wmul@multiplier^0,c
  5742   0063CA  6A03               	clrf	(___wmul@multiplier+1)^0,c
  5743   0063CC  EE20 F003          	lfsr	2,3
  5744   0063D0  500F               	movf	setMotorPWM@m^0,w,c
  5745   0063D2  26D9               	addwf	fsr2l,f,c
  5746   0063D4  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5747   0063D6  22DA               	addwfc	fsr2h,f,c
  5748   0063D8  CFDE F004          	movff	postinc2,___wmul@multiplicand
  5749   0063DC  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  5750   0063E0  ECC5  F03A         	call	___wmul	;wreg free
  5751   0063E4  C002  F008         	movff	?___wmul,___lwdiv@dividend
  5752   0063E8  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  5753   0063EC  0E00               	movlw	0
  5754   0063EE  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  5755   0063F0  0E64               	movlw	100
  5756   0063F2  6E0A               	movwf	___lwdiv@divisor^0,c
  5757   0063F4  EC7D  F038         	call	___lwdiv	;wreg free
  5758   0063F8  5008               	movf	?___lwdiv^0,w,c
  5759   0063FA  6E14               	movwf	setMotorPWM@negDuty^0,c
  5760   0063FC                     l4234:
  5761                           
  5762                           ;dc_motor.c: 89:     if (m->direction) {
  5763   0063FC  EE20 F001          	lfsr	2,1
  5764   006400  500F               	movf	setMotorPWM@m^0,w,c
  5765   006402  26D9               	addwf	fsr2l,f,c
  5766   006404  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5767   006406  22DA               	addwfc	fsr2h,f,c
  5768   006408  50DF               	movf	indf2,w,c
  5769   00640A  B4D8               	btfsc	status,2,c
  5770   00640C  EF0A  F032         	goto	u3991
  5771   006410  EF0C  F032         	goto	u3990
  5772   006414                     u3991:
  5773   006414  EF2E  F032         	goto	l4238
  5774   006418                     u3990:
  5775   006418                     
  5776                           ;dc_motor.c: 90:         *(m->posDutyHighByte)=posDuty;
  5777   006418  EE20 F005          	lfsr	2,5
  5778   00641C  500F               	movf	setMotorPWM@m^0,w,c
  5779   00641E  26D9               	addwf	fsr2l,f,c
  5780   006420  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5781   006422  22DA               	addwfc	fsr2h,f,c
  5782   006424  CFDE F011          	movff	postinc2,??_setMotorPWM
  5783   006428  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5784   00642C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5785   006430  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5786   006434  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  5787                           
  5788                           ;dc_motor.c: 91:         *(m->negDutyHighByte)=negDuty;
  5789   006438  EE20 F007          	lfsr	2,7
  5790   00643C  500F               	movf	setMotorPWM@m^0,w,c
  5791   00643E  26D9               	addwf	fsr2l,f,c
  5792   006440  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5793   006442  22DA               	addwfc	fsr2h,f,c
  5794   006444  CFDE F011          	movff	postinc2,??_setMotorPWM
  5795   006448  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5796   00644C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5797   006450  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5798   006454  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  5799                           
  5800                           ;dc_motor.c: 92:     } else {
  5801   006458  EF4E  F032         	goto	l195
  5802   00645C                     l4238:
  5803                           
  5804                           ;dc_motor.c: 93:         *(m->posDutyHighByte)=negDuty;
  5805   00645C  EE20 F005          	lfsr	2,5
  5806   006460  500F               	movf	setMotorPWM@m^0,w,c
  5807   006462  26D9               	addwf	fsr2l,f,c
  5808   006464  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5809   006466  22DA               	addwfc	fsr2h,f,c
  5810   006468  CFDE F011          	movff	postinc2,??_setMotorPWM
  5811   00646C  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5812   006470  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5813   006474  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5814   006478  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  5815                           
  5816                           ;dc_motor.c: 94:         *(m->negDutyHighByte)=posDuty;
  5817   00647C  EE20 F007          	lfsr	2,7
  5818   006480  500F               	movf	setMotorPWM@m^0,w,c
  5819   006482  26D9               	addwf	fsr2l,f,c
  5820   006484  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5821   006486  22DA               	addwfc	fsr2h,f,c
  5822   006488  CFDE F011          	movff	postinc2,??_setMotorPWM
  5823   00648C  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5824   006490  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5825   006494  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5826   006498  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  5827   00649C                     l195:
  5828   00649C  0012               	return		;funcret
  5829   00649E                     __end_of_setMotorPWM:
  5830                           	callstack 0
  5831                           
  5832 ;; *************** function ___wmul *****************
  5833 ;; Defined at:
  5834 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  multiplier      2    1[COMRAM] unsigned int 
  5837 ;;  multiplicand    2    3[COMRAM] unsigned int 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;  product         2    5[COMRAM] unsigned int 
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  2    1[COMRAM] unsigned int 
  5842 ;; Registers used:
  5843 ;;		wreg, status,2, status,0, prodl, prodh
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5852 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5853 ;;Total ram usage:        6 bytes
  5854 ;; Hardware stack levels used: 1
  5855 ;; Hardware stack levels required when called: 2
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_setMotorPWM
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text26
  5864   00758A                     __ptext26:
  5865                           	callstack 0
  5866   00758A                     ___wmul:
  5867                           	callstack 25
  5868   00758A  5002               	movf	___wmul@multiplier^0,w,c
  5869   00758C  0204               	mulwf	___wmul@multiplicand^0,c
  5870   00758E  CFF3 F006          	movff	prodl,___wmul@product
  5871   007592  CFF4 F007          	movff	prodh,___wmul@product+1
  5872   007596  5002               	movf	___wmul@multiplier^0,w,c
  5873   007598  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  5874   00759A  50F3               	movf	243,w,c
  5875   00759C  2607               	addwf	(___wmul@product+1)^0,f,c
  5876   00759E  5003               	movf	(___wmul@multiplier+1)^0,w,c
  5877   0075A0  0204               	mulwf	___wmul@multiplicand^0,c
  5878   0075A2  50F3               	movf	243,w,c
  5879   0075A4  2607               	addwf	(___wmul@product+1)^0,f,c
  5880   0075A6  C006  F002         	movff	___wmul@product,?___wmul
  5881   0075AA  C007  F003         	movff	___wmul@product+1,?___wmul+1
  5882   0075AE  0012               	return		;funcret
  5883   0075B0                     __end_of___wmul:
  5884                           	callstack 0
  5885                           
  5886 ;; *************** function ___lwdiv *****************
  5887 ;; Defined at:
  5888 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;  dividend        2    7[COMRAM] unsigned int 
  5891 ;;  divisor         2    9[COMRAM] unsigned int 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  quotient        2   11[COMRAM] unsigned int 
  5894 ;;  counter         1   13[COMRAM] unsigned char 
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  2    7[COMRAM] unsigned int 
  5897 ;; Registers used:
  5898 ;;		wreg, status,2, status,0
  5899 ;; Tracked objects:
  5900 ;;		On entry : 0/0
  5901 ;;		On exit  : 0/0
  5902 ;;		Unchanged: 0/0
  5903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5905 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5907 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5908 ;;Total ram usage:        7 bytes
  5909 ;; Hardware stack levels used: 1
  5910 ;; Hardware stack levels required when called: 2
  5911 ;; This function calls:
  5912 ;;		Nothing
  5913 ;; This function is called by:
  5914 ;;		_setMotorPWM
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text27
  5919   0070FA                     __ptext27:
  5920                           	callstack 0
  5921   0070FA                     ___lwdiv:
  5922                           	callstack 25
  5923   0070FA  0E00               	movlw	0
  5924   0070FC  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  5925   0070FE  0E00               	movlw	0
  5926   007100  6E0C               	movwf	___lwdiv@quotient^0,c
  5927   007102  500A               	movf	___lwdiv@divisor^0,w,c
  5928   007104  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5929   007106  B4D8               	btfsc	status,2,c
  5930   007108  EF88  F038         	goto	u3741
  5931   00710C  EF8A  F038         	goto	u3740
  5932   007110                     u3741:
  5933   007110  EFB2  F038         	goto	l1053
  5934   007114                     u3740:
  5935   007114  0E01               	movlw	1
  5936   007116  6E0E               	movwf	___lwdiv@counter^0,c
  5937   007118  EF92  F038         	goto	l4096
  5938   00711C                     l4094:
  5939   00711C  90D8               	bcf	status,0,c
  5940   00711E  360A               	rlcf	___lwdiv@divisor^0,f,c
  5941   007120  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5942   007122  2A0E               	incf	___lwdiv@counter^0,f,c
  5943   007124                     l4096:
  5944   007124  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  5945   007126  EF97  F038         	goto	u3751
  5946   00712A  EF99  F038         	goto	u3750
  5947   00712E                     u3751:
  5948   00712E  EF8E  F038         	goto	l4094
  5949   007132                     u3750:
  5950   007132                     l4098:
  5951   007132  90D8               	bcf	status,0,c
  5952   007134  360C               	rlcf	___lwdiv@quotient^0,f,c
  5953   007136  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5954   007138  500A               	movf	___lwdiv@divisor^0,w,c
  5955   00713A  5C08               	subwf	___lwdiv@dividend^0,w,c
  5956   00713C  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  5957   00713E  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5958   007140  A0D8               	btfss	status,0,c
  5959   007142  EFA5  F038         	goto	u3761
  5960   007146  EFA7  F038         	goto	u3760
  5961   00714A                     u3761:
  5962   00714A  EFAC  F038         	goto	l4106
  5963   00714E                     u3760:
  5964   00714E  500A               	movf	___lwdiv@divisor^0,w,c
  5965   007150  5E08               	subwf	___lwdiv@dividend^0,f,c
  5966   007152  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  5967   007154  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5968   007156  800C               	bsf	___lwdiv@quotient^0,0,c
  5969   007158                     l4106:
  5970   007158  90D8               	bcf	status,0,c
  5971   00715A  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5972   00715C  320A               	rrcf	___lwdiv@divisor^0,f,c
  5973   00715E  2E0E               	decfsz	___lwdiv@counter^0,f,c
  5974   007160  EF99  F038         	goto	l4098
  5975   007164                     l1053:
  5976   007164  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  5977   007168  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5978   00716C  0012               	return		;funcret
  5979   00716E                     __end_of___lwdiv:
  5980                           	callstack 0
  5981                           
  5982 ;; *************** function _decide_action *****************
  5983 ;; Defined at:
  5984 ;;		line 114 in file "color.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;		None
  5987 ;; Auto vars:     Size  Location     Type
  5988 ;;  i               1   60[BANK0 ] unsigned char 
  5989 ;;  rgb_comp       32   23[BANK0 ] float [8]
  5990 ;;  blue_r          4   81[BANK0 ] float 
  5991 ;;  green_r         4   77[BANK0 ] float 
  5992 ;;  red_r           4   73[BANK0 ] float 
  5993 ;;  blue            4   69[BANK0 ] float 
  5994 ;;  green           4   65[BANK0 ] float 
  5995 ;;  red             4   61[BANK0 ] float 
  5996 ;;  total           4   56[BANK0 ] float 
  5997 ;;  action          1   55[BANK0 ] unsigned char 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  1    wreg      unsigned char 
  6000 ;; Registers used:
  6001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6008 ;;      Locals:         0      94       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6009 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6010 ;;      Totals:         0      96       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6011 ;;Total ram usage:       96 bytes
  6012 ;; Hardware stack levels used: 1
  6013 ;; Hardware stack levels required when called: 5
  6014 ;; This function calls:
  6015 ;;		___fladd
  6016 ;;		___fldiv
  6017 ;;		___flge
  6018 ;;		___flsub
  6019 ;;		___xxtofl
  6020 ;;		_color_read_Blue
  6021 ;;		_color_read_Green
  6022 ;;		_color_read_Red
  6023 ;;		_color_writetoaddr
  6024 ;;		_powf
  6025 ;;		_sqrtf
  6026 ;; This function is called by:
  6027 ;;		_main
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           	psect	text28
  6032   003302                     __ptext28:
  6033                           	callstack 0
  6034   003302                     _decide_action:
  6035                           	callstack 25
  6036   003302                     
  6037                           ;color.c: 132:     float red, green, blue;;color.c: 133:     float red_r, green_r, blue_
      +                          r;;color.c: 134:     float rgb_comp[8];;color.c: 135:     char action;;color.c: 138:    
      +                           color_writetoaddr(0x01, 0xD5);
  6038   003302  0ED5               	movlw	213
  6039   003304  6E04               	movwf	color_writetoaddr@value^0,c
  6040   003306  0E01               	movlw	1
  6041   003308  ECD8  F03A         	call	_color_writetoaddr
  6042                           
  6043                           ;color.c: 139:     color_writetoaddr(0x03, 0xAB);
  6044   00330C  0EAB               	movlw	171
  6045   00330E  6E04               	movwf	color_writetoaddr@value^0,c
  6046   003310  0E03               	movlw	3
  6047   003312  ECD8  F03A         	call	_color_writetoaddr
  6048   003316                     
  6049                           ;color.c: 140:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6050   003316  0E11               	movlw	17
  6051   003318  0100               	movlb	0	; () banked
  6052   00331A  6F72               	movwf	(??_decide_action+1)& (0+255),b
  6053   00331C  0E3C               	movlw	60
  6054   00331E  6F71               	movwf	??_decide_action& (0+255),b
  6055   003320  0ECB               	movlw	203
  6056   003322                     u8397:
  6057   003322  2EE8               	decfsz	wreg,f,c
  6058   003324  D7FE               	bra	u8397
  6059   003326  2F71               	decfsz	??_decide_action& (0+255),f,b
  6060   003328  D7FC               	bra	u8397
  6061   00332A  2F72               	decfsz	(??_decide_action+1)& (0+255),f,b
  6062   00332C  D7FA               	bra	u8397
  6063   00332E                     
  6064                           ;color.c: 142:     red = color_read_Red();
  6065   00332E  ECEA  F038         	call	_color_read_Red	;wreg free
  6066   003332  C006  F00D         	movff	?_color_read_Red,___xxtofl@val
  6067   003336  C007  F00E         	movff	?_color_read_Red+1,___xxtofl@val+1
  6068   00333A  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6069   00333C  6A10               	clrf	(___xxtofl@val+3)^0,c
  6070   00333E  0E00               	movlw	0
  6071   003340  ECBF  F030         	call	___xxtofl
  6072   003344  C00D  F09D         	movff	?___xxtofl,decide_action@red
  6073   003348  C00E  F09E         	movff	?___xxtofl+1,decide_action@red+1
  6074   00334C  C00F  F09F         	movff	?___xxtofl+2,decide_action@red+2
  6075   003350  C010  F0A0         	movff	?___xxtofl+3,decide_action@red+3
  6076   003354                     
  6077                           ;color.c: 143:     green = color_read_Green();
  6078   003354  EC12  F039         	call	_color_read_Green	;wreg free
  6079   003358  C006  F00D         	movff	?_color_read_Green,___xxtofl@val
  6080   00335C  C007  F00E         	movff	?_color_read_Green+1,___xxtofl@val+1
  6081   003360  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6082   003362  6A10               	clrf	(___xxtofl@val+3)^0,c
  6083   003364  0E00               	movlw	0
  6084   003366  ECBF  F030         	call	___xxtofl
  6085   00336A  C00D  F0A1         	movff	?___xxtofl,decide_action@green
  6086   00336E  C00E  F0A2         	movff	?___xxtofl+1,decide_action@green+1
  6087   003372  C00F  F0A3         	movff	?___xxtofl+2,decide_action@green+2
  6088   003376  C010  F0A4         	movff	?___xxtofl+3,decide_action@green+3
  6089   00337A                     
  6090                           ;color.c: 144:     blue = color_read_Blue();
  6091   00337A  EC3A  F039         	call	_color_read_Blue	;wreg free
  6092   00337E  C006  F00D         	movff	?_color_read_Blue,___xxtofl@val
  6093   003382  C007  F00E         	movff	?_color_read_Blue+1,___xxtofl@val+1
  6094   003386  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6095   003388  6A10               	clrf	(___xxtofl@val+3)^0,c
  6096   00338A  0E00               	movlw	0
  6097   00338C  ECBF  F030         	call	___xxtofl
  6098   003390  C00D  F0A5         	movff	?___xxtofl,decide_action@blue
  6099   003394  C00E  F0A6         	movff	?___xxtofl+1,decide_action@blue+1
  6100   003398  C00F  F0A7         	movff	?___xxtofl+2,decide_action@blue+2
  6101   00339C  C010  F0A8         	movff	?___xxtofl+3,decide_action@blue+3
  6102   0033A0                     
  6103                           ;color.c: 147:     color_writetoaddr(0x01, 0xFF);
  6104   0033A0  0EFF               	movlw	255
  6105   0033A2  6E04               	movwf	color_writetoaddr@value^0,c
  6106   0033A4  0E01               	movlw	1
  6107   0033A6  ECD8  F03A         	call	_color_writetoaddr
  6108   0033AA                     
  6109                           ;color.c: 148:     color_writetoaddr(0x03, 0xFF);
  6110   0033AA  0EFF               	movlw	255
  6111   0033AC  6E04               	movwf	color_writetoaddr@value^0,c
  6112   0033AE  0E03               	movlw	3
  6113   0033B0  ECD8  F03A         	call	_color_writetoaddr
  6114   0033B4                     
  6115                           ;color.c: 151:     if(red < 666){red = 0;} else{red -= 699;}
  6116   0033B4  C09D  F04C         	movff	decide_action@red,___flge@ff1
  6117   0033B8  C09E  F04D         	movff	decide_action@red+1,___flge@ff1+1
  6118   0033BC  C09F  F04E         	movff	decide_action@red+2,___flge@ff1+2
  6119   0033C0  C0A0  F04F         	movff	decide_action@red+3,___flge@ff1+3
  6120   0033C4  0E00               	movlw	0
  6121   0033C6  6E50               	movwf	___flge@ff2^0,c
  6122   0033C8  0E80               	movlw	128
  6123   0033CA  6E51               	movwf	(___flge@ff2+1)^0,c
  6124   0033CC  0E26               	movlw	38
  6125   0033CE  6E52               	movwf	(___flge@ff2+2)^0,c
  6126   0033D0  0E44               	movlw	68
  6127   0033D2  6E53               	movwf	(___flge@ff2+3)^0,c
  6128   0033D4  EC54  F033         	call	___flge	;wreg free
  6129   0033D8  B0D8               	btfsc	status,0,c
  6130   0033DA  EFF1  F019         	goto	u7781
  6131   0033DE  EFF3  F019         	goto	u7780
  6132   0033E2                     u7781:
  6133   0033E2  EFFE  F019         	goto	l7484
  6134   0033E6                     u7780:
  6135   0033E6  0E00               	movlw	0
  6136   0033E8  0100               	movlb	0	; () banked
  6137   0033EA  6F9D               	movwf	decide_action@red& (0+255),b
  6138   0033EC  0E00               	movlw	0
  6139   0033EE  6F9E               	movwf	(decide_action@red+1)& (0+255),b
  6140   0033F0  0E00               	movlw	0
  6141   0033F2  6F9F               	movwf	(decide_action@red+2)& (0+255),b
  6142   0033F4  0E00               	movlw	0
  6143   0033F6  6FA0               	movwf	(decide_action@red+3)& (0+255),b
  6144   0033F8  EF18  F01A         	goto	l69
  6145   0033FC                     l7484:
  6146   0033FC  C09D  F044         	movff	decide_action@red,___flsub@b
  6147   003400  C09E  F045         	movff	decide_action@red+1,___flsub@b+1
  6148   003404  C09F  F046         	movff	decide_action@red+2,___flsub@b+2
  6149   003408  C0A0  F047         	movff	decide_action@red+3,___flsub@b+3
  6150   00340C  0E00               	movlw	0
  6151   00340E  6E48               	movwf	___flsub@a^0,c
  6152   003410  0EC0               	movlw	192
  6153   003412  6E49               	movwf	(___flsub@a+1)^0,c
  6154   003414  0E2E               	movlw	46
  6155   003416  6E4A               	movwf	(___flsub@a+2)^0,c
  6156   003418  0E44               	movlw	68
  6157   00341A  6E4B               	movwf	(___flsub@a+3)^0,c
  6158   00341C  ECAF  F039         	call	___flsub	;wreg free
  6159   003420  C044  F09D         	movff	?___flsub,decide_action@red
  6160   003424  C045  F09E         	movff	?___flsub+1,decide_action@red+1
  6161   003428  C046  F09F         	movff	?___flsub+2,decide_action@red+2
  6162   00342C  C047  F0A0         	movff	?___flsub+3,decide_action@red+3
  6163   003430                     l69:
  6164                           
  6165                           ;color.c: 152:     if(green < 446){green = 0;} else{green -= 443;}
  6166   003430  C0A1  F04C         	movff	decide_action@green,___flge@ff1
  6167   003434  C0A2  F04D         	movff	decide_action@green+1,___flge@ff1+1
  6168   003438  C0A3  F04E         	movff	decide_action@green+2,___flge@ff1+2
  6169   00343C  C0A4  F04F         	movff	decide_action@green+3,___flge@ff1+3
  6170   003440  0E00               	movlw	0
  6171   003442  6E50               	movwf	___flge@ff2^0,c
  6172   003444  0E00               	movlw	0
  6173   003446  6E51               	movwf	(___flge@ff2+1)^0,c
  6174   003448  0EDF               	movlw	223
  6175   00344A  6E52               	movwf	(___flge@ff2+2)^0,c
  6176   00344C  0E43               	movlw	67
  6177   00344E  6E53               	movwf	(___flge@ff2+3)^0,c
  6178   003450  EC54  F033         	call	___flge	;wreg free
  6179   003454  B0D8               	btfsc	status,0,c
  6180   003456  EF2F  F01A         	goto	u7791
  6181   00345A  EF31  F01A         	goto	u7790
  6182   00345E                     u7791:
  6183   00345E  EF3C  F01A         	goto	l7488
  6184   003462                     u7790:
  6185   003462  0E00               	movlw	0
  6186   003464  0100               	movlb	0	; () banked
  6187   003466  6FA1               	movwf	decide_action@green& (0+255),b
  6188   003468  0E00               	movlw	0
  6189   00346A  6FA2               	movwf	(decide_action@green+1)& (0+255),b
  6190   00346C  0E00               	movlw	0
  6191   00346E  6FA3               	movwf	(decide_action@green+2)& (0+255),b
  6192   003470  0E00               	movlw	0
  6193   003472  6FA4               	movwf	(decide_action@green+3)& (0+255),b
  6194   003474  EF56  F01A         	goto	l71
  6195   003478                     l7488:
  6196   003478  C0A1  F044         	movff	decide_action@green,___flsub@b
  6197   00347C  C0A2  F045         	movff	decide_action@green+1,___flsub@b+1
  6198   003480  C0A3  F046         	movff	decide_action@green+2,___flsub@b+2
  6199   003484  C0A4  F047         	movff	decide_action@green+3,___flsub@b+3
  6200   003488  0E00               	movlw	0
  6201   00348A  6E48               	movwf	___flsub@a^0,c
  6202   00348C  0E80               	movlw	128
  6203   00348E  6E49               	movwf	(___flsub@a+1)^0,c
  6204   003490  0EDD               	movlw	221
  6205   003492  6E4A               	movwf	(___flsub@a+2)^0,c
  6206   003494  0E43               	movlw	67
  6207   003496  6E4B               	movwf	(___flsub@a+3)^0,c
  6208   003498  ECAF  F039         	call	___flsub	;wreg free
  6209   00349C  C044  F0A1         	movff	?___flsub,decide_action@green
  6210   0034A0  C045  F0A2         	movff	?___flsub+1,decide_action@green+1
  6211   0034A4  C046  F0A3         	movff	?___flsub+2,decide_action@green+2
  6212   0034A8  C047  F0A4         	movff	?___flsub+3,decide_action@green+3
  6213   0034AC                     l71:
  6214                           
  6215                           ;color.c: 153:     if(blue < 295){blue = 0;} else{blue -= 315;}
  6216   0034AC  C0A5  F04C         	movff	decide_action@blue,___flge@ff1
  6217   0034B0  C0A6  F04D         	movff	decide_action@blue+1,___flge@ff1+1
  6218   0034B4  C0A7  F04E         	movff	decide_action@blue+2,___flge@ff1+2
  6219   0034B8  C0A8  F04F         	movff	decide_action@blue+3,___flge@ff1+3
  6220   0034BC  0E00               	movlw	0
  6221   0034BE  6E50               	movwf	___flge@ff2^0,c
  6222   0034C0  0E80               	movlw	128
  6223   0034C2  6E51               	movwf	(___flge@ff2+1)^0,c
  6224   0034C4  0E93               	movlw	147
  6225   0034C6  6E52               	movwf	(___flge@ff2+2)^0,c
  6226   0034C8  0E43               	movlw	67
  6227   0034CA  6E53               	movwf	(___flge@ff2+3)^0,c
  6228   0034CC  EC54  F033         	call	___flge	;wreg free
  6229   0034D0  B0D8               	btfsc	status,0,c
  6230   0034D2  EF6D  F01A         	goto	u7801
  6231   0034D6  EF6F  F01A         	goto	u7800
  6232   0034DA                     u7801:
  6233   0034DA  EF7A  F01A         	goto	l7492
  6234   0034DE                     u7800:
  6235   0034DE  0E00               	movlw	0
  6236   0034E0  0100               	movlb	0	; () banked
  6237   0034E2  6FA5               	movwf	decide_action@blue& (0+255),b
  6238   0034E4  0E00               	movlw	0
  6239   0034E6  6FA6               	movwf	(decide_action@blue+1)& (0+255),b
  6240   0034E8  0E00               	movlw	0
  6241   0034EA  6FA7               	movwf	(decide_action@blue+2)& (0+255),b
  6242   0034EC  0E00               	movlw	0
  6243   0034EE  6FA8               	movwf	(decide_action@blue+3)& (0+255),b
  6244   0034F0  EF94  F01A         	goto	l73
  6245   0034F4                     l7492:
  6246   0034F4  C0A5  F044         	movff	decide_action@blue,___flsub@b
  6247   0034F8  C0A6  F045         	movff	decide_action@blue+1,___flsub@b+1
  6248   0034FC  C0A7  F046         	movff	decide_action@blue+2,___flsub@b+2
  6249   003500  C0A8  F047         	movff	decide_action@blue+3,___flsub@b+3
  6250   003504  0E00               	movlw	0
  6251   003506  6E48               	movwf	___flsub@a^0,c
  6252   003508  0E80               	movlw	128
  6253   00350A  6E49               	movwf	(___flsub@a+1)^0,c
  6254   00350C  0E9D               	movlw	157
  6255   00350E  6E4A               	movwf	(___flsub@a+2)^0,c
  6256   003510  0E43               	movlw	67
  6257   003512  6E4B               	movwf	(___flsub@a+3)^0,c
  6258   003514  ECAF  F039         	call	___flsub	;wreg free
  6259   003518  C044  F0A5         	movff	?___flsub,decide_action@blue
  6260   00351C  C045  F0A6         	movff	?___flsub+1,decide_action@blue+1
  6261   003520  C046  F0A7         	movff	?___flsub+2,decide_action@blue+2
  6262   003524  C047  F0A8         	movff	?___flsub+3,decide_action@blue+3
  6263   003528                     l73:
  6264                           
  6265                           ;color.c: 155:     red = red/1621;
  6266   003528  C09D  F02B         	movff	decide_action@red,___fldiv@b
  6267   00352C  C09E  F02C         	movff	decide_action@red+1,___fldiv@b+1
  6268   003530  C09F  F02D         	movff	decide_action@red+2,___fldiv@b+2
  6269   003534  C0A0  F02E         	movff	decide_action@red+3,___fldiv@b+3
  6270   003538  0E00               	movlw	0
  6271   00353A  6E2F               	movwf	___fldiv@a^0,c
  6272   00353C  0EA0               	movlw	160
  6273   00353E  6E30               	movwf	(___fldiv@a+1)^0,c
  6274   003540  0ECA               	movlw	202
  6275   003542  6E31               	movwf	(___fldiv@a+2)^0,c
  6276   003544  0E44               	movlw	68
  6277   003546  6E32               	movwf	(___fldiv@a+3)^0,c
  6278   003548  ECED  F02C         	call	___fldiv	;wreg free
  6279   00354C  C02B  F09D         	movff	?___fldiv,decide_action@red
  6280   003550  C02C  F09E         	movff	?___fldiv+1,decide_action@red+1
  6281   003554  C02D  F09F         	movff	?___fldiv+2,decide_action@red+2
  6282   003558  C02E  F0A0         	movff	?___fldiv+3,decide_action@red+3
  6283                           
  6284                           ;color.c: 156:     green = green/1191;
  6285   00355C  C0A1  F02B         	movff	decide_action@green,___fldiv@b
  6286   003560  C0A2  F02C         	movff	decide_action@green+1,___fldiv@b+1
  6287   003564  C0A3  F02D         	movff	decide_action@green+2,___fldiv@b+2
  6288   003568  C0A4  F02E         	movff	decide_action@green+3,___fldiv@b+3
  6289   00356C  0E00               	movlw	0
  6290   00356E  6E2F               	movwf	___fldiv@a^0,c
  6291   003570  0EE0               	movlw	224
  6292   003572  6E30               	movwf	(___fldiv@a+1)^0,c
  6293   003574  0E94               	movlw	148
  6294   003576  6E31               	movwf	(___fldiv@a+2)^0,c
  6295   003578  0E44               	movlw	68
  6296   00357A  6E32               	movwf	(___fldiv@a+3)^0,c
  6297   00357C  ECED  F02C         	call	___fldiv	;wreg free
  6298   003580  C02B  F0A1         	movff	?___fldiv,decide_action@green
  6299   003584  C02C  F0A2         	movff	?___fldiv+1,decide_action@green+1
  6300   003588  C02D  F0A3         	movff	?___fldiv+2,decide_action@green+2
  6301   00358C  C02E  F0A4         	movff	?___fldiv+3,decide_action@green+3
  6302                           
  6303                           ;color.c: 157:     blue = blue/885;
  6304   003590  C0A5  F02B         	movff	decide_action@blue,___fldiv@b
  6305   003594  C0A6  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  6306   003598  C0A7  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  6307   00359C  C0A8  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  6308   0035A0  0E00               	movlw	0
  6309   0035A2  6E2F               	movwf	___fldiv@a^0,c
  6310   0035A4  0E40               	movlw	64
  6311   0035A6  6E30               	movwf	(___fldiv@a+1)^0,c
  6312   0035A8  0E5D               	movlw	93
  6313   0035AA  6E31               	movwf	(___fldiv@a+2)^0,c
  6314   0035AC  0E44               	movlw	68
  6315   0035AE  6E32               	movwf	(___fldiv@a+3)^0,c
  6316   0035B0  ECED  F02C         	call	___fldiv	;wreg free
  6317   0035B4  C02B  F0A5         	movff	?___fldiv,decide_action@blue
  6318   0035B8  C02C  F0A6         	movff	?___fldiv+1,decide_action@blue+1
  6319   0035BC  C02D  F0A7         	movff	?___fldiv+2,decide_action@blue+2
  6320   0035C0  C02E  F0A8         	movff	?___fldiv+3,decide_action@blue+3
  6321                           
  6322                           ;color.c: 159:     float total = red + green + blue;
  6323   0035C4  C0A1  F006         	movff	decide_action@green,___fladd@a
  6324   0035C8  C0A2  F007         	movff	decide_action@green+1,___fladd@a+1
  6325   0035CC  C0A3  F008         	movff	decide_action@green+2,___fladd@a+2
  6326   0035D0  C0A4  F009         	movff	decide_action@green+3,___fladd@a+3
  6327   0035D4  C09D  F002         	movff	decide_action@red,___fladd@b
  6328   0035D8  C09E  F003         	movff	decide_action@red+1,___fladd@b+1
  6329   0035DC  C09F  F004         	movff	decide_action@red+2,___fladd@b+2
  6330   0035E0  C0A0  F005         	movff	decide_action@red+3,___fladd@b+3
  6331   0035E4  EC89  F026         	call	___fladd	;wreg free
  6332   0035E8  C002  F073         	movff	?___fladd,_decide_action$3050
  6333   0035EC  C003  F074         	movff	?___fladd+1,_decide_action$3050+1
  6334   0035F0  C004  F075         	movff	?___fladd+2,_decide_action$3050+2
  6335   0035F4  C005  F076         	movff	?___fladd+3,_decide_action$3050+3
  6336                           
  6337                           ;color.c: 159:     float total = red + green + blue;
  6338   0035F8  C073  F002         	movff	_decide_action$3050,___fladd@b
  6339   0035FC  C074  F003         	movff	_decide_action$3050+1,___fladd@b+1
  6340   003600  C075  F004         	movff	_decide_action$3050+2,___fladd@b+2
  6341   003604  C076  F005         	movff	_decide_action$3050+3,___fladd@b+3
  6342   003608  C0A5  F006         	movff	decide_action@blue,___fladd@a
  6343   00360C  C0A6  F007         	movff	decide_action@blue+1,___fladd@a+1
  6344   003610  C0A7  F008         	movff	decide_action@blue+2,___fladd@a+2
  6345   003614  C0A8  F009         	movff	decide_action@blue+3,___fladd@a+3
  6346   003618  EC89  F026         	call	___fladd	;wreg free
  6347   00361C  C002  F098         	movff	?___fladd,decide_action@total
  6348   003620  C003  F099         	movff	?___fladd+1,decide_action@total+1
  6349   003624  C004  F09A         	movff	?___fladd+2,decide_action@total+2
  6350   003628  C005  F09B         	movff	?___fladd+3,decide_action@total+3
  6351                           
  6352                           ;color.c: 161:     red_r = red / total;
  6353   00362C  C09D  F02B         	movff	decide_action@red,___fldiv@b
  6354   003630  C09E  F02C         	movff	decide_action@red+1,___fldiv@b+1
  6355   003634  C09F  F02D         	movff	decide_action@red+2,___fldiv@b+2
  6356   003638  C0A0  F02E         	movff	decide_action@red+3,___fldiv@b+3
  6357   00363C  C098  F02F         	movff	decide_action@total,___fldiv@a
  6358   003640  C099  F030         	movff	decide_action@total+1,___fldiv@a+1
  6359   003644  C09A  F031         	movff	decide_action@total+2,___fldiv@a+2
  6360   003648  C09B  F032         	movff	decide_action@total+3,___fldiv@a+3
  6361   00364C  ECED  F02C         	call	___fldiv	;wreg free
  6362   003650  C02B  F0A9         	movff	?___fldiv,decide_action@red_r
  6363   003654  C02C  F0AA         	movff	?___fldiv+1,decide_action@red_r+1
  6364   003658  C02D  F0AB         	movff	?___fldiv+2,decide_action@red_r+2
  6365   00365C  C02E  F0AC         	movff	?___fldiv+3,decide_action@red_r+3
  6366                           
  6367                           ;color.c: 162:     green_r = green / total;
  6368   003660  C0A1  F02B         	movff	decide_action@green,___fldiv@b
  6369   003664  C0A2  F02C         	movff	decide_action@green+1,___fldiv@b+1
  6370   003668  C0A3  F02D         	movff	decide_action@green+2,___fldiv@b+2
  6371   00366C  C0A4  F02E         	movff	decide_action@green+3,___fldiv@b+3
  6372   003670  C098  F02F         	movff	decide_action@total,___fldiv@a
  6373   003674  C099  F030         	movff	decide_action@total+1,___fldiv@a+1
  6374   003678  C09A  F031         	movff	decide_action@total+2,___fldiv@a+2
  6375   00367C  C09B  F032         	movff	decide_action@total+3,___fldiv@a+3
  6376   003680  ECED  F02C         	call	___fldiv	;wreg free
  6377   003684  C02B  F0AD         	movff	?___fldiv,decide_action@green_r
  6378   003688  C02C  F0AE         	movff	?___fldiv+1,decide_action@green_r+1
  6379   00368C  C02D  F0AF         	movff	?___fldiv+2,decide_action@green_r+2
  6380   003690  C02E  F0B0         	movff	?___fldiv+3,decide_action@green_r+3
  6381                           
  6382                           ;color.c: 163:     blue_r = blue / total;
  6383   003694  C0A5  F02B         	movff	decide_action@blue,___fldiv@b
  6384   003698  C0A6  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  6385   00369C  C0A7  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  6386   0036A0  C0A8  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  6387   0036A4  C098  F02F         	movff	decide_action@total,___fldiv@a
  6388   0036A8  C099  F030         	movff	decide_action@total+1,___fldiv@a+1
  6389   0036AC  C09A  F031         	movff	decide_action@total+2,___fldiv@a+2
  6390   0036B0  C09B  F032         	movff	decide_action@total+3,___fldiv@a+3
  6391   0036B4  ECED  F02C         	call	___fldiv	;wreg free
  6392   0036B8  C02B  F0B1         	movff	?___fldiv,decide_action@blue_r
  6393   0036BC  C02C  F0B2         	movff	?___fldiv+1,decide_action@blue_r+1
  6394   0036C0  C02D  F0B3         	movff	?___fldiv+2,decide_action@blue_r+2
  6395   0036C4  C02E  F0B4         	movff	?___fldiv+3,decide_action@blue_r+3
  6396                           
  6397                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.120),2));
  6398   0036C8  0E73               	movlw	115
  6399   0036CA  6E06               	movwf	___fladd@a^0,c
  6400   0036CC  0E68               	movlw	104
  6401   0036CE  6E07               	movwf	(___fladd@a+1)^0,c
  6402   0036D0  0E91               	movlw	145
  6403   0036D2  6E08               	movwf	(___fladd@a+2)^0,c
  6404   0036D4  0EBD               	movlw	189
  6405   0036D6  6E09               	movwf	(___fladd@a+3)^0,c
  6406   0036D8  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  6407   0036DC  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6408   0036E0  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6409   0036E4  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6410   0036E8  EC89  F026         	call	___fladd	;wreg free
  6411   0036EC  C002  F0B5         	movff	?___fladd,_decide_action$3051
  6412   0036F0  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  6413   0036F4  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  6414   0036F8  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  6415                           
  6416                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.120),2));
  6417   0036FC  0E64               	movlw	100
  6418   0036FE  6E06               	movwf	___fladd@a^0,c
  6419   003700  0E3B               	movlw	59
  6420   003702  6E07               	movwf	(___fladd@a+1)^0,c
  6421   003704  0E3F               	movlw	63
  6422   003706  6E08               	movwf	(___fladd@a+2)^0,c
  6423   003708  0EBF               	movlw	191
  6424   00370A  6E09               	movwf	(___fladd@a+3)^0,c
  6425   00370C  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  6426   003710  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6427   003714  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6428   003718  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6429   00371C  EC89  F026         	call	___fladd	;wreg free
  6430   003720  C002  F0B9         	movff	?___fladd,_decide_action$3052
  6431   003724  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  6432   003728  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  6433   00372C  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  6434   003730                     
  6435                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.120),2));
  6436   003730  0E00               	movlw	0
  6437   003732  0100               	movlb	0	; () banked
  6438   003734  6F64               	movwf	powf@y& (0+255),b
  6439   003736  0E00               	movlw	0
  6440   003738  6F65               	movwf	(powf@y+1)& (0+255),b
  6441   00373A  0E00               	movlw	0
  6442   00373C  6F66               	movwf	(powf@y+2)& (0+255),b
  6443   00373E  0E40               	movlw	64
  6444   003740  6F67               	movwf	(powf@y+3)& (0+255),b
  6445   003742  C0B5  F060         	movff	_decide_action$3051,powf@x
  6446   003746  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  6447   00374A  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  6448   00374E  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  6449   003752  EC41  F007         	call	_powf	;wreg free
  6450   003756  C060  F0BD         	movff	?_powf,_decide_action$3053
  6451   00375A  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  6452   00375E  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  6453   003762  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  6454   003766                     
  6455                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.120),2));
  6456   003766  0E00               	movlw	0
  6457   003768  0100               	movlb	0	; () banked
  6458   00376A  6F64               	movwf	powf@y& (0+255),b
  6459   00376C  0E00               	movlw	0
  6460   00376E  6F65               	movwf	(powf@y+1)& (0+255),b
  6461   003770  0E00               	movlw	0
  6462   003772  6F66               	movwf	(powf@y+2)& (0+255),b
  6463   003774  0E40               	movlw	64
  6464   003776  6F67               	movwf	(powf@y+3)& (0+255),b
  6465   003778  C0B9  F060         	movff	_decide_action$3052,powf@x
  6466   00377C  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  6467   003780  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  6468   003784  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  6469   003788  EC41  F007         	call	_powf	;wreg free
  6470   00378C  C060  F0C1         	movff	?_powf,_decide_action$3054
  6471   003790  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  6472   003794  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  6473   003798  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  6474                           
  6475                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.120),2));
  6476   00379C  0E8F               	movlw	143
  6477   00379E  6E06               	movwf	___fladd@a^0,c
  6478   0037A0  0EC2               	movlw	194
  6479   0037A2  6E07               	movwf	(___fladd@a+1)^0,c
  6480   0037A4  0EF5               	movlw	245
  6481   0037A6  6E08               	movwf	(___fladd@a+2)^0,c
  6482   0037A8  0EBD               	movlw	189
  6483   0037AA  6E09               	movwf	(___fladd@a+3)^0,c
  6484   0037AC  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  6485   0037B0  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6486   0037B4  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6487   0037B8  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6488   0037BC  EC89  F026         	call	___fladd	;wreg free
  6489   0037C0  C002  F0C5         	movff	?___fladd,_decide_action$3055
  6490   0037C4  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  6491   0037C8  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  6492   0037CC  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  6493                           
  6494                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.120),2));
  6495   0037D0  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  6496   0037D4  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  6497   0037D8  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  6498   0037DC  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  6499   0037E0  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  6500   0037E4  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  6501   0037E8  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  6502   0037EC  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  6503   0037F0  EC89  F026         	call	___fladd	;wreg free
  6504   0037F4  C002  F0C9         	movff	?___fladd,_decide_action$3056
  6505   0037F8  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  6506   0037FC  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  6507   003800  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  6508   003804                     
  6509                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.120),2));
  6510   003804  0E00               	movlw	0
  6511   003806  0100               	movlb	0	; () banked
  6512   003808  6F64               	movwf	powf@y& (0+255),b
  6513   00380A  0E00               	movlw	0
  6514   00380C  6F65               	movwf	(powf@y+1)& (0+255),b
  6515   00380E  0E00               	movlw	0
  6516   003810  6F66               	movwf	(powf@y+2)& (0+255),b
  6517   003812  0E40               	movlw	64
  6518   003814  6F67               	movwf	(powf@y+3)& (0+255),b
  6519   003816  C0C5  F060         	movff	_decide_action$3055,powf@x
  6520   00381A  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  6521   00381E  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  6522   003822  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  6523   003826  EC41  F007         	call	_powf	;wreg free
  6524   00382A  C060  F0CD         	movff	?_powf,_decide_action$3057
  6525   00382E  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  6526   003832  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  6527   003836  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  6528   00383A                     
  6529                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.120),2));
  6530   00383A  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  6531   00383E  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  6532   003842  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  6533   003846  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  6534   00384A  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  6535   00384E  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  6536   003852  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  6537   003856  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  6538   00385A  EC89  F026         	call	___fladd	;wreg free
  6539   00385E  C002  F012         	movff	?___fladd,sqrtf@x
  6540   003862  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6541   003866  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6542   00386A  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6543   00386E  ECFE  F02A         	call	_sqrtf	;wreg free
  6544   003872  C012  F077         	movff	?_sqrtf,decide_action@rgb_comp
  6545   003876  C013  F078         	movff	?_sqrtf+1,decide_action@rgb_comp+1
  6546   00387A  C014  F079         	movff	?_sqrtf+2,decide_action@rgb_comp+2
  6547   00387E  C015  F07A         	movff	?_sqrtf+3,decide_action@rgb_comp+3
  6548   003882                     
  6549                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6550   003882  0E35               	movlw	53
  6551   003884  6E06               	movwf	___fladd@a^0,c
  6552   003886  0E5E               	movlw	94
  6553   003888  6E07               	movwf	(___fladd@a+1)^0,c
  6554   00388A  0EFA               	movlw	250
  6555   00388C  6E08               	movwf	(___fladd@a+2)^0,c
  6556   00388E  0EBE               	movlw	190
  6557   003890  6E09               	movwf	(___fladd@a+3)^0,c
  6558   003892  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  6559   003896  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6560   00389A  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6561   00389E  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6562   0038A2  EC89  F026         	call	___fladd	;wreg free
  6563   0038A6  C002  F0B5         	movff	?___fladd,_decide_action$3051
  6564   0038AA  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  6565   0038AE  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  6566   0038B2  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  6567   0038B6                     
  6568                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6569   0038B6  0E2B               	movlw	43
  6570   0038B8  6E06               	movwf	___fladd@a^0,c
  6571   0038BA  0E87               	movlw	135
  6572   0038BC  6E07               	movwf	(___fladd@a+1)^0,c
  6573   0038BE  0E16               	movlw	22
  6574   0038C0  6E08               	movwf	(___fladd@a+2)^0,c
  6575   0038C2  0EBE               	movlw	190
  6576   0038C4  6E09               	movwf	(___fladd@a+3)^0,c
  6577   0038C6  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  6578   0038CA  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6579   0038CE  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6580   0038D2  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6581   0038D6  EC89  F026         	call	___fladd	;wreg free
  6582   0038DA  C002  F0B9         	movff	?___fladd,_decide_action$3052
  6583   0038DE  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  6584   0038E2  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  6585   0038E6  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  6586                           
  6587                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6588   0038EA  0E00               	movlw	0
  6589   0038EC  0100               	movlb	0	; () banked
  6590   0038EE  6F64               	movwf	powf@y& (0+255),b
  6591   0038F0  0E00               	movlw	0
  6592   0038F2  6F65               	movwf	(powf@y+1)& (0+255),b
  6593   0038F4  0E00               	movlw	0
  6594   0038F6  6F66               	movwf	(powf@y+2)& (0+255),b
  6595   0038F8  0E40               	movlw	64
  6596   0038FA  6F67               	movwf	(powf@y+3)& (0+255),b
  6597   0038FC  C0B5  F060         	movff	_decide_action$3051,powf@x
  6598   003900  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  6599   003904  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  6600   003908  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  6601   00390C  EC41  F007         	call	_powf	;wreg free
  6602   003910  C060  F0BD         	movff	?_powf,_decide_action$3053
  6603   003914  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  6604   003918  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  6605   00391C  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  6606                           
  6607                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6608   003920  0E00               	movlw	0
  6609   003922  0100               	movlb	0	; () banked
  6610   003924  6F64               	movwf	powf@y& (0+255),b
  6611   003926  0E00               	movlw	0
  6612   003928  6F65               	movwf	(powf@y+1)& (0+255),b
  6613   00392A  0E00               	movlw	0
  6614   00392C  6F66               	movwf	(powf@y+2)& (0+255),b
  6615   00392E  0E40               	movlw	64
  6616   003930  6F67               	movwf	(powf@y+3)& (0+255),b
  6617   003932  C0B9  F060         	movff	_decide_action$3052,powf@x
  6618   003936  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  6619   00393A  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  6620   00393E  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  6621   003942  EC41  F007         	call	_powf	;wreg free
  6622   003946  C060  F0C1         	movff	?_powf,_decide_action$3054
  6623   00394A  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  6624   00394E  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  6625   003952  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  6626   003956                     
  6627                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6628   003956  0E23               	movlw	35
  6629   003958  6E06               	movwf	___fladd@a^0,c
  6630   00395A  0EDB               	movlw	219
  6631   00395C  6E07               	movwf	(___fladd@a+1)^0,c
  6632   00395E  0EB9               	movlw	185
  6633   003960  6E08               	movwf	(___fladd@a+2)^0,c
  6634   003962  0EBE               	movlw	190
  6635   003964  6E09               	movwf	(___fladd@a+3)^0,c
  6636   003966  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  6637   00396A  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6638   00396E  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6639   003972  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6640   003976  EC89  F026         	call	___fladd	;wreg free
  6641   00397A  C002  F0C5         	movff	?___fladd,_decide_action$3055
  6642   00397E  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  6643   003982  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  6644   003986  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  6645   00398A                     
  6646                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6647   00398A  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  6648   00398E  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  6649   003992  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  6650   003996  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  6651   00399A  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  6652   00399E  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  6653   0039A2  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  6654   0039A6  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  6655   0039AA  EC89  F026         	call	___fladd	;wreg free
  6656   0039AE  C002  F0C9         	movff	?___fladd,_decide_action$3056
  6657   0039B2  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  6658   0039B6  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  6659   0039BA  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  6660                           
  6661                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6662   0039BE  0E00               	movlw	0
  6663   0039C0  0100               	movlb	0	; () banked
  6664   0039C2  6F64               	movwf	powf@y& (0+255),b
  6665   0039C4  0E00               	movlw	0
  6666   0039C6  6F65               	movwf	(powf@y+1)& (0+255),b
  6667   0039C8  0E00               	movlw	0
  6668   0039CA  6F66               	movwf	(powf@y+2)& (0+255),b
  6669   0039CC  0E40               	movlw	64
  6670   0039CE  6F67               	movwf	(powf@y+3)& (0+255),b
  6671   0039D0  C0C5  F060         	movff	_decide_action$3055,powf@x
  6672   0039D4  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  6673   0039D8  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  6674   0039DC  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  6675   0039E0  EC41  F007         	call	_powf	;wreg free
  6676   0039E4  C060  F0CD         	movff	?_powf,_decide_action$3057
  6677   0039E8  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  6678   0039EC  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  6679   0039F0  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  6680   0039F4                     
  6681                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6682   0039F4  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  6683   0039F8  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  6684   0039FC  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  6685   003A00  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  6686   003A04  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  6687   003A08  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  6688   003A0C  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  6689   003A10  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  6690   003A14  EC89  F026         	call	___fladd	;wreg free
  6691   003A18  C002  F012         	movff	?___fladd,sqrtf@x
  6692   003A1C  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6693   003A20  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6694   003A24  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6695   003A28  ECFE  F02A         	call	_sqrtf	;wreg free
  6696   003A2C  C012  F07B         	movff	?_sqrtf,decide_action@rgb_comp+4
  6697   003A30  C013  F07C         	movff	?_sqrtf+1,decide_action@rgb_comp+5
  6698   003A34  C014  F07D         	movff	?_sqrtf+2,decide_action@rgb_comp+6
  6699   003A38  C015  F07E         	movff	?_sqrtf+3,decide_action@rgb_comp+7
  6700   003A3C                     
  6701                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6702   003A3C  0E50               	movlw	80
  6703   003A3E  6E06               	movwf	___fladd@a^0,c
  6704   003A40  0E8D               	movlw	141
  6705   003A42  6E07               	movwf	(___fladd@a+1)^0,c
  6706   003A44  0ED7               	movlw	215
  6707   003A46  6E08               	movwf	(___fladd@a+2)^0,c
  6708   003A48  0EBE               	movlw	190
  6709   003A4A  6E09               	movwf	(___fladd@a+3)^0,c
  6710   003A4C  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  6711   003A50  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6712   003A54  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6713   003A58  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6714   003A5C  EC89  F026         	call	___fladd	;wreg free
  6715   003A60  C002  F0B5         	movff	?___fladd,_decide_action$3051
  6716   003A64  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  6717   003A68  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  6718   003A6C  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  6719   003A70                     
  6720                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6721   003A70  0EAE               	movlw	174
  6722   003A72  6E06               	movwf	___fladd@a^0,c
  6723   003A74  0E47               	movlw	71
  6724   003A76  6E07               	movwf	(___fladd@a+1)^0,c
  6725   003A78  0EE1               	movlw	225
  6726   003A7A  6E08               	movwf	(___fladd@a+2)^0,c
  6727   003A7C  0EBD               	movlw	189
  6728   003A7E  6E09               	movwf	(___fladd@a+3)^0,c
  6729   003A80  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  6730   003A84  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6731   003A88  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6732   003A8C  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6733   003A90  EC89  F026         	call	___fladd	;wreg free
  6734   003A94  C002  F0B9         	movff	?___fladd,_decide_action$3052
  6735   003A98  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  6736   003A9C  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  6737   003AA0  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  6738   003AA4                     
  6739                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6740   003AA4  0E00               	movlw	0
  6741   003AA6  0100               	movlb	0	; () banked
  6742   003AA8  6F64               	movwf	powf@y& (0+255),b
  6743   003AAA  0E00               	movlw	0
  6744   003AAC  6F65               	movwf	(powf@y+1)& (0+255),b
  6745   003AAE  0E00               	movlw	0
  6746   003AB0  6F66               	movwf	(powf@y+2)& (0+255),b
  6747   003AB2  0E40               	movlw	64
  6748   003AB4  6F67               	movwf	(powf@y+3)& (0+255),b
  6749   003AB6  C0B5  F060         	movff	_decide_action$3051,powf@x
  6750   003ABA  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  6751   003ABE  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  6752   003AC2  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  6753   003AC6  EC41  F007         	call	_powf	;wreg free
  6754   003ACA  C060  F0BD         	movff	?_powf,_decide_action$3053
  6755   003ACE  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  6756   003AD2  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  6757   003AD6  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  6758   003ADA                     
  6759                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6760   003ADA  0E00               	movlw	0
  6761   003ADC  0100               	movlb	0	; () banked
  6762   003ADE  6F64               	movwf	powf@y& (0+255),b
  6763   003AE0  0E00               	movlw	0
  6764   003AE2  6F65               	movwf	(powf@y+1)& (0+255),b
  6765   003AE4  0E00               	movlw	0
  6766   003AE6  6F66               	movwf	(powf@y+2)& (0+255),b
  6767   003AE8  0E40               	movlw	64
  6768   003AEA  6F67               	movwf	(powf@y+3)& (0+255),b
  6769   003AEC  C0B9  F060         	movff	_decide_action$3052,powf@x
  6770   003AF0  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  6771   003AF4  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  6772   003AF8  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  6773   003AFC  EC41  F007         	call	_powf	;wreg free
  6774   003B00  C060  F0C1         	movff	?_powf,_decide_action$3054
  6775   003B04  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  6776   003B08  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  6777   003B0C  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  6778   003B10                     
  6779                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6780   003B10  0EC5               	movlw	197
  6781   003B12  6E06               	movwf	___fladd@a^0,c
  6782   003B14  0E20               	movlw	32
  6783   003B16  6E07               	movwf	(___fladd@a+1)^0,c
  6784   003B18  0EF0               	movlw	240
  6785   003B1A  6E08               	movwf	(___fladd@a+2)^0,c
  6786   003B1C  0EBE               	movlw	190
  6787   003B1E  6E09               	movwf	(___fladd@a+3)^0,c
  6788   003B20  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  6789   003B24  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6790   003B28  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6791   003B2C  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6792   003B30  EC89  F026         	call	___fladd	;wreg free
  6793   003B34  C002  F0C5         	movff	?___fladd,_decide_action$3055
  6794   003B38  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  6795   003B3C  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  6796   003B40  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  6797   003B44                     
  6798                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6799   003B44  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  6800   003B48  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  6801   003B4C  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  6802   003B50  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  6803   003B54  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  6804   003B58  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  6805   003B5C  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  6806   003B60  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  6807   003B64  EC89  F026         	call	___fladd	;wreg free
  6808   003B68  C002  F0C9         	movff	?___fladd,_decide_action$3056
  6809   003B6C  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  6810   003B70  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  6811   003B74  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  6812   003B78                     
  6813                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6814   003B78  0E00               	movlw	0
  6815   003B7A  0100               	movlb	0	; () banked
  6816   003B7C  6F64               	movwf	powf@y& (0+255),b
  6817   003B7E  0E00               	movlw	0
  6818   003B80  6F65               	movwf	(powf@y+1)& (0+255),b
  6819   003B82  0E00               	movlw	0
  6820   003B84  6F66               	movwf	(powf@y+2)& (0+255),b
  6821   003B86  0E40               	movlw	64
  6822   003B88  6F67               	movwf	(powf@y+3)& (0+255),b
  6823   003B8A  C0C5  F060         	movff	_decide_action$3055,powf@x
  6824   003B8E  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  6825   003B92  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  6826   003B96  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  6827   003B9A  EC41  F007         	call	_powf	;wreg free
  6828   003B9E  C060  F0CD         	movff	?_powf,_decide_action$3057
  6829   003BA2  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  6830   003BA6  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  6831   003BAA  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  6832                           
  6833                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6834   003BAE  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  6835   003BB2  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  6836   003BB6  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  6837   003BBA  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  6838   003BBE  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  6839   003BC2  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  6840   003BC6  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  6841   003BCA  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  6842   003BCE  EC89  F026         	call	___fladd	;wreg free
  6843   003BD2  C002  F012         	movff	?___fladd,sqrtf@x
  6844   003BD6  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6845   003BDA  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6846   003BDE  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6847   003BE2  ECFE  F02A         	call	_sqrtf	;wreg free
  6848   003BE6  C012  F07F         	movff	?_sqrtf,decide_action@rgb_comp+8
  6849   003BEA  C013  F080         	movff	?_sqrtf+1,decide_action@rgb_comp+9
  6850   003BEE  C014  F081         	movff	?_sqrtf+2,decide_action@rgb_comp+10
  6851   003BF2  C015  F082         	movff	?_sqrtf+3,decide_action@rgb_comp+11
  6852                           
  6853                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6854   003BF6  0E66               	movlw	102
  6855   003BF8  6E06               	movwf	___fladd@a^0,c
  6856   003BFA  0E66               	movlw	102
  6857   003BFC  6E07               	movwf	(___fladd@a+1)^0,c
  6858   003BFE  0EA6               	movlw	166
  6859   003C00  6E08               	movwf	(___fladd@a+2)^0,c
  6860   003C02  0EBE               	movlw	190
  6861   003C04  6E09               	movwf	(___fladd@a+3)^0,c
  6862   003C06  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  6863   003C0A  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6864   003C0E  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6865   003C12  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6866   003C16  EC89  F026         	call	___fladd	;wreg free
  6867   003C1A  C002  F0B5         	movff	?___fladd,_decide_action$3051
  6868   003C1E  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  6869   003C22  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  6870   003C26  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  6871                           
  6872                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6873   003C2A  0E75               	movlw	117
  6874   003C2C  6E06               	movwf	___fladd@a^0,c
  6875   003C2E  0E93               	movlw	147
  6876   003C30  6E07               	movwf	(___fladd@a+1)^0,c
  6877   003C32  0ED8               	movlw	216
  6878   003C34  6E08               	movwf	(___fladd@a+2)^0,c
  6879   003C36  0EBE               	movlw	190
  6880   003C38  6E09               	movwf	(___fladd@a+3)^0,c
  6881   003C3A  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  6882   003C3E  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6883   003C42  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6884   003C46  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6885   003C4A  EC89  F026         	call	___fladd	;wreg free
  6886   003C4E  C002  F0B9         	movff	?___fladd,_decide_action$3052
  6887   003C52  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  6888   003C56  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  6889   003C5A  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  6890   003C5E                     
  6891                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6892   003C5E  0E00               	movlw	0
  6893   003C60  0100               	movlb	0	; () banked
  6894   003C62  6F64               	movwf	powf@y& (0+255),b
  6895   003C64  0E00               	movlw	0
  6896   003C66  6F65               	movwf	(powf@y+1)& (0+255),b
  6897   003C68  0E00               	movlw	0
  6898   003C6A  6F66               	movwf	(powf@y+2)& (0+255),b
  6899   003C6C  0E40               	movlw	64
  6900   003C6E  6F67               	movwf	(powf@y+3)& (0+255),b
  6901   003C70  C0B5  F060         	movff	_decide_action$3051,powf@x
  6902   003C74  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  6903   003C78  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  6904   003C7C  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  6905   003C80  EC41  F007         	call	_powf	;wreg free
  6906   003C84  C060  F0BD         	movff	?_powf,_decide_action$3053
  6907   003C88  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  6908   003C8C  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  6909   003C90  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  6910   003C94                     
  6911                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6912   003C94  0E00               	movlw	0
  6913   003C96  0100               	movlb	0	; () banked
  6914   003C98  6F64               	movwf	powf@y& (0+255),b
  6915   003C9A  0E00               	movlw	0
  6916   003C9C  6F65               	movwf	(powf@y+1)& (0+255),b
  6917   003C9E  0E00               	movlw	0
  6918   003CA0  6F66               	movwf	(powf@y+2)& (0+255),b
  6919   003CA2  0E40               	movlw	64
  6920   003CA4  6F67               	movwf	(powf@y+3)& (0+255),b
  6921   003CA6  C0B9  F060         	movff	_decide_action$3052,powf@x
  6922   003CAA  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  6923   003CAE  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  6924   003CB2  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  6925   003CB6  EC41  F007         	call	_powf	;wreg free
  6926   003CBA  C060  F0C1         	movff	?_powf,_decide_action$3054
  6927   003CBE  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  6928   003CC2  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  6929   003CC6  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  6930                           
  6931                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6932   003CCA  0E25               	movlw	37
  6933   003CCC  6E06               	movwf	___fladd@a^0,c
  6934   003CCE  0E06               	movlw	6
  6935   003CD0  6E07               	movwf	(___fladd@a+1)^0,c
  6936   003CD2  0E81               	movlw	129
  6937   003CD4  6E08               	movwf	(___fladd@a+2)^0,c
  6938   003CD6  0EBE               	movlw	190
  6939   003CD8  6E09               	movwf	(___fladd@a+3)^0,c
  6940   003CDA  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  6941   003CDE  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6942   003CE2  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6943   003CE6  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6944   003CEA  EC89  F026         	call	___fladd	;wreg free
  6945   003CEE  C002  F0C5         	movff	?___fladd,_decide_action$3055
  6946   003CF2  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  6947   003CF6  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  6948   003CFA  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  6949                           
  6950                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6951   003CFE  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  6952   003D02  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  6953   003D06  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  6954   003D0A  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  6955   003D0E  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  6956   003D12  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  6957   003D16  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  6958   003D1A  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  6959   003D1E  EC89  F026         	call	___fladd	;wreg free
  6960   003D22  C002  F0C9         	movff	?___fladd,_decide_action$3056
  6961   003D26  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  6962   003D2A  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  6963   003D2E  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  6964   003D32                     
  6965                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6966   003D32  0E00               	movlw	0
  6967   003D34  0100               	movlb	0	; () banked
  6968   003D36  6F64               	movwf	powf@y& (0+255),b
  6969   003D38  0E00               	movlw	0
  6970   003D3A  6F65               	movwf	(powf@y+1)& (0+255),b
  6971   003D3C  0E00               	movlw	0
  6972   003D3E  6F66               	movwf	(powf@y+2)& (0+255),b
  6973   003D40  0E40               	movlw	64
  6974   003D42  6F67               	movwf	(powf@y+3)& (0+255),b
  6975   003D44  C0C5  F060         	movff	_decide_action$3055,powf@x
  6976   003D48  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  6977   003D4C  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  6978   003D50  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  6979   003D54  EC41  F007         	call	_powf	;wreg free
  6980   003D58  C060  F0CD         	movff	?_powf,_decide_action$3057
  6981   003D5C  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  6982   003D60  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  6983   003D64  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  6984   003D68                     
  6985                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6986   003D68  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  6987   003D6C  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  6988   003D70  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  6989   003D74  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  6990   003D78  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  6991   003D7C  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  6992   003D80  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  6993   003D84  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  6994   003D88  EC89  F026         	call	___fladd	;wreg free
  6995   003D8C  C002  F012         	movff	?___fladd,sqrtf@x
  6996   003D90  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6997   003D94  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6998   003D98  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6999   003D9C  ECFE  F02A         	call	_sqrtf	;wreg free
  7000   003DA0  C012  F083         	movff	?_sqrtf,decide_action@rgb_comp+12
  7001   003DA4  C013  F084         	movff	?_sqrtf+1,decide_action@rgb_comp+13
  7002   003DA8  C014  F085         	movff	?_sqrtf+2,decide_action@rgb_comp+14
  7003   003DAC  C015  F086         	movff	?_sqrtf+3,decide_action@rgb_comp+15
  7004   003DB0                     
  7005                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7006   003DB0  0EF0               	movlw	240
  7007   003DB2  6E06               	movwf	___fladd@a^0,c
  7008   003DB4  0EA7               	movlw	167
  7009   003DB6  6E07               	movwf	(___fladd@a+1)^0,c
  7010   003DB8  0E86               	movlw	134
  7011   003DBA  6E08               	movwf	(___fladd@a+2)^0,c
  7012   003DBC  0EBE               	movlw	190
  7013   003DBE  6E09               	movwf	(___fladd@a+3)^0,c
  7014   003DC0  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  7015   003DC4  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7016   003DC8  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7017   003DCC  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7018   003DD0  EC89  F026         	call	___fladd	;wreg free
  7019   003DD4  C002  F0B5         	movff	?___fladd,_decide_action$3051
  7020   003DD8  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  7021   003DDC  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  7022   003DE0  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  7023   003DE4                     
  7024                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7025   003DE4  0E08               	movlw	8
  7026   003DE6  6E06               	movwf	___fladd@a^0,c
  7027   003DE8  0EAC               	movlw	172
  7028   003DEA  6E07               	movwf	(___fladd@a+1)^0,c
  7029   003DEC  0EDC               	movlw	220
  7030   003DEE  6E08               	movwf	(___fladd@a+2)^0,c
  7031   003DF0  0EBE               	movlw	190
  7032   003DF2  6E09               	movwf	(___fladd@a+3)^0,c
  7033   003DF4  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  7034   003DF8  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7035   003DFC  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7036   003E00  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7037   003E04  EC89  F026         	call	___fladd	;wreg free
  7038   003E08  C002  F0B9         	movff	?___fladd,_decide_action$3052
  7039   003E0C  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  7040   003E10  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  7041   003E14  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  7042                           
  7043                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7044   003E18  0E00               	movlw	0
  7045   003E1A  0100               	movlb	0	; () banked
  7046   003E1C  6F64               	movwf	powf@y& (0+255),b
  7047   003E1E  0E00               	movlw	0
  7048   003E20  6F65               	movwf	(powf@y+1)& (0+255),b
  7049   003E22  0E00               	movlw	0
  7050   003E24  6F66               	movwf	(powf@y+2)& (0+255),b
  7051   003E26  0E40               	movlw	64
  7052   003E28  6F67               	movwf	(powf@y+3)& (0+255),b
  7053   003E2A  C0B5  F060         	movff	_decide_action$3051,powf@x
  7054   003E2E  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  7055   003E32  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  7056   003E36  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  7057   003E3A  EC41  F007         	call	_powf	;wreg free
  7058   003E3E  C060  F0BD         	movff	?_powf,_decide_action$3053
  7059   003E42  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  7060   003E46  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  7061   003E4A  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  7062                           
  7063                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7064   003E4E  0E00               	movlw	0
  7065   003E50  0100               	movlb	0	; () banked
  7066   003E52  6F64               	movwf	powf@y& (0+255),b
  7067   003E54  0E00               	movlw	0
  7068   003E56  6F65               	movwf	(powf@y+1)& (0+255),b
  7069   003E58  0E00               	movlw	0
  7070   003E5A  6F66               	movwf	(powf@y+2)& (0+255),b
  7071   003E5C  0E40               	movlw	64
  7072   003E5E  6F67               	movwf	(powf@y+3)& (0+255),b
  7073   003E60  C0B9  F060         	movff	_decide_action$3052,powf@x
  7074   003E64  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  7075   003E68  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  7076   003E6C  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  7077   003E70  EC41  F007         	call	_powf	;wreg free
  7078   003E74  C060  F0C1         	movff	?_powf,_decide_action$3054
  7079   003E78  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  7080   003E7C  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  7081   003E80  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  7082   003E84                     
  7083                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7084   003E84  0E08               	movlw	8
  7085   003E86  6E06               	movwf	___fladd@a^0,c
  7086   003E88  0EAC               	movlw	172
  7087   003E8A  6E07               	movwf	(___fladd@a+1)^0,c
  7088   003E8C  0E9C               	movlw	156
  7089   003E8E  6E08               	movwf	(___fladd@a+2)^0,c
  7090   003E90  0EBE               	movlw	190
  7091   003E92  6E09               	movwf	(___fladd@a+3)^0,c
  7092   003E94  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  7093   003E98  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7094   003E9C  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7095   003EA0  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7096   003EA4  EC89  F026         	call	___fladd	;wreg free
  7097   003EA8  C002  F0C5         	movff	?___fladd,_decide_action$3055
  7098   003EAC  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  7099   003EB0  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  7100   003EB4  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  7101   003EB8                     
  7102                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7103   003EB8  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  7104   003EBC  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  7105   003EC0  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  7106   003EC4  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  7107   003EC8  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  7108   003ECC  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  7109   003ED0  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  7110   003ED4  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  7111   003ED8  EC89  F026         	call	___fladd	;wreg free
  7112   003EDC  C002  F0C9         	movff	?___fladd,_decide_action$3056
  7113   003EE0  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  7114   003EE4  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  7115   003EE8  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  7116                           
  7117                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7118   003EEC  0E00               	movlw	0
  7119   003EEE  0100               	movlb	0	; () banked
  7120   003EF0  6F64               	movwf	powf@y& (0+255),b
  7121   003EF2  0E00               	movlw	0
  7122   003EF4  6F65               	movwf	(powf@y+1)& (0+255),b
  7123   003EF6  0E00               	movlw	0
  7124   003EF8  6F66               	movwf	(powf@y+2)& (0+255),b
  7125   003EFA  0E40               	movlw	64
  7126   003EFC  6F67               	movwf	(powf@y+3)& (0+255),b
  7127   003EFE  C0C5  F060         	movff	_decide_action$3055,powf@x
  7128   003F02  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  7129   003F06  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  7130   003F0A  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  7131   003F0E  EC41  F007         	call	_powf	;wreg free
  7132   003F12  C060  F0CD         	movff	?_powf,_decide_action$3057
  7133   003F16  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  7134   003F1A  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  7135   003F1E  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  7136   003F22                     
  7137                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7138   003F22  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  7139   003F26  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  7140   003F2A  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  7141   003F2E  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  7142   003F32  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  7143   003F36  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  7144   003F3A  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  7145   003F3E  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  7146   003F42  EC89  F026         	call	___fladd	;wreg free
  7147   003F46  C002  F012         	movff	?___fladd,sqrtf@x
  7148   003F4A  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7149   003F4E  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7150   003F52  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7151   003F56  ECFE  F02A         	call	_sqrtf	;wreg free
  7152   003F5A  C012  F087         	movff	?_sqrtf,decide_action@rgb_comp+16
  7153   003F5E  C013  F088         	movff	?_sqrtf+1,decide_action@rgb_comp+17
  7154   003F62  C014  F089         	movff	?_sqrtf+2,decide_action@rgb_comp+18
  7155   003F66  C015  F08A         	movff	?_sqrtf+3,decide_action@rgb_comp+19
  7156   003F6A                     
  7157                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.110),
      +                          2) + powf((blue_r - 0.160),2));
  7158   003F6A  0EAE               	movlw	174
  7159   003F6C  6E06               	movwf	___fladd@a^0,c
  7160   003F6E  0E47               	movlw	71
  7161   003F70  6E07               	movwf	(___fladd@a+1)^0,c
  7162   003F72  0EE1               	movlw	225
  7163   003F74  6E08               	movwf	(___fladd@a+2)^0,c
  7164   003F76  0EBD               	movlw	189
  7165   003F78  6E09               	movwf	(___fladd@a+3)^0,c
  7166   003F7A  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  7167   003F7E  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7168   003F82  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7169   003F86  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7170   003F8A  EC89  F026         	call	___fladd	;wreg free
  7171   003F8E  C002  F0B5         	movff	?___fladd,_decide_action$3051
  7172   003F92  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  7173   003F96  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  7174   003F9A  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  7175   003F9E                     
  7176                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.110),
      +                          2) + powf((blue_r - 0.160),2));
  7177   003F9E  0EE7               	movlw	231
  7178   003FA0  6E06               	movwf	___fladd@a^0,c
  7179   003FA2  0EFB               	movlw	251
  7180   003FA4  6E07               	movwf	(___fladd@a+1)^0,c
  7181   003FA6  0E29               	movlw	41
  7182   003FA8  6E08               	movwf	(___fladd@a+2)^0,c
  7183   003FAA  0EBF               	movlw	191
  7184   003FAC  6E09               	movwf	(___fladd@a+3)^0,c
  7185   003FAE  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  7186   003FB2  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7187   003FB6  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7188   003FBA  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7189   003FBE  EC89  F026         	call	___fladd	;wreg free
  7190   003FC2  C002  F0B9         	movff	?___fladd,_decide_action$3052
  7191   003FC6  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  7192   003FCA  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  7193   003FCE  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  7194   003FD2                     
  7195                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.110),
      +                          2) + powf((blue_r - 0.160),2));
  7196   003FD2  0E00               	movlw	0
  7197   003FD4  0100               	movlb	0	; () banked
  7198   003FD6  6F64               	movwf	powf@y& (0+255),b
  7199   003FD8  0E00               	movlw	0
  7200   003FDA  6F65               	movwf	(powf@y+1)& (0+255),b
  7201   003FDC  0E00               	movlw	0
  7202   003FDE  6F66               	movwf	(powf@y+2)& (0+255),b
  7203   003FE0  0E40               	movlw	64
  7204   003FE2  6F67               	movwf	(powf@y+3)& (0+255),b
  7205   003FE4  C0B5  F060         	movff	_decide_action$3051,powf@x
  7206   003FE8  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  7207   003FEC  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  7208   003FF0  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  7209   003FF4  EC41  F007         	call	_powf	;wreg free
  7210   003FF8  C060  F0BD         	movff	?_powf,_decide_action$3053
  7211   003FFC  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  7212   004000  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  7213   004004  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  7214   004008                     
  7215                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.110),
      +                          2) + powf((blue_r - 0.160),2));
  7216   004008  0E00               	movlw	0
  7217   00400A  0100               	movlb	0	; () banked
  7218   00400C  6F64               	movwf	powf@y& (0+255),b
  7219   00400E  0E00               	movlw	0
  7220   004010  6F65               	movwf	(powf@y+1)& (0+255),b
  7221   004012  0E00               	movlw	0
  7222   004014  6F66               	movwf	(powf@y+2)& (0+255),b
  7223   004016  0E40               	movlw	64
  7224   004018  6F67               	movwf	(powf@y+3)& (0+255),b
  7225   00401A  C0B9  F060         	movff	_decide_action$3052,powf@x
  7226   00401E  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  7227   004022  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  7228   004026  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  7229   00402A  EC41  F007         	call	_powf	;wreg free
  7230   00402E  C060  F0C1         	movff	?_powf,_decide_action$3054
  7231   004032  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  7232   004036  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  7233   00403A  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  7234   00403E                     
  7235                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.110),
      +                          2) + powf((blue_r - 0.160),2));
  7236   00403E  0E0A               	movlw	10
  7237   004040  6E06               	movwf	___fladd@a^0,c
  7238   004042  0ED7               	movlw	215
  7239   004044  6E07               	movwf	(___fladd@a+1)^0,c
  7240   004046  0E23               	movlw	35
  7241   004048  6E08               	movwf	(___fladd@a+2)^0,c
  7242   00404A  0EBE               	movlw	190
  7243   00404C  6E09               	movwf	(___fladd@a+3)^0,c
  7244   00404E  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  7245   004052  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7246   004056  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7247   00405A  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7248   00405E  EC89  F026         	call	___fladd	;wreg free
  7249   004062  C002  F0C5         	movff	?___fladd,_decide_action$3055
  7250   004066  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  7251   00406A  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  7252   00406E  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  7253   004072                     
  7254                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.110),
      +                          2) + powf((blue_r - 0.160),2));
  7255   004072  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  7256   004076  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  7257   00407A  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  7258   00407E  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  7259   004082  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  7260   004086  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  7261   00408A  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  7262   00408E  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  7263   004092  EC89  F026         	call	___fladd	;wreg free
  7264   004096  C002  F0C9         	movff	?___fladd,_decide_action$3056
  7265   00409A  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  7266   00409E  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  7267   0040A2  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  7268   0040A6                     
  7269                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.110),
      +                          2) + powf((blue_r - 0.160),2));
  7270   0040A6  0E00               	movlw	0
  7271   0040A8  0100               	movlb	0	; () banked
  7272   0040AA  6F64               	movwf	powf@y& (0+255),b
  7273   0040AC  0E00               	movlw	0
  7274   0040AE  6F65               	movwf	(powf@y+1)& (0+255),b
  7275   0040B0  0E00               	movlw	0
  7276   0040B2  6F66               	movwf	(powf@y+2)& (0+255),b
  7277   0040B4  0E40               	movlw	64
  7278   0040B6  6F67               	movwf	(powf@y+3)& (0+255),b
  7279   0040B8  C0C5  F060         	movff	_decide_action$3055,powf@x
  7280   0040BC  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  7281   0040C0  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  7282   0040C4  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  7283   0040C8  EC41  F007         	call	_powf	;wreg free
  7284   0040CC  C060  F0CD         	movff	?_powf,_decide_action$3057
  7285   0040D0  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  7286   0040D4  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  7287   0040D8  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  7288                           
  7289                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.110),
      +                          2) + powf((blue_r - 0.160),2));
  7290   0040DC  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  7291   0040E0  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  7292   0040E4  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  7293   0040E8  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  7294   0040EC  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  7295   0040F0  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  7296   0040F4  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  7297   0040F8  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  7298   0040FC  EC89  F026         	call	___fladd	;wreg free
  7299   004100  C002  F012         	movff	?___fladd,sqrtf@x
  7300   004104  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7301   004108  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7302   00410C  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7303   004110  ECFE  F02A         	call	_sqrtf	;wreg free
  7304   004114  C012  F08B         	movff	?_sqrtf,decide_action@rgb_comp+20
  7305   004118  C013  F08C         	movff	?_sqrtf+1,decide_action@rgb_comp+21
  7306   00411C  C014  F08D         	movff	?_sqrtf+2,decide_action@rgb_comp+22
  7307   004120  C015  F08E         	movff	?_sqrtf+3,decide_action@rgb_comp+23
  7308                           
  7309                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7310   004124  0E5A               	movlw	90
  7311   004126  6E06               	movwf	___fladd@a^0,c
  7312   004128  0E64               	movlw	100
  7313   00412A  6E07               	movwf	(___fladd@a+1)^0,c
  7314   00412C  0EBB               	movlw	187
  7315   00412E  6E08               	movwf	(___fladd@a+2)^0,c
  7316   004130  0EBE               	movlw	190
  7317   004132  6E09               	movwf	(___fladd@a+3)^0,c
  7318   004134  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  7319   004138  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7320   00413C  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7321   004140  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7322   004144  EC89  F026         	call	___fladd	;wreg free
  7323   004148  C002  F0B5         	movff	?___fladd,_decide_action$3051
  7324   00414C  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  7325   004150  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  7326   004154  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  7327                           
  7328                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7329   004158  0E83               	movlw	131
  7330   00415A  6E06               	movwf	___fladd@a^0,c
  7331   00415C  0EC0               	movlw	192
  7332   00415E  6E07               	movwf	(___fladd@a+1)^0,c
  7333   004160  0E8A               	movlw	138
  7334   004162  6E08               	movwf	(___fladd@a+2)^0,c
  7335   004164  0EBE               	movlw	190
  7336   004166  6E09               	movwf	(___fladd@a+3)^0,c
  7337   004168  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  7338   00416C  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7339   004170  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7340   004174  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7341   004178  EC89  F026         	call	___fladd	;wreg free
  7342   00417C  C002  F0B9         	movff	?___fladd,_decide_action$3052
  7343   004180  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  7344   004184  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  7345   004188  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  7346   00418C                     
  7347                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7348   00418C  0E00               	movlw	0
  7349   00418E  0100               	movlb	0	; () banked
  7350   004190  6F64               	movwf	powf@y& (0+255),b
  7351   004192  0E00               	movlw	0
  7352   004194  6F65               	movwf	(powf@y+1)& (0+255),b
  7353   004196  0E00               	movlw	0
  7354   004198  6F66               	movwf	(powf@y+2)& (0+255),b
  7355   00419A  0E40               	movlw	64
  7356   00419C  6F67               	movwf	(powf@y+3)& (0+255),b
  7357   00419E  C0B5  F060         	movff	_decide_action$3051,powf@x
  7358   0041A2  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  7359   0041A6  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  7360   0041AA  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  7361   0041AE  EC41  F007         	call	_powf	;wreg free
  7362   0041B2  C060  F0BD         	movff	?_powf,_decide_action$3053
  7363   0041B6  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  7364   0041BA  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  7365   0041BE  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  7366   0041C2                     
  7367                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7368   0041C2  0E00               	movlw	0
  7369   0041C4  0100               	movlb	0	; () banked
  7370   0041C6  6F64               	movwf	powf@y& (0+255),b
  7371   0041C8  0E00               	movlw	0
  7372   0041CA  6F65               	movwf	(powf@y+1)& (0+255),b
  7373   0041CC  0E00               	movlw	0
  7374   0041CE  6F66               	movwf	(powf@y+2)& (0+255),b
  7375   0041D0  0E40               	movlw	64
  7376   0041D2  6F67               	movwf	(powf@y+3)& (0+255),b
  7377   0041D4  C0B9  F060         	movff	_decide_action$3052,powf@x
  7378   0041D8  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  7379   0041DC  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  7380   0041E0  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  7381   0041E4  EC41  F007         	call	_powf	;wreg free
  7382   0041E8  C060  F0C1         	movff	?_powf,_decide_action$3054
  7383   0041EC  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  7384   0041F0  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  7385   0041F4  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  7386                           
  7387                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7388   0041F8  0E23               	movlw	35
  7389   0041FA  6E06               	movwf	___fladd@a^0,c
  7390   0041FC  0EDB               	movlw	219
  7391   0041FE  6E07               	movwf	(___fladd@a+1)^0,c
  7392   004200  0EB9               	movlw	185
  7393   004202  6E08               	movwf	(___fladd@a+2)^0,c
  7394   004204  0EBE               	movlw	190
  7395   004206  6E09               	movwf	(___fladd@a+3)^0,c
  7396   004208  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  7397   00420C  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7398   004210  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7399   004214  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7400   004218  EC89  F026         	call	___fladd	;wreg free
  7401   00421C  C002  F0C5         	movff	?___fladd,_decide_action$3055
  7402   004220  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  7403   004224  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  7404   004228  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  7405                           
  7406                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7407   00422C  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  7408   004230  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  7409   004234  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  7410   004238  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  7411   00423C  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  7412   004240  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  7413   004244  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  7414   004248  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  7415   00424C  EC89  F026         	call	___fladd	;wreg free
  7416   004250  C002  F0C9         	movff	?___fladd,_decide_action$3056
  7417   004254  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  7418   004258  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  7419   00425C  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  7420   004260                     
  7421                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7422   004260  0E00               	movlw	0
  7423   004262  0100               	movlb	0	; () banked
  7424   004264  6F64               	movwf	powf@y& (0+255),b
  7425   004266  0E00               	movlw	0
  7426   004268  6F65               	movwf	(powf@y+1)& (0+255),b
  7427   00426A  0E00               	movlw	0
  7428   00426C  6F66               	movwf	(powf@y+2)& (0+255),b
  7429   00426E  0E40               	movlw	64
  7430   004270  6F67               	movwf	(powf@y+3)& (0+255),b
  7431   004272  C0C5  F060         	movff	_decide_action$3055,powf@x
  7432   004276  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  7433   00427A  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  7434   00427E  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  7435   004282  EC41  F007         	call	_powf	;wreg free
  7436   004286  C060  F0CD         	movff	?_powf,_decide_action$3057
  7437   00428A  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  7438   00428E  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  7439   004292  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  7440   004296                     
  7441                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7442   004296  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  7443   00429A  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  7444   00429E  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  7445   0042A2  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  7446   0042A6  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  7447   0042AA  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  7448   0042AE  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  7449   0042B2  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  7450   0042B6  EC89  F026         	call	___fladd	;wreg free
  7451   0042BA  C002  F012         	movff	?___fladd,sqrtf@x
  7452   0042BE  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7453   0042C2  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7454   0042C6  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7455   0042CA  ECFE  F02A         	call	_sqrtf	;wreg free
  7456   0042CE  C012  F08F         	movff	?_sqrtf,decide_action@rgb_comp+24
  7457   0042D2  C013  F090         	movff	?_sqrtf+1,decide_action@rgb_comp+25
  7458   0042D6  C014  F091         	movff	?_sqrtf+2,decide_action@rgb_comp+26
  7459   0042DA  C015  F092         	movff	?_sqrtf+3,decide_action@rgb_comp+27
  7460   0042DE                     
  7461                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7462   0042DE  0E1F               	movlw	31
  7463   0042E0  6E06               	movwf	___fladd@a^0,c
  7464   0042E2  0E85               	movlw	133
  7465   0042E4  6E07               	movwf	(___fladd@a+1)^0,c
  7466   0042E6  0EAB               	movlw	171
  7467   0042E8  6E08               	movwf	(___fladd@a+2)^0,c
  7468   0042EA  0EBE               	movlw	190
  7469   0042EC  6E09               	movwf	(___fladd@a+3)^0,c
  7470   0042EE  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  7471   0042F2  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7472   0042F6  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7473   0042FA  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7474   0042FE  EC89  F026         	call	___fladd	;wreg free
  7475   004302  C002  F0B5         	movff	?___fladd,_decide_action$3051
  7476   004306  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  7477   00430A  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  7478   00430E  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  7479   004312                     
  7480                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7481   004312  0EB0               	movlw	176
  7482   004314  6E06               	movwf	___fladd@a^0,c
  7483   004316  0E72               	movlw	114
  7484   004318  6E07               	movwf	(___fladd@a+1)^0,c
  7485   00431A  0EA8               	movlw	168
  7486   00431C  6E08               	movwf	(___fladd@a+2)^0,c
  7487   00431E  0EBE               	movlw	190
  7488   004320  6E09               	movwf	(___fladd@a+3)^0,c
  7489   004322  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  7490   004326  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7491   00432A  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7492   00432E  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7493   004332  EC89  F026         	call	___fladd	;wreg free
  7494   004336  C002  F0B9         	movff	?___fladd,_decide_action$3052
  7495   00433A  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  7496   00433E  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  7497   004342  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  7498                           
  7499                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7500   004346  0E00               	movlw	0
  7501   004348  0100               	movlb	0	; () banked
  7502   00434A  6F64               	movwf	powf@y& (0+255),b
  7503   00434C  0E00               	movlw	0
  7504   00434E  6F65               	movwf	(powf@y+1)& (0+255),b
  7505   004350  0E00               	movlw	0
  7506   004352  6F66               	movwf	(powf@y+2)& (0+255),b
  7507   004354  0E40               	movlw	64
  7508   004356  6F67               	movwf	(powf@y+3)& (0+255),b
  7509   004358  C0B5  F060         	movff	_decide_action$3051,powf@x
  7510   00435C  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  7511   004360  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  7512   004364  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  7513   004368  EC41  F007         	call	_powf	;wreg free
  7514   00436C  C060  F0BD         	movff	?_powf,_decide_action$3053
  7515   004370  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  7516   004374  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  7517   004378  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  7518                           
  7519                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7520   00437C  0E00               	movlw	0
  7521   00437E  0100               	movlb	0	; () banked
  7522   004380  6F64               	movwf	powf@y& (0+255),b
  7523   004382  0E00               	movlw	0
  7524   004384  6F65               	movwf	(powf@y+1)& (0+255),b
  7525   004386  0E00               	movlw	0
  7526   004388  6F66               	movwf	(powf@y+2)& (0+255),b
  7527   00438A  0E40               	movlw	64
  7528   00438C  6F67               	movwf	(powf@y+3)& (0+255),b
  7529   00438E  C0B9  F060         	movff	_decide_action$3052,powf@x
  7530   004392  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  7531   004396  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  7532   00439A  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  7533   00439E  EC41  F007         	call	_powf	;wreg free
  7534   0043A2  C060  F0C1         	movff	?_powf,_decide_action$3054
  7535   0043A6  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  7536   0043AA  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  7537   0043AE  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  7538   0043B2                     
  7539                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7540   0043B2  0E1F               	movlw	31
  7541   0043B4  6E06               	movwf	___fladd@a^0,c
  7542   0043B6  0E85               	movlw	133
  7543   0043B8  6E07               	movwf	(___fladd@a+1)^0,c
  7544   0043BA  0EAB               	movlw	171
  7545   0043BC  6E08               	movwf	(___fladd@a+2)^0,c
  7546   0043BE  0EBE               	movlw	190
  7547   0043C0  6E09               	movwf	(___fladd@a+3)^0,c
  7548   0043C2  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  7549   0043C6  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7550   0043CA  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7551   0043CE  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7552   0043D2  EC89  F026         	call	___fladd	;wreg free
  7553   0043D6  C002  F0C5         	movff	?___fladd,_decide_action$3055
  7554   0043DA  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  7555   0043DE  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  7556   0043E2  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  7557   0043E6                     
  7558                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7559   0043E6  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  7560   0043EA  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  7561   0043EE  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  7562   0043F2  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  7563   0043F6  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  7564   0043FA  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  7565   0043FE  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  7566   004402  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  7567   004406  EC89  F026         	call	___fladd	;wreg free
  7568   00440A  C002  F0C9         	movff	?___fladd,_decide_action$3056
  7569   00440E  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  7570   004412  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  7571   004416  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  7572                           
  7573                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7574   00441A  0E00               	movlw	0
  7575   00441C  0100               	movlb	0	; () banked
  7576   00441E  6F64               	movwf	powf@y& (0+255),b
  7577   004420  0E00               	movlw	0
  7578   004422  6F65               	movwf	(powf@y+1)& (0+255),b
  7579   004424  0E00               	movlw	0
  7580   004426  6F66               	movwf	(powf@y+2)& (0+255),b
  7581   004428  0E40               	movlw	64
  7582   00442A  6F67               	movwf	(powf@y+3)& (0+255),b
  7583   00442C  C0C5  F060         	movff	_decide_action$3055,powf@x
  7584   004430  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  7585   004434  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  7586   004438  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  7587   00443C  EC41  F007         	call	_powf	;wreg free
  7588   004440  C060  F0CD         	movff	?_powf,_decide_action$3057
  7589   004444  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  7590   004448  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  7591   00444C  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  7592   004450                     
  7593                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7594   004450  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  7595   004454  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  7596   004458  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  7597   00445C  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  7598   004460  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  7599   004464  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  7600   004468  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  7601   00446C  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  7602   004470  EC89  F026         	call	___fladd	;wreg free
  7603   004474  C002  F012         	movff	?___fladd,sqrtf@x
  7604   004478  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7605   00447C  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7606   004480  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7607   004484  ECFE  F02A         	call	_sqrtf	;wreg free
  7608   004488  C012  F093         	movff	?_sqrtf,decide_action@rgb_comp+28
  7609   00448C  C013  F094         	movff	?_sqrtf+1,decide_action@rgb_comp+29
  7610   004490  C014  F095         	movff	?_sqrtf+2,decide_action@rgb_comp+30
  7611   004494  C015  F096         	movff	?_sqrtf+3,decide_action@rgb_comp+31
  7612   004498                     
  7613                           ;color.c: 175:     action = 0;
  7614   004498  0E00               	movlw	0
  7615   00449A  0100               	movlb	0	; () banked
  7616   00449C  6F97               	movwf	decide_action@action& (0+255),b
  7617   00449E                     
  7618                           ; BSR set to: 0
  7619                           ;color.c: 176:     for(char i = 0; i < 8; i +=1){
  7620   00449E  0E00               	movlw	0
  7621   0044A0  6F9C               	movwf	decide_action@i& (0+255),b
  7622   0044A2                     l7580:
  7623                           
  7624                           ; BSR set to: 0
  7625   0044A2  0E07               	movlw	7
  7626   0044A4  659C               	cpfsgt	decide_action@i& (0+255),b
  7627   0044A6  EF57  F022         	goto	u7811
  7628   0044AA  EF59  F022         	goto	u7810
  7629   0044AE                     u7811:
  7630   0044AE  EF5B  F022         	goto	l7584
  7631   0044B2                     u7810:
  7632   0044B2  EF86  F022         	goto	l7592
  7633   0044B6                     l7584:
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;color.c: 177:         if(rgb_comp[i] < rgb_comp[action]){
  7637   0044B6  519C               	movf	decide_action@i& (0+255),w,b
  7638   0044B8  0D04               	mullw	4
  7639   0044BA  50F3               	movf	243,w,c
  7640   0044BC  0F77               	addlw	low decide_action@rgb_comp
  7641   0044BE  6ED9               	movwf	fsr2l,c
  7642   0044C0  6ADA               	clrf	fsr2h,c
  7643   0044C2  CFDE F04C          	movff	postinc2,___flge@ff1
  7644   0044C6  CFDE F04D          	movff	postinc2,___flge@ff1+1
  7645   0044CA  CFDE F04E          	movff	postinc2,___flge@ff1+2
  7646   0044CE  CFDE F04F          	movff	postinc2,___flge@ff1+3
  7647   0044D2  5197               	movf	decide_action@action& (0+255),w,b
  7648   0044D4  0D04               	mullw	4
  7649   0044D6  50F3               	movf	243,w,c
  7650   0044D8  0F77               	addlw	low decide_action@rgb_comp
  7651   0044DA  6ED9               	movwf	fsr2l,c
  7652   0044DC  6ADA               	clrf	fsr2h,c
  7653   0044DE  CFDE F050          	movff	postinc2,___flge@ff2
  7654   0044E2  CFDE F051          	movff	postinc2,___flge@ff2+1
  7655   0044E6  CFDE F052          	movff	postinc2,___flge@ff2+2
  7656   0044EA  CFDE F053          	movff	postinc2,___flge@ff2+3
  7657   0044EE  EC54  F033         	call	___flge	;wreg free
  7658   0044F2  B0D8               	btfsc	status,0,c
  7659   0044F4  EF7E  F022         	goto	u7821
  7660   0044F8  EF80  F022         	goto	u7820
  7661   0044FC                     u7821:
  7662   0044FC  EF82  F022         	goto	l7588
  7663   004500                     u7820:
  7664   004500                     
  7665                           ;color.c: 178:             action = i;
  7666   004500  C09C  F097         	movff	decide_action@i,decide_action@action
  7667   004504                     l7588:
  7668                           
  7669                           ;color.c: 180:     }
  7670   004504  0100               	movlb	0	; () banked
  7671   004506  2B9C               	incf	decide_action@i& (0+255),f,b
  7672   004508  EF51  F022         	goto	l7580
  7673   00450C                     l7592:
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;color.c: 182:     return action;
  7677   00450C  5197               	movf	decide_action@action& (0+255),w,b
  7678   00450E                     
  7679                           ; BSR set to: 0
  7680   00450E  0012               	return		;funcret
  7681   004510                     __end_of_decide_action:
  7682                           	callstack 0
  7683                           
  7684 ;; *************** function _powf *****************
  7685 ;; Defined at:
  7686 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\powf.c"
  7687 ;; Parameters:    Size  Location     Type
  7688 ;;  x               4    0[BANK0 ] float 
  7689 ;;  y               4    4[BANK0 ] float 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;  s2              4  144[BANK1 ] float 
  7692 ;;  s_h             4  116[BANK1 ] struct fui
  7693 ;;  t_h             4  112[BANK1 ] struct fui
  7694 ;;  t_l             4   52[BANK1 ] float 
  7695 ;;  s_l             4   48[BANK1 ] float 
  7696 ;;  z               4  180[BANK1 ] struct fui
  7697 ;;  t               4  176[BANK1 ] struct fui
  7698 ;;  ix              4  172[BANK1 ] struct fui
  7699 ;;  j               4  168[BANK1 ] long 
  7700 ;;  k               4  164[BANK1 ] long 
  7701 ;;  p_h             4  160[BANK1 ] struct fui
  7702 ;;  is              4  152[BANK1 ] struct fui
  7703 ;;  iy              4  148[BANK1 ] long 
  7704 ;;  t1              4  140[BANK1 ] struct fui
  7705 ;;  n               4  136[BANK1 ] long 
  7706 ;;  hy              4  132[BANK1 ] struct fui
  7707 ;;  v               4  128[BANK1 ] float 
  7708 ;;  u               4  124[BANK1 ] float 
  7709 ;;  ax              4  120[BANK1 ] struct fui
  7710 ;;  p_l             4  108[BANK1 ] float 
  7711 ;;  hx              4  104[BANK1 ] struct fui
  7712 ;;  sn              4  100[BANK1 ] unsigned long 
  7713 ;;  s               4   88[BANK1 ] float 
  7714 ;;  yisint          4   84[BANK1 ] long 
  7715 ;;  r               4   80[BANK1 ] float 
  7716 ;;  w               4   68[BANK1 ] float 
  7717 ;;  y1              4   44[BANK1 ] struct fui
  7718 ;;  i               4   40[BANK1 ] long 
  7719 ;;  z_l             4   36[BANK1 ] float 
  7720 ;;  z_h             4   32[BANK1 ] float 
  7721 ;;  t2              4   28[BANK1 ] float 
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  4    0[BANK0 ] float 
  7724 ;; Registers used:
  7725 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7731 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7732 ;;      Locals:         0       0     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7733 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7734 ;;      Totals:         0      17     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7735 ;;Total ram usage:      201 bytes
  7736 ;; Hardware stack levels used: 1
  7737 ;; Hardware stack levels required when called: 4
  7738 ;; This function calls:
  7739 ;;		___fladd
  7740 ;;		___fldiv
  7741 ;;		___flge
  7742 ;;		___flmul
  7743 ;;		___flneg
  7744 ;;		___flsub
  7745 ;;		___xxtofl
  7746 ;;		_scalbnf
  7747 ;;		_sqrtf
  7748 ;; This function is called by:
  7749 ;;		_decide_action
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           
  7753                           	psect	text29
  7754   000E82                     __ptext29:
  7755                           	callstack 0
  7756   000E82                     _powf:
  7757                           	callstack 25
  7758   000E82  C060  F168         	movff	powf@x,powf@hx
  7759   000E86  C061  F169         	movff	powf@x+1,powf@hx+1
  7760   000E8A  C062  F16A         	movff	powf@x+2,powf@hx+2
  7761   000E8E  C063  F16B         	movff	powf@x+3,powf@hx+3
  7762   000E92  C064  F184         	movff	powf@y,powf@hy
  7763   000E96  C065  F185         	movff	powf@y+1,powf@hy+1
  7764   000E9A  C066  F186         	movff	powf@y+2,powf@hy+2
  7765   000E9E  C067  F187         	movff	powf@y+3,powf@hy+3
  7766   000EA2  0EFF               	movlw	255
  7767   000EA4  0101               	movlb	1	; () banked
  7768   000EA6  1568               	andwf	powf@hx& (0+255),w,b
  7769   000EA8  6FAC               	movwf	powf@ix& (0+255),b
  7770   000EAA  0EFF               	movlw	255
  7771   000EAC  1569               	andwf	(powf@hx+1)& (0+255),w,b
  7772   000EAE  6FAD               	movwf	(powf@ix+1)& (0+255),b
  7773   000EB0  0EFF               	movlw	255
  7774   000EB2  156A               	andwf	(powf@hx+2)& (0+255),w,b
  7775   000EB4  6FAE               	movwf	(powf@ix+2)& (0+255),b
  7776   000EB6  0E7F               	movlw	127
  7777   000EB8  156B               	andwf	(powf@hx+3)& (0+255),w,b
  7778   000EBA  6FAF               	movwf	(powf@ix+3)& (0+255),b
  7779   000EBC  0EFF               	movlw	255
  7780   000EBE  1584               	andwf	powf@hy& (0+255),w,b
  7781   000EC0  6F94               	movwf	powf@iy& (0+255),b
  7782   000EC2  0EFF               	movlw	255
  7783   000EC4  1585               	andwf	(powf@hy+1)& (0+255),w,b
  7784   000EC6  6F95               	movwf	(powf@iy+1)& (0+255),b
  7785   000EC8  0EFF               	movlw	255
  7786   000ECA  1586               	andwf	(powf@hy+2)& (0+255),w,b
  7787   000ECC  6F96               	movwf	(powf@iy+2)& (0+255),b
  7788   000ECE  0E7F               	movlw	127
  7789   000ED0  1587               	andwf	(powf@hy+3)& (0+255),w,b
  7790   000ED2  6F97               	movwf	(powf@iy+3)& (0+255),b
  7791   000ED4  5194               	movf	powf@iy& (0+255),w,b
  7792   000ED6  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  7793   000ED8  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  7794   000EDA  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  7795   000EDC  A4D8               	btfss	status,2,c
  7796   000EDE  EF73  F007         	goto	u7201
  7797   000EE2  EF75  F007         	goto	u7200
  7798   000EE6                     u7201:
  7799   000EE6  EF80  F007         	goto	l7052
  7800   000EEA                     u7200:
  7801   000EEA                     
  7802                           ; BSR set to: 1
  7803   000EEA  0E00               	movlw	0
  7804   000EEC  0100               	movlb	0	; () banked
  7805   000EEE  6F60               	movwf	?_powf& (0+255),b
  7806   000EF0  0E00               	movlw	0
  7807   000EF2  6F61               	movwf	(?_powf+1)& (0+255),b
  7808   000EF4  0E80               	movlw	128
  7809   000EF6  6F62               	movwf	(?_powf+2)& (0+255),b
  7810   000EF8  0E3F               	movlw	63
  7811   000EFA  6F63               	movwf	(?_powf+3)& (0+255),b
  7812   000EFC  EF80  F019         	goto	l1371
  7813   000F00                     l7052:
  7814                           
  7815                           ; BSR set to: 1
  7816   000F00  0E80               	movlw	128
  7817   000F02  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  7818   000F04  E109               	bnz	u7211
  7819   000F06  0E3F               	movlw	63
  7820   000F08  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  7821   000F0A  1168               	iorwf	powf@hx& (0+255),w,b
  7822   000F0C  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  7823   000F0E  A4D8               	btfss	status,2,c
  7824   000F10  EF8C  F007         	goto	u7211
  7825   000F14  EF8E  F007         	goto	u7210
  7826   000F18                     u7211:
  7827   000F18  EF99  F007         	goto	l7058
  7828   000F1C                     u7210:
  7829   000F1C                     
  7830                           ; BSR set to: 1
  7831   000F1C  0E00               	movlw	0
  7832   000F1E  0100               	movlb	0	; () banked
  7833   000F20  6F60               	movwf	?_powf& (0+255),b
  7834   000F22  0E00               	movlw	0
  7835   000F24  6F61               	movwf	(?_powf+1)& (0+255),b
  7836   000F26  0E80               	movlw	128
  7837   000F28  6F62               	movwf	(?_powf+2)& (0+255),b
  7838   000F2A  0E3F               	movlw	63
  7839   000F2C  6F63               	movwf	(?_powf+3)& (0+255),b
  7840   000F2E  EF80  F019         	goto	l1371
  7841   000F32                     l7058:
  7842                           
  7843                           ; BSR set to: 1
  7844   000F32  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  7845   000F34  EFAA  F007         	goto	u7220
  7846   000F38  05AC               	decf	powf@ix& (0+255),w,b
  7847   000F3A  0E00               	movlw	0
  7848   000F3C  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  7849   000F3E  0E80               	movlw	128
  7850   000F40  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  7851   000F42  0E7F               	movlw	127
  7852   000F44  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  7853   000F46  B0D8               	btfsc	status,0,c
  7854   000F48  EFA8  F007         	goto	u7221
  7855   000F4C  EFAA  F007         	goto	u7220
  7856   000F50                     u7221:
  7857   000F50  EFBB  F007         	goto	l7062
  7858   000F54                     u7220:
  7859   000F54                     
  7860                           ; BSR set to: 1
  7861   000F54  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7862   000F56  EFB9  F007         	goto	u7231
  7863   000F5A  0594               	decf	powf@iy& (0+255),w,b
  7864   000F5C  0E00               	movlw	0
  7865   000F5E  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  7866   000F60  0E80               	movlw	128
  7867   000F62  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  7868   000F64  0E7F               	movlw	127
  7869   000F66  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7870   000F68  A0D8               	btfss	status,0,c
  7871   000F6A  EFB9  F007         	goto	u7231
  7872   000F6E  EFBB  F007         	goto	u7230
  7873   000F72                     u7231:
  7874   000F72  EFD7  F007         	goto	l7066
  7875   000F76                     u7230:
  7876   000F76                     l7062:
  7877                           
  7878                           ; BSR set to: 1
  7879   000F76  C060  F002         	movff	powf@x,___fladd@b
  7880   000F7A  C061  F003         	movff	powf@x+1,___fladd@b+1
  7881   000F7E  C062  F004         	movff	powf@x+2,___fladd@b+2
  7882   000F82  C063  F005         	movff	powf@x+3,___fladd@b+3
  7883   000F86  C064  F006         	movff	powf@y,___fladd@a
  7884   000F8A  C065  F007         	movff	powf@y+1,___fladd@a+1
  7885   000F8E  C066  F008         	movff	powf@y+2,___fladd@a+2
  7886   000F92  C067  F009         	movff	powf@y+3,___fladd@a+3
  7887   000F96  EC89  F026         	call	___fladd	;wreg free
  7888   000F9A  C002  F060         	movff	?___fladd,?_powf
  7889   000F9E  C003  F061         	movff	?___fladd+1,?_powf+1
  7890   000FA2  C004  F062         	movff	?___fladd+2,?_powf+2
  7891   000FA6  C005  F063         	movff	?___fladd+3,?_powf+3
  7892   000FAA  EF80  F019         	goto	l1371
  7893   000FAE                     l7066:
  7894                           
  7895                           ; BSR set to: 1
  7896   000FAE  0E00               	movlw	0
  7897   000FB0  6F54               	movwf	powf@yisint& (0+255),b
  7898   000FB2  0E00               	movlw	0
  7899   000FB4  6F55               	movwf	(powf@yisint+1)& (0+255),b
  7900   000FB6  0E00               	movlw	0
  7901   000FB8  6F56               	movwf	(powf@yisint+2)& (0+255),b
  7902   000FBA  0E00               	movlw	0
  7903   000FBC  6F57               	movwf	(powf@yisint+3)& (0+255),b
  7904   000FBE                     
  7905                           ; BSR set to: 1
  7906   000FBE  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  7907   000FC0  EFE6  F007         	goto	u7240
  7908   000FC4  EFE4  F007         	goto	u7241
  7909   000FC8                     u7241:
  7910   000FC8  EFB2  F008         	goto	l1376
  7911   000FCC                     u7240:
  7912   000FCC                     
  7913                           ; BSR set to: 1
  7914   000FCC  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7915   000FCE  EFF2  F007         	goto	u7251
  7916   000FD2  0E80               	movlw	128
  7917   000FD4  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  7918   000FD6  0E4B               	movlw	75
  7919   000FD8  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7920   000FDA  A0D8               	btfss	status,0,c
  7921   000FDC  EFF2  F007         	goto	u7251
  7922   000FE0  EFF4  F007         	goto	u7250
  7923   000FE4                     u7251:
  7924   000FE4  EFFE  F007         	goto	l7074
  7925   000FE8                     u7250:
  7926   000FE8                     
  7927                           ; BSR set to: 1
  7928   000FE8  0E02               	movlw	2
  7929   000FEA  6F54               	movwf	powf@yisint& (0+255),b
  7930   000FEC  0E00               	movlw	0
  7931   000FEE  6F55               	movwf	(powf@yisint+1)& (0+255),b
  7932   000FF0  0E00               	movlw	0
  7933   000FF2  6F56               	movwf	(powf@yisint+2)& (0+255),b
  7934   000FF4  0E00               	movlw	0
  7935   000FF6  6F57               	movwf	(powf@yisint+3)& (0+255),b
  7936   000FF8  EFB2  F008         	goto	l1376
  7937   000FFC                     l7074:
  7938                           
  7939                           ; BSR set to: 1
  7940   000FFC  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7941   000FFE  EF0A  F008         	goto	u7261
  7942   001002  0E80               	movlw	128
  7943   001004  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  7944   001006  0E3F               	movlw	63
  7945   001008  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7946   00100A  A0D8               	btfss	status,0,c
  7947   00100C  EF0A  F008         	goto	u7261
  7948   001010  EF0C  F008         	goto	u7260
  7949   001014                     u7261:
  7950   001014  EFB2  F008         	goto	l1376
  7951   001018                     u7260:
  7952   001018                     
  7953                           ; BSR set to: 1
  7954   001018  0E17               	movlw	23
  7955   00101A  0100               	movlb	0	; () banked
  7956   00101C  6F68               	movwf	??_powf& (0+255),b
  7957   00101E  C194  F069         	movff	powf@iy,??_powf+1
  7958   001022  C195  F06A         	movff	powf@iy+1,??_powf+2
  7959   001026  C196  F06B         	movff	powf@iy+2,??_powf+3
  7960   00102A  C197  F06C         	movff	powf@iy+3,??_powf+4
  7961   00102E                     u7275:
  7962   00102E  6768               	tstfsz	??_powf& (0+255),b
  7963   001030  EF1C  F008         	goto	u7276
  7964   001034  EF24  F008         	goto	u7277
  7965   001038                     u7276:
  7966   001038  356C               	rlcf	(??_powf+4)& (0+255),w,b
  7967   00103A  336C               	rrcf	(??_powf+4)& (0+255),f,b
  7968   00103C  336B               	rrcf	(??_powf+3)& (0+255),f,b
  7969   00103E  336A               	rrcf	(??_powf+2)& (0+255),f,b
  7970   001040  3369               	rrcf	(??_powf+1)& (0+255),f,b
  7971   001042  2F68               	decfsz	??_powf& (0+255),f,b
  7972   001044  EF17  F008         	goto	u7275
  7973   001048                     u7277:
  7974   001048  0E81               	movlw	129
  7975   00104A  0100               	movlb	0	; () banked
  7976   00104C  2569               	addwf	(??_powf+1)& (0+255),w,b
  7977   00104E  0101               	movlb	1	; () banked
  7978   001050  6FA4               	movwf	powf@k& (0+255),b
  7979   001052  0EFF               	movlw	255
  7980   001054  0100               	movlb	0	; () banked
  7981   001056  216A               	addwfc	(??_powf+2)& (0+255),w,b
  7982   001058  0101               	movlb	1	; () banked
  7983   00105A  6FA5               	movwf	(powf@k+1)& (0+255),b
  7984   00105C  0EFF               	movlw	255
  7985   00105E  0100               	movlb	0	; () banked
  7986   001060  216B               	addwfc	(??_powf+3)& (0+255),w,b
  7987   001062  0101               	movlb	1	; () banked
  7988   001064  6FA6               	movwf	(powf@k+2)& (0+255),b
  7989   001066  0EFF               	movlw	255
  7990   001068  0100               	movlb	0	; () banked
  7991   00106A  216C               	addwfc	(??_powf+4)& (0+255),w,b
  7992   00106C  0101               	movlb	1	; () banked
  7993   00106E  6FA7               	movwf	(powf@k+3)& (0+255),b
  7994   001070  51A4               	movf	powf@k& (0+255),w,b
  7995   001072  0817               	sublw	23
  7996   001074  0100               	movlb	0	; () banked
  7997   001076  6F68               	movwf	??_powf& (0+255),b
  7998   001078  C194  F069         	movff	powf@iy,??_powf+1
  7999   00107C  C195  F06A         	movff	powf@iy+1,??_powf+2
  8000   001080  C196  F06B         	movff	powf@iy+2,??_powf+3
  8001   001084  C197  F06C         	movff	powf@iy+3,??_powf+4
  8002   001088                     u7285:
  8003   001088  6768               	tstfsz	??_powf& (0+255),b
  8004   00108A  EF49  F008         	goto	u7286
  8005   00108E  EF51  F008         	goto	u7287
  8006   001092                     u7286:
  8007   001092  356C               	rlcf	(??_powf+4)& (0+255),w,b
  8008   001094  336C               	rrcf	(??_powf+4)& (0+255),f,b
  8009   001096  336B               	rrcf	(??_powf+3)& (0+255),f,b
  8010   001098  336A               	rrcf	(??_powf+2)& (0+255),f,b
  8011   00109A  3369               	rrcf	(??_powf+1)& (0+255),f,b
  8012   00109C  2F68               	decfsz	??_powf& (0+255),f,b
  8013   00109E  EF44  F008         	goto	u7285
  8014   0010A2                     u7287:
  8015   0010A2  C069  F1A8         	movff	??_powf+1,powf@j
  8016   0010A6  C06A  F1A9         	movff	??_powf+2,powf@j+1
  8017   0010AA  C06B  F1AA         	movff	??_powf+3,powf@j+2
  8018   0010AE  C06C  F1AB         	movff	??_powf+4,powf@j+3
  8019   0010B2  0101               	movlb	1	; () banked
  8020   0010B4  51A4               	movf	powf@k& (0+255),w,b
  8021   0010B6  0817               	sublw	23
  8022   0010B8  0100               	movlb	0	; () banked
  8023   0010BA  6F68               	movwf	??_powf& (0+255),b
  8024   0010BC  C1A8  F069         	movff	powf@j,??_powf+1
  8025   0010C0  C1A9  F06A         	movff	powf@j+1,??_powf+2
  8026   0010C4  C1AA  F06B         	movff	powf@j+2,??_powf+3
  8027   0010C8  C1AB  F06C         	movff	powf@j+3,??_powf+4
  8028   0010CC  2B68               	incf	??_powf& (0+255),f,b
  8029   0010CE  EF6E  F008         	goto	u7290
  8030   0010D2                     u7295:
  8031   0010D2  90D8               	bcf	status,0,c
  8032   0010D4  3769               	rlcf	(??_powf+1)& (0+255),f,b
  8033   0010D6  376A               	rlcf	(??_powf+2)& (0+255),f,b
  8034   0010D8  376B               	rlcf	(??_powf+3)& (0+255),f,b
  8035   0010DA  376C               	rlcf	(??_powf+4)& (0+255),f,b
  8036   0010DC                     u7290:
  8037   0010DC  2F68               	decfsz	??_powf& (0+255),f,b
  8038   0010DE  EF69  F008         	goto	u7295
  8039   0010E2  0101               	movlb	1	; () banked
  8040   0010E4  5194               	movf	powf@iy& (0+255),w,b
  8041   0010E6  0100               	movlb	0	; () banked
  8042   0010E8  1969               	xorwf	(??_powf+1)& (0+255),w,b
  8043   0010EA  E113               	bnz	u7301
  8044   0010EC  0101               	movlb	1	; () banked
  8045   0010EE  5195               	movf	(powf@iy+1)& (0+255),w,b
  8046   0010F0  0100               	movlb	0	; () banked
  8047   0010F2  196A               	xorwf	(??_powf+2)& (0+255),w,b
  8048   0010F4  E10E               	bnz	u7301
  8049   0010F6  0101               	movlb	1	; () banked
  8050   0010F8  5196               	movf	(powf@iy+2)& (0+255),w,b
  8051   0010FA  0100               	movlb	0	; () banked
  8052   0010FC  196B               	xorwf	(??_powf+3)& (0+255),w,b
  8053   0010FE  E109               	bnz	u7301
  8054   001100  0101               	movlb	1	; () banked
  8055   001102  5197               	movf	(powf@iy+3)& (0+255),w,b
  8056   001104  0100               	movlb	0	; () banked
  8057   001106  196C               	xorwf	(??_powf+4)& (0+255),w,b
  8058   001108  A4D8               	btfss	status,2,c
  8059   00110A  EF89  F008         	goto	u7301
  8060   00110E  EF8B  F008         	goto	u7300
  8061   001112                     u7301:
  8062   001112  EFB2  F008         	goto	l1376
  8063   001116                     u7300:
  8064   001116                     
  8065                           ; BSR set to: 0
  8066   001116  0E01               	movlw	1
  8067   001118  0101               	movlb	1	; () banked
  8068   00111A  15A8               	andwf	powf@j& (0+255),w,b
  8069   00111C  0100               	movlb	0	; () banked
  8070   00111E  6F68               	movwf	??_powf& (0+255),b
  8071   001120  0E00               	movlw	0
  8072   001122  0101               	movlb	1	; () banked
  8073   001124  15A9               	andwf	(powf@j+1)& (0+255),w,b
  8074   001126  0100               	movlb	0	; () banked
  8075   001128  6F69               	movwf	(??_powf+1)& (0+255),b
  8076   00112A  0E00               	movlw	0
  8077   00112C  0101               	movlb	1	; () banked
  8078   00112E  15AA               	andwf	(powf@j+2)& (0+255),w,b
  8079   001130  0100               	movlb	0	; () banked
  8080   001132  6F6A               	movwf	(??_powf+2)& (0+255),b
  8081   001134  0E00               	movlw	0
  8082   001136  0101               	movlb	1	; () banked
  8083   001138  15AB               	andwf	(powf@j+3)& (0+255),w,b
  8084   00113A  0100               	movlb	0	; () banked
  8085   00113C  6F6B               	movwf	(??_powf+3)& (0+255),b
  8086   00113E  5168               	movf	??_powf& (0+255),w,b
  8087   001140  0802               	sublw	2
  8088   001142  0101               	movlb	1	; () banked
  8089   001144  6F54               	movwf	powf@yisint& (0+255),b
  8090   001146  0E00               	movlw	0
  8091   001148  0100               	movlb	0	; () banked
  8092   00114A  5569               	subfwb	(??_powf+1)& (0+255),w,b
  8093   00114C  0101               	movlb	1	; () banked
  8094   00114E  6F55               	movwf	(powf@yisint+1)& (0+255),b
  8095   001150  0E00               	movlw	0
  8096   001152  0100               	movlb	0	; () banked
  8097   001154  556A               	subfwb	(??_powf+2)& (0+255),w,b
  8098   001156  0101               	movlb	1	; () banked
  8099   001158  6F56               	movwf	(powf@yisint+2)& (0+255),b
  8100   00115A  0E00               	movlw	0
  8101   00115C  0100               	movlb	0	; () banked
  8102   00115E  556B               	subfwb	(??_powf+3)& (0+255),w,b
  8103   001160  0101               	movlb	1	; () banked
  8104   001162  6F57               	movwf	(powf@yisint+3)& (0+255),b
  8105   001164                     l1376:
  8106   001164  0E80               	movlw	128
  8107   001166  0101               	movlb	1	; () banked
  8108   001168  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  8109   00116A  E109               	bnz	u7311
  8110   00116C  0E7F               	movlw	127
  8111   00116E  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  8112   001170  1194               	iorwf	powf@iy& (0+255),w,b
  8113   001172  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  8114   001174  A4D8               	btfss	status,2,c
  8115   001176  EFBF  F008         	goto	u7311
  8116   00117A  EFC1  F008         	goto	u7310
  8117   00117E                     u7311:
  8118   00117E  EF2D  F009         	goto	l7104
  8119   001182                     u7310:
  8120   001182                     
  8121                           ; BSR set to: 1
  8122   001182  0E80               	movlw	128
  8123   001184  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  8124   001186  E109               	bnz	u7321
  8125   001188  0E3F               	movlw	63
  8126   00118A  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  8127   00118C  11AC               	iorwf	powf@ix& (0+255),w,b
  8128   00118E  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8129   001190  A4D8               	btfss	status,2,c
  8130   001192  EFCD  F008         	goto	u7321
  8131   001196  EFCF  F008         	goto	u7320
  8132   00119A                     u7321:
  8133   00119A  EFDA  F008         	goto	l7088
  8134   00119E                     u7320:
  8135   00119E                     
  8136                           ; BSR set to: 1
  8137   00119E  0E00               	movlw	0
  8138   0011A0  0100               	movlb	0	; () banked
  8139   0011A2  6F60               	movwf	?_powf& (0+255),b
  8140   0011A4  0E00               	movlw	0
  8141   0011A6  6F61               	movwf	(?_powf+1)& (0+255),b
  8142   0011A8  0E80               	movlw	128
  8143   0011AA  6F62               	movwf	(?_powf+2)& (0+255),b
  8144   0011AC  0E3F               	movlw	63
  8145   0011AE  6F63               	movwf	(?_powf+3)& (0+255),b
  8146   0011B0  EF80  F019         	goto	l1371
  8147   0011B4                     l7088:
  8148                           
  8149                           ; BSR set to: 1
  8150   0011B4  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8151   0011B6  EFE9  F008         	goto	u7331
  8152   0011BA  05AC               	decf	powf@ix& (0+255),w,b
  8153   0011BC  0E00               	movlw	0
  8154   0011BE  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  8155   0011C0  0E80               	movlw	128
  8156   0011C2  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  8157   0011C4  0E3F               	movlw	63
  8158   0011C6  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  8159   0011C8  A0D8               	btfss	status,0,c
  8160   0011CA  EFE9  F008         	goto	u7331
  8161   0011CE  EFEB  F008         	goto	u7330
  8162   0011D2                     u7331:
  8163   0011D2  EF07  F009         	goto	l7096
  8164   0011D6                     u7330:
  8165   0011D6                     
  8166                           ; BSR set to: 1
  8167   0011D6  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8168   0011D8  EFF2  F008         	goto	u7340
  8169   0011DC  EFF0  F008         	goto	u7341
  8170   0011E0                     u7341:
  8171   0011E0  EFFD  F008         	goto	l1386
  8172   0011E4                     u7340:
  8173   0011E4                     
  8174                           ; BSR set to: 1
  8175   0011E4  0E00               	movlw	0
  8176   0011E6  0100               	movlb	0	; () banked
  8177   0011E8  6F60               	movwf	?_powf& (0+255),b
  8178   0011EA  0E00               	movlw	0
  8179   0011EC  6F61               	movwf	(?_powf+1)& (0+255),b
  8180   0011EE  0E00               	movlw	0
  8181   0011F0  6F62               	movwf	(?_powf+2)& (0+255),b
  8182   0011F2  0E00               	movlw	0
  8183   0011F4  6F63               	movwf	(?_powf+3)& (0+255),b
  8184   0011F6  EF80  F019         	goto	l1371
  8185   0011FA                     l1386:
  8186                           
  8187                           ; BSR set to: 1
  8188   0011FA  C064  F060         	movff	powf@y,?_powf
  8189   0011FE  C065  F061         	movff	powf@y+1,?_powf+1
  8190   001202  C066  F062         	movff	powf@y+2,?_powf+2
  8191   001206  C067  F063         	movff	powf@y+3,?_powf+3
  8192   00120A  EF80  F019         	goto	l1371
  8193   00120E                     l7096:
  8194                           
  8195                           ; BSR set to: 1
  8196   00120E  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8197   001210  EF0E  F009         	goto	u7350
  8198   001214  EF0C  F009         	goto	u7351
  8199   001218                     u7351:
  8200   001218  EF22  F009         	goto	l7100
  8201   00121C                     u7350:
  8202   00121C                     
  8203                           ; BSR set to: 1
  8204   00121C  C064  F002         	movff	powf@y,___flneg@f1
  8205   001220  C065  F003         	movff	powf@y+1,___flneg@f1+1
  8206   001224  C066  F004         	movff	powf@y+2,___flneg@f1+2
  8207   001228  C067  F005         	movff	powf@y+3,___flneg@f1+3
  8208   00122C  EC4E  F03A         	call	___flneg	;wreg free
  8209   001230  C002  F060         	movff	?___flneg,?_powf
  8210   001234  C003  F061         	movff	?___flneg+1,?_powf+1
  8211   001238  C004  F062         	movff	?___flneg+2,?_powf+2
  8212   00123C  C005  F063         	movff	?___flneg+3,?_powf+3
  8213   001240  EF80  F019         	goto	l1371
  8214   001244                     l7100:
  8215                           
  8216                           ; BSR set to: 1
  8217   001244  0E00               	movlw	0
  8218   001246  0100               	movlb	0	; () banked
  8219   001248  6F60               	movwf	?_powf& (0+255),b
  8220   00124A  0E00               	movlw	0
  8221   00124C  6F61               	movwf	(?_powf+1)& (0+255),b
  8222   00124E  0E00               	movlw	0
  8223   001250  6F62               	movwf	(?_powf+2)& (0+255),b
  8224   001252  0E00               	movlw	0
  8225   001254  6F63               	movwf	(?_powf+3)& (0+255),b
  8226   001256  EF80  F019         	goto	l1371
  8227   00125A                     l7104:
  8228                           
  8229                           ; BSR set to: 1
  8230   00125A  0E80               	movlw	128
  8231   00125C  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  8232   00125E  E109               	bnz	u7361
  8233   001260  0E3F               	movlw	63
  8234   001262  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  8235   001264  1194               	iorwf	powf@iy& (0+255),w,b
  8236   001266  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  8237   001268  A4D8               	btfss	status,2,c
  8238   00126A  EF39  F009         	goto	u7361
  8239   00126E  EF3B  F009         	goto	u7360
  8240   001272                     u7361:
  8241   001272  EF68  F009         	goto	l7110
  8242   001276                     u7360:
  8243   001276                     
  8244                           ; BSR set to: 1
  8245   001276  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8246   001278  EF42  F009         	goto	u7370
  8247   00127C  EF40  F009         	goto	u7371
  8248   001280                     u7371:
  8249   001280  EF5E  F009         	goto	l1396
  8250   001284                     u7370:
  8251   001284                     
  8252                           ; BSR set to: 1
  8253   001284  0E00               	movlw	0
  8254   001286  6E2B               	movwf	___fldiv@b^0,c
  8255   001288  0E00               	movlw	0
  8256   00128A  6E2C               	movwf	(___fldiv@b+1)^0,c
  8257   00128C  0E80               	movlw	128
  8258   00128E  6E2D               	movwf	(___fldiv@b+2)^0,c
  8259   001290  0E3F               	movlw	63
  8260   001292  6E2E               	movwf	(___fldiv@b+3)^0,c
  8261   001294  C060  F02F         	movff	powf@x,___fldiv@a
  8262   001298  C061  F030         	movff	powf@x+1,___fldiv@a+1
  8263   00129C  C062  F031         	movff	powf@x+2,___fldiv@a+2
  8264   0012A0  C063  F032         	movff	powf@x+3,___fldiv@a+3
  8265   0012A4  ECED  F02C         	call	___fldiv	;wreg free
  8266   0012A8  C02B  F060         	movff	?___fldiv,?_powf
  8267   0012AC  C02C  F061         	movff	?___fldiv+1,?_powf+1
  8268   0012B0  C02D  F062         	movff	?___fldiv+2,?_powf+2
  8269   0012B4  C02E  F063         	movff	?___fldiv+3,?_powf+3
  8270   0012B8  EF80  F019         	goto	l1371
  8271   0012BC                     l1396:
  8272                           
  8273                           ; BSR set to: 1
  8274   0012BC  C060  F060         	movff	powf@x,?_powf
  8275   0012C0  C061  F061         	movff	powf@x+1,?_powf+1
  8276   0012C4  C062  F062         	movff	powf@x+2,?_powf+2
  8277   0012C8  C063  F063         	movff	powf@x+3,?_powf+3
  8278   0012CC  EF80  F019         	goto	l1371
  8279   0012D0                     l7110:
  8280                           
  8281                           ; BSR set to: 1
  8282   0012D0  0E40               	movlw	64
  8283   0012D2  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  8284   0012D4  1184               	iorwf	powf@hy& (0+255),w,b
  8285   0012D6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  8286   0012D8  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  8287   0012DA  A4D8               	btfss	status,2,c
  8288   0012DC  EF72  F009         	goto	u7381
  8289   0012E0  EF74  F009         	goto	u7380
  8290   0012E4                     u7381:
  8291   0012E4  EF90  F009         	goto	l7116
  8292   0012E8                     u7380:
  8293   0012E8                     
  8294                           ; BSR set to: 1
  8295   0012E8  C060  F012         	movff	powf@x,___flmul@b
  8296   0012EC  C061  F013         	movff	powf@x+1,___flmul@b+1
  8297   0012F0  C062  F014         	movff	powf@x+2,___flmul@b+2
  8298   0012F4  C063  F015         	movff	powf@x+3,___flmul@b+3
  8299   0012F8  C060  F016         	movff	powf@x,___flmul@a
  8300   0012FC  C061  F017         	movff	powf@x+1,___flmul@a+1
  8301   001300  C062  F018         	movff	powf@x+2,___flmul@a+2
  8302   001304  C063  F019         	movff	powf@x+3,___flmul@a+3
  8303   001308  ECE9  F028         	call	___flmul	;wreg free
  8304   00130C  C012  F060         	movff	?___flmul,?_powf
  8305   001310  C013  F061         	movff	?___flmul+1,?_powf+1
  8306   001314  C014  F062         	movff	?___flmul+2,?_powf+2
  8307   001318  C015  F063         	movff	?___flmul+3,?_powf+3
  8308   00131C  EF80  F019         	goto	l1371
  8309   001320                     l7116:
  8310                           
  8311                           ; BSR set to: 1
  8312   001320  0E3F               	movlw	63
  8313   001322  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  8314   001324  1184               	iorwf	powf@hy& (0+255),w,b
  8315   001326  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  8316   001328  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  8317   00132A  A4D8               	btfss	status,2,c
  8318   00132C  EF9A  F009         	goto	u7391
  8319   001330  EF9C  F009         	goto	u7390
  8320   001334                     u7391:
  8321   001334  EFB7  F009         	goto	l1400
  8322   001338                     u7390:
  8323   001338                     
  8324                           ; BSR set to: 1
  8325   001338  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  8326   00133A  EFA1  F009         	goto	u7401
  8327   00133E  EFA3  F009         	goto	u7400
  8328   001342                     u7401:
  8329   001342  EFB7  F009         	goto	l1400
  8330   001346                     u7400:
  8331   001346                     
  8332                           ; BSR set to: 1
  8333   001346  C060  F012         	movff	powf@x,sqrtf@x
  8334   00134A  C061  F013         	movff	powf@x+1,sqrtf@x+1
  8335   00134E  C062  F014         	movff	powf@x+2,sqrtf@x+2
  8336   001352  C063  F015         	movff	powf@x+3,sqrtf@x+3
  8337   001356  ECFE  F02A         	call	_sqrtf	;wreg free
  8338   00135A  C012  F060         	movff	?_sqrtf,?_powf
  8339   00135E  C013  F061         	movff	?_sqrtf+1,?_powf+1
  8340   001362  C014  F062         	movff	?_sqrtf+2,?_powf+2
  8341   001366  C015  F063         	movff	?_sqrtf+3,?_powf+3
  8342   00136A  EF80  F019         	goto	l1371
  8343   00136E                     l1400:
  8344                           
  8345                           ; BSR set to: 1
  8346   00136E  C1AC  F178         	movff	powf@ix,powf@ax
  8347   001372  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  8348   001376  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  8349   00137A  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  8350   00137E                     
  8351                           ; BSR set to: 1
  8352   00137E  0E80               	movlw	128
  8353   001380  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  8354   001382  E10B               	bnz	u7410
  8355   001384  0E7F               	movlw	127
  8356   001386  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  8357   001388  11AC               	iorwf	powf@ix& (0+255),w,b
  8358   00138A  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8359   00138C  B4D8               	btfsc	status,2,c
  8360   00138E  EFCB  F009         	goto	u7411
  8361   001392  EFCD  F009         	goto	u7410
  8362   001396                     u7411:
  8363   001396  EFE6  F009         	goto	l1404
  8364   00139A                     u7410:
  8365   00139A                     
  8366                           ; BSR set to: 1
  8367   00139A  51AC               	movf	powf@ix& (0+255),w,b
  8368   00139C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8369   00139E  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  8370   0013A0  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  8371   0013A2  B4D8               	btfsc	status,2,c
  8372   0013A4  EFD6  F009         	goto	u7421
  8373   0013A8  EFD8  F009         	goto	u7420
  8374   0013AC                     u7421:
  8375   0013AC  EFE6  F009         	goto	l1404
  8376   0013B0                     u7420:
  8377   0013B0                     
  8378                           ; BSR set to: 1
  8379   0013B0  0E80               	movlw	128
  8380   0013B2  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  8381   0013B4  E109               	bnz	u7431
  8382   0013B6  0E3F               	movlw	63
  8383   0013B8  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  8384   0013BA  11AC               	iorwf	powf@ix& (0+255),w,b
  8385   0013BC  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8386   0013BE  A4D8               	btfss	status,2,c
  8387   0013C0  EFE4  F009         	goto	u7431
  8388   0013C4  EFE6  F009         	goto	u7430
  8389   0013C8                     u7431:
  8390   0013C8  EF81  F00A         	goto	l7148
  8391   0013CC                     u7430:
  8392   0013CC                     l1404:
  8393                           
  8394                           ; BSR set to: 1
  8395   0013CC  C178  F1B4         	movff	powf@ax,powf@z
  8396   0013D0  C179  F1B5         	movff	powf@ax+1,powf@z+1
  8397   0013D4  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  8398   0013D8  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  8399   0013DC                     
  8400                           ; BSR set to: 1
  8401   0013DC  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8402   0013DE  EFF5  F009         	goto	u7440
  8403   0013E2  EFF3  F009         	goto	u7441
  8404   0013E6                     u7441:
  8405   0013E6  EF0F  F00A         	goto	l7134
  8406   0013EA                     u7440:
  8407   0013EA                     
  8408                           ; BSR set to: 1
  8409   0013EA  0E00               	movlw	0
  8410   0013EC  6E2B               	movwf	___fldiv@b^0,c
  8411   0013EE  0E00               	movlw	0
  8412   0013F0  6E2C               	movwf	(___fldiv@b+1)^0,c
  8413   0013F2  0E80               	movlw	128
  8414   0013F4  6E2D               	movwf	(___fldiv@b+2)^0,c
  8415   0013F6  0E3F               	movlw	63
  8416   0013F8  6E2E               	movwf	(___fldiv@b+3)^0,c
  8417   0013FA  C1B4  F02F         	movff	powf@z,___fldiv@a
  8418   0013FE  C1B5  F030         	movff	powf@z+1,___fldiv@a+1
  8419   001402  C1B6  F031         	movff	powf@z+2,___fldiv@a+2
  8420   001406  C1B7  F032         	movff	powf@z+3,___fldiv@a+3
  8421   00140A  ECED  F02C         	call	___fldiv	;wreg free
  8422   00140E  C02B  F1B4         	movff	?___fldiv,powf@z
  8423   001412  C02C  F1B5         	movff	?___fldiv+1,powf@z+1
  8424   001416  C02D  F1B6         	movff	?___fldiv+2,powf@z+2
  8425   00141A  C02E  F1B7         	movff	?___fldiv+3,powf@z+3
  8426   00141E                     l7134:
  8427   00141E  0101               	movlb	1	; () banked
  8428   001420  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  8429   001422  EF17  F00A         	goto	u7450
  8430   001426  EF15  F00A         	goto	u7451
  8431   00142A                     u7451:
  8432   00142A  EF77  F00A         	goto	l7144
  8433   00142E                     u7450:
  8434   00142E                     
  8435                           ; BSR set to: 1
  8436   00142E  0E00               	movlw	0
  8437   001430  25AC               	addwf	powf@ix& (0+255),w,b
  8438   001432  0100               	movlb	0	; () banked
  8439   001434  6F68               	movwf	??_powf& (0+255),b
  8440   001436  0E00               	movlw	0
  8441   001438  0101               	movlb	1	; () banked
  8442   00143A  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  8443   00143C  0100               	movlb	0	; () banked
  8444   00143E  6F69               	movwf	(??_powf+1)& (0+255),b
  8445   001440  0E80               	movlw	128
  8446   001442  0101               	movlb	1	; () banked
  8447   001444  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  8448   001446  0100               	movlb	0	; () banked
  8449   001448  6F6A               	movwf	(??_powf+2)& (0+255),b
  8450   00144A  0EC0               	movlw	192
  8451   00144C  0101               	movlb	1	; () banked
  8452   00144E  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  8453   001450  0100               	movlb	0	; () banked
  8454   001452  6F6B               	movwf	(??_powf+3)& (0+255),b
  8455   001454  0101               	movlb	1	; () banked
  8456   001456  5154               	movf	powf@yisint& (0+255),w,b
  8457   001458  0100               	movlb	0	; () banked
  8458   00145A  1168               	iorwf	??_powf& (0+255),w,b
  8459   00145C  6F6C               	movwf	(??_powf+4)& (0+255),b
  8460   00145E  0101               	movlb	1	; () banked
  8461   001460  5155               	movf	(powf@yisint+1)& (0+255),w,b
  8462   001462  0100               	movlb	0	; () banked
  8463   001464  1169               	iorwf	(??_powf+1)& (0+255),w,b
  8464   001466  6F6D               	movwf	(??_powf+5)& (0+255),b
  8465   001468  0101               	movlb	1	; () banked
  8466   00146A  5156               	movf	(powf@yisint+2)& (0+255),w,b
  8467   00146C  0100               	movlb	0	; () banked
  8468   00146E  116A               	iorwf	(??_powf+2)& (0+255),w,b
  8469   001470  6F6E               	movwf	(??_powf+6)& (0+255),b
  8470   001472  0101               	movlb	1	; () banked
  8471   001474  5157               	movf	(powf@yisint+3)& (0+255),w,b
  8472   001476  0100               	movlb	0	; () banked
  8473   001478  116B               	iorwf	(??_powf+3)& (0+255),w,b
  8474   00147A  6F6F               	movwf	(??_powf+7)& (0+255),b
  8475   00147C  516C               	movf	(??_powf+4)& (0+255),w,b
  8476   00147E  116D               	iorwf	(??_powf+5)& (0+255),w,b
  8477   001480  116E               	iorwf	(??_powf+6)& (0+255),w,b
  8478   001482  116F               	iorwf	(??_powf+7)& (0+255),w,b
  8479   001484  A4D8               	btfss	status,2,c
  8480   001486  EF47  F00A         	goto	u7461
  8481   00148A  EF49  F00A         	goto	u7460
  8482   00148E                     u7461:
  8483   00148E  EF59  F00A         	goto	l7140
  8484   001492                     u7460:
  8485   001492                     l7138:
  8486   001492  0E00               	movlw	0
  8487   001494  0100               	movlb	0	; () banked
  8488   001496  6FEB               	movwf	(_errno+1)& (0+255),b
  8489   001498  0E21               	movlw	33
  8490   00149A  6FEA               	movwf	_errno& (0+255),b
  8491   00149C  0EFF               	movlw	255
  8492   00149E  0101               	movlb	1	; () banked
  8493   0014A0  6FB4               	movwf	powf@z& (0+255),b
  8494   0014A2  0EFF               	movlw	255
  8495   0014A4  6FB5               	movwf	(powf@z+1)& (0+255),b
  8496   0014A6  0EFF               	movlw	255
  8497   0014A8  6FB6               	movwf	(powf@z+2)& (0+255),b
  8498   0014AA  0E7F               	movlw	127
  8499   0014AC  6FB7               	movwf	(powf@z+3)& (0+255),b
  8500   0014AE  EF77  F00A         	goto	l7144
  8501   0014B2                     l7140:
  8502                           
  8503                           ; BSR set to: 0
  8504   0014B2  0101               	movlb	1	; () banked
  8505   0014B4  0554               	decf	powf@yisint& (0+255),w,b
  8506   0014B6  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  8507   0014B8  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  8508   0014BA  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  8509   0014BC  A4D8               	btfss	status,2,c
  8510   0014BE  EF63  F00A         	goto	u7471
  8511   0014C2  EF65  F00A         	goto	u7470
  8512   0014C6                     u7471:
  8513   0014C6  EF77  F00A         	goto	l7144
  8514   0014CA                     u7470:
  8515   0014CA                     
  8516                           ; BSR set to: 1
  8517   0014CA  C1B4  F002         	movff	powf@z,___flneg@f1
  8518   0014CE  C1B5  F003         	movff	powf@z+1,___flneg@f1+1
  8519   0014D2  C1B6  F004         	movff	powf@z+2,___flneg@f1+2
  8520   0014D6  C1B7  F005         	movff	powf@z+3,___flneg@f1+3
  8521   0014DA  EC4E  F03A         	call	___flneg	;wreg free
  8522   0014DE  C002  F1B4         	movff	?___flneg,powf@z
  8523   0014E2  C003  F1B5         	movff	?___flneg+1,powf@z+1
  8524   0014E6  C004  F1B6         	movff	?___flneg+2,powf@z+2
  8525   0014EA  C005  F1B7         	movff	?___flneg+3,powf@z+3
  8526   0014EE                     l7144:
  8527   0014EE  C1B4  F060         	movff	powf@z,?_powf
  8528   0014F2  C1B5  F061         	movff	powf@z+1,?_powf+1
  8529   0014F6  C1B6  F062         	movff	powf@z+2,?_powf+2
  8530   0014FA  C1B7  F063         	movff	powf@z+3,?_powf+3
  8531   0014FE  EF80  F019         	goto	l1371
  8532   001502                     l7148:
  8533                           
  8534                           ; BSR set to: 1
  8535   001502  0E00               	movlw	0
  8536   001504  6F64               	movwf	powf@sn& (0+255),b
  8537   001506  0E00               	movlw	0
  8538   001508  6F65               	movwf	(powf@sn+1)& (0+255),b
  8539   00150A  0E00               	movlw	0
  8540   00150C  6F66               	movwf	(powf@sn+2)& (0+255),b
  8541   00150E  0E00               	movlw	0
  8542   001510  6F67               	movwf	(powf@sn+3)& (0+255),b
  8543   001512                     
  8544                           ; BSR set to: 1
  8545   001512  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  8546   001514  EF90  F00A         	goto	u7480
  8547   001518  EF8E  F00A         	goto	u7481
  8548   00151C                     u7481:
  8549   00151C  EFB0  F00A         	goto	l7164
  8550   001520                     u7480:
  8551   001520                     
  8552                           ; BSR set to: 1
  8553   001520  5154               	movf	powf@yisint& (0+255),w,b
  8554   001522  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  8555   001524  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  8556   001526  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  8557   001528  A4D8               	btfss	status,2,c
  8558   00152A  EF99  F00A         	goto	u7491
  8559   00152E  EF9B  F00A         	goto	u7490
  8560   001532                     u7491:
  8561   001532  EF9D  F00A         	goto	l7160
  8562   001536                     u7490:
  8563   001536  EF49  F00A         	goto	l7138
  8564   00153A                     l7160:
  8565                           
  8566                           ; BSR set to: 1
  8567   00153A  0554               	decf	powf@yisint& (0+255),w,b
  8568   00153C  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  8569   00153E  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  8570   001540  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  8571   001542  A4D8               	btfss	status,2,c
  8572   001544  EFA6  F00A         	goto	u7501
  8573   001548  EFA8  F00A         	goto	u7500
  8574   00154C                     u7501:
  8575   00154C  EFB0  F00A         	goto	l7164
  8576   001550                     u7500:
  8577   001550                     
  8578                           ; BSR set to: 1
  8579   001550  0E00               	movlw	0
  8580   001552  6F64               	movwf	powf@sn& (0+255),b
  8581   001554  0E00               	movlw	0
  8582   001556  6F65               	movwf	(powf@sn+1)& (0+255),b
  8583   001558  0E00               	movlw	0
  8584   00155A  6F66               	movwf	(powf@sn+2)& (0+255),b
  8585   00155C  0E80               	movlw	128
  8586   00155E  6F67               	movwf	(powf@sn+3)& (0+255),b
  8587   001560                     l7164:
  8588                           
  8589                           ; BSR set to: 1
  8590   001560  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  8591   001562  EFBF  F00A         	goto	u7511
  8592   001566  0594               	decf	powf@iy& (0+255),w,b
  8593   001568  0E00               	movlw	0
  8594   00156A  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  8595   00156C  0E00               	movlw	0
  8596   00156E  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  8597   001570  0E4D               	movlw	77
  8598   001572  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  8599   001574  A0D8               	btfss	status,0,c
  8600   001576  EFBF  F00A         	goto	u7511
  8601   00157A  EFC1  F00A         	goto	u7510
  8602   00157E                     u7511:
  8603   00157E  EF85  F00C         	goto	l7220
  8604   001582                     u7510:
  8605   001582                     
  8606                           ; BSR set to: 1
  8607   001582  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8608   001584  EFD3  F00A         	goto	u7520
  8609   001588  0EF8               	movlw	248
  8610   00158A  5DAC               	subwf	powf@ix& (0+255),w,b
  8611   00158C  0EFF               	movlw	255
  8612   00158E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  8613   001590  0E7F               	movlw	127
  8614   001592  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  8615   001594  0E3F               	movlw	63
  8616   001596  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  8617   001598  B0D8               	btfsc	status,0,c
  8618   00159A  EFD1  F00A         	goto	u7521
  8619   00159E  EFD3  F00A         	goto	u7520
  8620   0015A2                     u7521:
  8621   0015A2  EFF4  F00A         	goto	l7182
  8622   0015A6                     u7520:
  8623   0015A6                     
  8624                           ; BSR set to: 1
  8625   0015A6  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8626   0015A8  EFDA  F00A         	goto	u7530
  8627   0015AC  EFD8  F00A         	goto	u7531
  8628   0015B0                     u7531:
  8629   0015B0  EFE9  F00A         	goto	l7178
  8630   0015B4                     u7530:
  8631   0015B4                     l7170:
  8632   0015B4  0E00               	movlw	0
  8633   0015B6  0101               	movlb	1	; () banked
  8634   0015B8  1164               	iorwf	powf@sn& (0+255),w,b
  8635   0015BA  6FB4               	movwf	powf@z& (0+255),b
  8636   0015BC  0E00               	movlw	0
  8637   0015BE  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  8638   0015C0  6FB5               	movwf	(powf@z+1)& (0+255),b
  8639   0015C2  0E80               	movlw	128
  8640   0015C4  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  8641   0015C6  6FB6               	movwf	(powf@z+2)& (0+255),b
  8642   0015C8  0E7F               	movlw	127
  8643   0015CA  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  8644   0015CC  6FB7               	movwf	(powf@z+3)& (0+255),b
  8645   0015CE  EF77  F00A         	goto	l7144
  8646   0015D2                     l7178:
  8647                           
  8648                           ; BSR set to: 1
  8649   0015D2  0E00               	movlw	0
  8650   0015D4  0100               	movlb	0	; () banked
  8651   0015D6  6F60               	movwf	?_powf& (0+255),b
  8652   0015D8  0E00               	movlw	0
  8653   0015DA  6F61               	movwf	(?_powf+1)& (0+255),b
  8654   0015DC  0E00               	movlw	0
  8655   0015DE  6F62               	movwf	(?_powf+2)& (0+255),b
  8656   0015E0  0E00               	movlw	0
  8657   0015E2  6F63               	movwf	(?_powf+3)& (0+255),b
  8658   0015E4  EF80  F019         	goto	l1371
  8659   0015E8                     l7182:
  8660                           
  8661                           ; BSR set to: 1
  8662   0015E8  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8663   0015EA  EF04  F00B         	goto	u7541
  8664   0015EE  0E08               	movlw	8
  8665   0015F0  5DAC               	subwf	powf@ix& (0+255),w,b
  8666   0015F2  0E00               	movlw	0
  8667   0015F4  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  8668   0015F6  0E80               	movlw	128
  8669   0015F8  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  8670   0015FA  0E3F               	movlw	63
  8671   0015FC  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  8672   0015FE  A0D8               	btfss	status,0,c
  8673   001600  EF04  F00B         	goto	u7541
  8674   001604  EF06  F00B         	goto	u7540
  8675   001608                     u7541:
  8676   001608  EF22  F00B         	goto	l7198
  8677   00160C                     u7540:
  8678   00160C                     
  8679                           ; BSR set to: 1
  8680   00160C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8681   00160E  EF13  F00B         	goto	u7551
  8682   001612  5187               	movf	(powf@hy+3)& (0+255),w,b
  8683   001614  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  8684   001616  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  8685   001618  E108               	bnz	u7550
  8686   00161A  0584               	decf	powf@hy& (0+255),w,b
  8687   00161C  A0D8               	btfss	status,0,c
  8688   00161E  EF13  F00B         	goto	u7551
  8689   001622  EF15  F00B         	goto	u7550
  8690   001626                     u7551:
  8691   001626  EF17  F00B         	goto	l7194
  8692   00162A                     u7550:
  8693   00162A  EFDA  F00A         	goto	l7170
  8694   00162E                     l7194:
  8695                           
  8696                           ; BSR set to: 1
  8697   00162E  0E00               	movlw	0
  8698   001630  0100               	movlb	0	; () banked
  8699   001632  6F60               	movwf	?_powf& (0+255),b
  8700   001634  0E00               	movlw	0
  8701   001636  6F61               	movwf	(?_powf+1)& (0+255),b
  8702   001638  0E00               	movlw	0
  8703   00163A  6F62               	movwf	(?_powf+2)& (0+255),b
  8704   00163C  0E00               	movlw	0
  8705   00163E  6F63               	movwf	(?_powf+3)& (0+255),b
  8706   001640  EF80  F019         	goto	l1371
  8707   001644                     l7198:
  8708                           
  8709                           ; BSR set to: 1
  8710   001644  C178  F002         	movff	powf@ax,___fladd@b
  8711   001648  C179  F003         	movff	powf@ax+1,___fladd@b+1
  8712   00164C  C17A  F004         	movff	powf@ax+2,___fladd@b+2
  8713   001650  C17B  F005         	movff	powf@ax+3,___fladd@b+3
  8714   001654  0E00               	movlw	0
  8715   001656  6E06               	movwf	___fladd@a^0,c
  8716   001658  0E00               	movlw	0
  8717   00165A  6E07               	movwf	(___fladd@a+1)^0,c
  8718   00165C  0E80               	movlw	128
  8719   00165E  6E08               	movwf	(___fladd@a+2)^0,c
  8720   001660  0EBF               	movlw	191
  8721   001662  6E09               	movwf	(___fladd@a+3)^0,c
  8722   001664  EC89  F026         	call	___fladd	;wreg free
  8723   001668  C002  F1B0         	movff	?___fladd,powf@t
  8724   00166C  C003  F1B1         	movff	?___fladd+1,powf@t+1
  8725   001670  C004  F1B2         	movff	?___fladd+2,powf@t+2
  8726   001674  C005  F1B3         	movff	?___fladd+3,powf@t+3
  8727   001678  0E00               	movlw	0
  8728   00167A  6E16               	movwf	___flmul@a^0,c
  8729   00167C  0E00               	movlw	0
  8730   00167E  6E17               	movwf	(___flmul@a+1)^0,c
  8731   001680  0E80               	movlw	128
  8732   001682  6E18               	movwf	(___flmul@a+2)^0,c
  8733   001684  0E3E               	movlw	62
  8734   001686  6E19               	movwf	(___flmul@a+3)^0,c
  8735   001688  C1B0  F012         	movff	powf@t,___flmul@b
  8736   00168C  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8737   001690  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8738   001694  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8739   001698  ECE9  F028         	call	___flmul	;wreg free
  8740   00169C  C012  F048         	movff	?___flmul,___flsub@a
  8741   0016A0  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8742   0016A4  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8743   0016A8  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8744   0016AC  0EAB               	movlw	171
  8745   0016AE  6E44               	movwf	___flsub@b^0,c
  8746   0016B0  0EAA               	movlw	170
  8747   0016B2  6E45               	movwf	(___flsub@b+1)^0,c
  8748   0016B4  0EAA               	movlw	170
  8749   0016B6  6E46               	movwf	(___flsub@b+2)^0,c
  8750   0016B8  0E3E               	movlw	62
  8751   0016BA  6E47               	movwf	(___flsub@b+3)^0,c
  8752   0016BC  ECAF  F039         	call	___flsub	;wreg free
  8753   0016C0  C044  F148         	movff	?___flsub,_powf$3058
  8754   0016C4  C045  F149         	movff	?___flsub+1,_powf$3058+1
  8755   0016C8  C046  F14A         	movff	?___flsub+2,_powf$3058+2
  8756   0016CC  C047  F14B         	movff	?___flsub+3,_powf$3058+3
  8757   0016D0  C1B0  F016         	movff	powf@t,___flmul@a
  8758   0016D4  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  8759   0016D8  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  8760   0016DC  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  8761   0016E0  C1B0  F012         	movff	powf@t,___flmul@b
  8762   0016E4  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8763   0016E8  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8764   0016EC  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8765   0016F0  ECE9  F028         	call	___flmul	;wreg free
  8766   0016F4  C012  F15C         	movff	?___flmul,_powf$3059
  8767   0016F8  C013  F15D         	movff	?___flmul+1,_powf$3059+1
  8768   0016FC  C014  F15E         	movff	?___flmul+2,_powf$3059+2
  8769   001700  C015  F15F         	movff	?___flmul+3,_powf$3059+3
  8770   001704  C1B0  F016         	movff	powf@t,___flmul@a
  8771   001708  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  8772   00170C  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  8773   001710  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  8774   001714  C148  F012         	movff	_powf$3058,___flmul@b
  8775   001718  C149  F013         	movff	_powf$3058+1,___flmul@b+1
  8776   00171C  C14A  F014         	movff	_powf$3058+2,___flmul@b+2
  8777   001720  C14B  F015         	movff	_powf$3058+3,___flmul@b+3
  8778   001724  ECE9  F028         	call	___flmul	;wreg free
  8779   001728  C012  F048         	movff	?___flmul,___flsub@a
  8780   00172C  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8781   001730  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8782   001734  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8783   001738  0E00               	movlw	0
  8784   00173A  6E44               	movwf	___flsub@b^0,c
  8785   00173C  0E00               	movlw	0
  8786   00173E  6E45               	movwf	(___flsub@b+1)^0,c
  8787   001740  0E00               	movlw	0
  8788   001742  6E46               	movwf	(___flsub@b+2)^0,c
  8789   001744  0E3F               	movlw	63
  8790   001746  6E47               	movwf	(___flsub@b+3)^0,c
  8791   001748  ECAF  F039         	call	___flsub	;wreg free
  8792   00174C  C044  F14C         	movff	?___flsub,_powf$3060
  8793   001750  C045  F14D         	movff	?___flsub+1,_powf$3060+1
  8794   001754  C046  F14E         	movff	?___flsub+2,_powf$3060+2
  8795   001758  C047  F14F         	movff	?___flsub+3,_powf$3060+3
  8796   00175C  C15C  F012         	movff	_powf$3059,___flmul@b
  8797   001760  C15D  F013         	movff	_powf$3059+1,___flmul@b+1
  8798   001764  C15E  F014         	movff	_powf$3059+2,___flmul@b+2
  8799   001768  C15F  F015         	movff	_powf$3059+3,___flmul@b+3
  8800   00176C  C14C  F016         	movff	_powf$3060,___flmul@a
  8801   001770  C14D  F017         	movff	_powf$3060+1,___flmul@a+1
  8802   001774  C14E  F018         	movff	_powf$3060+2,___flmul@a+2
  8803   001778  C14F  F019         	movff	_powf$3060+3,___flmul@a+3
  8804   00177C  ECE9  F028         	call	___flmul	;wreg free
  8805   001780  C012  F144         	movff	?___flmul,powf@w
  8806   001784  C013  F145         	movff	?___flmul+1,powf@w+1
  8807   001788  C014  F146         	movff	?___flmul+2,powf@w+2
  8808   00178C  C015  F147         	movff	?___flmul+3,powf@w+3
  8809   001790  C1B0  F012         	movff	powf@t,___flmul@b
  8810   001794  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8811   001798  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8812   00179C  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8813   0017A0  0E00               	movlw	0
  8814   0017A2  6E16               	movwf	___flmul@a^0,c
  8815   0017A4  0EAA               	movlw	170
  8816   0017A6  6E17               	movwf	(___flmul@a+1)^0,c
  8817   0017A8  0EB8               	movlw	184
  8818   0017AA  6E18               	movwf	(___flmul@a+2)^0,c
  8819   0017AC  0E3F               	movlw	63
  8820   0017AE  6E19               	movwf	(___flmul@a+3)^0,c
  8821   0017B0  ECE9  F028         	call	___flmul	;wreg free
  8822   0017B4  C012  F17C         	movff	?___flmul,powf@u
  8823   0017B8  C013  F17D         	movff	?___flmul+1,powf@u+1
  8824   0017BC  C014  F17E         	movff	?___flmul+2,powf@u+2
  8825   0017C0  C015  F17F         	movff	?___flmul+3,powf@u+3
  8826   0017C4  0E70               	movlw	112
  8827   0017C6  6E16               	movwf	___flmul@a^0,c
  8828   0017C8  0EA5               	movlw	165
  8829   0017CA  6E17               	movwf	(___flmul@a+1)^0,c
  8830   0017CC  0EEC               	movlw	236
  8831   0017CE  6E18               	movwf	(___flmul@a+2)^0,c
  8832   0017D0  0E36               	movlw	54
  8833   0017D2  6E19               	movwf	(___flmul@a+3)^0,c
  8834   0017D4  C1B0  F012         	movff	powf@t,___flmul@b
  8835   0017D8  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8836   0017DC  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8837   0017E0  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8838   0017E4  ECE9  F028         	call	___flmul	;wreg free
  8839   0017E8  C012  F044         	movff	?___flmul,___flsub@b
  8840   0017EC  C013  F045         	movff	?___flmul+1,___flsub@b+1
  8841   0017F0  C014  F046         	movff	?___flmul+2,___flsub@b+2
  8842   0017F4  C015  F047         	movff	?___flmul+3,___flsub@b+3
  8843   0017F8  0E3B               	movlw	59
  8844   0017FA  6E16               	movwf	___flmul@a^0,c
  8845   0017FC  0EAA               	movlw	170
  8846   0017FE  6E17               	movwf	(___flmul@a+1)^0,c
  8847   001800  0EB8               	movlw	184
  8848   001802  6E18               	movwf	(___flmul@a+2)^0,c
  8849   001804  0E3F               	movlw	63
  8850   001806  6E19               	movwf	(___flmul@a+3)^0,c
  8851   001808  C144  F012         	movff	powf@w,___flmul@b
  8852   00180C  C145  F013         	movff	powf@w+1,___flmul@b+1
  8853   001810  C146  F014         	movff	powf@w+2,___flmul@b+2
  8854   001814  C147  F015         	movff	powf@w+3,___flmul@b+3
  8855   001818  ECE9  F028         	call	___flmul	;wreg free
  8856   00181C  C012  F048         	movff	?___flmul,___flsub@a
  8857   001820  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8858   001824  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8859   001828  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8860   00182C  ECAF  F039         	call	___flsub	;wreg free
  8861   001830  C044  F180         	movff	?___flsub,powf@v
  8862   001834  C045  F181         	movff	?___flsub+1,powf@v+1
  8863   001838  C046  F182         	movff	?___flsub+2,powf@v+2
  8864   00183C  C047  F183         	movff	?___flsub+3,powf@v+3
  8865   001840  C17C  F002         	movff	powf@u,___fladd@b
  8866   001844  C17D  F003         	movff	powf@u+1,___fladd@b+1
  8867   001848  C17E  F004         	movff	powf@u+2,___fladd@b+2
  8868   00184C  C17F  F005         	movff	powf@u+3,___fladd@b+3
  8869   001850  C180  F006         	movff	powf@v,___fladd@a
  8870   001854  C181  F007         	movff	powf@v+1,___fladd@a+1
  8871   001858  C182  F008         	movff	powf@v+2,___fladd@a+2
  8872   00185C  C183  F009         	movff	powf@v+3,___fladd@a+3
  8873   001860  EC89  F026         	call	___fladd	;wreg free
  8874   001864  C002  F18C         	movff	?___fladd,powf@t1
  8875   001868  C003  F18D         	movff	?___fladd+1,powf@t1+1
  8876   00186C  C004  F18E         	movff	?___fladd+2,powf@t1+2
  8877   001870  C005  F18F         	movff	?___fladd+3,powf@t1+3
  8878   001874  C18C  F198         	movff	powf@t1,powf@is
  8879   001878  C18D  F199         	movff	powf@t1+1,powf@is+1
  8880   00187C  C18E  F19A         	movff	powf@t1+2,powf@is+2
  8881   001880  C18F  F19B         	movff	powf@t1+3,powf@is+3
  8882   001884  0E00               	movlw	0
  8883   001886  0101               	movlb	1	; () banked
  8884   001888  1598               	andwf	powf@is& (0+255),w,b
  8885   00188A  6F8C               	movwf	powf@t1& (0+255),b
  8886   00188C  0EF0               	movlw	240
  8887   00188E  1599               	andwf	(powf@is+1)& (0+255),w,b
  8888   001890  6F8D               	movwf	(powf@t1+1)& (0+255),b
  8889   001892  0EFF               	movlw	255
  8890   001894  159A               	andwf	(powf@is+2)& (0+255),w,b
  8891   001896  6F8E               	movwf	(powf@t1+2)& (0+255),b
  8892   001898  0EFF               	movlw	255
  8893   00189A  159B               	andwf	(powf@is+3)& (0+255),w,b
  8894   00189C  6F8F               	movwf	(powf@t1+3)& (0+255),b
  8895   00189E                     
  8896                           ; BSR set to: 1
  8897   00189E  C17C  F048         	movff	powf@u,___flsub@a
  8898   0018A2  C17D  F049         	movff	powf@u+1,___flsub@a+1
  8899   0018A6  C17E  F04A         	movff	powf@u+2,___flsub@a+2
  8900   0018AA  C17F  F04B         	movff	powf@u+3,___flsub@a+3
  8901   0018AE  C18C  F044         	movff	powf@t1,___flsub@b
  8902   0018B2  C18D  F045         	movff	powf@t1+1,___flsub@b+1
  8903   0018B6  C18E  F046         	movff	powf@t1+2,___flsub@b+2
  8904   0018BA  C18F  F047         	movff	powf@t1+3,___flsub@b+3
  8905   0018BE  ECAF  F039         	call	___flsub	;wreg free
  8906   0018C2  C044  F19C         	movff	?___flsub,_powf$3061
  8907   0018C6  C045  F19D         	movff	?___flsub+1,_powf$3061+1
  8908   0018CA  C046  F19E         	movff	?___flsub+2,_powf$3061+2
  8909   0018CE  C047  F19F         	movff	?___flsub+3,_powf$3061+3
  8910   0018D2  C180  F044         	movff	powf@v,___flsub@b
  8911   0018D6  C181  F045         	movff	powf@v+1,___flsub@b+1
  8912   0018DA  C182  F046         	movff	powf@v+2,___flsub@b+2
  8913   0018DE  C183  F047         	movff	powf@v+3,___flsub@b+3
  8914   0018E2  C19C  F048         	movff	_powf$3061,___flsub@a
  8915   0018E6  C19D  F049         	movff	_powf$3061+1,___flsub@a+1
  8916   0018EA  C19E  F04A         	movff	_powf$3061+2,___flsub@a+2
  8917   0018EE  C19F  F04B         	movff	_powf$3061+3,___flsub@a+3
  8918   0018F2  ECAF  F039         	call	___flsub	;wreg free
  8919   0018F6  C044  F11C         	movff	?___flsub,powf@t2
  8920   0018FA  C045  F11D         	movff	?___flsub+1,powf@t2+1
  8921   0018FE  C046  F11E         	movff	?___flsub+2,powf@t2+2
  8922   001902  C047  F11F         	movff	?___flsub+3,powf@t2+3
  8923   001906  EF79  F013         	goto	l7348
  8924   00190A                     l7220:
  8925                           
  8926                           ; BSR set to: 1
  8927   00190A  0E00               	movlw	0
  8928   00190C  6F88               	movwf	powf@n& (0+255),b
  8929   00190E  0E00               	movlw	0
  8930   001910  6F89               	movwf	(powf@n+1)& (0+255),b
  8931   001912  0E00               	movlw	0
  8932   001914  6F8A               	movwf	(powf@n+2)& (0+255),b
  8933   001916  0E00               	movlw	0
  8934   001918  6F8B               	movwf	(powf@n+3)& (0+255),b
  8935   00191A                     
  8936                           ; BSR set to: 1
  8937   00191A  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8938   00191C  EF9B  F00C         	goto	u7560
  8939   001920  51AF               	movf	(powf@ix+3)& (0+255),w,b
  8940   001922  E107               	bnz	u7561
  8941   001924  0E80               	movlw	128
  8942   001926  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
  8943   001928  B0D8               	btfsc	status,0,c
  8944   00192A  EF99  F00C         	goto	u7561
  8945   00192E  EF9B  F00C         	goto	u7560
  8946   001932                     u7561:
  8947   001932  EFC6  F00C         	goto	l7230
  8948   001936                     u7560:
  8949   001936                     
  8950                           ; BSR set to: 1
  8951   001936  C178  F012         	movff	powf@ax,___flmul@b
  8952   00193A  C179  F013         	movff	powf@ax+1,___flmul@b+1
  8953   00193E  C17A  F014         	movff	powf@ax+2,___flmul@b+2
  8954   001942  C17B  F015         	movff	powf@ax+3,___flmul@b+3
  8955   001946  0E00               	movlw	0
  8956   001948  6E16               	movwf	___flmul@a^0,c
  8957   00194A  0E00               	movlw	0
  8958   00194C  6E17               	movwf	(___flmul@a+1)^0,c
  8959   00194E  0E80               	movlw	128
  8960   001950  6E18               	movwf	(___flmul@a+2)^0,c
  8961   001952  0E4B               	movlw	75
  8962   001954  6E19               	movwf	(___flmul@a+3)^0,c
  8963   001956  ECE9  F028         	call	___flmul	;wreg free
  8964   00195A  C012  F178         	movff	?___flmul,powf@ax
  8965   00195E  C013  F179         	movff	?___flmul+1,powf@ax+1
  8966   001962  C014  F17A         	movff	?___flmul+2,powf@ax+2
  8967   001966  C015  F17B         	movff	?___flmul+3,powf@ax+3
  8968   00196A  0EE8               	movlw	232
  8969   00196C  0101               	movlb	1	; () banked
  8970   00196E  2788               	addwf	powf@n& (0+255),f,b
  8971   001970  0EFF               	movlw	255
  8972   001972  2389               	addwfc	(powf@n+1)& (0+255),f,b
  8973   001974  0EFF               	movlw	255
  8974   001976  238A               	addwfc	(powf@n+2)& (0+255),f,b
  8975   001978  0EFF               	movlw	255
  8976   00197A  238B               	addwfc	(powf@n+3)& (0+255),f,b
  8977   00197C                     
  8978                           ; BSR set to: 1
  8979   00197C  C178  F1AC         	movff	powf@ax,powf@ix
  8980   001980  C179  F1AD         	movff	powf@ax+1,powf@ix+1
  8981   001984  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
  8982   001988  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
  8983   00198C                     l7230:
  8984                           
  8985                           ; BSR set to: 1
  8986   00198C  0E17               	movlw	23
  8987   00198E  0100               	movlb	0	; () banked
  8988   001990  6F68               	movwf	??_powf& (0+255),b
  8989   001992  C1AC  F069         	movff	powf@ix,??_powf+1
  8990   001996  C1AD  F06A         	movff	powf@ix+1,??_powf+2
  8991   00199A  C1AE  F06B         	movff	powf@ix+2,??_powf+3
  8992   00199E  C1AF  F06C         	movff	powf@ix+3,??_powf+4
  8993   0019A2                     u7575:
  8994   0019A2  6768               	tstfsz	??_powf& (0+255),b
  8995   0019A4  EFD6  F00C         	goto	u7576
  8996   0019A8  EFDE  F00C         	goto	u7577
  8997   0019AC                     u7576:
  8998   0019AC  356C               	rlcf	(??_powf+4)& (0+255),w,b
  8999   0019AE  336C               	rrcf	(??_powf+4)& (0+255),f,b
  9000   0019B0  336B               	rrcf	(??_powf+3)& (0+255),f,b
  9001   0019B2  336A               	rrcf	(??_powf+2)& (0+255),f,b
  9002   0019B4  3369               	rrcf	(??_powf+1)& (0+255),f,b
  9003   0019B6  2F68               	decfsz	??_powf& (0+255),f,b
  9004   0019B8  EFD1  F00C         	goto	u7575
  9005   0019BC                     u7577:
  9006   0019BC  0E81               	movlw	129
  9007   0019BE  0100               	movlb	0	; () banked
  9008   0019C0  2569               	addwf	(??_powf+1)& (0+255),w,b
  9009   0019C2  6F6D               	movwf	(??_powf+5)& (0+255),b
  9010   0019C4  0EFF               	movlw	255
  9011   0019C6  216A               	addwfc	(??_powf+2)& (0+255),w,b
  9012   0019C8  6F6E               	movwf	(??_powf+6)& (0+255),b
  9013   0019CA  0EFF               	movlw	255
  9014   0019CC  216B               	addwfc	(??_powf+3)& (0+255),w,b
  9015   0019CE  6F6F               	movwf	(??_powf+7)& (0+255),b
  9016   0019D0  0EFF               	movlw	255
  9017   0019D2  216C               	addwfc	(??_powf+4)& (0+255),w,b
  9018   0019D4  6F70               	movwf	(??_powf+8)& (0+255),b
  9019   0019D6  516D               	movf	(??_powf+5)& (0+255),w,b
  9020   0019D8  0101               	movlb	1	; () banked
  9021   0019DA  2788               	addwf	powf@n& (0+255),f,b
  9022   0019DC  0100               	movlb	0	; () banked
  9023   0019DE  516E               	movf	(??_powf+6)& (0+255),w,b
  9024   0019E0  0101               	movlb	1	; () banked
  9025   0019E2  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9026   0019E4  0100               	movlb	0	; () banked
  9027   0019E6  516F               	movf	(??_powf+7)& (0+255),w,b
  9028   0019E8  0101               	movlb	1	; () banked
  9029   0019EA  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9030   0019EC  0100               	movlb	0	; () banked
  9031   0019EE  5170               	movf	(??_powf+8)& (0+255),w,b
  9032   0019F0  0101               	movlb	1	; () banked
  9033   0019F2  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9034   0019F4                     
  9035                           ; BSR set to: 1
  9036   0019F4  0EFF               	movlw	255
  9037   0019F6  15AC               	andwf	powf@ix& (0+255),w,b
  9038   0019F8  6FA8               	movwf	powf@j& (0+255),b
  9039   0019FA  0EFF               	movlw	255
  9040   0019FC  15AD               	andwf	(powf@ix+1)& (0+255),w,b
  9041   0019FE  6FA9               	movwf	(powf@j+1)& (0+255),b
  9042   001A00  0E7F               	movlw	127
  9043   001A02  15AE               	andwf	(powf@ix+2)& (0+255),w,b
  9044   001A04  6FAA               	movwf	(powf@j+2)& (0+255),b
  9045   001A06  0E00               	movlw	0
  9046   001A08  15AF               	andwf	(powf@ix+3)& (0+255),w,b
  9047   001A0A  6FAB               	movwf	(powf@j+3)& (0+255),b
  9048   001A0C                     
  9049                           ; BSR set to: 1
  9050   001A0C  0E00               	movlw	0
  9051   001A0E  6FA4               	movwf	powf@k& (0+255),b
  9052   001A10  0E00               	movlw	0
  9053   001A12  6FA5               	movwf	(powf@k+1)& (0+255),b
  9054   001A14  0E00               	movlw	0
  9055   001A16  6FA6               	movwf	(powf@k+2)& (0+255),b
  9056   001A18  0E00               	movlw	0
  9057   001A1A  6FA7               	movwf	(powf@k+3)& (0+255),b
  9058   001A1C                     
  9059                           ; BSR set to: 1
  9060   001A1C  0E00               	movlw	0
  9061   001A1E  11A8               	iorwf	powf@j& (0+255),w,b
  9062   001A20  6FAC               	movwf	powf@ix& (0+255),b
  9063   001A22  0E00               	movlw	0
  9064   001A24  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  9065   001A26  6FAD               	movwf	(powf@ix+1)& (0+255),b
  9066   001A28  0E80               	movlw	128
  9067   001A2A  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  9068   001A2C  6FAE               	movwf	(powf@ix+2)& (0+255),b
  9069   001A2E  0E3F               	movlw	63
  9070   001A30  11AB               	iorwf	(powf@j+3)& (0+255),w,b
  9071   001A32  6FAF               	movwf	(powf@ix+3)& (0+255),b
  9072   001A34                     
  9073                           ; BSR set to: 1
  9074   001A34  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  9075   001A36  EF2C  F00D         	goto	u7580
  9076   001A3A  51AB               	movf	(powf@j+3)& (0+255),w,b
  9077   001A3C  E10B               	bnz	u7581
  9078   001A3E  0E72               	movlw	114
  9079   001A40  5DA8               	subwf	powf@j& (0+255),w,b
  9080   001A42  0EC4               	movlw	196
  9081   001A44  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  9082   001A46  0E1C               	movlw	28
  9083   001A48  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  9084   001A4A  B0D8               	btfsc	status,0,c
  9085   001A4C  EF2A  F00D         	goto	u7581
  9086   001A50  EF2C  F00D         	goto	u7580
  9087   001A54                     u7581:
  9088   001A54  EF2E  F00D         	goto	l7242
  9089   001A58                     u7580:
  9090   001A58  EF58  F00D         	goto	l7248
  9091   001A5C                     l7242:
  9092                           
  9093                           ; BSR set to: 1
  9094   001A5C  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  9095   001A5E  EF40  F00D         	goto	u7590
  9096   001A62  51AB               	movf	(powf@j+3)& (0+255),w,b
  9097   001A64  E10B               	bnz	u7591
  9098   001A66  0ED7               	movlw	215
  9099   001A68  5DA8               	subwf	powf@j& (0+255),w,b
  9100   001A6A  0EB3               	movlw	179
  9101   001A6C  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  9102   001A6E  0E5D               	movlw	93
  9103   001A70  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  9104   001A72  B0D8               	btfsc	status,0,c
  9105   001A74  EF3E  F00D         	goto	u7591
  9106   001A78  EF40  F00D         	goto	u7590
  9107   001A7C                     u7591:
  9108   001A7C  EF4A  F00D         	goto	l7246
  9109   001A80                     u7590:
  9110   001A80                     
  9111                           ; BSR set to: 1
  9112   001A80  0E01               	movlw	1
  9113   001A82  6FA4               	movwf	powf@k& (0+255),b
  9114   001A84  0E00               	movlw	0
  9115   001A86  6FA5               	movwf	(powf@k+1)& (0+255),b
  9116   001A88  0E00               	movlw	0
  9117   001A8A  6FA6               	movwf	(powf@k+2)& (0+255),b
  9118   001A8C  0E00               	movlw	0
  9119   001A8E  6FA7               	movwf	(powf@k+3)& (0+255),b
  9120   001A90  EF58  F00D         	goto	l7248
  9121   001A94                     l7246:
  9122                           
  9123                           ; BSR set to: 1
  9124   001A94  0E01               	movlw	1
  9125   001A96  2788               	addwf	powf@n& (0+255),f,b
  9126   001A98  0E00               	movlw	0
  9127   001A9A  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9128   001A9C  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9129   001A9E  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9130   001AA0  0E00               	movlw	0
  9131   001AA2  27AC               	addwf	powf@ix& (0+255),f,b
  9132   001AA4  0E00               	movlw	0
  9133   001AA6  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
  9134   001AA8  0E80               	movlw	128
  9135   001AAA  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
  9136   001AAC  0EFF               	movlw	255
  9137   001AAE  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
  9138   001AB0                     l7248:
  9139                           
  9140                           ; BSR set to: 1
  9141   001AB0  C1AC  F178         	movff	powf@ix,powf@ax
  9142   001AB4  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  9143   001AB8  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  9144   001ABC  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  9145   001AC0                     
  9146                           ; BSR set to: 1
  9147   001AC0  C178  F044         	movff	powf@ax,___flsub@b
  9148   001AC4  C179  F045         	movff	powf@ax+1,___flsub@b+1
  9149   001AC8  C17A  F046         	movff	powf@ax+2,___flsub@b+2
  9150   001ACC  C17B  F047         	movff	powf@ax+3,___flsub@b+3
  9151   001AD0  51A4               	movf	powf@k& (0+255),w,b
  9152   001AD2  0D04               	mullw	4
  9153   001AD4  50F3               	movf	243,w,c
  9154   001AD6  0F11               	addlw	low _bp
  9155   001AD8  0100               	movlb	0	; () banked
  9156   001ADA  6F68               	movwf	??_powf& (0+255),b
  9157   001ADC  C068  FFF6         	movff	??_powf,tblptrl
  9158   001AE0                     	if	1	;There is more than 1 active tblptr byte
  9159   001AE0  0E0E               	movlw	high __smallconst
  9160   001AE2  6EF7               	movwf	tblptrh,c
  9161   001AE4                     	endif
  9162   001AE4                     	if	0	;tblptru may be non-zero
  9163   001AE4                     	endif
  9164   001AE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9165   001AE4  0E00               	movlw	low (__smallconst shr (0+16))
  9166   001AE6  6EF8               	movwf	tblptru,c
  9167   001AE8                     	endif
  9168   001AE8  0009               	tblrd		*+
  9169   001AEA  CFF5 F048          	movff	tablat,___flsub@a
  9170   001AEE  0009               	tblrd		*+
  9171   001AF0  CFF5 F049          	movff	tablat,___flsub@a+1
  9172   001AF4  0009               	tblrd		*+
  9173   001AF6  CFF5 F04A          	movff	tablat,___flsub@a+2
  9174   001AFA  000A               	tblrd		*-
  9175   001AFC  CFF5 F04B          	movff	tablat,___flsub@a+3
  9176   001B00  ECAF  F039         	call	___flsub	;wreg free
  9177   001B04  C044  F17C         	movff	?___flsub,powf@u
  9178   001B08  C045  F17D         	movff	?___flsub+1,powf@u+1
  9179   001B0C  C046  F17E         	movff	?___flsub+2,powf@u+2
  9180   001B10  C047  F17F         	movff	?___flsub+3,powf@u+3
  9181   001B14  0E00               	movlw	0
  9182   001B16  6E2B               	movwf	___fldiv@b^0,c
  9183   001B18  0E00               	movlw	0
  9184   001B1A  6E2C               	movwf	(___fldiv@b+1)^0,c
  9185   001B1C  0E80               	movlw	128
  9186   001B1E  6E2D               	movwf	(___fldiv@b+2)^0,c
  9187   001B20  0E3F               	movlw	63
  9188   001B22  6E2E               	movwf	(___fldiv@b+3)^0,c
  9189   001B24  C178  F006         	movff	powf@ax,___fladd@a
  9190   001B28  C179  F007         	movff	powf@ax+1,___fladd@a+1
  9191   001B2C  C17A  F008         	movff	powf@ax+2,___fladd@a+2
  9192   001B30  C17B  F009         	movff	powf@ax+3,___fladd@a+3
  9193   001B34  0101               	movlb	1	; () banked
  9194   001B36  51A4               	movf	powf@k& (0+255),w,b
  9195   001B38  0D04               	mullw	4
  9196   001B3A  50F3               	movf	243,w,c
  9197   001B3C  0F11               	addlw	low _bp
  9198   001B3E  0100               	movlb	0	; () banked
  9199   001B40  6F68               	movwf	??_powf& (0+255),b
  9200   001B42  C068  FFF6         	movff	??_powf,tblptrl
  9201   001B46                     	if	1	;There is more than 1 active tblptr byte
  9202   001B46  0E0E               	movlw	high __smallconst
  9203   001B48  6EF7               	movwf	tblptrh,c
  9204   001B4A                     	endif
  9205   001B4A                     	if	0	;tblptru may be non-zero
  9206   001B4A                     	endif
  9207   001B4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9208   001B4A  0E00               	movlw	low (__smallconst shr (0+16))
  9209   001B4C  6EF8               	movwf	tblptru,c
  9210   001B4E                     	endif
  9211   001B4E  0009               	tblrd		*+
  9212   001B50  CFF5 F002          	movff	tablat,___fladd@b
  9213   001B54  0009               	tblrd		*+
  9214   001B56  CFF5 F003          	movff	tablat,___fladd@b+1
  9215   001B5A  0009               	tblrd		*+
  9216   001B5C  CFF5 F004          	movff	tablat,___fladd@b+2
  9217   001B60  000A               	tblrd		*-
  9218   001B62  CFF5 F005          	movff	tablat,___fladd@b+3
  9219   001B66  EC89  F026         	call	___fladd	;wreg free
  9220   001B6A  C002  F02F         	movff	?___fladd,___fldiv@a
  9221   001B6E  C003  F030         	movff	?___fladd+1,___fldiv@a+1
  9222   001B72  C004  F031         	movff	?___fladd+2,___fldiv@a+2
  9223   001B76  C005  F032         	movff	?___fladd+3,___fldiv@a+3
  9224   001B7A  ECED  F02C         	call	___fldiv	;wreg free
  9225   001B7E  C02B  F180         	movff	?___fldiv,powf@v
  9226   001B82  C02C  F181         	movff	?___fldiv+1,powf@v+1
  9227   001B86  C02D  F182         	movff	?___fldiv+2,powf@v+2
  9228   001B8A  C02E  F183         	movff	?___fldiv+3,powf@v+3
  9229   001B8E  C17C  F012         	movff	powf@u,___flmul@b
  9230   001B92  C17D  F013         	movff	powf@u+1,___flmul@b+1
  9231   001B96  C17E  F014         	movff	powf@u+2,___flmul@b+2
  9232   001B9A  C17F  F015         	movff	powf@u+3,___flmul@b+3
  9233   001B9E  C180  F016         	movff	powf@v,___flmul@a
  9234   001BA2  C181  F017         	movff	powf@v+1,___flmul@a+1
  9235   001BA6  C182  F018         	movff	powf@v+2,___flmul@a+2
  9236   001BAA  C183  F019         	movff	powf@v+3,___flmul@a+3
  9237   001BAE  ECE9  F028         	call	___flmul	;wreg free
  9238   001BB2  C012  F158         	movff	?___flmul,powf@s
  9239   001BB6  C013  F159         	movff	?___flmul+1,powf@s+1
  9240   001BBA  C014  F15A         	movff	?___flmul+2,powf@s+2
  9241   001BBE  C015  F15B         	movff	?___flmul+3,powf@s+3
  9242   001BC2  C158  F174         	movff	powf@s,powf@s_h
  9243   001BC6  C159  F175         	movff	powf@s+1,powf@s_h+1
  9244   001BCA  C15A  F176         	movff	powf@s+2,powf@s_h+2
  9245   001BCE  C15B  F177         	movff	powf@s+3,powf@s_h+3
  9246   001BD2  C174  F198         	movff	powf@s_h,powf@is
  9247   001BD6  C175  F199         	movff	powf@s_h+1,powf@is+1
  9248   001BDA  C176  F19A         	movff	powf@s_h+2,powf@is+2
  9249   001BDE  C177  F19B         	movff	powf@s_h+3,powf@is+3
  9250   001BE2  0E00               	movlw	0
  9251   001BE4  0101               	movlb	1	; () banked
  9252   001BE6  1598               	andwf	powf@is& (0+255),w,b
  9253   001BE8  6F74               	movwf	powf@s_h& (0+255),b
  9254   001BEA  0EF0               	movlw	240
  9255   001BEC  1599               	andwf	(powf@is+1)& (0+255),w,b
  9256   001BEE  6F75               	movwf	(powf@s_h+1)& (0+255),b
  9257   001BF0  0EFF               	movlw	255
  9258   001BF2  159A               	andwf	(powf@is+2)& (0+255),w,b
  9259   001BF4  6F76               	movwf	(powf@s_h+2)& (0+255),b
  9260   001BF6  0EFF               	movlw	255
  9261   001BF8  159B               	andwf	(powf@is+3)& (0+255),w,b
  9262   001BFA  6F77               	movwf	(powf@s_h+3)& (0+255),b
  9263   001BFC                     
  9264                           ; BSR set to: 1
  9265   001BFC  C1AC  F068         	movff	powf@ix,??_powf
  9266   001C00  C1AD  F069         	movff	powf@ix+1,??_powf+1
  9267   001C04  C1AE  F06A         	movff	powf@ix+2,??_powf+2
  9268   001C08  C1AF  F06B         	movff	powf@ix+3,??_powf+3
  9269   001C0C  0100               	movlb	0	; () banked
  9270   001C0E  356B               	rlcf	(??_powf+3)& (0+255),w,b
  9271   001C10  336B               	rrcf	(??_powf+3)& (0+255),f,b
  9272   001C12  336A               	rrcf	(??_powf+2)& (0+255),f,b
  9273   001C14  3369               	rrcf	(??_powf+1)& (0+255),f,b
  9274   001C16  3368               	rrcf	??_powf& (0+255),f,b
  9275   001C18  0E00               	movlw	0
  9276   001C1A  1568               	andwf	??_powf& (0+255),w,b
  9277   001C1C  6F6C               	movwf	(??_powf+4)& (0+255),b
  9278   001C1E  0EF0               	movlw	240
  9279   001C20  1569               	andwf	(??_powf+1)& (0+255),w,b
  9280   001C22  6F6D               	movwf	(??_powf+5)& (0+255),b
  9281   001C24  0EFF               	movlw	255
  9282   001C26  156A               	andwf	(??_powf+2)& (0+255),w,b
  9283   001C28  6F6E               	movwf	(??_powf+6)& (0+255),b
  9284   001C2A  0EFF               	movlw	255
  9285   001C2C  156B               	andwf	(??_powf+3)& (0+255),w,b
  9286   001C2E  6F6F               	movwf	(??_powf+7)& (0+255),b
  9287   001C30  0E00               	movlw	0
  9288   001C32  116C               	iorwf	(??_powf+4)& (0+255),w,b
  9289   001C34  0101               	movlb	1	; () banked
  9290   001C36  6F98               	movwf	powf@is& (0+255),b
  9291   001C38  0E00               	movlw	0
  9292   001C3A  0100               	movlb	0	; () banked
  9293   001C3C  116D               	iorwf	(??_powf+5)& (0+255),w,b
  9294   001C3E  0101               	movlb	1	; () banked
  9295   001C40  6F99               	movwf	(powf@is+1)& (0+255),b
  9296   001C42  0E00               	movlw	0
  9297   001C44  0100               	movlb	0	; () banked
  9298   001C46  116E               	iorwf	(??_powf+6)& (0+255),w,b
  9299   001C48  0101               	movlb	1	; () banked
  9300   001C4A  6F9A               	movwf	(powf@is+2)& (0+255),b
  9301   001C4C  0E20               	movlw	32
  9302   001C4E  0100               	movlb	0	; () banked
  9303   001C50  116F               	iorwf	(??_powf+7)& (0+255),w,b
  9304   001C52  0101               	movlb	1	; () banked
  9305   001C54  6F9B               	movwf	(powf@is+3)& (0+255),b
  9306   001C56                     
  9307                           ; BSR set to: 1
  9308   001C56  C1A4  F068         	movff	powf@k,??_powf
  9309   001C5A  C1A5  F069         	movff	powf@k+1,??_powf+1
  9310   001C5E  C1A6  F06A         	movff	powf@k+2,??_powf+2
  9311   001C62  C1A7  F06B         	movff	powf@k+3,??_powf+3
  9312   001C66  0E15               	movlw	21
  9313   001C68                     u7605:
  9314   001C68  90D8               	bcf	status,0,c
  9315   001C6A  0100               	movlb	0	; () banked
  9316   001C6C  3768               	rlcf	??_powf& (0+255),f,b
  9317   001C6E  3769               	rlcf	(??_powf+1)& (0+255),f,b
  9318   001C70  376A               	rlcf	(??_powf+2)& (0+255),f,b
  9319   001C72  376B               	rlcf	(??_powf+3)& (0+255),f,b
  9320   001C74  2EE8               	decfsz	wreg,f,c
  9321   001C76  EF34  F00E         	goto	u7605
  9322   001C7A  0101               	movlb	1	; () banked
  9323   001C7C  5198               	movf	powf@is& (0+255),w,b
  9324   001C7E  0100               	movlb	0	; () banked
  9325   001C80  2568               	addwf	??_powf& (0+255),w,b
  9326   001C82  6F6C               	movwf	(??_powf+4)& (0+255),b
  9327   001C84  0101               	movlb	1	; () banked
  9328   001C86  5199               	movf	(powf@is+1)& (0+255),w,b
  9329   001C88  0100               	movlb	0	; () banked
  9330   001C8A  2169               	addwfc	(??_powf+1)& (0+255),w,b
  9331   001C8C  6F6D               	movwf	(??_powf+5)& (0+255),b
  9332   001C8E  0101               	movlb	1	; () banked
  9333   001C90  519A               	movf	(powf@is+2)& (0+255),w,b
  9334   001C92  0100               	movlb	0	; () banked
  9335   001C94  216A               	addwfc	(??_powf+2)& (0+255),w,b
  9336   001C96  6F6E               	movwf	(??_powf+6)& (0+255),b
  9337   001C98  0101               	movlb	1	; () banked
  9338   001C9A  519B               	movf	(powf@is+3)& (0+255),w,b
  9339   001C9C  0100               	movlb	0	; () banked
  9340   001C9E  216B               	addwfc	(??_powf+3)& (0+255),w,b
  9341   001CA0  6F6F               	movwf	(??_powf+7)& (0+255),b
  9342   001CA2  0E00               	movlw	0
  9343   001CA4  256C               	addwf	(??_powf+4)& (0+255),w,b
  9344   001CA6  0101               	movlb	1	; () banked
  9345   001CA8  6F70               	movwf	powf@t_h& (0+255),b
  9346   001CAA  0E00               	movlw	0
  9347   001CAC  0100               	movlb	0	; () banked
  9348   001CAE  216D               	addwfc	(??_powf+5)& (0+255),w,b
  9349   001CB0  0101               	movlb	1	; () banked
  9350   001CB2  6F71               	movwf	(powf@t_h+1)& (0+255),b
  9351   001CB4  0E40               	movlw	64
  9352   001CB6  0100               	movlb	0	; () banked
  9353   001CB8  216E               	addwfc	(??_powf+6)& (0+255),w,b
  9354   001CBA  0101               	movlb	1	; () banked
  9355   001CBC  6F72               	movwf	(powf@t_h+2)& (0+255),b
  9356   001CBE  0E00               	movlw	0
  9357   001CC0  0100               	movlb	0	; () banked
  9358   001CC2  216F               	addwfc	(??_powf+7)& (0+255),w,b
  9359   001CC4  0101               	movlb	1	; () banked
  9360   001CC6  6F73               	movwf	(powf@t_h+3)& (0+255),b
  9361   001CC8                     
  9362                           ; BSR set to: 1
  9363   001CC8  51A4               	movf	powf@k& (0+255),w,b
  9364   001CCA  0D04               	mullw	4
  9365   001CCC  50F3               	movf	243,w,c
  9366   001CCE  0F11               	addlw	low _bp
  9367   001CD0  0100               	movlb	0	; () banked
  9368   001CD2  6F68               	movwf	??_powf& (0+255),b
  9369   001CD4  C068  FFF6         	movff	??_powf,tblptrl
  9370   001CD8                     	if	1	;There is more than 1 active tblptr byte
  9371   001CD8  0E0E               	movlw	high __smallconst
  9372   001CDA  6EF7               	movwf	tblptrh,c
  9373   001CDC                     	endif
  9374   001CDC                     	if	0	;tblptru may be non-zero
  9375   001CDC                     	endif
  9376   001CDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9377   001CDC  0E00               	movlw	low (__smallconst shr (0+16))
  9378   001CDE  6EF8               	movwf	tblptru,c
  9379   001CE0                     	endif
  9380   001CE0  0009               	tblrd		*+
  9381   001CE2  CFF5 F048          	movff	tablat,___flsub@a
  9382   001CE6  0009               	tblrd		*+
  9383   001CE8  CFF5 F049          	movff	tablat,___flsub@a+1
  9384   001CEC  0009               	tblrd		*+
  9385   001CEE  CFF5 F04A          	movff	tablat,___flsub@a+2
  9386   001CF2  000A               	tblrd		*-
  9387   001CF4  CFF5 F04B          	movff	tablat,___flsub@a+3
  9388   001CF8  C170  F044         	movff	powf@t_h,___flsub@b
  9389   001CFC  C171  F045         	movff	powf@t_h+1,___flsub@b+1
  9390   001D00  C172  F046         	movff	powf@t_h+2,___flsub@b+2
  9391   001D04  C173  F047         	movff	powf@t_h+3,___flsub@b+3
  9392   001D08  ECAF  F039         	call	___flsub	;wreg free
  9393   001D0C  C044  F19C         	movff	?___flsub,_powf$3061
  9394   001D10  C045  F19D         	movff	?___flsub+1,_powf$3061+1
  9395   001D14  C046  F19E         	movff	?___flsub+2,_powf$3061+2
  9396   001D18  C047  F19F         	movff	?___flsub+3,_powf$3061+3
  9397   001D1C  C178  F044         	movff	powf@ax,___flsub@b
  9398   001D20  C179  F045         	movff	powf@ax+1,___flsub@b+1
  9399   001D24  C17A  F046         	movff	powf@ax+2,___flsub@b+2
  9400   001D28  C17B  F047         	movff	powf@ax+3,___flsub@b+3
  9401   001D2C  C19C  F048         	movff	_powf$3061,___flsub@a
  9402   001D30  C19D  F049         	movff	_powf$3061+1,___flsub@a+1
  9403   001D34  C19E  F04A         	movff	_powf$3061+2,___flsub@a+2
  9404   001D38  C19F  F04B         	movff	_powf$3061+3,___flsub@a+3
  9405   001D3C  ECAF  F039         	call	___flsub	;wreg free
  9406   001D40  C044  F134         	movff	?___flsub,powf@t_l
  9407   001D44  C045  F135         	movff	?___flsub+1,powf@t_l+1
  9408   001D48  C046  F136         	movff	?___flsub+2,powf@t_l+2
  9409   001D4C  C047  F137         	movff	?___flsub+3,powf@t_l+3
  9410   001D50  C170  F016         	movff	powf@t_h,___flmul@a
  9411   001D54  C171  F017         	movff	powf@t_h+1,___flmul@a+1
  9412   001D58  C172  F018         	movff	powf@t_h+2,___flmul@a+2
  9413   001D5C  C173  F019         	movff	powf@t_h+3,___flmul@a+3
  9414   001D60  C174  F012         	movff	powf@s_h,___flmul@b
  9415   001D64  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9416   001D68  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9417   001D6C  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9418   001D70  ECE9  F028         	call	___flmul	;wreg free
  9419   001D74  C012  F048         	movff	?___flmul,___flsub@a
  9420   001D78  C013  F049         	movff	?___flmul+1,___flsub@a+1
  9421   001D7C  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  9422   001D80  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  9423   001D84  C17C  F044         	movff	powf@u,___flsub@b
  9424   001D88  C17D  F045         	movff	powf@u+1,___flsub@b+1
  9425   001D8C  C17E  F046         	movff	powf@u+2,___flsub@b+2
  9426   001D90  C17F  F047         	movff	powf@u+3,___flsub@b+3
  9427   001D94  ECAF  F039         	call	___flsub	;wreg free
  9428   001D98  C044  F19C         	movff	?___flsub,_powf$3061
  9429   001D9C  C045  F19D         	movff	?___flsub+1,_powf$3061+1
  9430   001DA0  C046  F19E         	movff	?___flsub+2,_powf$3061+2
  9431   001DA4  C047  F19F         	movff	?___flsub+3,_powf$3061+3
  9432   001DA8  C134  F016         	movff	powf@t_l,___flmul@a
  9433   001DAC  C135  F017         	movff	powf@t_l+1,___flmul@a+1
  9434   001DB0  C136  F018         	movff	powf@t_l+2,___flmul@a+2
  9435   001DB4  C137  F019         	movff	powf@t_l+3,___flmul@a+3
  9436   001DB8  C174  F012         	movff	powf@s_h,___flmul@b
  9437   001DBC  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9438   001DC0  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9439   001DC4  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9440   001DC8  ECE9  F028         	call	___flmul	;wreg free
  9441   001DCC  C012  F048         	movff	?___flmul,___flsub@a
  9442   001DD0  C013  F049         	movff	?___flmul+1,___flsub@a+1
  9443   001DD4  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  9444   001DD8  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  9445   001DDC  C19C  F044         	movff	_powf$3061,___flsub@b
  9446   001DE0  C19D  F045         	movff	_powf$3061+1,___flsub@b+1
  9447   001DE4  C19E  F046         	movff	_powf$3061+2,___flsub@b+2
  9448   001DE8  C19F  F047         	movff	_powf$3061+3,___flsub@b+3
  9449   001DEC  ECAF  F039         	call	___flsub	;wreg free
  9450   001DF0  C044  F15C         	movff	?___flsub,_powf$3059
  9451   001DF4  C045  F15D         	movff	?___flsub+1,_powf$3059+1
  9452   001DF8  C046  F15E         	movff	?___flsub+2,_powf$3059+2
  9453   001DFC  C047  F15F         	movff	?___flsub+3,_powf$3059+3
  9454   001E00  C15C  F012         	movff	_powf$3059,___flmul@b
  9455   001E04  C15D  F013         	movff	_powf$3059+1,___flmul@b+1
  9456   001E08  C15E  F014         	movff	_powf$3059+2,___flmul@b+2
  9457   001E0C  C15F  F015         	movff	_powf$3059+3,___flmul@b+3
  9458   001E10  C180  F016         	movff	powf@v,___flmul@a
  9459   001E14  C181  F017         	movff	powf@v+1,___flmul@a+1
  9460   001E18  C182  F018         	movff	powf@v+2,___flmul@a+2
  9461   001E1C  C183  F019         	movff	powf@v+3,___flmul@a+3
  9462   001E20  ECE9  F028         	call	___flmul	;wreg free
  9463   001E24  C012  F130         	movff	?___flmul,powf@s_l
  9464   001E28  C013  F131         	movff	?___flmul+1,powf@s_l+1
  9465   001E2C  C014  F132         	movff	?___flmul+2,powf@s_l+2
  9466   001E30  C015  F133         	movff	?___flmul+3,powf@s_l+3
  9467   001E34  C158  F012         	movff	powf@s,___flmul@b
  9468   001E38  C159  F013         	movff	powf@s+1,___flmul@b+1
  9469   001E3C  C15A  F014         	movff	powf@s+2,___flmul@b+2
  9470   001E40  C15B  F015         	movff	powf@s+3,___flmul@b+3
  9471   001E44  C158  F016         	movff	powf@s,___flmul@a
  9472   001E48  C159  F017         	movff	powf@s+1,___flmul@a+1
  9473   001E4C  C15A  F018         	movff	powf@s+2,___flmul@a+2
  9474   001E50  C15B  F019         	movff	powf@s+3,___flmul@a+3
  9475   001E54  ECE9  F028         	call	___flmul	;wreg free
  9476   001E58  C012  F190         	movff	?___flmul,powf@s2
  9477   001E5C  C013  F191         	movff	?___flmul+1,powf@s2+1
  9478   001E60  C014  F192         	movff	?___flmul+2,powf@s2+2
  9479   001E64  C015  F193         	movff	?___flmul+3,powf@s2+3
  9480   001E68  0E55               	movlw	85
  9481   001E6A  6E06               	movwf	___fladd@a^0,c
  9482   001E6C  0E32               	movlw	50
  9483   001E6E  6E07               	movwf	(___fladd@a+1)^0,c
  9484   001E70  0E6C               	movlw	108
  9485   001E72  6E08               	movwf	(___fladd@a+2)^0,c
  9486   001E74  0E3E               	movlw	62
  9487   001E76  6E09               	movwf	(___fladd@a+3)^0,c
  9488   001E78  0E42               	movlw	66
  9489   001E7A  6E16               	movwf	___flmul@a^0,c
  9490   001E7C  0EF1               	movlw	241
  9491   001E7E  6E17               	movwf	(___flmul@a+1)^0,c
  9492   001E80  0E53               	movlw	83
  9493   001E82  6E18               	movwf	(___flmul@a+2)^0,c
  9494   001E84  0E3E               	movlw	62
  9495   001E86  6E19               	movwf	(___flmul@a+3)^0,c
  9496   001E88  C190  F012         	movff	powf@s2,___flmul@b
  9497   001E8C  C191  F013         	movff	powf@s2+1,___flmul@b+1
  9498   001E90  C192  F014         	movff	powf@s2+2,___flmul@b+2
  9499   001E94  C193  F015         	movff	powf@s2+3,___flmul@b+3
  9500   001E98  ECE9  F028         	call	___flmul	;wreg free
  9501   001E9C  C012  F002         	movff	?___flmul,___fladd@b
  9502   001EA0  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9503   001EA4  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9504   001EA8  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9505   001EAC  EC89  F026         	call	___fladd	;wreg free
  9506   001EB0  C002  F148         	movff	?___fladd,_powf$3058
  9507   001EB4  C003  F149         	movff	?___fladd+1,_powf$3058+1
  9508   001EB8  C004  F14A         	movff	?___fladd+2,_powf$3058+2
  9509   001EBC  C005  F14B         	movff	?___fladd+3,_powf$3058+3
  9510   001EC0  0E05               	movlw	5
  9511   001EC2  6E06               	movwf	___fladd@a^0,c
  9512   001EC4  0EA3               	movlw	163
  9513   001EC6  6E07               	movwf	(___fladd@a+1)^0,c
  9514   001EC8  0E8B               	movlw	139
  9515   001ECA  6E08               	movwf	(___fladd@a+2)^0,c
  9516   001ECC  0E3E               	movlw	62
  9517   001ECE  6E09               	movwf	(___fladd@a+3)^0,c
  9518   001ED0  C190  F016         	movff	powf@s2,___flmul@a
  9519   001ED4  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9520   001ED8  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9521   001EDC  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9522   001EE0  C148  F012         	movff	_powf$3058,___flmul@b
  9523   001EE4  C149  F013         	movff	_powf$3058+1,___flmul@b+1
  9524   001EE8  C14A  F014         	movff	_powf$3058+2,___flmul@b+2
  9525   001EEC  C14B  F015         	movff	_powf$3058+3,___flmul@b+3
  9526   001EF0  ECE9  F028         	call	___flmul	;wreg free
  9527   001EF4  C012  F002         	movff	?___flmul,___fladd@b
  9528   001EF8  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9529   001EFC  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9530   001F00  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9531   001F04  EC89  F026         	call	___fladd	;wreg free
  9532   001F08  C002  F15C         	movff	?___fladd,_powf$3059
  9533   001F0C  C003  F15D         	movff	?___fladd+1,_powf$3059+1
  9534   001F10  C004  F15E         	movff	?___fladd+2,_powf$3059+2
  9535   001F14  C005  F15F         	movff	?___fladd+3,_powf$3059+3
  9536   001F18  0EAB               	movlw	171
  9537   001F1A  6E06               	movwf	___fladd@a^0,c
  9538   001F1C  0EAA               	movlw	170
  9539   001F1E  6E07               	movwf	(___fladd@a+1)^0,c
  9540   001F20  0EAA               	movlw	170
  9541   001F22  6E08               	movwf	(___fladd@a+2)^0,c
  9542   001F24  0E3E               	movlw	62
  9543   001F26  6E09               	movwf	(___fladd@a+3)^0,c
  9544   001F28  C190  F016         	movff	powf@s2,___flmul@a
  9545   001F2C  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9546   001F30  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9547   001F34  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9548   001F38  C15C  F012         	movff	_powf$3059,___flmul@b
  9549   001F3C  C15D  F013         	movff	_powf$3059+1,___flmul@b+1
  9550   001F40  C15E  F014         	movff	_powf$3059+2,___flmul@b+2
  9551   001F44  C15F  F015         	movff	_powf$3059+3,___flmul@b+3
  9552   001F48  ECE9  F028         	call	___flmul	;wreg free
  9553   001F4C  C012  F002         	movff	?___flmul,___fladd@b
  9554   001F50  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9555   001F54  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9556   001F58  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9557   001F5C  EC89  F026         	call	___fladd	;wreg free
  9558   001F60  C002  F14C         	movff	?___fladd,_powf$3060
  9559   001F64  C003  F14D         	movff	?___fladd+1,_powf$3060+1
  9560   001F68  C004  F14E         	movff	?___fladd+2,_powf$3060+2
  9561   001F6C  C005  F14F         	movff	?___fladd+3,_powf$3060+3
  9562   001F70  0EB7               	movlw	183
  9563   001F72  6E06               	movwf	___fladd@a^0,c
  9564   001F74  0E6D               	movlw	109
  9565   001F76  6E07               	movwf	(___fladd@a+1)^0,c
  9566   001F78  0EDB               	movlw	219
  9567   001F7A  6E08               	movwf	(___fladd@a+2)^0,c
  9568   001F7C  0E3E               	movlw	62
  9569   001F7E  6E09               	movwf	(___fladd@a+3)^0,c
  9570   001F80  C190  F016         	movff	powf@s2,___flmul@a
  9571   001F84  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9572   001F88  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9573   001F8C  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9574   001F90  C14C  F012         	movff	_powf$3060,___flmul@b
  9575   001F94  C14D  F013         	movff	_powf$3060+1,___flmul@b+1
  9576   001F98  C14E  F014         	movff	_powf$3060+2,___flmul@b+2
  9577   001F9C  C14F  F015         	movff	_powf$3060+3,___flmul@b+3
  9578   001FA0  ECE9  F028         	call	___flmul	;wreg free
  9579   001FA4  C012  F002         	movff	?___flmul,___fladd@b
  9580   001FA8  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9581   001FAC  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9582   001FB0  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9583   001FB4  EC89  F026         	call	___fladd	;wreg free
  9584   001FB8  C002  F138         	movff	?___fladd,_powf$3062
  9585   001FBC  C003  F139         	movff	?___fladd+1,_powf$3062+1
  9586   001FC0  C004  F13A         	movff	?___fladd+2,_powf$3062+2
  9587   001FC4  C005  F13B         	movff	?___fladd+3,_powf$3062+3
  9588   001FC8  0E9A               	movlw	154
  9589   001FCA  6E06               	movwf	___fladd@a^0,c
  9590   001FCC  0E99               	movlw	153
  9591   001FCE  6E07               	movwf	(___fladd@a+1)^0,c
  9592   001FD0  0E19               	movlw	25
  9593   001FD2  6E08               	movwf	(___fladd@a+2)^0,c
  9594   001FD4  0E3F               	movlw	63
  9595   001FD6  6E09               	movwf	(___fladd@a+3)^0,c
  9596   001FD8  C190  F016         	movff	powf@s2,___flmul@a
  9597   001FDC  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9598   001FE0  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9599   001FE4  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9600   001FE8  C138  F012         	movff	_powf$3062,___flmul@b
  9601   001FEC  C139  F013         	movff	_powf$3062+1,___flmul@b+1
  9602   001FF0  C13A  F014         	movff	_powf$3062+2,___flmul@b+2
  9603   001FF4  C13B  F015         	movff	_powf$3062+3,___flmul@b+3
  9604   001FF8  ECE9  F028         	call	___flmul	;wreg free
  9605   001FFC  C012  F002         	movff	?___flmul,___fladd@b
  9606   002000  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9607   002004  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9608   002008  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9609   00200C  EC89  F026         	call	___fladd	;wreg free
  9610   002010  C002  F100         	movff	?___fladd,_powf$3063
  9611   002014  C003  F101         	movff	?___fladd+1,_powf$3063+1
  9612   002018  C004  F102         	movff	?___fladd+2,_powf$3063+2
  9613   00201C  C005  F103         	movff	?___fladd+3,_powf$3063+3
  9614   002020  C190  F016         	movff	powf@s2,___flmul@a
  9615   002024  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9616   002028  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9617   00202C  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9618   002030  C190  F012         	movff	powf@s2,___flmul@b
  9619   002034  C191  F013         	movff	powf@s2+1,___flmul@b+1
  9620   002038  C192  F014         	movff	powf@s2+2,___flmul@b+2
  9621   00203C  C193  F015         	movff	powf@s2+3,___flmul@b+3
  9622   002040  ECE9  F028         	call	___flmul	;wreg free
  9623   002044  C012  F104         	movff	?___flmul,_powf$3064
  9624   002048  C013  F105         	movff	?___flmul+1,_powf$3064+1
  9625   00204C  C014  F106         	movff	?___flmul+2,_powf$3064+2
  9626   002050  C015  F107         	movff	?___flmul+3,_powf$3064+3
  9627   002054  C100  F012         	movff	_powf$3063,___flmul@b
  9628   002058  C101  F013         	movff	_powf$3063+1,___flmul@b+1
  9629   00205C  C102  F014         	movff	_powf$3063+2,___flmul@b+2
  9630   002060  C103  F015         	movff	_powf$3063+3,___flmul@b+3
  9631   002064  C104  F016         	movff	_powf$3064,___flmul@a
  9632   002068  C105  F017         	movff	_powf$3064+1,___flmul@a+1
  9633   00206C  C106  F018         	movff	_powf$3064+2,___flmul@a+2
  9634   002070  C107  F019         	movff	_powf$3064+3,___flmul@a+3
  9635   002074  ECE9  F028         	call	___flmul	;wreg free
  9636   002078  C012  F150         	movff	?___flmul,powf@r
  9637   00207C  C013  F151         	movff	?___flmul+1,powf@r+1
  9638   002080  C014  F152         	movff	?___flmul+2,powf@r+2
  9639   002084  C015  F153         	movff	?___flmul+3,powf@r+3
  9640   002088  C130  F016         	movff	powf@s_l,___flmul@a
  9641   00208C  C131  F017         	movff	powf@s_l+1,___flmul@a+1
  9642   002090  C132  F018         	movff	powf@s_l+2,___flmul@a+2
  9643   002094  C133  F019         	movff	powf@s_l+3,___flmul@a+3
  9644   002098  C158  F006         	movff	powf@s,___fladd@a
  9645   00209C  C159  F007         	movff	powf@s+1,___fladd@a+1
  9646   0020A0  C15A  F008         	movff	powf@s+2,___fladd@a+2
  9647   0020A4  C15B  F009         	movff	powf@s+3,___fladd@a+3
  9648   0020A8  C174  F002         	movff	powf@s_h,___fladd@b
  9649   0020AC  C175  F003         	movff	powf@s_h+1,___fladd@b+1
  9650   0020B0  C176  F004         	movff	powf@s_h+2,___fladd@b+2
  9651   0020B4  C177  F005         	movff	powf@s_h+3,___fladd@b+3
  9652   0020B8  EC89  F026         	call	___fladd	;wreg free
  9653   0020BC  C002  F012         	movff	?___fladd,___flmul@b
  9654   0020C0  C003  F013         	movff	?___fladd+1,___flmul@b+1
  9655   0020C4  C004  F014         	movff	?___fladd+2,___flmul@b+2
  9656   0020C8  C005  F015         	movff	?___fladd+3,___flmul@b+3
  9657   0020CC  ECE9  F028         	call	___flmul	;wreg free
  9658   0020D0  C012  F160         	movff	?___flmul,_powf$3065
  9659   0020D4  C013  F161         	movff	?___flmul+1,_powf$3065+1
  9660   0020D8  C014  F162         	movff	?___flmul+2,_powf$3065+2
  9661   0020DC  C015  F163         	movff	?___flmul+3,_powf$3065+3
  9662   0020E0  C150  F002         	movff	powf@r,___fladd@b
  9663   0020E4  C151  F003         	movff	powf@r+1,___fladd@b+1
  9664   0020E8  C152  F004         	movff	powf@r+2,___fladd@b+2
  9665   0020EC  C153  F005         	movff	powf@r+3,___fladd@b+3
  9666   0020F0  C160  F006         	movff	_powf$3065,___fladd@a
  9667   0020F4  C161  F007         	movff	_powf$3065+1,___fladd@a+1
  9668   0020F8  C162  F008         	movff	_powf$3065+2,___fladd@a+2
  9669   0020FC  C163  F009         	movff	_powf$3065+3,___fladd@a+3
  9670   002100  EC89  F026         	call	___fladd	;wreg free
  9671   002104  C002  F150         	movff	?___fladd,powf@r
  9672   002108  C003  F151         	movff	?___fladd+1,powf@r+1
  9673   00210C  C004  F152         	movff	?___fladd+2,powf@r+2
  9674   002110  C005  F153         	movff	?___fladd+3,powf@r+3
  9675   002114  C174  F012         	movff	powf@s_h,___flmul@b
  9676   002118  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9677   00211C  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9678   002120  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9679   002124  C174  F016         	movff	powf@s_h,___flmul@a
  9680   002128  C175  F017         	movff	powf@s_h+1,___flmul@a+1
  9681   00212C  C176  F018         	movff	powf@s_h+2,___flmul@a+2
  9682   002130  C177  F019         	movff	powf@s_h+3,___flmul@a+3
  9683   002134  ECE9  F028         	call	___flmul	;wreg free
  9684   002138  C012  F190         	movff	?___flmul,powf@s2
  9685   00213C  C013  F191         	movff	?___flmul+1,powf@s2+1
  9686   002140  C014  F192         	movff	?___flmul+2,powf@s2+2
  9687   002144  C015  F193         	movff	?___flmul+3,powf@s2+3
  9688   002148  0E00               	movlw	0
  9689   00214A  6E06               	movwf	___fladd@a^0,c
  9690   00214C  0E00               	movlw	0
  9691   00214E  6E07               	movwf	(___fladd@a+1)^0,c
  9692   002150  0E40               	movlw	64
  9693   002152  6E08               	movwf	(___fladd@a+2)^0,c
  9694   002154  0E40               	movlw	64
  9695   002156  6E09               	movwf	(___fladd@a+3)^0,c
  9696   002158  C190  F002         	movff	powf@s2,___fladd@b
  9697   00215C  C191  F003         	movff	powf@s2+1,___fladd@b+1
  9698   002160  C192  F004         	movff	powf@s2+2,___fladd@b+2
  9699   002164  C193  F005         	movff	powf@s2+3,___fladd@b+3
  9700   002168  EC89  F026         	call	___fladd	;wreg free
  9701   00216C  C002  F160         	movff	?___fladd,_powf$3065
  9702   002170  C003  F161         	movff	?___fladd+1,_powf$3065+1
  9703   002174  C004  F162         	movff	?___fladd+2,_powf$3065+2
  9704   002178  C005  F163         	movff	?___fladd+3,_powf$3065+3
  9705   00217C  C160  F002         	movff	_powf$3065,___fladd@b
  9706   002180  C161  F003         	movff	_powf$3065+1,___fladd@b+1
  9707   002184  C162  F004         	movff	_powf$3065+2,___fladd@b+2
  9708   002188  C163  F005         	movff	_powf$3065+3,___fladd@b+3
  9709   00218C  C150  F006         	movff	powf@r,___fladd@a
  9710   002190  C151  F007         	movff	powf@r+1,___fladd@a+1
  9711   002194  C152  F008         	movff	powf@r+2,___fladd@a+2
  9712   002198  C153  F009         	movff	powf@r+3,___fladd@a+3
  9713   00219C  EC89  F026         	call	___fladd	;wreg free
  9714   0021A0  C002  F170         	movff	?___fladd,powf@t_h
  9715   0021A4  C003  F171         	movff	?___fladd+1,powf@t_h+1
  9716   0021A8  C004  F172         	movff	?___fladd+2,powf@t_h+2
  9717   0021AC  C005  F173         	movff	?___fladd+3,powf@t_h+3
  9718   0021B0  C170  F198         	movff	powf@t_h,powf@is
  9719   0021B4  C171  F199         	movff	powf@t_h+1,powf@is+1
  9720   0021B8  C172  F19A         	movff	powf@t_h+2,powf@is+2
  9721   0021BC  C173  F19B         	movff	powf@t_h+3,powf@is+3
  9722   0021C0  0E00               	movlw	0
  9723   0021C2  0101               	movlb	1	; () banked
  9724   0021C4  1598               	andwf	powf@is& (0+255),w,b
  9725   0021C6  6F70               	movwf	powf@t_h& (0+255),b
  9726   0021C8  0EF0               	movlw	240
  9727   0021CA  1599               	andwf	(powf@is+1)& (0+255),w,b
  9728   0021CC  6F71               	movwf	(powf@t_h+1)& (0+255),b
  9729   0021CE  0EFF               	movlw	255
  9730   0021D0  159A               	andwf	(powf@is+2)& (0+255),w,b
  9731   0021D2  6F72               	movwf	(powf@t_h+2)& (0+255),b
  9732   0021D4  0EFF               	movlw	255
  9733   0021D6  159B               	andwf	(powf@is+3)& (0+255),w,b
  9734   0021D8  6F73               	movwf	(powf@t_h+3)& (0+255),b
  9735   0021DA                     
  9736                           ; BSR set to: 1
  9737   0021DA  0E00               	movlw	0
  9738   0021DC  6E06               	movwf	___fladd@a^0,c
  9739   0021DE  0E00               	movlw	0
  9740   0021E0  6E07               	movwf	(___fladd@a+1)^0,c
  9741   0021E2  0E40               	movlw	64
  9742   0021E4  6E08               	movwf	(___fladd@a+2)^0,c
  9743   0021E6  0EC0               	movlw	192
  9744   0021E8  6E09               	movwf	(___fladd@a+3)^0,c
  9745   0021EA  C170  F002         	movff	powf@t_h,___fladd@b
  9746   0021EE  C171  F003         	movff	powf@t_h+1,___fladd@b+1
  9747   0021F2  C172  F004         	movff	powf@t_h+2,___fladd@b+2
  9748   0021F6  C173  F005         	movff	powf@t_h+3,___fladd@b+3
  9749   0021FA  EC89  F026         	call	___fladd	;wreg free
  9750   0021FE  C002  F13C         	movff	?___fladd,_powf$3066
  9751   002202  C003  F13D         	movff	?___fladd+1,_powf$3066+1
  9752   002206  C004  F13E         	movff	?___fladd+2,_powf$3066+2
  9753   00220A  C005  F13F         	movff	?___fladd+3,_powf$3066+3
  9754   00220E  C190  F048         	movff	powf@s2,___flsub@a
  9755   002212  C191  F049         	movff	powf@s2+1,___flsub@a+1
  9756   002216  C192  F04A         	movff	powf@s2+2,___flsub@a+2
  9757   00221A  C193  F04B         	movff	powf@s2+3,___flsub@a+3
  9758   00221E  C13C  F044         	movff	_powf$3066,___flsub@b
  9759   002222  C13D  F045         	movff	_powf$3066+1,___flsub@b+1
  9760   002226  C13E  F046         	movff	_powf$3066+2,___flsub@b+2
  9761   00222A  C13F  F047         	movff	_powf$3066+3,___flsub@b+3
  9762   00222E  ECAF  F039         	call	___flsub	;wreg free
  9763   002232  C044  F140         	movff	?___flsub,_powf$3067
  9764   002236  C045  F141         	movff	?___flsub+1,_powf$3067+1
  9765   00223A  C046  F142         	movff	?___flsub+2,_powf$3067+2
  9766   00223E  C047  F143         	movff	?___flsub+3,_powf$3067+3
  9767   002242  C150  F044         	movff	powf@r,___flsub@b
  9768   002246  C151  F045         	movff	powf@r+1,___flsub@b+1
  9769   00224A  C152  F046         	movff	powf@r+2,___flsub@b+2
  9770   00224E  C153  F047         	movff	powf@r+3,___flsub@b+3
  9771   002252  C140  F048         	movff	_powf$3067,___flsub@a
  9772   002256  C141  F049         	movff	_powf$3067+1,___flsub@a+1
  9773   00225A  C142  F04A         	movff	_powf$3067+2,___flsub@a+2
  9774   00225E  C143  F04B         	movff	_powf$3067+3,___flsub@a+3
  9775   002262  ECAF  F039         	call	___flsub	;wreg free
  9776   002266  C044  F134         	movff	?___flsub,powf@t_l
  9777   00226A  C045  F135         	movff	?___flsub+1,powf@t_l+1
  9778   00226E  C046  F136         	movff	?___flsub+2,powf@t_l+2
  9779   002272  C047  F137         	movff	?___flsub+3,powf@t_l+3
  9780   002276  C174  F012         	movff	powf@s_h,___flmul@b
  9781   00227A  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9782   00227E  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9783   002282  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9784   002286  C170  F016         	movff	powf@t_h,___flmul@a
  9785   00228A  C171  F017         	movff	powf@t_h+1,___flmul@a+1
  9786   00228E  C172  F018         	movff	powf@t_h+2,___flmul@a+2
  9787   002292  C173  F019         	movff	powf@t_h+3,___flmul@a+3
  9788   002296  ECE9  F028         	call	___flmul	;wreg free
  9789   00229A  C012  F17C         	movff	?___flmul,powf@u
  9790   00229E  C013  F17D         	movff	?___flmul+1,powf@u+1
  9791   0022A2  C014  F17E         	movff	?___flmul+2,powf@u+2
  9792   0022A6  C015  F17F         	movff	?___flmul+3,powf@u+3
  9793   0022AA  C130  F016         	movff	powf@s_l,___flmul@a
  9794   0022AE  C131  F017         	movff	powf@s_l+1,___flmul@a+1
  9795   0022B2  C132  F018         	movff	powf@s_l+2,___flmul@a+2
  9796   0022B6  C133  F019         	movff	powf@s_l+3,___flmul@a+3
  9797   0022BA  C170  F012         	movff	powf@t_h,___flmul@b
  9798   0022BE  C171  F013         	movff	powf@t_h+1,___flmul@b+1
  9799   0022C2  C172  F014         	movff	powf@t_h+2,___flmul@b+2
  9800   0022C6  C173  F015         	movff	powf@t_h+3,___flmul@b+3
  9801   0022CA  ECE9  F028         	call	___flmul	;wreg free
  9802   0022CE  C012  F002         	movff	?___flmul,___fladd@b
  9803   0022D2  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9804   0022D6  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9805   0022DA  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9806   0022DE  C158  F016         	movff	powf@s,___flmul@a
  9807   0022E2  C159  F017         	movff	powf@s+1,___flmul@a+1
  9808   0022E6  C15A  F018         	movff	powf@s+2,___flmul@a+2
  9809   0022EA  C15B  F019         	movff	powf@s+3,___flmul@a+3
  9810   0022EE  C134  F012         	movff	powf@t_l,___flmul@b
  9811   0022F2  C135  F013         	movff	powf@t_l+1,___flmul@b+1
  9812   0022F6  C136  F014         	movff	powf@t_l+2,___flmul@b+2
  9813   0022FA  C137  F015         	movff	powf@t_l+3,___flmul@b+3
  9814   0022FE  ECE9  F028         	call	___flmul	;wreg free
  9815   002302  C012  F006         	movff	?___flmul,___fladd@a
  9816   002306  C013  F007         	movff	?___flmul+1,___fladd@a+1
  9817   00230A  C014  F008         	movff	?___flmul+2,___fladd@a+2
  9818   00230E  C015  F009         	movff	?___flmul+3,___fladd@a+3
  9819   002312  EC89  F026         	call	___fladd	;wreg free
  9820   002316  C002  F180         	movff	?___fladd,powf@v
  9821   00231A  C003  F181         	movff	?___fladd+1,powf@v+1
  9822   00231E  C004  F182         	movff	?___fladd+2,powf@v+2
  9823   002322  C005  F183         	movff	?___fladd+3,powf@v+3
  9824   002326  C17C  F002         	movff	powf@u,___fladd@b
  9825   00232A  C17D  F003         	movff	powf@u+1,___fladd@b+1
  9826   00232E  C17E  F004         	movff	powf@u+2,___fladd@b+2
  9827   002332  C17F  F005         	movff	powf@u+3,___fladd@b+3
  9828   002336  C180  F006         	movff	powf@v,___fladd@a
  9829   00233A  C181  F007         	movff	powf@v+1,___fladd@a+1
  9830   00233E  C182  F008         	movff	powf@v+2,___fladd@a+2
  9831   002342  C183  F009         	movff	powf@v+3,___fladd@a+3
  9832   002346  EC89  F026         	call	___fladd	;wreg free
  9833   00234A  C002  F1A0         	movff	?___fladd,powf@p_h
  9834   00234E  C003  F1A1         	movff	?___fladd+1,powf@p_h+1
  9835   002352  C004  F1A2         	movff	?___fladd+2,powf@p_h+2
  9836   002356  C005  F1A3         	movff	?___fladd+3,powf@p_h+3
  9837   00235A  C1A0  F198         	movff	powf@p_h,powf@is
  9838   00235E  C1A1  F199         	movff	powf@p_h+1,powf@is+1
  9839   002362  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
  9840   002366  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
  9841   00236A  0E00               	movlw	0
  9842   00236C  0101               	movlb	1	; () banked
  9843   00236E  1598               	andwf	powf@is& (0+255),w,b
  9844   002370  6FA0               	movwf	powf@p_h& (0+255),b
  9845   002372  0EF0               	movlw	240
  9846   002374  1599               	andwf	(powf@is+1)& (0+255),w,b
  9847   002376  6FA1               	movwf	(powf@p_h+1)& (0+255),b
  9848   002378  0EFF               	movlw	255
  9849   00237A  159A               	andwf	(powf@is+2)& (0+255),w,b
  9850   00237C  6FA2               	movwf	(powf@p_h+2)& (0+255),b
  9851   00237E  0EFF               	movlw	255
  9852   002380  159B               	andwf	(powf@is+3)& (0+255),w,b
  9853   002382  6FA3               	movwf	(powf@p_h+3)& (0+255),b
  9854   002384                     
  9855                           ; BSR set to: 1
  9856   002384  C17C  F048         	movff	powf@u,___flsub@a
  9857   002388  C17D  F049         	movff	powf@u+1,___flsub@a+1
  9858   00238C  C17E  F04A         	movff	powf@u+2,___flsub@a+2
  9859   002390  C17F  F04B         	movff	powf@u+3,___flsub@a+3
  9860   002394  C1A0  F044         	movff	powf@p_h,___flsub@b
  9861   002398  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
  9862   00239C  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
  9863   0023A0  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
  9864   0023A4  ECAF  F039         	call	___flsub	;wreg free
  9865   0023A8  C044  F19C         	movff	?___flsub,_powf$3061
  9866   0023AC  C045  F19D         	movff	?___flsub+1,_powf$3061+1
  9867   0023B0  C046  F19E         	movff	?___flsub+2,_powf$3061+2
  9868   0023B4  C047  F19F         	movff	?___flsub+3,_powf$3061+3
  9869   0023B8  C180  F044         	movff	powf@v,___flsub@b
  9870   0023BC  C181  F045         	movff	powf@v+1,___flsub@b+1
  9871   0023C0  C182  F046         	movff	powf@v+2,___flsub@b+2
  9872   0023C4  C183  F047         	movff	powf@v+3,___flsub@b+3
  9873   0023C8  C19C  F048         	movff	_powf$3061,___flsub@a
  9874   0023CC  C19D  F049         	movff	_powf$3061+1,___flsub@a+1
  9875   0023D0  C19E  F04A         	movff	_powf$3061+2,___flsub@a+2
  9876   0023D4  C19F  F04B         	movff	_powf$3061+3,___flsub@a+3
  9877   0023D8  ECAF  F039         	call	___flsub	;wreg free
  9878   0023DC  C044  F16C         	movff	?___flsub,powf@p_l
  9879   0023E0  C045  F16D         	movff	?___flsub+1,powf@p_l+1
  9880   0023E4  C046  F16E         	movff	?___flsub+2,powf@p_l+2
  9881   0023E8  C047  F16F         	movff	?___flsub+3,powf@p_l+3
  9882   0023EC  C1A0  F012         	movff	powf@p_h,___flmul@b
  9883   0023F0  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
  9884   0023F4  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
  9885   0023F8  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
  9886   0023FC  0E00               	movlw	0
  9887   0023FE  6E16               	movwf	___flmul@a^0,c
  9888   002400  0E40               	movlw	64
  9889   002402  6E17               	movwf	(___flmul@a+1)^0,c
  9890   002404  0E76               	movlw	118
  9891   002406  6E18               	movwf	(___flmul@a+2)^0,c
  9892   002408  0E3F               	movlw	63
  9893   00240A  6E19               	movwf	(___flmul@a+3)^0,c
  9894   00240C  ECE9  F028         	call	___flmul	;wreg free
  9895   002410  C012  F120         	movff	?___flmul,powf@z_h
  9896   002414  C013  F121         	movff	?___flmul+1,powf@z_h+1
  9897   002418  C014  F122         	movff	?___flmul+2,powf@z_h+2
  9898   00241C  C015  F123         	movff	?___flmul+3,powf@z_h+3
  9899   002420  0E4F               	movlw	79
  9900   002422  6E16               	movwf	___flmul@a^0,c
  9901   002424  0E38               	movlw	56
  9902   002426  6E17               	movwf	(___flmul@a+1)^0,c
  9903   002428  0E76               	movlw	118
  9904   00242A  6E18               	movwf	(___flmul@a+2)^0,c
  9905   00242C  0E3F               	movlw	63
  9906   00242E  6E19               	movwf	(___flmul@a+3)^0,c
  9907   002430  C16C  F012         	movff	powf@p_l,___flmul@b
  9908   002434  C16D  F013         	movff	powf@p_l+1,___flmul@b+1
  9909   002438  C16E  F014         	movff	powf@p_l+2,___flmul@b+2
  9910   00243C  C16F  F015         	movff	powf@p_l+3,___flmul@b+3
  9911   002440  ECE9  F028         	call	___flmul	;wreg free
  9912   002444  C012  F006         	movff	?___flmul,___fladd@a
  9913   002448  C013  F007         	movff	?___flmul+1,___fladd@a+1
  9914   00244C  C014  F008         	movff	?___flmul+2,___fladd@a+2
  9915   002450  C015  F009         	movff	?___flmul+3,___fladd@a+3
  9916   002454  0EC6               	movlw	198
  9917   002456  6E16               	movwf	___flmul@a^0,c
  9918   002458  0E23               	movlw	35
  9919   00245A  6E17               	movwf	(___flmul@a+1)^0,c
  9920   00245C  0EF6               	movlw	246
  9921   00245E  6E18               	movwf	(___flmul@a+2)^0,c
  9922   002460  0EB8               	movlw	184
  9923   002462  6E19               	movwf	(___flmul@a+3)^0,c
  9924   002464  C1A0  F012         	movff	powf@p_h,___flmul@b
  9925   002468  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
  9926   00246C  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
  9927   002470  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
  9928   002474  ECE9  F028         	call	___flmul	;wreg free
  9929   002478  C012  F002         	movff	?___flmul,___fladd@b
  9930   00247C  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9931   002480  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9932   002484  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9933   002488  EC89  F026         	call	___fladd	;wreg free
  9934   00248C  C002  F160         	movff	?___fladd,_powf$3065
  9935   002490  C003  F161         	movff	?___fladd+1,_powf$3065+1
  9936   002494  C004  F162         	movff	?___fladd+2,_powf$3065+2
  9937   002498  C005  F163         	movff	?___fladd+3,_powf$3065+3
  9938   00249C  C160  F002         	movff	_powf$3065,___fladd@b
  9939   0024A0  C161  F003         	movff	_powf$3065+1,___fladd@b+1
  9940   0024A4  C162  F004         	movff	_powf$3065+2,___fladd@b+2
  9941   0024A8  C163  F005         	movff	_powf$3065+3,___fladd@b+3
  9942   0024AC  0101               	movlb	1	; () banked
  9943   0024AE  51A4               	movf	powf@k& (0+255),w,b
  9944   0024B0  0D04               	mullw	4
  9945   0024B2  50F3               	movf	243,w,c
  9946   0024B4  0F01               	addlw	low _dp_l
  9947   0024B6  0100               	movlb	0	; () banked
  9948   0024B8  6F68               	movwf	??_powf& (0+255),b
  9949   0024BA  C068  FFF6         	movff	??_powf,tblptrl
  9950   0024BE                     	if	1	;There is more than 1 active tblptr byte
  9951   0024BE  0E0E               	movlw	high __smallconst
  9952   0024C0  6EF7               	movwf	tblptrh,c
  9953   0024C2                     	endif
  9954   0024C2                     	if	0	;tblptru may be non-zero
  9955   0024C2                     	endif
  9956   0024C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9957   0024C2  0E00               	movlw	low (__smallconst shr (0+16))
  9958   0024C4  6EF8               	movwf	tblptru,c
  9959   0024C6                     	endif
  9960   0024C6  0009               	tblrd		*+
  9961   0024C8  CFF5 F006          	movff	tablat,___fladd@a
  9962   0024CC  0009               	tblrd		*+
  9963   0024CE  CFF5 F007          	movff	tablat,___fladd@a+1
  9964   0024D2  0009               	tblrd		*+
  9965   0024D4  CFF5 F008          	movff	tablat,___fladd@a+2
  9966   0024D8  000A               	tblrd		*-
  9967   0024DA  CFF5 F009          	movff	tablat,___fladd@a+3
  9968   0024DE  EC89  F026         	call	___fladd	;wreg free
  9969   0024E2  C002  F124         	movff	?___fladd,powf@z_l
  9970   0024E6  C003  F125         	movff	?___fladd+1,powf@z_l+1
  9971   0024EA  C004  F126         	movff	?___fladd+2,powf@z_l+2
  9972   0024EE  C005  F127         	movff	?___fladd+3,powf@z_l+3
  9973   0024F2  C188  F00D         	movff	powf@n,___xxtofl@val
  9974   0024F6  C189  F00E         	movff	powf@n+1,___xxtofl@val+1
  9975   0024FA  C18A  F00F         	movff	powf@n+2,___xxtofl@val+2
  9976   0024FE  C18B  F010         	movff	powf@n+3,___xxtofl@val+3
  9977   002502  0E01               	movlw	1
  9978   002504  ECBF  F030         	call	___xxtofl
  9979   002508  C00D  F1B0         	movff	?___xxtofl,powf@t
  9980   00250C  C00E  F1B1         	movff	?___xxtofl+1,powf@t+1
  9981   002510  C00F  F1B2         	movff	?___xxtofl+2,powf@t+2
  9982   002514  C010  F1B3         	movff	?___xxtofl+3,powf@t+3
  9983   002518  C124  F006         	movff	powf@z_l,___fladd@a
  9984   00251C  C125  F007         	movff	powf@z_l+1,___fladd@a+1
  9985   002520  C126  F008         	movff	powf@z_l+2,___fladd@a+2
  9986   002524  C127  F009         	movff	powf@z_l+3,___fladd@a+3
  9987   002528  C120  F002         	movff	powf@z_h,___fladd@b
  9988   00252C  C121  F003         	movff	powf@z_h+1,___fladd@b+1
  9989   002530  C122  F004         	movff	powf@z_h+2,___fladd@b+2
  9990   002534  C123  F005         	movff	powf@z_h+3,___fladd@b+3
  9991   002538  EC89  F026         	call	___fladd	;wreg free
  9992   00253C  C002  F160         	movff	?___fladd,_powf$3065
  9993   002540  C003  F161         	movff	?___fladd+1,_powf$3065+1
  9994   002544  C004  F162         	movff	?___fladd+2,_powf$3065+2
  9995   002548  C005  F163         	movff	?___fladd+3,_powf$3065+3
  9996   00254C  0101               	movlb	1	; () banked
  9997   00254E  51A4               	movf	powf@k& (0+255),w,b
  9998   002550  0D04               	mullw	4
  9999   002552  50F3               	movf	243,w,c
 10000   002554  0F09               	addlw	low _dp_h
 10001   002556  0100               	movlb	0	; () banked
 10002   002558  6F68               	movwf	??_powf& (0+255),b
 10003   00255A  C068  FFF6         	movff	??_powf,tblptrl
 10004   00255E                     	if	1	;There is more than 1 active tblptr byte
 10005   00255E  0E0E               	movlw	high __smallconst
 10006   002560  6EF7               	movwf	tblptrh,c
 10007   002562                     	endif
 10008   002562                     	if	0	;tblptru may be non-zero
 10009   002562                     	endif
 10010   002562                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10011   002562  0E00               	movlw	low (__smallconst shr (0+16))
 10012   002564  6EF8               	movwf	tblptru,c
 10013   002566                     	endif
 10014   002566  0009               	tblrd		*+
 10015   002568  CFF5 F006          	movff	tablat,___fladd@a
 10016   00256C  0009               	tblrd		*+
 10017   00256E  CFF5 F007          	movff	tablat,___fladd@a+1
 10018   002572  0009               	tblrd		*+
 10019   002574  CFF5 F008          	movff	tablat,___fladd@a+2
 10020   002578  000A               	tblrd		*-
 10021   00257A  CFF5 F009          	movff	tablat,___fladd@a+3
 10022   00257E  C160  F002         	movff	_powf$3065,___fladd@b
 10023   002582  C161  F003         	movff	_powf$3065+1,___fladd@b+1
 10024   002586  C162  F004         	movff	_powf$3065+2,___fladd@b+2
 10025   00258A  C163  F005         	movff	_powf$3065+3,___fladd@b+3
 10026   00258E  EC89  F026         	call	___fladd	;wreg free
 10027   002592  C002  F108         	movff	?___fladd,_powf$3068
 10028   002596  C003  F109         	movff	?___fladd+1,_powf$3068+1
 10029   00259A  C004  F10A         	movff	?___fladd+2,_powf$3068+2
 10030   00259E  C005  F10B         	movff	?___fladd+3,_powf$3068+3
 10031   0025A2  C108  F002         	movff	_powf$3068,___fladd@b
 10032   0025A6  C109  F003         	movff	_powf$3068+1,___fladd@b+1
 10033   0025AA  C10A  F004         	movff	_powf$3068+2,___fladd@b+2
 10034   0025AE  C10B  F005         	movff	_powf$3068+3,___fladd@b+3
 10035   0025B2  C1B0  F006         	movff	powf@t,___fladd@a
 10036   0025B6  C1B1  F007         	movff	powf@t+1,___fladd@a+1
 10037   0025BA  C1B2  F008         	movff	powf@t+2,___fladd@a+2
 10038   0025BE  C1B3  F009         	movff	powf@t+3,___fladd@a+3
 10039   0025C2  EC89  F026         	call	___fladd	;wreg free
 10040   0025C6  C002  F18C         	movff	?___fladd,powf@t1
 10041   0025CA  C003  F18D         	movff	?___fladd+1,powf@t1+1
 10042   0025CE  C004  F18E         	movff	?___fladd+2,powf@t1+2
 10043   0025D2  C005  F18F         	movff	?___fladd+3,powf@t1+3
 10044   0025D6  C18C  F198         	movff	powf@t1,powf@is
 10045   0025DA  C18D  F199         	movff	powf@t1+1,powf@is+1
 10046   0025DE  C18E  F19A         	movff	powf@t1+2,powf@is+2
 10047   0025E2  C18F  F19B         	movff	powf@t1+3,powf@is+3
 10048   0025E6  0E00               	movlw	0
 10049   0025E8  0101               	movlb	1	; () banked
 10050   0025EA  1598               	andwf	powf@is& (0+255),w,b
 10051   0025EC  6F8C               	movwf	powf@t1& (0+255),b
 10052   0025EE  0EF0               	movlw	240
 10053   0025F0  1599               	andwf	(powf@is+1)& (0+255),w,b
 10054   0025F2  6F8D               	movwf	(powf@t1+1)& (0+255),b
 10055   0025F4  0EFF               	movlw	255
 10056   0025F6  159A               	andwf	(powf@is+2)& (0+255),w,b
 10057   0025F8  6F8E               	movwf	(powf@t1+2)& (0+255),b
 10058   0025FA  0EFF               	movlw	255
 10059   0025FC  159B               	andwf	(powf@is+3)& (0+255),w,b
 10060   0025FE  6F8F               	movwf	(powf@t1+3)& (0+255),b
 10061   002600                     
 10062                           ; BSR set to: 1
 10063   002600  C1B0  F048         	movff	powf@t,___flsub@a
 10064   002604  C1B1  F049         	movff	powf@t+1,___flsub@a+1
 10065   002608  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
 10066   00260C  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
 10067   002610  C18C  F044         	movff	powf@t1,___flsub@b
 10068   002614  C18D  F045         	movff	powf@t1+1,___flsub@b+1
 10069   002618  C18E  F046         	movff	powf@t1+2,___flsub@b+2
 10070   00261C  C18F  F047         	movff	powf@t1+3,___flsub@b+3
 10071   002620  ECAF  F039         	call	___flsub	;wreg free
 10072   002624  C044  F19C         	movff	?___flsub,_powf$3061
 10073   002628  C045  F19D         	movff	?___flsub+1,_powf$3061+1
 10074   00262C  C046  F19E         	movff	?___flsub+2,_powf$3061+2
 10075   002630  C047  F19F         	movff	?___flsub+3,_powf$3061+3
 10076   002634  0101               	movlb	1	; () banked
 10077   002636  51A4               	movf	powf@k& (0+255),w,b
 10078   002638  0D04               	mullw	4
 10079   00263A  50F3               	movf	243,w,c
 10080   00263C  0F09               	addlw	low _dp_h
 10081   00263E  0100               	movlb	0	; () banked
 10082   002640  6F68               	movwf	??_powf& (0+255),b
 10083   002642  C068  FFF6         	movff	??_powf,tblptrl
 10084   002646                     	if	1	;There is more than 1 active tblptr byte
 10085   002646  0E0E               	movlw	high __smallconst
 10086   002648  6EF7               	movwf	tblptrh,c
 10087   00264A                     	endif
 10088   00264A                     	if	0	;tblptru may be non-zero
 10089   00264A                     	endif
 10090   00264A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10091   00264A  0E00               	movlw	low (__smallconst shr (0+16))
 10092   00264C  6EF8               	movwf	tblptru,c
 10093   00264E                     	endif
 10094   00264E  0009               	tblrd		*+
 10095   002650  CFF5 F048          	movff	tablat,___flsub@a
 10096   002654  0009               	tblrd		*+
 10097   002656  CFF5 F049          	movff	tablat,___flsub@a+1
 10098   00265A  0009               	tblrd		*+
 10099   00265C  CFF5 F04A          	movff	tablat,___flsub@a+2
 10100   002660  000A               	tblrd		*-
 10101   002662  CFF5 F04B          	movff	tablat,___flsub@a+3
 10102   002666  C19C  F044         	movff	_powf$3061,___flsub@b
 10103   00266A  C19D  F045         	movff	_powf$3061+1,___flsub@b+1
 10104   00266E  C19E  F046         	movff	_powf$3061+2,___flsub@b+2
 10105   002672  C19F  F047         	movff	_powf$3061+3,___flsub@b+3
 10106   002676  ECAF  F039         	call	___flsub	;wreg free
 10107   00267A  C044  F140         	movff	?___flsub,_powf$3067
 10108   00267E  C045  F141         	movff	?___flsub+1,_powf$3067+1
 10109   002682  C046  F142         	movff	?___flsub+2,_powf$3067+2
 10110   002686  C047  F143         	movff	?___flsub+3,_powf$3067+3
 10111   00268A  C120  F048         	movff	powf@z_h,___flsub@a
 10112   00268E  C121  F049         	movff	powf@z_h+1,___flsub@a+1
 10113   002692  C122  F04A         	movff	powf@z_h+2,___flsub@a+2
 10114   002696  C123  F04B         	movff	powf@z_h+3,___flsub@a+3
 10115   00269A  C140  F044         	movff	_powf$3067,___flsub@b
 10116   00269E  C141  F045         	movff	_powf$3067+1,___flsub@b+1
 10117   0026A2  C142  F046         	movff	_powf$3067+2,___flsub@b+2
 10118   0026A6  C143  F047         	movff	_powf$3067+3,___flsub@b+3
 10119   0026AA  ECAF  F039         	call	___flsub	;wreg free
 10120   0026AE  C044  F10C         	movff	?___flsub,_powf$3069
 10121   0026B2  C045  F10D         	movff	?___flsub+1,_powf$3069+1
 10122   0026B6  C046  F10E         	movff	?___flsub+2,_powf$3069+2
 10123   0026BA  C047  F10F         	movff	?___flsub+3,_powf$3069+3
 10124   0026BE  C124  F044         	movff	powf@z_l,___flsub@b
 10125   0026C2  C125  F045         	movff	powf@z_l+1,___flsub@b+1
 10126   0026C6  C126  F046         	movff	powf@z_l+2,___flsub@b+2
 10127   0026CA  C127  F047         	movff	powf@z_l+3,___flsub@b+3
 10128   0026CE  C10C  F048         	movff	_powf$3069,___flsub@a
 10129   0026D2  C10D  F049         	movff	_powf$3069+1,___flsub@a+1
 10130   0026D6  C10E  F04A         	movff	_powf$3069+2,___flsub@a+2
 10131   0026DA  C10F  F04B         	movff	_powf$3069+3,___flsub@a+3
 10132   0026DE  ECAF  F039         	call	___flsub	;wreg free
 10133   0026E2  C044  F11C         	movff	?___flsub,powf@t2
 10134   0026E6  C045  F11D         	movff	?___flsub+1,powf@t2+1
 10135   0026EA  C046  F11E         	movff	?___flsub+2,powf@t2+2
 10136   0026EE  C047  F11F         	movff	?___flsub+3,powf@t2+3
 10137   0026F2                     l7348:
 10138   0026F2  C064  F198         	movff	powf@y,powf@is
 10139   0026F6  C065  F199         	movff	powf@y+1,powf@is+1
 10140   0026FA  C066  F19A         	movff	powf@y+2,powf@is+2
 10141   0026FE  C067  F19B         	movff	powf@y+3,powf@is+3
 10142   002702  0E00               	movlw	0
 10143   002704  0101               	movlb	1	; () banked
 10144   002706  1598               	andwf	powf@is& (0+255),w,b
 10145   002708  6F2C               	movwf	powf@y1& (0+255),b
 10146   00270A  0EF0               	movlw	240
 10147   00270C  1599               	andwf	(powf@is+1)& (0+255),w,b
 10148   00270E  6F2D               	movwf	(powf@y1+1)& (0+255),b
 10149   002710  0EFF               	movlw	255
 10150   002712  159A               	andwf	(powf@is+2)& (0+255),w,b
 10151   002714  6F2E               	movwf	(powf@y1+2)& (0+255),b
 10152   002716  0EFF               	movlw	255
 10153   002718  159B               	andwf	(powf@is+3)& (0+255),w,b
 10154   00271A  6F2F               	movwf	(powf@y1+3)& (0+255),b
 10155   00271C                     
 10156                           ; BSR set to: 1
 10157   00271C  C18C  F016         	movff	powf@t1,___flmul@a
 10158   002720  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 10159   002724  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 10160   002728  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 10161   00272C  C12C  F048         	movff	powf@y1,___flsub@a
 10162   002730  C12D  F049         	movff	powf@y1+1,___flsub@a+1
 10163   002734  C12E  F04A         	movff	powf@y1+2,___flsub@a+2
 10164   002738  C12F  F04B         	movff	powf@y1+3,___flsub@a+3
 10165   00273C  C064  F044         	movff	powf@y,___flsub@b
 10166   002740  C065  F045         	movff	powf@y+1,___flsub@b+1
 10167   002744  C066  F046         	movff	powf@y+2,___flsub@b+2
 10168   002748  C067  F047         	movff	powf@y+3,___flsub@b+3
 10169   00274C  ECAF  F039         	call	___flsub	;wreg free
 10170   002750  C044  F012         	movff	?___flsub,___flmul@b
 10171   002754  C045  F013         	movff	?___flsub+1,___flmul@b+1
 10172   002758  C046  F014         	movff	?___flsub+2,___flmul@b+2
 10173   00275C  C047  F015         	movff	?___flsub+3,___flmul@b+3
 10174   002760  ECE9  F028         	call	___flmul	;wreg free
 10175   002764  C012  F110         	movff	?___flmul,_powf$3070
 10176   002768  C013  F111         	movff	?___flmul+1,_powf$3070+1
 10177   00276C  C014  F112         	movff	?___flmul+2,_powf$3070+2
 10178   002770  C015  F113         	movff	?___flmul+3,_powf$3070+3
 10179   002774  C110  F002         	movff	_powf$3070,___fladd@b
 10180   002778  C111  F003         	movff	_powf$3070+1,___fladd@b+1
 10181   00277C  C112  F004         	movff	_powf$3070+2,___fladd@b+2
 10182   002780  C113  F005         	movff	_powf$3070+3,___fladd@b+3
 10183   002784  C11C  F016         	movff	powf@t2,___flmul@a
 10184   002788  C11D  F017         	movff	powf@t2+1,___flmul@a+1
 10185   00278C  C11E  F018         	movff	powf@t2+2,___flmul@a+2
 10186   002790  C11F  F019         	movff	powf@t2+3,___flmul@a+3
 10187   002794  C064  F012         	movff	powf@y,___flmul@b
 10188   002798  C065  F013         	movff	powf@y+1,___flmul@b+1
 10189   00279C  C066  F014         	movff	powf@y+2,___flmul@b+2
 10190   0027A0  C067  F015         	movff	powf@y+3,___flmul@b+3
 10191   0027A4  ECE9  F028         	call	___flmul	;wreg free
 10192   0027A8  C012  F006         	movff	?___flmul,___fladd@a
 10193   0027AC  C013  F007         	movff	?___flmul+1,___fladd@a+1
 10194   0027B0  C014  F008         	movff	?___flmul+2,___fladd@a+2
 10195   0027B4  C015  F009         	movff	?___flmul+3,___fladd@a+3
 10196   0027B8  EC89  F026         	call	___fladd	;wreg free
 10197   0027BC  C002  F16C         	movff	?___fladd,powf@p_l
 10198   0027C0  C003  F16D         	movff	?___fladd+1,powf@p_l+1
 10199   0027C4  C004  F16E         	movff	?___fladd+2,powf@p_l+2
 10200   0027C8  C005  F16F         	movff	?___fladd+3,powf@p_l+3
 10201   0027CC  C12C  F012         	movff	powf@y1,___flmul@b
 10202   0027D0  C12D  F013         	movff	powf@y1+1,___flmul@b+1
 10203   0027D4  C12E  F014         	movff	powf@y1+2,___flmul@b+2
 10204   0027D8  C12F  F015         	movff	powf@y1+3,___flmul@b+3
 10205   0027DC  C18C  F016         	movff	powf@t1,___flmul@a
 10206   0027E0  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 10207   0027E4  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 10208   0027E8  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 10209   0027EC  ECE9  F028         	call	___flmul	;wreg free
 10210   0027F0  C012  F1A0         	movff	?___flmul,powf@p_h
 10211   0027F4  C013  F1A1         	movff	?___flmul+1,powf@p_h+1
 10212   0027F8  C014  F1A2         	movff	?___flmul+2,powf@p_h+2
 10213   0027FC  C015  F1A3         	movff	?___flmul+3,powf@p_h+3
 10214   002800  C1A0  F002         	movff	powf@p_h,___fladd@b
 10215   002804  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
 10216   002808  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
 10217   00280C  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
 10218   002810  C16C  F006         	movff	powf@p_l,___fladd@a
 10219   002814  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
 10220   002818  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
 10221   00281C  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
 10222   002820  EC89  F026         	call	___fladd	;wreg free
 10223   002824  C002  F1B4         	movff	?___fladd,powf@z
 10224   002828  C003  F1B5         	movff	?___fladd+1,powf@z+1
 10225   00282C  C004  F1B6         	movff	?___fladd+2,powf@z+2
 10226   002830  C005  F1B7         	movff	?___fladd+3,powf@z+3
 10227   002834  C1B4  F1A8         	movff	powf@z,powf@j
 10228   002838  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 10229   00283C  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 10230   002840  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 10231   002844  0101               	movlb	1	; () banked
 10232   002846  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 10233   002848  EF32  F014         	goto	u7611
 10234   00284C  05A8               	decf	powf@j& (0+255),w,b
 10235   00284E  0E00               	movlw	0
 10236   002850  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 10237   002852  0E00               	movlw	0
 10238   002854  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 10239   002856  0E43               	movlw	67
 10240   002858  59AB               	subwfb	(powf@j+3)& (0+255),w,b
 10241   00285A  A0D8               	btfss	status,0,c
 10242   00285C  EF32  F014         	goto	u7611
 10243   002860  EF34  F014         	goto	u7610
 10244   002864                     u7611:
 10245   002864  EF36  F014         	goto	l7370
 10246   002868                     u7610:
 10247   002868  EFDA  F00A         	goto	l7170
 10248   00286C                     l7370:
 10249                           
 10250                           ; BSR set to: 1
 10251   00286C  0E43               	movlw	67
 10252   00286E  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 10253   002870  11A8               	iorwf	powf@j& (0+255),w,b
 10254   002872  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 10255   002874  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 10256   002876  A4D8               	btfss	status,2,c
 10257   002878  EF40  F014         	goto	u7621
 10258   00287C  EF42  F014         	goto	u7620
 10259   002880                     u7621:
 10260   002880  EF81  F014         	goto	l7380
 10261   002884                     u7620:
 10262   002884                     
 10263                           ; BSR set to: 1
 10264   002884  C1A0  F048         	movff	powf@p_h,___flsub@a
 10265   002888  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 10266   00288C  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 10267   002890  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 10268   002894  C1B4  F044         	movff	powf@z,___flsub@b
 10269   002898  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10270   00289C  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10271   0028A0  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10272   0028A4  ECAF  F039         	call	___flsub	;wreg free
 10273   0028A8  C044  F04C         	movff	?___flsub,___flge@ff1
 10274   0028AC  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
 10275   0028B0  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
 10276   0028B4  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
 10277   0028B8  0E3C               	movlw	60
 10278   0028BA  6E06               	movwf	___fladd@a^0,c
 10279   0028BC  0EAA               	movlw	170
 10280   0028BE  6E07               	movwf	(___fladd@a+1)^0,c
 10281   0028C0  0E38               	movlw	56
 10282   0028C2  6E08               	movwf	(___fladd@a+2)^0,c
 10283   0028C4  0E33               	movlw	51
 10284   0028C6  6E09               	movwf	(___fladd@a+3)^0,c
 10285   0028C8  C16C  F002         	movff	powf@p_l,___fladd@b
 10286   0028CC  C16D  F003         	movff	powf@p_l+1,___fladd@b+1
 10287   0028D0  C16E  F004         	movff	powf@p_l+2,___fladd@b+2
 10288   0028D4  C16F  F005         	movff	powf@p_l+3,___fladd@b+3
 10289   0028D8  EC89  F026         	call	___fladd	;wreg free
 10290   0028DC  C002  F050         	movff	?___fladd,___flge@ff2
 10291   0028E0  C003  F051         	movff	?___fladd+1,___flge@ff2+1
 10292   0028E4  C004  F052         	movff	?___fladd+2,___flge@ff2+2
 10293   0028E8  C005  F053         	movff	?___fladd+3,___flge@ff2+3
 10294   0028EC  EC54  F033         	call	___flge	;wreg free
 10295   0028F0  B0D8               	btfsc	status,0,c
 10296   0028F2  EF7D  F014         	goto	u7631
 10297   0028F6  EF7F  F014         	goto	u7630
 10298   0028FA                     u7631:
 10299   0028FA  EFF4  F014         	goto	l7396
 10300   0028FE                     u7630:
 10301   0028FE  EFDA  F00A         	goto	l7170
 10302   002902                     l7380:
 10303                           
 10304                           ; BSR set to: 1
 10305   002902  0EFF               	movlw	255
 10306   002904  15A8               	andwf	powf@j& (0+255),w,b
 10307   002906  0100               	movlb	0	; () banked
 10308   002908  6F68               	movwf	??_powf& (0+255),b
 10309   00290A  0EFF               	movlw	255
 10310   00290C  0101               	movlb	1	; () banked
 10311   00290E  15A9               	andwf	(powf@j+1)& (0+255),w,b
 10312   002910  0100               	movlb	0	; () banked
 10313   002912  6F69               	movwf	(??_powf+1)& (0+255),b
 10314   002914  0EFF               	movlw	255
 10315   002916  0101               	movlb	1	; () banked
 10316   002918  15AA               	andwf	(powf@j+2)& (0+255),w,b
 10317   00291A  0100               	movlb	0	; () banked
 10318   00291C  6F6A               	movwf	(??_powf+2)& (0+255),b
 10319   00291E  0E7F               	movlw	127
 10320   002920  0101               	movlb	1	; () banked
 10321   002922  15AB               	andwf	(powf@j+3)& (0+255),w,b
 10322   002924  0100               	movlb	0	; () banked
 10323   002926  6F6B               	movwf	(??_powf+3)& (0+255),b
 10324   002928  BF6B               	btfsc	(??_powf+3)& (0+255),7,b
 10325   00292A  EFA3  F014         	goto	u7641
 10326   00292E  0568               	decf	??_powf& (0+255),w,b
 10327   002930  0E00               	movlw	0
 10328   002932  5969               	subwfb	(??_powf+1)& (0+255),w,b
 10329   002934  0E16               	movlw	22
 10330   002936  596A               	subwfb	(??_powf+2)& (0+255),w,b
 10331   002938  0E43               	movlw	67
 10332   00293A  596B               	subwfb	(??_powf+3)& (0+255),w,b
 10333   00293C  A0D8               	btfss	status,0,c
 10334   00293E  EFA3  F014         	goto	u7641
 10335   002942  EFA5  F014         	goto	u7640
 10336   002946                     u7641:
 10337   002946  EFAF  F014         	goto	l7388
 10338   00294A                     u7640:
 10339   00294A                     
 10340                           ; BSR set to: 0
 10341   00294A  0E00               	movlw	0
 10342   00294C  6F60               	movwf	?_powf& (0+255),b
 10343   00294E  0E00               	movlw	0
 10344   002950  6F61               	movwf	(?_powf+1)& (0+255),b
 10345   002952  0E00               	movlw	0
 10346   002954  6F62               	movwf	(?_powf+2)& (0+255),b
 10347   002956  0E00               	movlw	0
 10348   002958  6F63               	movwf	(?_powf+3)& (0+255),b
 10349   00295A  EF80  F019         	goto	l1371
 10350   00295E                     l7388:
 10351                           
 10352                           ; BSR set to: 0
 10353   00295E  0E16               	movlw	22
 10354   002960  0101               	movlb	1	; () banked
 10355   002962  19AA               	xorwf	(powf@j+2)& (0+255),w,b
 10356   002964  E109               	bnz	u7651
 10357   002966  0EC3               	movlw	195
 10358   002968  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 10359   00296A  11A8               	iorwf	powf@j& (0+255),w,b
 10360   00296C  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 10361   00296E  A4D8               	btfss	status,2,c
 10362   002970  EFBC  F014         	goto	u7651
 10363   002974  EFBE  F014         	goto	u7650
 10364   002978                     u7651:
 10365   002978  EFF4  F014         	goto	l7396
 10366   00297C                     u7650:
 10367   00297C                     
 10368                           ; BSR set to: 1
 10369   00297C  C1A0  F048         	movff	powf@p_h,___flsub@a
 10370   002980  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 10371   002984  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 10372   002988  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 10373   00298C  C1B4  F044         	movff	powf@z,___flsub@b
 10374   002990  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10375   002994  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10376   002998  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10377   00299C  ECAF  F039         	call	___flsub	;wreg free
 10378   0029A0  C044  F04C         	movff	?___flsub,___flge@ff1
 10379   0029A4  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
 10380   0029A8  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
 10381   0029AC  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
 10382   0029B0  C16C  F050         	movff	powf@p_l,___flge@ff2
 10383   0029B4  C16D  F051         	movff	powf@p_l+1,___flge@ff2+1
 10384   0029B8  C16E  F052         	movff	powf@p_l+2,___flge@ff2+2
 10385   0029BC  C16F  F053         	movff	powf@p_l+3,___flge@ff2+3
 10386   0029C0  EC54  F033         	call	___flge	;wreg free
 10387   0029C4  A0D8               	btfss	status,0,c
 10388   0029C6  EFE7  F014         	goto	u7661
 10389   0029CA  EFE9  F014         	goto	u7660
 10390   0029CE                     u7661:
 10391   0029CE  EFF4  F014         	goto	l7396
 10392   0029D2                     u7660:
 10393   0029D2  0E00               	movlw	0
 10394   0029D4  0100               	movlb	0	; () banked
 10395   0029D6  6F60               	movwf	?_powf& (0+255),b
 10396   0029D8  0E00               	movlw	0
 10397   0029DA  6F61               	movwf	(?_powf+1)& (0+255),b
 10398   0029DC  0E00               	movlw	0
 10399   0029DE  6F62               	movwf	(?_powf+2)& (0+255),b
 10400   0029E0  0E00               	movlw	0
 10401   0029E2  6F63               	movwf	(?_powf+3)& (0+255),b
 10402   0029E4  EF80  F019         	goto	l1371
 10403   0029E8                     l7396:
 10404   0029E8  0EFF               	movlw	255
 10405   0029EA  0101               	movlb	1	; () banked
 10406   0029EC  15A8               	andwf	powf@j& (0+255),w,b
 10407   0029EE  6F28               	movwf	powf@i& (0+255),b
 10408   0029F0  0EFF               	movlw	255
 10409   0029F2  15A9               	andwf	(powf@j+1)& (0+255),w,b
 10410   0029F4  6F29               	movwf	(powf@i+1)& (0+255),b
 10411   0029F6  0EFF               	movlw	255
 10412   0029F8  15AA               	andwf	(powf@j+2)& (0+255),w,b
 10413   0029FA  6F2A               	movwf	(powf@i+2)& (0+255),b
 10414   0029FC  0E7F               	movlw	127
 10415   0029FE  15AB               	andwf	(powf@j+3)& (0+255),w,b
 10416   002A00  6F2B               	movwf	(powf@i+3)& (0+255),b
 10417   002A02  0E17               	movlw	23
 10418   002A04  0100               	movlb	0	; () banked
 10419   002A06  6F68               	movwf	??_powf& (0+255),b
 10420   002A08  C128  F069         	movff	powf@i,??_powf+1
 10421   002A0C  C129  F06A         	movff	powf@i+1,??_powf+2
 10422   002A10  C12A  F06B         	movff	powf@i+2,??_powf+3
 10423   002A14  C12B  F06C         	movff	powf@i+3,??_powf+4
 10424   002A18                     u7675:
 10425   002A18  6768               	tstfsz	??_powf& (0+255),b
 10426   002A1A  EF11  F015         	goto	u7676
 10427   002A1E  EF19  F015         	goto	u7677
 10428   002A22                     u7676:
 10429   002A22  356C               	rlcf	(??_powf+4)& (0+255),w,b
 10430   002A24  336C               	rrcf	(??_powf+4)& (0+255),f,b
 10431   002A26  336B               	rrcf	(??_powf+3)& (0+255),f,b
 10432   002A28  336A               	rrcf	(??_powf+2)& (0+255),f,b
 10433   002A2A  3369               	rrcf	(??_powf+1)& (0+255),f,b
 10434   002A2C  2F68               	decfsz	??_powf& (0+255),f,b
 10435   002A2E  EF0C  F015         	goto	u7675
 10436   002A32                     u7677:
 10437   002A32  0E81               	movlw	129
 10438   002A34  0100               	movlb	0	; () banked
 10439   002A36  2569               	addwf	(??_powf+1)& (0+255),w,b
 10440   002A38  0101               	movlb	1	; () banked
 10441   002A3A  6FA4               	movwf	powf@k& (0+255),b
 10442   002A3C  0EFF               	movlw	255
 10443   002A3E  0100               	movlb	0	; () banked
 10444   002A40  216A               	addwfc	(??_powf+2)& (0+255),w,b
 10445   002A42  0101               	movlb	1	; () banked
 10446   002A44  6FA5               	movwf	(powf@k+1)& (0+255),b
 10447   002A46  0EFF               	movlw	255
 10448   002A48  0100               	movlb	0	; () banked
 10449   002A4A  216B               	addwfc	(??_powf+3)& (0+255),w,b
 10450   002A4C  0101               	movlb	1	; () banked
 10451   002A4E  6FA6               	movwf	(powf@k+2)& (0+255),b
 10452   002A50  0EFF               	movlw	255
 10453   002A52  0100               	movlb	0	; () banked
 10454   002A54  216C               	addwfc	(??_powf+4)& (0+255),w,b
 10455   002A56  0101               	movlb	1	; () banked
 10456   002A58  6FA7               	movwf	(powf@k+3)& (0+255),b
 10457   002A5A                     
 10458                           ; BSR set to: 1
 10459   002A5A  0E00               	movlw	0
 10460   002A5C  6F88               	movwf	powf@n& (0+255),b
 10461   002A5E  0E00               	movlw	0
 10462   002A60  6F89               	movwf	(powf@n+1)& (0+255),b
 10463   002A62  0E00               	movlw	0
 10464   002A64  6F8A               	movwf	(powf@n+2)& (0+255),b
 10465   002A66  0E00               	movlw	0
 10466   002A68  6F8B               	movwf	(powf@n+3)& (0+255),b
 10467   002A6A                     
 10468                           ; BSR set to: 1
 10469   002A6A  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
 10470   002A6C  EF44  F015         	goto	u7681
 10471   002A70  0528               	decf	powf@i& (0+255),w,b
 10472   002A72  0E00               	movlw	0
 10473   002A74  5929               	subwfb	(powf@i+1)& (0+255),w,b
 10474   002A76  0E00               	movlw	0
 10475   002A78  592A               	subwfb	(powf@i+2)& (0+255),w,b
 10476   002A7A  0E3F               	movlw	63
 10477   002A7C  592B               	subwfb	(powf@i+3)& (0+255),w,b
 10478   002A7E  A0D8               	btfss	status,0,c
 10479   002A80  EF44  F015         	goto	u7681
 10480   002A84  EF46  F015         	goto	u7680
 10481   002A88                     u7681:
 10482   002A88  EF42  F016         	goto	l7408
 10483   002A8C                     u7680:
 10484   002A8C                     
 10485                           ; BSR set to: 1
 10486   002A8C  C1A4  F068         	movff	powf@k,??_powf
 10487   002A90  0E01               	movlw	1
 10488   002A92  0100               	movlb	0	; () banked
 10489   002A94  2768               	addwf	??_powf& (0+255),f,b
 10490   002A96  0E00               	movlw	0
 10491   002A98  6F69               	movwf	(??_powf+1)& (0+255),b
 10492   002A9A  0E00               	movlw	0
 10493   002A9C  6F6A               	movwf	(??_powf+2)& (0+255),b
 10494   002A9E  0E80               	movlw	128
 10495   002AA0  6F6B               	movwf	(??_powf+3)& (0+255),b
 10496   002AA2  0E00               	movlw	0
 10497   002AA4  6F6C               	movwf	(??_powf+4)& (0+255),b
 10498   002AA6                     u7695:
 10499   002AA6  6768               	tstfsz	??_powf& (0+255),b
 10500   002AA8  EF58  F015         	goto	u7696
 10501   002AAC  EF60  F015         	goto	u7697
 10502   002AB0                     u7696:
 10503   002AB0  356C               	rlcf	(??_powf+4)& (0+255),w,b
 10504   002AB2  336C               	rrcf	(??_powf+4)& (0+255),f,b
 10505   002AB4  336B               	rrcf	(??_powf+3)& (0+255),f,b
 10506   002AB6  336A               	rrcf	(??_powf+2)& (0+255),f,b
 10507   002AB8  3369               	rrcf	(??_powf+1)& (0+255),f,b
 10508   002ABA  2F68               	decfsz	??_powf& (0+255),f,b
 10509   002ABC  EF53  F015         	goto	u7695
 10510   002AC0                     u7697:
 10511   002AC0  0101               	movlb	1	; () banked
 10512   002AC2  51A8               	movf	powf@j& (0+255),w,b
 10513   002AC4  0100               	movlb	0	; () banked
 10514   002AC6  2569               	addwf	(??_powf+1)& (0+255),w,b
 10515   002AC8  0101               	movlb	1	; () banked
 10516   002ACA  6F88               	movwf	powf@n& (0+255),b
 10517   002ACC  51A9               	movf	(powf@j+1)& (0+255),w,b
 10518   002ACE  0100               	movlb	0	; () banked
 10519   002AD0  216A               	addwfc	(??_powf+2)& (0+255),w,b
 10520   002AD2  0101               	movlb	1	; () banked
 10521   002AD4  6F89               	movwf	(powf@n+1)& (0+255),b
 10522   002AD6  51AA               	movf	(powf@j+2)& (0+255),w,b
 10523   002AD8  0100               	movlb	0	; () banked
 10524   002ADA  216B               	addwfc	(??_powf+3)& (0+255),w,b
 10525   002ADC  0101               	movlb	1	; () banked
 10526   002ADE  6F8A               	movwf	(powf@n+2)& (0+255),b
 10527   002AE0  51AB               	movf	(powf@j+3)& (0+255),w,b
 10528   002AE2  0100               	movlb	0	; () banked
 10529   002AE4  216C               	addwfc	(??_powf+4)& (0+255),w,b
 10530   002AE6  0101               	movlb	1	; () banked
 10531   002AE8  6F8B               	movwf	(powf@n+3)& (0+255),b
 10532   002AEA  0E81               	movlw	129
 10533   002AEC  0100               	movlb	0	; () banked
 10534   002AEE  6F68               	movwf	??_powf& (0+255),b
 10535   002AF0  0EFF               	movlw	255
 10536   002AF2  6F69               	movwf	(??_powf+1)& (0+255),b
 10537   002AF4  0EFF               	movlw	255
 10538   002AF6  6F6A               	movwf	(??_powf+2)& (0+255),b
 10539   002AF8  0EFF               	movlw	255
 10540   002AFA  6F6B               	movwf	(??_powf+3)& (0+255),b
 10541   002AFC  0E17               	movlw	23
 10542   002AFE  6F6C               	movwf	(??_powf+4)& (0+255),b
 10543   002B00  C188  F06D         	movff	powf@n,??_powf+5
 10544   002B04  C189  F06E         	movff	powf@n+1,??_powf+6
 10545   002B08  C18A  F06F         	movff	powf@n+2,??_powf+7
 10546   002B0C  C18B  F070         	movff	powf@n+3,??_powf+8
 10547   002B10                     u7705:
 10548   002B10  676C               	tstfsz	(??_powf+4)& (0+255),b
 10549   002B12  EF8D  F015         	goto	u7706
 10550   002B16  EF95  F015         	goto	u7707
 10551   002B1A                     u7706:
 10552   002B1A  3570               	rlcf	(??_powf+8)& (0+255),w,b
 10553   002B1C  3370               	rrcf	(??_powf+8)& (0+255),f,b
 10554   002B1E  336F               	rrcf	(??_powf+7)& (0+255),f,b
 10555   002B20  336E               	rrcf	(??_powf+6)& (0+255),f,b
 10556   002B22  336D               	rrcf	(??_powf+5)& (0+255),f,b
 10557   002B24  2F6C               	decfsz	(??_powf+4)& (0+255),f,b
 10558   002B26  EF88  F015         	goto	u7705
 10559   002B2A                     u7707:
 10560   002B2A  0100               	movlb	0	; () banked
 10561   002B2C  516D               	movf	(??_powf+5)& (0+255),w,b
 10562   002B2E  2568               	addwf	??_powf& (0+255),w,b
 10563   002B30  0101               	movlb	1	; () banked
 10564   002B32  6FA4               	movwf	powf@k& (0+255),b
 10565   002B34  0E00               	movlw	0
 10566   002B36  0100               	movlb	0	; () banked
 10567   002B38  2169               	addwfc	(??_powf+1)& (0+255),w,b
 10568   002B3A  0101               	movlb	1	; () banked
 10569   002B3C  6FA5               	movwf	(powf@k+1)& (0+255),b
 10570   002B3E  0E00               	movlw	0
 10571   002B40  0100               	movlb	0	; () banked
 10572   002B42  216A               	addwfc	(??_powf+2)& (0+255),w,b
 10573   002B44  0101               	movlb	1	; () banked
 10574   002B46  6FA6               	movwf	(powf@k+2)& (0+255),b
 10575   002B48  0E00               	movlw	0
 10576   002B4A  0100               	movlb	0	; () banked
 10577   002B4C  216B               	addwfc	(??_powf+3)& (0+255),w,b
 10578   002B4E  0101               	movlb	1	; () banked
 10579   002B50  6FA7               	movwf	(powf@k+3)& (0+255),b
 10580   002B52  C1A4  F068         	movff	powf@k,??_powf
 10581   002B56  0EFF               	movlw	255
 10582   002B58  0100               	movlb	0	; () banked
 10583   002B5A  6F69               	movwf	(??_powf+1)& (0+255),b
 10584   002B5C  0EFF               	movlw	255
 10585   002B5E  6F6A               	movwf	(??_powf+2)& (0+255),b
 10586   002B60  0E7F               	movlw	127
 10587   002B62  6F6B               	movwf	(??_powf+3)& (0+255),b
 10588   002B64  0E00               	movlw	0
 10589   002B66  6F6C               	movwf	(??_powf+4)& (0+255),b
 10590   002B68                     u7715:
 10591   002B68  6768               	tstfsz	??_powf& (0+255),b
 10592   002B6A  EFB9  F015         	goto	u7716
 10593   002B6E  EFC1  F015         	goto	u7717
 10594   002B72                     u7716:
 10595   002B72  356C               	rlcf	(??_powf+4)& (0+255),w,b
 10596   002B74  336C               	rrcf	(??_powf+4)& (0+255),f,b
 10597   002B76  336B               	rrcf	(??_powf+3)& (0+255),f,b
 10598   002B78  336A               	rrcf	(??_powf+2)& (0+255),f,b
 10599   002B7A  3369               	rrcf	(??_powf+1)& (0+255),f,b
 10600   002B7C  2F68               	decfsz	??_powf& (0+255),f,b
 10601   002B7E  EFB4  F015         	goto	u7715
 10602   002B82                     u7717:
 10603   002B82  0100               	movlb	0	; () banked
 10604   002B84  1D69               	comf	(??_powf+1)& (0+255),w,b
 10605   002B86  6F6D               	movwf	(??_powf+5)& (0+255),b
 10606   002B88  1D6A               	comf	(??_powf+2)& (0+255),w,b
 10607   002B8A  6F6E               	movwf	(??_powf+6)& (0+255),b
 10608   002B8C  1D6B               	comf	(??_powf+3)& (0+255),w,b
 10609   002B8E  6F6F               	movwf	(??_powf+7)& (0+255),b
 10610   002B90  1D6C               	comf	(??_powf+4)& (0+255),w,b
 10611   002B92  6F70               	movwf	(??_powf+8)& (0+255),b
 10612   002B94  0101               	movlb	1	; () banked
 10613   002B96  5188               	movf	powf@n& (0+255),w,b
 10614   002B98  0100               	movlb	0	; () banked
 10615   002B9A  156D               	andwf	(??_powf+5)& (0+255),w,b
 10616   002B9C  0101               	movlb	1	; () banked
 10617   002B9E  6FB0               	movwf	powf@t& (0+255),b
 10618   002BA0  5189               	movf	(powf@n+1)& (0+255),w,b
 10619   002BA2  0100               	movlb	0	; () banked
 10620   002BA4  156E               	andwf	(??_powf+6)& (0+255),w,b
 10621   002BA6  0101               	movlb	1	; () banked
 10622   002BA8  6FB1               	movwf	(powf@t+1)& (0+255),b
 10623   002BAA  518A               	movf	(powf@n+2)& (0+255),w,b
 10624   002BAC  0100               	movlb	0	; () banked
 10625   002BAE  156F               	andwf	(??_powf+7)& (0+255),w,b
 10626   002BB0  0101               	movlb	1	; () banked
 10627   002BB2  6FB2               	movwf	(powf@t+2)& (0+255),b
 10628   002BB4  518B               	movf	(powf@n+3)& (0+255),w,b
 10629   002BB6  0100               	movlb	0	; () banked
 10630   002BB8  1570               	andwf	(??_powf+8)& (0+255),w,b
 10631   002BBA  0101               	movlb	1	; () banked
 10632   002BBC  6FB3               	movwf	(powf@t+3)& (0+255),b
 10633   002BBE  51A4               	movf	powf@k& (0+255),w,b
 10634   002BC0  0817               	sublw	23
 10635   002BC2  0100               	movlb	0	; () banked
 10636   002BC4  6F68               	movwf	??_powf& (0+255),b
 10637   002BC6  0EFF               	movlw	255
 10638   002BC8  0101               	movlb	1	; () banked
 10639   002BCA  1588               	andwf	powf@n& (0+255),w,b
 10640   002BCC  0100               	movlb	0	; () banked
 10641   002BCE  6F69               	movwf	(??_powf+1)& (0+255),b
 10642   002BD0  0EFF               	movlw	255
 10643   002BD2  0101               	movlb	1	; () banked
 10644   002BD4  1589               	andwf	(powf@n+1)& (0+255),w,b
 10645   002BD6  0100               	movlb	0	; () banked
 10646   002BD8  6F6A               	movwf	(??_powf+2)& (0+255),b
 10647   002BDA  0E7F               	movlw	127
 10648   002BDC  0101               	movlb	1	; () banked
 10649   002BDE  158A               	andwf	(powf@n+2)& (0+255),w,b
 10650   002BE0  0100               	movlb	0	; () banked
 10651   002BE2  6F6B               	movwf	(??_powf+3)& (0+255),b
 10652   002BE4  0E00               	movlw	0
 10653   002BE6  0101               	movlb	1	; () banked
 10654   002BE8  158B               	andwf	(powf@n+3)& (0+255),w,b
 10655   002BEA  0100               	movlb	0	; () banked
 10656   002BEC  6F6C               	movwf	(??_powf+4)& (0+255),b
 10657   002BEE  0E00               	movlw	0
 10658   002BF0  1169               	iorwf	(??_powf+1)& (0+255),w,b
 10659   002BF2  6F6D               	movwf	(??_powf+5)& (0+255),b
 10660   002BF4  0E00               	movlw	0
 10661   002BF6  116A               	iorwf	(??_powf+2)& (0+255),w,b
 10662   002BF8  6F6E               	movwf	(??_powf+6)& (0+255),b
 10663   002BFA  0E80               	movlw	128
 10664   002BFC  116B               	iorwf	(??_powf+3)& (0+255),w,b
 10665   002BFE  6F6F               	movwf	(??_powf+7)& (0+255),b
 10666   002C00  0E00               	movlw	0
 10667   002C02  116C               	iorwf	(??_powf+4)& (0+255),w,b
 10668   002C04  6F70               	movwf	(??_powf+8)& (0+255),b
 10669   002C06                     u7725:
 10670   002C06  6768               	tstfsz	??_powf& (0+255),b
 10671   002C08  EF08  F016         	goto	u7726
 10672   002C0C  EF10  F016         	goto	u7727
 10673   002C10                     u7726:
 10674   002C10  3570               	rlcf	(??_powf+8)& (0+255),w,b
 10675   002C12  3370               	rrcf	(??_powf+8)& (0+255),f,b
 10676   002C14  336F               	rrcf	(??_powf+7)& (0+255),f,b
 10677   002C16  336E               	rrcf	(??_powf+6)& (0+255),f,b
 10678   002C18  336D               	rrcf	(??_powf+5)& (0+255),f,b
 10679   002C1A  2F68               	decfsz	??_powf& (0+255),f,b
 10680   002C1C  EF03  F016         	goto	u7725
 10681   002C20                     u7727:
 10682   002C20  C06D  F188         	movff	??_powf+5,powf@n
 10683   002C24  C06E  F189         	movff	??_powf+6,powf@n+1
 10684   002C28  C06F  F18A         	movff	??_powf+7,powf@n+2
 10685   002C2C  C070  F18B         	movff	??_powf+8,powf@n+3
 10686   002C30  0101               	movlb	1	; () banked
 10687   002C32  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 10688   002C34  EF20  F016         	goto	u7730
 10689   002C38  EF1E  F016         	goto	u7731
 10690   002C3C                     u7731:
 10691   002C3C  EF28  F016         	goto	l7406
 10692   002C40                     u7730:
 10693   002C40                     
 10694                           ; BSR set to: 1
 10695   002C40  1F8B               	comf	(powf@n+3)& (0+255),f,b
 10696   002C42  1F8A               	comf	(powf@n+2)& (0+255),f,b
 10697   002C44  1F89               	comf	(powf@n+1)& (0+255),f,b
 10698   002C46  6D88               	negf	powf@n& (0+255),b
 10699   002C48  0E00               	movlw	0
 10700   002C4A  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10701   002C4C  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10702   002C4E  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10703   002C50                     l7406:
 10704                           
 10705                           ; BSR set to: 1
 10706   002C50  C1A0  F044         	movff	powf@p_h,___flsub@b
 10707   002C54  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
 10708   002C58  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
 10709   002C5C  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
 10710   002C60  C1B0  F048         	movff	powf@t,___flsub@a
 10711   002C64  C1B1  F049         	movff	powf@t+1,___flsub@a+1
 10712   002C68  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
 10713   002C6C  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
 10714   002C70  ECAF  F039         	call	___flsub	;wreg free
 10715   002C74  C044  F1A0         	movff	?___flsub,powf@p_h
 10716   002C78  C045  F1A1         	movff	?___flsub+1,powf@p_h+1
 10717   002C7C  C046  F1A2         	movff	?___flsub+2,powf@p_h+2
 10718   002C80  C047  F1A3         	movff	?___flsub+3,powf@p_h+3
 10719   002C84                     l7408:
 10720   002C84  C1A0  F002         	movff	powf@p_h,___fladd@b
 10721   002C88  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
 10722   002C8C  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
 10723   002C90  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
 10724   002C94  C16C  F006         	movff	powf@p_l,___fladd@a
 10725   002C98  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
 10726   002C9C  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
 10727   002CA0  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
 10728   002CA4  EC89  F026         	call	___fladd	;wreg free
 10729   002CA8  C002  F1B0         	movff	?___fladd,powf@t
 10730   002CAC  C003  F1B1         	movff	?___fladd+1,powf@t+1
 10731   002CB0  C004  F1B2         	movff	?___fladd+2,powf@t+2
 10732   002CB4  C005  F1B3         	movff	?___fladd+3,powf@t+3
 10733   002CB8  C1B0  F198         	movff	powf@t,powf@is
 10734   002CBC  C1B1  F199         	movff	powf@t+1,powf@is+1
 10735   002CC0  C1B2  F19A         	movff	powf@t+2,powf@is+2
 10736   002CC4  C1B3  F19B         	movff	powf@t+3,powf@is+3
 10737   002CC8  0E00               	movlw	0
 10738   002CCA  0101               	movlb	1	; () banked
 10739   002CCC  1598               	andwf	powf@is& (0+255),w,b
 10740   002CCE  6FB0               	movwf	powf@t& (0+255),b
 10741   002CD0  0E80               	movlw	128
 10742   002CD2  1599               	andwf	(powf@is+1)& (0+255),w,b
 10743   002CD4  6FB1               	movwf	(powf@t+1)& (0+255),b
 10744   002CD6  0EFF               	movlw	255
 10745   002CD8  159A               	andwf	(powf@is+2)& (0+255),w,b
 10746   002CDA  6FB2               	movwf	(powf@t+2)& (0+255),b
 10747   002CDC  0EFF               	movlw	255
 10748   002CDE  159B               	andwf	(powf@is+3)& (0+255),w,b
 10749   002CE0  6FB3               	movwf	(powf@t+3)& (0+255),b
 10750   002CE2                     
 10751                           ; BSR set to: 1
 10752   002CE2  C1B0  F012         	movff	powf@t,___flmul@b
 10753   002CE6  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10754   002CEA  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10755   002CEE  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10756   002CF2  0E00               	movlw	0
 10757   002CF4  6E16               	movwf	___flmul@a^0,c
 10758   002CF6  0E72               	movlw	114
 10759   002CF8  6E17               	movwf	(___flmul@a+1)^0,c
 10760   002CFA  0E31               	movlw	49
 10761   002CFC  6E18               	movwf	(___flmul@a+2)^0,c
 10762   002CFE  0E3F               	movlw	63
 10763   002D00  6E19               	movwf	(___flmul@a+3)^0,c
 10764   002D02  ECE9  F028         	call	___flmul	;wreg free
 10765   002D06  C012  F17C         	movff	?___flmul,powf@u
 10766   002D0A  C013  F17D         	movff	?___flmul+1,powf@u+1
 10767   002D0E  C014  F17E         	movff	?___flmul+2,powf@u+2
 10768   002D12  C015  F17F         	movff	?___flmul+3,powf@u+3
 10769   002D16  C1A0  F048         	movff	powf@p_h,___flsub@a
 10770   002D1A  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 10771   002D1E  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 10772   002D22  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 10773   002D26  C1B0  F044         	movff	powf@t,___flsub@b
 10774   002D2A  C1B1  F045         	movff	powf@t+1,___flsub@b+1
 10775   002D2E  C1B2  F046         	movff	powf@t+2,___flsub@b+2
 10776   002D32  C1B3  F047         	movff	powf@t+3,___flsub@b+3
 10777   002D36  ECAF  F039         	call	___flsub	;wreg free
 10778   002D3A  C044  F19C         	movff	?___flsub,_powf$3061
 10779   002D3E  C045  F19D         	movff	?___flsub+1,_powf$3061+1
 10780   002D42  C046  F19E         	movff	?___flsub+2,_powf$3061+2
 10781   002D46  C047  F19F         	movff	?___flsub+3,_powf$3061+3
 10782   002D4A  0E18               	movlw	24
 10783   002D4C  6E16               	movwf	___flmul@a^0,c
 10784   002D4E  0E72               	movlw	114
 10785   002D50  6E17               	movwf	(___flmul@a+1)^0,c
 10786   002D52  0E31               	movlw	49
 10787   002D54  6E18               	movwf	(___flmul@a+2)^0,c
 10788   002D56  0E3F               	movlw	63
 10789   002D58  6E19               	movwf	(___flmul@a+3)^0,c
 10790   002D5A  C19C  F048         	movff	_powf$3061,___flsub@a
 10791   002D5E  C19D  F049         	movff	_powf$3061+1,___flsub@a+1
 10792   002D62  C19E  F04A         	movff	_powf$3061+2,___flsub@a+2
 10793   002D66  C19F  F04B         	movff	_powf$3061+3,___flsub@a+3
 10794   002D6A  C16C  F044         	movff	powf@p_l,___flsub@b
 10795   002D6E  C16D  F045         	movff	powf@p_l+1,___flsub@b+1
 10796   002D72  C16E  F046         	movff	powf@p_l+2,___flsub@b+2
 10797   002D76  C16F  F047         	movff	powf@p_l+3,___flsub@b+3
 10798   002D7A  ECAF  F039         	call	___flsub	;wreg free
 10799   002D7E  C044  F012         	movff	?___flsub,___flmul@b
 10800   002D82  C045  F013         	movff	?___flsub+1,___flmul@b+1
 10801   002D86  C046  F014         	movff	?___flsub+2,___flmul@b+2
 10802   002D8A  C047  F015         	movff	?___flsub+3,___flmul@b+3
 10803   002D8E  ECE9  F028         	call	___flmul	;wreg free
 10804   002D92  C012  F114         	movff	?___flmul,_powf$3071
 10805   002D96  C013  F115         	movff	?___flmul+1,_powf$3071+1
 10806   002D9A  C014  F116         	movff	?___flmul+2,_powf$3071+2
 10807   002D9E  C015  F117         	movff	?___flmul+3,_powf$3071+3
 10808   002DA2  C114  F002         	movff	_powf$3071,___fladd@b
 10809   002DA6  C115  F003         	movff	_powf$3071+1,___fladd@b+1
 10810   002DAA  C116  F004         	movff	_powf$3071+2,___fladd@b+2
 10811   002DAE  C117  F005         	movff	_powf$3071+3,___fladd@b+3
 10812   002DB2  0E8C               	movlw	140
 10813   002DB4  6E16               	movwf	___flmul@a^0,c
 10814   002DB6  0EBE               	movlw	190
 10815   002DB8  6E17               	movwf	(___flmul@a+1)^0,c
 10816   002DBA  0EBF               	movlw	191
 10817   002DBC  6E18               	movwf	(___flmul@a+2)^0,c
 10818   002DBE  0E35               	movlw	53
 10819   002DC0  6E19               	movwf	(___flmul@a+3)^0,c
 10820   002DC2  C1B0  F012         	movff	powf@t,___flmul@b
 10821   002DC6  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10822   002DCA  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10823   002DCE  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10824   002DD2  ECE9  F028         	call	___flmul	;wreg free
 10825   002DD6  C012  F006         	movff	?___flmul,___fladd@a
 10826   002DDA  C013  F007         	movff	?___flmul+1,___fladd@a+1
 10827   002DDE  C014  F008         	movff	?___flmul+2,___fladd@a+2
 10828   002DE2  C015  F009         	movff	?___flmul+3,___fladd@a+3
 10829   002DE6  EC89  F026         	call	___fladd	;wreg free
 10830   002DEA  C002  F180         	movff	?___fladd,powf@v
 10831   002DEE  C003  F181         	movff	?___fladd+1,powf@v+1
 10832   002DF2  C004  F182         	movff	?___fladd+2,powf@v+2
 10833   002DF6  C005  F183         	movff	?___fladd+3,powf@v+3
 10834   002DFA  C17C  F002         	movff	powf@u,___fladd@b
 10835   002DFE  C17D  F003         	movff	powf@u+1,___fladd@b+1
 10836   002E02  C17E  F004         	movff	powf@u+2,___fladd@b+2
 10837   002E06  C17F  F005         	movff	powf@u+3,___fladd@b+3
 10838   002E0A  C180  F006         	movff	powf@v,___fladd@a
 10839   002E0E  C181  F007         	movff	powf@v+1,___fladd@a+1
 10840   002E12  C182  F008         	movff	powf@v+2,___fladd@a+2
 10841   002E16  C183  F009         	movff	powf@v+3,___fladd@a+3
 10842   002E1A  EC89  F026         	call	___fladd	;wreg free
 10843   002E1E  C002  F1B4         	movff	?___fladd,powf@z
 10844   002E22  C003  F1B5         	movff	?___fladd+1,powf@z+1
 10845   002E26  C004  F1B6         	movff	?___fladd+2,powf@z+2
 10846   002E2A  C005  F1B7         	movff	?___fladd+3,powf@z+3
 10847   002E2E  C17C  F048         	movff	powf@u,___flsub@a
 10848   002E32  C17D  F049         	movff	powf@u+1,___flsub@a+1
 10849   002E36  C17E  F04A         	movff	powf@u+2,___flsub@a+2
 10850   002E3A  C17F  F04B         	movff	powf@u+3,___flsub@a+3
 10851   002E3E  C1B4  F044         	movff	powf@z,___flsub@b
 10852   002E42  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10853   002E46  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10854   002E4A  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10855   002E4E  ECAF  F039         	call	___flsub	;wreg free
 10856   002E52  C044  F19C         	movff	?___flsub,_powf$3061
 10857   002E56  C045  F19D         	movff	?___flsub+1,_powf$3061+1
 10858   002E5A  C046  F19E         	movff	?___flsub+2,_powf$3061+2
 10859   002E5E  C047  F19F         	movff	?___flsub+3,_powf$3061+3
 10860   002E62  C180  F044         	movff	powf@v,___flsub@b
 10861   002E66  C181  F045         	movff	powf@v+1,___flsub@b+1
 10862   002E6A  C182  F046         	movff	powf@v+2,___flsub@b+2
 10863   002E6E  C183  F047         	movff	powf@v+3,___flsub@b+3
 10864   002E72  C19C  F048         	movff	_powf$3061,___flsub@a
 10865   002E76  C19D  F049         	movff	_powf$3061+1,___flsub@a+1
 10866   002E7A  C19E  F04A         	movff	_powf$3061+2,___flsub@a+2
 10867   002E7E  C19F  F04B         	movff	_powf$3061+3,___flsub@a+3
 10868   002E82  ECAF  F039         	call	___flsub	;wreg free
 10869   002E86  C044  F144         	movff	?___flsub,powf@w
 10870   002E8A  C045  F145         	movff	?___flsub+1,powf@w+1
 10871   002E8E  C046  F146         	movff	?___flsub+2,powf@w+2
 10872   002E92  C047  F147         	movff	?___flsub+3,powf@w+3
 10873   002E96  C1B4  F012         	movff	powf@z,___flmul@b
 10874   002E9A  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 10875   002E9E  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 10876   002EA2  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 10877   002EA6  C1B4  F016         	movff	powf@z,___flmul@a
 10878   002EAA  C1B5  F017         	movff	powf@z+1,___flmul@a+1
 10879   002EAE  C1B6  F018         	movff	powf@z+2,___flmul@a+2
 10880   002EB2  C1B7  F019         	movff	powf@z+3,___flmul@a+3
 10881   002EB6  ECE9  F028         	call	___flmul	;wreg free
 10882   002EBA  C012  F1B0         	movff	?___flmul,powf@t
 10883   002EBE  C013  F1B1         	movff	?___flmul+1,powf@t+1
 10884   002EC2  C014  F1B2         	movff	?___flmul+2,powf@t+2
 10885   002EC6  C015  F1B3         	movff	?___flmul+3,powf@t+3
 10886   002ECA  0E0E               	movlw	14
 10887   002ECC  6E06               	movwf	___fladd@a^0,c
 10888   002ECE  0EEA               	movlw	234
 10889   002ED0  6E07               	movwf	(___fladd@a+1)^0,c
 10890   002ED2  0EDD               	movlw	221
 10891   002ED4  6E08               	movwf	(___fladd@a+2)^0,c
 10892   002ED6  0EB5               	movlw	181
 10893   002ED8  6E09               	movwf	(___fladd@a+3)^0,c
 10894   002EDA  0E4C               	movlw	76
 10895   002EDC  6E16               	movwf	___flmul@a^0,c
 10896   002EDE  0EBB               	movlw	187
 10897   002EE0  6E17               	movwf	(___flmul@a+1)^0,c
 10898   002EE2  0E31               	movlw	49
 10899   002EE4  6E18               	movwf	(___flmul@a+2)^0,c
 10900   002EE6  0E33               	movlw	51
 10901   002EE8  6E19               	movwf	(___flmul@a+3)^0,c
 10902   002EEA  C1B0  F012         	movff	powf@t,___flmul@b
 10903   002EEE  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10904   002EF2  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10905   002EF6  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10906   002EFA  ECE9  F028         	call	___flmul	;wreg free
 10907   002EFE  C012  F002         	movff	?___flmul,___fladd@b
 10908   002F02  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10909   002F06  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10910   002F0A  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10911   002F0E  EC89  F026         	call	___fladd	;wreg free
 10912   002F12  C002  F148         	movff	?___fladd,_powf$3058
 10913   002F16  C003  F149         	movff	?___fladd+1,_powf$3058+1
 10914   002F1A  C004  F14A         	movff	?___fladd+2,_powf$3058+2
 10915   002F1E  C005  F14B         	movff	?___fladd+3,_powf$3058+3
 10916   002F22  0E55               	movlw	85
 10917   002F24  6E06               	movwf	___fladd@a^0,c
 10918   002F26  0EB3               	movlw	179
 10919   002F28  6E07               	movwf	(___fladd@a+1)^0,c
 10920   002F2A  0E8A               	movlw	138
 10921   002F2C  6E08               	movwf	(___fladd@a+2)^0,c
 10922   002F2E  0E38               	movlw	56
 10923   002F30  6E09               	movwf	(___fladd@a+3)^0,c
 10924   002F32  C1B0  F016         	movff	powf@t,___flmul@a
 10925   002F36  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10926   002F3A  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10927   002F3E  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10928   002F42  C148  F012         	movff	_powf$3058,___flmul@b
 10929   002F46  C149  F013         	movff	_powf$3058+1,___flmul@b+1
 10930   002F4A  C14A  F014         	movff	_powf$3058+2,___flmul@b+2
 10931   002F4E  C14B  F015         	movff	_powf$3058+3,___flmul@b+3
 10932   002F52  ECE9  F028         	call	___flmul	;wreg free
 10933   002F56  C012  F002         	movff	?___flmul,___fladd@b
 10934   002F5A  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10935   002F5E  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10936   002F62  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10937   002F66  EC89  F026         	call	___fladd	;wreg free
 10938   002F6A  C002  F15C         	movff	?___fladd,_powf$3059
 10939   002F6E  C003  F15D         	movff	?___fladd+1,_powf$3059+1
 10940   002F72  C004  F15E         	movff	?___fladd+2,_powf$3059+2
 10941   002F76  C005  F15F         	movff	?___fladd+3,_powf$3059+3
 10942   002F7A  0E61               	movlw	97
 10943   002F7C  6E06               	movwf	___fladd@a^0,c
 10944   002F7E  0E0B               	movlw	11
 10945   002F80  6E07               	movwf	(___fladd@a+1)^0,c
 10946   002F82  0E36               	movlw	54
 10947   002F84  6E08               	movwf	(___fladd@a+2)^0,c
 10948   002F86  0EBB               	movlw	187
 10949   002F88  6E09               	movwf	(___fladd@a+3)^0,c
 10950   002F8A  C1B0  F016         	movff	powf@t,___flmul@a
 10951   002F8E  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10952   002F92  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10953   002F96  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10954   002F9A  C15C  F012         	movff	_powf$3059,___flmul@b
 10955   002F9E  C15D  F013         	movff	_powf$3059+1,___flmul@b+1
 10956   002FA2  C15E  F014         	movff	_powf$3059+2,___flmul@b+2
 10957   002FA6  C15F  F015         	movff	_powf$3059+3,___flmul@b+3
 10958   002FAA  ECE9  F028         	call	___flmul	;wreg free
 10959   002FAE  C012  F002         	movff	?___flmul,___fladd@b
 10960   002FB2  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10961   002FB6  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10962   002FBA  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10963   002FBE  EC89  F026         	call	___fladd	;wreg free
 10964   002FC2  C002  F14C         	movff	?___fladd,_powf$3060
 10965   002FC6  C003  F14D         	movff	?___fladd+1,_powf$3060+1
 10966   002FCA  C004  F14E         	movff	?___fladd+2,_powf$3060+2
 10967   002FCE  C005  F14F         	movff	?___fladd+3,_powf$3060+3
 10968   002FD2  0EAB               	movlw	171
 10969   002FD4  6E06               	movwf	___fladd@a^0,c
 10970   002FD6  0EAA               	movlw	170
 10971   002FD8  6E07               	movwf	(___fladd@a+1)^0,c
 10972   002FDA  0E2A               	movlw	42
 10973   002FDC  6E08               	movwf	(___fladd@a+2)^0,c
 10974   002FDE  0E3E               	movlw	62
 10975   002FE0  6E09               	movwf	(___fladd@a+3)^0,c
 10976   002FE2  C1B0  F016         	movff	powf@t,___flmul@a
 10977   002FE6  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10978   002FEA  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10979   002FEE  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10980   002FF2  C14C  F012         	movff	_powf$3060,___flmul@b
 10981   002FF6  C14D  F013         	movff	_powf$3060+1,___flmul@b+1
 10982   002FFA  C14E  F014         	movff	_powf$3060+2,___flmul@b+2
 10983   002FFE  C14F  F015         	movff	_powf$3060+3,___flmul@b+3
 10984   003002  ECE9  F028         	call	___flmul	;wreg free
 10985   003006  C012  F002         	movff	?___flmul,___fladd@b
 10986   00300A  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10987   00300E  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10988   003012  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10989   003016  EC89  F026         	call	___fladd	;wreg free
 10990   00301A  C002  F138         	movff	?___fladd,_powf$3062
 10991   00301E  C003  F139         	movff	?___fladd+1,_powf$3062+1
 10992   003022  C004  F13A         	movff	?___fladd+2,_powf$3062+2
 10993   003026  C005  F13B         	movff	?___fladd+3,_powf$3062+3
 10994   00302A  C1B4  F044         	movff	powf@z,___flsub@b
 10995   00302E  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10996   003032  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10997   003036  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10998   00303A  C1B0  F016         	movff	powf@t,___flmul@a
 10999   00303E  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 11000   003042  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 11001   003046  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 11002   00304A  C138  F012         	movff	_powf$3062,___flmul@b
 11003   00304E  C139  F013         	movff	_powf$3062+1,___flmul@b+1
 11004   003052  C13A  F014         	movff	_powf$3062+2,___flmul@b+2
 11005   003056  C13B  F015         	movff	_powf$3062+3,___flmul@b+3
 11006   00305A  ECE9  F028         	call	___flmul	;wreg free
 11007   00305E  C012  F048         	movff	?___flmul,___flsub@a
 11008   003062  C013  F049         	movff	?___flmul+1,___flsub@a+1
 11009   003066  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 11010   00306A  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 11011   00306E  ECAF  F039         	call	___flsub	;wreg free
 11012   003072  C044  F18C         	movff	?___flsub,powf@t1
 11013   003076  C045  F18D         	movff	?___flsub+1,powf@t1+1
 11014   00307A  C046  F18E         	movff	?___flsub+2,powf@t1+2
 11015   00307E  C047  F18F         	movff	?___flsub+3,powf@t1+3
 11016   003082  0E00               	movlw	0
 11017   003084  6E06               	movwf	___fladd@a^0,c
 11018   003086  0E00               	movlw	0
 11019   003088  6E07               	movwf	(___fladd@a+1)^0,c
 11020   00308A  0E00               	movlw	0
 11021   00308C  6E08               	movwf	(___fladd@a+2)^0,c
 11022   00308E  0EC0               	movlw	192
 11023   003090  6E09               	movwf	(___fladd@a+3)^0,c
 11024   003092  C18C  F002         	movff	powf@t1,___fladd@b
 11025   003096  C18D  F003         	movff	powf@t1+1,___fladd@b+1
 11026   00309A  C18E  F004         	movff	powf@t1+2,___fladd@b+2
 11027   00309E  C18F  F005         	movff	powf@t1+3,___fladd@b+3
 11028   0030A2  EC89  F026         	call	___fladd	;wreg free
 11029   0030A6  C002  F02F         	movff	?___fladd,___fldiv@a
 11030   0030AA  C003  F030         	movff	?___fladd+1,___fldiv@a+1
 11031   0030AE  C004  F031         	movff	?___fladd+2,___fldiv@a+2
 11032   0030B2  C005  F032         	movff	?___fladd+3,___fldiv@a+3
 11033   0030B6  C18C  F016         	movff	powf@t1,___flmul@a
 11034   0030BA  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 11035   0030BE  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 11036   0030C2  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 11037   0030C6  C1B4  F012         	movff	powf@z,___flmul@b
 11038   0030CA  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 11039   0030CE  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 11040   0030D2  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 11041   0030D6  ECE9  F028         	call	___flmul	;wreg free
 11042   0030DA  C012  F02B         	movff	?___flmul,___fldiv@b
 11043   0030DE  C013  F02C         	movff	?___flmul+1,___fldiv@b+1
 11044   0030E2  C014  F02D         	movff	?___flmul+2,___fldiv@b+2
 11045   0030E6  C015  F02E         	movff	?___flmul+3,___fldiv@b+3
 11046   0030EA  ECED  F02C         	call	___fldiv	;wreg free
 11047   0030EE  C02B  F13C         	movff	?___fldiv,_powf$3066
 11048   0030F2  C02C  F13D         	movff	?___fldiv+1,_powf$3066+1
 11049   0030F6  C02D  F13E         	movff	?___fldiv+2,_powf$3066+2
 11050   0030FA  C02E  F13F         	movff	?___fldiv+3,_powf$3066+3
 11051   0030FE  C144  F006         	movff	powf@w,___fladd@a
 11052   003102  C145  F007         	movff	powf@w+1,___fladd@a+1
 11053   003106  C146  F008         	movff	powf@w+2,___fladd@a+2
 11054   00310A  C147  F009         	movff	powf@w+3,___fladd@a+3
 11055   00310E  C144  F016         	movff	powf@w,___flmul@a
 11056   003112  C145  F017         	movff	powf@w+1,___flmul@a+1
 11057   003116  C146  F018         	movff	powf@w+2,___flmul@a+2
 11058   00311A  C147  F019         	movff	powf@w+3,___flmul@a+3
 11059   00311E  C1B4  F012         	movff	powf@z,___flmul@b
 11060   003122  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 11061   003126  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 11062   00312A  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 11063   00312E  ECE9  F028         	call	___flmul	;wreg free
 11064   003132  C012  F002         	movff	?___flmul,___fladd@b
 11065   003136  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11066   00313A  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11067   00313E  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11068   003142  EC89  F026         	call	___fladd	;wreg free
 11069   003146  C002  F118         	movff	?___fladd,_powf$3072
 11070   00314A  C003  F119         	movff	?___fladd+1,_powf$3072+1
 11071   00314E  C004  F11A         	movff	?___fladd+2,_powf$3072+2
 11072   003152  C005  F11B         	movff	?___fladd+3,_powf$3072+3
 11073   003156  C13C  F044         	movff	_powf$3066,___flsub@b
 11074   00315A  C13D  F045         	movff	_powf$3066+1,___flsub@b+1
 11075   00315E  C13E  F046         	movff	_powf$3066+2,___flsub@b+2
 11076   003162  C13F  F047         	movff	_powf$3066+3,___flsub@b+3
 11077   003166  C118  F048         	movff	_powf$3072,___flsub@a
 11078   00316A  C119  F049         	movff	_powf$3072+1,___flsub@a+1
 11079   00316E  C11A  F04A         	movff	_powf$3072+2,___flsub@a+2
 11080   003172  C11B  F04B         	movff	_powf$3072+3,___flsub@a+3
 11081   003176  ECAF  F039         	call	___flsub	;wreg free
 11082   00317A  C044  F150         	movff	?___flsub,powf@r
 11083   00317E  C045  F151         	movff	?___flsub+1,powf@r+1
 11084   003182  C046  F152         	movff	?___flsub+2,powf@r+2
 11085   003186  C047  F153         	movff	?___flsub+3,powf@r+3
 11086   00318A  C1B4  F048         	movff	powf@z,___flsub@a
 11087   00318E  C1B5  F049         	movff	powf@z+1,___flsub@a+1
 11088   003192  C1B6  F04A         	movff	powf@z+2,___flsub@a+2
 11089   003196  C1B7  F04B         	movff	powf@z+3,___flsub@a+3
 11090   00319A  C150  F044         	movff	powf@r,___flsub@b
 11091   00319E  C151  F045         	movff	powf@r+1,___flsub@b+1
 11092   0031A2  C152  F046         	movff	powf@r+2,___flsub@b+2
 11093   0031A6  C153  F047         	movff	powf@r+3,___flsub@b+3
 11094   0031AA  ECAF  F039         	call	___flsub	;wreg free
 11095   0031AE  C044  F19C         	movff	?___flsub,_powf$3061
 11096   0031B2  C045  F19D         	movff	?___flsub+1,_powf$3061+1
 11097   0031B6  C046  F19E         	movff	?___flsub+2,_powf$3061+2
 11098   0031BA  C047  F19F         	movff	?___flsub+3,_powf$3061+3
 11099   0031BE  0E00               	movlw	0
 11100   0031C0  6E44               	movwf	___flsub@b^0,c
 11101   0031C2  0E00               	movlw	0
 11102   0031C4  6E45               	movwf	(___flsub@b+1)^0,c
 11103   0031C6  0E80               	movlw	128
 11104   0031C8  6E46               	movwf	(___flsub@b+2)^0,c
 11105   0031CA  0E3F               	movlw	63
 11106   0031CC  6E47               	movwf	(___flsub@b+3)^0,c
 11107   0031CE  C19C  F048         	movff	_powf$3061,___flsub@a
 11108   0031D2  C19D  F049         	movff	_powf$3061+1,___flsub@a+1
 11109   0031D6  C19E  F04A         	movff	_powf$3061+2,___flsub@a+2
 11110   0031DA  C19F  F04B         	movff	_powf$3061+3,___flsub@a+3
 11111   0031DE  ECAF  F039         	call	___flsub	;wreg free
 11112   0031E2  C044  F1B4         	movff	?___flsub,powf@z
 11113   0031E6  C045  F1B5         	movff	?___flsub+1,powf@z+1
 11114   0031EA  C046  F1B6         	movff	?___flsub+2,powf@z+2
 11115   0031EE  C047  F1B7         	movff	?___flsub+3,powf@z+3
 11116   0031F2  C1B4  F1A8         	movff	powf@z,powf@j
 11117   0031F6  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 11118   0031FA  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 11119   0031FE  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 11120   003202  C188  F068         	movff	powf@n,??_powf
 11121   003206  C189  F069         	movff	powf@n+1,??_powf+1
 11122   00320A  C18A  F06A         	movff	powf@n+2,??_powf+2
 11123   00320E  C18B  F06B         	movff	powf@n+3,??_powf+3
 11124   003212  0E17               	movlw	23
 11125   003214                     u7745:
 11126   003214  90D8               	bcf	status,0,c
 11127   003216  0100               	movlb	0	; () banked
 11128   003218  3768               	rlcf	??_powf& (0+255),f,b
 11129   00321A  3769               	rlcf	(??_powf+1)& (0+255),f,b
 11130   00321C  376A               	rlcf	(??_powf+2)& (0+255),f,b
 11131   00321E  376B               	rlcf	(??_powf+3)& (0+255),f,b
 11132   003220  2EE8               	decfsz	wreg,f,c
 11133   003222  EF0A  F019         	goto	u7745
 11134   003226  5168               	movf	??_powf& (0+255),w,b
 11135   003228  0101               	movlb	1	; () banked
 11136   00322A  27A8               	addwf	powf@j& (0+255),f,b
 11137   00322C  0100               	movlb	0	; () banked
 11138   00322E  5169               	movf	(??_powf+1)& (0+255),w,b
 11139   003230  0101               	movlb	1	; () banked
 11140   003232  23A9               	addwfc	(powf@j+1)& (0+255),f,b
 11141   003234  0100               	movlb	0	; () banked
 11142   003236  516A               	movf	(??_powf+2)& (0+255),w,b
 11143   003238  0101               	movlb	1	; () banked
 11144   00323A  23AA               	addwfc	(powf@j+2)& (0+255),f,b
 11145   00323C  0100               	movlb	0	; () banked
 11146   00323E  516B               	movf	(??_powf+3)& (0+255),w,b
 11147   003240  0101               	movlb	1	; () banked
 11148   003242  23AB               	addwfc	(powf@j+3)& (0+255),f,b
 11149   003244                     
 11150                           ; BSR set to: 1
 11151   003244  0E17               	movlw	23
 11152   003246  0100               	movlb	0	; () banked
 11153   003248  6F68               	movwf	??_powf& (0+255),b
 11154   00324A  C1A8  F069         	movff	powf@j,??_powf+1
 11155   00324E  C1A9  F06A         	movff	powf@j+1,??_powf+2
 11156   003252  C1AA  F06B         	movff	powf@j+2,??_powf+3
 11157   003256  C1AB  F06C         	movff	powf@j+3,??_powf+4
 11158   00325A                     u7755:
 11159   00325A  6768               	tstfsz	??_powf& (0+255),b
 11160   00325C  EF32  F019         	goto	u7756
 11161   003260  EF3A  F019         	goto	u7757
 11162   003264                     u7756:
 11163   003264  356C               	rlcf	(??_powf+4)& (0+255),w,b
 11164   003266  336C               	rrcf	(??_powf+4)& (0+255),f,b
 11165   003268  336B               	rrcf	(??_powf+3)& (0+255),f,b
 11166   00326A  336A               	rrcf	(??_powf+2)& (0+255),f,b
 11167   00326C  3369               	rrcf	(??_powf+1)& (0+255),f,b
 11168   00326E  2F68               	decfsz	??_powf& (0+255),f,b
 11169   003270  EF2D  F019         	goto	u7755
 11170   003274                     u7757:
 11171   003274  0100               	movlb	0	; () banked
 11172   003276  BF6C               	btfsc	(??_powf+4)& (0+255),7,b
 11173   003278  EF4A  F019         	goto	u7760
 11174   00327C  516C               	movf	(??_powf+4)& (0+255),w,b
 11175   00327E  116B               	iorwf	(??_powf+3)& (0+255),w,b
 11176   003280  116A               	iorwf	(??_powf+2)& (0+255),w,b
 11177   003282  E106               	bnz	u7761
 11178   003284  0569               	decf	(??_powf+1)& (0+255),w,b
 11179   003286  B0D8               	btfsc	status,0,c
 11180   003288  EF48  F019         	goto	u7761
 11181   00328C  EF4A  F019         	goto	u7760
 11182   003290                     u7761:
 11183   003290  EF62  F019         	goto	l1437
 11184   003294                     u7760:
 11185   003294                     
 11186                           ; BSR set to: 0
 11187   003294  C1B4  F02B         	movff	powf@z,scalbnf@x
 11188   003298  C1B5  F02C         	movff	powf@z+1,scalbnf@x+1
 11189   00329C  C1B6  F02D         	movff	powf@z+2,scalbnf@x+2
 11190   0032A0  C1B7  F02E         	movff	powf@z+3,scalbnf@x+3
 11191   0032A4  C188  F02F         	movff	powf@n,scalbnf@n
 11192   0032A8  C189  F030         	movff	powf@n+1,scalbnf@n+1
 11193   0032AC  ECBA  F02E         	call	_scalbnf	;wreg free
 11194   0032B0  C02B  F1B4         	movff	?_scalbnf,powf@z
 11195   0032B4  C02C  F1B5         	movff	?_scalbnf+1,powf@z+1
 11196   0032B8  C02D  F1B6         	movff	?_scalbnf+2,powf@z+2
 11197   0032BC  C02E  F1B7         	movff	?_scalbnf+3,powf@z+3
 11198   0032C0  EF6A  F019         	goto	l7458
 11199   0032C4                     l1437:
 11200                           
 11201                           ; BSR set to: 0
 11202   0032C4  C1A8  F1B4         	movff	powf@j,powf@z
 11203   0032C8  C1A9  F1B5         	movff	powf@j+1,powf@z+1
 11204   0032CC  C1AA  F1B6         	movff	powf@j+2,powf@z+2
 11205   0032D0  C1AB  F1B7         	movff	powf@j+3,powf@z+3
 11206   0032D4                     l7458:
 11207   0032D4  0101               	movlb	1	; () banked
 11208   0032D6  51B4               	movf	powf@z& (0+255),w,b
 11209   0032D8  11B5               	iorwf	(powf@z+1)& (0+255),w,b
 11210   0032DA  11B6               	iorwf	(powf@z+2)& (0+255),w,b
 11211   0032DC  11B7               	iorwf	(powf@z+3)& (0+255),w,b
 11212   0032DE  B4D8               	btfsc	status,2,c
 11213   0032E0  EF74  F019         	goto	u7771
 11214   0032E4  EF76  F019         	goto	u7770
 11215   0032E8                     u7771:
 11216   0032E8  EF77  F00A         	goto	l7144
 11217   0032EC                     u7770:
 11218   0032EC                     
 11219                           ; BSR set to: 1
 11220   0032EC  5164               	movf	powf@sn& (0+255),w,b
 11221   0032EE  1BB4               	xorwf	powf@z& (0+255),f,b
 11222   0032F0  5165               	movf	(powf@sn+1)& (0+255),w,b
 11223   0032F2  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
 11224   0032F4  5166               	movf	(powf@sn+2)& (0+255),w,b
 11225   0032F6  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
 11226   0032F8  5167               	movf	(powf@sn+3)& (0+255),w,b
 11227   0032FA  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
 11228   0032FC  EF77  F00A         	goto	l7144
 11229   003300                     l1371:
 11230   003300  0012               	return		;funcret
 11231   003302                     __end_of_powf:
 11232                           	callstack 0
 11233                           
 11234 ;; *************** function _sqrtf *****************
 11235 ;; Defined at:
 11236 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sqrtf.c"
 11237 ;; Parameters:    Size  Location     Type
 11238 ;;  x               4   17[COMRAM] float 
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;  ix              4   50[COMRAM] struct .
 11241 ;;  r               4   46[COMRAM] unsigned long 
 11242 ;;  m               4   42[COMRAM] long 
 11243 ;;  t               4   38[COMRAM] long 
 11244 ;;  q               4   34[COMRAM] long 
 11245 ;;  i               4   30[COMRAM] long 
 11246 ;;  s               4   26[COMRAM] long 
 11247 ;;  z               4    0        float 
 11248 ;; Return value:  Size  Location     Type
 11249 ;;                  4   17[COMRAM] float 
 11250 ;; Registers used:
 11251 ;;		wreg, status,2, status,0
 11252 ;; Tracked objects:
 11253 ;;		On entry : 0/0
 11254 ;;		On exit  : 0/0
 11255 ;;		Unchanged: 0/0
 11256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11257 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11258 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11259 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11260 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11261 ;;Total ram usage:       37 bytes
 11262 ;; Hardware stack levels used: 1
 11263 ;; Hardware stack levels required when called: 2
 11264 ;; This function calls:
 11265 ;;		Nothing
 11266 ;; This function is called by:
 11267 ;;		_decide_action
 11268 ;;		_powf
 11269 ;; This function uses a non-reentrant model
 11270 ;;
 11271                           
 11272                           	psect	text30
 11273   0055FC                     __ptext30:
 11274                           	callstack 0
 11275   0055FC                     _sqrtf:
 11276                           	callstack 27
 11277   0055FC  C012  F033         	movff	sqrtf@x,sqrtf@ix
 11278   005600  C013  F034         	movff	sqrtf@x+1,sqrtf@ix+1
 11279   005604  C014  F035         	movff	sqrtf@x+2,sqrtf@ix+2
 11280   005608  C015  F036         	movff	sqrtf@x+3,sqrtf@ix+3
 11281   00560C  0E00               	movlw	0
 11282   00560E  1433               	andwf	sqrtf@ix^0,w,c
 11283   005610  6E16               	movwf	??_sqrtf^0,c
 11284   005612  0E00               	movlw	0
 11285   005614  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11286   005616  6E17               	movwf	(??_sqrtf+1)^0,c
 11287   005618  0E80               	movlw	128
 11288   00561A  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11289   00561C  6E18               	movwf	(??_sqrtf+2)^0,c
 11290   00561E  0E7F               	movlw	127
 11291   005620  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11292   005622  6E19               	movwf	(??_sqrtf+3)^0,c
 11293   005624  0E80               	movlw	128
 11294   005626  1818               	xorwf	(??_sqrtf+2)^0,w,c
 11295   005628  E109               	bnz	u3841
 11296   00562A  0E7F               	movlw	127
 11297   00562C  1819               	xorwf	(??_sqrtf+3)^0,w,c
 11298   00562E  1016               	iorwf	??_sqrtf^0,w,c
 11299   005630  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11300   005632  A4D8               	btfss	status,2,c
 11301   005634  EF1E  F02B         	goto	u3841
 11302   005638  EF20  F02B         	goto	u3840
 11303   00563C                     u3841:
 11304   00563C  EF50  F02B         	goto	l4172
 11305   005640                     u3840:
 11306   005640  0EFF               	movlw	255
 11307   005642  1433               	andwf	sqrtf@ix^0,w,c
 11308   005644  6E16               	movwf	??_sqrtf^0,c
 11309   005646  0EFF               	movlw	255
 11310   005648  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11311   00564A  6E17               	movwf	(??_sqrtf+1)^0,c
 11312   00564C  0E7F               	movlw	127
 11313   00564E  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11314   005650  6E18               	movwf	(??_sqrtf+2)^0,c
 11315   005652  0E00               	movlw	0
 11316   005654  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11317   005656  6E19               	movwf	(??_sqrtf+3)^0,c
 11318   005658  5016               	movf	??_sqrtf^0,w,c
 11319   00565A  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11320   00565C  1018               	iorwf	(??_sqrtf+2)^0,w,c
 11321   00565E  1019               	iorwf	(??_sqrtf+3)^0,w,c
 11322   005660  A4D8               	btfss	status,2,c
 11323   005662  EF35  F02B         	goto	u3851
 11324   005666  EF37  F02B         	goto	u3850
 11325   00566A                     u3851:
 11326   00566A  EF3E  F02B         	goto	l4166
 11327   00566E                     u3850:
 11328   00566E  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 11329   005670  EF3E  F02B         	goto	u3860
 11330   005674  EF3C  F02B         	goto	u3861
 11331   005678                     u3861:
 11332   005678  EF46  F02B         	goto	l4168
 11333   00567C                     u3860:
 11334   00567C                     l4166:
 11335   00567C  0EFF               	movlw	255
 11336   00567E  1233               	iorwf	sqrtf@ix^0,f,c
 11337   005680  0EFF               	movlw	255
 11338   005682  1234               	iorwf	(sqrtf@ix+1)^0,f,c
 11339   005684  0E7F               	movlw	127
 11340   005686  1235               	iorwf	(sqrtf@ix+2)^0,f,c
 11341   005688  0E00               	movlw	0
 11342   00568A  1236               	iorwf	(sqrtf@ix+3)^0,f,c
 11343   00568C                     l4168:
 11344   00568C  C033  F012         	movff	sqrtf@ix,?_sqrtf
 11345   005690  C034  F013         	movff	sqrtf@ix+1,?_sqrtf+1
 11346   005694  C035  F014         	movff	sqrtf@ix+2,?_sqrtf+2
 11347   005698  C036  F015         	movff	sqrtf@ix+3,?_sqrtf+3
 11348   00569C  EFEC  F02C         	goto	l1463
 11349   0056A0                     l4172:
 11350   0056A0  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 11351   0056A2  EF5F  F02B         	goto	u3870
 11352   0056A6  5036               	movf	(sqrtf@ix+3)^0,w,c
 11353   0056A8  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 11354   0056AA  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 11355   0056AC  E106               	bnz	u3871
 11356   0056AE  0433               	decf	sqrtf@ix^0,w,c
 11357   0056B0  B0D8               	btfsc	status,0,c
 11358   0056B2  EF5D  F02B         	goto	u3871
 11359   0056B6  EF5F  F02B         	goto	u3870
 11360   0056BA                     u3871:
 11361   0056BA  EF96  F02B         	goto	l4188
 11362   0056BE                     u3870:
 11363   0056BE  0EFF               	movlw	255
 11364   0056C0  1433               	andwf	sqrtf@ix^0,w,c
 11365   0056C2  6E16               	movwf	??_sqrtf^0,c
 11366   0056C4  0EFF               	movlw	255
 11367   0056C6  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11368   0056C8  6E17               	movwf	(??_sqrtf+1)^0,c
 11369   0056CA  0EFF               	movlw	255
 11370   0056CC  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11371   0056CE  6E18               	movwf	(??_sqrtf+2)^0,c
 11372   0056D0  0E7F               	movlw	127
 11373   0056D2  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11374   0056D4  6E19               	movwf	(??_sqrtf+3)^0,c
 11375   0056D6  5016               	movf	??_sqrtf^0,w,c
 11376   0056D8  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11377   0056DA  1018               	iorwf	(??_sqrtf+2)^0,w,c
 11378   0056DC  1019               	iorwf	(??_sqrtf+3)^0,w,c
 11379   0056DE  A4D8               	btfss	status,2,c
 11380   0056E0  EF74  F02B         	goto	u3881
 11381   0056E4  EF76  F02B         	goto	u3880
 11382   0056E8                     u3881:
 11383   0056E8  EF80  F02B         	goto	l4180
 11384   0056EC                     u3880:
 11385   0056EC  0E00               	movlw	0
 11386   0056EE  6E12               	movwf	?_sqrtf^0,c
 11387   0056F0  0E00               	movlw	0
 11388   0056F2  6E13               	movwf	(?_sqrtf+1)^0,c
 11389   0056F4  0E00               	movlw	0
 11390   0056F6  6E14               	movwf	(?_sqrtf+2)^0,c
 11391   0056F8  0E00               	movlw	0
 11392   0056FA  6E15               	movwf	(?_sqrtf+3)^0,c
 11393   0056FC  EFEC  F02C         	goto	l1463
 11394   005700                     l4180:
 11395   005700  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 11396   005702  EF87  F02B         	goto	u3890
 11397   005706  EF85  F02B         	goto	u3891
 11398   00570A                     u3891:
 11399   00570A  EF96  F02B         	goto	l4188
 11400   00570E                     u3890:
 11401   00570E  0E00               	movlw	0
 11402   005710  0100               	movlb	0	; () banked
 11403   005712  6FEB               	movwf	(_errno+1)& (0+255),b
 11404   005714  0E21               	movlw	33
 11405   005716  6FEA               	movwf	_errno& (0+255),b
 11406   005718  0EFF               	movlw	255
 11407   00571A  6E33               	movwf	sqrtf@ix^0,c
 11408   00571C  0EFF               	movlw	255
 11409   00571E  6E34               	movwf	(sqrtf@ix+1)^0,c
 11410   005720  0EFF               	movlw	255
 11411   005722  6E35               	movwf	(sqrtf@ix+2)^0,c
 11412   005724  0E7F               	movlw	127
 11413   005726  6E36               	movwf	(sqrtf@ix+3)^0,c
 11414   005728  EF46  F02B         	goto	l4168
 11415   00572C                     l4188:
 11416   00572C  0E17               	movlw	23
 11417   00572E  6E16               	movwf	??_sqrtf^0,c
 11418   005730  C033  F017         	movff	sqrtf@ix,??_sqrtf+1
 11419   005734  C034  F018         	movff	sqrtf@ix+1,??_sqrtf+2
 11420   005738  C035  F019         	movff	sqrtf@ix+2,??_sqrtf+3
 11421   00573C  C036  F01A         	movff	sqrtf@ix+3,??_sqrtf+4
 11422   005740                     u3905:
 11423   005740  6616               	tstfsz	??_sqrtf^0,c
 11424   005742  EFA5  F02B         	goto	u3906
 11425   005746  EFAD  F02B         	goto	u3907
 11426   00574A                     u3906:
 11427   00574A  341A               	rlcf	(??_sqrtf+4)^0,w,c
 11428   00574C  321A               	rrcf	(??_sqrtf+4)^0,f,c
 11429   00574E  3219               	rrcf	(??_sqrtf+3)^0,f,c
 11430   005750  3218               	rrcf	(??_sqrtf+2)^0,f,c
 11431   005752  3217               	rrcf	(??_sqrtf+1)^0,f,c
 11432   005754  2E16               	decfsz	??_sqrtf^0,f,c
 11433   005756  EFA0  F02B         	goto	u3905
 11434   00575A                     u3907:
 11435   00575A  C017  F02B         	movff	??_sqrtf+1,sqrtf@m
 11436   00575E  C018  F02C         	movff	??_sqrtf+2,sqrtf@m+1
 11437   005762  C019  F02D         	movff	??_sqrtf+3,sqrtf@m+2
 11438   005766  C01A  F02E         	movff	??_sqrtf+4,sqrtf@m+3
 11439   00576A  502B               	movf	sqrtf@m^0,w,c
 11440   00576C  102C               	iorwf	(sqrtf@m+1)^0,w,c
 11441   00576E  102D               	iorwf	(sqrtf@m+2)^0,w,c
 11442   005770  102E               	iorwf	(sqrtf@m+3)^0,w,c
 11443   005772  A4D8               	btfss	status,2,c
 11444   005774  EFBE  F02B         	goto	u3911
 11445   005778  EFC0  F02B         	goto	u3910
 11446   00577C                     u3911:
 11447   00577C  EFF0  F02B         	goto	l1467
 11448   005780                     u3910:
 11449   005780  0E00               	movlw	0
 11450   005782  6E1F               	movwf	sqrtf@i^0,c
 11451   005784  0E00               	movlw	0
 11452   005786  6E20               	movwf	(sqrtf@i+1)^0,c
 11453   005788  0E00               	movlw	0
 11454   00578A  6E21               	movwf	(sqrtf@i+2)^0,c
 11455   00578C  0E00               	movlw	0
 11456   00578E  6E22               	movwf	(sqrtf@i+3)^0,c
 11457   005790  EFD5  F02B         	goto	l4196
 11458   005794                     l4192:
 11459   005794  90D8               	bcf	status,0,c
 11460   005796  3633               	rlcf	sqrtf@ix^0,f,c
 11461   005798  3634               	rlcf	(sqrtf@ix+1)^0,f,c
 11462   00579A  3635               	rlcf	(sqrtf@ix+2)^0,f,c
 11463   00579C  3636               	rlcf	(sqrtf@ix+3)^0,f,c
 11464   00579E  0E01               	movlw	1
 11465   0057A0  261F               	addwf	sqrtf@i^0,f,c
 11466   0057A2  0E00               	movlw	0
 11467   0057A4  2220               	addwfc	(sqrtf@i+1)^0,f,c
 11468   0057A6  2221               	addwfc	(sqrtf@i+2)^0,f,c
 11469   0057A8  2222               	addwfc	(sqrtf@i+3)^0,f,c
 11470   0057AA                     l4196:
 11471   0057AA  AE35               	btfss	(sqrtf@ix+2)^0,7,c
 11472   0057AC  EFDA  F02B         	goto	u3921
 11473   0057B0  EFDC  F02B         	goto	u3920
 11474   0057B4                     u3921:
 11475   0057B4  EFCA  F02B         	goto	l4192
 11476   0057B8                     u3920:
 11477   0057B8  0EFF               	movlw	255
 11478   0057BA  241F               	addwf	sqrtf@i^0,w,c
 11479   0057BC  6E16               	movwf	??_sqrtf^0,c
 11480   0057BE  0EFF               	movlw	255
 11481   0057C0  2020               	addwfc	(sqrtf@i+1)^0,w,c
 11482   0057C2  6E17               	movwf	(??_sqrtf+1)^0,c
 11483   0057C4  0EFF               	movlw	255
 11484   0057C6  2021               	addwfc	(sqrtf@i+2)^0,w,c
 11485   0057C8  6E18               	movwf	(??_sqrtf+2)^0,c
 11486   0057CA  0EFF               	movlw	255
 11487   0057CC  2022               	addwfc	(sqrtf@i+3)^0,w,c
 11488   0057CE  6E19               	movwf	(??_sqrtf+3)^0,c
 11489   0057D0  5016               	movf	??_sqrtf^0,w,c
 11490   0057D2  5E2B               	subwf	sqrtf@m^0,f,c
 11491   0057D4  5017               	movf	(??_sqrtf+1)^0,w,c
 11492   0057D6  5A2C               	subwfb	(sqrtf@m+1)^0,f,c
 11493   0057D8  5018               	movf	(??_sqrtf+2)^0,w,c
 11494   0057DA  5A2D               	subwfb	(sqrtf@m+2)^0,f,c
 11495   0057DC  5019               	movf	(??_sqrtf+3)^0,w,c
 11496   0057DE  5A2E               	subwfb	(sqrtf@m+3)^0,f,c
 11497   0057E0                     l1467:
 11498   0057E0  0E81               	movlw	129
 11499   0057E2  262B               	addwf	sqrtf@m^0,f,c
 11500   0057E4  0EFF               	movlw	255
 11501   0057E6  222C               	addwfc	(sqrtf@m+1)^0,f,c
 11502   0057E8  0EFF               	movlw	255
 11503   0057EA  222D               	addwfc	(sqrtf@m+2)^0,f,c
 11504   0057EC  0EFF               	movlw	255
 11505   0057EE  222E               	addwfc	(sqrtf@m+3)^0,f,c
 11506   0057F0  0EFF               	movlw	255
 11507   0057F2  1433               	andwf	sqrtf@ix^0,w,c
 11508   0057F4  6E16               	movwf	??_sqrtf^0,c
 11509   0057F6  0EFF               	movlw	255
 11510   0057F8  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11511   0057FA  6E17               	movwf	(??_sqrtf+1)^0,c
 11512   0057FC  0E7F               	movlw	127
 11513   0057FE  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11514   005800  6E18               	movwf	(??_sqrtf+2)^0,c
 11515   005802  0E00               	movlw	0
 11516   005804  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11517   005806  6E19               	movwf	(??_sqrtf+3)^0,c
 11518   005808  0E00               	movlw	0
 11519   00580A  1016               	iorwf	??_sqrtf^0,w,c
 11520   00580C  6E33               	movwf	sqrtf@ix^0,c
 11521   00580E  0E00               	movlw	0
 11522   005810  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11523   005812  6E34               	movwf	(sqrtf@ix+1)^0,c
 11524   005814  0E80               	movlw	128
 11525   005816  1018               	iorwf	(??_sqrtf+2)^0,w,c
 11526   005818  6E35               	movwf	(sqrtf@ix+2)^0,c
 11527   00581A  0E00               	movlw	0
 11528   00581C  1019               	iorwf	(??_sqrtf+3)^0,w,c
 11529   00581E  6E36               	movwf	(sqrtf@ix+3)^0,c
 11530   005820  A02B               	btfss	sqrtf@m^0,0,c
 11531   005822  EF15  F02C         	goto	u3931
 11532   005826  EF17  F02C         	goto	u3930
 11533   00582A                     u3931:
 11534   00582A  EF1F  F02C         	goto	l1471
 11535   00582E                     u3930:
 11536   00582E  5033               	movf	sqrtf@ix^0,w,c
 11537   005830  2633               	addwf	sqrtf@ix^0,f,c
 11538   005832  5034               	movf	(sqrtf@ix+1)^0,w,c
 11539   005834  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11540   005836  5035               	movf	(sqrtf@ix+2)^0,w,c
 11541   005838  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11542   00583A  5036               	movf	(sqrtf@ix+3)^0,w,c
 11543   00583C  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11544   00583E                     l1471:
 11545   00583E  342E               	rlcf	(sqrtf@m+3)^0,w,c
 11546   005840  322E               	rrcf	(sqrtf@m+3)^0,f,c
 11547   005842  322D               	rrcf	(sqrtf@m+2)^0,f,c
 11548   005844  322C               	rrcf	(sqrtf@m+1)^0,f,c
 11549   005846  322B               	rrcf	sqrtf@m^0,f,c
 11550   005848  5033               	movf	sqrtf@ix^0,w,c
 11551   00584A  2633               	addwf	sqrtf@ix^0,f,c
 11552   00584C  5034               	movf	(sqrtf@ix+1)^0,w,c
 11553   00584E  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11554   005850  5035               	movf	(sqrtf@ix+2)^0,w,c
 11555   005852  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11556   005854  5036               	movf	(sqrtf@ix+3)^0,w,c
 11557   005856  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11558   005858  0E00               	movlw	0
 11559   00585A  6E1B               	movwf	sqrtf@s^0,c
 11560   00585C  0E00               	movlw	0
 11561   00585E  6E1C               	movwf	(sqrtf@s+1)^0,c
 11562   005860  0E00               	movlw	0
 11563   005862  6E1D               	movwf	(sqrtf@s+2)^0,c
 11564   005864  0E00               	movlw	0
 11565   005866  6E1E               	movwf	(sqrtf@s+3)^0,c
 11566   005868  C01B  F023         	movff	sqrtf@s,sqrtf@q
 11567   00586C  C01C  F024         	movff	sqrtf@s+1,sqrtf@q+1
 11568   005870  C01D  F025         	movff	sqrtf@s+2,sqrtf@q+2
 11569   005874  C01E  F026         	movff	sqrtf@s+3,sqrtf@q+3
 11570   005878  0E00               	movlw	0
 11571   00587A  6E2F               	movwf	sqrtf@r^0,c
 11572   00587C  0E00               	movlw	0
 11573   00587E  6E30               	movwf	(sqrtf@r+1)^0,c
 11574   005880  0E00               	movlw	0
 11575   005882  6E31               	movwf	(sqrtf@r+2)^0,c
 11576   005884  0E01               	movlw	1
 11577   005886  6E32               	movwf	(sqrtf@r+3)^0,c
 11578   005888  EF8E  F02C         	goto	l4214
 11579   00588C                     l4208:
 11580   00588C  501B               	movf	sqrtf@s^0,w,c
 11581   00588E  242F               	addwf	sqrtf@r^0,w,c
 11582   005890  6E27               	movwf	sqrtf@t^0,c
 11583   005892  501C               	movf	(sqrtf@s+1)^0,w,c
 11584   005894  2030               	addwfc	(sqrtf@r+1)^0,w,c
 11585   005896  6E28               	movwf	(sqrtf@t+1)^0,c
 11586   005898  501D               	movf	(sqrtf@s+2)^0,w,c
 11587   00589A  2031               	addwfc	(sqrtf@r+2)^0,w,c
 11588   00589C  6E29               	movwf	(sqrtf@t+2)^0,c
 11589   00589E  501E               	movf	(sqrtf@s+3)^0,w,c
 11590   0058A0  2032               	addwfc	(sqrtf@r+3)^0,w,c
 11591   0058A2  6E2A               	movwf	(sqrtf@t+3)^0,c
 11592   0058A4  5027               	movf	sqrtf@t^0,w,c
 11593   0058A6  5C33               	subwf	sqrtf@ix^0,w,c
 11594   0058A8  5028               	movf	(sqrtf@t+1)^0,w,c
 11595   0058AA  5834               	subwfb	(sqrtf@ix+1)^0,w,c
 11596   0058AC  5029               	movf	(sqrtf@t+2)^0,w,c
 11597   0058AE  5835               	subwfb	(sqrtf@ix+2)^0,w,c
 11598   0058B0  5036               	movf	(sqrtf@ix+3)^0,w,c
 11599   0058B2  0A80               	xorlw	128
 11600   0058B4  6E16               	movwf	??_sqrtf^0,c
 11601   0058B6  502A               	movf	(sqrtf@t+3)^0,w,c
 11602   0058B8  0A80               	xorlw	128
 11603   0058BA  5816               	subwfb	??_sqrtf^0,w,c
 11604   0058BC  A0D8               	btfss	status,0,c
 11605   0058BE  EF63  F02C         	goto	u3941
 11606   0058C2  EF65  F02C         	goto	u3940
 11607   0058C6                     u3941:
 11608   0058C6  EF81  F02C         	goto	l1474
 11609   0058CA                     u3940:
 11610   0058CA  5027               	movf	sqrtf@t^0,w,c
 11611   0058CC  242F               	addwf	sqrtf@r^0,w,c
 11612   0058CE  6E1B               	movwf	sqrtf@s^0,c
 11613   0058D0  5028               	movf	(sqrtf@t+1)^0,w,c
 11614   0058D2  2030               	addwfc	(sqrtf@r+1)^0,w,c
 11615   0058D4  6E1C               	movwf	(sqrtf@s+1)^0,c
 11616   0058D6  5029               	movf	(sqrtf@t+2)^0,w,c
 11617   0058D8  2031               	addwfc	(sqrtf@r+2)^0,w,c
 11618   0058DA  6E1D               	movwf	(sqrtf@s+2)^0,c
 11619   0058DC  502A               	movf	(sqrtf@t+3)^0,w,c
 11620   0058DE  2032               	addwfc	(sqrtf@r+3)^0,w,c
 11621   0058E0  6E1E               	movwf	(sqrtf@s+3)^0,c
 11622   0058E2  5027               	movf	sqrtf@t^0,w,c
 11623   0058E4  5E33               	subwf	sqrtf@ix^0,f,c
 11624   0058E6  5028               	movf	(sqrtf@t+1)^0,w,c
 11625   0058E8  5A34               	subwfb	(sqrtf@ix+1)^0,f,c
 11626   0058EA  5029               	movf	(sqrtf@t+2)^0,w,c
 11627   0058EC  5A35               	subwfb	(sqrtf@ix+2)^0,f,c
 11628   0058EE  502A               	movf	(sqrtf@t+3)^0,w,c
 11629   0058F0  5A36               	subwfb	(sqrtf@ix+3)^0,f,c
 11630   0058F2  502F               	movf	sqrtf@r^0,w,c
 11631   0058F4  2623               	addwf	sqrtf@q^0,f,c
 11632   0058F6  5030               	movf	(sqrtf@r+1)^0,w,c
 11633   0058F8  2224               	addwfc	(sqrtf@q+1)^0,f,c
 11634   0058FA  5031               	movf	(sqrtf@r+2)^0,w,c
 11635   0058FC  2225               	addwfc	(sqrtf@q+2)^0,f,c
 11636   0058FE  5032               	movf	(sqrtf@r+3)^0,w,c
 11637   005900  2226               	addwfc	(sqrtf@q+3)^0,f,c
 11638   005902                     l1474:
 11639   005902  5033               	movf	sqrtf@ix^0,w,c
 11640   005904  2633               	addwf	sqrtf@ix^0,f,c
 11641   005906  5034               	movf	(sqrtf@ix+1)^0,w,c
 11642   005908  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11643   00590A  5035               	movf	(sqrtf@ix+2)^0,w,c
 11644   00590C  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11645   00590E  5036               	movf	(sqrtf@ix+3)^0,w,c
 11646   005910  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11647   005912  90D8               	bcf	status,0,c
 11648   005914  3232               	rrcf	(sqrtf@r+3)^0,f,c
 11649   005916  3231               	rrcf	(sqrtf@r+2)^0,f,c
 11650   005918  3230               	rrcf	(sqrtf@r+1)^0,f,c
 11651   00591A  322F               	rrcf	sqrtf@r^0,f,c
 11652   00591C                     l4214:
 11653   00591C  502F               	movf	sqrtf@r^0,w,c
 11654   00591E  1030               	iorwf	(sqrtf@r+1)^0,w,c
 11655   005920  1031               	iorwf	(sqrtf@r+2)^0,w,c
 11656   005922  1032               	iorwf	(sqrtf@r+3)^0,w,c
 11657   005924  A4D8               	btfss	status,2,c
 11658   005926  EF97  F02C         	goto	u3951
 11659   00592A  EF99  F02C         	goto	u3950
 11660   00592E                     u3951:
 11661   00592E  EF46  F02C         	goto	l4208
 11662   005932                     u3950:
 11663   005932  5033               	movf	sqrtf@ix^0,w,c
 11664   005934  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 11665   005936  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 11666   005938  1036               	iorwf	(sqrtf@ix+3)^0,w,c
 11667   00593A  B4D8               	btfsc	status,2,c
 11668   00593C  EFA2  F02C         	goto	u3961
 11669   005940  EFA4  F02C         	goto	u3960
 11670   005944                     u3961:
 11671   005944  EFB8  F02C         	goto	l1476
 11672   005948                     u3960:
 11673   005948  0E01               	movlw	1
 11674   00594A  1423               	andwf	sqrtf@q^0,w,c
 11675   00594C  6E16               	movwf	??_sqrtf^0,c
 11676   00594E  0E00               	movlw	0
 11677   005950  1424               	andwf	(sqrtf@q+1)^0,w,c
 11678   005952  6E17               	movwf	(??_sqrtf+1)^0,c
 11679   005954  0E00               	movlw	0
 11680   005956  1425               	andwf	(sqrtf@q+2)^0,w,c
 11681   005958  6E18               	movwf	(??_sqrtf+2)^0,c
 11682   00595A  0E00               	movlw	0
 11683   00595C  1426               	andwf	(sqrtf@q+3)^0,w,c
 11684   00595E  6E19               	movwf	(??_sqrtf+3)^0,c
 11685   005960  5016               	movf	??_sqrtf^0,w,c
 11686   005962  2623               	addwf	sqrtf@q^0,f,c
 11687   005964  5017               	movf	(??_sqrtf+1)^0,w,c
 11688   005966  2224               	addwfc	(sqrtf@q+1)^0,f,c
 11689   005968  5018               	movf	(??_sqrtf+2)^0,w,c
 11690   00596A  2225               	addwfc	(sqrtf@q+2)^0,f,c
 11691   00596C  5019               	movf	(??_sqrtf+3)^0,w,c
 11692   00596E  2226               	addwfc	(sqrtf@q+3)^0,f,c
 11693   005970                     l1476:
 11694   005970  C023  F016         	movff	sqrtf@q,??_sqrtf
 11695   005974  C024  F017         	movff	sqrtf@q+1,??_sqrtf+1
 11696   005978  C025  F018         	movff	sqrtf@q+2,??_sqrtf+2
 11697   00597C  C026  F019         	movff	sqrtf@q+3,??_sqrtf+3
 11698   005980  3419               	rlcf	(??_sqrtf+3)^0,w,c
 11699   005982  3219               	rrcf	(??_sqrtf+3)^0,f,c
 11700   005984  3218               	rrcf	(??_sqrtf+2)^0,f,c
 11701   005986  3217               	rrcf	(??_sqrtf+1)^0,f,c
 11702   005988  3216               	rrcf	??_sqrtf^0,f,c
 11703   00598A  0E00               	movlw	0
 11704   00598C  2416               	addwf	??_sqrtf^0,w,c
 11705   00598E  6E33               	movwf	sqrtf@ix^0,c
 11706   005990  0E00               	movlw	0
 11707   005992  2017               	addwfc	(??_sqrtf+1)^0,w,c
 11708   005994  6E34               	movwf	(sqrtf@ix+1)^0,c
 11709   005996  0E00               	movlw	0
 11710   005998  2018               	addwfc	(??_sqrtf+2)^0,w,c
 11711   00599A  6E35               	movwf	(sqrtf@ix+2)^0,c
 11712   00599C  0E3F               	movlw	63
 11713   00599E  2019               	addwfc	(??_sqrtf+3)^0,w,c
 11714   0059A0  6E36               	movwf	(sqrtf@ix+3)^0,c
 11715   0059A2  C02B  F016         	movff	sqrtf@m,??_sqrtf
 11716   0059A6  C02C  F017         	movff	sqrtf@m+1,??_sqrtf+1
 11717   0059AA  C02D  F018         	movff	sqrtf@m+2,??_sqrtf+2
 11718   0059AE  C02E  F019         	movff	sqrtf@m+3,??_sqrtf+3
 11719   0059B2  0E17               	movlw	23
 11720   0059B4                     u3975:
 11721   0059B4  90D8               	bcf	status,0,c
 11722   0059B6  3616               	rlcf	??_sqrtf^0,f,c
 11723   0059B8  3617               	rlcf	(??_sqrtf+1)^0,f,c
 11724   0059BA  3618               	rlcf	(??_sqrtf+2)^0,f,c
 11725   0059BC  3619               	rlcf	(??_sqrtf+3)^0,f,c
 11726   0059BE  2EE8               	decfsz	wreg,f,c
 11727   0059C0  EFDA  F02C         	goto	u3975
 11728   0059C4  5016               	movf	??_sqrtf^0,w,c
 11729   0059C6  2633               	addwf	sqrtf@ix^0,f,c
 11730   0059C8  5017               	movf	(??_sqrtf+1)^0,w,c
 11731   0059CA  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11732   0059CC  5018               	movf	(??_sqrtf+2)^0,w,c
 11733   0059CE  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11734   0059D0  5019               	movf	(??_sqrtf+3)^0,w,c
 11735   0059D2  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11736   0059D4  EF46  F02B         	goto	l4168
 11737   0059D8                     l1463:
 11738   0059D8  0012               	return		;funcret
 11739   0059DA                     __end_of_sqrtf:
 11740                           	callstack 0
 11741                           
 11742 ;; *************** function _scalbnf *****************
 11743 ;; Defined at:
 11744 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\scalbnf.c"
 11745 ;; Parameters:    Size  Location     Type
 11746 ;;  x               4   42[COMRAM] float 
 11747 ;;  n               2   46[COMRAM] int 
 11748 ;; Auto vars:     Size  Location     Type
 11749 ;;  y               4   56[COMRAM] float 
 11750 ;;  u               4   52[COMRAM] struct .
 11751 ;; Return value:  Size  Location     Type
 11752 ;;                  4   42[COMRAM] float 
 11753 ;; Registers used:
 11754 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11755 ;; Tracked objects:
 11756 ;;		On entry : 0/0
 11757 ;;		On exit  : 0/0
 11758 ;;		Unchanged: 0/0
 11759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11760 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11761 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11762 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11763 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11764 ;;Total ram usage:       18 bytes
 11765 ;; Hardware stack levels used: 1
 11766 ;; Hardware stack levels required when called: 3
 11767 ;; This function calls:
 11768 ;;		___flmul
 11769 ;; This function is called by:
 11770 ;;		_powf
 11771 ;; This function uses a non-reentrant model
 11772 ;;
 11773                           
 11774                           	psect	text31
 11775   005D74                     __ptext31:
 11776                           	callstack 0
 11777   005D74                     _scalbnf:
 11778                           	callstack 25
 11779   005D74  C02B  F039         	movff	scalbnf@x,scalbnf@y
 11780   005D78  C02C  F03A         	movff	scalbnf@x+1,scalbnf@y+1
 11781   005D7C  C02D  F03B         	movff	scalbnf@x+2,scalbnf@y+2
 11782   005D80  C02E  F03C         	movff	scalbnf@x+3,scalbnf@y+3
 11783   005D84  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11784   005D86  EFCE  F02E         	goto	u4491
 11785   005D8A  5030               	movf	(scalbnf@n+1)^0,w,c
 11786   005D8C  E109               	bnz	u4490
 11787   005D8E  0E80               	movlw	128
 11788   005D90  5C2F               	subwf	scalbnf@n^0,w,c
 11789   005D92  A0D8               	btfss	status,0,c
 11790   005D94  EFCE  F02E         	goto	u4491
 11791   005D98  EFD0  F02E         	goto	u4490
 11792   005D9C                     u4491:
 11793   005D9C  EF2E  F02F         	goto	l4528
 11794   005DA0                     u4490:
 11795   005DA0  C039  F012         	movff	scalbnf@y,___flmul@b
 11796   005DA4  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11797   005DA8  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11798   005DAC  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11799   005DB0  0E00               	movlw	0
 11800   005DB2  6E16               	movwf	___flmul@a^0,c
 11801   005DB4  0E00               	movlw	0
 11802   005DB6  6E17               	movwf	(___flmul@a+1)^0,c
 11803   005DB8  0E00               	movlw	0
 11804   005DBA  6E18               	movwf	(___flmul@a+2)^0,c
 11805   005DBC  0E7F               	movlw	127
 11806   005DBE  6E19               	movwf	(___flmul@a+3)^0,c
 11807   005DC0  ECE9  F028         	call	___flmul	;wreg free
 11808   005DC4  C012  F039         	movff	?___flmul,scalbnf@y
 11809   005DC8  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11810   005DCC  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11811   005DD0  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11812   005DD4  0E81               	movlw	129
 11813   005DD6  262F               	addwf	scalbnf@n^0,f,c
 11814   005DD8  0EFF               	movlw	255
 11815   005DDA  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11816   005DDC  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11817   005DDE  EFFA  F02E         	goto	u4501
 11818   005DE2  5030               	movf	(scalbnf@n+1)^0,w,c
 11819   005DE4  E109               	bnz	u4500
 11820   005DE6  0E80               	movlw	128
 11821   005DE8  5C2F               	subwf	scalbnf@n^0,w,c
 11822   005DEA  A0D8               	btfss	status,0,c
 11823   005DEC  EFFA  F02E         	goto	u4501
 11824   005DF0  EFFC  F02E         	goto	u4500
 11825   005DF4                     u4501:
 11826   005DF4  EF98  F02F         	goto	l4544
 11827   005DF8                     u4500:
 11828   005DF8  C039  F012         	movff	scalbnf@y,___flmul@b
 11829   005DFC  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11830   005E00  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11831   005E04  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11832   005E08  0E00               	movlw	0
 11833   005E0A  6E16               	movwf	___flmul@a^0,c
 11834   005E0C  0E00               	movlw	0
 11835   005E0E  6E17               	movwf	(___flmul@a+1)^0,c
 11836   005E10  0E00               	movlw	0
 11837   005E12  6E18               	movwf	(___flmul@a+2)^0,c
 11838   005E14  0E7F               	movlw	127
 11839   005E16  6E19               	movwf	(___flmul@a+3)^0,c
 11840   005E18  ECE9  F028         	call	___flmul	;wreg free
 11841   005E1C  C012  F039         	movff	?___flmul,scalbnf@y
 11842   005E20  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11843   005E24  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11844   005E28  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11845   005E2C  0E81               	movlw	129
 11846   005E2E  262F               	addwf	scalbnf@n^0,f,c
 11847   005E30  0EFF               	movlw	255
 11848   005E32  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11849   005E34  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11850   005E36  EF26  F02F         	goto	u4511
 11851   005E3A  5030               	movf	(scalbnf@n+1)^0,w,c
 11852   005E3C  E109               	bnz	u4510
 11853   005E3E  0E80               	movlw	128
 11854   005E40  5C2F               	subwf	scalbnf@n^0,w,c
 11855   005E42  A0D8               	btfss	status,0,c
 11856   005E44  EF26  F02F         	goto	u4511
 11857   005E48  EF28  F02F         	goto	u4510
 11858   005E4C                     u4511:
 11859   005E4C  EF98  F02F         	goto	l4544
 11860   005E50                     u4510:
 11861   005E50  0E00               	movlw	0
 11862   005E52  6E30               	movwf	(scalbnf@n+1)^0,c
 11863   005E54  0E7F               	movlw	127
 11864   005E56  6E2F               	movwf	scalbnf@n^0,c
 11865   005E58  EF98  F02F         	goto	l4544
 11866   005E5C                     l4528:
 11867   005E5C  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11868   005E5E  EF3A  F02F         	goto	u4521
 11869   005E62  0E82               	movlw	130
 11870   005E64  5C2F               	subwf	scalbnf@n^0,w,c
 11871   005E66  0EFF               	movlw	255
 11872   005E68  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11873   005E6A  B0D8               	btfsc	status,0,c
 11874   005E6C  EF3A  F02F         	goto	u4521
 11875   005E70  EF3C  F02F         	goto	u4520
 11876   005E74                     u4521:
 11877   005E74  EF98  F02F         	goto	l4544
 11878   005E78                     u4520:
 11879   005E78  C039  F012         	movff	scalbnf@y,___flmul@b
 11880   005E7C  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11881   005E80  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11882   005E84  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11883   005E88  0E00               	movlw	0
 11884   005E8A  6E16               	movwf	___flmul@a^0,c
 11885   005E8C  0E00               	movlw	0
 11886   005E8E  6E17               	movwf	(___flmul@a+1)^0,c
 11887   005E90  0E80               	movlw	128
 11888   005E92  6E18               	movwf	(___flmul@a+2)^0,c
 11889   005E94  0E0C               	movlw	12
 11890   005E96  6E19               	movwf	(___flmul@a+3)^0,c
 11891   005E98  ECE9  F028         	call	___flmul	;wreg free
 11892   005E9C  C012  F039         	movff	?___flmul,scalbnf@y
 11893   005EA0  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11894   005EA4  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11895   005EA8  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11896   005EAC  0E66               	movlw	102
 11897   005EAE  262F               	addwf	scalbnf@n^0,f,c
 11898   005EB0  0E00               	movlw	0
 11899   005EB2  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11900   005EB4  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11901   005EB6  EF66  F02F         	goto	u4531
 11902   005EBA  0E82               	movlw	130
 11903   005EBC  5C2F               	subwf	scalbnf@n^0,w,c
 11904   005EBE  0EFF               	movlw	255
 11905   005EC0  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11906   005EC2  B0D8               	btfsc	status,0,c
 11907   005EC4  EF66  F02F         	goto	u4531
 11908   005EC8  EF68  F02F         	goto	u4530
 11909   005ECC                     u4531:
 11910   005ECC  EF98  F02F         	goto	l4544
 11911   005ED0                     u4530:
 11912   005ED0  C039  F012         	movff	scalbnf@y,___flmul@b
 11913   005ED4  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11914   005ED8  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11915   005EDC  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11916   005EE0  0E00               	movlw	0
 11917   005EE2  6E16               	movwf	___flmul@a^0,c
 11918   005EE4  0E00               	movlw	0
 11919   005EE6  6E17               	movwf	(___flmul@a+1)^0,c
 11920   005EE8  0E80               	movlw	128
 11921   005EEA  6E18               	movwf	(___flmul@a+2)^0,c
 11922   005EEC  0E0C               	movlw	12
 11923   005EEE  6E19               	movwf	(___flmul@a+3)^0,c
 11924   005EF0  ECE9  F028         	call	___flmul	;wreg free
 11925   005EF4  C012  F039         	movff	?___flmul,scalbnf@y
 11926   005EF8  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11927   005EFC  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11928   005F00  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11929   005F04  0E66               	movlw	102
 11930   005F06  262F               	addwf	scalbnf@n^0,f,c
 11931   005F08  0E00               	movlw	0
 11932   005F0A  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11933   005F0C  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11934   005F0E  EF92  F02F         	goto	u4541
 11935   005F12  0E82               	movlw	130
 11936   005F14  5C2F               	subwf	scalbnf@n^0,w,c
 11937   005F16  0EFF               	movlw	255
 11938   005F18  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11939   005F1A  B0D8               	btfsc	status,0,c
 11940   005F1C  EF92  F02F         	goto	u4541
 11941   005F20  EF94  F02F         	goto	u4540
 11942   005F24                     u4541:
 11943   005F24  EF98  F02F         	goto	l4544
 11944   005F28                     u4540:
 11945   005F28  0EFF               	movlw	255
 11946   005F2A  6E30               	movwf	(scalbnf@n+1)^0,c
 11947   005F2C  0E82               	movlw	130
 11948   005F2E  6E2F               	movwf	scalbnf@n^0,c
 11949   005F30                     l4544:
 11950   005F30  0E7F               	movlw	127
 11951   005F32  242F               	addwf	scalbnf@n^0,w,c
 11952   005F34  6E31               	movwf	??_scalbnf^0,c
 11953   005F36  0E00               	movlw	0
 11954   005F38  2030               	addwfc	(scalbnf@n+1)^0,w,c
 11955   005F3A  6E32               	movwf	(??_scalbnf+1)^0,c
 11956   005F3C  6A33               	clrf	(??_scalbnf+2)^0,c
 11957   005F3E  6A34               	clrf	(??_scalbnf+3)^0,c
 11958   005F40  0E17               	movlw	23
 11959   005F42                     u4555:
 11960   005F42  90D8               	bcf	status,0,c
 11961   005F44  3631               	rlcf	??_scalbnf^0,f,c
 11962   005F46  3632               	rlcf	(??_scalbnf+1)^0,f,c
 11963   005F48  3633               	rlcf	(??_scalbnf+2)^0,f,c
 11964   005F4A  3634               	rlcf	(??_scalbnf+3)^0,f,c
 11965   005F4C  2EE8               	decfsz	wreg,f,c
 11966   005F4E  EFA1  F02F         	goto	u4555
 11967   005F52  C031  F035         	movff	??_scalbnf,scalbnf@u
 11968   005F56  C032  F036         	movff	??_scalbnf+1,scalbnf@u+1
 11969   005F5A  C033  F037         	movff	??_scalbnf+2,scalbnf@u+2
 11970   005F5E  C034  F038         	movff	??_scalbnf+3,scalbnf@u+3
 11971   005F62  C035  F012         	movff	scalbnf@u,___flmul@b
 11972   005F66  C036  F013         	movff	scalbnf@u+1,___flmul@b+1
 11973   005F6A  C037  F014         	movff	scalbnf@u+2,___flmul@b+2
 11974   005F6E  C038  F015         	movff	scalbnf@u+3,___flmul@b+3
 11975   005F72  C039  F016         	movff	scalbnf@y,___flmul@a
 11976   005F76  C03A  F017         	movff	scalbnf@y+1,___flmul@a+1
 11977   005F7A  C03B  F018         	movff	scalbnf@y+2,___flmul@a+2
 11978   005F7E  C03C  F019         	movff	scalbnf@y+3,___flmul@a+3
 11979   005F82  ECE9  F028         	call	___flmul	;wreg free
 11980   005F86  C012  F02B         	movff	?___flmul,scalbnf@x
 11981   005F8A  C013  F02C         	movff	?___flmul+1,scalbnf@x+1
 11982   005F8E  C014  F02D         	movff	?___flmul+2,scalbnf@x+2
 11983   005F92  C015  F02E         	movff	?___flmul+3,scalbnf@x+3
 11984   005F96  C02B  F02B         	movff	scalbnf@x,?_scalbnf
 11985   005F9A  C02C  F02C         	movff	scalbnf@x+1,?_scalbnf+1
 11986   005F9E  C02D  F02D         	movff	scalbnf@x+2,?_scalbnf+2
 11987   005FA2  C02E  F02E         	movff	scalbnf@x+3,?_scalbnf+3
 11988   005FA6  0012               	return		;funcret
 11989   005FA8                     __end_of_scalbnf:
 11990                           	callstack 0
 11991                           
 11992 ;; *************** function ___flmul *****************
 11993 ;; Defined at:
 11994 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;  b               4   17[COMRAM] float 
 11997 ;;  a               4   21[COMRAM] float 
 11998 ;; Auto vars:     Size  Location     Type
 11999 ;;  prod            4   36[COMRAM] struct .
 12000 ;;  grs             4   30[COMRAM] unsigned long 
 12001 ;;  temp            2   40[COMRAM] struct .
 12002 ;;  bexp            1   35[COMRAM] unsigned char 
 12003 ;;  aexp            1   34[COMRAM] unsigned char 
 12004 ;;  sign            1   29[COMRAM] unsigned char 
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  4   17[COMRAM] unsigned char 
 12007 ;; Registers used:
 12008 ;;		wreg, status,2, status,0, prodl, prodh
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12014 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12015 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12016 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12017 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12018 ;;Total ram usage:       25 bytes
 12019 ;; Hardware stack levels used: 1
 12020 ;; Hardware stack levels required when called: 2
 12021 ;; This function calls:
 12022 ;;		Nothing
 12023 ;; This function is called by:
 12024 ;;		_powf
 12025 ;;		_scalbnf
 12026 ;; This function uses a non-reentrant model
 12027 ;;
 12028                           
 12029                           	psect	text32
 12030   0051D2                     __ptext32:
 12031                           	callstack 0
 12032   0051D2                     ___flmul:
 12033                           	callstack 25
 12034   0051D2  5015               	movf	(___flmul@b+3)^0,w,c
 12035   0051D4  0B80               	andlw	128
 12036   0051D6  6E1E               	movwf	___flmul@sign^0,c
 12037   0051D8  5015               	movf	(___flmul@b+3)^0,w,c
 12038   0051DA  2415               	addwf	(___flmul@b+3)^0,w,c
 12039   0051DC  6E24               	movwf	___flmul@bexp^0,c
 12040   0051DE  AE14               	btfss	(___flmul@b+2)^0,7,c
 12041   0051E0  EFF4  F028         	goto	u3431
 12042   0051E4  EFF6  F028         	goto	u3430
 12043   0051E8                     u3431:
 12044   0051E8  EFF7  F028         	goto	l3884
 12045   0051EC                     u3430:
 12046   0051EC  8024               	bsf	___flmul@bexp^0,0,c
 12047   0051EE                     l3884:
 12048   0051EE  5024               	movf	___flmul@bexp^0,w,c
 12049   0051F0  B4D8               	btfsc	status,2,c
 12050   0051F2  EFFD  F028         	goto	u3441
 12051   0051F6  EFFF  F028         	goto	u3440
 12052   0051FA                     u3441:
 12053   0051FA  EF12  F029         	goto	l3892
 12054   0051FE                     u3440:
 12055   0051FE  2824               	incf	___flmul@bexp^0,w,c
 12056   005200  A4D8               	btfss	status,2,c
 12057   005202  EF05  F029         	goto	u3451
 12058   005206  EF07  F029         	goto	u3450
 12059   00520A                     u3451:
 12060   00520A  EF0F  F029         	goto	l3890
 12061   00520E                     u3450:
 12062   00520E  0E00               	movlw	0
 12063   005210  6E12               	movwf	___flmul@b^0,c
 12064   005212  0E00               	movlw	0
 12065   005214  6E13               	movwf	(___flmul@b+1)^0,c
 12066   005216  0E00               	movlw	0
 12067   005218  6E14               	movwf	(___flmul@b+2)^0,c
 12068   00521A  0E00               	movlw	0
 12069   00521C  6E15               	movwf	(___flmul@b+3)^0,c
 12070   00521E                     l3890:
 12071   00521E  8E14               	bsf	(___flmul@b+2)^0,7,c
 12072   005220  EF1A  F029         	goto	l3894
 12073   005224                     l3892:
 12074   005224  0E00               	movlw	0
 12075   005226  6E12               	movwf	___flmul@b^0,c
 12076   005228  0E00               	movlw	0
 12077   00522A  6E13               	movwf	(___flmul@b+1)^0,c
 12078   00522C  0E00               	movlw	0
 12079   00522E  6E14               	movwf	(___flmul@b+2)^0,c
 12080   005230  0E00               	movlw	0
 12081   005232  6E15               	movwf	(___flmul@b+3)^0,c
 12082   005234                     l3894:
 12083   005234  5019               	movf	(___flmul@a+3)^0,w,c
 12084   005236  0B80               	andlw	128
 12085   005238  1A1E               	xorwf	___flmul@sign^0,f,c
 12086   00523A  5019               	movf	(___flmul@a+3)^0,w,c
 12087   00523C  2419               	addwf	(___flmul@a+3)^0,w,c
 12088   00523E  6E23               	movwf	___flmul@aexp^0,c
 12089   005240  AE18               	btfss	(___flmul@a+2)^0,7,c
 12090   005242  EF25  F029         	goto	u3461
 12091   005246  EF27  F029         	goto	u3460
 12092   00524A                     u3461:
 12093   00524A  EF28  F029         	goto	l3902
 12094   00524E                     u3460:
 12095   00524E  8023               	bsf	___flmul@aexp^0,0,c
 12096   005250                     l3902:
 12097   005250  5023               	movf	___flmul@aexp^0,w,c
 12098   005252  B4D8               	btfsc	status,2,c
 12099   005254  EF2E  F029         	goto	u3471
 12100   005258  EF30  F029         	goto	u3470
 12101   00525C                     u3471:
 12102   00525C  EF43  F029         	goto	l3910
 12103   005260                     u3470:
 12104   005260  2823               	incf	___flmul@aexp^0,w,c
 12105   005262  A4D8               	btfss	status,2,c
 12106   005264  EF36  F029         	goto	u3481
 12107   005268  EF38  F029         	goto	u3480
 12108   00526C                     u3481:
 12109   00526C  EF40  F029         	goto	l3908
 12110   005270                     u3480:
 12111   005270  0E00               	movlw	0
 12112   005272  6E16               	movwf	___flmul@a^0,c
 12113   005274  0E00               	movlw	0
 12114   005276  6E17               	movwf	(___flmul@a+1)^0,c
 12115   005278  0E00               	movlw	0
 12116   00527A  6E18               	movwf	(___flmul@a+2)^0,c
 12117   00527C  0E00               	movlw	0
 12118   00527E  6E19               	movwf	(___flmul@a+3)^0,c
 12119   005280                     l3908:
 12120   005280  8E18               	bsf	(___flmul@a+2)^0,7,c
 12121   005282  EF4B  F029         	goto	l1176
 12122   005286                     l3910:
 12123   005286  0E00               	movlw	0
 12124   005288  6E16               	movwf	___flmul@a^0,c
 12125   00528A  0E00               	movlw	0
 12126   00528C  6E17               	movwf	(___flmul@a+1)^0,c
 12127   00528E  0E00               	movlw	0
 12128   005290  6E18               	movwf	(___flmul@a+2)^0,c
 12129   005292  0E00               	movlw	0
 12130   005294  6E19               	movwf	(___flmul@a+3)^0,c
 12131   005296                     l1176:
 12132   005296  5023               	movf	___flmul@aexp^0,w,c
 12133   005298  B4D8               	btfsc	status,2,c
 12134   00529A  EF51  F029         	goto	u3491
 12135   00529E  EF53  F029         	goto	u3490
 12136   0052A2                     u3491:
 12137   0052A2  EF5B  F029         	goto	l3914
 12138   0052A6                     u3490:
 12139   0052A6  5024               	movf	___flmul@bexp^0,w,c
 12140   0052A8  A4D8               	btfss	status,2,c
 12141   0052AA  EF59  F029         	goto	u3501
 12142   0052AE  EF5B  F029         	goto	u3500
 12143   0052B2                     u3501:
 12144   0052B2  EF65  F029         	goto	l3918
 12145   0052B6                     u3500:
 12146   0052B6                     l3914:
 12147   0052B6  0E00               	movlw	0
 12148   0052B8  6E12               	movwf	?___flmul^0,c
 12149   0052BA  0E00               	movlw	0
 12150   0052BC  6E13               	movwf	(?___flmul+1)^0,c
 12151   0052BE  0E00               	movlw	0
 12152   0052C0  6E14               	movwf	(?___flmul+2)^0,c
 12153   0052C2  0E00               	movlw	0
 12154   0052C4  6E15               	movwf	(?___flmul+3)^0,c
 12155   0052C6  EFFD  F02A         	goto	l1180
 12156   0052CA                     l3918:
 12157   0052CA  5018               	movf	(___flmul@a+2)^0,w,c
 12158   0052CC  0212               	mulwf	___flmul@b^0,c
 12159   0052CE  CFF3 F029          	movff	prodl,___flmul@temp
 12160   0052D2  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12161   0052D6  5029               	movf	___flmul@temp^0,w,c
 12162   0052D8  6E1F               	movwf	___flmul@grs^0,c
 12163   0052DA  6A20               	clrf	(___flmul@grs+1)^0,c
 12164   0052DC  6A21               	clrf	(___flmul@grs+2)^0,c
 12165   0052DE  6A22               	clrf	(___flmul@grs+3)^0,c
 12166   0052E0  502A               	movf	(___flmul@temp+1)^0,w,c
 12167   0052E2  6E25               	movwf	___flmul@prod^0,c
 12168   0052E4  6A26               	clrf	(___flmul@prod+1)^0,c
 12169   0052E6  6A27               	clrf	(___flmul@prod+2)^0,c
 12170   0052E8  6A28               	clrf	(___flmul@prod+3)^0,c
 12171   0052EA  5017               	movf	(___flmul@a+1)^0,w,c
 12172   0052EC  0213               	mulwf	(___flmul@b+1)^0,c
 12173   0052EE  CFF3 F029          	movff	prodl,___flmul@temp
 12174   0052F2  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12175   0052F6  5029               	movf	___flmul@temp^0,w,c
 12176   0052F8  261F               	addwf	___flmul@grs^0,f,c
 12177   0052FA  0E00               	movlw	0
 12178   0052FC  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12179   0052FE  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12180   005300  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12181   005302  502A               	movf	(___flmul@temp+1)^0,w,c
 12182   005304  2625               	addwf	___flmul@prod^0,f,c
 12183   005306  0E00               	movlw	0
 12184   005308  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12185   00530A  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12186   00530C  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12187   00530E  5016               	movf	___flmul@a^0,w,c
 12188   005310  0214               	mulwf	(___flmul@b+2)^0,c
 12189   005312  CFF3 F029          	movff	prodl,___flmul@temp
 12190   005316  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12191   00531A  5029               	movf	___flmul@temp^0,w,c
 12192   00531C  261F               	addwf	___flmul@grs^0,f,c
 12193   00531E  0E00               	movlw	0
 12194   005320  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12195   005322  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12196   005324  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12197   005326  502A               	movf	(___flmul@temp+1)^0,w,c
 12198   005328  2625               	addwf	___flmul@prod^0,f,c
 12199   00532A  0E00               	movlw	0
 12200   00532C  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12201   00532E  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12202   005330  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12203   005332  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12204   005336  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12205   00533A  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12206   00533E  6A1F               	clrf	___flmul@grs^0,c
 12207   005340  5016               	movf	___flmul@a^0,w,c
 12208   005342  0213               	mulwf	(___flmul@b+1)^0,c
 12209   005344  CFF3 F029          	movff	prodl,___flmul@temp
 12210   005348  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12211   00534C  5029               	movf	___flmul@temp^0,w,c
 12212   00534E  261F               	addwf	___flmul@grs^0,f,c
 12213   005350  502A               	movf	(___flmul@temp+1)^0,w,c
 12214   005352  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12215   005354  0E00               	movlw	0
 12216   005356  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12217   005358  0E00               	movlw	0
 12218   00535A  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12219   00535C  5017               	movf	(___flmul@a+1)^0,w,c
 12220   00535E  0212               	mulwf	___flmul@b^0,c
 12221   005360  CFF3 F029          	movff	prodl,___flmul@temp
 12222   005364  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12223   005368  5029               	movf	___flmul@temp^0,w,c
 12224   00536A  261F               	addwf	___flmul@grs^0,f,c
 12225   00536C  502A               	movf	(___flmul@temp+1)^0,w,c
 12226   00536E  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12227   005370  0E00               	movlw	0
 12228   005372  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12229   005374  0E00               	movlw	0
 12230   005376  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12231   005378  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12232   00537C  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12233   005380  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12234   005384  6A1F               	clrf	___flmul@grs^0,c
 12235   005386  5016               	movf	___flmul@a^0,w,c
 12236   005388  0212               	mulwf	___flmul@b^0,c
 12237   00538A  CFF3 F029          	movff	prodl,___flmul@temp
 12238   00538E  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12239   005392  5029               	movf	___flmul@temp^0,w,c
 12240   005394  261F               	addwf	___flmul@grs^0,f,c
 12241   005396  502A               	movf	(___flmul@temp+1)^0,w,c
 12242   005398  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12243   00539A  0E00               	movlw	0
 12244   00539C  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12245   00539E  0E00               	movlw	0
 12246   0053A0  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12247   0053A2  5018               	movf	(___flmul@a+2)^0,w,c
 12248   0053A4  0213               	mulwf	(___flmul@b+1)^0,c
 12249   0053A6  CFF3 F029          	movff	prodl,___flmul@temp
 12250   0053AA  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12251   0053AE  5029               	movf	___flmul@temp^0,w,c
 12252   0053B0  2625               	addwf	___flmul@prod^0,f,c
 12253   0053B2  502A               	movf	(___flmul@temp+1)^0,w,c
 12254   0053B4  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12255   0053B6  0E00               	movlw	0
 12256   0053B8  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12257   0053BA  0E00               	movlw	0
 12258   0053BC  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12259   0053BE  5017               	movf	(___flmul@a+1)^0,w,c
 12260   0053C0  0214               	mulwf	(___flmul@b+2)^0,c
 12261   0053C2  CFF3 F029          	movff	prodl,___flmul@temp
 12262   0053C6  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12263   0053CA  5029               	movf	___flmul@temp^0,w,c
 12264   0053CC  2625               	addwf	___flmul@prod^0,f,c
 12265   0053CE  502A               	movf	(___flmul@temp+1)^0,w,c
 12266   0053D0  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12267   0053D2  0E00               	movlw	0
 12268   0053D4  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12269   0053D6  0E00               	movlw	0
 12270   0053D8  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12271   0053DA  5018               	movf	(___flmul@a+2)^0,w,c
 12272   0053DC  0214               	mulwf	(___flmul@b+2)^0,c
 12273   0053DE  CFF3 F029          	movff	prodl,___flmul@temp
 12274   0053E2  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12275   0053E6  5029               	movf	___flmul@temp^0,w,c
 12276   0053E8  6E1A               	movwf	??___flmul^0,c
 12277   0053EA  502A               	movf	(___flmul@temp+1)^0,w,c
 12278   0053EC  6E1B               	movwf	(??___flmul+1)^0,c
 12279   0053EE  6A1C               	clrf	(??___flmul+2)^0,c
 12280   0053F0  6A1D               	clrf	(??___flmul+3)^0,c
 12281   0053F2  C01C  F01D         	movff	??___flmul+2,??___flmul+3
 12282   0053F6  C01B  F01C         	movff	??___flmul+1,??___flmul+2
 12283   0053FA  C01A  F01B         	movff	??___flmul,??___flmul+1
 12284   0053FE  6A1A               	clrf	??___flmul^0,c
 12285   005400  501A               	movf	??___flmul^0,w,c
 12286   005402  2625               	addwf	___flmul@prod^0,f,c
 12287   005404  501B               	movf	(??___flmul+1)^0,w,c
 12288   005406  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12289   005408  501C               	movf	(??___flmul+2)^0,w,c
 12290   00540A  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12291   00540C  501D               	movf	(??___flmul+3)^0,w,c
 12292   00540E  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12293   005410  C01F  F01A         	movff	___flmul@grs,??___flmul
 12294   005414  C020  F01B         	movff	___flmul@grs+1,??___flmul+1
 12295   005418  C021  F01C         	movff	___flmul@grs+2,??___flmul+2
 12296   00541C  C022  F01D         	movff	___flmul@grs+3,??___flmul+3
 12297   005420  0E19               	movlw	25
 12298   005422  EF18  F02A         	goto	u3510
 12299   005426                     u3515:
 12300   005426  90D8               	bcf	status,0,c
 12301   005428  321D               	rrcf	(??___flmul+3)^0,f,c
 12302   00542A  321C               	rrcf	(??___flmul+2)^0,f,c
 12303   00542C  321B               	rrcf	(??___flmul+1)^0,f,c
 12304   00542E  321A               	rrcf	??___flmul^0,f,c
 12305   005430                     u3510:
 12306   005430  2EE8               	decfsz	wreg,f,c
 12307   005432  EF13  F02A         	goto	u3515
 12308   005436  501A               	movf	??___flmul^0,w,c
 12309   005438  2625               	addwf	___flmul@prod^0,f,c
 12310   00543A  501B               	movf	(??___flmul+1)^0,w,c
 12311   00543C  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12312   00543E  501C               	movf	(??___flmul+2)^0,w,c
 12313   005440  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12314   005442  501D               	movf	(??___flmul+3)^0,w,c
 12315   005444  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12316   005446  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12317   00544A  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12318   00544E  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12319   005452  6A1F               	clrf	___flmul@grs^0,c
 12320   005454  5023               	movf	___flmul@aexp^0,w,c
 12321   005456  C024  F01A         	movff	___flmul@bexp,??___flmul
 12322   00545A  6A1B               	clrf	(??___flmul+1)^0,c
 12323   00545C  261A               	addwf	??___flmul^0,f,c
 12324   00545E  0E00               	movlw	0
 12325   005460  221B               	addwfc	(??___flmul+1)^0,f,c
 12326   005462  0E82               	movlw	130
 12327   005464  241A               	addwf	??___flmul^0,w,c
 12328   005466  6E29               	movwf	___flmul@temp^0,c
 12329   005468  0EFF               	movlw	255
 12330   00546A  201B               	addwfc	(??___flmul+1)^0,w,c
 12331   00546C  6E2A               	movwf	(___flmul@temp+1)^0,c
 12332   00546E  EF4E  F02A         	goto	l3966
 12333   005472                     l3960:
 12334   005472  90D8               	bcf	status,0,c
 12335   005474  3625               	rlcf	___flmul@prod^0,f,c
 12336   005476  3626               	rlcf	(___flmul@prod+1)^0,f,c
 12337   005478  3627               	rlcf	(___flmul@prod+2)^0,f,c
 12338   00547A  3628               	rlcf	(___flmul@prod+3)^0,f,c
 12339   00547C  AE22               	btfss	(___flmul@grs+3)^0,7,c
 12340   00547E  EF43  F02A         	goto	u3521
 12341   005482  EF45  F02A         	goto	u3520
 12342   005486                     u3521:
 12343   005486  EF46  F02A         	goto	l1183
 12344   00548A                     u3520:
 12345   00548A  8025               	bsf	___flmul@prod^0,0,c
 12346   00548C                     l1183:
 12347   00548C  90D8               	bcf	status,0,c
 12348   00548E  361F               	rlcf	___flmul@grs^0,f,c
 12349   005490  3620               	rlcf	(___flmul@grs+1)^0,f,c
 12350   005492  3621               	rlcf	(___flmul@grs+2)^0,f,c
 12351   005494  3622               	rlcf	(___flmul@grs+3)^0,f,c
 12352   005496  0629               	decf	___flmul@temp^0,f,c
 12353   005498  A0D8               	btfss	status,0,c
 12354   00549A  062A               	decf	(___flmul@temp+1)^0,f,c
 12355   00549C                     l3966:
 12356   00549C  AE27               	btfss	(___flmul@prod+2)^0,7,c
 12357   00549E  EF53  F02A         	goto	u3531
 12358   0054A2  EF55  F02A         	goto	u3530
 12359   0054A6                     u3531:
 12360   0054A6  EF39  F02A         	goto	l3960
 12361   0054AA                     u3530:
 12362   0054AA  0E00               	movlw	0
 12363   0054AC  6E23               	movwf	___flmul@aexp^0,c
 12364   0054AE  AE22               	btfss	(___flmul@grs+3)^0,7,c
 12365   0054B0  EF5C  F02A         	goto	u3541
 12366   0054B4  EF5E  F02A         	goto	u3540
 12367   0054B8                     u3541:
 12368   0054B8  EF82  F02A         	goto	l1185
 12369   0054BC                     u3540:
 12370   0054BC  0EFF               	movlw	255
 12371   0054BE  141F               	andwf	___flmul@grs^0,w,c
 12372   0054C0  6E1A               	movwf	??___flmul^0,c
 12373   0054C2  0EFF               	movlw	255
 12374   0054C4  1420               	andwf	(___flmul@grs+1)^0,w,c
 12375   0054C6  6E1B               	movwf	(??___flmul+1)^0,c
 12376   0054C8  0EFF               	movlw	255
 12377   0054CA  1421               	andwf	(___flmul@grs+2)^0,w,c
 12378   0054CC  6E1C               	movwf	(??___flmul+2)^0,c
 12379   0054CE  0E7F               	movlw	127
 12380   0054D0  1422               	andwf	(___flmul@grs+3)^0,w,c
 12381   0054D2  6E1D               	movwf	(??___flmul+3)^0,c
 12382   0054D4  501A               	movf	??___flmul^0,w,c
 12383   0054D6  101B               	iorwf	(??___flmul+1)^0,w,c
 12384   0054D8  101C               	iorwf	(??___flmul+2)^0,w,c
 12385   0054DA  101D               	iorwf	(??___flmul+3)^0,w,c
 12386   0054DC  B4D8               	btfsc	status,2,c
 12387   0054DE  EF73  F02A         	goto	u3551
 12388   0054E2  EF75  F02A         	goto	u3550
 12389   0054E6                     u3551:
 12390   0054E6  EF79  F02A         	goto	l1186
 12391   0054EA                     u3550:
 12392   0054EA                     l3974:
 12393   0054EA  0E01               	movlw	1
 12394   0054EC  6E23               	movwf	___flmul@aexp^0,c
 12395   0054EE  EF82  F02A         	goto	l1185
 12396   0054F2                     l1186:
 12397   0054F2  A025               	btfss	___flmul@prod^0,0,c
 12398   0054F4  EF7E  F02A         	goto	u3561
 12399   0054F8  EF80  F02A         	goto	u3560
 12400   0054FC                     u3561:
 12401   0054FC  EF82  F02A         	goto	l1185
 12402   005500                     u3560:
 12403   005500  EF75  F02A         	goto	l3974
 12404   005504                     l1185:
 12405   005504  5023               	movf	___flmul@aexp^0,w,c
 12406   005506  B4D8               	btfsc	status,2,c
 12407   005508  EF88  F02A         	goto	u3571
 12408   00550C  EF8A  F02A         	goto	u3570
 12409   005510                     u3571:
 12410   005510  EFAE  F02A         	goto	l3986
 12411   005514                     u3570:
 12412   005514  0E01               	movlw	1
 12413   005516  2625               	addwf	___flmul@prod^0,f,c
 12414   005518  0E00               	movlw	0
 12415   00551A  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12416   00551C  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12417   00551E  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12418   005520  A028               	btfss	(___flmul@prod+3)^0,0,c
 12419   005522  EF95  F02A         	goto	u3581
 12420   005526  EF97  F02A         	goto	u3580
 12421   00552A                     u3581:
 12422   00552A  EFAE  F02A         	goto	l3986
 12423   00552E                     u3580:
 12424   00552E  C025  F01A         	movff	___flmul@prod,??___flmul
 12425   005532  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
 12426   005536  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
 12427   00553A  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
 12428   00553E  341D               	rlcf	(??___flmul+3)^0,w,c
 12429   005540  321D               	rrcf	(??___flmul+3)^0,f,c
 12430   005542  321C               	rrcf	(??___flmul+2)^0,f,c
 12431   005544  321B               	rrcf	(??___flmul+1)^0,f,c
 12432   005546  321A               	rrcf	??___flmul^0,f,c
 12433   005548  C01A  F025         	movff	??___flmul,___flmul@prod
 12434   00554C  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
 12435   005550  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
 12436   005554  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
 12437   005558  4A29               	infsnz	___flmul@temp^0,f,c
 12438   00555A  2A2A               	incf	(___flmul@temp+1)^0,f,c
 12439   00555C                     l3986:
 12440   00555C  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 12441   00555E  EFB9  F02A         	goto	u3591
 12442   005562  502A               	movf	(___flmul@temp+1)^0,w,c
 12443   005564  E108               	bnz	u3590
 12444   005566  2829               	incf	___flmul@temp^0,w,c
 12445   005568  A0D8               	btfss	status,0,c
 12446   00556A  EFB9  F02A         	goto	u3591
 12447   00556E  EFBB  F02A         	goto	u3590
 12448   005572                     u3591:
 12449   005572  EFC5  F02A         	goto	l3990
 12450   005576                     u3590:
 12451   005576  0E00               	movlw	0
 12452   005578  6E25               	movwf	___flmul@prod^0,c
 12453   00557A  0E00               	movlw	0
 12454   00557C  6E26               	movwf	(___flmul@prod+1)^0,c
 12455   00557E  0E80               	movlw	128
 12456   005580  6E27               	movwf	(___flmul@prod+2)^0,c
 12457   005582  0E7F               	movlw	127
 12458   005584  6E28               	movwf	(___flmul@prod+3)^0,c
 12459   005586  EFF3  F02A         	goto	l4002
 12460   00558A                     l3990:
 12461   00558A  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 12462   00558C  EFD2  F02A         	goto	u3600
 12463   005590  502A               	movf	(___flmul@temp+1)^0,w,c
 12464   005592  E106               	bnz	u3601
 12465   005594  0429               	decf	___flmul@temp^0,w,c
 12466   005596  B0D8               	btfsc	status,0,c
 12467   005598  EFD0  F02A         	goto	u3601
 12468   00559C  EFD2  F02A         	goto	u3600
 12469   0055A0                     u3601:
 12470   0055A0  EFDE  F02A         	goto	l1193
 12471   0055A4                     u3600:
 12472   0055A4  0E00               	movlw	0
 12473   0055A6  6E25               	movwf	___flmul@prod^0,c
 12474   0055A8  0E00               	movlw	0
 12475   0055AA  6E26               	movwf	(___flmul@prod+1)^0,c
 12476   0055AC  0E00               	movlw	0
 12477   0055AE  6E27               	movwf	(___flmul@prod+2)^0,c
 12478   0055B0  0E00               	movlw	0
 12479   0055B2  6E28               	movwf	(___flmul@prod+3)^0,c
 12480   0055B4  0E00               	movlw	0
 12481   0055B6  6E1E               	movwf	___flmul@sign^0,c
 12482   0055B8  EFF3  F02A         	goto	l4002
 12483   0055BC                     l1193:
 12484   0055BC  C029  F024         	movff	___flmul@temp,___flmul@bexp
 12485   0055C0  0EFF               	movlw	255
 12486   0055C2  1625               	andwf	___flmul@prod^0,f,c
 12487   0055C4  0EFF               	movlw	255
 12488   0055C6  1626               	andwf	(___flmul@prod+1)^0,f,c
 12489   0055C8  0E7F               	movlw	127
 12490   0055CA  1627               	andwf	(___flmul@prod+2)^0,f,c
 12491   0055CC  0E00               	movlw	0
 12492   0055CE  1628               	andwf	(___flmul@prod+3)^0,f,c
 12493   0055D0  A024               	btfss	___flmul@bexp^0,0,c
 12494   0055D2  EFED  F02A         	goto	u3611
 12495   0055D6  EFEF  F02A         	goto	u3610
 12496   0055DA                     u3611:
 12497   0055DA  EFF0  F02A         	goto	l4000
 12498   0055DE                     u3610:
 12499   0055DE  8E27               	bsf	(___flmul@prod+2)^0,7,c
 12500   0055E0                     l4000:
 12501   0055E0  90D8               	bcf	status,0,c
 12502   0055E2  3024               	rrcf	___flmul@bexp^0,w,c
 12503   0055E4  6E28               	movwf	(___flmul@prod+3)^0,c
 12504   0055E6                     l4002:
 12505   0055E6  501E               	movf	___flmul@sign^0,w,c
 12506   0055E8  1228               	iorwf	(___flmul@prod+3)^0,f,c
 12507   0055EA  C025  F012         	movff	___flmul@prod,?___flmul
 12508   0055EE  C026  F013         	movff	___flmul@prod+1,?___flmul+1
 12509   0055F2  C027  F014         	movff	___flmul@prod+2,?___flmul+2
 12510   0055F6  C028  F015         	movff	___flmul@prod+3,?___flmul+3
 12511   0055FA                     l1180:
 12512   0055FA  0012               	return		;funcret
 12513   0055FC                     __end_of___flmul:
 12514                           	callstack 0
 12515                           
 12516 ;; *************** function ___xxtofl *****************
 12517 ;; Defined at:
 12518 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 12519 ;; Parameters:    Size  Location     Type
 12520 ;;  sign            1    wreg     unsigned char 
 12521 ;;  val             4   12[COMRAM] long 
 12522 ;; Auto vars:     Size  Location     Type
 12523 ;;  sign            1   20[COMRAM] unsigned char 
 12524 ;;  arg             4   22[COMRAM] unsigned long 
 12525 ;;  exp             1   21[COMRAM] unsigned char 
 12526 ;; Return value:  Size  Location     Type
 12527 ;;                  4   12[COMRAM] unsigned char 
 12528 ;; Registers used:
 12529 ;;		wreg, status,2, status,0
 12530 ;; Tracked objects:
 12531 ;;		On entry : 0/0
 12532 ;;		On exit  : 0/0
 12533 ;;		Unchanged: 0/0
 12534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12535 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12536 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12537 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12538 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12539 ;;Total ram usage:       14 bytes
 12540 ;; Hardware stack levels used: 1
 12541 ;; Hardware stack levels required when called: 2
 12542 ;; This function calls:
 12543 ;;		Nothing
 12544 ;; This function is called by:
 12545 ;;		_decide_action
 12546 ;;		_powf
 12547 ;; This function uses a non-reentrant model
 12548 ;;
 12549                           
 12550                           	psect	text33
 12551   00617E                     __ptext33:
 12552                           	callstack 0
 12553   00617E                     ___xxtofl:
 12554                           	callstack 26
 12555                           
 12556                           ;incstack = 0
 12557                           ;___xxtofl@sign stored from wreg
 12558   00617E  6E15               	movwf	___xxtofl@sign^0,c
 12559   006180  5015               	movf	___xxtofl@sign^0,w,c
 12560   006182  B4D8               	btfsc	status,2,c
 12561   006184  EFC6  F030         	goto	u4291
 12562   006188  EFC8  F030         	goto	u4290
 12563   00618C                     u4291:
 12564   00618C  EFEA  F030         	goto	l1217
 12565   006190                     u4290:
 12566   006190  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 12567   006192  EFCF  F030         	goto	u4300
 12568   006196  EFCD  F030         	goto	u4301
 12569   00619A                     u4301:
 12570   00619A  EFEA  F030         	goto	l1217
 12571   00619E                     u4300:
 12572   00619E  C00D  F011         	movff	___xxtofl@val,??___xxtofl
 12573   0061A2  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
 12574   0061A6  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
 12575   0061AA  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
 12576   0061AE  1E11               	comf	??___xxtofl^0,f,c
 12577   0061B0  1E12               	comf	(??___xxtofl+1)^0,f,c
 12578   0061B2  1E13               	comf	(??___xxtofl+2)^0,f,c
 12579   0061B4  1E14               	comf	(??___xxtofl+3)^0,f,c
 12580   0061B6  2A11               	incf	??___xxtofl^0,f,c
 12581   0061B8  0E00               	movlw	0
 12582   0061BA  2212               	addwfc	(??___xxtofl+1)^0,f,c
 12583   0061BC  2213               	addwfc	(??___xxtofl+2)^0,f,c
 12584   0061BE  2214               	addwfc	(??___xxtofl+3)^0,f,c
 12585   0061C0  C011  F017         	movff	??___xxtofl,___xxtofl@arg
 12586   0061C4  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
 12587   0061C8  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
 12588   0061CC  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
 12589   0061D0  EFF2  F030         	goto	l4420
 12590   0061D4                     l1217:
 12591   0061D4  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
 12592   0061D8  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12593   0061DC  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12594   0061E0  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12595   0061E4                     l4420:
 12596   0061E4  500D               	movf	___xxtofl@val^0,w,c
 12597   0061E6  100E               	iorwf	(___xxtofl@val+1)^0,w,c
 12598   0061E8  100F               	iorwf	(___xxtofl@val+2)^0,w,c
 12599   0061EA  1010               	iorwf	(___xxtofl@val+3)^0,w,c
 12600   0061EC  A4D8               	btfss	status,2,c
 12601   0061EE  EFFB  F030         	goto	u4311
 12602   0061F2  EFFD  F030         	goto	u4310
 12603   0061F6                     u4311:
 12604   0061F6  EF07  F031         	goto	l4426
 12605   0061FA                     u4310:
 12606   0061FA  0E00               	movlw	0
 12607   0061FC  6E0D               	movwf	?___xxtofl^0,c
 12608   0061FE  0E00               	movlw	0
 12609   006200  6E0E               	movwf	(?___xxtofl+1)^0,c
 12610   006202  0E00               	movlw	0
 12611   006204  6E0F               	movwf	(?___xxtofl+2)^0,c
 12612   006206  0E00               	movlw	0
 12613   006208  6E10               	movwf	(?___xxtofl+3)^0,c
 12614   00620A  EF98  F031         	goto	l1220
 12615   00620E                     l4426:
 12616   00620E  0E96               	movlw	150
 12617   006210  6E16               	movwf	___xxtofl@exp^0,c
 12618   006212  EF11  F031         	goto	l4430
 12619   006216                     l4428:
 12620   006216  2A16               	incf	___xxtofl@exp^0,f,c
 12621   006218  90D8               	bcf	status,0,c
 12622   00621A  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 12623   00621C  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 12624   00621E  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 12625   006220  3217               	rrcf	___xxtofl@arg^0,f,c
 12626   006222                     l4430:
 12627   006222  0E00               	movlw	0
 12628   006224  1417               	andwf	___xxtofl@arg^0,w,c
 12629   006226  6E11               	movwf	??___xxtofl^0,c
 12630   006228  0E00               	movlw	0
 12631   00622A  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 12632   00622C  6E12               	movwf	(??___xxtofl+1)^0,c
 12633   00622E  0E00               	movlw	0
 12634   006230  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 12635   006232  6E13               	movwf	(??___xxtofl+2)^0,c
 12636   006234  0EFE               	movlw	254
 12637   006236  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 12638   006238  6E14               	movwf	(??___xxtofl+3)^0,c
 12639   00623A  5011               	movf	??___xxtofl^0,w,c
 12640   00623C  1012               	iorwf	(??___xxtofl+1)^0,w,c
 12641   00623E  1013               	iorwf	(??___xxtofl+2)^0,w,c
 12642   006240  1014               	iorwf	(??___xxtofl+3)^0,w,c
 12643   006242  A4D8               	btfss	status,2,c
 12644   006244  EF26  F031         	goto	u4321
 12645   006248  EF28  F031         	goto	u4320
 12646   00624C                     u4321:
 12647   00624C  EF0B  F031         	goto	l4428
 12648   006250                     u4320:
 12649   006250  EF36  F031         	goto	l1224
 12650   006254                     l4432:
 12651   006254  2A16               	incf	___xxtofl@exp^0,f,c
 12652   006256  0E01               	movlw	1
 12653   006258  2617               	addwf	___xxtofl@arg^0,f,c
 12654   00625A  0E00               	movlw	0
 12655   00625C  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
 12656   00625E  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
 12657   006260  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
 12658   006262  90D8               	bcf	status,0,c
 12659   006264  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 12660   006266  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 12661   006268  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 12662   00626A  3217               	rrcf	___xxtofl@arg^0,f,c
 12663   00626C                     l1224:
 12664   00626C  0E00               	movlw	0
 12665   00626E  1417               	andwf	___xxtofl@arg^0,w,c
 12666   006270  6E11               	movwf	??___xxtofl^0,c
 12667   006272  0E00               	movlw	0
 12668   006274  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 12669   006276  6E12               	movwf	(??___xxtofl+1)^0,c
 12670   006278  0E00               	movlw	0
 12671   00627A  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 12672   00627C  6E13               	movwf	(??___xxtofl+2)^0,c
 12673   00627E  0EFF               	movlw	255
 12674   006280  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 12675   006282  6E14               	movwf	(??___xxtofl+3)^0,c
 12676   006284  5011               	movf	??___xxtofl^0,w,c
 12677   006286  1012               	iorwf	(??___xxtofl+1)^0,w,c
 12678   006288  1013               	iorwf	(??___xxtofl+2)^0,w,c
 12679   00628A  1014               	iorwf	(??___xxtofl+3)^0,w,c
 12680   00628C  A4D8               	btfss	status,2,c
 12681   00628E  EF4B  F031         	goto	u4331
 12682   006292  EF4D  F031         	goto	u4330
 12683   006296                     u4331:
 12684   006296  EF2A  F031         	goto	l4432
 12685   00629A                     u4330:
 12686   00629A  EF55  F031         	goto	l4440
 12687   00629E                     l4438:
 12688   00629E  0616               	decf	___xxtofl@exp^0,f,c
 12689   0062A0  90D8               	bcf	status,0,c
 12690   0062A2  3617               	rlcf	___xxtofl@arg^0,f,c
 12691   0062A4  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
 12692   0062A6  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
 12693   0062A8  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
 12694   0062AA                     l4440:
 12695   0062AA  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
 12696   0062AC  EF5A  F031         	goto	u4341
 12697   0062B0  EF5C  F031         	goto	u4340
 12698   0062B4                     u4341:
 12699   0062B4  EF64  F031         	goto	l1231
 12700   0062B8                     u4340:
 12701   0062B8  0E02               	movlw	2
 12702   0062BA  6016               	cpfslt	___xxtofl@exp^0,c
 12703   0062BC  EF62  F031         	goto	u4351
 12704   0062C0  EF64  F031         	goto	u4350
 12705   0062C4                     u4351:
 12706   0062C4  EF4F  F031         	goto	l4438
 12707   0062C8                     u4350:
 12708   0062C8                     l1231:
 12709   0062C8  B016               	btfsc	___xxtofl@exp^0,0,c
 12710   0062CA  EF69  F031         	goto	u4361
 12711   0062CE  EF6B  F031         	goto	u4360
 12712   0062D2                     u4361:
 12713   0062D2  EF6C  F031         	goto	l4446
 12714   0062D6                     u4360:
 12715   0062D6  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
 12716   0062D8                     l4446:
 12717   0062D8  90D8               	bcf	status,0,c
 12718   0062DA  3216               	rrcf	___xxtofl@exp^0,f,c
 12719   0062DC  C016  F011         	movff	___xxtofl@exp,??___xxtofl
 12720   0062E0  6A12               	clrf	(??___xxtofl+1)^0,c
 12721   0062E2  6A13               	clrf	(??___xxtofl+2)^0,c
 12722   0062E4  6A14               	clrf	(??___xxtofl+3)^0,c
 12723   0062E6  C011  F014         	movff	??___xxtofl,??___xxtofl+3
 12724   0062EA  6A13               	clrf	(??___xxtofl+2)^0,c
 12725   0062EC  6A12               	clrf	(??___xxtofl+1)^0,c
 12726   0062EE  6A11               	clrf	??___xxtofl^0,c
 12727   0062F0  5011               	movf	??___xxtofl^0,w,c
 12728   0062F2  1217               	iorwf	___xxtofl@arg^0,f,c
 12729   0062F4  5012               	movf	(??___xxtofl+1)^0,w,c
 12730   0062F6  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
 12731   0062F8  5013               	movf	(??___xxtofl+2)^0,w,c
 12732   0062FA  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
 12733   0062FC  5014               	movf	(??___xxtofl+3)^0,w,c
 12734   0062FE  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
 12735   006300  5015               	movf	___xxtofl@sign^0,w,c
 12736   006302  B4D8               	btfsc	status,2,c
 12737   006304  EF86  F031         	goto	u4371
 12738   006308  EF88  F031         	goto	u4370
 12739   00630C                     u4371:
 12740   00630C  EF90  F031         	goto	l4456
 12741   006310                     u4370:
 12742   006310  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 12743   006312  EF8F  F031         	goto	u4380
 12744   006316  EF8D  F031         	goto	u4381
 12745   00631A                     u4381:
 12746   00631A  EF90  F031         	goto	l4456
 12747   00631E                     u4380:
 12748   00631E  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
 12749   006320                     l4456:
 12750   006320  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
 12751   006324  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
 12752   006328  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
 12753   00632C  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
 12754   006330                     l1220:
 12755   006330  0012               	return		;funcret
 12756   006332                     __end_of___xxtofl:
 12757                           	callstack 0
 12758                           
 12759 ;; *************** function ___flsub *****************
 12760 ;; Defined at:
 12761 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 12762 ;; Parameters:    Size  Location     Type
 12763 ;;  b               4   67[COMRAM] unsigned char 
 12764 ;;  a               4   71[COMRAM] unsigned char 
 12765 ;; Auto vars:     Size  Location     Type
 12766 ;;		None
 12767 ;; Return value:  Size  Location     Type
 12768 ;;                  4   67[COMRAM] unsigned char 
 12769 ;; Registers used:
 12770 ;;		wreg, status,2, status,0, cstack
 12771 ;; Tracked objects:
 12772 ;;		On entry : 0/0
 12773 ;;		On exit  : 0/0
 12774 ;;		Unchanged: 0/0
 12775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12776 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12779 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12780 ;;Total ram usage:        8 bytes
 12781 ;; Hardware stack levels used: 1
 12782 ;; Hardware stack levels required when called: 3
 12783 ;; This function calls:
 12784 ;;		___fladd
 12785 ;; This function is called by:
 12786 ;;		_decide_action
 12787 ;;		_powf
 12788 ;; This function uses a non-reentrant model
 12789 ;;
 12790                           
 12791                           	psect	text34
 12792   00735E                     __ptext34:
 12793                           	callstack 0
 12794   00735E                     ___flsub:
 12795                           	callstack 25
 12796   00735E  0E00               	movlw	0
 12797   007360  1A48               	xorwf	___flsub@a^0,f,c
 12798   007362  0E00               	movlw	0
 12799   007364  1A49               	xorwf	(___flsub@a+1)^0,f,c
 12800   007366  0E00               	movlw	0
 12801   007368  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 12802   00736A  0E80               	movlw	128
 12803   00736C  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 12804   00736E  C044  F002         	movff	___flsub@b,___fladd@b
 12805   007372  C045  F003         	movff	___flsub@b+1,___fladd@b+1
 12806   007376  C046  F004         	movff	___flsub@b+2,___fladd@b+2
 12807   00737A  C047  F005         	movff	___flsub@b+3,___fladd@b+3
 12808   00737E  C048  F006         	movff	___flsub@a,___fladd@a
 12809   007382  C049  F007         	movff	___flsub@a+1,___fladd@a+1
 12810   007386  C04A  F008         	movff	___flsub@a+2,___fladd@a+2
 12811   00738A  C04B  F009         	movff	___flsub@a+3,___fladd@a+3
 12812   00738E  EC89  F026         	call	___fladd	;wreg free
 12813   007392  C002  F044         	movff	?___fladd,?___flsub
 12814   007396  C003  F045         	movff	?___fladd+1,?___flsub+1
 12815   00739A  C004  F046         	movff	?___fladd+2,?___flsub+2
 12816   00739E  C005  F047         	movff	?___fladd+3,?___flsub+3
 12817   0073A2  0012               	return		;funcret
 12818   0073A4                     __end_of___flsub:
 12819                           	callstack 0
 12820                           
 12821 ;; *************** function ___fladd *****************
 12822 ;; Defined at:
 12823 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 12824 ;; Parameters:    Size  Location     Type
 12825 ;;  b               4    1[COMRAM] unsigned char 
 12826 ;;  a               4    5[COMRAM] unsigned char 
 12827 ;; Auto vars:     Size  Location     Type
 12828 ;;  grs             1   16[COMRAM] unsigned char 
 12829 ;;  bexp            1   15[COMRAM] unsigned char 
 12830 ;;  aexp            1   14[COMRAM] unsigned char 
 12831 ;;  signs           1   13[COMRAM] unsigned char 
 12832 ;; Return value:  Size  Location     Type
 12833 ;;                  4    1[COMRAM] unsigned char 
 12834 ;; Registers used:
 12835 ;;		wreg, status,2, status,0
 12836 ;; Tracked objects:
 12837 ;;		On entry : 0/0
 12838 ;;		On exit  : 0/0
 12839 ;;		Unchanged: 0/0
 12840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12841 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12842 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12843 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12844 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12845 ;;Total ram usage:       16 bytes
 12846 ;; Hardware stack levels used: 1
 12847 ;; Hardware stack levels required when called: 2
 12848 ;; This function calls:
 12849 ;;		Nothing
 12850 ;; This function is called by:
 12851 ;;		_decide_action
 12852 ;;		___flsub
 12853 ;;		_powf
 12854 ;; This function uses a non-reentrant model
 12855 ;;
 12856                           
 12857                           	psect	text35
 12858   004D12                     __ptext35:
 12859                           	callstack 0
 12860   004D12                     ___fladd:
 12861                           	callstack 25
 12862   004D12  5005               	movf	(___fladd@b+3)^0,w,c
 12863   004D14  0B80               	andlw	128
 12864   004D16  6E0E               	movwf	___fladd@signs^0,c
 12865   004D18  5005               	movf	(___fladd@b+3)^0,w,c
 12866   004D1A  2405               	addwf	(___fladd@b+3)^0,w,c
 12867   004D1C  6E10               	movwf	___fladd@bexp^0,c
 12868   004D1E  AE04               	btfss	(___fladd@b+2)^0,7,c
 12869   004D20  EF94  F026         	goto	u3041
 12870   004D24  EF96  F026         	goto	u3040
 12871   004D28                     u3041:
 12872   004D28  EF97  F026         	goto	l3682
 12873   004D2C                     u3040:
 12874   004D2C  8010               	bsf	___fladd@bexp^0,0,c
 12875   004D2E                     l3682:
 12876   004D2E  5010               	movf	___fladd@bexp^0,w,c
 12877   004D30  B4D8               	btfsc	status,2,c
 12878   004D32  EF9D  F026         	goto	u3051
 12879   004D36  EF9F  F026         	goto	u3050
 12880   004D3A                     u3051:
 12881   004D3A  EFB4  F026         	goto	l3692
 12882   004D3E                     u3050:
 12883   004D3E  2810               	incf	___fladd@bexp^0,w,c
 12884   004D40  A4D8               	btfss	status,2,c
 12885   004D42  EFA5  F026         	goto	u3061
 12886   004D46  EFA7  F026         	goto	u3060
 12887   004D4A                     u3061:
 12888   004D4A  EFAF  F026         	goto	l3688
 12889   004D4E                     u3060:
 12890   004D4E  0E00               	movlw	0
 12891   004D50  6E02               	movwf	___fladd@b^0,c
 12892   004D52  0E00               	movlw	0
 12893   004D54  6E03               	movwf	(___fladd@b+1)^0,c
 12894   004D56  0E00               	movlw	0
 12895   004D58  6E04               	movwf	(___fladd@b+2)^0,c
 12896   004D5A  0E00               	movlw	0
 12897   004D5C  6E05               	movwf	(___fladd@b+3)^0,c
 12898   004D5E                     l3688:
 12899   004D5E  8E04               	bsf	(___fladd@b+2)^0,7,c
 12900   004D60  0E00               	movlw	0
 12901   004D62  6E05               	movwf	(___fladd@b+3)^0,c
 12902   004D64  EFBC  F026         	goto	l3694
 12903   004D68                     l3692:
 12904   004D68  0E00               	movlw	0
 12905   004D6A  6E02               	movwf	___fladd@b^0,c
 12906   004D6C  0E00               	movlw	0
 12907   004D6E  6E03               	movwf	(___fladd@b+1)^0,c
 12908   004D70  0E00               	movlw	0
 12909   004D72  6E04               	movwf	(___fladd@b+2)^0,c
 12910   004D74  0E00               	movlw	0
 12911   004D76  6E05               	movwf	(___fladd@b+3)^0,c
 12912   004D78                     l3694:
 12913   004D78  5009               	movf	(___fladd@a+3)^0,w,c
 12914   004D7A  0B80               	andlw	128
 12915   004D7C  6E0F               	movwf	___fladd@aexp^0,c
 12916   004D7E  500E               	movf	___fladd@signs^0,w,c
 12917   004D80  180F               	xorwf	___fladd@aexp^0,w,c
 12918   004D82  B4D8               	btfsc	status,2,c
 12919   004D84  EFC6  F026         	goto	u3071
 12920   004D88  EFC8  F026         	goto	u3070
 12921   004D8C                     u3071:
 12922   004D8C  EFC9  F026         	goto	l3700
 12923   004D90                     u3070:
 12924   004D90  8C0E               	bsf	___fladd@signs^0,6,c
 12925   004D92                     l3700:
 12926   004D92  5009               	movf	(___fladd@a+3)^0,w,c
 12927   004D94  2409               	addwf	(___fladd@a+3)^0,w,c
 12928   004D96  6E0F               	movwf	___fladd@aexp^0,c
 12929   004D98  AE08               	btfss	(___fladd@a+2)^0,7,c
 12930   004D9A  EFD1  F026         	goto	u3081
 12931   004D9E  EFD3  F026         	goto	u3080
 12932   004DA2                     u3081:
 12933   004DA2  EFD4  F026         	goto	l3706
 12934   004DA6                     u3080:
 12935   004DA6  800F               	bsf	___fladd@aexp^0,0,c
 12936   004DA8                     l3706:
 12937   004DA8  500F               	movf	___fladd@aexp^0,w,c
 12938   004DAA  B4D8               	btfsc	status,2,c
 12939   004DAC  EFDA  F026         	goto	u3091
 12940   004DB0  EFDC  F026         	goto	u3090
 12941   004DB4                     u3091:
 12942   004DB4  EFF1  F026         	goto	l3716
 12943   004DB8                     u3090:
 12944   004DB8  280F               	incf	___fladd@aexp^0,w,c
 12945   004DBA  A4D8               	btfss	status,2,c
 12946   004DBC  EFE2  F026         	goto	u3101
 12947   004DC0  EFE4  F026         	goto	u3100
 12948   004DC4                     u3101:
 12949   004DC4  EFEC  F026         	goto	l3712
 12950   004DC8                     u3100:
 12951   004DC8  0E00               	movlw	0
 12952   004DCA  6E06               	movwf	___fladd@a^0,c
 12953   004DCC  0E00               	movlw	0
 12954   004DCE  6E07               	movwf	(___fladd@a+1)^0,c
 12955   004DD0  0E00               	movlw	0
 12956   004DD2  6E08               	movwf	(___fladd@a+2)^0,c
 12957   004DD4  0E00               	movlw	0
 12958   004DD6  6E09               	movwf	(___fladd@a+3)^0,c
 12959   004DD8                     l3712:
 12960   004DD8  8E08               	bsf	(___fladd@a+2)^0,7,c
 12961   004DDA  0E00               	movlw	0
 12962   004DDC  6E09               	movwf	(___fladd@a+3)^0,c
 12963   004DDE  EFF9  F026         	goto	l3718
 12964   004DE2                     l3716:
 12965   004DE2  0E00               	movlw	0
 12966   004DE4  6E06               	movwf	___fladd@a^0,c
 12967   004DE6  0E00               	movlw	0
 12968   004DE8  6E07               	movwf	(___fladd@a+1)^0,c
 12969   004DEA  0E00               	movlw	0
 12970   004DEC  6E08               	movwf	(___fladd@a+2)^0,c
 12971   004DEE  0E00               	movlw	0
 12972   004DF0  6E09               	movwf	(___fladd@a+3)^0,c
 12973   004DF2                     l3718:
 12974   004DF2  5010               	movf	___fladd@bexp^0,w,c
 12975   004DF4  5C0F               	subwf	___fladd@aexp^0,w,c
 12976   004DF6  B0D8               	btfsc	status,0,c
 12977   004DF8  EF00  F027         	goto	u3111
 12978   004DFC  EF02  F027         	goto	u3110
 12979   004E00                     u3111:
 12980   004E00  EF29  F027         	goto	l3754
 12981   004E04                     u3110:
 12982   004E04  AC0E               	btfss	___fladd@signs^0,6,c
 12983   004E06  EF07  F027         	goto	u3121
 12984   004E0A  EF09  F027         	goto	u3120
 12985   004E0E                     u3121:
 12986   004E0E  EF0B  F027         	goto	l3724
 12987   004E12                     u3120:
 12988   004E12  0E80               	movlw	128
 12989   004E14  1A0E               	xorwf	___fladd@signs^0,f,c
 12990   004E16                     l3724:
 12991   004E16  C010  F011         	movff	___fladd@bexp,___fladd@grs
 12992   004E1A  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 12993   004E1E  C011  F00F         	movff	___fladd@grs,___fladd@aexp
 12994   004E22  C002  F011         	movff	___fladd@b,___fladd@grs
 12995   004E26  C006  F002         	movff	___fladd@a,___fladd@b
 12996   004E2A  C011  F006         	movff	___fladd@grs,___fladd@a
 12997   004E2E  C003  F011         	movff	___fladd@b+1,___fladd@grs
 12998   004E32  C007  F003         	movff	___fladd@a+1,___fladd@b+1
 12999   004E36  C011  F007         	movff	___fladd@grs,___fladd@a+1
 13000   004E3A  C004  F011         	movff	___fladd@b+2,___fladd@grs
 13001   004E3E  C008  F004         	movff	___fladd@a+2,___fladd@b+2
 13002   004E42  C011  F008         	movff	___fladd@grs,___fladd@a+2
 13003   004E46  C005  F011         	movff	___fladd@b+3,___fladd@grs
 13004   004E4A  C009  F005         	movff	___fladd@a+3,___fladd@b+3
 13005   004E4E  C011  F009         	movff	___fladd@grs,___fladd@a+3
 13006   004E52                     l3754:
 13007   004E52  0E00               	movlw	0
 13008   004E54  6E11               	movwf	___fladd@grs^0,c
 13009   004E56  5010               	movf	___fladd@bexp^0,w,c
 13010   004E58  C00F  F00A         	movff	___fladd@aexp,??___fladd
 13011   004E5C  6A0B               	clrf	(??___fladd+1)^0,c
 13012   004E5E  5E0A               	subwf	??___fladd^0,f,c
 13013   004E60  0E00               	movlw	0
 13014   004E62  5A0B               	subwfb	(??___fladd+1)^0,f,c
 13015   004E64  BE0B               	btfsc	(??___fladd+1)^0,7,c
 13016   004E66  EF3E  F027         	goto	u3131
 13017   004E6A  500B               	movf	(??___fladd+1)^0,w,c
 13018   004E6C  E109               	bnz	u3130
 13019   004E6E  0E1A               	movlw	26
 13020   004E70  5C0A               	subwf	??___fladd^0,w,c
 13021   004E72  A0D8               	btfss	status,0,c
 13022   004E74  EF3E  F027         	goto	u3131
 13023   004E78  EF40  F027         	goto	u3130
 13024   004E7C                     u3131:
 13025   004E7C  EF77  F027         	goto	l1091
 13026   004E80                     u3130:
 13027   004E80  5002               	movf	___fladd@b^0,w,c
 13028   004E82  1003               	iorwf	(___fladd@b+1)^0,w,c
 13029   004E84  1004               	iorwf	(___fladd@b+2)^0,w,c
 13030   004E86  1005               	iorwf	(___fladd@b+3)^0,w,c
 13031   004E88  A4D8               	btfss	status,2,c
 13032   004E8A  EF49  F027         	goto	u3141
 13033   004E8E  EF4C  F027         	goto	u3140
 13034   004E92                     u3141:
 13035   004E92  0E01               	movlw	1
 13036   004E94  EF4D  F027         	goto	u3150
 13037   004E98                     u3140:
 13038   004E98  0E00               	movlw	0
 13039   004E9A                     u3150:
 13040   004E9A  6E11               	movwf	___fladd@grs^0,c
 13041   004E9C  0E00               	movlw	0
 13042   004E9E  6E02               	movwf	___fladd@b^0,c
 13043   004EA0  0E00               	movlw	0
 13044   004EA2  6E03               	movwf	(___fladd@b+1)^0,c
 13045   004EA4  0E00               	movlw	0
 13046   004EA6  6E04               	movwf	(___fladd@b+2)^0,c
 13047   004EA8  0E00               	movlw	0
 13048   004EAA  6E05               	movwf	(___fladd@b+3)^0,c
 13049   004EAC  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 13050   004EB0  EF80  F027         	goto	l1090
 13051   004EB4                     l1092:
 13052   004EB4  A011               	btfss	___fladd@grs^0,0,c
 13053   004EB6  EF5F  F027         	goto	u3161
 13054   004EBA  EF61  F027         	goto	u3160
 13055   004EBE                     u3161:
 13056   004EBE  EF67  F027         	goto	l3766
 13057   004EC2                     u3160:
 13058   004EC2  90D8               	bcf	status,0,c
 13059   004EC4  3011               	rrcf	___fladd@grs^0,w,c
 13060   004EC6  0901               	iorlw	1
 13061   004EC8  6E11               	movwf	___fladd@grs^0,c
 13062   004ECA  EF69  F027         	goto	l3768
 13063   004ECE                     l3766:
 13064   004ECE  90D8               	bcf	status,0,c
 13065   004ED0  3211               	rrcf	___fladd@grs^0,f,c
 13066   004ED2                     l3768:
 13067   004ED2  A002               	btfss	___fladd@b^0,0,c
 13068   004ED4  EF6E  F027         	goto	u3171
 13069   004ED8  EF70  F027         	goto	u3170
 13070   004EDC                     u3171:
 13071   004EDC  EF71  F027         	goto	l3772
 13072   004EE0                     u3170:
 13073   004EE0  8E11               	bsf	___fladd@grs^0,7,c
 13074   004EE2                     l3772:
 13075   004EE2  3405               	rlcf	(___fladd@b+3)^0,w,c
 13076   004EE4  3205               	rrcf	(___fladd@b+3)^0,f,c
 13077   004EE6  3204               	rrcf	(___fladd@b+2)^0,f,c
 13078   004EE8  3203               	rrcf	(___fladd@b+1)^0,f,c
 13079   004EEA  3202               	rrcf	___fladd@b^0,f,c
 13080   004EEC  2A10               	incf	___fladd@bexp^0,f,c
 13081   004EEE                     l1091:
 13082   004EEE  500F               	movf	___fladd@aexp^0,w,c
 13083   004EF0  5C10               	subwf	___fladd@bexp^0,w,c
 13084   004EF2  A0D8               	btfss	status,0,c
 13085   004EF4  EF7E  F027         	goto	u3181
 13086   004EF8  EF80  F027         	goto	u3180
 13087   004EFC                     u3181:
 13088   004EFC  EF5A  F027         	goto	l1092
 13089   004F00                     u3180:
 13090   004F00                     l1090:
 13091   004F00  BC0E               	btfsc	___fladd@signs^0,6,c
 13092   004F02  EF85  F027         	goto	u3191
 13093   004F06  EF87  F027         	goto	u3190
 13094   004F0A                     u3191:
 13095   004F0A  EFC7  F027         	goto	l3800
 13096   004F0E                     u3190:
 13097   004F0E  5010               	movf	___fladd@bexp^0,w,c
 13098   004F10  A4D8               	btfss	status,2,c
 13099   004F12  EF8D  F027         	goto	u3201
 13100   004F16  EF8F  F027         	goto	u3200
 13101   004F1A                     u3201:
 13102   004F1A  EF99  F027         	goto	l3782
 13103   004F1E                     u3200:
 13104   004F1E  0E00               	movlw	0
 13105   004F20  6E02               	movwf	?___fladd^0,c
 13106   004F22  0E00               	movlw	0
 13107   004F24  6E03               	movwf	(?___fladd+1)^0,c
 13108   004F26  0E00               	movlw	0
 13109   004F28  6E04               	movwf	(?___fladd+2)^0,c
 13110   004F2A  0E00               	movlw	0
 13111   004F2C  6E05               	movwf	(?___fladd+3)^0,c
 13112   004F2E  EFE8  F028         	goto	l1099
 13113   004F32                     l3782:
 13114   004F32  5006               	movf	___fladd@a^0,w,c
 13115   004F34  2602               	addwf	___fladd@b^0,f,c
 13116   004F36  5007               	movf	(___fladd@a+1)^0,w,c
 13117   004F38  2203               	addwfc	(___fladd@b+1)^0,f,c
 13118   004F3A  5008               	movf	(___fladd@a+2)^0,w,c
 13119   004F3C  2204               	addwfc	(___fladd@b+2)^0,f,c
 13120   004F3E  5009               	movf	(___fladd@a+3)^0,w,c
 13121   004F40  2205               	addwfc	(___fladd@b+3)^0,f,c
 13122   004F42  A005               	btfss	(___fladd@b+3)^0,0,c
 13123   004F44  EFA6  F027         	goto	u3211
 13124   004F48  EFA8  F027         	goto	u3210
 13125   004F4C                     u3211:
 13126   004F4C  EF54  F028         	goto	l3836
 13127   004F50                     u3210:
 13128   004F50  A011               	btfss	___fladd@grs^0,0,c
 13129   004F52  EFAD  F027         	goto	u3221
 13130   004F56  EFAF  F027         	goto	u3220
 13131   004F5A                     u3221:
 13132   004F5A  EFB5  F027         	goto	l3790
 13133   004F5E                     u3220:
 13134   004F5E  90D8               	bcf	status,0,c
 13135   004F60  3011               	rrcf	___fladd@grs^0,w,c
 13136   004F62  0901               	iorlw	1
 13137   004F64  6E11               	movwf	___fladd@grs^0,c
 13138   004F66  EFB7  F027         	goto	l3792
 13139   004F6A                     l3790:
 13140   004F6A  90D8               	bcf	status,0,c
 13141   004F6C  3211               	rrcf	___fladd@grs^0,f,c
 13142   004F6E                     l3792:
 13143   004F6E  A002               	btfss	___fladd@b^0,0,c
 13144   004F70  EFBC  F027         	goto	u3231
 13145   004F74  EFBE  F027         	goto	u3230
 13146   004F78                     u3231:
 13147   004F78  EFBF  F027         	goto	l3796
 13148   004F7C                     u3230:
 13149   004F7C  8E11               	bsf	___fladd@grs^0,7,c
 13150   004F7E                     l3796:
 13151   004F7E  3405               	rlcf	(___fladd@b+3)^0,w,c
 13152   004F80  3205               	rrcf	(___fladd@b+3)^0,f,c
 13153   004F82  3204               	rrcf	(___fladd@b+2)^0,f,c
 13154   004F84  3203               	rrcf	(___fladd@b+1)^0,f,c
 13155   004F86  3202               	rrcf	___fladd@b^0,f,c
 13156   004F88  2A10               	incf	___fladd@bexp^0,f,c
 13157   004F8A  EF54  F028         	goto	l3836
 13158   004F8E                     l3800:
 13159   004F8E  5006               	movf	___fladd@a^0,w,c
 13160   004F90  5C02               	subwf	___fladd@b^0,w,c
 13161   004F92  5007               	movf	(___fladd@a+1)^0,w,c
 13162   004F94  5803               	subwfb	(___fladd@b+1)^0,w,c
 13163   004F96  5008               	movf	(___fladd@a+2)^0,w,c
 13164   004F98  5804               	subwfb	(___fladd@b+2)^0,w,c
 13165   004F9A  5005               	movf	(___fladd@b+3)^0,w,c
 13166   004F9C  0A80               	xorlw	128
 13167   004F9E  6E0A               	movwf	??___fladd^0,c
 13168   004FA0  5009               	movf	(___fladd@a+3)^0,w,c
 13169   004FA2  0A80               	xorlw	128
 13170   004FA4  580A               	subwfb	??___fladd^0,w,c
 13171   004FA6  B0D8               	btfsc	status,0,c
 13172   004FA8  EFD8  F027         	goto	u3241
 13173   004FAC  EFDA  F027         	goto	u3240
 13174   004FB0                     u3241:
 13175   004FB0  EF05  F028         	goto	l3810
 13176   004FB4                     u3240:
 13177   004FB4  5002               	movf	___fladd@b^0,w,c
 13178   004FB6  5C06               	subwf	___fladd@a^0,w,c
 13179   004FB8  6E0A               	movwf	??___fladd^0,c
 13180   004FBA  5003               	movf	(___fladd@b+1)^0,w,c
 13181   004FBC  5807               	subwfb	(___fladd@a+1)^0,w,c
 13182   004FBE  6E0B               	movwf	(??___fladd+1)^0,c
 13183   004FC0  5004               	movf	(___fladd@b+2)^0,w,c
 13184   004FC2  5808               	subwfb	(___fladd@a+2)^0,w,c
 13185   004FC4  6E0C               	movwf	(??___fladd+2)^0,c
 13186   004FC6  5005               	movf	(___fladd@b+3)^0,w,c
 13187   004FC8  5809               	subwfb	(___fladd@a+3)^0,w,c
 13188   004FCA  6E0D               	movwf	(??___fladd+3)^0,c
 13189   004FCC  0EFF               	movlw	255
 13190   004FCE  240A               	addwf	??___fladd^0,w,c
 13191   004FD0  6E02               	movwf	___fladd@b^0,c
 13192   004FD2  0EFF               	movlw	255
 13193   004FD4  200B               	addwfc	(??___fladd+1)^0,w,c
 13194   004FD6  6E03               	movwf	(___fladd@b+1)^0,c
 13195   004FD8  0EFF               	movlw	255
 13196   004FDA  200C               	addwfc	(??___fladd+2)^0,w,c
 13197   004FDC  6E04               	movwf	(___fladd@b+2)^0,c
 13198   004FDE  0EFF               	movlw	255
 13199   004FE0  200D               	addwfc	(??___fladd+3)^0,w,c
 13200   004FE2  6E05               	movwf	(___fladd@b+3)^0,c
 13201   004FE4  0E80               	movlw	128
 13202   004FE6  1A0E               	xorwf	___fladd@signs^0,f,c
 13203   004FE8  6C11               	negf	___fladd@grs^0,c
 13204   004FEA  5011               	movf	___fladd@grs^0,w,c
 13205   004FEC  A4D8               	btfss	status,2,c
 13206   004FEE  EFFB  F027         	goto	u3251
 13207   004FF2  EFFD  F027         	goto	u3250
 13208   004FF6                     u3251:
 13209   004FF6  EF0D  F028         	goto	l1107
 13210   004FFA                     u3250:
 13211   004FFA  0E01               	movlw	1
 13212   004FFC  2602               	addwf	___fladd@b^0,f,c
 13213   004FFE  0E00               	movlw	0
 13214   005000  2203               	addwfc	(___fladd@b+1)^0,f,c
 13215   005002  2204               	addwfc	(___fladd@b+2)^0,f,c
 13216   005004  2205               	addwfc	(___fladd@b+3)^0,f,c
 13217   005006  EF0D  F028         	goto	l1107
 13218   00500A                     l3810:
 13219   00500A  5006               	movf	___fladd@a^0,w,c
 13220   00500C  5E02               	subwf	___fladd@b^0,f,c
 13221   00500E  5007               	movf	(___fladd@a+1)^0,w,c
 13222   005010  5A03               	subwfb	(___fladd@b+1)^0,f,c
 13223   005012  5008               	movf	(___fladd@a+2)^0,w,c
 13224   005014  5A04               	subwfb	(___fladd@b+2)^0,f,c
 13225   005016  5009               	movf	(___fladd@a+3)^0,w,c
 13226   005018  5A05               	subwfb	(___fladd@b+3)^0,f,c
 13227   00501A                     l1107:
 13228   00501A  5002               	movf	___fladd@b^0,w,c
 13229   00501C  1003               	iorwf	(___fladd@b+1)^0,w,c
 13230   00501E  1004               	iorwf	(___fladd@b+2)^0,w,c
 13231   005020  1005               	iorwf	(___fladd@b+3)^0,w,c
 13232   005022  A4D8               	btfss	status,2,c
 13233   005024  EF16  F028         	goto	u3261
 13234   005028  EF18  F028         	goto	u3260
 13235   00502C                     u3261:
 13236   00502C  EF4D  F028         	goto	l3834
 13237   005030                     u3260:
 13238   005030  5011               	movf	___fladd@grs^0,w,c
 13239   005032  A4D8               	btfss	status,2,c
 13240   005034  EF1E  F028         	goto	u3271
 13241   005038  EF20  F028         	goto	u3270
 13242   00503C                     u3271:
 13243   00503C  EF4D  F028         	goto	l3834
 13244   005040                     u3270:
 13245   005040  0E00               	movlw	0
 13246   005042  6E02               	movwf	?___fladd^0,c
 13247   005044  0E00               	movlw	0
 13248   005046  6E03               	movwf	(?___fladd+1)^0,c
 13249   005048  0E00               	movlw	0
 13250   00504A  6E04               	movwf	(?___fladd+2)^0,c
 13251   00504C  0E00               	movlw	0
 13252   00504E  6E05               	movwf	(?___fladd+3)^0,c
 13253   005050  EFE8  F028         	goto	l1099
 13254   005054                     l3818:
 13255   005054  90D8               	bcf	status,0,c
 13256   005056  3602               	rlcf	___fladd@b^0,f,c
 13257   005058  3603               	rlcf	(___fladd@b+1)^0,f,c
 13258   00505A  3604               	rlcf	(___fladd@b+2)^0,f,c
 13259   00505C  3605               	rlcf	(___fladd@b+3)^0,f,c
 13260   00505E  AE11               	btfss	___fladd@grs^0,7,c
 13261   005060  EF34  F028         	goto	u3281
 13262   005064  EF36  F028         	goto	u3280
 13263   005068                     u3281:
 13264   005068  EF37  F028         	goto	l3824
 13265   00506C                     u3280:
 13266   00506C  8002               	bsf	___fladd@b^0,0,c
 13267   00506E                     l3824:
 13268   00506E  A011               	btfss	___fladd@grs^0,0,c
 13269   005070  EF3C  F028         	goto	u3291
 13270   005074  EF3E  F028         	goto	u3290
 13271   005078                     u3291:
 13272   005078  EF42  F028         	goto	l3828
 13273   00507C                     u3290:
 13274   00507C  80D8               	bsf	status,0,c
 13275   00507E  3611               	rlcf	___fladd@grs^0,f,c
 13276   005080  EF44  F028         	goto	l3830
 13277   005084                     l3828:
 13278   005084  90D8               	bcf	status,0,c
 13279   005086  3611               	rlcf	___fladd@grs^0,f,c
 13280   005088                     l3830:
 13281   005088  5010               	movf	___fladd@bexp^0,w,c
 13282   00508A  B4D8               	btfsc	status,2,c
 13283   00508C  EF4A  F028         	goto	u3301
 13284   005090  EF4C  F028         	goto	u3300
 13285   005094                     u3301:
 13286   005094  EF4D  F028         	goto	l3834
 13287   005098                     u3300:
 13288   005098  0610               	decf	___fladd@bexp^0,f,c
 13289   00509A                     l3834:
 13290   00509A  AE04               	btfss	(___fladd@b+2)^0,7,c
 13291   00509C  EF52  F028         	goto	u3311
 13292   0050A0  EF54  F028         	goto	u3310
 13293   0050A4                     u3311:
 13294   0050A4  EF2A  F028         	goto	l3818
 13295   0050A8                     u3310:
 13296   0050A8                     l3836:
 13297   0050A8  0E00               	movlw	0
 13298   0050AA  6E0F               	movwf	___fladd@aexp^0,c
 13299   0050AC  AE11               	btfss	___fladd@grs^0,7,c
 13300   0050AE  EF5B  F028         	goto	u3321
 13301   0050B2  EF5D  F028         	goto	u3320
 13302   0050B6                     u3321:
 13303   0050B6  EF75  F028         	goto	l1116
 13304   0050BA                     u3320:
 13305   0050BA  C011  F00A         	movff	___fladd@grs,??___fladd
 13306   0050BE  0E7F               	movlw	127
 13307   0050C0  160A               	andwf	??___fladd^0,f,c
 13308   0050C2  B4D8               	btfsc	status,2,c
 13309   0050C4  EF66  F028         	goto	u3331
 13310   0050C8  EF68  F028         	goto	u3330
 13311   0050CC                     u3331:
 13312   0050CC  EF6C  F028         	goto	l1117
 13313   0050D0                     u3330:
 13314   0050D0                     l3842:
 13315   0050D0  0E01               	movlw	1
 13316   0050D2  6E0F               	movwf	___fladd@aexp^0,c
 13317   0050D4  EF75  F028         	goto	l1116
 13318   0050D8                     l1117:
 13319   0050D8  A002               	btfss	___fladd@b^0,0,c
 13320   0050DA  EF71  F028         	goto	u3341
 13321   0050DE  EF73  F028         	goto	u3340
 13322   0050E2                     u3341:
 13323   0050E2  EF75  F028         	goto	l1116
 13324   0050E6                     u3340:
 13325   0050E6  EF68  F028         	goto	l3842
 13326   0050EA                     l1116:
 13327   0050EA  500F               	movf	___fladd@aexp^0,w,c
 13328   0050EC  B4D8               	btfsc	status,2,c
 13329   0050EE  EF7B  F028         	goto	u3351
 13330   0050F2  EF7D  F028         	goto	u3350
 13331   0050F6                     u3351:
 13332   0050F6  EFA8  F028         	goto	l3854
 13333   0050FA                     u3350:
 13334   0050FA  0E01               	movlw	1
 13335   0050FC  2602               	addwf	___fladd@b^0,f,c
 13336   0050FE  0E00               	movlw	0
 13337   005100  2203               	addwfc	(___fladd@b+1)^0,f,c
 13338   005102  2204               	addwfc	(___fladd@b+2)^0,f,c
 13339   005104  2205               	addwfc	(___fladd@b+3)^0,f,c
 13340   005106  A005               	btfss	(___fladd@b+3)^0,0,c
 13341   005108  EF88  F028         	goto	u3361
 13342   00510C  EF8A  F028         	goto	u3360
 13343   005110                     u3361:
 13344   005110  EFA8  F028         	goto	l3854
 13345   005114                     u3360:
 13346   005114  C002  F00A         	movff	___fladd@b,??___fladd
 13347   005118  C003  F00B         	movff	___fladd@b+1,??___fladd+1
 13348   00511C  C004  F00C         	movff	___fladd@b+2,??___fladd+2
 13349   005120  C005  F00D         	movff	___fladd@b+3,??___fladd+3
 13350   005124  340D               	rlcf	(??___fladd+3)^0,w,c
 13351   005126  320D               	rrcf	(??___fladd+3)^0,f,c
 13352   005128  320C               	rrcf	(??___fladd+2)^0,f,c
 13353   00512A  320B               	rrcf	(??___fladd+1)^0,f,c
 13354   00512C  320A               	rrcf	??___fladd^0,f,c
 13355   00512E  C00A  F002         	movff	??___fladd,___fladd@b
 13356   005132  C00B  F003         	movff	??___fladd+1,___fladd@b+1
 13357   005136  C00C  F004         	movff	??___fladd+2,___fladd@b+2
 13358   00513A  C00D  F005         	movff	??___fladd+3,___fladd@b+3
 13359   00513E  2810               	incf	___fladd@bexp^0,w,c
 13360   005140  B4D8               	btfsc	status,2,c
 13361   005142  EFA5  F028         	goto	u3371
 13362   005146  EFA7  F028         	goto	u3370
 13363   00514A                     u3371:
 13364   00514A  EFA8  F028         	goto	l3854
 13365   00514E                     u3370:
 13366   00514E  2A10               	incf	___fladd@bexp^0,f,c
 13367   005150                     l3854:
 13368   005150  2810               	incf	___fladd@bexp^0,w,c
 13369   005152  B4D8               	btfsc	status,2,c
 13370   005154  EFAE  F028         	goto	u3381
 13371   005158  EFB0  F028         	goto	u3380
 13372   00515C                     u3381:
 13373   00515C  EFB8  F028         	goto	l3858
 13374   005160                     u3380:
 13375   005160  5010               	movf	___fladd@bexp^0,w,c
 13376   005162  A4D8               	btfss	status,2,c
 13377   005164  EFB6  F028         	goto	u3391
 13378   005168  EFB8  F028         	goto	u3390
 13379   00516C                     u3391:
 13380   00516C  EFCA  F028         	goto	l3862
 13381   005170                     u3390:
 13382   005170                     l3858:
 13383   005170  0E00               	movlw	0
 13384   005172  6E02               	movwf	___fladd@b^0,c
 13385   005174  0E00               	movlw	0
 13386   005176  6E03               	movwf	(___fladd@b+1)^0,c
 13387   005178  0E00               	movlw	0
 13388   00517A  6E04               	movwf	(___fladd@b+2)^0,c
 13389   00517C  0E00               	movlw	0
 13390   00517E  6E05               	movwf	(___fladd@b+3)^0,c
 13391   005180  5010               	movf	___fladd@bexp^0,w,c
 13392   005182  A4D8               	btfss	status,2,c
 13393   005184  EFC6  F028         	goto	u3401
 13394   005188  EFC8  F028         	goto	u3400
 13395   00518C                     u3401:
 13396   00518C  EFCA  F028         	goto	l3862
 13397   005190                     u3400:
 13398   005190  0E00               	movlw	0
 13399   005192  6E0E               	movwf	___fladd@signs^0,c
 13400   005194                     l3862:
 13401   005194  A010               	btfss	___fladd@bexp^0,0,c
 13402   005196  EFCF  F028         	goto	u3411
 13403   00519A  EFD1  F028         	goto	u3410
 13404   00519E                     u3411:
 13405   00519E  EFD4  F028         	goto	l3866
 13406   0051A2                     u3410:
 13407   0051A2  8E04               	bsf	(___fladd@b+2)^0,7,c
 13408   0051A4  EFD5  F028         	goto	l3868
 13409   0051A8                     l3866:
 13410   0051A8  9E04               	bcf	(___fladd@b+2)^0,7,c
 13411   0051AA                     l3868:
 13412   0051AA  90D8               	bcf	status,0,c
 13413   0051AC  3010               	rrcf	___fladd@bexp^0,w,c
 13414   0051AE  6E05               	movwf	(___fladd@b+3)^0,c
 13415   0051B0  AE0E               	btfss	___fladd@signs^0,7,c
 13416   0051B2  EFDD  F028         	goto	u3421
 13417   0051B6  EFDF  F028         	goto	u3420
 13418   0051BA                     u3421:
 13419   0051BA  EFE0  F028         	goto	l3874
 13420   0051BE                     u3420:
 13421   0051BE  8E05               	bsf	(___fladd@b+3)^0,7,c
 13422   0051C0                     l3874:
 13423   0051C0  C002  F002         	movff	___fladd@b,?___fladd
 13424   0051C4  C003  F003         	movff	___fladd@b+1,?___fladd+1
 13425   0051C8  C004  F004         	movff	___fladd@b+2,?___fladd+2
 13426   0051CC  C005  F005         	movff	___fladd@b+3,?___fladd+3
 13427   0051D0                     l1099:
 13428   0051D0  0012               	return		;funcret
 13429   0051D2                     __end_of___fladd:
 13430                           	callstack 0
 13431                           
 13432 ;; *************** function ___flneg *****************
 13433 ;; Defined at:
 13434 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
 13435 ;; Parameters:    Size  Location     Type
 13436 ;;  f1              4    1[COMRAM] unsigned char 
 13437 ;; Auto vars:     Size  Location     Type
 13438 ;;		None
 13439 ;; Return value:  Size  Location     Type
 13440 ;;                  4    1[COMRAM] unsigned char 
 13441 ;; Registers used:
 13442 ;;		wreg, status,2, status,0
 13443 ;; Tracked objects:
 13444 ;;		On entry : 0/0
 13445 ;;		On exit  : 0/0
 13446 ;;		Unchanged: 0/0
 13447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13451 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13452 ;;Total ram usage:        4 bytes
 13453 ;; Hardware stack levels used: 1
 13454 ;; Hardware stack levels required when called: 2
 13455 ;; This function calls:
 13456 ;;		Nothing
 13457 ;; This function is called by:
 13458 ;;		_powf
 13459 ;; This function uses a non-reentrant model
 13460 ;;
 13461                           
 13462                           	psect	text36
 13463   00749C                     __ptext36:
 13464                           	callstack 0
 13465   00749C                     ___flneg:
 13466                           	callstack 26
 13467   00749C  5002               	movf	___flneg@f1^0,w,c
 13468   00749E  1003               	iorwf	(___flneg@f1+1)^0,w,c
 13469   0074A0  1004               	iorwf	(___flneg@f1+2)^0,w,c
 13470   0074A2  1005               	iorwf	(___flneg@f1+3)^0,w,c
 13471   0074A4  B4D8               	btfsc	status,2,c
 13472   0074A6  EF57  F03A         	goto	u4281
 13473   0074AA  EF59  F03A         	goto	u4280
 13474   0074AE                     u4281:
 13475   0074AE  EF61  F03A         	goto	l4410
 13476   0074B2                     u4280:
 13477   0074B2  0E00               	movlw	0
 13478   0074B4  1A02               	xorwf	___flneg@f1^0,f,c
 13479   0074B6  0E00               	movlw	0
 13480   0074B8  1A03               	xorwf	(___flneg@f1+1)^0,f,c
 13481   0074BA  0E00               	movlw	0
 13482   0074BC  1A04               	xorwf	(___flneg@f1+2)^0,f,c
 13483   0074BE  0E80               	movlw	128
 13484   0074C0  1A05               	xorwf	(___flneg@f1+3)^0,f,c
 13485   0074C2                     l4410:
 13486   0074C2  C002  F002         	movff	___flneg@f1,?___flneg
 13487   0074C6  C003  F003         	movff	___flneg@f1+1,?___flneg+1
 13488   0074CA  C004  F004         	movff	___flneg@f1+2,?___flneg+2
 13489   0074CE  C005  F005         	movff	___flneg@f1+3,?___flneg+3
 13490   0074D2  0012               	return		;funcret
 13491   0074D4                     __end_of___flneg:
 13492                           	callstack 0
 13493                           
 13494 ;; *************** function ___flge *****************
 13495 ;; Defined at:
 13496 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 13497 ;; Parameters:    Size  Location     Type
 13498 ;;  ff1             4   75[COMRAM] unsigned char 
 13499 ;;  ff2             4   79[COMRAM] unsigned char 
 13500 ;; Auto vars:     Size  Location     Type
 13501 ;;		None
 13502 ;; Return value:  Size  Location     Type
 13503 ;;		None               void
 13504 ;; Registers used:
 13505 ;;		wreg, status,2, status,0
 13506 ;; Tracked objects:
 13507 ;;		On entry : 0/0
 13508 ;;		On exit  : 0/0
 13509 ;;		Unchanged: 0/0
 13510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13511 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13513 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13514 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13515 ;;Total ram usage:       12 bytes
 13516 ;; Hardware stack levels used: 1
 13517 ;; Hardware stack levels required when called: 2
 13518 ;; This function calls:
 13519 ;;		Nothing
 13520 ;; This function is called by:
 13521 ;;		_decide_action
 13522 ;;		_powf
 13523 ;; This function uses a non-reentrant model
 13524 ;;
 13525                           
 13526                           	psect	text37
 13527   0066A8                     __ptext37:
 13528                           	callstack 0
 13529   0066A8                     ___flge:
 13530                           	callstack 26
 13531   0066A8  0E00               	movlw	0
 13532   0066AA  144C               	andwf	___flge@ff1^0,w,c
 13533   0066AC  6E54               	movwf	??___flge^0,c
 13534   0066AE  0E00               	movlw	0
 13535   0066B0  144D               	andwf	(___flge@ff1+1)^0,w,c
 13536   0066B2  6E55               	movwf	(??___flge+1)^0,c
 13537   0066B4  0E80               	movlw	128
 13538   0066B6  144E               	andwf	(___flge@ff1+2)^0,w,c
 13539   0066B8  6E56               	movwf	(??___flge+2)^0,c
 13540   0066BA  0E7F               	movlw	127
 13541   0066BC  144F               	andwf	(___flge@ff1+3)^0,w,c
 13542   0066BE  6E57               	movwf	(??___flge+3)^0,c
 13543   0066C0  5054               	movf	??___flge^0,w,c
 13544   0066C2  1055               	iorwf	(??___flge+1)^0,w,c
 13545   0066C4  1056               	iorwf	(??___flge+2)^0,w,c
 13546   0066C6  1057               	iorwf	(??___flge+3)^0,w,c
 13547   0066C8  A4D8               	btfss	status,2,c
 13548   0066CA  EF69  F033         	goto	u4231
 13549   0066CE  EF6B  F033         	goto	u4230
 13550   0066D2                     u4231:
 13551   0066D2  EF73  F033         	goto	l4388
 13552   0066D6                     u4230:
 13553   0066D6  0E00               	movlw	0
 13554   0066D8  6E4C               	movwf	___flge@ff1^0,c
 13555   0066DA  0E00               	movlw	0
 13556   0066DC  6E4D               	movwf	(___flge@ff1+1)^0,c
 13557   0066DE  0E00               	movlw	0
 13558   0066E0  6E4E               	movwf	(___flge@ff1+2)^0,c
 13559   0066E2  0E00               	movlw	0
 13560   0066E4  6E4F               	movwf	(___flge@ff1+3)^0,c
 13561   0066E6                     l4388:
 13562   0066E6  0E00               	movlw	0
 13563   0066E8  1450               	andwf	___flge@ff2^0,w,c
 13564   0066EA  6E54               	movwf	??___flge^0,c
 13565   0066EC  0E00               	movlw	0
 13566   0066EE  1451               	andwf	(___flge@ff2+1)^0,w,c
 13567   0066F0  6E55               	movwf	(??___flge+1)^0,c
 13568   0066F2  0E80               	movlw	128
 13569   0066F4  1452               	andwf	(___flge@ff2+2)^0,w,c
 13570   0066F6  6E56               	movwf	(??___flge+2)^0,c
 13571   0066F8  0E7F               	movlw	127
 13572   0066FA  1453               	andwf	(___flge@ff2+3)^0,w,c
 13573   0066FC  6E57               	movwf	(??___flge+3)^0,c
 13574   0066FE  5054               	movf	??___flge^0,w,c
 13575   006700  1055               	iorwf	(??___flge+1)^0,w,c
 13576   006702  1056               	iorwf	(??___flge+2)^0,w,c
 13577   006704  1057               	iorwf	(??___flge+3)^0,w,c
 13578   006706  A4D8               	btfss	status,2,c
 13579   006708  EF88  F033         	goto	u4241
 13580   00670C  EF8A  F033         	goto	u4240
 13581   006710                     u4241:
 13582   006710  EF92  F033         	goto	l4392
 13583   006714                     u4240:
 13584   006714  0E00               	movlw	0
 13585   006716  6E50               	movwf	___flge@ff2^0,c
 13586   006718  0E00               	movlw	0
 13587   00671A  6E51               	movwf	(___flge@ff2+1)^0,c
 13588   00671C  0E00               	movlw	0
 13589   00671E  6E52               	movwf	(___flge@ff2+2)^0,c
 13590   006720  0E00               	movlw	0
 13591   006722  6E53               	movwf	(___flge@ff2+3)^0,c
 13592   006724                     l4392:
 13593   006724  AE4F               	btfss	(___flge@ff1+3)^0,7,c
 13594   006726  EF97  F033         	goto	u4251
 13595   00672A  EF99  F033         	goto	u4250
 13596   00672E                     u4251:
 13597   00672E  EFA2  F033         	goto	l4396
 13598   006732                     u4250:
 13599   006732  6C4C               	negf	___flge@ff1^0,c
 13600   006734  1E4D               	comf	(___flge@ff1+1)^0,f,c
 13601   006736  B0D8               	btfsc	status,0,c
 13602   006738  2A4D               	incf	(___flge@ff1+1)^0,f,c
 13603   00673A  1E4E               	comf	(___flge@ff1+2)^0,f,c
 13604   00673C  B0D8               	btfsc	status,0,c
 13605   00673E  2A4E               	incf	(___flge@ff1+2)^0,f,c
 13606   006740  0E80               	movlw	128
 13607   006742  564F               	subfwb	(___flge@ff1+3)^0,f,c
 13608   006744                     l4396:
 13609   006744  AE53               	btfss	(___flge@ff2+3)^0,7,c
 13610   006746  EFA7  F033         	goto	u4261
 13611   00674A  EFA9  F033         	goto	u4260
 13612   00674E                     u4261:
 13613   00674E  EFB2  F033         	goto	l827
 13614   006752                     u4260:
 13615   006752  6C50               	negf	___flge@ff2^0,c
 13616   006754  1E51               	comf	(___flge@ff2+1)^0,f,c
 13617   006756  B0D8               	btfsc	status,0,c
 13618   006758  2A51               	incf	(___flge@ff2+1)^0,f,c
 13619   00675A  1E52               	comf	(___flge@ff2+2)^0,f,c
 13620   00675C  B0D8               	btfsc	status,0,c
 13621   00675E  2A52               	incf	(___flge@ff2+2)^0,f,c
 13622   006760  0E80               	movlw	128
 13623   006762  5653               	subfwb	(___flge@ff2+3)^0,f,c
 13624   006764                     l827:
 13625   006764  0E00               	movlw	0
 13626   006766  1A4C               	xorwf	___flge@ff1^0,f,c
 13627   006768  0E00               	movlw	0
 13628   00676A  1A4D               	xorwf	(___flge@ff1+1)^0,f,c
 13629   00676C  0E00               	movlw	0
 13630   00676E  1A4E               	xorwf	(___flge@ff1+2)^0,f,c
 13631   006770  0E80               	movlw	128
 13632   006772  1A4F               	xorwf	(___flge@ff1+3)^0,f,c
 13633   006774  0E00               	movlw	0
 13634   006776  1A50               	xorwf	___flge@ff2^0,f,c
 13635   006778  0E00               	movlw	0
 13636   00677A  1A51               	xorwf	(___flge@ff2+1)^0,f,c
 13637   00677C  0E00               	movlw	0
 13638   00677E  1A52               	xorwf	(___flge@ff2+2)^0,f,c
 13639   006780  0E80               	movlw	128
 13640   006782  1A53               	xorwf	(___flge@ff2+3)^0,f,c
 13641   006784  5050               	movf	___flge@ff2^0,w,c
 13642   006786  5C4C               	subwf	___flge@ff1^0,w,c
 13643   006788  5051               	movf	(___flge@ff2+1)^0,w,c
 13644   00678A  584D               	subwfb	(___flge@ff1+1)^0,w,c
 13645   00678C  5052               	movf	(___flge@ff2+2)^0,w,c
 13646   00678E  584E               	subwfb	(___flge@ff1+2)^0,w,c
 13647   006790  5053               	movf	(___flge@ff2+3)^0,w,c
 13648   006792  584F               	subwfb	(___flge@ff1+3)^0,w,c
 13649   006794  B0D8               	btfsc	status,0,c
 13650   006796  EFCF  F033         	goto	u4271
 13651   00679A  EFD1  F033         	goto	u4270
 13652   00679E                     u4271:
 13653   00679E  EFD4  F033         	goto	l4402
 13654   0067A2                     u4270:
 13655   0067A2  90D8               	bcf	status,0,c
 13656   0067A4  EFD5  F033         	goto	l832
 13657   0067A8                     l4402:
 13658   0067A8  80D8               	bsf	status,0,c
 13659   0067AA                     l832:
 13660   0067AA  0012               	return		;funcret
 13661   0067AC                     __end_of___flge:
 13662                           	callstack 0
 13663                           
 13664 ;; *************** function ___fldiv *****************
 13665 ;; Defined at:
 13666 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 13667 ;; Parameters:    Size  Location     Type
 13668 ;;  b               4   42[COMRAM] unsigned char 
 13669 ;;  a               4   46[COMRAM] unsigned char 
 13670 ;; Auto vars:     Size  Location     Type
 13671 ;;  grs             4   61[COMRAM] unsigned long 
 13672 ;;  rem             4   54[COMRAM] unsigned long 
 13673 ;;  new_exp         2   59[COMRAM] short 
 13674 ;;  aexp            1   66[COMRAM] unsigned char 
 13675 ;;  bexp            1   65[COMRAM] unsigned char 
 13676 ;;  sign            1   58[COMRAM] unsigned char 
 13677 ;; Return value:  Size  Location     Type
 13678 ;;                  4   42[COMRAM] unsigned char 
 13679 ;; Registers used:
 13680 ;;		wreg, status,2, status,0
 13681 ;; Tracked objects:
 13682 ;;		On entry : 0/0
 13683 ;;		On exit  : 0/0
 13684 ;;		Unchanged: 0/0
 13685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13686 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13687 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13688 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13689 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13690 ;;Total ram usage:       25 bytes
 13691 ;; Hardware stack levels used: 1
 13692 ;; Hardware stack levels required when called: 2
 13693 ;; This function calls:
 13694 ;;		Nothing
 13695 ;; This function is called by:
 13696 ;;		_decide_action
 13697 ;;		_powf
 13698 ;; This function uses a non-reentrant model
 13699 ;;
 13700                           
 13701                           	psect	text38
 13702   0059DA                     __ptext38:
 13703                           	callstack 0
 13704   0059DA                     ___fldiv:
 13705                           	callstack 26
 13706   0059DA  502E               	movf	(___fldiv@b+3)^0,w,c
 13707   0059DC  0B80               	andlw	128
 13708   0059DE  6E3B               	movwf	___fldiv@sign^0,c
 13709   0059E0  502E               	movf	(___fldiv@b+3)^0,w,c
 13710   0059E2  242E               	addwf	(___fldiv@b+3)^0,w,c
 13711   0059E4  6E42               	movwf	___fldiv@bexp^0,c
 13712   0059E6  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 13713   0059E8  EFF8  F02C         	goto	u4001
 13714   0059EC  EFFA  F02C         	goto	u4000
 13715   0059F0                     u4001:
 13716   0059F0  EFFB  F02C         	goto	l4246
 13717   0059F4                     u4000:
 13718   0059F4  8042               	bsf	___fldiv@bexp^0,0,c
 13719   0059F6                     l4246:
 13720   0059F6  5042               	movf	___fldiv@bexp^0,w,c
 13721   0059F8  B4D8               	btfsc	status,2,c
 13722   0059FA  EF01  F02D         	goto	u4011
 13723   0059FE  EF03  F02D         	goto	u4010
 13724   005A02                     u4011:
 13725   005A02  EF18  F02D         	goto	l4256
 13726   005A06                     u4010:
 13727   005A06  2842               	incf	___fldiv@bexp^0,w,c
 13728   005A08  A4D8               	btfss	status,2,c
 13729   005A0A  EF09  F02D         	goto	u4021
 13730   005A0E  EF0B  F02D         	goto	u4020
 13731   005A12                     u4021:
 13732   005A12  EF13  F02D         	goto	l4252
 13733   005A16                     u4020:
 13734   005A16  0E00               	movlw	0
 13735   005A18  6E2B               	movwf	___fldiv@b^0,c
 13736   005A1A  0E00               	movlw	0
 13737   005A1C  6E2C               	movwf	(___fldiv@b+1)^0,c
 13738   005A1E  0E00               	movlw	0
 13739   005A20  6E2D               	movwf	(___fldiv@b+2)^0,c
 13740   005A22  0E00               	movlw	0
 13741   005A24  6E2E               	movwf	(___fldiv@b+3)^0,c
 13742   005A26                     l4252:
 13743   005A26  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 13744   005A28  0E00               	movlw	0
 13745   005A2A  6E2E               	movwf	(___fldiv@b+3)^0,c
 13746   005A2C  EF20  F02D         	goto	l4258
 13747   005A30                     l4256:
 13748   005A30  0E00               	movlw	0
 13749   005A32  6E2B               	movwf	___fldiv@b^0,c
 13750   005A34  0E00               	movlw	0
 13751   005A36  6E2C               	movwf	(___fldiv@b+1)^0,c
 13752   005A38  0E00               	movlw	0
 13753   005A3A  6E2D               	movwf	(___fldiv@b+2)^0,c
 13754   005A3C  0E00               	movlw	0
 13755   005A3E  6E2E               	movwf	(___fldiv@b+3)^0,c
 13756   005A40                     l4258:
 13757   005A40  5032               	movf	(___fldiv@a+3)^0,w,c
 13758   005A42  0B80               	andlw	128
 13759   005A44  1A3B               	xorwf	___fldiv@sign^0,f,c
 13760   005A46  5032               	movf	(___fldiv@a+3)^0,w,c
 13761   005A48  2432               	addwf	(___fldiv@a+3)^0,w,c
 13762   005A4A  6E43               	movwf	___fldiv@aexp^0,c
 13763   005A4C  AE31               	btfss	(___fldiv@a+2)^0,7,c
 13764   005A4E  EF2B  F02D         	goto	u4031
 13765   005A52  EF2D  F02D         	goto	u4030
 13766   005A56                     u4031:
 13767   005A56  EF2E  F02D         	goto	l4266
 13768   005A5A                     u4030:
 13769   005A5A  8043               	bsf	___fldiv@aexp^0,0,c
 13770   005A5C                     l4266:
 13771   005A5C  5043               	movf	___fldiv@aexp^0,w,c
 13772   005A5E  B4D8               	btfsc	status,2,c
 13773   005A60  EF34  F02D         	goto	u4041
 13774   005A64  EF36  F02D         	goto	u4040
 13775   005A68                     u4041:
 13776   005A68  EF4B  F02D         	goto	l4276
 13777   005A6C                     u4040:
 13778   005A6C  2843               	incf	___fldiv@aexp^0,w,c
 13779   005A6E  A4D8               	btfss	status,2,c
 13780   005A70  EF3C  F02D         	goto	u4051
 13781   005A74  EF3E  F02D         	goto	u4050
 13782   005A78                     u4051:
 13783   005A78  EF46  F02D         	goto	l4272
 13784   005A7C                     u4050:
 13785   005A7C  0E00               	movlw	0
 13786   005A7E  6E2F               	movwf	___fldiv@a^0,c
 13787   005A80  0E00               	movlw	0
 13788   005A82  6E30               	movwf	(___fldiv@a+1)^0,c
 13789   005A84  0E00               	movlw	0
 13790   005A86  6E31               	movwf	(___fldiv@a+2)^0,c
 13791   005A88  0E00               	movlw	0
 13792   005A8A  6E32               	movwf	(___fldiv@a+3)^0,c
 13793   005A8C                     l4272:
 13794   005A8C  8E31               	bsf	(___fldiv@a+2)^0,7,c
 13795   005A8E  0E00               	movlw	0
 13796   005A90  6E32               	movwf	(___fldiv@a+3)^0,c
 13797   005A92  EF53  F02D         	goto	l4278
 13798   005A96                     l4276:
 13799   005A96  0E00               	movlw	0
 13800   005A98  6E2F               	movwf	___fldiv@a^0,c
 13801   005A9A  0E00               	movlw	0
 13802   005A9C  6E30               	movwf	(___fldiv@a+1)^0,c
 13803   005A9E  0E00               	movlw	0
 13804   005AA0  6E31               	movwf	(___fldiv@a+2)^0,c
 13805   005AA2  0E00               	movlw	0
 13806   005AA4  6E32               	movwf	(___fldiv@a+3)^0,c
 13807   005AA6                     l4278:
 13808   005AA6  502F               	movf	___fldiv@a^0,w,c
 13809   005AA8  1030               	iorwf	(___fldiv@a+1)^0,w,c
 13810   005AAA  1031               	iorwf	(___fldiv@a+2)^0,w,c
 13811   005AAC  1032               	iorwf	(___fldiv@a+3)^0,w,c
 13812   005AAE  A4D8               	btfss	status,2,c
 13813   005AB0  EF5C  F02D         	goto	u4061
 13814   005AB4  EF5E  F02D         	goto	u4060
 13815   005AB8                     u4061:
 13816   005AB8  EF76  F02D         	goto	l4290
 13817   005ABC                     u4060:
 13818   005ABC  0E00               	movlw	0
 13819   005ABE  6E2B               	movwf	___fldiv@b^0,c
 13820   005AC0  0E00               	movlw	0
 13821   005AC2  6E2C               	movwf	(___fldiv@b+1)^0,c
 13822   005AC4  0E00               	movlw	0
 13823   005AC6  6E2D               	movwf	(___fldiv@b+2)^0,c
 13824   005AC8  0E00               	movlw	0
 13825   005ACA  6E2E               	movwf	(___fldiv@b+3)^0,c
 13826   005ACC  0E80               	movlw	128
 13827   005ACE  122D               	iorwf	(___fldiv@b+2)^0,f,c
 13828   005AD0  0E7F               	movlw	127
 13829   005AD2  122E               	iorwf	(___fldiv@b+3)^0,f,c
 13830   005AD4                     l4284:
 13831   005AD4  503B               	movf	___fldiv@sign^0,w,c
 13832   005AD6  122E               	iorwf	(___fldiv@b+3)^0,f,c
 13833   005AD8  C02B  F02B         	movff	___fldiv@b,?___fldiv
 13834   005ADC  C02C  F02C         	movff	___fldiv@b+1,?___fldiv+1
 13835   005AE0  C02D  F02D         	movff	___fldiv@b+2,?___fldiv+2
 13836   005AE4  C02E  F02E         	movff	___fldiv@b+3,?___fldiv+3
 13837   005AE8  EFB9  F02E         	goto	l1144
 13838   005AEC                     l4290:
 13839   005AEC  5042               	movf	___fldiv@bexp^0,w,c
 13840   005AEE  A4D8               	btfss	status,2,c
 13841   005AF0  EF7C  F02D         	goto	u4071
 13842   005AF4  EF7E  F02D         	goto	u4070
 13843   005AF8                     u4071:
 13844   005AF8  EF88  F02D         	goto	l4298
 13845   005AFC                     u4070:
 13846   005AFC  0E00               	movlw	0
 13847   005AFE  6E2B               	movwf	?___fldiv^0,c
 13848   005B00  0E00               	movlw	0
 13849   005B02  6E2C               	movwf	(?___fldiv+1)^0,c
 13850   005B04  0E00               	movlw	0
 13851   005B06  6E2D               	movwf	(?___fldiv+2)^0,c
 13852   005B08  0E00               	movlw	0
 13853   005B0A  6E2E               	movwf	(?___fldiv+3)^0,c
 13854   005B0C  EFB9  F02E         	goto	l1144
 13855   005B10                     l4298:
 13856   005B10  5043               	movf	___fldiv@aexp^0,w,c
 13857   005B12  C042  F033         	movff	___fldiv@bexp,??___fldiv
 13858   005B16  6A34               	clrf	(??___fldiv+1)^0,c
 13859   005B18  5E33               	subwf	??___fldiv^0,f,c
 13860   005B1A  0E00               	movlw	0
 13861   005B1C  5A34               	subwfb	(??___fldiv+1)^0,f,c
 13862   005B1E  0E7F               	movlw	127
 13863   005B20  2433               	addwf	??___fldiv^0,w,c
 13864   005B22  6E3C               	movwf	___fldiv@new_exp^0,c
 13865   005B24  0E00               	movlw	0
 13866   005B26  2034               	addwfc	(??___fldiv+1)^0,w,c
 13867   005B28  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 13868   005B2A  C02B  F037         	movff	___fldiv@b,___fldiv@rem
 13869   005B2E  C02C  F038         	movff	___fldiv@b+1,___fldiv@rem+1
 13870   005B32  C02D  F039         	movff	___fldiv@b+2,___fldiv@rem+2
 13871   005B36  C02E  F03A         	movff	___fldiv@b+3,___fldiv@rem+3
 13872   005B3A  0E00               	movlw	0
 13873   005B3C  6E2B               	movwf	___fldiv@b^0,c
 13874   005B3E  0E00               	movlw	0
 13875   005B40  6E2C               	movwf	(___fldiv@b+1)^0,c
 13876   005B42  0E00               	movlw	0
 13877   005B44  6E2D               	movwf	(___fldiv@b+2)^0,c
 13878   005B46  0E00               	movlw	0
 13879   005B48  6E2E               	movwf	(___fldiv@b+3)^0,c
 13880   005B4A  0E00               	movlw	0
 13881   005B4C  6E3E               	movwf	___fldiv@grs^0,c
 13882   005B4E  0E00               	movlw	0
 13883   005B50  6E3F               	movwf	(___fldiv@grs+1)^0,c
 13884   005B52  0E00               	movlw	0
 13885   005B54  6E40               	movwf	(___fldiv@grs+2)^0,c
 13886   005B56  0E00               	movlw	0
 13887   005B58  6E41               	movwf	(___fldiv@grs+3)^0,c
 13888   005B5A  0E00               	movlw	0
 13889   005B5C  6E43               	movwf	___fldiv@aexp^0,c
 13890   005B5E  EFE9  F02D         	goto	l1146
 13891   005B62                     l4308:
 13892   005B62  5043               	movf	___fldiv@aexp^0,w,c
 13893   005B64  B4D8               	btfsc	status,2,c
 13894   005B66  EFB7  F02D         	goto	u4081
 13895   005B6A  EFB9  F02D         	goto	u4080
 13896   005B6E                     u4081:
 13897   005B6E  EFD0  F02D         	goto	l4316
 13898   005B72                     u4080:
 13899   005B72  90D8               	bcf	status,0,c
 13900   005B74  3637               	rlcf	___fldiv@rem^0,f,c
 13901   005B76  3638               	rlcf	(___fldiv@rem+1)^0,f,c
 13902   005B78  3639               	rlcf	(___fldiv@rem+2)^0,f,c
 13903   005B7A  363A               	rlcf	(___fldiv@rem+3)^0,f,c
 13904   005B7C  90D8               	bcf	status,0,c
 13905   005B7E  362B               	rlcf	___fldiv@b^0,f,c
 13906   005B80  362C               	rlcf	(___fldiv@b+1)^0,f,c
 13907   005B82  362D               	rlcf	(___fldiv@b+2)^0,f,c
 13908   005B84  362E               	rlcf	(___fldiv@b+3)^0,f,c
 13909   005B86  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 13910   005B88  EFC8  F02D         	goto	u4091
 13911   005B8C  EFCA  F02D         	goto	u4090
 13912   005B90                     u4091:
 13913   005B90  EFCB  F02D         	goto	l1149
 13914   005B94                     u4090:
 13915   005B94  802B               	bsf	___fldiv@b^0,0,c
 13916   005B96                     l1149:
 13917   005B96  90D8               	bcf	status,0,c
 13918   005B98  363E               	rlcf	___fldiv@grs^0,f,c
 13919   005B9A  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 13920   005B9C  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 13921   005B9E  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 13922   005BA0                     l4316:
 13923   005BA0  502F               	movf	___fldiv@a^0,w,c
 13924   005BA2  5C37               	subwf	___fldiv@rem^0,w,c
 13925   005BA4  5030               	movf	(___fldiv@a+1)^0,w,c
 13926   005BA6  5838               	subwfb	(___fldiv@rem+1)^0,w,c
 13927   005BA8  5031               	movf	(___fldiv@a+2)^0,w,c
 13928   005BAA  5839               	subwfb	(___fldiv@rem+2)^0,w,c
 13929   005BAC  5032               	movf	(___fldiv@a+3)^0,w,c
 13930   005BAE  583A               	subwfb	(___fldiv@rem+3)^0,w,c
 13931   005BB0  A0D8               	btfss	status,0,c
 13932   005BB2  EFDD  F02D         	goto	u4101
 13933   005BB6  EFDF  F02D         	goto	u4100
 13934   005BBA                     u4101:
 13935   005BBA  EFE8  F02D         	goto	l4322
 13936   005BBE                     u4100:
 13937   005BBE  8C41               	bsf	(___fldiv@grs+3)^0,6,c
 13938   005BC0  502F               	movf	___fldiv@a^0,w,c
 13939   005BC2  5E37               	subwf	___fldiv@rem^0,f,c
 13940   005BC4  5030               	movf	(___fldiv@a+1)^0,w,c
 13941   005BC6  5A38               	subwfb	(___fldiv@rem+1)^0,f,c
 13942   005BC8  5031               	movf	(___fldiv@a+2)^0,w,c
 13943   005BCA  5A39               	subwfb	(___fldiv@rem+2)^0,f,c
 13944   005BCC  5032               	movf	(___fldiv@a+3)^0,w,c
 13945   005BCE  5A3A               	subwfb	(___fldiv@rem+3)^0,f,c
 13946   005BD0                     l4322:
 13947   005BD0  2A43               	incf	___fldiv@aexp^0,f,c
 13948   005BD2                     l1146:
 13949   005BD2  0E19               	movlw	25
 13950   005BD4  6443               	cpfsgt	___fldiv@aexp^0,c
 13951   005BD6  EFEF  F02D         	goto	u4111
 13952   005BDA  EFF1  F02D         	goto	u4110
 13953   005BDE                     u4111:
 13954   005BDE  EFB1  F02D         	goto	l4308
 13955   005BE2                     u4110:
 13956   005BE2  5037               	movf	___fldiv@rem^0,w,c
 13957   005BE4  1038               	iorwf	(___fldiv@rem+1)^0,w,c
 13958   005BE6  1039               	iorwf	(___fldiv@rem+2)^0,w,c
 13959   005BE8  103A               	iorwf	(___fldiv@rem+3)^0,w,c
 13960   005BEA  B4D8               	btfsc	status,2,c
 13961   005BEC  EFFA  F02D         	goto	u4121
 13962   005BF0  EFFC  F02D         	goto	u4120
 13963   005BF4                     u4121:
 13964   005BF4  EF14  F02E         	goto	l4334
 13965   005BF8                     u4120:
 13966   005BF8  803E               	bsf	___fldiv@grs^0,0,c
 13967   005BFA  EF14  F02E         	goto	l4334
 13968   005BFE                     l4328:
 13969   005BFE  90D8               	bcf	status,0,c
 13970   005C00  362B               	rlcf	___fldiv@b^0,f,c
 13971   005C02  362C               	rlcf	(___fldiv@b+1)^0,f,c
 13972   005C04  362D               	rlcf	(___fldiv@b+2)^0,f,c
 13973   005C06  362E               	rlcf	(___fldiv@b+3)^0,f,c
 13974   005C08  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 13975   005C0A  EF09  F02E         	goto	u4131
 13976   005C0E  EF0B  F02E         	goto	u4130
 13977   005C12                     u4131:
 13978   005C12  EF0C  F02E         	goto	l1155
 13979   005C16                     u4130:
 13980   005C16  802B               	bsf	___fldiv@b^0,0,c
 13981   005C18                     l1155:
 13982   005C18  90D8               	bcf	status,0,c
 13983   005C1A  363E               	rlcf	___fldiv@grs^0,f,c
 13984   005C1C  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 13985   005C1E  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 13986   005C20  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 13987   005C22  063C               	decf	___fldiv@new_exp^0,f,c
 13988   005C24  A0D8               	btfss	status,0,c
 13989   005C26  063D               	decf	(___fldiv@new_exp+1)^0,f,c
 13990   005C28                     l4334:
 13991   005C28  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 13992   005C2A  EF19  F02E         	goto	u4141
 13993   005C2E  EF1B  F02E         	goto	u4140
 13994   005C32                     u4141:
 13995   005C32  EFFF  F02D         	goto	l4328
 13996   005C36                     u4140:
 13997   005C36  0E00               	movlw	0
 13998   005C38  6E43               	movwf	___fldiv@aexp^0,c
 13999   005C3A  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 14000   005C3C  EF22  F02E         	goto	u4151
 14001   005C40  EF24  F02E         	goto	u4150
 14002   005C44                     u4151:
 14003   005C44  EF48  F02E         	goto	l1157
 14004   005C48                     u4150:
 14005   005C48  0EFF               	movlw	255
 14006   005C4A  143E               	andwf	___fldiv@grs^0,w,c
 14007   005C4C  6E33               	movwf	??___fldiv^0,c
 14008   005C4E  0EFF               	movlw	255
 14009   005C50  143F               	andwf	(___fldiv@grs+1)^0,w,c
 14010   005C52  6E34               	movwf	(??___fldiv+1)^0,c
 14011   005C54  0EFF               	movlw	255
 14012   005C56  1440               	andwf	(___fldiv@grs+2)^0,w,c
 14013   005C58  6E35               	movwf	(??___fldiv+2)^0,c
 14014   005C5A  0E7F               	movlw	127
 14015   005C5C  1441               	andwf	(___fldiv@grs+3)^0,w,c
 14016   005C5E  6E36               	movwf	(??___fldiv+3)^0,c
 14017   005C60  5033               	movf	??___fldiv^0,w,c
 14018   005C62  1034               	iorwf	(??___fldiv+1)^0,w,c
 14019   005C64  1035               	iorwf	(??___fldiv+2)^0,w,c
 14020   005C66  1036               	iorwf	(??___fldiv+3)^0,w,c
 14021   005C68  B4D8               	btfsc	status,2,c
 14022   005C6A  EF39  F02E         	goto	u4161
 14023   005C6E  EF3B  F02E         	goto	u4160
 14024   005C72                     u4161:
 14025   005C72  EF3F  F02E         	goto	l1158
 14026   005C76                     u4160:
 14027   005C76                     l4342:
 14028   005C76  0E01               	movlw	1
 14029   005C78  6E43               	movwf	___fldiv@aexp^0,c
 14030   005C7A  EF48  F02E         	goto	l1157
 14031   005C7E                     l1158:
 14032   005C7E  A02B               	btfss	___fldiv@b^0,0,c
 14033   005C80  EF44  F02E         	goto	u4171
 14034   005C84  EF46  F02E         	goto	u4170
 14035   005C88                     u4171:
 14036   005C88  EF48  F02E         	goto	l1157
 14037   005C8C                     u4170:
 14038   005C8C  EF3B  F02E         	goto	l4342
 14039   005C90                     l1157:
 14040   005C90  5043               	movf	___fldiv@aexp^0,w,c
 14041   005C92  B4D8               	btfsc	status,2,c
 14042   005C94  EF4E  F02E         	goto	u4181
 14043   005C98  EF50  F02E         	goto	u4180
 14044   005C9C                     u4181:
 14045   005C9C  EF74  F02E         	goto	l4354
 14046   005CA0                     u4180:
 14047   005CA0  0E01               	movlw	1
 14048   005CA2  262B               	addwf	___fldiv@b^0,f,c
 14049   005CA4  0E00               	movlw	0
 14050   005CA6  222C               	addwfc	(___fldiv@b+1)^0,f,c
 14051   005CA8  222D               	addwfc	(___fldiv@b+2)^0,f,c
 14052   005CAA  222E               	addwfc	(___fldiv@b+3)^0,f,c
 14053   005CAC  A02E               	btfss	(___fldiv@b+3)^0,0,c
 14054   005CAE  EF5B  F02E         	goto	u4191
 14055   005CB2  EF5D  F02E         	goto	u4190
 14056   005CB6                     u4191:
 14057   005CB6  EF74  F02E         	goto	l4354
 14058   005CBA                     u4190:
 14059   005CBA  C02B  F033         	movff	___fldiv@b,??___fldiv
 14060   005CBE  C02C  F034         	movff	___fldiv@b+1,??___fldiv+1
 14061   005CC2  C02D  F035         	movff	___fldiv@b+2,??___fldiv+2
 14062   005CC6  C02E  F036         	movff	___fldiv@b+3,??___fldiv+3
 14063   005CCA  3436               	rlcf	(??___fldiv+3)^0,w,c
 14064   005CCC  3236               	rrcf	(??___fldiv+3)^0,f,c
 14065   005CCE  3235               	rrcf	(??___fldiv+2)^0,f,c
 14066   005CD0  3234               	rrcf	(??___fldiv+1)^0,f,c
 14067   005CD2  3233               	rrcf	??___fldiv^0,f,c
 14068   005CD4  C033  F02B         	movff	??___fldiv,___fldiv@b
 14069   005CD8  C034  F02C         	movff	??___fldiv+1,___fldiv@b+1
 14070   005CDC  C035  F02D         	movff	??___fldiv+2,___fldiv@b+2
 14071   005CE0  C036  F02E         	movff	??___fldiv+3,___fldiv@b+3
 14072   005CE4  4A3C               	infsnz	___fldiv@new_exp^0,f,c
 14073   005CE6  2A3D               	incf	(___fldiv@new_exp+1)^0,f,c
 14074   005CE8                     l4354:
 14075   005CE8  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14076   005CEA  EF7F  F02E         	goto	u4201
 14077   005CEE  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 14078   005CF0  E108               	bnz	u4200
 14079   005CF2  283C               	incf	___fldiv@new_exp^0,w,c
 14080   005CF4  A0D8               	btfss	status,0,c
 14081   005CF6  EF7F  F02E         	goto	u4201
 14082   005CFA  EF81  F02E         	goto	u4200
 14083   005CFE                     u4201:
 14084   005CFE  EF8C  F02E         	goto	l4358
 14085   005D02                     u4200:
 14086   005D02  0E00               	movlw	0
 14087   005D04  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 14088   005D06  683C               	setf	___fldiv@new_exp^0,c
 14089   005D08  0E00               	movlw	0
 14090   005D0A  6E2B               	movwf	___fldiv@b^0,c
 14091   005D0C  0E00               	movlw	0
 14092   005D0E  6E2C               	movwf	(___fldiv@b+1)^0,c
 14093   005D10  0E00               	movlw	0
 14094   005D12  6E2D               	movwf	(___fldiv@b+2)^0,c
 14095   005D14  0E00               	movlw	0
 14096   005D16  6E2E               	movwf	(___fldiv@b+3)^0,c
 14097   005D18                     l4358:
 14098   005D18  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14099   005D1A  EF99  F02E         	goto	u4210
 14100   005D1E  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 14101   005D20  E106               	bnz	u4211
 14102   005D22  043C               	decf	___fldiv@new_exp^0,w,c
 14103   005D24  B0D8               	btfsc	status,0,c
 14104   005D26  EF97  F02E         	goto	u4211
 14105   005D2A  EF99  F02E         	goto	u4210
 14106   005D2E                     u4211:
 14107   005D2E  EFA7  F02E         	goto	l4362
 14108   005D32                     u4210:
 14109   005D32  0E00               	movlw	0
 14110   005D34  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 14111   005D36  0E00               	movlw	0
 14112   005D38  6E3C               	movwf	___fldiv@new_exp^0,c
 14113   005D3A  0E00               	movlw	0
 14114   005D3C  6E2B               	movwf	___fldiv@b^0,c
 14115   005D3E  0E00               	movlw	0
 14116   005D40  6E2C               	movwf	(___fldiv@b+1)^0,c
 14117   005D42  0E00               	movlw	0
 14118   005D44  6E2D               	movwf	(___fldiv@b+2)^0,c
 14119   005D46  0E00               	movlw	0
 14120   005D48  6E2E               	movwf	(___fldiv@b+3)^0,c
 14121   005D4A  0E00               	movlw	0
 14122   005D4C  6E3B               	movwf	___fldiv@sign^0,c
 14123   005D4E                     l4362:
 14124   005D4E  C03C  F042         	movff	___fldiv@new_exp,___fldiv@bexp
 14125   005D52  A042               	btfss	___fldiv@bexp^0,0,c
 14126   005D54  EFAE  F02E         	goto	u4221
 14127   005D58  EFB0  F02E         	goto	u4220
 14128   005D5C                     u4221:
 14129   005D5C  EFB3  F02E         	goto	l4368
 14130   005D60                     u4220:
 14131   005D60  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 14132   005D62  EFB4  F02E         	goto	l4370
 14133   005D66                     l4368:
 14134   005D66  9E2D               	bcf	(___fldiv@b+2)^0,7,c
 14135   005D68                     l4370:
 14136   005D68  90D8               	bcf	status,0,c
 14137   005D6A  3042               	rrcf	___fldiv@bexp^0,w,c
 14138   005D6C  6E2E               	movwf	(___fldiv@b+3)^0,c
 14139   005D6E  EF6A  F02D         	goto	l4284
 14140   005D72                     l1144:
 14141   005D72  0012               	return		;funcret
 14142   005D74                     __end_of___fldiv:
 14143                           	callstack 0
 14144                           
 14145 ;; *************** function _color_read_Red *****************
 14146 ;; Defined at:
 14147 ;;		line 68 in file "color.c"
 14148 ;; Parameters:    Size  Location     Type
 14149 ;;		None
 14150 ;; Auto vars:     Size  Location     Type
 14151 ;;  tmp             2   10[COMRAM] unsigned int 
 14152 ;; Return value:  Size  Location     Type
 14153 ;;                  2    5[COMRAM] unsigned int 
 14154 ;; Registers used:
 14155 ;;		wreg, status,2, status,0, cstack
 14156 ;; Tracked objects:
 14157 ;;		On entry : 0/0
 14158 ;;		On exit  : 0/0
 14159 ;;		Unchanged: 0/0
 14160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14163 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14164 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14165 ;;Total ram usage:        7 bytes
 14166 ;; Hardware stack levels used: 1
 14167 ;; Hardware stack levels required when called: 4
 14168 ;; This function calls:
 14169 ;;		_I2C_2_Master_Read
 14170 ;;		_I2C_2_Master_RepStart
 14171 ;;		_I2C_2_Master_Start
 14172 ;;		_I2C_2_Master_Stop
 14173 ;;		_I2C_2_Master_Write
 14174 ;; This function is called by:
 14175 ;;		_decide_action
 14176 ;; This function uses a non-reentrant model
 14177 ;;
 14178                           
 14179                           	psect	text39
 14180   0071D4                     __ptext39:
 14181                           	callstack 0
 14182   0071D4                     _color_read_Red:
 14183                           	callstack 25
 14184   0071D4                     
 14185                           ;color.c: 69:  unsigned int tmp;;color.c: 70:  I2C_2_Master_Start();
 14186   0071D4  EC56  F03B         	call	_I2C_2_Master_Start	;wreg free
 14187                           
 14188                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x00);
 14189   0071D8  0E52               	movlw	82
 14190   0071DA  EC3B  F03B         	call	_I2C_2_Master_Write
 14191                           
 14192                           ;color.c: 72:  I2C_2_Master_Write(0xA0 | 0x16);
 14193   0071DE  0EB6               	movlw	182
 14194   0071E0  EC3B  F03B         	call	_I2C_2_Master_Write
 14195                           
 14196                           ;color.c: 73:  I2C_2_Master_RepStart();
 14197   0071E4  EC4C  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14198                           
 14199                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x01);
 14200   0071E8  0E53               	movlw	83
 14201   0071EA  EC3B  F03B         	call	_I2C_2_Master_Write
 14202                           
 14203                           ;color.c: 75:  tmp=I2C_2_Master_Read(1);
 14204   0071EE  0E01               	movlw	1
 14205   0071F0  ECF3  F039         	call	_I2C_2_Master_Read
 14206   0071F4  6E08               	movwf	??_color_read_Red^0,c
 14207   0071F6  5008               	movf	??_color_read_Red^0,w,c
 14208   0071F8  6E0B               	movwf	color_read_Red@tmp^0,c
 14209   0071FA  6A0C               	clrf	(color_read_Red@tmp+1)^0,c
 14210                           
 14211                           ;color.c: 76:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14212   0071FC  0E00               	movlw	0
 14213   0071FE  ECF3  F039         	call	_I2C_2_Master_Read
 14214   007202  6E08               	movwf	??_color_read_Red^0,c
 14215   007204  5008               	movf	??_color_read_Red^0,w,c
 14216   007206  6E0A               	movwf	(??_color_read_Red+2)^0,c
 14217   007208  6A09               	clrf	(??_color_read_Red+1)^0,c
 14218   00720A  500B               	movf	color_read_Red@tmp^0,w,c
 14219   00720C  1009               	iorwf	(??_color_read_Red+1)^0,w,c
 14220   00720E  6E0B               	movwf	color_read_Red@tmp^0,c
 14221   007210  500C               	movf	(color_read_Red@tmp+1)^0,w,c
 14222   007212  100A               	iorwf	(??_color_read_Red+2)^0,w,c
 14223   007214  6E0C               	movwf	(color_read_Red@tmp+1)^0,c
 14224                           
 14225                           ;color.c: 77:  I2C_2_Master_Stop();
 14226   007216  EC51  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14227   00721A                     
 14228                           ;color.c: 78:  return tmp;
 14229   00721A  C00B  F006         	movff	color_read_Red@tmp,?_color_read_Red
 14230   00721E  C00C  F007         	movff	color_read_Red@tmp+1,?_color_read_Red+1
 14231   007222  0012               	return		;funcret
 14232   007224                     __end_of_color_read_Red:
 14233                           	callstack 0
 14234                           
 14235 ;; *************** function _color_read_Green *****************
 14236 ;; Defined at:
 14237 ;;		line 81 in file "color.c"
 14238 ;; Parameters:    Size  Location     Type
 14239 ;;		None
 14240 ;; Auto vars:     Size  Location     Type
 14241 ;;  tmp             2   10[COMRAM] unsigned int 
 14242 ;; Return value:  Size  Location     Type
 14243 ;;                  2    5[COMRAM] unsigned int 
 14244 ;; Registers used:
 14245 ;;		wreg, status,2, status,0, cstack
 14246 ;; Tracked objects:
 14247 ;;		On entry : 0/0
 14248 ;;		On exit  : 0/0
 14249 ;;		Unchanged: 0/0
 14250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14251 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14253 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14254 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14255 ;;Total ram usage:        7 bytes
 14256 ;; Hardware stack levels used: 1
 14257 ;; Hardware stack levels required when called: 4
 14258 ;; This function calls:
 14259 ;;		_I2C_2_Master_Read
 14260 ;;		_I2C_2_Master_RepStart
 14261 ;;		_I2C_2_Master_Start
 14262 ;;		_I2C_2_Master_Stop
 14263 ;;		_I2C_2_Master_Write
 14264 ;; This function is called by:
 14265 ;;		_decide_action
 14266 ;; This function uses a non-reentrant model
 14267 ;;
 14268                           
 14269                           	psect	text40
 14270   007224                     __ptext40:
 14271                           	callstack 0
 14272   007224                     _color_read_Green:
 14273                           	callstack 25
 14274   007224                     
 14275                           ;color.c: 82:  unsigned int tmp;;color.c: 83:  I2C_2_Master_Start();
 14276   007224  EC56  F03B         	call	_I2C_2_Master_Start	;wreg free
 14277                           
 14278                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x00);
 14279   007228  0E52               	movlw	82
 14280   00722A  EC3B  F03B         	call	_I2C_2_Master_Write
 14281                           
 14282                           ;color.c: 85:  I2C_2_Master_Write(0xA0 | 0x18);
 14283   00722E  0EB8               	movlw	184
 14284   007230  EC3B  F03B         	call	_I2C_2_Master_Write
 14285                           
 14286                           ;color.c: 86:  I2C_2_Master_RepStart();
 14287   007234  EC4C  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14288                           
 14289                           ;color.c: 87:  I2C_2_Master_Write(0x52 | 0x01);
 14290   007238  0E53               	movlw	83
 14291   00723A  EC3B  F03B         	call	_I2C_2_Master_Write
 14292                           
 14293                           ;color.c: 88:  tmp=I2C_2_Master_Read(1);
 14294   00723E  0E01               	movlw	1
 14295   007240  ECF3  F039         	call	_I2C_2_Master_Read
 14296   007244  6E08               	movwf	??_color_read_Green^0,c
 14297   007246  5008               	movf	??_color_read_Green^0,w,c
 14298   007248  6E0B               	movwf	color_read_Green@tmp^0,c
 14299   00724A  6A0C               	clrf	(color_read_Green@tmp+1)^0,c
 14300                           
 14301                           ;color.c: 89:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14302   00724C  0E00               	movlw	0
 14303   00724E  ECF3  F039         	call	_I2C_2_Master_Read
 14304   007252  6E08               	movwf	??_color_read_Green^0,c
 14305   007254  5008               	movf	??_color_read_Green^0,w,c
 14306   007256  6E0A               	movwf	(??_color_read_Green+2)^0,c
 14307   007258  6A09               	clrf	(??_color_read_Green+1)^0,c
 14308   00725A  500B               	movf	color_read_Green@tmp^0,w,c
 14309   00725C  1009               	iorwf	(??_color_read_Green+1)^0,w,c
 14310   00725E  6E0B               	movwf	color_read_Green@tmp^0,c
 14311   007260  500C               	movf	(color_read_Green@tmp+1)^0,w,c
 14312   007262  100A               	iorwf	(??_color_read_Green+2)^0,w,c
 14313   007264  6E0C               	movwf	(color_read_Green@tmp+1)^0,c
 14314                           
 14315                           ;color.c: 90:  I2C_2_Master_Stop();
 14316   007266  EC51  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14317   00726A                     
 14318                           ;color.c: 91:  return tmp;
 14319   00726A  C00B  F006         	movff	color_read_Green@tmp,?_color_read_Green
 14320   00726E  C00C  F007         	movff	color_read_Green@tmp+1,?_color_read_Green+1
 14321   007272  0012               	return		;funcret
 14322   007274                     __end_of_color_read_Green:
 14323                           	callstack 0
 14324                           
 14325 ;; *************** function _color_read_Blue *****************
 14326 ;; Defined at:
 14327 ;;		line 94 in file "color.c"
 14328 ;; Parameters:    Size  Location     Type
 14329 ;;		None
 14330 ;; Auto vars:     Size  Location     Type
 14331 ;;  tmp             2   10[COMRAM] unsigned int 
 14332 ;; Return value:  Size  Location     Type
 14333 ;;                  2    5[COMRAM] unsigned int 
 14334 ;; Registers used:
 14335 ;;		wreg, status,2, status,0, cstack
 14336 ;; Tracked objects:
 14337 ;;		On entry : 0/0
 14338 ;;		On exit  : 0/0
 14339 ;;		Unchanged: 0/0
 14340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14342 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14343 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14344 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14345 ;;Total ram usage:        7 bytes
 14346 ;; Hardware stack levels used: 1
 14347 ;; Hardware stack levels required when called: 4
 14348 ;; This function calls:
 14349 ;;		_I2C_2_Master_Read
 14350 ;;		_I2C_2_Master_RepStart
 14351 ;;		_I2C_2_Master_Start
 14352 ;;		_I2C_2_Master_Stop
 14353 ;;		_I2C_2_Master_Write
 14354 ;; This function is called by:
 14355 ;;		_decide_action
 14356 ;; This function uses a non-reentrant model
 14357 ;;
 14358                           
 14359                           	psect	text41
 14360   007274                     __ptext41:
 14361                           	callstack 0
 14362   007274                     _color_read_Blue:
 14363                           	callstack 25
 14364   007274                     
 14365                           ;color.c: 95:  unsigned int tmp;;color.c: 96:  I2C_2_Master_Start();
 14366   007274  EC56  F03B         	call	_I2C_2_Master_Start	;wreg free
 14367                           
 14368                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x00);
 14369   007278  0E52               	movlw	82
 14370   00727A  EC3B  F03B         	call	_I2C_2_Master_Write
 14371                           
 14372                           ;color.c: 98:  I2C_2_Master_Write(0xA0 | 0x1A);
 14373   00727E  0EBA               	movlw	186
 14374   007280  EC3B  F03B         	call	_I2C_2_Master_Write
 14375                           
 14376                           ;color.c: 99:  I2C_2_Master_RepStart();
 14377   007284  EC4C  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14378                           
 14379                           ;color.c: 100:  I2C_2_Master_Write(0x52 | 0x01);
 14380   007288  0E53               	movlw	83
 14381   00728A  EC3B  F03B         	call	_I2C_2_Master_Write
 14382                           
 14383                           ;color.c: 101:  tmp=I2C_2_Master_Read(1);
 14384   00728E  0E01               	movlw	1
 14385   007290  ECF3  F039         	call	_I2C_2_Master_Read
 14386   007294  6E08               	movwf	??_color_read_Blue^0,c
 14387   007296  5008               	movf	??_color_read_Blue^0,w,c
 14388   007298  6E0B               	movwf	color_read_Blue@tmp^0,c
 14389   00729A  6A0C               	clrf	(color_read_Blue@tmp+1)^0,c
 14390                           
 14391                           ;color.c: 102:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14392   00729C  0E00               	movlw	0
 14393   00729E  ECF3  F039         	call	_I2C_2_Master_Read
 14394   0072A2  6E08               	movwf	??_color_read_Blue^0,c
 14395   0072A4  5008               	movf	??_color_read_Blue^0,w,c
 14396   0072A6  6E0A               	movwf	(??_color_read_Blue+2)^0,c
 14397   0072A8  6A09               	clrf	(??_color_read_Blue+1)^0,c
 14398   0072AA  500B               	movf	color_read_Blue@tmp^0,w,c
 14399   0072AC  1009               	iorwf	(??_color_read_Blue+1)^0,w,c
 14400   0072AE  6E0B               	movwf	color_read_Blue@tmp^0,c
 14401   0072B0  500C               	movf	(color_read_Blue@tmp+1)^0,w,c
 14402   0072B2  100A               	iorwf	(??_color_read_Blue+2)^0,w,c
 14403   0072B4  6E0C               	movwf	(color_read_Blue@tmp+1)^0,c
 14404                           
 14405                           ;color.c: 103:  I2C_2_Master_Stop();
 14406   0072B6  EC51  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14407   0072BA                     
 14408                           ;color.c: 104:  return tmp;
 14409   0072BA  C00B  F006         	movff	color_read_Blue@tmp,?_color_read_Blue
 14410   0072BE  C00C  F007         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
 14411   0072C2  0012               	return		;funcret
 14412   0072C4                     __end_of_color_read_Blue:
 14413                           	callstack 0
 14414                           
 14415 ;; *************** function _color_read_Clear *****************
 14416 ;; Defined at:
 14417 ;;		line 55 in file "color.c"
 14418 ;; Parameters:    Size  Location     Type
 14419 ;;		None
 14420 ;; Auto vars:     Size  Location     Type
 14421 ;;  tmp             2   10[COMRAM] unsigned int 
 14422 ;; Return value:  Size  Location     Type
 14423 ;;                  2    5[COMRAM] unsigned int 
 14424 ;; Registers used:
 14425 ;;		wreg, status,2, status,0, cstack
 14426 ;; Tracked objects:
 14427 ;;		On entry : 0/0
 14428 ;;		On exit  : 0/0
 14429 ;;		Unchanged: 0/0
 14430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14433 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14434 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14435 ;;Total ram usage:        7 bytes
 14436 ;; Hardware stack levels used: 1
 14437 ;; Hardware stack levels required when called: 4
 14438 ;; This function calls:
 14439 ;;		_I2C_2_Master_Read
 14440 ;;		_I2C_2_Master_RepStart
 14441 ;;		_I2C_2_Master_Start
 14442 ;;		_I2C_2_Master_Stop
 14443 ;;		_I2C_2_Master_Write
 14444 ;; This function is called by:
 14445 ;;		_main
 14446 ;; This function uses a non-reentrant model
 14447 ;;
 14448                           
 14449                           	psect	text42
 14450   0072C4                     __ptext42:
 14451                           	callstack 0
 14452   0072C4                     _color_read_Clear:
 14453                           	callstack 26
 14454   0072C4                     
 14455                           ;color.c: 56:  unsigned int tmp;;color.c: 57:  I2C_2_Master_Start();
 14456   0072C4  EC56  F03B         	call	_I2C_2_Master_Start	;wreg free
 14457                           
 14458                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
 14459   0072C8  0E52               	movlw	82
 14460   0072CA  EC3B  F03B         	call	_I2C_2_Master_Write
 14461                           
 14462                           ;color.c: 59:  I2C_2_Master_Write(0xA0 | 0x14);
 14463   0072CE  0EB4               	movlw	180
 14464   0072D0  EC3B  F03B         	call	_I2C_2_Master_Write
 14465                           
 14466                           ;color.c: 60:  I2C_2_Master_RepStart();
 14467   0072D4  EC4C  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14468                           
 14469                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
 14470   0072D8  0E53               	movlw	83
 14471   0072DA  EC3B  F03B         	call	_I2C_2_Master_Write
 14472                           
 14473                           ;color.c: 62:  tmp=I2C_2_Master_Read(1);
 14474   0072DE  0E01               	movlw	1
 14475   0072E0  ECF3  F039         	call	_I2C_2_Master_Read
 14476   0072E4  6E08               	movwf	??_color_read_Clear^0,c
 14477   0072E6  5008               	movf	??_color_read_Clear^0,w,c
 14478   0072E8  6E0B               	movwf	color_read_Clear@tmp^0,c
 14479   0072EA  6A0C               	clrf	(color_read_Clear@tmp+1)^0,c
 14480                           
 14481                           ;color.c: 63:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14482   0072EC  0E00               	movlw	0
 14483   0072EE  ECF3  F039         	call	_I2C_2_Master_Read
 14484   0072F2  6E08               	movwf	??_color_read_Clear^0,c
 14485   0072F4  5008               	movf	??_color_read_Clear^0,w,c
 14486   0072F6  6E0A               	movwf	(??_color_read_Clear+2)^0,c
 14487   0072F8  6A09               	clrf	(??_color_read_Clear+1)^0,c
 14488   0072FA  500B               	movf	color_read_Clear@tmp^0,w,c
 14489   0072FC  1009               	iorwf	(??_color_read_Clear+1)^0,w,c
 14490   0072FE  6E0B               	movwf	color_read_Clear@tmp^0,c
 14491   007300  500C               	movf	(color_read_Clear@tmp+1)^0,w,c
 14492   007302  100A               	iorwf	(??_color_read_Clear+2)^0,w,c
 14493   007304  6E0C               	movwf	(color_read_Clear@tmp+1)^0,c
 14494                           
 14495                           ;color.c: 64:  I2C_2_Master_Stop();
 14496   007306  EC51  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14497   00730A                     
 14498                           ;color.c: 65:  return tmp;
 14499   00730A  C00B  F006         	movff	color_read_Clear@tmp,?_color_read_Clear
 14500   00730E  C00C  F007         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 14501   007312  0012               	return		;funcret
 14502   007314                     __end_of_color_read_Clear:
 14503                           	callstack 0
 14504                           
 14505 ;; *************** function _I2C_2_Master_RepStart *****************
 14506 ;; Defined at:
 14507 ;;		line 30 in file "i2c.c"
 14508 ;; Parameters:    Size  Location     Type
 14509 ;;		None
 14510 ;; Auto vars:     Size  Location     Type
 14511 ;;		None
 14512 ;; Return value:  Size  Location     Type
 14513 ;;                  1    wreg      void 
 14514 ;; Registers used:
 14515 ;;		wreg, status,2, status,0, cstack
 14516 ;; Tracked objects:
 14517 ;;		On entry : 0/0
 14518 ;;		On exit  : 0/0
 14519 ;;		Unchanged: 0/0
 14520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14525 ;;Total ram usage:        0 bytes
 14526 ;; Hardware stack levels used: 1
 14527 ;; Hardware stack levels required when called: 3
 14528 ;; This function calls:
 14529 ;;		_I2C_2_Master_Idle
 14530 ;; This function is called by:
 14531 ;;		_color_read_Clear
 14532 ;;		_color_read_Red
 14533 ;;		_color_read_Green
 14534 ;;		_color_read_Blue
 14535 ;; This function uses a non-reentrant model
 14536 ;;
 14537                           
 14538                           	psect	text43
 14539   007698                     __ptext43:
 14540                           	callstack 0
 14541   007698                     _I2C_2_Master_RepStart:
 14542                           	callstack 25
 14543   007698                     
 14544                           ;i2c.c: 31:   I2C_2_Master_Idle();
 14545   007698  ECB1  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14546   00769C                     
 14547                           ;i2c.c: 32:   SSP2CON2bits.RSEN = 1;
 14548   00769C  010E               	movlb	14	; () banked
 14549   00769E  83DA               	bsf	218,1,b	;volatile
 14550   0076A0                     
 14551                           ; BSR set to: 14
 14552   0076A0  0012               	return		;funcret
 14553   0076A2                     __end_of_I2C_2_Master_RepStart:
 14554                           	callstack 0
 14555                           
 14556 ;; *************** function _I2C_2_Master_Read *****************
 14557 ;; Defined at:
 14558 ;;		line 45 in file "i2c.c"
 14559 ;; Parameters:    Size  Location     Type
 14560 ;;  ack             1    wreg     unsigned char 
 14561 ;; Auto vars:     Size  Location     Type
 14562 ;;  ack             1    3[COMRAM] unsigned char 
 14563 ;;  tmp             1    4[COMRAM] unsigned char 
 14564 ;; Return value:  Size  Location     Type
 14565 ;;                  1    wreg      unsigned char 
 14566 ;; Registers used:
 14567 ;;		wreg, status,2, status,0, cstack
 14568 ;; Tracked objects:
 14569 ;;		On entry : 0/0
 14570 ;;		On exit  : 0/0
 14571 ;;		Unchanged: 0/0
 14572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14574 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14576 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14577 ;;Total ram usage:        3 bytes
 14578 ;; Hardware stack levels used: 1
 14579 ;; Hardware stack levels required when called: 3
 14580 ;; This function calls:
 14581 ;;		_I2C_2_Master_Idle
 14582 ;; This function is called by:
 14583 ;;		_color_read_Clear
 14584 ;;		_color_read_Red
 14585 ;;		_color_read_Green
 14586 ;;		_color_read_Blue
 14587 ;; This function uses a non-reentrant model
 14588 ;;
 14589                           
 14590                           	psect	text44
 14591   0073E6                     __ptext44:
 14592                           	callstack 0
 14593   0073E6                     _I2C_2_Master_Read:
 14594                           	callstack 25
 14595                           
 14596                           ; BSR set to: 14
 14597                           ;incstack = 0
 14598                           ;I2C_2_Master_Read@ack stored from wreg
 14599   0073E6  6E04               	movwf	I2C_2_Master_Read@ack^0,c
 14600   0073E8                     
 14601                           ;i2c.c: 46:   unsigned char tmp;;i2c.c: 47:   I2C_2_Master_Idle();
 14602   0073E8  ECB1  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14603   0073EC                     
 14604                           ;i2c.c: 48:   SSP2CON2bits.RCEN = 1;
 14605   0073EC  010E               	movlb	14	; () banked
 14606   0073EE  87DA               	bsf	218,3,b	;volatile
 14607                           
 14608                           ;i2c.c: 49:   I2C_2_Master_Idle();
 14609   0073F0  ECB1  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14610   0073F4                     
 14611                           ;i2c.c: 50:   tmp = SSP2BUF;
 14612   0073F4  CED5 F005          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 14613                           
 14614                           ;i2c.c: 51:   I2C_2_Master_Idle();
 14615   0073F8  ECB1  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14616   0073FC                     
 14617                           ;i2c.c: 52:   SSP2CON2bits.ACKDT = !ack;
 14618   0073FC  5004               	movf	I2C_2_Master_Read@ack^0,w,c
 14619   0073FE  B4D8               	btfsc	status,2,c
 14620   007400  EF04  F03A         	goto	u3821
 14621   007404  EF08  F03A         	goto	u3820
 14622   007408                     u3821:
 14623   007408  6A03               	clrf	??_I2C_2_Master_Read^0,c
 14624   00740A  2A03               	incf	??_I2C_2_Master_Read^0,f,c
 14625   00740C  EF09  F03A         	goto	u3838
 14626   007410                     u3820:
 14627   007410  6A03               	clrf	??_I2C_2_Master_Read^0,c
 14628   007412                     u3838:
 14629   007412  3A03               	swapf	??_I2C_2_Master_Read^0,f,c
 14630   007414  4603               	rlncf	??_I2C_2_Master_Read^0,f,c
 14631   007416  010E               	movlb	14	; () banked
 14632   007418  51DA               	movf	218,w,b	;volatile
 14633   00741A  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 14634   00741C  0BDF               	andlw	-33
 14635   00741E  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 14636   007420  6FDA               	movwf	218,b	;volatile
 14637   007422                     
 14638                           ; BSR set to: 14
 14639                           ;i2c.c: 53:   SSP2CON2bits.ACKEN = 1;
 14640   007422  89DA               	bsf	218,4,b	;volatile
 14641   007424                     
 14642                           ; BSR set to: 14
 14643                           ;i2c.c: 54:   return tmp;
 14644   007424  5005               	movf	I2C_2_Master_Read@tmp^0,w,c
 14645   007426                     
 14646                           ; BSR set to: 14
 14647   007426  0012               	return		;funcret
 14648   007428                     __end_of_I2C_2_Master_Read:
 14649                           	callstack 0
 14650                           
 14651 ;; *************** function _color_click_toggleLED *****************
 14652 ;; Defined at:
 14653 ;;		line 108 in file "color.c"
 14654 ;; Parameters:    Size  Location     Type
 14655 ;;		None
 14656 ;; Auto vars:     Size  Location     Type
 14657 ;;		None
 14658 ;; Return value:  Size  Location     Type
 14659 ;;                  1    wreg      void 
 14660 ;; Registers used:
 14661 ;;		wreg, status,2, status,0
 14662 ;; Tracked objects:
 14663 ;;		On entry : 0/0
 14664 ;;		On exit  : 0/0
 14665 ;;		Unchanged: 0/0
 14666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14670 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14671 ;;Total ram usage:        1 bytes
 14672 ;; Hardware stack levels used: 1
 14673 ;; Hardware stack levels required when called: 2
 14674 ;; This function calls:
 14675 ;;		Nothing
 14676 ;; This function is called by:
 14677 ;;		_main
 14678 ;; This function uses a non-reentrant model
 14679 ;;
 14680                           
 14681                           	psect	text45
 14682   00716E                     __ptext45:
 14683                           	callstack 0
 14684   00716E                     _color_click_toggleLED:
 14685                           	callstack 28
 14686   00716E                     
 14687                           ;color.c: 109:     LATGbits.LATG0 = !LATGbits.LATG0;
 14688   00716E  A07F               	btfss	127,0,c	;volatile
 14689   007170  EFBC  F038         	goto	u5201
 14690   007174  EFC0  F038         	goto	u5200
 14691   007178                     u5201:
 14692   007178  6A02               	clrf	??_color_click_toggleLED^0,c
 14693   00717A  2A02               	incf	??_color_click_toggleLED^0,f,c
 14694   00717C  EFC1  F038         	goto	u5218
 14695   007180                     u5200:
 14696   007180  6A02               	clrf	??_color_click_toggleLED^0,c
 14697   007182                     u5218:
 14698   007182  507F               	movf	127,w,c	;volatile
 14699   007184  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14700   007186  0BFE               	andlw	-2
 14701   007188  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14702   00718A  6E7F               	movwf	127,c	;volatile
 14703                           
 14704                           ;color.c: 110:     LATAbits.LATA3 = !LATAbits.LATA3;
 14705   00718C  A679               	btfss	121,3,c	;volatile
 14706   00718E  EFCB  F038         	goto	u5221
 14707   007192  EFCF  F038         	goto	u5220
 14708   007196                     u5221:
 14709   007196  6A02               	clrf	??_color_click_toggleLED^0,c
 14710   007198  2A02               	incf	??_color_click_toggleLED^0,f,c
 14711   00719A  EFD0  F038         	goto	u5238
 14712   00719E                     u5220:
 14713   00719E  6A02               	clrf	??_color_click_toggleLED^0,c
 14714   0071A0                     u5238:
 14715   0071A0  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14716   0071A2  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14717   0071A4  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14718   0071A6  5079               	movf	121,w,c	;volatile
 14719   0071A8  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14720   0071AA  0BF7               	andlw	-9
 14721   0071AC  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14722   0071AE  6E79               	movwf	121,c	;volatile
 14723                           
 14724                           ;color.c: 111:     LATEbits.LATE7 = !LATEbits.LATE7;
 14725   0071B0  AE7D               	btfss	125,7,c	;volatile
 14726   0071B2  EFDD  F038         	goto	u5241
 14727   0071B6  EFE1  F038         	goto	u5240
 14728   0071BA                     u5241:
 14729   0071BA  6A02               	clrf	??_color_click_toggleLED^0,c
 14730   0071BC  2A02               	incf	??_color_click_toggleLED^0,f,c
 14731   0071BE  EFE2  F038         	goto	u5258
 14732   0071C2                     u5240:
 14733   0071C2  6A02               	clrf	??_color_click_toggleLED^0,c
 14734   0071C4                     u5258:
 14735   0071C4  3202               	rrcf	??_color_click_toggleLED^0,f,c
 14736   0071C6  3202               	rrcf	??_color_click_toggleLED^0,f,c
 14737   0071C8  507D               	movf	125,w,c	;volatile
 14738   0071CA  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14739   0071CC  0B7F               	andlw	-129
 14740   0071CE  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14741   0071D0  6E7D               	movwf	125,c	;volatile
 14742   0071D2  0012               	return		;funcret
 14743   0071D4                     __end_of_color_click_toggleLED:
 14744                           	callstack 0
 14745                           
 14746 ;; *************** function _color_click_init *****************
 14747 ;; Defined at:
 14748 ;;		line 8 in file "color.c"
 14749 ;; Parameters:    Size  Location     Type
 14750 ;;		None
 14751 ;; Auto vars:     Size  Location     Type
 14752 ;;		None
 14753 ;; Return value:  Size  Location     Type
 14754 ;;                  1    wreg      void 
 14755 ;; Registers used:
 14756 ;;		wreg, status,2, status,0, cstack
 14757 ;; Tracked objects:
 14758 ;;		On entry : 0/0
 14759 ;;		On exit  : 0/0
 14760 ;;		Unchanged: 0/0
 14761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14765 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14766 ;;Total ram usage:        1 bytes
 14767 ;; Hardware stack levels used: 1
 14768 ;; Hardware stack levels required when called: 5
 14769 ;; This function calls:
 14770 ;;		_I2C_2_Master_Init
 14771 ;;		_color_writetoaddr
 14772 ;; This function is called by:
 14773 ;;		_main
 14774 ;; This function uses a non-reentrant model
 14775 ;;
 14776                           
 14777                           	psect	text46
 14778   007314                     __ptext46:
 14779                           	callstack 0
 14780   007314                     _color_click_init:
 14781                           	callstack 25
 14782   007314                     
 14783                           ;color.c: 10:     I2C_2_Master_Init();
 14784   007314  EC9C  F03A         	call	_I2C_2_Master_Init	;wreg free
 14785   007318                     
 14786                           ;color.c: 11:  color_writetoaddr(0x00, 0x01);
 14787   007318  0E01               	movlw	1
 14788   00731A  6E04               	movwf	color_writetoaddr@value^0,c
 14789   00731C  0E00               	movlw	0
 14790   00731E  ECD8  F03A         	call	_color_writetoaddr
 14791   007322                     
 14792                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
 14793   007322  0E3F               	movlw	63
 14794   007324  6E06               	movwf	??_color_click_init^0,c
 14795   007326  0E55               	movlw	85
 14796   007328                     u8407:
 14797   007328  2EE8               	decfsz	wreg,f,c
 14798   00732A  D7FE               	bra	u8407
 14799   00732C  2E06               	decfsz	??_color_click_init^0,f,c
 14800   00732E  D7FC               	bra	u8407
 14801   007330  0000               	nop	
 14802   007332                     
 14803                           ;color.c: 13:  color_writetoaddr(0x00, 0x03);
 14804   007332  0E03               	movlw	3
 14805   007334  6E04               	movwf	color_writetoaddr@value^0,c
 14806   007336  0E00               	movlw	0
 14807   007338  ECD8  F03A         	call	_color_writetoaddr
 14808   00733C                     
 14809                           ;color.c: 14:  color_writetoaddr(0x01, 0xFF);
 14810   00733C  0EFF               	movlw	255
 14811   00733E  6E04               	movwf	color_writetoaddr@value^0,c
 14812   007340  0E01               	movlw	1
 14813   007342  ECD8  F03A         	call	_color_writetoaddr
 14814   007346                     
 14815                           ;color.c: 15:     color_writetoaddr(0x03, 0xFF);
 14816   007346  0EFF               	movlw	255
 14817   007348  6E04               	movwf	color_writetoaddr@value^0,c
 14818   00734A  0E03               	movlw	3
 14819   00734C  ECD8  F03A         	call	_color_writetoaddr
 14820   007350                     
 14821                           ;color.c: 27:     LATGbits.LATG0=0;
 14822   007350  907F               	bcf	127,0,c	;volatile
 14823   007352                     
 14824                           ;color.c: 28:     LATAbits.LATA3=0;
 14825   007352  9679               	bcf	121,3,c	;volatile
 14826   007354                     
 14827                           ;color.c: 29:     LATEbits.LATE7=0;
 14828   007354  9E7D               	bcf	125,7,c	;volatile
 14829   007356                     
 14830                           ;color.c: 32:     TRISGbits.TRISG0=0;
 14831   007356  9087               	bcf	135,0,c	;volatile
 14832   007358                     
 14833                           ;color.c: 33:     TRISAbits.TRISA3=0;
 14834   007358  9681               	bcf	129,3,c	;volatile
 14835   00735A                     
 14836                           ;color.c: 34:     TRISEbits.TRISE7=0;
 14837   00735A  9E85               	bcf	133,7,c	;volatile
 14838   00735C  0012               	return		;funcret
 14839   00735E                     __end_of_color_click_init:
 14840                           	callstack 0
 14841                           
 14842 ;; *************** function _color_writetoaddr *****************
 14843 ;; Defined at:
 14844 ;;		line 38 in file "color.c"
 14845 ;; Parameters:    Size  Location     Type
 14846 ;;  address         1    wreg     unsigned char 
 14847 ;;  value           1    3[COMRAM] unsigned char 
 14848 ;; Auto vars:     Size  Location     Type
 14849 ;;  address         1    4[COMRAM] unsigned char 
 14850 ;; Return value:  Size  Location     Type
 14851 ;;                  1    wreg      void 
 14852 ;; Registers used:
 14853 ;;		wreg, status,2, status,0, cstack
 14854 ;; Tracked objects:
 14855 ;;		On entry : 0/0
 14856 ;;		On exit  : 0/0
 14857 ;;		Unchanged: 0/0
 14858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14859 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14862 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14863 ;;Total ram usage:        2 bytes
 14864 ;; Hardware stack levels used: 1
 14865 ;; Hardware stack levels required when called: 4
 14866 ;; This function calls:
 14867 ;;		_I2C_2_Master_Start
 14868 ;;		_I2C_2_Master_Stop
 14869 ;;		_I2C_2_Master_Write
 14870 ;; This function is called by:
 14871 ;;		_color_click_init
 14872 ;;		_decide_action
 14873 ;; This function uses a non-reentrant model
 14874 ;;
 14875                           
 14876                           	psect	text47
 14877   0075B0                     __ptext47:
 14878                           	callstack 0
 14879   0075B0                     _color_writetoaddr:
 14880                           	callstack 25
 14881                           
 14882                           ;incstack = 0
 14883                           ;color_writetoaddr@address stored from wreg
 14884   0075B0  6E05               	movwf	color_writetoaddr@address^0,c
 14885   0075B2                     
 14886                           ;color.c: 39:     I2C_2_Master_Start();
 14887   0075B2  EC56  F03B         	call	_I2C_2_Master_Start	;wreg free
 14888                           
 14889                           ;color.c: 40:     I2C_2_Master_Write(0x52 | 0x00);
 14890   0075B6  0E52               	movlw	82
 14891   0075B8  EC3B  F03B         	call	_I2C_2_Master_Write
 14892                           
 14893                           ;color.c: 41:     I2C_2_Master_Write(0x80 | address);
 14894   0075BC  5005               	movf	color_writetoaddr@address^0,w,c
 14895   0075BE  0980               	iorlw	128
 14896   0075C0  EC3B  F03B         	call	_I2C_2_Master_Write
 14897                           
 14898                           ;color.c: 42:     I2C_2_Master_Write(value);
 14899   0075C4  5004               	movf	color_writetoaddr@value^0,w,c
 14900   0075C6  EC3B  F03B         	call	_I2C_2_Master_Write
 14901                           
 14902                           ;color.c: 43:     I2C_2_Master_Stop();
 14903   0075CA  EC51  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14904   0075CE  0012               	return		;funcret
 14905   0075D0                     __end_of_color_writetoaddr:
 14906                           	callstack 0
 14907                           
 14908 ;; *************** function _I2C_2_Master_Write *****************
 14909 ;; Defined at:
 14910 ;;		line 40 in file "i2c.c"
 14911 ;; Parameters:    Size  Location     Type
 14912 ;;  data_byte       1    wreg     unsigned char 
 14913 ;; Auto vars:     Size  Location     Type
 14914 ;;  data_byte       1    2[COMRAM] unsigned char 
 14915 ;; Return value:  Size  Location     Type
 14916 ;;                  1    wreg      void 
 14917 ;; Registers used:
 14918 ;;		wreg, status,2, status,0, cstack
 14919 ;; Tracked objects:
 14920 ;;		On entry : 0/0
 14921 ;;		On exit  : 0/0
 14922 ;;		Unchanged: 0/0
 14923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14925 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14927 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14928 ;;Total ram usage:        1 bytes
 14929 ;; Hardware stack levels used: 1
 14930 ;; Hardware stack levels required when called: 3
 14931 ;; This function calls:
 14932 ;;		_I2C_2_Master_Idle
 14933 ;; This function is called by:
 14934 ;;		_color_writetoaddr
 14935 ;;		_color_read_Clear
 14936 ;;		_color_read_Red
 14937 ;;		_color_read_Green
 14938 ;;		_color_read_Blue
 14939 ;; This function uses a non-reentrant model
 14940 ;;
 14941                           
 14942                           	psect	text48
 14943   007676                     __ptext48:
 14944                           	callstack 0
 14945   007676                     _I2C_2_Master_Write:
 14946                           	callstack 25
 14947                           
 14948                           ;incstack = 0
 14949                           ;I2C_2_Master_Write@data_byte stored from wreg
 14950   007676  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
 14951   007678                     
 14952                           ;i2c.c: 41:   I2C_2_Master_Idle();
 14953   007678  ECB1  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14954   00767C                     
 14955                           ;i2c.c: 42:   SSP2BUF = data_byte;
 14956   00767C  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 14957   007680  0012               	return		;funcret
 14958   007682                     __end_of_I2C_2_Master_Write:
 14959                           	callstack 0
 14960                           
 14961 ;; *************** function _I2C_2_Master_Stop *****************
 14962 ;; Defined at:
 14963 ;;		line 35 in file "i2c.c"
 14964 ;; Parameters:    Size  Location     Type
 14965 ;;		None
 14966 ;; Auto vars:     Size  Location     Type
 14967 ;;		None
 14968 ;; Return value:  Size  Location     Type
 14969 ;;                  1    wreg      void 
 14970 ;; Registers used:
 14971 ;;		wreg, status,2, status,0, cstack
 14972 ;; Tracked objects:
 14973 ;;		On entry : 0/0
 14974 ;;		On exit  : 0/0
 14975 ;;		Unchanged: 0/0
 14976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14981 ;;Total ram usage:        0 bytes
 14982 ;; Hardware stack levels used: 1
 14983 ;; Hardware stack levels required when called: 3
 14984 ;; This function calls:
 14985 ;;		_I2C_2_Master_Idle
 14986 ;; This function is called by:
 14987 ;;		_color_writetoaddr
 14988 ;;		_color_read_Clear
 14989 ;;		_color_read_Red
 14990 ;;		_color_read_Green
 14991 ;;		_color_read_Blue
 14992 ;; This function uses a non-reentrant model
 14993 ;;
 14994                           
 14995                           	psect	text49
 14996   0076A2                     __ptext49:
 14997                           	callstack 0
 14998   0076A2                     _I2C_2_Master_Stop:
 14999                           	callstack 25
 15000   0076A2                     
 15001                           ;i2c.c: 36:   I2C_2_Master_Idle();
 15002   0076A2  ECB1  F03A         	call	_I2C_2_Master_Idle	;wreg free
 15003   0076A6                     
 15004                           ;i2c.c: 37:   SSP2CON2bits.PEN = 1;
 15005   0076A6  010E               	movlb	14	; () banked
 15006   0076A8  85DA               	bsf	218,2,b	;volatile
 15007   0076AA                     
 15008                           ; BSR set to: 14
 15009   0076AA  0012               	return		;funcret
 15010   0076AC                     __end_of_I2C_2_Master_Stop:
 15011                           	callstack 0
 15012                           
 15013 ;; *************** function _I2C_2_Master_Start *****************
 15014 ;; Defined at:
 15015 ;;		line 25 in file "i2c.c"
 15016 ;; Parameters:    Size  Location     Type
 15017 ;;		None
 15018 ;; Auto vars:     Size  Location     Type
 15019 ;;		None
 15020 ;; Return value:  Size  Location     Type
 15021 ;;                  1    wreg      void 
 15022 ;; Registers used:
 15023 ;;		wreg, status,2, status,0, cstack
 15024 ;; Tracked objects:
 15025 ;;		On entry : 0/0
 15026 ;;		On exit  : 0/0
 15027 ;;		Unchanged: 0/0
 15028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15033 ;;Total ram usage:        0 bytes
 15034 ;; Hardware stack levels used: 1
 15035 ;; Hardware stack levels required when called: 3
 15036 ;; This function calls:
 15037 ;;		_I2C_2_Master_Idle
 15038 ;; This function is called by:
 15039 ;;		_color_writetoaddr
 15040 ;;		_color_read_Clear
 15041 ;;		_color_read_Red
 15042 ;;		_color_read_Green
 15043 ;;		_color_read_Blue
 15044 ;; This function uses a non-reentrant model
 15045 ;;
 15046                           
 15047                           	psect	text50
 15048   0076AC                     __ptext50:
 15049                           	callstack 0
 15050   0076AC                     _I2C_2_Master_Start:
 15051                           	callstack 25
 15052   0076AC                     
 15053                           ;i2c.c: 26:   I2C_2_Master_Idle();
 15054   0076AC  ECB1  F03A         	call	_I2C_2_Master_Idle	;wreg free
 15055   0076B0                     
 15056                           ;i2c.c: 27:   SSP2CON2bits.SEN = 1;
 15057   0076B0  010E               	movlb	14	; () banked
 15058   0076B2  81DA               	bsf	218,0,b	;volatile
 15059   0076B4                     
 15060                           ; BSR set to: 14
 15061   0076B4  0012               	return		;funcret
 15062   0076B6                     __end_of_I2C_2_Master_Start:
 15063                           	callstack 0
 15064                           
 15065 ;; *************** function _I2C_2_Master_Idle *****************
 15066 ;; Defined at:
 15067 ;;		line 21 in file "i2c.c"
 15068 ;; Parameters:    Size  Location     Type
 15069 ;;		None
 15070 ;; Auto vars:     Size  Location     Type
 15071 ;;		None
 15072 ;; Return value:  Size  Location     Type
 15073 ;;                  1    wreg      void 
 15074 ;; Registers used:
 15075 ;;		wreg, status,2, status,0
 15076 ;; Tracked objects:
 15077 ;;		On entry : 0/0
 15078 ;;		On exit  : 0/0
 15079 ;;		Unchanged: 0/0
 15080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15083 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15085 ;;Total ram usage:        1 bytes
 15086 ;; Hardware stack levels used: 1
 15087 ;; Hardware stack levels required when called: 2
 15088 ;; This function calls:
 15089 ;;		Nothing
 15090 ;; This function is called by:
 15091 ;;		_I2C_2_Master_Start
 15092 ;;		_I2C_2_Master_RepStart
 15093 ;;		_I2C_2_Master_Stop
 15094 ;;		_I2C_2_Master_Write
 15095 ;;		_I2C_2_Master_Read
 15096 ;; This function uses a non-reentrant model
 15097 ;;
 15098                           
 15099                           	psect	text51
 15100   007562                     __ptext51:
 15101                           	callstack 0
 15102   007562                     _I2C_2_Master_Idle:
 15103                           	callstack 25
 15104   007562                     l119:
 15105   007562  010E               	movlb	14	; () banked
 15106   007564  B5D8               	btfsc	216,2,b	;volatile
 15107   007566  EFB7  F03A         	goto	u3021
 15108   00756A  EFB9  F03A         	goto	u3020
 15109   00756E                     u3021:
 15110   00756E  EFB1  F03A         	goto	l119
 15111   007572                     u3020:
 15112   007572                     
 15113                           ; BSR set to: 14
 15114   007572  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
 15115   007576  0E1F               	movlw	31
 15116   007578  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
 15117   00757A  A4D8               	btfss	status,2,c
 15118   00757C  EFC2  F03A         	goto	u3031
 15119   007580  EFC4  F03A         	goto	u3030
 15120   007584                     u3031:
 15121   007584  EFB1  F03A         	goto	l119
 15122   007588                     u3030:
 15123   007588                     
 15124                           ; BSR set to: 14
 15125   007588  0012               	return		;funcret
 15126   00758A                     __end_of_I2C_2_Master_Idle:
 15127                           	callstack 0
 15128                           
 15129 ;; *************** function _I2C_2_Master_Init *****************
 15130 ;; Defined at:
 15131 ;;		line 4 in file "i2c.c"
 15132 ;; Parameters:    Size  Location     Type
 15133 ;;		None
 15134 ;; Auto vars:     Size  Location     Type
 15135 ;;		None
 15136 ;; Return value:  Size  Location     Type
 15137 ;;                  1    wreg      void 
 15138 ;; Registers used:
 15139 ;;		wreg, status,2
 15140 ;; Tracked objects:
 15141 ;;		On entry : 0/0
 15142 ;;		On exit  : 0/0
 15143 ;;		Unchanged: 0/0
 15144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15149 ;;Total ram usage:        0 bytes
 15150 ;; Hardware stack levels used: 1
 15151 ;; Hardware stack levels required when called: 2
 15152 ;; This function calls:
 15153 ;;		Nothing
 15154 ;; This function is called by:
 15155 ;;		_color_click_init
 15156 ;;		_main
 15157 ;; This function uses a non-reentrant model
 15158 ;;
 15159                           
 15160                           	psect	text52
 15161   007538                     __ptext52:
 15162                           	callstack 0
 15163   007538                     _I2C_2_Master_Init:
 15164                           	callstack 27
 15165   007538                     
 15166                           ;i2c.c: 6:   SSP2CON1bits.SSPM= 0b1000;
 15167   007538  010E               	movlb	14	; () banked
 15168   00753A  51D9               	movf	217,w,b	;volatile
 15169   00753C  0BF0               	andlw	-16
 15170   00753E  0908               	iorlw	8
 15171   007540  6FD9               	movwf	217,b	;volatile
 15172   007542                     
 15173                           ; BSR set to: 14
 15174                           ;i2c.c: 7:   SSP2CON1bits.SSPEN = 1;
 15175   007542  8BD9               	bsf	217,5,b	;volatile
 15176                           
 15177                           ;i2c.c: 8:   SSP2ADD = (64000000/(4*100000))-1;
 15178   007544  0E9F               	movlw	159
 15179   007546  6FD6               	movwf	214,b	;volatile
 15180   007548                     
 15181                           ; BSR set to: 14
 15182                           ;i2c.c: 11:   TRISDbits.TRISD5 = 1;
 15183   007548  8A84               	bsf	132,5,c	;volatile
 15184   00754A                     
 15185                           ; BSR set to: 14
 15186                           ;i2c.c: 12:   TRISDbits.TRISD6 = 1;
 15187   00754A  8C84               	bsf	132,6,c	;volatile
 15188   00754C                     
 15189                           ; BSR set to: 14
 15190                           ;i2c.c: 13:   ANSELDbits.ANSELD5=0;
 15191   00754C  9BA7               	bcf	167,5,b	;volatile
 15192   00754E                     
 15193                           ; BSR set to: 14
 15194                           ;i2c.c: 14:   ANSELDbits.ANSELD6=0;
 15195   00754E  9DA7               	bcf	167,6,b	;volatile
 15196                           
 15197                           ;i2c.c: 15:   SSP2DATPPS=0x1D;
 15198   007550  0E1D               	movlw	29
 15199   007552  6F1D               	movwf	29,b	;volatile
 15200                           
 15201                           ;i2c.c: 16:   SSP2CLKPPS=0x1E;
 15202   007554  0E1E               	movlw	30
 15203   007556  6F1C               	movwf	28,b	;volatile
 15204                           
 15205                           ;i2c.c: 17:   RD5PPS=0x1C;
 15206   007558  0E1C               	movlw	28
 15207   00755A  6F6F               	movwf	111,b	;volatile
 15208                           
 15209                           ;i2c.c: 18:   RD6PPS=0x1B;
 15210   00755C  0E1B               	movlw	27
 15211   00755E  6F70               	movwf	112,b	;volatile
 15212   007560                     
 15213                           ; BSR set to: 14
 15214   007560  0012               	return		;funcret
 15215   007562                     __end_of_I2C_2_Master_Init:
 15216                           	callstack 0
 15217                           
 15218 ;; *************** function _Timer0_init *****************
 15219 ;; Defined at:
 15220 ;;		line 7 in file "timers.c"
 15221 ;; Parameters:    Size  Location     Type
 15222 ;;		None
 15223 ;; Auto vars:     Size  Location     Type
 15224 ;;		None
 15225 ;; Return value:  Size  Location     Type
 15226 ;;                  1    wreg      void 
 15227 ;; Registers used:
 15228 ;;		wreg, status,2
 15229 ;; Tracked objects:
 15230 ;;		On entry : 0/0
 15231 ;;		On exit  : 0/0
 15232 ;;		Unchanged: 0/0
 15233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15238 ;;Total ram usage:        0 bytes
 15239 ;; Hardware stack levels used: 1
 15240 ;; Hardware stack levels required when called: 2
 15241 ;; This function calls:
 15242 ;;		Nothing
 15243 ;; This function is called by:
 15244 ;;		_main
 15245 ;; This function uses a non-reentrant model
 15246 ;;
 15247                           
 15248                           	psect	text53
 15249   0075D0                     __ptext53:
 15250                           	callstack 0
 15251   0075D0                     _Timer0_init:
 15252                           	callstack 28
 15253   0075D0                     
 15254                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 15255   0075D0  50D6               	movf	214,w,c	;volatile
 15256   0075D2  0B1F               	andlw	-225
 15257   0075D4  0940               	iorlw	64
 15258   0075D6  6ED6               	movwf	214,c	;volatile
 15259   0075D8                     
 15260                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 15261   0075D8  88D6               	bsf	214,4,c	;volatile
 15262                           
 15263                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1111;
 15264   0075DA  0E0F               	movlw	15
 15265   0075DC  12D6               	iorwf	214,f,c	;volatile
 15266                           
 15267                           ;timers.c: 12:     T0CON0bits.T0OUTPS=0b000;
 15268   0075DE  0EF0               	movlw	-16
 15269   0075E0  16D5               	andwf	213,f,c	;volatile
 15270   0075E2                     
 15271                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
 15272   0075E2  88D5               	bsf	213,4,c	;volatile
 15273                           
 15274                           ;timers.c: 17:     TMR0H=0b00001011;
 15275   0075E4  0E0B               	movlw	11
 15276   0075E6  6ED4               	movwf	212,c	;volatile
 15277                           
 15278                           ;timers.c: 18:     TMR0L=0b11011011;
 15279   0075E8  0EDB               	movlw	219
 15280   0075EA  6ED3               	movwf	211,c	;volatile
 15281   0075EC                     
 15282                           ;timers.c: 20:     T0CON0bits.T0EN=1;
 15283   0075EC  8ED5               	bsf	213,7,c	;volatile
 15284   0075EE  0012               	return		;funcret
 15285   0075F0                     __end_of_Timer0_init:
 15286                           	callstack 0
 15287                           
 15288 ;; *************** function _Interrupts_init *****************
 15289 ;; Defined at:
 15290 ;;		line 7 in file "interrupts.c"
 15291 ;; Parameters:    Size  Location     Type
 15292 ;;		None
 15293 ;; Auto vars:     Size  Location     Type
 15294 ;;		None
 15295 ;; Return value:  Size  Location     Type
 15296 ;;                  1    wreg      void 
 15297 ;; Registers used:
 15298 ;;		None
 15299 ;; Tracked objects:
 15300 ;;		On entry : 0/0
 15301 ;;		On exit  : 0/0
 15302 ;;		Unchanged: 0/0
 15303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15308 ;;Total ram usage:        0 bytes
 15309 ;; Hardware stack levels used: 1
 15310 ;; Hardware stack levels required when called: 2
 15311 ;; This function calls:
 15312 ;;		Nothing
 15313 ;; This function is called by:
 15314 ;;		_main
 15315 ;; This function uses a non-reentrant model
 15316 ;;
 15317                           
 15318                           	psect	text54
 15319   007682                     __ptext54:
 15320                           	callstack 0
 15321   007682                     _Interrupts_init:
 15322                           	callstack 28
 15323   007682                     
 15324                           ;interrupts.c: 9:     INTCONbits.PEIE=1;
 15325   007682  8CF2               	bsf	242,6,c	;volatile
 15326                           
 15327                           ;interrupts.c: 10:     PIE2bits.C1IE=1;
 15328   007684  010E               	movlb	14	; () banked
 15329   007686  812B               	bsf	43,0,b	;volatile
 15330                           
 15331                           ;interrupts.c: 14:     PIE0bits.IOCIE=1;
 15332   007688  8929               	bsf	41,4,b	;volatile
 15333                           
 15334                           ;interrupts.c: 15:     INTCONbits.GIE=1;
 15335   00768A  8EF2               	bsf	242,7,c	;volatile
 15336   00768C                     
 15337                           ; BSR set to: 14
 15338   00768C  0012               	return		;funcret
 15339   00768E                     __end_of_Interrupts_init:
 15340                           	callstack 0
 15341                           
 15342 ;; *************** function _ADC_init *****************
 15343 ;; Defined at:
 15344 ;;		line 9 in file "ADC.c"
 15345 ;; Parameters:    Size  Location     Type
 15346 ;;		None
 15347 ;; Auto vars:     Size  Location     Type
 15348 ;;		None
 15349 ;; Return value:  Size  Location     Type
 15350 ;;                  1    wreg      void 
 15351 ;; Registers used:
 15352 ;;		wreg, status,2
 15353 ;; Tracked objects:
 15354 ;;		On entry : 0/0
 15355 ;;		On exit  : 0/0
 15356 ;;		Unchanged: 0/0
 15357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15362 ;;Total ram usage:        0 bytes
 15363 ;; Hardware stack levels used: 1
 15364 ;; Hardware stack levels required when called: 2
 15365 ;; This function calls:
 15366 ;;		Nothing
 15367 ;; This function is called by:
 15368 ;;		_main
 15369 ;; This function uses a non-reentrant model
 15370 ;;
 15371                           
 15372                           	psect	text55
 15373   00762C                     __ptext55:
 15374                           	callstack 0
 15375   00762C                     _ADC_init:
 15376                           	callstack 28
 15377   00762C                     
 15378                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
 15379   00762C  8C86               	bsf	134,6,c	;volatile
 15380                           
 15381                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
 15382   00762E  010E               	movlb	14	; () banked
 15383   007630  8DB4               	bsf	180,6,b	;volatile
 15384                           
 15385                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
 15386   007632  010F               	movlb	15	; () banked
 15387   007634  9958               	bcf	88,4,b	;volatile
 15388   007636                     
 15389                           ; BSR set to: 15
 15390                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
 15391   007636  0EFC               	movlw	-4
 15392   007638  1758               	andwf	88,f,b	;volatile
 15393                           
 15394                           ;ADC.c: 17:     ADPCH=0b101110;
 15395   00763A  0E2E               	movlw	46
 15396   00763C  6F5F               	movwf	95,b	;volatile
 15397   00763E                     
 15398                           ; BSR set to: 15
 15399                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
 15400   00763E  9460               	bcf	96,2,c	;volatile
 15401   007640                     
 15402                           ; BSR set to: 15
 15403                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
 15404   007640  8860               	bsf	96,4,c	;volatile
 15405   007642                     
 15406                           ; BSR set to: 15
 15407                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
 15408   007642  8E60               	bsf	96,7,c	;volatile
 15409   007644                     
 15410                           ; BSR set to: 15
 15411   007644  0012               	return		;funcret
 15412   007646                     __end_of_ADC_init:
 15413                           	callstack 0
 15414                           
 15415 ;; *************** function _HighISR *****************
 15416 ;; Defined at:
 15417 ;;		line 23 in file "interrupts.c"
 15418 ;; Parameters:    Size  Location     Type
 15419 ;;		None
 15420 ;; Auto vars:     Size  Location     Type
 15421 ;;		None
 15422 ;; Return value:  Size  Location     Type
 15423 ;;                  1    wreg      void 
 15424 ;; Registers used:
 15425 ;;		wreg, cstack
 15426 ;; Tracked objects:
 15427 ;;		On entry : 0/0
 15428 ;;		On exit  : 0/0
 15429 ;;		Unchanged: 0/0
 15430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15435 ;;Total ram usage:        0 bytes
 15436 ;; Hardware stack levels used: 1
 15437 ;; Hardware stack levels required when called: 1
 15438 ;; This function calls:
 15439 ;;		i2_sendCharSerial4
 15440 ;; This function is called by:
 15441 ;;		Interrupt level 2
 15442 ;; This function uses a non-reentrant model
 15443 ;;
 15444                           
 15445                           	psect	intcode
 15446   000008                     __pintcode:
 15447                           	callstack 0
 15448   000008                     _HighISR:
 15449                           	callstack 24
 15450                           
 15451                           ; BSR set to: 15
 15452                           ;incstack = 0
 15453   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15454   00000A                     
 15455                           ;interrupts.c: 48:     if (PORTBbits.RB0){
 15456   00000A  A08A               	btfss	138,0,c	;volatile
 15457   00000C  EF0A  F000         	goto	i2u593_41
 15458   000010  EF0C  F000         	goto	i2u593_40
 15459   000014                     i2u593_41:
 15460   000014  EF10  F000         	goto	i2l451
 15461   000018                     i2u593_40:
 15462   000018                     
 15463                           ;interrupts.c: 49:         LATHbits.LATH3 = 0;
 15464   000018  9680               	bcf	128,3,c	;volatile
 15465   00001A                     
 15466                           ;interrupts.c: 50:         sendCharSerial4('a');
 15467   00001A  0E61               	movlw	97
 15468   00001C  EC2F  F03B         	call	i2_sendCharSerial4
 15469   000020                     i2l451:
 15470   000020  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15471   000022  0011               	retfie		f
 15472   000024                     __end_of_HighISR:
 15473                           	callstack 0
 15474                           
 15475 ;; *************** function i2_sendCharSerial4 *****************
 15476 ;; Defined at:
 15477 ;;		line 31 in file "serial.c"
 15478 ;; Parameters:    Size  Location     Type
 15479 ;;  charToSend      1    wreg     unsigned char 
 15480 ;; Auto vars:     Size  Location     Type
 15481 ;;  charToSend      1    0[COMRAM] unsigned char 
 15482 ;; Return value:  Size  Location     Type
 15483 ;;                  1    wreg      void 
 15484 ;; Registers used:
 15485 ;;		wreg
 15486 ;; Tracked objects:
 15487 ;;		On entry : 0/0
 15488 ;;		On exit  : 0/0
 15489 ;;		Unchanged: 0/0
 15490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15495 ;;Total ram usage:        1 bytes
 15496 ;; Hardware stack levels used: 1
 15497 ;; This function calls:
 15498 ;;		Nothing
 15499 ;; This function is called by:
 15500 ;;		_HighISR
 15501 ;; This function uses a non-reentrant model
 15502 ;;
 15503                           
 15504                           	psect	text57
 15505   00765E                     __ptext57:
 15506                           	callstack 0
 15507   00765E                     i2_sendCharSerial4:
 15508                           	callstack 24
 15509                           
 15510                           ;incstack = 0
 15511                           ;i2sendCharSerial4@charToSend stored from wreg
 15512   00765E  6E01               	movwf	i2sendCharSerial4@charToSend^0,c
 15513   007660                     i2l497:
 15514   007660  010E               	movlb	14	; () banked
 15515   007662  A537               	btfss	55,2,b	;volatile
 15516   007664  EF36  F03B         	goto	i2u565_41
 15517   007668  EF38  F03B         	goto	i2u565_40
 15518   00766C                     i2u565_41:
 15519   00766C  EF30  F03B         	goto	i2l497
 15520   007670                     i2u565_40:
 15521   007670                     
 15522                           ; BSR set to: 14
 15523                           ;serial.c: 33:     TX4REG = charToSend;
 15524   007670  C001  FEE4         	movff	i2sendCharSerial4@charToSend,3812	;volatile
 15525   007674                     
 15526                           ; BSR set to: 14
 15527   007674  0012               	return		;funcret
 15528   007676                     __end_ofi2_sendCharSerial4:
 15529                           	callstack 0
 15530                           
 15531                           	psect	rparam
 15532   000000                     
 15533                           	psect	temp
 15534   00005D                     btemp:
 15535                           	callstack 0
 15536   00005D                     	ds	1
 15537   000000                     int$flags	set	btemp
 15538   000000                     wtemp8	set	btemp+1
 15539   000000                     ttemp5	set	btemp+1
 15540   000000                     ttemp6	set	btemp+4
 15541   000000                     ttemp7	set	btemp+8
 15542                           
 15543                           	psect	config
 15544                           
 15545                           ;Config register CONFIG1L @ 0x300000
 15546                           ;	External Oscillator mode Selection bits
 15547                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15548                           ;	Power-up default value for COSC bits
 15549                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15550   300000                     	org	3145728
 15551   300000  AA                 	db	170
 15552                           
 15553                           ;Config register CONFIG1H @ 0x300001
 15554                           ;	unspecified, using default values
 15555                           ;	Clock Out Enable bit
 15556                           ;	CLKOUTEN = 0x1, unprogrammed default
 15557                           ;	Clock Switch Enable bit
 15558                           ;	CSWEN = 0x1, unprogrammed default
 15559                           ;	Fail-Safe Clock Monitor Enable bit
 15560                           ;	FCMEN = 0x1, unprogrammed default
 15561   300001                     	org	3145729
 15562   300001  FF                 	db	255
 15563                           
 15564                           ;Config register CONFIG3L @ 0x300004
 15565                           ;	WDT Period Select bits
 15566                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15567                           ;	WDT operating mode
 15568                           ;	WDTE = OFF, WDT Disabled
 15569   300004                     	org	3145732
 15570   300004  9F                 	db	159
 15571                           
 15572                           ;Config register CONFIG3H @ 0x300005
 15573                           ;	unspecified, using default values
 15574                           ;	WDT Window Select bits
 15575                           ;	WDTCWS = 0x7, unprogrammed default
 15576                           ;	WDT input clock selector
 15577                           ;	WDTCCS = 0x7, unprogrammed default
 15578   300005                     	org	3145733
 15579   300005  FF                 	db	255
 15580                           tosu	equ	0xFFF
 15581                           tosh	equ	0xFFE
 15582                           tosl	equ	0xFFD
 15583                           stkptr	equ	0xFFC
 15584                           pclatu	equ	0xFFB
 15585                           pclath	equ	0xFFA
 15586                           pcl	equ	0xFF9
 15587                           tblptru	equ	0xFF8
 15588                           tblptrh	equ	0xFF7
 15589                           tblptrl	equ	0xFF6
 15590                           tablat	equ	0xFF5
 15591                           prodh	equ	0xFF4
 15592                           prodl	equ	0xFF3
 15593                           indf0	equ	0xFEF
 15594                           postinc0	equ	0xFEE
 15595                           postdec0	equ	0xFED
 15596                           preinc0	equ	0xFEC
 15597                           plusw0	equ	0xFEB
 15598                           fsr0h	equ	0xFEA
 15599                           fsr0l	equ	0xFE9
 15600                           wreg	equ	0xFE8
 15601                           indf1	equ	0xFE7
 15602                           postinc1	equ	0xFE6
 15603                           postdec1	equ	0xFE5
 15604                           preinc1	equ	0xFE4
 15605                           plusw1	equ	0xFE3
 15606                           fsr1h	equ	0xFE2
 15607                           fsr1l	equ	0xFE1
 15608                           bsr	equ	0xFE0
 15609                           indf2	equ	0xFDF
 15610                           postinc2	equ	0xFDE
 15611                           postdec2	equ	0xFDD
 15612                           preinc2	equ	0xFDC
 15613                           plusw2	equ	0xFDB
 15614                           fsr2h	equ	0xFDA
 15615                           fsr2l	equ	0xFD9
 15616                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    112
    Data        0
    BSS         123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      92
    BANK0           160    118     144
    BANK1           256    184     216
    BANK2           256    198     198
    BANK3           256      0      60
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    inch_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    inch_forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    inch_forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    inch_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    inch_forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    inch_forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pblue_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@blue_val(BANK2[20]), 

    main@pclear_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK2[20]), 

    main@pgreen_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@green_val(BANK2[20]), 

    main@pmL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    main@pmL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pmR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    main@pmR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pred_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@red_val(BANK2[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    reverse_after_read@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    reverse_after_read@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    reverse_one_square@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    reverse_one_square@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S1061DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    S1061DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S2538$buffer	PTR unsigned char  size(2) Largest target is 0

    S2538$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK2[20]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), main@motorR(BANK2[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK2[20]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    turn_left_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    turn_left_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    turn_left_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    turn_left_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    turn_right_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    turn_right_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    turn_right_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    turn_right_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _turn_right_90->_stop
    _turn_right_135->_stop
    _turn_left_90->_stop
    _turn_left_135->_stop
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _reverse_one_square->_stop
    _reverse_after_read->_stop
    _inch_forward->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _decide_action->___flge
    _powf->___flge
    _sqrtf->___fladd
    _scalbnf->___flmul
    ___flmul->___fladd
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___fldiv
    ___flge->___flsub
    ___fldiv->___flmul
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_sendCharSerial4

Critical Paths under _main in BANK0

    _main->_decide_action
    _decide_action->_powf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _decide_action->_powf

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               220   220      0  193568
                                            113 BANK0      5     5      0
                                              0 BANK2    198   198      0
                           _ADC_init
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
              _color_click_toggleLED
                   _color_read_Clear
                      _decide_action
                     _fullSpeedAhead
                    _get16bitTMR0val
                       _inch_forward
                    _initDCmotorsPWM
                         _initUSART4
                      _invert_action
                        _resetTimer0
                 _reverse_after_read
                 _reverse_one_square
                  _sendStringSerial4
                            _sprintf
                               _stop
                      _turn_left_135
                       _turn_left_90
                     _turn_right_135
                      _turn_right_90
 ---------------------------------------------------------------------------------
 (1) _turn_right_90                                        6     2      4    8354
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_right_135                                       6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_90                                         6     2      4    7442
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_135                                        6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    15      5    3287
                                             26 COMRAM    18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2936
                                             22 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    2586
                                             11 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              2 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reverse_one_square                                   6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse_after_read                                   6     2      4    8050
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _resetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _invert_action                                        4     4      0      51
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _inch_forward                                         6     2      4    6986
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    4133
                                             20 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _get16bitTMR0val                                      6     4      2      24
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    2961
                                             20 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          6     4      2    2437
                                             14 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              7 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _decide_action                                       96    96      0  121087
                                             17 BANK0     96    96      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flsub
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                  _color_writetoaddr
                               _powf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   74453
                                              0 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sqrtf                                               41    37      4    1413
                                             17 COMRAM    37    33      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6    9383
                                             42 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    8888
                                             17 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                             12 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8   18849
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8   13662
                                              1 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1094
                                             75 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2767
                                             42 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              2 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_toggleLED                                1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     674
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     674
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0      22
                  i2_sendCharSerial4
 ---------------------------------------------------------------------------------
 (7) i2_sendCharSerial4                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_click_toggleLED
   _color_read_Clear
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _decide_action
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
     ___flge
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
     ___flsub
     ___xxtofl
       _color_read_Blue (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_read_Blue
     _color_read_Green
     _color_read_Red
     _color_writetoaddr
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
         ___fladd (ARG)
     _sqrtf
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _get16bitTMR0val
   _inch_forward
     _setMotorPWM
     _stop
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _invert_action
   _resetTimer0
   _reverse_after_read
     _setMotorPWM
     _stop
   _reverse_one_square
     _setMotorPWM
     _stop
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch
   _stop
   _turn_left_135
     _setMotorPWM
     _stop
   _turn_left_90
     _setMotorPWM
     _stop
   _turn_right_135
     _setMotorPWM
     _stop
   _turn_right_90
     _setMotorPWM
     _stop

 _HighISR (ROOT)
   i2_sendCharSerial4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      68        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      3C      11       23.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C6      C6       9       77.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B8      D8       7       84.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     76      90       5       90.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5C       1       97.9%
BITBIGSFRllhllh     37      0       0      49        0.0%
BITBIGSFRllhhl      31      0       0      47        0.0%
BITBIGSFRlllllh     2A      0       0      60        0.0%
BITBIGSFRllllll     26      0       0      66        0.0%
BITBIGSFRllllhh     20      0       0      52        0.0%
BITBIGSFRlllllh     1E      0       0      54        0.0%
BITBIGSFRhhlllh     1B      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      44        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      53        0.0%
BITBIGSFRlllllh      B      0       0      64        0.0%
BITBIGSFRlllllh      9      0       0      61        0.0%
BITBIGSFRllhlll      8      0       0      50        0.0%
BITBIGSFRllhhhl      6      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      65        0.0%
BITBIGSFRlllllh      6      0       0      59        0.0%
BITBIGSFRlllllh      5      0       0      58        0.0%
BITBIGSFRllhhhh      3      0       0      45        0.0%
BITBIGSFRlllllh      3      0       0      57        0.0%
BITBIGSFRllhlh       2      0       0      48        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRlllllh      1      0       0      62        0.0%
BITBIGSFRlhlh        1      0       0      42        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      51        0.0%
BITBIGSFRhlhl        1      0       0      40        0.0%
BITBIGSFRhhllll      1      0       0      39        0.0%
BITBIGSFRlhh         1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C6      67        0.0%
DATA                 0      0     2C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 15 11:57:43 2024

               _color_read_Red 71D4                   ___fldiv@aexp 0043                   ___fldiv@bexp 0042  
                 ___fldiv@sign 003B                _color_read_Blue 7274                             _L1 0E5D  
                           _L2 0E59                             _L3 0E55                             _L4 0E51  
                           _L5 0E4D                             l50 75CE                             _L6 0E49  
                           l53 7312                             _P1 0E45                             l62 72C2  
                           _P2 0E41                             l47 735C                             l71 34AC  
                           _P3 0E3D                             l56 7222                             _P4 0E39  
                           l65 71D2                             l73 3528                             _P5 0E35  
                           l59 7272                             l77 450E                             l69 3430  
                           l89 70F8                   ___awdiv@sign 0007                             _bp 0E11  
                           _cp 0E21            ___wmul@multiplicand 0004          __end_of_invert_action 70FA  
             _color_read_Clear 72C4               _color_read_Green 7224              ??_Interrupts_init 0002  
                          l122 7588                            l131 76AA                            l203 6DBE  
                          l211 7064                            l116 7560                            l125 76B4  
                          l134 7680                            l230 6AFA                            l214 6A10  
                          l222 6926                            l119 7562                            l128 76A0  
                          l137 7426                            l251 65A2                            l235 6B54  
                          l219 6A6A                            l243 6896                            l227 6980  
                          l412 75EE                            l500 765C                            l262 6BE2  
                          l246 652E                            l254 6634                            l238 683A  
                          l415 762A                            l418 7696                            l506 7536  
                          l195 649C                            l267 6C3E                            l259 66A6  
                          l188 6FCA                            l445 768C                            l198 6D8E  
                          l391 4C4E                            l553 7644                            l369 49DA  
                          l562 75AE                            l806 6F28                            l832 67AA  
                          l488 760C                            l497 7648                            l827 6764  
                          l836 74D2                            l793 6D02                            _lg2 0E31  
                          _abs 74D4                            _ovt 0E25                   ___awmod@sign 0007  
                          prod 0FF3                            wreg 0FE8                   ___flmul@aexp 0023  
                 ___flmul@bexp 0024                   ___flmul@sign 001E                   ___flmul@temp 0029  
                 ___flmul@prod 0025                    main@actions 0250                           l1107 501A  
                         ?_abs 0008                           l1116 50EA                           l1132 73A2  
                         l1220 6330                           l1060 716C                           l1117 50D8  
                         l1053 7164                           l1231 62C8                           l1303 6E78  
                         l1144 5D72                           l1224 626C                           l1400 136E  
                         l1240 7462                           l1217 61D4                           l1146 5BD2  
                         l1090 4F00                           l1155 5C18                           l1091 4EEE  
                         l1092 4EB4                           l1180 55FA                           l1404 13CC  
                         l1157 5C90                           l1149 5B96                           l1158 5C7E  
                         l1183 548C                           l4000 55E0                           l1176 5296  
                         l1193 55BC                           l1185 5504                           l4002 55E6  
                         l1186 54F2                           l4010 6C44                           l1099 51D0  
                         l1371 3300                           l1291 7506                           l4004 55EA  
                         l4100 7138                           l4020 6C74                           l4012 6C52  
                         l1444 76B6                           l1284 73E4                           l1437 32C4  
                         l1454 5FA6                           l4102 714E                           l4030 6CA2  
                         l4022 6C78                           l4014 6C5A                           l4110 6DC0  
                         l1278 617C                           l1471 583E                           l1463 59D8  
                         l4200 5820                           l1376 1164                           l4104 7156  
                         l4040 6CD6                           l4032 6CB0                           l4024 6C80  
                         l4016 6C5E                           l4008 6C40                           l1288 74EE  
                         l4120 6E38                           l4112 6DD0                           l4130 76B0  
                         l4210 58CA                           l1474 5902                           l4202 582E  
                         l1386 11FA                           l4106 7158                           l5010 6FE8  
                         l4042 6CDC                           l4034 6CB6                           l4026 6C92  
                         l4018 6C6C                           l4114 6DE0                           l1467 57E0  
                         l4132 7678                           l4140 7698                           l4300 5B2A  
                         l1476 5970                           l4212 5912                           l4204 5858  
                         l1396 12BC                           l4108 715E                           l5020 702C  
                         l5012 6FF2                           l4036 6CCC                           l4028 6C9A  
                         l4044 6CE2                           l4060 6E98                           l4052 6E7A  
                         l4124 74D4                           l4116 6DEA                           l4134 767C  
                         l4150 73FC                           l4142 769C                           l4310 5B72  
                         l4302 5B3A                           l4214 591C                           l4206 5878  
                         l4230 63B6                           l5014 700A                           l5022 7034  
                         l5006 6FCC                           l4046 6CF2                           l4038 6CD4  
                         l4070 6ED0                           l4062 6EA6                           l4054 6E7E  
                         l4126 74E2                           l4118 6E06                           l5030 73A4  
                         l4128 76AC                           l4136 76A2                           l5040 7314  
                         l4152 7422                           l4144 73E8                           l4320 5BC0  
                         l4312 5B86                           l4304 5B4A                           l4240 59DA  
                         l4400 67A2                           l4216 5932                           l4208 588C  
                         l4160 560C                           l4232 63BA                           l4224 6332  
                         l5024 704C                           l5016 7014                           l5008 6FD0  
                         l4048 6CFA                           l4072 6EDE                           l4080 6F08  
                         l4064 6EAE                           l4056 6E8C                           l5032 73AC  
                         l4138 76A6                           l5050 7346                           l5042 7318  
                         l4154 7424                           l4146 73EC                           l4330 5C08  
                         l4322 5BD0                           l4314 5B94                           l4306 5B5A  
                         l4250 5A16                           l4242 59E6                           l4402 67A8  
                         l4410 74C2                           l4218 5948                           l4162 5640  
                         l4090 7102                           l4234 63FC                           l4226 634E  
                         l5018 7020                           l5210 7084                           l5202 7068  
                         l5026 7648                           l4082 6F18                           l4074 6EF4  
                         l4066 6EC0                           l4058 6E94                           l5034 73BC  
                         l5060 7358                           l5052 7350                           l5044 7322  
                         l4148 73F4                           l4340 5C48                           l4332 5C16  
                         l4324 5BE2                           l4316 5BA0                           l4308 5B62  
                         l4260 5A46                           l4252 5A26                           l4244 59F4  
                         l3700 4D92                           l4420 61E4                           l4180 5700  
                         l4164 566E                           l4172 56A0                           l4092 7114  
                         l4236 6418                           l4228 63A2                           l5212 708C  
                         l5204 706C                           l5220 70A4                           l5028 7658  
                         l4084 6F20                           l4076 6EFC                           l4068 6EC8  
                         l4500 614A                           l5036 73DC                           l5300 6A28  
                         l5062 735A                           l5054 7352                           l5046 7332  
                         l5070 716E                           l4350 5CBA                           l4342 5C76  
                         l4326 5BF8                           l4334 5C28                           l4318 5BBE  
                         l4270 5A7C                           l4262 5A4C                           l4254 5A28  
                         l4246 59F6                           l4406 749C                           l3710 4DC8  
                         l3702 4D98                           l4430 6222                           l4422 61FA  
                         l4414 6180                           l4510 5D74                           l4190 5780  
                         l4182 570E                           l4174 56BE                           l4166 567C  
                         l4158 55FC                           l4094 711C                           l4238 645C  
                         l5230 6F2A                           l5214 7094                           l5206 7074  
                         l5222 70F6                           l4078 6F02                           l5302 6A40  
                         l5310 68D2                           l5056 7354                           l5048 733C  
                         l5064 72C4                           l4360 5D32                           l4352 5CE4  
                         l4336 5C36                           l4328 5BFE                           l4280 5ABC  
                         l4272 5A8C                           l4264 5A5A                           l4248 5A06  
                         l4256 5A30                           l4408 74B2                           l3800 4F8E  
                         l3720 4E04                           l3712 4DD8                           l3704 4DA6  
                         l4440 62AA                           l4432 6254                           l4416 6190  
                         l4520 5DF8                           l4512 5D84                           l4192 5794  
                         l4176 56EC                           l4168 568C                           l4096 7124  
                         l4088 70FA                           l5240 6F8E                           l5232 6F54  
                         l5216 709C                           l5208 707C                           l5400 65E0  
                         l4504 6156                           l5304 6A56                           l5320 6916  
                         l5312 68DC                           l5058 7356                           l5066 730A  
                         l4370 5D68                           l4362 5D4E                           l4346 5CA0  
                         l4354 5CE8                           l4338 5C3A                           l4282 5ACC  
                         l4290 5AEC                           l4274 5A8E                           l4266 5A5C  
                         l4258 5A40                           l3802 4FB4                           l3810 500A  
                         l3730 4E22                           l3722 4E12                           l3714 4DDA  
                         l3706 4DA8                           l4450 6300                           l4442 62B8  
                         l4434 6256                           l4426 620E                           l4418 619E  
                         l4530 5E78                           l4522 5E2C                           l4514 5DA0  
                         l4194 579E                           l4098 7132                           l5250 6FBA  
                         l5242 6F90                           l5234 6F78                           l5410 6624  
                         l5402 65EA                           l5330 6A8E                           l5322 693E  
                         l5314 68F4                           l5306 6898                           l4364 5D52  
                         l4356 5D02                           l4348 5CAC                           l4292 5AFC  
                         l4284 5AD4                           l4268 5A6C                           l4276 5A96  
                         l3820 505E                           l3812 5030                           l3804 4FE8  
                         l3740 4E36                           l3732 4E26                           l3724 4E16  
                         l3708 4DB8                           l3716 4DE2                           l4380 736E  
                         l4452 6310                           l4444 62D6                           l4436 6262  
                         l4428 6216                           l3900 524E                           l4540 5F0C  
                         l4532 5EAC                           l4524 5E34                           l4516 5DD4  
                         l4196 57AA                           l4188 572C                           l7100 1244  
                         l5420 6B56                           l5260 6FC4                           l5252 6FBC  
                         l5244 6F9A                           l5236 6F82                           l5412 664C  
                         l5404 6602                           l5500 751A                           l4460 5FA8  
                         l5340 6ADE                           l5332 6AA6                           l5324 6956  
                         l5316 68FE                           l5308 68BA                           l4366 5D60  
                         l4358 5D18                           l4294 5AFC                           l4286 5AD8  
                         l4278 5AA6                           l4390 6714                           l3830 5088  
                         l3822 506C                           l3814 5040                           l3806 4FEA  
                         l3750 4E4A                           l3742 4E3A                           l3734 4E2A  
                         l3726 4E1A                           l3718 4DF2                           l4454 631E  
                         l4446 62D8                           l4438 629E                           l3910 5286  
                         l3902 5250                           l4542 5F28                           l4534 5EB4  
                         l4526 5E50                           l4518 5DDC                           l4198 57B8  
                         l7110 12D0                           l3670 758A                           l5270 6D3C  
                         l5430 6BBA                           l5422 6B76                           l5262 6FC6  
                         l5254 6FBE                           l5246 6F9C                           l5238 6F84  
                         l5414 6664                           l5406 660C                           l5502 751E  
                         l4470 5FF2                           l4462 5FCE                           l5342 6AEA  
                         l5334 6AB0                           l5350 67AC                           l5326 696C  
                         l5318 690A                           l4560 754C                           l4552 7538  
                         l4368 5D66                           l4392 6724                           l4384 66A8  
                         l3840 50BA                           l3832 5098                           l3824 506E  
                         l3808 4FFA                           l3760 4E9C                           l3752 4E4E  
                         l3744 4E3E                           l3736 4E2E                           l3728 4E1E  
                         l3680 4D2C                           l4456 6320                           l4448 62DC  
                         l3920 52D6                           l3912 52A6                           l3904 5260  
                         l4536 5ED0                           l4544 5F30                           l4528 5E5C  
                         l7200 1678                           l7120 1346                           l7112 12E8  
                         l7104 125A                           l3672 75A6                           l5280 6D80  
                         l5272 6D46                           l5440 6C2A                           l5432 6BC6  
                         l5424 6B8E                           l5264 6FC8                           l5256 6FC0  
                         l5248 6FA6                           l5416 667A                           l5408 6618  
                         l4480 606C                           l4472 6012                           l4464 5FD6  
                         l5344 6B12                           l5336 6AC8                           l5328 6A6C  
                         l5360 6812                           l5352 67CE                           l5450 762C  
                         l5442 75D0                           l4562 754E                           l4554 7542  
                         l3666 7562                           l4298 5B10                           l4394 6732  
                         l4386 66D6                           l3850 5114                           l3842 50D0  
                         l3826 507C                           l3818 5054                           l3834 509A  
                         l3770 4EE0                           l3762 4EAC                           l3746 4E42  
                         l3738 4E32                           l3754 4E52                           l3690 4D60  
                         l3682 4D2E                           l4378 735E                           l3930 5326  
                         l3922 52E0                           l3914 52B6                           l3906 5270  
                         l4546 5F62                           l4538 5F04                           l7210 17C4  
                         l7202 16D0                           l7130 13DC                           l7106 1276  
                         l5282 6DA6                           l5274 6D5E                           l5266 6D04  
                         l5434 6BD2                           l5426 6B98                           l5258 6FC2  
                         l5418 668E                           l4490 60EE                           l4482 60A0  
                         l4474 6032                           l4466 5FE4                           l5346 6B2A  
                         l5338 6AD2                           l5290 69C6                           l5370 6882  
                         l5362 681E                           l5354 67E6                           l5452 7636  
                         l5460 7682                           l5444 75D8                           l4556 7548  
                         l3668 7572                           l4564 75B2                           l4580 72BA  
                         l4572 7224                           l4396 6744                           l4388 66E6  
                         l3860 5190                           l3852 514E                           l3828 5084  
                         l3836 50A8                           l3772 4EE2                           l3764 4EC2  
                         l3756 4E56                           l3748 4E46                           l3684 4D3E  
                         l3692 4D68                           l3676 4D12                           l3940 5368  
                         l3932 5332                           l3924 52F6                           l3908 5280  
                         l4548 5F96                           l7300 217C                           l7212 1874  
                         l7204 1704                           l7220 190A                           l7140 14B2  
                         l7132 13EA                           l7124 137E                           l7116 1320  
                         l7108 1284                           l7060 0F54                           l7052 0F00  
                         l7044 0E82                           l5276 6D68                           l5268 6D24  
                         l5436 6BFA                           l5428 6BB0                           l5380 64FC  
                         l5372 649E                           l4492 60FE                           l4484 60BC  
                         l4476 604A                           l4468 5FE8                           l5348 6B40  
                         l5292 69DE                           l5284 6982                           l5364 682A  
                         l5356 67F0                           l5454 763E                           l5446 75E2  
                         l4558 754A                           l4574 726A                           l4566 71D4  
                         l4398 6752                           l3870 51B0                           l3862 5194  
                         l3846 50FA                           l3854 5150                           l3838 50AC  
                         l3790 4F6A                           l3782 4F32                           l3774 4EEC  
                         l3766 4ECE                           l3758 4E80                           l3694 4D78  
                         l3686 4D4E                           l3678 4D1E                           l3950 53CA  
                         l3942 5378                           l3934 5340                           l3926 5302  
                         l3918 52CA                           l7310 2242                           l7302 21B0  
                         l7230 198C                           l7222 191A                           l7214 1884  
                         l7206 175C                           l7150 1512                           l7142 14CA  
                         l7134 141E                           l7126 139A                           l7118 1338  
                         l7070 0FCC                           l7062 0F76                           l7054 0F1C  
                         l7046 0EA2                           l5278 6D74                           l5438 6C12  
                         l5470 7608                           l5462 75F0                           l5390 655E  
                         l5382 6506                           l5374 64C2                           l4494 6114  
                         l4486 60CE                           l4478 6054                           l5294 69E8  
                         l5286 69A4                           l5366 6852                           l5358 6808  
                         l5456 7640                           l5448 75EC                           l4568 721A  
                         l3872 51BE                           l3864 51A2                           l3856 5160  
                         l3848 5106                           l3792 4F6E                           l3784 4F42  
                         l3776 4F0E                           l3768 4ED2                           l3696 4D7E  
                         l3688 4D5E                           l3960 5472                           l3952 53E6  
                         l3944 5392                           l3936 534C                           l3928 531A  
                         l3880 51DE                           l7400 2A6A                           l7320 236A  
                         l7312 2276                           l7304 21C0                           l7232 19F4  
                         l7224 1936                           l7216 189E                           l7208 1790  
                         l7160 153A                           l7152 1520                           l7136 142E  
                         l7144 14EE                           l7128 13B0                           l7080 1182  
                         l7072 0FE8                           l7048 0EEA                           l5480 7622  
                         l5472 760A                           l5464 75FA                           l5392 6576  
                         l5384 6512                           l5376 64DA                           l4496 6132  
                         l4488 60DE                           l5296 69F4                           l5288 69BC  
                         l5368 686A                           l5458 7642                           l4578 7274  
                         l3874 51C0                           l3866 51A8                           l3858 5170  
                         l3794 4F7C                           l3786 4F50                           l3778 4F1E  
                         l3698 4D90                           l3970 54AE                           l3962 547C  
                         l3954 5410                           l3946 53A2                           l3938 535C  
                         l3890 521E                           l3882 51EC                           l7410 2CB8  
                         l7402 2A8C                           l7330 24F2                           l7322 2384  
                         l7314 22AA                           l7306 21DA                           l7250 1AC0  
                         l7242 1A5C                           l7234 1A0C                           l7226 196A  
                         l7218 18D2                           l7170 15B4                           l7162 1550  
                         l7138 1492                           l7090 11D6                           l7082 119E  
                         l7074 0FFC                           l7066 0FAE                           l7058 0F32  
                         l5466 75FC                           l5474 768E                           l5394 658A  
                         l5386 651E                           l5378 64E4                           l4498 6134  
                         l5490 7444                           l5298 6A00                           l3868 51AA  
                         l3796 4F7E                           l3788 4F5E                           l3980 5520  
                         l3972 54BC                           l3964 548A                           l3956 5446  
                         l3948 53BE                           l3892 5224                           l3884 51EE  
                         l7420 2DA2                           l7412 2CC8                           l7404 2C40  
                         l7340 2600                           l7332 2518                           l7324 23B8  
                         l7316 2326                           l7308 220E                           l7260 1BE2  
                         l7252 1B14                           l7244 1A80                           l7236 1A1C  
                         l7228 197C                           l7164 1560                           l7148 1502  
                         l7092 11E4                           l7076 1018                           l7068 0FBE  
                         l7500 383A                           l5476 760E                           l5468 7606  
                         l5388 6546                           l5396 65A4                           l5492 7454  
                         l5484 7428                           l3798 4F88                           l3990 558A  
                         l3982 552E                           l3974 54EA                           l3966 549C  
                         l3958 5454                           l3894 5234                           l3886 51FE  
                         l3878 51D2                           l7430 2ECA                           l7422 2DFA  
                         l7414 2CE2                           l7406 2C50                           l7350 271C  
                         l7342 2634                           l7334 25A2                           l7326 23EC  
                         l7318 235A                           l7270 1D50                           l7262 1BFC  
                         l7254 1B8E                           l7246 1A94                           l7238 1A34  
                         l7182 15E8                           l7166 1582                           l7078 1116  
                         l7510 39F4                           l7502 3882                           l5478 7614  
                         l5398 65C8                           l5486 7434                           l3992 55A4  
                         l3984 5558                           l3968 54AA                           l3896 523A  
                         l3888 520E                           l7440 3082                           l7432 2F22  
                         l7424 2E2E                           l7416 2D16                           l7408 2C84  
                         l7360 2844                           l7352 2774                           l7344 268A  
                         l7336 25D6                           l7328 2420                           l7280 1EC0  
                         l7272 1DA8                           l7264 1C56                           l7256 1BC2  
                         l7248 1AB0                           l7184 160C                           l7168 15A6  
                         l7096 120E                           l7088 11B4                           l7520 3B10  
                         l7512 3A3C                           l7504 38B6                           l5496 7508  
                         l5488 743C                           l7600 451C                           l3994 55C0  
                         l3978 5514                           l3986 555C                           l3898 5240  
                         l7450 31F2                           l7442 30FE                           l7434 2F7A  
                         l7426 2E62                           l7418 2D4A                           l7370 286C  
                         l7354 27CC                           l7346 26BE                           l7338 25E6  
                         l7290 2054                           l7282 1F18                           l7274 1E00  
                         l7266 1CC8                           l7258 1BD2                           l7194 162E  
                         l7178 15D2                           l7098 121C                           l7530 3D32  
                         l7522 3B44                           l7514 3A70                           l7506 3956  
                         l5498 750C                           l7610 4538                           l7602 4520  
                         l3996 55D0                           l3988 5576                           l7460 32EC  
                         l7452 3202                           l7444 3156                           l7436 2FD2  
                         l7428 2E96                           l7372 2884                           l7380 2902  
                         l7356 2800                           l7292 2088                           l7284 1F70  
                         l7276 1E34                           l7268 1D1C                           l7348 26F2  
                         l7540 3EB8                           l7532 3D68                           l7524 3B78  
                         l7516 3AA4                           l7508 398A                           l7700 46F2  
                         l7620 4542                           l7612 453A                           l7604 4524  
                         l3998 55DE                           l7454 3244                           l7446 318A  
                         l7438 302A                           l7390 297C                           l7382 294A  
                         l7358 2834                           l7294 20E0                           l7286 1FC8  
                         l7278 1E68                           l7198 1644                           l7550 4008  
                         l7542 3F22                           l7534 3DB0                           l7526 3C5E  
                         l7518 3ADA                           l7470 332E                           l7710 473C  
                         l7702 46F6                           l7630 4560                           l7622 4548  
                         l7614 453C                           l7606 4530                           l7456 3294  
                         l7448 31BE                           l7392 29D2                           l7296 2114  
                         l7288 2020                           l7560 41C2                           l7552 403E  
                         l7544 3F6A                           l7536 3DE4                           l7528 3C94  
                         l7480 33B4                           l7472 3354                           l7800 4B68  
                         l7720 47AA                           l7712 4756                           l7704 4710  
                         l7640 457C                           l7632 4568                           l7624 454C  
                         l7616 453E                           l7608 4534                           l7458 32D4  
                         l7298 2148                           l7570 43B2                           l7562 4260  
                         l7554 4072                           l7546 3F9E                           l7538 3E84  
                         l7490 34DE                           l7482 33E6                           l7474 337A  
                         l7466 3302                           l7810 4BC6                           l7802 4B80  
                         l7730 4844                           l7722 47D6                           l7714 475A  
                         l7706 4724                           l7650 45A4                           l7642 4584  
                         l7634 456C                           l7626 4550                           l7618 4542  
                         l7388 295E                           l7396 29E8                           l7580 44A2  
                         l7572 43E6                           l7564 4296                           l7556 40A6  
                         l7548 3FD2                           l7492 34F4                           l7484 33FC  
                         l7476 33A0                           l7468 3316                           l7812 4BDA  
                         l7804 4B94                           l7740 4900                           l7732 4858  
                         l7724 47EA                           l7716 476C                           l7708 4734  
                         l7660 45B0                           l7652 45A4                           l7644 458C  
                         l7636 4570                           l7628 4558                           l7398 2A5A  
                         l7574 4450                           l7566 42DE                           l7558 418C  
                         l7494 3730                           l7486 3462                           l7478 33AA  
                         l7830 4C80                           l7822 4C36                           l7814 4BF2  
                         l7806 4BA8                           l7750 49A8                           l7742 492C  
                         l7734 4898                           l7726 4812                           l7718 4798  
                         l7670 45FE                           l7662 45CA                           l7654 45A4  
                         l7646 4594                           l7638 4574                           l7592 450C  
                         l7584 44B6                           l7576 4498                           l7568 4312  
                         l7496 3766                           l7488 3478                           l7840 4CCA  
                         l7832 4C8C                           l7816 4C06                           l7760 4A16  
                         l7752 49C2                           l7744 4940                           l7736 48AC  
                         l7728 482C                           l7680 4640                           l7672 4602  
                         l7664 45D6                           l7656 45A4                           l7648 459C  
                         l7586 4500                           l7578 449E                           l7498 3804  
                         l7842 4CF2                           l7818 4C1E                           l7826 4C4E  
                         l7834 4C94                           l7770 4A56                           l7762 4A1A  
                         l7746 496C                           l7738 48EC                           l7754 49DA  
                         l7690 469E                           l7682 464C                           l7674 4616  
                         l7666 45E4                           l7658 45A8                           l7588 4504  
                         l7828 4C68                           l7780 4A88                           l7772 4A6E  
                         l7836 4CA6                           l7756 4A0A                           l7748 4980  
                         l7692 46B2                           l7684 4660                           l7676 461C  
                         l7668 45EC                           l7596 4510                           l7838 4CB6  
                         l7790 4AEC                           l7782 4A9C                           l7766 4A2E  
                         l7758 4A12                           l7694 46B8                           l7686 467A  
                         l7678 4628                           l7598 4518                           l7864 70B8  
                         l7792 4AF2                           l7784 4AA2                           l7776 4A74  
                         l7768 4A46                           l7696 46D2                           l7688 4686  
                         l7794 4B2C                           l7786 4AAE                           l7778 4A84  
                         l7698 46EA                           l7796 4B3E                           l7788 4AD8  
                         l7798 4B56                           STR_1 0E71                           u3020 7572  
                         u3100 4DC8                           u3021 756E                           u3101 4DC4  
                         u3030 7588                           u3110 4E04                           u3031 7584  
                         u3111 4E00                           u4000 59F4                           u3200 4F1E  
                         u3120 4E12                           u3040 4D2C                   _BAUD4CONbits 0EE9  
                         u4001 59F0                           u3201 4F1A                           u3121 4E0E  
                         u3041 4D28                           u4010 5A06                           u3210 4F50  
                         u3130 4E80                           u3050 4D3E                           u4011 5A02  
                         u3211 4F4C                           u3131 4E7C                           u3051 4D3A  
                         u4100 5BBE                           u4020 5A16                           u3300 5098  
                         u3220 4F5E                           u3140 4E98                           u3060 4D4E  
                         u4101 5BBA                           u4021 5A12                           u3301 5094  
                         u3221 4F5A                           u3141 4E92                           u3061 4D4A  
                         u4110 5BE2                           u4030 5A5A                           u3310 50A8  
                         u3230 4F7C                           u3150 4E9A                           u3070 4D90  
                         u4111 5BDE                           u4031 5A56                           u3311 50A4  
                         u3231 4F78                           u3071 4D8C                           u4200 5D02  
                         u4120 5BF8                           u4040 5A6C                           u3400 5190  
                         u3320 50BA                           u3240 4FB4                           u3160 4EC2  
                         u3080 4DA6                           u4201 5CFE                           u4121 5BF4  
                         u4041 5A68                           u3401 518C                           u3321 50B6  
                         u3241 4FB0                           u3161 4EBE                           u3081 4DA2  
                         u4210 5D32                           u4130 5C16                           u4050 5A7C  
                         u3410 51A2                           u3330 50D0                           u3250 4FFA  
                         u3170 4EE0                           u3090 4DB8                           _T2PR 0FBC  
                         u4211 5D2E                           u4131 5C12                           u4051 5A78  
                         u3411 519E                           u3331 50CC                           u3251 4FF6  
                         u3171 4EDC                           u3091 4DB4                           u4220 5D60  
                         u4140 5C36                           u4060 5ABC                           u3420 51BE  
                         u3340 50E6                           u3260 5030                           u3180 4F00  
                         u4300 619E                           u3500 52B6                           u4221 5D5C  
                         u4141 5C32                           u4061 5AB8                           u3421 51BA  
                         u3341 50E2                           u3261 502C                           u3181 4EFC  
                         u4301 619A                           u3501 52B2                           u4150 5C48  
                         u4070 5AFC                           u4230 66D6                           u3350 50FA  
                         u3270 5040                           u3190 4F0E                           u4310 61FA  
                         u3510 5430                           u3430 51EC                           u4151 5C44  
                         u4071 5AF8                           u4231 66D2                           u3351 50F6  
                         u3271 503C                           u3191 4F0A                           u4311 61F6  
                         u3431 51E8                           u5200 7180                           u4160 5C76  
                         u4080 5B72                           u4240 6714                           u3360 5114  
                         u3280 506C                           u4320 6250                           u3600 55A4  
                         u3520 548A                           u3440 51FE                           u4400 6012  
                         u5201 7178                           u4161 5C72                           u4081 5B6E  
                         u4241 6710                           u3361 5110                           u3281 5068  
                         u4321 624C                           u3601 55A0                           u3521 5486  
                         u3441 51FA                           u4401 600E                           u4170 5C8C  
                         u4090 5B94                           u4250 6732                           u3370 514E  
                         u3290 507C                           u4330 629A                           u3610 55DE  
                         u3530 54AA                           u3450 520E                           u4410 6032  
                         u4171 5C88                           u4091 5B90                           u4251 672E  
                         u3371 514A                           u3291 5078                           u4331 6296  
                         u3611 55DA                           u3531 54A6                           u3515 5426  
                         u3451 520A                           u4411 602E                           u5220 719E  
                         u4180 5CA0                           u4260 6752                           u3380 5160  
                         u4340 62B8                           u3540 54BC                           u3460 524E  
                         u4500 5DF8                           u5140 6FE8                           u3620 6C52  
                         u3700 6EC0                           u4420 6068                           u5221 7196  
                         u4181 5C9C                           u4261 674E                           u3381 515C  
                         u4341 62B4                           u3541 54B8                           u3461 524A  
                         u4501 5DF4                           u5141 6FE4                           u3621 6C4E  
                         u3701 6EBC                           u4421 6062                           u4190 5CBA  
                         u4270 67A2                           u3390 5170                           u4350 62C8  
                         u3550 54EA                           u3470 5260                           u4510 5E50  
                         u5310 6D3C                           u5150 700A                           u3630 6C6C  
                         u3710 6EDE                           u4430 606A                           u4191 5CB6  
                         u4271 679E                           u3391 516C                           u4351 62C4  
                         u3551 54E6                           u3471 525C                           u4511 5E4C  
                         u5311 6D38                           u5151 7006                           u3631 6C68  
                         u3711 6EDA                           u5240 71C2                           u4280 74B2  
                         u4360 62D6                           u3560 5500                           u3480 5270  
                         u4520 5E78                           u5320 6D5E                           u5160 704C  
                         u3640 6C92                           u3720 6EF4                           u3800 6E38  
                         u4440 60CE                           u5400 68F4                           u5241 71BA  
                         u4281 74AE                           u4361 62D2                           u3561 54FC  
                         u3481 526C                           u4521 5E74                           u5321 6D5A  
                         u5161 7048                           u3641 6C8E                           u3721 6EF0  
                         u3801 6E34                           u4441 60CA                           u5401 68F0  
                         u5218 7182                           u4370 6310                           u4290 6190  
                         u3570 5514                           u3490 52A6                           u4530 5ED0  
                         u5330 6DA6                           u5170 7064                           u3650 6CB0  
                         u3730 6F18                           u3810 74E2                           u4450 60DE  
                         u5410 693E                           u4371 630C                           u4291 618C  
                         u3571 5510                           u3491 52A2                           u4531 5ECC  
                         u5331 6DA2                           u5171 7060                           u3651 6CAC  
                         u3731 6F14                           u3811 74DE                           u4451 60DA  
                         u5411 693A                           u3820 7410                           u4380 631E  
                         u3580 552E                           u4540 5F28                           u3740 7114  
                         u5340 6DBE                           u5180 7658                           u3660 6CCC  
                         u4460 60EE                           u5500 686A                           u5420 6956  
                         u3821 7408                           u4381 631A                           u3581 552A  
                         u4541 5F24                           u3741 7110                           u5341 6DBA  
                         u5181 7654                           u3661 6CC8                           u4461 60EA  
                         u5501 6866                           u5421 6952                           u5238 71A0  
                         u3590 5576                           u3910 5780                           u3750 7132  
                         u5510 64DA                           u3670 6CF2                           u4470 60FE  
                         u4390 5FCE                           u5190 73DC                           u5430 6AA6  
                         u5350 69BC                           u3591 5572                           u3911 577C  
                         u3751 712E                           u5511 64D6                           u3671 6CEE  
                         u4471 60FA                           u4391 5FCA                           u5191 73D8  
                         u5431 6AA2                           u5351 69B8                           u3920 57B8  
                         u3840 5640                           u7200 0EEA                           u3760 714E  
                         u5600 6BB0                           u5520 64FC                           u3680 6E8C  
                         u4480 6146                           u5440 6AC8                           u5360 69DE  
                         u8000 4B3E                           u3921 57B4                           u3905 5740  
                         u3841 563C                           u7201 0EE6                           u3761 714A  
                         u5601 6BAC                           u5521 64F8                           u3681 6E88  
                         u4481 6142                           u5441 6AC4                           u5361 69DA  
                         u8001 4B3A                           u5258 71C4                           u4490 5DA0  
                         u3930 582E                           u3906 574A                           u3850 566E  
                         u7210 0F1C                           u5610 6BFA                           u5530 6546  
                         u3690 6EA6                           u3770 6DD0                           u5450 6B12  
                         u5370 6A28                           u8010 4B68                           u4555 5F42  
                         u4491 5D9C                           u3931 582A                           u3907 575A  
                         u3851 566A                           u7211 0F18                           u5611 6BF6  
                         u5531 6542                           u3691 6EA2                           u3771 6DCC  
                         u5451 6B0E                           u5371 6A24                           u8011 4B64  
                         u3940 58CA                           u3860 567C                           u7300 1116  
                         u7220 0F54                           u5620 6C12                           u5540 655E  
                         u3780 6DE0                           u5460 6B2A                           u5380 6A40  
                         u8020 4B94                           u3941 58C6                           u3861 5678  
                         u7301 1112                           u7221 0F50                           u5621 6C0E  
                         u5541 655A                           u3781 6DDC                           u5461 6B26  
                         u5381 6A3C                           u8021 4B90                           u3838 7412  
                         u3950 5932                           u3870 56BE                           u7310 1182  
                         u7230 0F76                           u5550 65E0                           u5630 7536  
                         u3790 6E06                           u5470 67E6                           u5390 68D2  
                         u8030 4BDA                           u3951 592E                           u3871 56BA  
                         u7311 117E                           u7231 0F72                           u5551 65DC  
                         u5631 7532                           u3791 6E02                           u5471 67E2  
                         u5391 68CE                           u8031 4BD6                           u3960 5948  
                         u3880 56EC                           u7400 1346                           u7320 119E  
                         u7240 0FCC                           u5560 6602                           u5480 6808  
                         u8040 4C06                           u3961 5944                           u3881 56E8  
                         u7401 1342                           u7321 119A                           u7241 0FC8  
                         u5561 65FE                           u5481 6804                           u8041 4C02  
                         u3890 570E                           u7410 139A                           u7330 11D6  
                         u7250 0FE8                           u5570 664C                           u5490 6852  
                         u8050 4C32                           u3891 570A                           u7411 1396  
                         u7331 11D2                           u7251 0FE4                           u5571 6648  
                         u5491 684E                           u8051 4C2E                           u8107 45BC  
                         u7500 1550                           u7420 13B0                           u7340 11E4  
                         u7260 1018                           u3980 634E                           u5580 6664  
                         u8060 4C4A                           u7501 154C                           u7421 13AC  
                         u7341 11E0                           u7261 1014                           u3981 634A  
                         u5581 6660                           u8061 4C46                           u8117 466C  
                         u7510 1582                           u7430 13CC                           u7350 121C  
                         u3990 6418                           u5590 6B8E                           u8070 4CB6  
                         u3975 59B4                           u7511 157E                           u7431 13C8  
                         u7351 1218                           u3991 6414                           u5591 6B8A  
                         u8207 4CFE                           u8071 4CB2                           u8127 46C4  
                         u7520 15A6                           u7440 13EA                           u7360 1276  
                         u8080 4CDE                           u7521 15A2                           u7441 13E6  
                         u7361 1272                           u8217 691C                           u8081 4CD4  
                         u8137 481E                           u7610 2868                           u7530 15B4  
                         u7450 142E                           u7370 1284                           u7290 10DC  
                         u7611 2864                           u7531 15B0                           u7451 142A  
                         u7371 1280                           u7275 102E                           u8307 666E  
                         u8227 6960                           u8147 49B4                           u7620 2884  
                         u7540 160C                           u7460 1492                           u7380 12E8  
                         u7276 1038                           u7621 2880                           u7605 1C68  
                         u7541 1608                           u7461 148E                           u7381 12E4  
                         u7285 1088                           u7277 1048                           u8317 6698  
                         u8237 6830                           u8157 49E6                           u7630 28FE  
                         u7550 162A                           u7470 14CA                           u7390 1338  
                         u7286 1092                           u8407 7328                           u7631 28FA  
                         u7551 1626                           u7471 14C6                           u7391 1334  
                         u7295 10D2                           u7287 10A2                           u8327 6524  
                         u8247 6874                           u8167 49FC                           u7640 294A  
                         u7560 1936                           u7480 1520                           u7800 34DE  
                         u7705 2B10                           u7641 2946                           u7561 1932  
                         u7481 151C                           u7801 34DA                           u8337 6568  
                         u8257 6A06                           u8177 4BB4                           u7730 2C40  
                         u7706 2B1A                           u7650 297C                           u7490 1536  
                         u7810 44B2                           u8098 4CE2                           u7731 2C3C  
                         u7715 2B68                           u7707 2B2A                           u7651 2978  
                         u7491 1532                           u7811 44AE                           u8347 6594  
                         u8267 6A4A                           u8187 4C5A                           u7716 2B72  
                         u7660 29D2                           u7580 1A58                           u7820 4500  
                         u7900 47EA                           u7725 2C06                           u7717 2B82  
                         u7661 29CE                           u7581 1A54                           u7821 44FC  
                         u8357 6BD8                           u8277 6AF0                           u8197 4C9C  
                         u7901 47E6                           u7726 2C10                           u7590 1A80  
                         u7910 4858                           u7830 45FE                           u7727 2C20  
                         u7591 1A7C                           u7575 19A2                           u8367 6C1C  
                         u8287 6B34                           u7911 4854                           u7831 45FA  
                         u7760 3294                           u7680 2A8C                           u7576 19AC  
                         u7920 48AC                           u7840 4640                           u7761 3290  
                         u7745 3214                           u7681 2A88                           u7577 19BC  
                         u8377 702E                           u8297 662A                           u7921 48A8  
                         u7841 463C                           u7770 32EC                           u7930 4900  
                         u7850 469E                           u7771 32E8                           u7755 325A  
                         u7675 2A18                           u8387 6D86                           u7931 48FC  
                         u7851 469A                           u7756 3264                           u7676 2A22  
                         u7780 33E6                           u7940 4940                           u7860 46EA  
                         u7757 3274                           u7677 2A32                           u7781 33E2  
                         u8397 3322                           u7941 493C                           u7861 46E6  
                         u7790 3462                           u7950 4980                           u7870 4724  
                         u7695 2AA6                           u7791 345E                           u7951 497C  
                         u7871 4720                           u7696 2AB0                           u7960 4A2A  
                         u7880 476C                           u7697 2AC0                           u7961 4A26  
                         u7881 4768                           u7970 4A56                           u7890 47AA  
                         u7971 4A52                           u7891 47A6                           u7980 4A84  
                         u7981 4A80                           u7990 4AD8                           u7991 4AD4  
                  main@red_val 0200                           abs@a 0008                           _dbuf 01B8  
                         _cp_h 0E6D                           _cp_l 0E69                           _dp_h 0E09  
                         _dp_l 0E01                           _main 4510                           _prec 00EE  
                         _powf 0E82                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005D                           _stop 6FCC                    main@timings 0278  
   __end_of_reverse_after_read 65A4                           prodh 0FF4                           prodl 0FF3  
                         start 0024               __end_of_ADC_init 7646                ___fldiv@new_exp 003C  
       __end_of_color_read_Red 7224                __end_of_HighISR 0024                   ___param_bank 0000  
    invert_action@input_action 0004                 turn_left_90@mL 0019                 turn_left_90@mR 001B  
                        ??_abs 000A                   main@blue_val 0228                  ?_inch_forward 0019  
              __end_of___fladd 51D2                          ?_main 0001                          _ADPCH 0F5F  
              __end_of___fldiv 5D74                __end_of___awdiv 6D04                __end_of___flneg 74D4  
              __end_of___awmod 6F2A                __end_of___flmul 55FC                          ?_powf 0060  
              __end_of___flsub 73A4                          ?_stop 0015                ___awdiv@divisor 0004  
              __end_of___lwdiv 716E                          i2l500 7674                          i2l451 0020  
                        i2l497 7660                ___awdiv@counter 0006                   vfpfcnvrt@fmt 000D  
                        _TMR0H 0FD4                          _TMR0L 0FD3        __end_of_sendCharSerial4 765E  
   __end_of_I2C_2_Master_Start 76B6     __end_of_I2C_2_Master_Write 7682                          _lg2_h 0E2D  
                        _lg2_l 0E29                          _flags 0058  __end_of_color_click_toggleLED 71D4  
                        _errno 00EA                          _ivln2 0E1D                          _fputc 6DC0  
              __end_of_ivln2_h 0E69                __end_of_ivln2_l 0E1D                          _two24 0E61  
              __end_of_scalbnf 5FA8                          _width 00EC                          _putch 76B6  
                        main@i 02AB                          _sqrtf 55FC                          tablat 0FF5  
                        powf@i 0128                          powf@j 01A8                          powf@k 01A4  
                        powf@n 0188                          powf@r 0150                          powf@s 0158  
                        powf@t 01B0                          powf@u 017C                          powf@v 0180  
                        powf@w 0144                          powf@x 0060                          powf@y 0064  
                        powf@z 01B4                          ttemp5 005E                          ttemp6 0061  
                        ttemp7 0065                          status 0FD8                          wtemp8 005E  
              __end_of_sprintf 7464        __end_of_color_read_Blue 72C4          _I2C_2_Master_RepStart 7698  
              ?_color_read_Red 0006                __initialization 7464                   __end_of_cp_h 0E71  
                 __end_of_cp_l 0E6D                   __end_of_dp_h 0E11                   __end_of_dp_l 0E09  
                 __end_of_main 4D12                   __end_of_powf 3302                   __end_of_stop 7066  
              turn_left_135@mL 0019                turn_left_135@mR 001B               main@action_to_do 02C0  
               ??_inch_forward 001D                  main@clear_val 023C                _get16bitTMR0val 760E  
                       ??_main 00D1                         ??_powf 0068                         ??_stop 0019  
                __activetblptr 0003              decide_action@blue 00A5                   ?_setMotorPWM 000F  
                       ?_fputc 0002                         _ADRESH 0F64                         _CCPR1H 0FAA  
                       _CCPR2H 0FA6                         _CCPR3H 0F25                         _CCPR4H 0F21  
             ___awdiv@dividend 0002                         ?_putch 0001                         ?_sqrtf 0012  
   __end_of_reverse_one_square 66A8                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RE4PPS 0E76                         _RD6PPS 0E70                         i2l5512 7660  
                       i2l5514 7670                  main@green_val 0214                         _RG6PPS 0E88  
                       i2l5764 000A                         i2l5766 0018                         i2l5768 001A  
             ??_turn_right_135 001D                  vfpfcnvrt@done 0010                      ??_HighISR 0002  
     __end_of_color_click_init 735E                         _RX4PPS 0E15                         _TX4REG 0EE4  
             __end_of___xxtofl 6332                   ?_resetTimer0 0001                   _turn_left_90 6982  
                ??_Timer0_init 0002                   _CCPTMRS0bits 0FAD                   vfprintf@cfmt 001A  
                       ___flge 66A8                      ??___fladd 000A                         ___wmul 758A  
                    ??___fldiv 0033                      ??___awdiv 0006                      ??___flneg 0006  
                    ??___awmod 0006                      ??___flmul 001A                      ??___flsub 004C  
                    ??___lwdiv 000C                         clear_0 746A                         clear_1 7476  
                       clear_2 7482               ___awdiv@quotient 0008                ___awmod@divisor 0004  
                       isa$std 0001                ___awmod@counter 0006                         fputc@c 0002  
                    ??_scalbnf 0031                   __mediumconst 0000                         powf@s2 0190  
                       powf@t1 018C                         powf@t2 011C                         tblptrh 0FF7  
                       tblptrl 0FF6                         powf@y1 012C                         tblptru 0FF8  
                       powf@ax 0178                         powf@is 0198                         powf@hx 0168  
                    ?_ADC_init 0001                         powf@hy 0184                         powf@ix 01AC  
                       powf@iy 0194               ?_sendCharSerial4 0001                         powf@sn 0164  
                       putch@c 0001               __end_of_vfprintf 73E6                         stop@mL 0015  
                       stop@mR 0017                         sqrtf@i 001F                         sqrtf@m 002B  
                       sqrtf@q 0023                         sqrtf@r 002F                         sqrtf@s 001B  
                       sqrtf@t 0027              ??_initDCmotorsPWM 0004                         sqrtf@x 0012  
                    ??_sprintf 0020                     ___flge@ff1 004C                     ___flge@ff2 0050  
                 ___xxtofl@arg 0017                   ___xxtofl@exp 0016                   ___xxtofl@val 000D  
                   __accesstop 0060        __end_of__initialization 7492       __end_of_color_read_Clear 7314  
                   ___flneg@f1 0002       __end_of_color_read_Green 7274         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 0001               ?_color_read_Blue 0006                _Interrupts_init 7682  
               __pcstackCOMRAM 0001        __end_of_get16bitTMR0val 762C                  __end_of_lg2_h 0E31  
                __end_of_lg2_l 0E2D       get16bitTMR0val@timer_val 0006                  __end_of_ivln2 0E21  
                __end_of_fputc 6E7A                  __end_of_two24 0E65                  __end_of_putch 76B8  
                __end_of_sqrtf 59DA                     __end_of_L1 0E61                     __end_of_L2 0E5D  
                   __end_of_L3 0E59                     __end_of_L4 0E55                     __end_of_L5 0E51  
                   __end_of_L6 0E4D                     __end_of_P1 0E49                     __end_of_P2 0E45  
                   __end_of_P3 0E41                     __end_of_P4 0E3D                     __end_of_P5 0E39  
          __end_of_Timer0_init 75F0                     __end_of_bp 0E19                     __end_of_cp 0E25  
                   ??_ADC_init 0002                turn_right_90@mL 0019                turn_right_90@mR 001B  
                      ??_fputc 0005                        ??_putch 0002                        ??_sqrtf 0016  
                   __pbssBANK0 00D6                     __pbssBANK1 01B8                     __pbssBANK3 0300  
         __end_of_inch_forward 6C40              _color_writetoaddr 75B0           reverse_one_square@mL 0019  
         reverse_one_square@mR 001B                   _T2CLKCONbits 0FBF             decide_action@green 00A1  
                      ?___flge 004C             decide_action@red_r 00A9             ?_color_writetoaddr 0004  
                      ?___wmul 0002             decide_action@total 0098           decide_action@green_r 00AD  
           _reverse_after_read 649E            ??_color_writetoaddr 0005                      ?___xxtofl 000D  
                      _SP4BRGH 0EE6                        _SP4BRGL 0EE5            ?_reverse_after_read 0019  
         reverse_after_read@mL 0019           reverse_after_read@mR 001B                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5        __end_of_Interrupts_init 768E         color_writetoaddr@value 0004  
             ??_color_read_Red 0008                  _turn_left_135 6A6C                        _HighISR 0008  
               main@pclear_val 02A0      __end_of_color_writetoaddr 75D0                      _ADREFbits 0F58  
           _I2C_2_Master_Start 76AC                     _initUSART4 75F0             _I2C_2_Master_Write 7676  
               decide_action@i 009C                        __Hparam 0000           ??_reverse_after_read 001D  
                      __Lparam 0000              color_read_Red@tmp 000B                    _Timer0_init 75D0  
      sendStringSerial4@string 0003                  _turn_right_90 6898               ?_get16bitTMR0val 0002  
                      ___fladd 4D12                        ___fldiv 59DA                        ___awdiv 6C40  
                      ___flneg 749C                        ___awmod 6E7A                        ___flmul 51D2  
                      ___flsub 735E            ?_I2C_2_Master_Start 0001                        ___lwdiv 70FA  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 0017                   __psmallconst 0E00  
                      __pcinit 7464                        __ramtop 0E00                        __ptext0 4510  
                      __ptext1 6898                        __ptext2 67AC                        __ptext3 6982  
                      __ptext4 6A6C                        __ptext5 7428                        __ptext6 73A4  
                      __ptext7 5FA8                        __ptext8 6DC0                        __ptext9 76B6  
                    _T2CONbits 0FBD                        _ivln2_h 0E65                        _ivln2_l 0E19  
                   ??___xxtofl 0011                        _scalbnf 5D74               ___awmod@dividend 0002  
                    _T2HLTbits 0FBE                  _RxBufWriteCnt 005C                        main@pmL 02C2  
                      main@pmR 02C4                        _sprintf 7428                        main@lum 02A8  
         ??_I2C_2_Master_Start 0003           ??_I2C_2_Master_Write 0003           end_of_initialization 7492  
   invert_action@output_action 0005                 ?_turn_left_135 0019          _color_click_toggleLED 716E  
                      fputc@fp 0004              ?_color_click_init 0001             ??_color_click_init 0006  
            main@lum_threshold 02A2                  _decide_action 3302                 ?_turn_right_90 0019  
                      powf@p_h 01A0                        powf@p_l 016C                        powf@s_h 0174  
                      powf@t_h 0170                        powf@s_l 0130                        powf@t_l 0134  
                      powf@z_h 0120                        powf@z_l 0124              __end_of_vfpfcnvrt 617E  
           _reverse_one_square 65A4                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE               vfpfcnvrt@convarg 0012  
                   ??_vfprintf 001A                        sqrtf@ix 0033                _initDCmotorsPWM 6F2A  
                    _PORTBbits 0F8A                  _invert_action 7066            ?_reverse_one_square 0019  
           setMotorPWM@negDuty 0014                    ___fladd@grs 0011                  ___xxtofl@sign 0015  
                    _TRISAbits 0F81             setMotorPWM@posDuty 0013                      _TRISCbits 0F83  
                    _TRISDbits 0F84                      _TRISEbits 0F85                      _TRISFbits 0F86  
                    _TRISGbits 0F87                      _TRISHbits 0F88                    ___fldiv@grs 003E  
                  ___fldiv@rem 0037               fullSpeedAhead@mL 0015               fullSpeedAhead@mR 0017  
     color_writetoaddr@address 0005        ??_I2C_2_Master_RepStart 0003               ?_Interrupts_init 0001  
                  ___flmul@grs 001F           ??_reverse_one_square 001D                    _CCP1CONbits 0FAB  
            ?_color_read_Clear 0006                   _EUSART4RXbuf 00D6                   _EUSART4TXbuf 0300  
                  _CCP2CONbits 0FA7              ?_color_read_Green 0006                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0002  
               ?_decide_action 0001                     main@motorL 02AE                     main@motorR 02B7  
           ??_color_read_Clear 0008             ??_color_read_Green 0008                 __end_of___flge 67AC  
               _fullSpeedAhead 6D04                    vfpfcnvrt@ap 000E                    vfpfcnvrt@cp 0011  
                  vfpfcnvrt@fp 000C                 __end_of___wmul 75B0                 ?_invert_action 0001  
                 _inch_forward 6B56            color_read_Clear@tmp 000B            start_initialization 7464  
                  __end_of_lg2 0E35                    __end_of_abs 7508                    __end_of_ovt 0E29  
                _TxBufWriteCnt 005A                ??_turn_left_135 001D         ?_color_click_toggleLED 0001  
             decide_action@red 009D                ??_turn_right_90 001D            color_read_Green@tmp 000B  
      __end_of_initDCmotorsPWM 6FCC                    vfprintf@fmt 0018         __end_of_fullSpeedAhead 6DC0  
                     ??___flge 0054               turn_right_135@mL 0019               turn_right_135@mR 001B  
                     ??___wmul 0006                      ___fladd@a 0006                      ___fladd@b 0002  
                    ___fldiv@a 002F                      ___fldiv@b 002B                      ___flmul@a 0016  
                    ___flmul@b 0012                    __pbssCOMRAM 0058                      ___flsub@a 0048  
                    ___flsub@b 0044                  __pcstackBANK0 0060                  __pcstackBANK1 0100  
                __pcstackBANK2 0200                       ?_HighISR 0001                ??_decide_action 0071  
            i2_sendCharSerial4 765E             ?i2_sendCharSerial4 0001               ___lwdiv@dividend 0008  
                 ?_Timer0_init 0001            decide_action@action 0097                ?_fullSpeedAhead 0015  
                    __pintcode 0008            decide_action@blue_r 00B1                       ?___fladd 0002  
                     ?___fldiv 002B                       ?___awdiv 0002                       ?___flneg 0002  
                     ?___awmod 0002                       ?___flmul 0012                       ?___flsub 0044  
              ??_invert_action 0002                       ?___lwdiv 0008            ??i2_sendCharSerial4 0001  
         I2C_2_Master_Read@ack 0004           I2C_2_Master_Read@tmp 0005                    __smallconst 0E00  
            _I2C_2_Master_Idle 7562              _I2C_2_Master_Init 7538                       ?_scalbnf 002B  
            _I2C_2_Master_Read 73E6              _I2C_2_Master_Stop 76A2          decide_action@rgb_comp 0077  
                 _RxBufReadCnt 005B                       _ADC_init 762C             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0011  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000C       initDCmotorsPWM@PWMperiod 0002  
                     ?_sprintf 001B      __end_ofi2_sendCharSerial4 7676                      _powf$3060 014C  
                    _powf$3061 019C                      _powf$3062 0138                      _powf$3070 0110  
                    _powf$3071 0114                      _powf$3063 0100                      _powf$3072 0118  
                    _powf$3064 0104                      _powf$3065 0160                      _powf$3058 0148  
                    _powf$3066 013C                      _powf$3059 015C                      _powf$3067 0140  
                    _powf$3068 0108                      _powf$3069 010C              _sendStringSerial4 7508  
          ??_I2C_2_Master_Idle 0002            ??_I2C_2_Master_Init 0002            ??_I2C_2_Master_Read 0003  
               ___wmul@product 0006                       _LATAbits 0F79                  ??_resetTimer0 0002  
          ??_I2C_2_Master_Stop 0003                       _LATCbits 0F7B                       _LATEbits 0F7D  
                     _LATGbits 0F7F                       _LATHbits 0F80                  ?_turn_left_90 0019  
                     _PIE0bits 0E29                       _PIE2bits 0E2B             ?_sendStringSerial4 0003  
                     _PIE4bits 0E2D                       _PIR4bits 0E37                       i2u565_40 7670  
                     i2u565_41 766C                       i2u593_40 0018                       i2u593_41 0014  
             ?_initDCmotorsPWM 0002              ??_sendCharSerial4 0002                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0005                       _SSP2STAT 0ED8                     powf@yisint 0154  
                    _vfpfcnvrt 5FA8                     _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 758A  
    __end_of_I2C_2_Master_Init 7562      __end_of_I2C_2_Master_Read 7428              ___wmul@multiplier 0002  
    __end_of_I2C_2_Master_Stop 76AC                   setMotorPWM@m 000F    I2C_2_Master_Write@data_byte 0003  
        main@actions_completed 02AC              ??_color_read_Blue 0008                   _TxBufReadCnt 0059  
                   vfpfcnvrt@c 0016      __end_of_sendStringSerial4 7538  __end_of_I2C_2_Master_RepStart 76A2  
           color_read_Blue@tmp 000B                 ??_turn_left_90 001D            __end_of_setMotorPWM 649E  
                 ??_initUSART4 0002                       __Hrparam 0000                     vfprintf@ap 0019  
                     __Lrparam 0000                     vfprintf@fp 0017                 _turn_right_135 67AC  
          __end_of_resetTimer0 7698                     ?_vfpfcnvrt 000C                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4             _decide_action$3050 0073             _decide_action$3051 00B5  
           _decide_action$3052 00B9             _decide_action$3053 00BD             _decide_action$3054 00C1  
           _decide_action$3055 00C5             _decide_action$3056 00C9             _decide_action$3057 00CD  
                   sprintf@fmt 001D                       ___xxtofl 617E                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6        ??_color_click_toggleLED 0002                ___lwdiv@divisor 000A  
           __end_of_initUSART4 760E                ___lwdiv@counter 000E                       __ptext10 74D4  
                     __ptext11 6E7A                       __ptext20 6F2A                       __ptext12 6C40  
                     __ptext21 6B56                       __ptext13 7508                       __ptext30 55FC  
                     __ptext22 6FCC                       __ptext14 7646                       __ptext31 5D74  
                     __ptext23 760E                       __ptext15 65A4                       __ptext40 7224  
                     __ptext32 51D2                       __ptext24 6D04                       __ptext16 649E  
                     __ptext41 7274                       __ptext33 617E                       __ptext25 6332  
                     __ptext17 768E                       __ptext50 76AC                       __ptext42 72C4  
                     __ptext34 735E                       __ptext26 758A                       __ptext18 7066  
                     __ptext51 7562                       __ptext43 7698                       __ptext35 4D12  
                     __ptext27 70FA                       __ptext19 75F0                       __ptext52 7538  
                     __ptext44 73E6                       __ptext36 749C                       __ptext28 3302  
                     __ptext53 75D0                       __ptext45 716E                       __ptext37 66A8  
                     __ptext29 0E82                       __ptext54 7682                       __ptext46 7314  
                     __ptext38 59DA                       __ptext55 762C                       __ptext47 75B0  
                     __ptext39 71D4                       __ptext48 7676                       __ptext57 765E  
                     __ptext49 76A2                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
           main@lost_detection 02A4         __end_of_turn_right_135 6898                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       int$flags 005D                       _vfprintf 73A4  
                   _INTCONbits 0FF2              main@going_forward 02AA                    _setMotorPWM 6332  
            ??_get16bitTMR0val 0004                       scalbnf@n 002F                       scalbnf@u 0035  
                     scalbnf@x 002B                       scalbnf@y 0039                       intlevel2 0000  
        __end_of_turn_left_135 6B56                      sprintf@ap 0020               ??_fullSpeedAhead 0019  
                  _resetTimer0 768E                ?_turn_right_135 0019          __end_of_turn_right_90 6982  
                  ??_vfpfcnvrt 000F               _color_click_init 7314                       sprintf@f 0021  
                     sprintf@s 001B           __end_of_turn_left_90 6A6C                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C              main@measured_time 02A6                 inch_forward@mL 0019  
               inch_forward@mR 001B                  ___fladd@signs 000E                     _TX4STAbits 0EE8  
              _sendCharSerial4 7646                   ___fladd@aexp 000F                   ___fladd@bexp 0010  
  i2sendCharSerial4@charToSend 0001          __end_of_decide_action 4510  
