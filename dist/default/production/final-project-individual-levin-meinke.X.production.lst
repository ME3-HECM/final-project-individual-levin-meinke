

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 11:58:44 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    86   000000                     
    87                           ; Generated 21/07/2023 GMT
    88                           ; 
    89                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution. Publication is not required when
   103                           ;        this file is used in an embedded application.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F67K40 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121   000000                     
   122                           	psect	smallconst
   123   000E00                     __psmallconst:
   124                           	callstack 0
   125   000E00  00                 	db	0
   126   000E01                     _dp_l:
   127                           	callstack 0
   128   000E01  0000               	dw	0
   129   000E03  0000               	dw	0
   130   000E05  CFDC               	dw	53212
   131   000E07  35D1               	dw	13777
   132   000E09                     __end_of_dp_l:
   133                           	callstack 0
   134   000E09                     _dp_h:
   135                           	callstack 0
   136   000E09  0000               	dw	0
   137   000E0B  0000               	dw	0
   138   000E0D  C000               	dw	49152
   139   000E0F  3F15               	dw	16149
   140   000E11                     __end_of_dp_h:
   141                           	callstack 0
   142   000E11                     _bp:
   143                           	callstack 0
   144   000E11  0000               	dw	0
   145   000E13  3F80               	dw	16256
   146   000E15  0000               	dw	0
   147   000E17  3FC0               	dw	16320
   148   000E19                     __end_of_bp:
   149                           	callstack 0
   150   000E19  A570               	dw	42352
   151   000E1B  36EC               	dw	14060
   152   000E1D                     __end_of_ivln2_l:
   153                           	callstack 0
   154   000E1D  AA3B               	dw	43579
   155   000E1F  3FB8               	dw	16312
   156   000E21                     __end_of_ivln2:
   157                           	callstack 0
   158   000E21  384F               	dw	14415
   159   000E23  3F76               	dw	16246
   160   000E25                     __end_of_cp:
   161                           	callstack 0
   162   000E25  AA3C               	dw	43580
   163   000E27  3338               	dw	13112
   164   000E29                     __end_of_ovt:
   165                           	callstack 0
   166   000E29  BE8C               	dw	48780
   167   000E2B  35BF               	dw	13759
   168   000E2D                     __end_of_lg2_l:
   169                           	callstack 0
   170   000E2D  7200               	dw	29184
   171   000E2F  3F31               	dw	16177
   172   000E31                     __end_of_lg2_h:
   173                           	callstack 0
   174   000E31  7218               	dw	29208
   175   000E33  3F31               	dw	16177
   176   000E35                     __end_of_lg2:
   177                           	callstack 0
   178   000E35  BB4C               	dw	47948
   179   000E37  3331               	dw	13105
   180   000E39                     __end_of_P5:
   181                           	callstack 0
   182   000E39  EA0E               	dw	59918
   183   000E3B  B5DD               	dw	46557
   184   000E3D                     __end_of_P4:
   185                           	callstack 0
   186   000E3D  B355               	dw	45909
   187   000E3F  388A               	dw	14474
   188   000E41                     __end_of_P3:
   189                           	callstack 0
   190   000E41  0B61               	dw	2913
   191   000E43  BB36               	dw	47926
   192   000E45                     __end_of_P2:
   193                           	callstack 0
   194   000E45  AAAB               	dw	43691
   195   000E47  3E2A               	dw	15914
   196   000E49                     __end_of_P1:
   197                           	callstack 0
   198   000E49  F142               	dw	61762
   199   000E4B  3E53               	dw	15955
   200   000E4D                     __end_of_L6:
   201                           	callstack 0
   202   000E4D  3255               	dw	12885
   203   000E4F  3E6C               	dw	15980
   204   000E51                     __end_of_L5:
   205                           	callstack 0
   206   000E51  A305               	dw	41733
   207   000E53  3E8B               	dw	16011
   208   000E55                     __end_of_L4:
   209                           	callstack 0
   210   000E55  AAAB               	dw	43691
   211   000E57  3EAA               	dw	16042
   212   000E59                     __end_of_L3:
   213                           	callstack 0
   214   000E59  6DB7               	dw	28087
   215   000E5B  3EDB               	dw	16091
   216   000E5D                     __end_of_L2:
   217                           	callstack 0
   218   000E5D  999A               	dw	39322
   219   000E5F  3F19               	dw	16153
   220   000E61                     __end_of_L1:
   221                           	callstack 0
   222   000E61  0000               	dw	0
   223   000E63  4B80               	dw	19328
   224   000E65                     __end_of_two24:
   225                           	callstack 0
   226   000E65  AA00               	dw	43520
   227   000E67  3FB8               	dw	16312
   228   000E69                     __end_of_ivln2_h:
   229                           	callstack 0
   230   000E69  23C6               	dw	9158
   231   000E6B  B8F6               	dw	47350
   232   000E6D                     __end_of_cp_l:
   233                           	callstack 0
   234   000E6D  4000               	dw	16384
   235   000E6F  3F76               	dw	16246
   236   000E71                     __end_of_cp_h:
   237                           	callstack 0
   238   000000                     _TX4REG	set	3812
   239   000000                     _RC4STAbits	set	3815
   240   000000                     _SP4BRGH	set	3814
   241   000000                     _TRISFbits	set	3974
   242   000000                     _LATHbits	set	3968
   243   000000                     _TRISAbits	set	3969
   244   000000                     _TRISGbits	set	3975
   245   000000                     _SSP2CON2bits	set	3802
   246   000000                     _RX4PPS	set	3605
   247   000000                     _SSP2CLKPPS	set	3612
   248   000000                     _SSP2DATPPS	set	3613
   249   000000                     _ANSELDbits	set	3751
   250   000000                     _SSP2ADD	set	3798
   251   000000                     _SSP2CON1bits	set	3801
   252   000000                     _LATAbits	set	3961
   253   000000                     _LATGbits	set	3967
   254   000000                     _LATCbits	set	3963
   255   000000                     _LATEbits	set	3965
   256   000000                     _PORTBbits	set	3978
   257   000000                     _TRISHbits	set	3976
   258   000000                     _T2PR	set	4028
   259   000000                     _T2CONbits	set	4029
   260   000000                     _CCPR2H	set	4006
   261   000000                     _CCPR1H	set	4010
   262   000000                     _TRISCbits	set	3971
   263   000000                     _TRISDbits	set	3972
   264   000000                     _TRISEbits	set	3973
   265   000000                     _RC4REG	set	3811
   266   000000                     _SP4BRGL	set	3813
   267   000000                     _TX4STAbits	set	3816
   268   000000                     _BAUD4CONbits	set	3817
   269   000000                     _SSP2CON2	set	3802
   270   000000                     _CCPR4H	set	3873
   271   000000                     _CCPR3H	set	3877
   272   000000                     _SSP2STAT	set	3800
   273   000000                     _ANSELFbits	set	3764
   274   000000                     _SSP2BUF	set	3797
   275   000000                     _PIE0bits	set	3625
   276   000000                     _PIE2bits	set	3627
   277   000000                     _RC7PPS	set	3689
   278   000000                     _RD5PPS	set	3695
   279   000000                     _RE2PPS	set	3700
   280   000000                     _RD6PPS	set	3696
   281   000000                     _RE4PPS	set	3702
   282   000000                     _RG6PPS	set	3720
   283   000000                     _ANSELAbits	set	3730
   284   000000                     _TMR0L	set	4051
   285   000000                     _TMR0H	set	4052
   286   000000                     _T0CON0bits	set	4053
   287   000000                     _T0CON1bits	set	4054
   288   000000                     _T2CLKCONbits	set	4031
   289   000000                     _T2HLTbits	set	4030
   290   000000                     _CCP1CONbits	set	4011
   291   000000                     _CCPTMRS0bits	set	4013
   292   000000                     _CCP2CONbits	set	4007
   293   000000                     _ADREFbits	set	3928
   294   000000                     _CCP3CONbits	set	3878
   295   000000                     _CCP4CONbits	set	3874
   296   000000                     _INTCONbits	set	4082
   297   000000                     _PIE4bits	set	3629
   298   000000                     _PIR4bits	set	3639
   299   000000                     _RC0PPS	set	3682
   300   000000                     _ADPCH	set	3935
   301   000000                     _ADRESH	set	3940
   302   000000                     _ADCON0bits	set	3936
   303   000E71                     
   304                           ; BSR set to: 14
   305   000E71  61                 	db	97	;'a'
   306   000E72  63                 	db	99	;'c'
   307   000E73  74                 	db	116	;'t'
   308   000E74  69                 	db	105	;'i'
   309   000E75  6F                 	db	111	;'o'
   310   000E76  6E                 	db	110	;'n'
   311   000E77  20                 	db	32
   312   000E78  3D                 	db	61	;'='
   313   000E79  20                 	db	32
   314   000E7A  25                 	db	37
   315   000E7B  64                 	db	100	;'d'
   316   000E7C  20                 	db	32
   317   000E7D  0D                 	db	13
   318   000E7E  0A                 	db	10
   319   000E7F  00                 	db	0
   320   000E80                     STR_2:
   321                           
   322                           ; BSR set to: 14
   323   000E80  67                 	db	103	;'g'
   324   000E81  72                 	db	114	;'r'
   325   000E82  65                 	db	101	;'e'
   326   000E83  65                 	db	101	;'e'
   327   000E84  6E                 	db	110	;'n'
   328   000E85  72                 	db	114	;'r'
   329   000E86  20                 	db	32
   330   000E87  3D                 	db	61	;'='
   331   000E88  20                 	db	32
   332   000E89  25                 	db	37
   333   000E8A  66                 	db	102	;'f'
   334   000E8B  20                 	db	32
   335   000E8C  0D                 	db	13
   336   000E8D  0A                 	db	10
   337   000E8E  00                 	db	0
   338   000E8F                     
   339                           ; BSR set to: 14
   340   000E8F  62                 	db	98	;'b'
   341   000E90  6C                 	db	108	;'l'
   342   000E91  75                 	db	117	;'u'
   343   000E92  65                 	db	101	;'e'
   344   000E93  65                 	db	101	;'e'
   345   000E94  20                 	db	32
   346   000E95  3D                 	db	61	;'='
   347   000E96  20                 	db	32
   348   000E97  25                 	db	37
   349   000E98  64                 	db	100	;'d'
   350   000E99  20                 	db	32
   351   000E9A  0D                 	db	13
   352   000E9B  0A                 	db	10
   353   000E9C  00                 	db	0
   354   000E9D                     
   355                           ; BSR set to: 14
   356   000E9D  67                 	db	103	;'g'
   357   000E9E  72                 	db	114	;'r'
   358   000E9F  65                 	db	101	;'e'
   359   000EA0  65                 	db	101	;'e'
   360   000EA1  6E                 	db	110	;'n'
   361   000EA2  20                 	db	32
   362   000EA3  3D                 	db	61	;'='
   363   000EA4  20                 	db	32
   364   000EA5  25                 	db	37
   365   000EA6  64                 	db	100	;'d'
   366   000EA7  20                 	db	32
   367   000EA8  0D                 	db	13
   368   000EA9  0A                 	db	10
   369   000EAA  00                 	db	0
   370   000EAB                     STR_3:
   371                           
   372                           ; BSR set to: 14
   373   000EAB  62                 	db	98	;'b'
   374   000EAC  6C                 	db	108	;'l'
   375   000EAD  75                 	db	117	;'u'
   376   000EAE  65                 	db	101	;'e'
   377   000EAF  72                 	db	114	;'r'
   378   000EB0  20                 	db	32
   379   000EB1  3D                 	db	61	;'='
   380   000EB2  20                 	db	32
   381   000EB3  25                 	db	37
   382   000EB4  66                 	db	102	;'f'
   383   000EB5  20                 	db	32
   384   000EB6  0D                 	db	13
   385   000EB7  0A                 	db	10
   386   000EB8  00                 	db	0
   387   000EB9                     STR_1:
   388                           
   389                           ; BSR set to: 14
   390   000EB9  72                 	db	114	;'r'
   391   000EBA  65                 	db	101	;'e'
   392   000EBB  64                 	db	100	;'d'
   393   000EBC  72                 	db	114	;'r'
   394   000EBD  20                 	db	32
   395   000EBE  3D                 	db	61	;'='
   396   000EBF  20                 	db	32
   397   000EC0  25                 	db	37
   398   000EC1  66                 	db	102	;'f'
   399   000EC2  20                 	db	32
   400   000EC3  0D                 	db	13
   401   000EC4  0A                 	db	10
   402   000EC5  00                 	db	0
   403   000EC6                     
   404                           ; BSR set to: 14
   405   000EC6  72                 	db	114	;'r'
   406   000EC7  65                 	db	101	;'e'
   407   000EC8  64                 	db	100	;'d'
   408   000EC9  20                 	db	32
   409   000ECA  3D                 	db	61	;'='
   410   000ECB  20                 	db	32
   411   000ECC  25                 	db	37
   412   000ECD  64                 	db	100	;'d'
   413   000ECE  20                 	db	32
   414   000ECF  0D                 	db	13
   415   000ED0  0A                 	db	10
   416   000ED1  00                 	db	0
   417   000ED2                     STR_8:
   418                           
   419                           ; BSR set to: 14
   420   000ED2  69                 	db	105	;'i'
   421   000ED3  6E                 	db	110	;'n'
   422   000ED4  66                 	db	102	;'f'
   423   000ED5  00                 	db	0
   424   000ED6                     STR_11:
   425                           
   426                           ; BSR set to: 14
   427   000ED6  6E                 	db	110	;'n'
   428   000ED7  61                 	db	97	;'a'
   429   000ED8  6E                 	db	110	;'n'
   430   000ED9  00                 	db	0
   431   000EDA  00                 	db	0	; dummy byte at the end
   432   000000                     
   433                           ; #config settings
   434                           
   435                           	psect	cinit
   436   007F2C                     __pcinit:
   437                           	callstack 0
   438   007F2C                     start_initialization:
   439                           	callstack 0
   440   007F2C                     __initialization:
   441                           	callstack 0
   442                           
   443                           ; Clear objects allocated to BANK4 (80 bytes)
   444   007F2C  EE04  F000         	lfsr	0,__pbssBANK4
   445   007F30  0E50               	movlw	80
   446   007F32                     clear_0:
   447   007F32  6AEE               	clrf	postinc0,c
   448   007F34  06E8               	decf	wreg,f,c
   449   007F36  E1FD               	bnz	clear_0
   450                           
   451                           ; Clear objects allocated to BANK1 (60 bytes)
   452   007F38  EE01  F0B8         	lfsr	0,__pbssBANK1
   453   007F3C  0E3C               	movlw	60
   454   007F3E                     clear_1:
   455   007F3E  6AEE               	clrf	postinc0,c
   456   007F40  06E8               	decf	wreg,f,c
   457   007F42  E1FD               	bnz	clear_1
   458                           
   459                           ; Clear objects allocated to BANK0 (38 bytes)
   460   007F44  EE00  F0BB         	lfsr	0,__pbssBANK0
   461   007F48  0E26               	movlw	38
   462   007F4A                     clear_2:
   463   007F4A  6AEE               	clrf	postinc0,c
   464   007F4C  06E8               	decf	wreg,f,c
   465   007F4E  E1FD               	bnz	clear_2
   466                           
   467                           ; Clear objects allocated to COMRAM (1 bytes)
   468   007F50  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   469   007F52                     end_of_initialization:
   470                           	callstack 0
   471   007F52                     __end_of__initialization:
   472                           	callstack 0
   473   007F52  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   474   007F54  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   475   007F56  0100               	movlb	0
   476   007F58  EFCD  F039         	goto	_main	;jump to C main() function
   477                           
   478                           	psect	bssCOMRAM
   479   00005D                     __pbssCOMRAM:
   480                           	callstack 0
   481   00005D                     _TxBufWriteCnt:
   482                           	callstack 0
   483   00005D                     	ds	1
   484                           
   485                           	psect	bssBANK0
   486   0000BB                     __pbssBANK0:
   487                           	callstack 0
   488   0000BB                     _EUSART4RXbuf:
   489                           	callstack 0
   490   0000BB                     	ds	20
   491   0000CF                     floorf@F521:
   492                           	callstack 0
   493   0000CF                     	ds	4
   494   0000D3                     ___fpclassifyf@F465:
   495                           	callstack 0
   496   0000D3                     	ds	4
   497   0000D7                     _errno:
   498                           	callstack 0
   499   0000D7                     	ds	2
   500   0000D9                     _width:
   501                           	callstack 0
   502   0000D9                     	ds	2
   503   0000DB                     _prec:
   504                           	callstack 0
   505   0000DB                     	ds	2
   506   0000DD                     _flags:
   507                           	callstack 0
   508   0000DD                     	ds	1
   509   0000DE                     _TxBufReadCnt:
   510                           	callstack 0
   511   0000DE                     	ds	1
   512   0000DF                     _RxBufReadCnt:
   513                           	callstack 0
   514   0000DF                     	ds	1
   515   0000E0                     _RxBufWriteCnt:
   516                           	callstack 0
   517   0000E0                     	ds	1
   518                           
   519                           	psect	bssBANK1
   520   0001B8                     __pbssBANK1:
   521                           	callstack 0
   522   0001B8                     _EUSART4TXbuf:
   523                           	callstack 0
   524   0001B8                     	ds	60
   525                           
   526                           	psect	bssBANK4
   527   000400                     __pbssBANK4:
   528                           	callstack 0
   529   000400                     _dbuf:
   530                           	callstack 0
   531   000400                     	ds	80
   532                           
   533                           	psect	cstackBANK3
   534   000300                     __pcstackBANK3:
   535                           	callstack 0
   536   000300                     main@actions:
   537                           	callstack 0
   538                           
   539                           ; 40 bytes @ 0x0
   540   000300                     	ds	40
   541   000328                     main@clear_val:
   542                           	callstack 0
   543                           
   544                           ; 20 bytes @ 0x28
   545   000328                     	ds	20
   546   00033C                     main@red_val:
   547                           	callstack 0
   548                           
   549                           ; 20 bytes @ 0x3C
   550   00033C                     	ds	20
   551   000350                     main@green_val:
   552                           	callstack 0
   553                           
   554                           ; 20 bytes @ 0x50
   555   000350                     	ds	20
   556   000364                     main@blue_val:
   557                           	callstack 0
   558                           
   559                           ; 20 bytes @ 0x64
   560   000364                     	ds	20
   561   000378                     main@timings:
   562                           	callstack 0
   563                           
   564                           ; 40 bytes @ 0x78
   565   000378                     	ds	40
   566   0003A0                     main@actions_completed:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0xA0
   570   0003A0                     	ds	2
   571   0003A2                     main@going_forward:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0xA2
   575   0003A2                     	ds	1
   576   0003A3                     main@motorL:
   577                           	callstack 0
   578                           
   579                           ; 9 bytes @ 0xA3
   580   0003A3                     	ds	9
   581   0003AC                     main@motorR:
   582                           	callstack 0
   583                           
   584                           ; 9 bytes @ 0xAC
   585   0003AC                     	ds	9
   586   0003B5                     main@pmL:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0xB5
   590   0003B5                     	ds	2
   591   0003B7                     main@pmR:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0xB7
   595   0003B7                     	ds	2
   596                           
   597                           	psect	cstackBANK2
   598   000200                     __pcstackBANK2:
   599                           	callstack 0
   600   000200                     decide_action@clear_val:
   601                           	callstack 0
   602                           
   603                           ; 20 bytes @ 0x0
   604   000200                     	ds	20
   605   000214                     decide_action@red_val:
   606                           	callstack 0
   607                           
   608                           ; 20 bytes @ 0x14
   609   000214                     	ds	20
   610   000228                     decide_action@green_val:
   611                           	callstack 0
   612                           
   613                           ; 20 bytes @ 0x28
   614   000228                     	ds	20
   615   00023C                     decide_action@blue_val:
   616                           	callstack 0
   617                           
   618                           ; 20 bytes @ 0x3C
   619   00023C                     	ds	20
   620   000250                     _decide_action$3179:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x50
   624   000250                     	ds	4
   625   000254                     decide_action@pred_val:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x54
   629   000254                     	ds	2
   630   000256                     decide_action@pblue_val:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x56
   634   000256                     	ds	2
   635   000258                     decide_action@pgreen_val:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x58
   639   000258                     	ds	2
   640   00025A                     decide_action@rgb_comp:
   641                           	callstack 0
   642                           
   643                           ; 32 bytes @ 0x5A
   644   00025A                     	ds	32
   645   00027A                     decide_action@action:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x7A
   649   00027A                     	ds	1
   650   00027B                     decide_action@total:
   651                           	callstack 0
   652                           
   653                           ; 4 bytes @ 0x7B
   654   00027B                     	ds	4
   655   00027F                     decide_action@i:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0x7F
   659   00027F                     	ds	1
   660   000280                     decide_action@red:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x80
   664   000280                     	ds	4
   665   000284                     decide_action@green:
   666                           	callstack 0
   667                           
   668                           ; 4 bytes @ 0x84
   669   000284                     	ds	4
   670   000288                     decide_action@blue:
   671                           	callstack 0
   672                           
   673                           ; 4 bytes @ 0x88
   674   000288                     	ds	4
   675   00028C                     decide_action@red_r:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x8C
   679   00028C                     	ds	4
   680   000290                     decide_action@green_r:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x90
   684   000290                     	ds	4
   685   000294                     decide_action@blue_r:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x94
   689   000294                     	ds	4
   690   000298                     _decide_action$3180:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0x98
   694   000298                     	ds	4
   695   00029C                     _decide_action$3181:
   696                           	callstack 0
   697                           
   698                           ; 4 bytes @ 0x9C
   699   00029C                     	ds	4
   700   0002A0                     _decide_action$3182:
   701                           	callstack 0
   702                           
   703                           ; 4 bytes @ 0xA0
   704   0002A0                     	ds	4
   705   0002A4                     _decide_action$3183:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0xA4
   709   0002A4                     	ds	4
   710   0002A8                     _decide_action$3184:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0xA8
   714   0002A8                     	ds	4
   715   0002AC                     _decide_action$3185:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0xAC
   719   0002AC                     	ds	4
   720   0002B0                     _decide_action$3186:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0xB0
   724   0002B0                     	ds	4
   725                           
   726                           	psect	cstackBANK1
   727   000100                     __pcstackBANK1:
   728                           	callstack 0
   729   000100                     _powf$3192:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x0
   733   000100                     	ds	4
   734   000104                     _powf$3193:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x4
   738   000104                     	ds	4
   739   000108                     _powf$3197:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x8
   743   000108                     	ds	4
   744   00010C                     _powf$3198:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0xC
   748   00010C                     	ds	4
   749   000110                     _powf$3199:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x10
   753   000110                     	ds	4
   754   000114                     _powf$3200:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0x14
   758   000114                     	ds	4
   759   000118                     _powf$3201:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0x18
   763   000118                     	ds	4
   764   00011C                     powf@t2:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x1C
   768   00011C                     	ds	4
   769   000120                     powf@z_h:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x20
   773   000120                     	ds	4
   774   000124                     powf@z_l:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x24
   778   000124                     	ds	4
   779   000128                     powf@i:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x28
   783   000128                     	ds	4
   784   00012C                     powf@y1:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x2C
   788   00012C                     	ds	4
   789   000130                     powf@s_l:
   790                           	callstack 0
   791                           
   792                           ; 4 bytes @ 0x30
   793   000130                     	ds	4
   794   000134                     powf@t_l:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x34
   798   000134                     	ds	4
   799   000138                     _powf$3191:
   800                           	callstack 0
   801                           
   802                           ; 4 bytes @ 0x38
   803   000138                     	ds	4
   804   00013C                     _powf$3195:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0x3C
   808   00013C                     	ds	4
   809   000140                     _powf$3196:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x40
   813   000140                     	ds	4
   814   000144                     powf@w:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x44
   818   000144                     	ds	4
   819   000148                     _powf$3187:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x48
   823   000148                     	ds	4
   824   00014C                     _powf$3189:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0x4C
   828   00014C                     	ds	4
   829   000150                     powf@r:
   830                           	callstack 0
   831                           
   832                           ; 4 bytes @ 0x50
   833   000150                     	ds	4
   834   000154                     powf@yisint:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x54
   838   000154                     	ds	4
   839   000158                     _powf$3188:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x58
   843   000158                     	ds	4
   844   00015C                     _powf$3194:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x5C
   848   00015C                     	ds	4
   849   000160                     powf@s:
   850                           	callstack 0
   851                           
   852                           ; 4 bytes @ 0x60
   853   000160                     	ds	4
   854   000164                     powf@sn:
   855                           	callstack 0
   856                           
   857                           ; 4 bytes @ 0x64
   858   000164                     	ds	4
   859   000168                     powf@hx:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x68
   863   000168                     	ds	4
   864   00016C                     powf@p_l:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x6C
   868   00016C                     	ds	4
   869   000170                     powf@t_h:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x70
   873   000170                     	ds	4
   874   000174                     powf@s_h:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x74
   878   000174                     	ds	4
   879   000178                     powf@ax:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0x78
   883   000178                     	ds	4
   884   00017C                     powf@u:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x7C
   888   00017C                     	ds	4
   889   000180                     powf@v:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x80
   893   000180                     	ds	4
   894   000184                     powf@hy:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x84
   898   000184                     	ds	4
   899   000188                     powf@n:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0x88
   903   000188                     	ds	4
   904   00018C                     powf@t1:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x8C
   908   00018C                     	ds	4
   909   000190                     powf@s2:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x90
   913   000190                     	ds	4
   914   000194                     powf@iy:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x94
   918   000194                     	ds	4
   919   000198                     powf@is:
   920                           	callstack 0
   921                           
   922                           ; 4 bytes @ 0x98
   923   000198                     	ds	4
   924   00019C                     _powf$3190:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0x9C
   928   00019C                     	ds	4
   929   0001A0                     powf@p_h:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0xA0
   933   0001A0                     	ds	4
   934   0001A4                     powf@k:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0xA4
   938   0001A4                     	ds	4
   939   0001A8                     powf@j:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0xA8
   943   0001A8                     	ds	4
   944   0001AC                     powf@ix:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0xAC
   948   0001AC                     	ds	4
   949   0001B0                     powf@t:
   950                           	callstack 0
   951                           
   952                           ; 4 bytes @ 0xB0
   953   0001B0                     	ds	4
   954   0001B4                     powf@z:
   955                           	callstack 0
   956                           
   957                           ; 4 bytes @ 0xB4
   958   0001B4                     	ds	4
   959                           
   960                           	psect	cstackBANK0
   961   000060                     __pcstackBANK0:
   962                           	callstack 0
   963   000060                     ?_powf:
   964                           	callstack 0
   965   000060                     efgtoa@fp:
   966                           	callstack 0
   967   000060                     powf@x:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0x0
   971   000060                     	ds	1
   972   000061                     efgtoa@f:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0x1
   976   000061                     	ds	3
   977   000064                     powf@y:
   978                           	callstack 0
   979                           
   980                           ; 4 bytes @ 0x4
   981   000064                     	ds	1
   982   000065                     efgtoa@c:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x5
   986   000065                     	ds	1
   987   000066                     efgtoa@ne:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x6
   991   000066                     	ds	2
   992   000068                     ??_powf:
   993   000068                     efgtoa@p:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x8
   997   000068                     	ds	2
   998   00006A                     efgtoa@t:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0xA
  1002   00006A                     	ds	2
  1003   00006C                     _efgtoa$2687:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0xC
  1007   00006C                     	ds	2
  1008   00006E                     efgtoa@pp:
  1009                           	callstack 0
  1010                           
  1011                           ; 1 bytes @ 0xE
  1012   00006E                     	ds	1
  1013   00006F                     efgtoa@mode:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0xF
  1017   00006F                     	ds	1
  1018   000070                     efgtoa@nmode:
  1019                           	callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x10
  1022   000070                     	ds	1
  1023   000071                     efgtoa@d:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x11
  1027   000071                     	ds	2
  1028   000073                     efgtoa@m:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x13
  1032   000073                     	ds	2
  1033   000075                     efgtoa@e:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x15
  1037   000075                     	ds	2
  1038   000077                     efgtoa@w:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x17
  1042   000077                     	ds	2
  1043   000079                     efgtoa@ou:
  1044                           	callstack 0
  1045                           
  1046                           ; 4 bytes @ 0x19
  1047   000079                     	ds	4
  1048   00007D                     efgtoa@i:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x1D
  1052   00007D                     	ds	2
  1053   00007F                     efgtoa@h:
  1054                           	callstack 0
  1055                           
  1056                           ; 4 bytes @ 0x1F
  1057   00007F                     	ds	4
  1058   000083                     efgtoa@l:
  1059                           	callstack 0
  1060                           
  1061                           ; 4 bytes @ 0x23
  1062   000083                     	ds	4
  1063   000087                     efgtoa@sign:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x27
  1067   000087                     	ds	1
  1068   000088                     efgtoa@g:
  1069                           	callstack 0
  1070                           
  1071                           ; 4 bytes @ 0x28
  1072   000088                     	ds	4
  1073   00008C                     efgtoa@n:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x2C
  1077   00008C                     	ds	2
  1078   00008E                     efgtoa@u:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x2E
  1082   00008E                     	ds	4
  1083   000092                     vfpfcnvrt@fp:
  1084                           	callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x32
  1087   000092                     	ds	1
  1088   000093                     vfpfcnvrt@fmt:
  1089                           	callstack 0
  1090                           
  1091                           ; 1 bytes @ 0x33
  1092   000093                     	ds	1
  1093   000094                     vfpfcnvrt@ap:
  1094                           	callstack 0
  1095                           
  1096                           ; 1 bytes @ 0x34
  1097   000094                     	ds	1
  1098   000095                     vfpfcnvrt@done:
  1099                           	callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x35
  1102   000095                     	ds	1
  1103   000096                     vfpfcnvrt@convarg:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x36
  1107   000096                     	ds	4
  1108   00009A                     vfpfcnvrt@cp:
  1109                           	callstack 0
  1110                           
  1111                           ; 1 bytes @ 0x3A
  1112   00009A                     	ds	1
  1113   00009B                     vfpfcnvrt@c:
  1114                           	callstack 0
  1115                           
  1116                           ; 1 bytes @ 0x3B
  1117   00009B                     	ds	1
  1118   00009C                     ?_vfprintf:
  1119                           	callstack 0
  1120   00009C                     vfprintf@fp:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0x3C
  1124   00009C                     	ds	1
  1125   00009D                     vfprintf@fmt:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x3D
  1129   00009D                     	ds	1
  1130   00009E                     vfprintf@ap:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x3E
  1134   00009E                     	ds	1
  1135   00009F                     ?_sprintf:
  1136                           	callstack 0
  1137   00009F                     sprintf@s:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x3F
  1141   00009F                     	ds	2
  1142   0000A1                     sprintf@fmt:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x41
  1146   0000A1                     	ds	5
  1147   0000A6                     sprintf@ap:
  1148                           	callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x46
  1151   0000A6                     	ds	1
  1152   0000A7                     sprintf@f:
  1153                           	callstack 0
  1154                           
  1155                           ; 12 bytes @ 0x47
  1156   0000A7                     	ds	12
  1157   0000B3                     decide_action@red_unsigned:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x53
  1161   0000B3                     	ds	2
  1162   0000B5                     decide_action@green_unsigned:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x55
  1166   0000B5                     	ds	2
  1167   0000B7                     decide_action@blue_unsigned:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x57
  1171   0000B7                     	ds	2
  1172   0000B9                     ??_main:
  1173                           
  1174                           ; 1 bytes @ 0x59
  1175   0000B9                     	ds	2
  1176                           
  1177                           	psect	cstackCOMRAM
  1178   000001                     __pcstackCOMRAM:
  1179                           	callstack 0
  1180   000001                     i2sendCharSerial4@charToSend:
  1181                           	callstack 0
  1182                           
  1183                           ; 1 bytes @ 0x0
  1184   000001                     	ds	1
  1185   000002                     ??_color_click_toggleLED:
  1186   000002                     ??_invert_action:
  1187   000002                     ??_I2C_2_Master_Idle:
  1188   000002                     ?_get16bitTMR0val:
  1189                           	callstack 0
  1190   000002                     ?___fpclassifyf:
  1191                           	callstack 0
  1192   000002                     ?___wmul:
  1193                           	callstack 0
  1194   000002                     ?___awdiv:
  1195                           	callstack 0
  1196   000002                     ?___awmod:
  1197                           	callstack 0
  1198   000002                     ?___fladd:
  1199                           	callstack 0
  1200   000002                     ?_labs:
  1201                           	callstack 0
  1202   000002                     ?___flneg:
  1203                           	callstack 0
  1204   000002                     ?___fltol:
  1205                           	callstack 0
  1206   000002                     ?___xxtofl:
  1207                           	callstack 0
  1208   000002                     sendCharSerial4@charToSend:
  1209                           	callstack 0
  1210   000002                     initDCmotorsPWM@PWMperiod:
  1211                           	callstack 0
  1212   000002                     ___wmul@multiplier:
  1213                           	callstack 0
  1214   000002                     ___awdiv@dividend:
  1215                           	callstack 0
  1216   000002                     ___awmod@dividend:
  1217                           	callstack 0
  1218   000002                     memcpy@d1:
  1219                           	callstack 0
  1220   000002                     fputc@c:
  1221                           	callstack 0
  1222   000002                     strcpy@dest:
  1223                           	callstack 0
  1224   000002                     ___fleq@ff1:
  1225                           	callstack 0
  1226   000002                     ___flneg@f1:
  1227                           	callstack 0
  1228   000002                     ___fltol@f1:
  1229                           	callstack 0
  1230   000002                     ___fladd@b:
  1231                           	callstack 0
  1232   000002                     ___xxtofl@val:
  1233                           	callstack 0
  1234   000002                     ___fpclassifyf@x:
  1235                           	callstack 0
  1236   000002                     labs@a:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x1
  1240   000002                     	ds	1
  1241   000003                     ??_I2C_2_Master_Read:
  1242   000003                     I2C_2_Master_Write@data_byte:
  1243                           	callstack 0
  1244   000003                     sendStringSerial4@string:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x2
  1248   000003                     	ds	1
  1249   000004                     ??_get16bitTMR0val:
  1250   000004                     color_writetoaddr@value:
  1251                           	callstack 0
  1252   000004                     invert_action@input_action:
  1253                           	callstack 0
  1254   000004                     I2C_2_Master_Read@ack:
  1255                           	callstack 0
  1256   000004                     fputc@fp:
  1257                           	callstack 0
  1258   000004                     strcpy@src:
  1259                           	callstack 0
  1260   000004                     ___wmul@multiplicand:
  1261                           	callstack 0
  1262   000004                     ___awdiv@divisor:
  1263                           	callstack 0
  1264   000004                     ___awmod@divisor:
  1265                           	callstack 0
  1266   000004                     memcpy@s1:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x3
  1270   000004                     	ds	1
  1271   000005                     ??_fputc:
  1272   000005                     ??_strcpy:
  1273   000005                     color_writetoaddr@address:
  1274                           	callstack 0
  1275   000005                     I2C_2_Master_Read@tmp:
  1276                           	callstack 0
  1277                           
  1278                           ; 1 bytes @ 0x4
  1279   000005                     	ds	1
  1280   000006                     ??___fpclassifyf:
  1281   000006                     ??_labs:
  1282   000006                     ??_color_click_init:
  1283   000006                     ??___fltol:
  1284   000006                     ??___xxtofl:
  1285   000006                     ?_color_read_Clear:
  1286                           	callstack 0
  1287   000006                     ?_color_read_Red:
  1288                           	callstack 0
  1289   000006                     ?_color_read_Green:
  1290                           	callstack 0
  1291   000006                     ?_color_read_Blue:
  1292                           	callstack 0
  1293   000006                     ___awdiv@counter:
  1294                           	callstack 0
  1295   000006                     ___awmod@counter:
  1296                           	callstack 0
  1297   000006                     get16bitTMR0val@timer_val:
  1298                           	callstack 0
  1299   000006                     ___wmul@product:
  1300                           	callstack 0
  1301   000006                     memcpy@n:
  1302                           	callstack 0
  1303   000006                     strcpy@d:
  1304                           	callstack 0
  1305   000006                     ___fleq@ff2:
  1306                           	callstack 0
  1307   000006                     ___fladd@a:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x5
  1311   000006                     	ds	1
  1312   000007                     ___awdiv@sign:
  1313                           	callstack 0
  1314   000007                     ___awmod@sign:
  1315                           	callstack 0
  1316                           
  1317                           ; 1 bytes @ 0x6
  1318   000007                     	ds	1
  1319   000008                     ??_color_read_Clear:
  1320   000008                     ??_color_read_Red:
  1321   000008                     ??_color_read_Green:
  1322   000008                     ??_color_read_Blue:
  1323   000008                     ?_abs:
  1324                           	callstack 0
  1325   000008                     ?___lwdiv:
  1326                           	callstack 0
  1327   000008                     memcpy@tmp:
  1328                           	callstack 0
  1329   000008                     ___awdiv@quotient:
  1330                           	callstack 0
  1331   000008                     ___lwdiv@dividend:
  1332                           	callstack 0
  1333   000008                     abs@a:
  1334                           	callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x7
  1337   000008                     	ds	1
  1338   000009                     memcpy@d:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x8
  1342   000009                     	ds	1
  1343   00000A                     ??___fladd:
  1344   00000A                     ??_abs:
  1345   00000A                     ??___fleq:
  1346   00000A                     ___fltol@sign1:
  1347                           	callstack 0
  1348   00000A                     ___xxtofl@sign:
  1349                           	callstack 0
  1350   00000A                     ___lwdiv@divisor:
  1351                           	callstack 0
  1352   00000A                     ___fpclassifyf@e:
  1353                           	callstack 0
  1354   00000A                     fputs@s:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x9
  1358   00000A                     	ds	1
  1359   00000B                     ___fltol@exp1:
  1360                           	callstack 0
  1361   00000B                     ___xxtofl@exp:
  1362                           	callstack 0
  1363   00000B                     color_read_Clear@tmp:
  1364                           	callstack 0
  1365   00000B                     color_read_Red@tmp:
  1366                           	callstack 0
  1367   00000B                     color_read_Green@tmp:
  1368                           	callstack 0
  1369   00000B                     color_read_Blue@tmp:
  1370                           	callstack 0
  1371   00000B                     memcpy@s:
  1372                           	callstack 0
  1373                           
  1374                           ; 2 bytes @ 0xA
  1375   00000B                     	ds	1
  1376   00000C                     fputs@fp:
  1377                           	callstack 0
  1378   00000C                     ___lwdiv@quotient:
  1379                           	callstack 0
  1380   00000C                     ___xxtofl@arg:
  1381                           	callstack 0
  1382   00000C                     ___fpclassifyf@u:
  1383                           	callstack 0
  1384                           
  1385                           ; 4 bytes @ 0xB
  1386   00000C                     	ds	1
  1387   00000D                     fputs@c:
  1388                           	callstack 0
  1389                           
  1390                           ; 1 bytes @ 0xC
  1391   00000D                     	ds	1
  1392   00000E                     ___lwdiv@counter:
  1393                           	callstack 0
  1394   00000E                     ___fladd@signs:
  1395                           	callstack 0
  1396   00000E                     fputs@i:
  1397                           	callstack 0
  1398                           
  1399                           ; 2 bytes @ 0xD
  1400   00000E                     	ds	1
  1401   00000F                     ___fladd@aexp:
  1402                           	callstack 0
  1403   00000F                     setMotorPWM@m:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0xE
  1407   00000F                     	ds	1
  1408   000010                     ___fladd@bexp:
  1409                           	callstack 0
  1410   000010                     pad@fp:
  1411                           	callstack 0
  1412                           
  1413                           ; 1 bytes @ 0xF
  1414   000010                     	ds	1
  1415   000011                     ??_setMotorPWM:
  1416   000011                     ___fladd@grs:
  1417                           	callstack 0
  1418   000011                     pad@buf:
  1419                           	callstack 0
  1420                           
  1421                           ; 2 bytes @ 0x10
  1422   000011                     	ds	1
  1423   000012                     ?_sqrtf:
  1424                           	callstack 0
  1425   000012                     ?___flmul:
  1426                           	callstack 0
  1427   000012                     ___flmul@b:
  1428                           	callstack 0
  1429   000012                     sqrtf@x:
  1430                           	callstack 0
  1431                           
  1432                           ; 4 bytes @ 0x11
  1433   000012                     	ds	1
  1434   000013                     setMotorPWM@posDuty:
  1435                           	callstack 0
  1436   000013                     pad@p:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x12
  1440   000013                     	ds	1
  1441   000014                     setMotorPWM@negDuty:
  1442                           	callstack 0
  1443                           
  1444                           ; 1 bytes @ 0x13
  1445   000014                     	ds	1
  1446   000015                     ??_pad:
  1447   000015                     fullSpeedAhead@mL:
  1448                           	callstack 0
  1449   000015                     stop@mL:
  1450                           	callstack 0
  1451                           
  1452                           ; 2 bytes @ 0x14
  1453   000015                     	ds	1
  1454   000016                     ??_sqrtf:
  1455   000016                     pad@i:
  1456                           	callstack 0
  1457   000016                     ___flmul@a:
  1458                           	callstack 0
  1459                           
  1460                           ; 4 bytes @ 0x15
  1461   000016                     	ds	1
  1462   000017                     fullSpeedAhead@mR:
  1463                           	callstack 0
  1464   000017                     stop@mR:
  1465                           	callstack 0
  1466                           
  1467                           ; 2 bytes @ 0x16
  1468   000017                     	ds	2
  1469   000019                     ??_fullSpeedAhead:
  1470   000019                     turn_left_90@mL:
  1471                           	callstack 0
  1472   000019                     turn_right_90@mL:
  1473                           	callstack 0
  1474   000019                     turn_left_135@mL:
  1475                           	callstack 0
  1476   000019                     turn_right_135@mL:
  1477                           	callstack 0
  1478   000019                     reverse_after_read@mL:
  1479                           	callstack 0
  1480   000019                     reverse_one_square@mL:
  1481                           	callstack 0
  1482                           
  1483                           ; 2 bytes @ 0x18
  1484   000019                     	ds	1
  1485   00001A                     ??___flmul:
  1486                           
  1487                           ; 1 bytes @ 0x19
  1488   00001A                     	ds	1
  1489   00001B                     turn_left_90@mR:
  1490                           	callstack 0
  1491   00001B                     turn_right_90@mR:
  1492                           	callstack 0
  1493   00001B                     turn_left_135@mR:
  1494                           	callstack 0
  1495   00001B                     turn_right_135@mR:
  1496                           	callstack 0
  1497   00001B                     reverse_after_read@mR:
  1498                           	callstack 0
  1499   00001B                     reverse_one_square@mR:
  1500                           	callstack 0
  1501   00001B                     sqrtf@s:
  1502                           	callstack 0
  1503                           
  1504                           ; 4 bytes @ 0x1A
  1505   00001B                     	ds	2
  1506   00001D                     ??_turn_left_90:
  1507   00001D                     ??_turn_right_90:
  1508   00001D                     ??_turn_left_135:
  1509   00001D                     ??_turn_right_135:
  1510   00001D                     ??_reverse_after_read:
  1511   00001D                     ??_reverse_one_square:
  1512                           
  1513                           ; 1 bytes @ 0x1C
  1514   00001D                     	ds	1
  1515   00001E                     ___flmul@sign:
  1516                           	callstack 0
  1517                           
  1518                           ; 1 bytes @ 0x1D
  1519   00001E                     	ds	1
  1520   00001F                     ___flmul@aexp:
  1521                           	callstack 0
  1522   00001F                     sqrtf@i:
  1523                           	callstack 0
  1524                           
  1525                           ; 4 bytes @ 0x1E
  1526   00001F                     	ds	1
  1527   000020                     ___flmul@grs:
  1528                           	callstack 0
  1529                           
  1530                           ; 4 bytes @ 0x1F
  1531   000020                     	ds	3
  1532   000023                     sqrtf@q:
  1533                           	callstack 0
  1534                           
  1535                           ; 4 bytes @ 0x22
  1536   000023                     	ds	1
  1537   000024                     ___flmul@bexp:
  1538                           	callstack 0
  1539                           
  1540                           ; 1 bytes @ 0x23
  1541   000024                     	ds	1
  1542   000025                     ___flmul@prod:
  1543                           	callstack 0
  1544                           
  1545                           ; 4 bytes @ 0x24
  1546   000025                     	ds	2
  1547   000027                     sqrtf@t:
  1548                           	callstack 0
  1549                           
  1550                           ; 4 bytes @ 0x26
  1551   000027                     	ds	2
  1552   000029                     ___flmul@temp:
  1553                           	callstack 0
  1554                           
  1555                           ; 2 bytes @ 0x28
  1556   000029                     	ds	2
  1557   00002B                     ?___fldiv:
  1558                           	callstack 0
  1559   00002B                     ?_scalbnf:
  1560                           	callstack 0
  1561   00002B                     ___fldiv@b:
  1562                           	callstack 0
  1563   00002B                     scalbnf@x:
  1564                           	callstack 0
  1565   00002B                     sqrtf@m:
  1566                           	callstack 0
  1567                           
  1568                           ; 4 bytes @ 0x2A
  1569   00002B                     	ds	4
  1570   00002F                     scalbnf@n:
  1571                           	callstack 0
  1572   00002F                     ___fldiv@a:
  1573                           	callstack 0
  1574   00002F                     sqrtf@r:
  1575                           	callstack 0
  1576                           
  1577                           ; 4 bytes @ 0x2E
  1578   00002F                     	ds	2
  1579   000031                     ??_scalbnf:
  1580                           
  1581                           ; 1 bytes @ 0x30
  1582   000031                     	ds	2
  1583   000033                     ??___fldiv:
  1584   000033                     sqrtf@ix:
  1585                           	callstack 0
  1586                           
  1587                           ; 4 bytes @ 0x32
  1588   000033                     	ds	2
  1589   000035                     scalbnf@u:
  1590                           	callstack 0
  1591                           
  1592                           ; 4 bytes @ 0x34
  1593   000035                     	ds	2
  1594   000037                     ___fldiv@rem:
  1595                           	callstack 0
  1596                           
  1597                           ; 4 bytes @ 0x36
  1598   000037                     	ds	2
  1599   000039                     scalbnf@y:
  1600                           	callstack 0
  1601                           
  1602                           ; 4 bytes @ 0x38
  1603   000039                     	ds	2
  1604   00003B                     ___fldiv@sign:
  1605                           	callstack 0
  1606                           
  1607                           ; 1 bytes @ 0x3A
  1608   00003B                     	ds	1
  1609   00003C                     ___fldiv@new_exp:
  1610                           	callstack 0
  1611                           
  1612                           ; 2 bytes @ 0x3B
  1613   00003C                     	ds	2
  1614   00003E                     ___fldiv@grs:
  1615                           	callstack 0
  1616                           
  1617                           ; 4 bytes @ 0x3D
  1618   00003E                     	ds	4
  1619   000042                     ___fldiv@bexp:
  1620                           	callstack 0
  1621                           
  1622                           ; 1 bytes @ 0x41
  1623   000042                     	ds	1
  1624   000043                     ___fldiv@aexp:
  1625                           	callstack 0
  1626                           
  1627                           ; 1 bytes @ 0x42
  1628   000043                     	ds	1
  1629   000044                     ?___flsub:
  1630                           	callstack 0
  1631   000044                     ?_floorf:
  1632                           	callstack 0
  1633   000044                     ___flsub@b:
  1634                           	callstack 0
  1635   000044                     floorf@x:
  1636                           	callstack 0
  1637                           
  1638                           ; 4 bytes @ 0x43
  1639   000044                     	ds	4
  1640   000048                     ??_floorf:
  1641   000048                     ___flsub@a:
  1642                           	callstack 0
  1643                           
  1644                           ; 4 bytes @ 0x47
  1645   000048                     	ds	4
  1646   00004C                     ___flge@ff1:
  1647                           	callstack 0
  1648                           
  1649                           ; 4 bytes @ 0x4B
  1650   00004C                     	ds	2
  1651   00004E                     floorf@m:
  1652                           	callstack 0
  1653                           
  1654                           ; 4 bytes @ 0x4D
  1655   00004E                     	ds	2
  1656   000050                     ___flge@ff2:
  1657                           	callstack 0
  1658                           
  1659                           ; 4 bytes @ 0x4F
  1660   000050                     	ds	2
  1661   000052                     floorf@e:
  1662                           	callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x51
  1665   000052                     	ds	2
  1666   000054                     ??___flge:
  1667   000054                     floorf@u:
  1668                           	callstack 0
  1669                           
  1670                           ; 4 bytes @ 0x53
  1671   000054                     	ds	4
  1672   000058                     ??_efgtoa:
  1673                           
  1674                           ; 1 bytes @ 0x57
  1675   000058                     	ds	2
  1676   00005A                     ??_vfpfcnvrt:
  1677                           
  1678                           ; 1 bytes @ 0x59
  1679   00005A                     	ds	2
  1680   00005C                     vfprintf@cfmt:
  1681                           	callstack 0
  1682                           
  1683                           ; 1 bytes @ 0x5B
  1684   00005C                     	ds	1
  1685   00005D                     
  1686                           ; 1 bytes @ 0x5C
  1687 ;;
  1688 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1689 ;;
  1690 ;; *************** function _main *****************
  1691 ;; Defined at:
  1692 ;;		line 23 in file "main.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  i               1    0        unsigned char 
  1697 ;;  timings        40  120[BANK3 ] unsigned int [20]
  1698 ;;  actions        40    0[BANK3 ] int [20]
  1699 ;;  blue_val       20  100[BANK3 ] unsigned char [20]
  1700 ;;  green_val      20   80[BANK3 ] unsigned char [20]
  1701 ;;  red_val        20   60[BANK3 ] unsigned char [20]
  1702 ;;  clear_val      20   40[BANK3 ] unsigned char [20]
  1703 ;;  motorR          9  172[BANK3 ] struct DC_motor
  1704 ;;  motorL          9  163[BANK3 ] struct DC_motor
  1705 ;;  pmR             2  183[BANK3 ] PTR struct DC_motor
  1706 ;;		 -> main@motorR(9), 
  1707 ;;  pmL             2  181[BANK3 ] PTR struct DC_motor
  1708 ;;		 -> main@motorL(9), 
  1709 ;;  action_to_do    2    0        int 
  1710 ;;  upcoming_act    2    0        int 
  1711 ;;  actions_comp    2  160[BANK3 ] int 
  1712 ;;  bluem           2    0        unsigned int 
  1713 ;;  greenm          2    0        unsigned int 
  1714 ;;  redm            2    0        unsigned int 
  1715 ;;  measured_tim    2    0        unsigned int 
  1716 ;;  lum             2    0        unsigned int 
  1717 ;;  PWMcycle        2    0        unsigned int 
  1718 ;;  pgreen_val      2    0        PTR unsigned char 
  1719 ;;		 -> main@green_val(20), 
  1720 ;;  pblue_val       2    0        PTR unsigned char 
  1721 ;;		 -> main@blue_val(20), 
  1722 ;;  pred_val        2    0        PTR unsigned char 
  1723 ;;		 -> main@red_val(20), 
  1724 ;;  pclear_val      2    0        PTR unsigned char 
  1725 ;;		 -> main@clear_val(20), 
  1726 ;;  previously_m    2    0        unsigned int 
  1727 ;;  going_forwar    1  162[BANK3 ] _Bool 
  1728 ;;  action          1    0        unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1739 ;;      Locals:         0       0       0       0     185       0       0       0       0       0       0       0       
      +0       0       0
  1740 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1741 ;;      Totals:         0       2       0       0     185       0       0       0       0       0       0       0       
      +0       0       0
  1742 ;;Total ram usage:      187 bytes
  1743 ;; Hardware stack levels required when called: 11
  1744 ;; This function calls:
  1745 ;;		_I2C_2_Master_Init
  1746 ;;		_Interrupts_init
  1747 ;;		_Timer0_init
  1748 ;;		_color_click_init
  1749 ;;		_color_click_toggleLED
  1750 ;;		_color_read_Blue
  1751 ;;		_color_read_Clear
  1752 ;;		_color_read_Green
  1753 ;;		_color_read_Red
  1754 ;;		_color_writetoaddr
  1755 ;;		_decide_action
  1756 ;;		_fullSpeedAhead
  1757 ;;		_get16bitTMR0val
  1758 ;;		_initDCmotorsPWM
  1759 ;;		_initUSART4
  1760 ;;		_invert_action
  1761 ;;		_resetTimer0
  1762 ;;		_reverse_after_read
  1763 ;;		_reverse_one_square
  1764 ;;		_sendStringSerial4
  1765 ;;		_sprintf
  1766 ;;		_stop
  1767 ;;		_turn_left_135
  1768 ;;		_turn_left_90
  1769 ;;		_turn_right_135
  1770 ;;		_turn_right_90
  1771 ;; This function is called by:
  1772 ;;		Startup code after reset
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text0
  1777   00739A                     __ptext0:
  1778                           	callstack 0
  1779   00739A                     _main:
  1780                           	callstack 20
  1781   00739A                     
  1782                           ;main.c: 25:     Timer0_init();
  1783   00739A  EC12  F040         	call	_Timer0_init	;wreg free
  1784   00739E                     
  1785                           ;main.c: 26:     Interrupts_init();
  1786   00739E  EC5E  F040         	call	_Interrupts_init	;wreg free
  1787   0073A2                     
  1788                           ;main.c: 27:     I2C_2_Master_Init();
  1789   0073A2  ECC6  F03F         	call	_I2C_2_Master_Init	;wreg free
  1790   0073A6                     
  1791                           ;main.c: 28:     color_click_init();
  1792   0073A6  EC75  F03E         	call	_color_click_init	;wreg free
  1793   0073AA                     
  1794                           ;main.c: 29:     initDCmotorsPWM(99);
  1795   0073AA  0E00               	movlw	0
  1796   0073AC  6E03               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1797   0073AE  0E63               	movlw	99
  1798   0073B0  6E02               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1799   0073B2  EC09  F03C         	call	_initDCmotorsPWM	;wreg free
  1800   0073B6                     
  1801                           ;main.c: 30:     initUSART4();
  1802   0073B6  EC22  F040         	call	_initUSART4	;wreg free
  1803   0073BA                     
  1804                           ;main.c: 33:     color_click_toggleLED();
  1805   0073BA  EC4F  F03D         	call	_color_click_toggleLED	;wreg free
  1806   0073BE                     
  1807                           ;main.c: 36:     LATHbits.LATH3=1;
  1808   0073BE  8680               	bsf	128,3,c	;volatile
  1809   0073C0                     
  1810                           ;main.c: 37:     TRISHbits.TRISH3=0;
  1811   0073C0  9688               	bcf	136,3,c	;volatile
  1812   0073C2                     
  1813                           ;main.c: 40:     TRISFbits.TRISF2=1;
  1814   0073C2  8486               	bsf	134,2,c	;volatile
  1815   0073C4                     
  1816                           ;main.c: 41:     ANSELFbits.ANSELF2=0;
  1817   0073C4  010E               	movlb	14	; () banked
  1818   0073C6  95B4               	bcf	180,2,b	;volatile
  1819   0073C8                     
  1820                           ; BSR set to: 14
  1821                           ;main.c: 47:     motorL.power=0;
  1822   0073C8  0E00               	movlw	0
  1823   0073CA  0103               	movlb	3	; () banked
  1824   0073CC  6FA3               	movwf	main@motorL& (0+255),b
  1825   0073CE                     
  1826                           ; BSR set to: 3
  1827                           ;main.c: 48:     motorL.direction=1;
  1828   0073CE  0E01               	movlw	1
  1829   0073D0  6FA4               	movwf	(main@motorL+1)& (0+255),b
  1830   0073D2                     
  1831                           ; BSR set to: 3
  1832                           ;main.c: 49:     motorL.brakemode=1;
  1833   0073D2  0E01               	movlw	1
  1834   0073D4  6FA5               	movwf	(main@motorL+2)& (0+255),b
  1835   0073D6                     
  1836                           ; BSR set to: 3
  1837                           ;main.c: 50:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1838   0073D6  0EAA               	movlw	170
  1839   0073D8  6FA8               	movwf	(main@motorL+5)& (0+255),b
  1840   0073DA  0E0F               	movlw	15
  1841   0073DC  6FA9               	movwf	(main@motorL+6)& (0+255),b
  1842   0073DE                     
  1843                           ; BSR set to: 3
  1844                           ;main.c: 51:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1845   0073DE  0EA6               	movlw	166
  1846   0073E0  6FAA               	movwf	(main@motorL+7)& (0+255),b
  1847   0073E2  0E0F               	movlw	15
  1848   0073E4  6FAB               	movwf	(main@motorL+8)& (0+255),b
  1849   0073E6                     
  1850                           ; BSR set to: 3
  1851                           ;main.c: 52:     motorL.PWMperiod=PWMcycle;
  1852   0073E6  0E00               	movlw	0
  1853   0073E8  6FA7               	movwf	(main@motorL+4)& (0+255),b
  1854   0073EA  0E63               	movlw	99
  1855   0073EC  6FA6               	movwf	(main@motorL+3)& (0+255),b
  1856   0073EE                     
  1857                           ; BSR set to: 3
  1858                           ;main.c: 54:     motorR.power=0;
  1859   0073EE  0E00               	movlw	0
  1860   0073F0  6FAC               	movwf	main@motorR& (0+255),b
  1861   0073F2                     
  1862                           ; BSR set to: 3
  1863                           ;main.c: 55:     motorR.direction=1;
  1864   0073F2  0E01               	movlw	1
  1865   0073F4  6FAD               	movwf	(main@motorR+1)& (0+255),b
  1866   0073F6                     
  1867                           ; BSR set to: 3
  1868                           ;main.c: 56:     motorR.brakemode=1;
  1869   0073F6  0E01               	movlw	1
  1870   0073F8  6FAE               	movwf	(main@motorR+2)& (0+255),b
  1871   0073FA                     
  1872                           ; BSR set to: 3
  1873                           ;main.c: 57:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1874   0073FA  0E25               	movlw	37
  1875   0073FC  6FB1               	movwf	(main@motorR+5)& (0+255),b
  1876   0073FE  0E0F               	movlw	15
  1877   007400  6FB2               	movwf	(main@motorR+6)& (0+255),b
  1878   007402                     
  1879                           ; BSR set to: 3
  1880                           ;main.c: 58:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1881   007402  0E21               	movlw	33
  1882   007404  6FB3               	movwf	(main@motorR+7)& (0+255),b
  1883   007406  0E0F               	movlw	15
  1884   007408  6FB4               	movwf	(main@motorR+8)& (0+255),b
  1885   00740A                     
  1886                           ; BSR set to: 3
  1887                           ;main.c: 59:     motorR.PWMperiod=PWMcycle;
  1888   00740A  0E00               	movlw	0
  1889   00740C  6FB0               	movwf	(main@motorR+4)& (0+255),b
  1890   00740E  0E63               	movlw	99
  1891   007410  6FAF               	movwf	(main@motorR+3)& (0+255),b
  1892   007412                     
  1893                           ; BSR set to: 3
  1894                           ;main.c: 62:     struct DC_motor *pmL= &motorL;
  1895   007412  0EA3               	movlw	low main@motorL
  1896   007414  6FB5               	movwf	main@pmL& (0+255),b
  1897   007416  0E03               	movlw	high main@motorL
  1898   007418  6FB6               	movwf	(main@pmL+1)& (0+255),b
  1899   00741A                     
  1900                           ; BSR set to: 3
  1901                           ;main.c: 63:     struct DC_motor *pmR= &motorR;
  1902   00741A  0EAC               	movlw	low main@motorR
  1903   00741C  6FB7               	movwf	main@pmR& (0+255),b
  1904   00741E  0E03               	movlw	high main@motorR
  1905   007420  6FB8               	movwf	(main@pmR+1)& (0+255),b
  1906   007422                     
  1907                           ; BSR set to: 3
  1908                           ;main.c: 79:     unsigned int lum;;main.c: 80:     unsigned int redm, greenm, bluem;;mai
      +                          n.c: 81:     char action;;main.c: 82:     _Bool going_forward = 0;
  1909   007422  0E00               	movlw	0
  1910   007424  6FA2               	movwf	main@going_forward& (0+255),b
  1911   007426                     
  1912                           ; BSR set to: 3
  1913                           ;main.c: 83:     unsigned int previously_measured_time, measured_time;;main.c: 84:     i
      +                          nt action_to_do;;main.c: 85:     unsigned int timings[20];;main.c: 86:     int actions[2
      +                          0];;main.c: 87:     int actions_completed = 0;
  1914   007426  0E00               	movlw	0
  1915   007428  6FA1               	movwf	(main@actions_completed+1)& (0+255),b
  1916   00742A  0E00               	movlw	0
  1917   00742C  6FA0               	movwf	main@actions_completed& (0+255),b
  1918   00742E                     
  1919                           ; BSR set to: 3
  1920                           ;main.c: 100:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1921   00742E  0EA3               	movlw	163
  1922   007430  0100               	movlb	0	; () banked
  1923   007432  6FBA               	movwf	(??_main+1)& (0+255),b
  1924   007434  0E57               	movlw	87
  1925   007436  6FB9               	movwf	??_main& (0+255),b
  1926   007438  0E02               	movlw	2
  1927   00743A                     u9227:
  1928   00743A  2EE8               	decfsz	wreg,f,c
  1929   00743C  D7FE               	bra	u9227
  1930   00743E  2FB9               	decfsz	??_main& (0+255),f,b
  1931   007440  D7FC               	bra	u9227
  1932   007442  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  1933   007444  D7FA               	bra	u9227
  1934   007446  0000               	nop	
  1935   007448                     l8825:
  1936                           
  1937                           ;main.c: 106:         turn_left_135(pmL, pmR);
  1938   007448  C3B5  F019         	movff	main@pmL,turn_left_135@mL
  1939   00744C  C3B6  F01A         	movff	main@pmL+1,turn_left_135@mL+1
  1940   007450  C3B7  F01B         	movff	main@pmR,turn_left_135@mR
  1941   007454  C3B8  F01C         	movff	main@pmR+1,turn_left_135@mR+1
  1942   007458  EC6D  F038         	call	_turn_left_135	;wreg free
  1943   00745C                     
  1944                           ;main.c: 107:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1945   00745C  0E52               	movlw	82
  1946   00745E  0100               	movlb	0	; () banked
  1947   007460  6FBA               	movwf	(??_main+1)& (0+255),b
  1948   007462  0E2B               	movlw	43
  1949   007464  6FB9               	movwf	??_main& (0+255),b
  1950   007466  0E00               	movlw	0
  1951   007468                     u9237:
  1952   007468  2EE8               	decfsz	wreg,f,c
  1953   00746A  D7FE               	bra	u9237
  1954   00746C  2FB9               	decfsz	??_main& (0+255),f,b
  1955   00746E  D7FC               	bra	u9237
  1956   007470  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  1957   007472  D7FA               	bra	u9237
  1958   007474  0000               	nop	
  1959   007476  EF24  F03A         	goto	l8825
  1960   00747A  EF12  F000         	goto	start
  1961   00747E                     __end_of_main:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function _turn_right_90 *****************
  1965 ;; Defined at:
  1966 ;;		line 143 in file "dc_motor.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  1969 ;;		 -> main@motorL(9), 
  1970 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  1971 ;;		 -> main@motorR(9), 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1985 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1986 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1987 ;;Total ram usage:        6 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 5
  1990 ;; This function calls:
  1991 ;;		_setMotorPWM
  1992 ;;		_stop
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text1
  1999   0071C6                     __ptext1:
  2000                           	callstack 0
  2001   0071C6                     _turn_right_90:
  2002                           	callstack 25
  2003   0071C6                     
  2004                           ;dc_motor.c: 144:     mL->direction = 0;
  2005   0071C6  EE20 F001          	lfsr	2,1
  2006   0071CA  5019               	movf	turn_right_90@mL^0,w,c
  2007   0071CC  26D9               	addwf	fsr2l,f,c
  2008   0071CE  501A               	movf	(turn_right_90@mL+1)^0,w,c
  2009   0071D0  22DA               	addwfc	fsr2h,f,c
  2010   0071D2  6ADF               	clrf	indf2,c
  2011                           
  2012                           ;dc_motor.c: 145:     mR->direction = 1;
  2013   0071D4  EE20 F001          	lfsr	2,1
  2014   0071D8  501B               	movf	turn_right_90@mR^0,w,c
  2015   0071DA  26D9               	addwf	fsr2l,f,c
  2016   0071DC  501C               	movf	(turn_right_90@mR+1)^0,w,c
  2017   0071DE  22DA               	addwfc	fsr2h,f,c
  2018   0071E0  0E01               	movlw	1
  2019   0071E2  6EDF               	movwf	indf2,c
  2020                           
  2021                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2022   0071E4  EF2A  F039         	goto	l226
  2023   0071E8                     l6455:
  2024                           
  2025                           ;dc_motor.c: 148:         if ((mL->power) < 70) (mL->power) += 1;
  2026   0071E8  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2027   0071EC  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2028   0071F0  0E46               	movlw	70
  2029   0071F2  60DF               	cpfslt	indf2,c
  2030   0071F4  EFFE  F038         	goto	u6411
  2031   0071F8  EF00  F039         	goto	u6410
  2032   0071FC                     u6411:
  2033   0071FC  EF05  F039         	goto	l6459
  2034   007200                     u6410:
  2035   007200  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2036   007204  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2037   007208  2ADF               	incf	indf2,f,c
  2038   00720A                     l6459:
  2039                           
  2040                           ;dc_motor.c: 149:         if ((mR->power) < 70) (mR->power) += 1;
  2041   00720A  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2042   00720E  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2043   007212  0E46               	movlw	70
  2044   007214  60DF               	cpfslt	indf2,c
  2045   007216  EF0F  F039         	goto	u6421
  2046   00721A  EF11  F039         	goto	u6420
  2047   00721E                     u6421:
  2048   00721E  EF16  F039         	goto	l6463
  2049   007222                     u6420:
  2050   007222  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2051   007226  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2052   00722A  2ADF               	incf	indf2,f,c
  2053   00722C                     l6463:
  2054                           
  2055                           ;dc_motor.c: 151:         setMotorPWM(mL);
  2056   00722C  C019  F00F         	movff	turn_right_90@mL,setMotorPWM@m
  2057   007230  C01A  F010         	movff	turn_right_90@mL+1,setMotorPWM@m+1
  2058   007234  ECB9  F034         	call	_setMotorPWM	;wreg free
  2059   007238                     
  2060                           ;dc_motor.c: 152:         setMotorPWM(mR);
  2061   007238  C01B  F00F         	movff	turn_right_90@mR,setMotorPWM@m
  2062   00723C  C01C  F010         	movff	turn_right_90@mR+1,setMotorPWM@m+1
  2063   007240  ECB9  F034         	call	_setMotorPWM	;wreg free
  2064   007244                     
  2065                           ;dc_motor.c: 153:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2066   007244  0E15               	movlw	21
  2067   007246  6E1D               	movwf	??_turn_right_90^0,c
  2068   007248  0EC6               	movlw	198
  2069   00724A                     u9247:
  2070   00724A  2EE8               	decfsz	wreg,f,c
  2071   00724C  D7FE               	bra	u9247
  2072   00724E  2E1D               	decfsz	??_turn_right_90^0,f,c
  2073   007250  D7FC               	bra	u9247
  2074   007252  D000               	nop2	
  2075   007254                     l226:
  2076                           
  2077                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2078   007254  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2079   007258  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2080   00725C  0E45               	movlw	69
  2081   00725E  64DF               	cpfsgt	indf2,c
  2082   007260  EF34  F039         	goto	u6431
  2083   007264  EF36  F039         	goto	u6430
  2084   007268                     u6431:
  2085   007268  EFF4  F038         	goto	l6455
  2086   00726C                     u6430:
  2087   00726C  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2088   007270  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2089   007274  0E45               	movlw	69
  2090   007276  64DF               	cpfsgt	indf2,c
  2091   007278  EF40  F039         	goto	u6441
  2092   00727C  EF42  F039         	goto	u6440
  2093   007280                     u6441:
  2094   007280  EFF4  F038         	goto	l6455
  2095   007284                     u6440:
  2096   007284                     
  2097                           ;dc_motor.c: 155:     _delay((unsigned long)((440)*(64000000/4000.0)));
  2098   007284  0E24               	movlw	36
  2099   007286  6E1E               	movwf	(??_turn_right_90+1)^0,c
  2100   007288  0EB7               	movlw	183
  2101   00728A  6E1D               	movwf	??_turn_right_90^0,c
  2102   00728C  0EC2               	movlw	194
  2103   00728E                     u9257:
  2104   00728E  2EE8               	decfsz	wreg,f,c
  2105   007290  D7FE               	bra	u9257
  2106   007292  2E1D               	decfsz	??_turn_right_90^0,f,c
  2107   007294  D7FC               	bra	u9257
  2108   007296  2E1E               	decfsz	(??_turn_right_90+1)^0,f,c
  2109   007298  D7FA               	bra	u9257
  2110   00729A                     
  2111                           ;dc_motor.c: 156:     stop(mL, mR);
  2112   00729A  C019  F015         	movff	turn_right_90@mL,stop@mL
  2113   00729E  C01A  F016         	movff	turn_right_90@mL+1,stop@mL+1
  2114   0072A2  C01B  F017         	movff	turn_right_90@mR,stop@mR
  2115   0072A6  C01C  F018         	movff	turn_right_90@mR+1,stop@mR+1
  2116   0072AA  EC5A  F03C         	call	_stop	;wreg free
  2117   0072AE  0012               	return		;funcret
  2118   0072B0                     __end_of_turn_right_90:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _turn_right_135 *****************
  2122 ;; Defined at:
  2123 ;;		line 177 in file "dc_motor.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2126 ;;		 -> main@motorL(9), 
  2127 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2128 ;;		 -> main@motorR(9), 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2142 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2143 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2144 ;;Total ram usage:        6 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 5
  2147 ;; This function calls:
  2148 ;;		_setMotorPWM
  2149 ;;		_stop
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text2
  2156   006FEE                     __ptext2:
  2157                           	callstack 0
  2158   006FEE                     _turn_right_135:
  2159                           	callstack 25
  2160   006FEE                     
  2161                           ;dc_motor.c: 178:     mL->direction = 0;
  2162   006FEE  EE20 F001          	lfsr	2,1
  2163   006FF2  5019               	movf	turn_right_135@mL^0,w,c
  2164   006FF4  26D9               	addwf	fsr2l,f,c
  2165   006FF6  501A               	movf	(turn_right_135@mL+1)^0,w,c
  2166   006FF8  22DA               	addwfc	fsr2h,f,c
  2167   006FFA  6ADF               	clrf	indf2,c
  2168                           
  2169                           ;dc_motor.c: 179:     mR->direction = 1;
  2170   006FFC  EE20 F001          	lfsr	2,1
  2171   007000  501B               	movf	turn_right_135@mR^0,w,c
  2172   007002  26D9               	addwf	fsr2l,f,c
  2173   007004  501C               	movf	(turn_right_135@mR+1)^0,w,c
  2174   007006  22DA               	addwfc	fsr2h,f,c
  2175   007008  0E01               	movlw	1
  2176   00700A  6EDF               	movwf	indf2,c
  2177                           
  2178                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2179   00700C  EF3E  F038         	goto	l242
  2180   007010                     l6499:
  2181                           
  2182                           ;dc_motor.c: 182:         if ((mL->power) < 70) (mL->power) += 1;
  2183   007010  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2184   007014  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2185   007018  0E46               	movlw	70
  2186   00701A  60DF               	cpfslt	indf2,c
  2187   00701C  EF12  F038         	goto	u6491
  2188   007020  EF14  F038         	goto	u6490
  2189   007024                     u6491:
  2190   007024  EF19  F038         	goto	l6503
  2191   007028                     u6490:
  2192   007028  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2193   00702C  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2194   007030  2ADF               	incf	indf2,f,c
  2195   007032                     l6503:
  2196                           
  2197                           ;dc_motor.c: 183:         if ((mR->power) < 70) (mR->power) += 1;
  2198   007032  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2199   007036  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2200   00703A  0E46               	movlw	70
  2201   00703C  60DF               	cpfslt	indf2,c
  2202   00703E  EF23  F038         	goto	u6501
  2203   007042  EF25  F038         	goto	u6500
  2204   007046                     u6501:
  2205   007046  EF2A  F038         	goto	l6507
  2206   00704A                     u6500:
  2207   00704A  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2208   00704E  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2209   007052  2ADF               	incf	indf2,f,c
  2210   007054                     l6507:
  2211                           
  2212                           ;dc_motor.c: 185:         setMotorPWM(mL);
  2213   007054  C019  F00F         	movff	turn_right_135@mL,setMotorPWM@m
  2214   007058  C01A  F010         	movff	turn_right_135@mL+1,setMotorPWM@m+1
  2215   00705C  ECB9  F034         	call	_setMotorPWM	;wreg free
  2216   007060                     
  2217                           ;dc_motor.c: 186:         setMotorPWM(mR);
  2218   007060  C01B  F00F         	movff	turn_right_135@mR,setMotorPWM@m
  2219   007064  C01C  F010         	movff	turn_right_135@mR+1,setMotorPWM@m+1
  2220   007068  ECB9  F034         	call	_setMotorPWM	;wreg free
  2221   00706C                     
  2222                           ;dc_motor.c: 187:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2223   00706C  0E15               	movlw	21
  2224   00706E  6E1D               	movwf	??_turn_right_135^0,c
  2225   007070  0EC6               	movlw	198
  2226   007072                     u9267:
  2227   007072  2EE8               	decfsz	wreg,f,c
  2228   007074  D7FE               	bra	u9267
  2229   007076  2E1D               	decfsz	??_turn_right_135^0,f,c
  2230   007078  D7FC               	bra	u9267
  2231   00707A  D000               	nop2	
  2232   00707C                     l242:
  2233                           
  2234                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2235   00707C  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2236   007080  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2237   007084  0E45               	movlw	69
  2238   007086  64DF               	cpfsgt	indf2,c
  2239   007088  EF48  F038         	goto	u6511
  2240   00708C  EF4A  F038         	goto	u6510
  2241   007090                     u6511:
  2242   007090  EF08  F038         	goto	l6499
  2243   007094                     u6510:
  2244   007094  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2245   007098  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2246   00709C  0E45               	movlw	69
  2247   00709E  64DF               	cpfsgt	indf2,c
  2248   0070A0  EF54  F038         	goto	u6521
  2249   0070A4  EF56  F038         	goto	u6520
  2250   0070A8                     u6521:
  2251   0070A8  EF08  F038         	goto	l6499
  2252   0070AC                     u6520:
  2253   0070AC                     
  2254                           ;dc_motor.c: 189:     _delay((unsigned long)((700)*(64000000/4000.0)));
  2255   0070AC  0E39               	movlw	57
  2256   0070AE  6E1E               	movwf	(??_turn_right_135+1)^0,c
  2257   0070B0  0ED2               	movlw	210
  2258   0070B2  6E1D               	movwf	??_turn_right_135^0,c
  2259   0070B4  0E4C               	movlw	76
  2260   0070B6                     u9277:
  2261   0070B6  2EE8               	decfsz	wreg,f,c
  2262   0070B8  D7FE               	bra	u9277
  2263   0070BA  2E1D               	decfsz	??_turn_right_135^0,f,c
  2264   0070BC  D7FC               	bra	u9277
  2265   0070BE  2E1E               	decfsz	(??_turn_right_135+1)^0,f,c
  2266   0070C0  D7FA               	bra	u9277
  2267   0070C2  D000               	nop2	
  2268   0070C4                     
  2269                           ;dc_motor.c: 190:     stop(mL, mR);
  2270   0070C4  C019  F015         	movff	turn_right_135@mL,stop@mL
  2271   0070C8  C01A  F016         	movff	turn_right_135@mL+1,stop@mL+1
  2272   0070CC  C01B  F017         	movff	turn_right_135@mR,stop@mR
  2273   0070D0  C01C  F018         	movff	turn_right_135@mR+1,stop@mR+1
  2274   0070D4  EC5A  F03C         	call	_stop	;wreg free
  2275   0070D8  0012               	return		;funcret
  2276   0070DA                     __end_of_turn_right_135:
  2277                           	callstack 0
  2278                           
  2279 ;; *************** function _turn_left_90 *****************
  2280 ;; Defined at:
  2281 ;;		line 126 in file "dc_motor.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2284 ;;		 -> main@motorL(9), 
  2285 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2286 ;;		 -> main@motorR(9), 
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      void 
  2291 ;; Registers used:
  2292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2301 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2302 ;;Total ram usage:        6 bytes
  2303 ;; Hardware stack levels used: 1
  2304 ;; Hardware stack levels required when called: 5
  2305 ;; This function calls:
  2306 ;;		_setMotorPWM
  2307 ;;		_stop
  2308 ;; This function is called by:
  2309 ;;		_main
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text3
  2314   0072B0                     __ptext3:
  2315                           	callstack 0
  2316   0072B0                     _turn_left_90:
  2317                           	callstack 25
  2318   0072B0                     
  2319                           ;dc_motor.c: 127:     mL->direction = 1;
  2320   0072B0  EE20 F001          	lfsr	2,1
  2321   0072B4  5019               	movf	turn_left_90@mL^0,w,c
  2322   0072B6  26D9               	addwf	fsr2l,f,c
  2323   0072B8  501A               	movf	(turn_left_90@mL+1)^0,w,c
  2324   0072BA  22DA               	addwfc	fsr2h,f,c
  2325   0072BC  0E01               	movlw	1
  2326   0072BE  6EDF               	movwf	indf2,c
  2327                           
  2328                           ;dc_motor.c: 128:     mR->direction = 0;
  2329   0072C0  EE20 F001          	lfsr	2,1
  2330   0072C4  501B               	movf	turn_left_90@mR^0,w,c
  2331   0072C6  26D9               	addwf	fsr2l,f,c
  2332   0072C8  501C               	movf	(turn_left_90@mR+1)^0,w,c
  2333   0072CA  22DA               	addwfc	fsr2h,f,c
  2334   0072CC  6ADF               	clrf	indf2,c
  2335                           
  2336                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  2337   0072CE  EF9F  F039         	goto	l218
  2338   0072D2                     l6433:
  2339                           
  2340                           ;dc_motor.c: 131:         if ((mL->power) < 70) (mL->power) += 1;
  2341   0072D2  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2342   0072D6  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2343   0072DA  0E46               	movlw	70
  2344   0072DC  60DF               	cpfslt	indf2,c
  2345   0072DE  EF73  F039         	goto	u6371
  2346   0072E2  EF75  F039         	goto	u6370
  2347   0072E6                     u6371:
  2348   0072E6  EF7A  F039         	goto	l6437
  2349   0072EA                     u6370:
  2350   0072EA  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2351   0072EE  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2352   0072F2  2ADF               	incf	indf2,f,c
  2353   0072F4                     l6437:
  2354                           
  2355                           ;dc_motor.c: 132:         if ((mR->power) < 70) (mR->power) += 1;
  2356   0072F4  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2357   0072F8  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2358   0072FC  0E46               	movlw	70
  2359   0072FE  60DF               	cpfslt	indf2,c
  2360   007300  EF84  F039         	goto	u6381
  2361   007304  EF86  F039         	goto	u6380
  2362   007308                     u6381:
  2363   007308  EF8B  F039         	goto	l6441
  2364   00730C                     u6380:
  2365   00730C  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2366   007310  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2367   007314  2ADF               	incf	indf2,f,c
  2368   007316                     l6441:
  2369                           
  2370                           ;dc_motor.c: 134:         setMotorPWM(mL);
  2371   007316  C019  F00F         	movff	turn_left_90@mL,setMotorPWM@m
  2372   00731A  C01A  F010         	movff	turn_left_90@mL+1,setMotorPWM@m+1
  2373   00731E  ECB9  F034         	call	_setMotorPWM	;wreg free
  2374   007322                     
  2375                           ;dc_motor.c: 135:         setMotorPWM(mR);
  2376   007322  C01B  F00F         	movff	turn_left_90@mR,setMotorPWM@m
  2377   007326  C01C  F010         	movff	turn_left_90@mR+1,setMotorPWM@m+1
  2378   00732A  ECB9  F034         	call	_setMotorPWM	;wreg free
  2379   00732E                     
  2380                           ;dc_motor.c: 136:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2381   00732E  0E15               	movlw	21
  2382   007330  6E1D               	movwf	??_turn_left_90^0,c
  2383   007332  0EC6               	movlw	198
  2384   007334                     u9287:
  2385   007334  2EE8               	decfsz	wreg,f,c
  2386   007336  D7FE               	bra	u9287
  2387   007338  2E1D               	decfsz	??_turn_left_90^0,f,c
  2388   00733A  D7FC               	bra	u9287
  2389   00733C  D000               	nop2	
  2390   00733E                     l218:
  2391                           
  2392                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  2393   00733E  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2394   007342  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2395   007346  0E45               	movlw	69
  2396   007348  64DF               	cpfsgt	indf2,c
  2397   00734A  EFA9  F039         	goto	u6391
  2398   00734E  EFAB  F039         	goto	u6390
  2399   007352                     u6391:
  2400   007352  EF69  F039         	goto	l6433
  2401   007356                     u6390:
  2402   007356  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2403   00735A  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2404   00735E  0E45               	movlw	69
  2405   007360  64DF               	cpfsgt	indf2,c
  2406   007362  EFB5  F039         	goto	u6401
  2407   007366  EFB7  F039         	goto	u6400
  2408   00736A                     u6401:
  2409   00736A  EF69  F039         	goto	l6433
  2410   00736E                     u6400:
  2411   00736E                     
  2412                           ;dc_motor.c: 138:     _delay((unsigned long)((440)*(64000000/4000.0)));
  2413   00736E  0E24               	movlw	36
  2414   007370  6E1E               	movwf	(??_turn_left_90+1)^0,c
  2415   007372  0EB7               	movlw	183
  2416   007374  6E1D               	movwf	??_turn_left_90^0,c
  2417   007376  0EC2               	movlw	194
  2418   007378                     u9297:
  2419   007378  2EE8               	decfsz	wreg,f,c
  2420   00737A  D7FE               	bra	u9297
  2421   00737C  2E1D               	decfsz	??_turn_left_90^0,f,c
  2422   00737E  D7FC               	bra	u9297
  2423   007380  2E1E               	decfsz	(??_turn_left_90+1)^0,f,c
  2424   007382  D7FA               	bra	u9297
  2425   007384                     
  2426                           ;dc_motor.c: 139:     stop(mL, mR);
  2427   007384  C019  F015         	movff	turn_left_90@mL,stop@mL
  2428   007388  C01A  F016         	movff	turn_left_90@mL+1,stop@mL+1
  2429   00738C  C01B  F017         	movff	turn_left_90@mR,stop@mR
  2430   007390  C01C  F018         	movff	turn_left_90@mR+1,stop@mR+1
  2431   007394  EC5A  F03C         	call	_stop	;wreg free
  2432   007398  0012               	return		;funcret
  2433   00739A                     __end_of_turn_left_90:
  2434                           	callstack 0
  2435                           
  2436 ;; *************** function _turn_left_135 *****************
  2437 ;; Defined at:
  2438 ;;		line 160 in file "dc_motor.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2441 ;;		 -> main@motorL(9), 
  2442 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2443 ;;		 -> main@motorR(9), 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2455 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2457 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2458 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2459 ;;Total ram usage:        6 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 5
  2462 ;; This function calls:
  2463 ;;		_setMotorPWM
  2464 ;;		_stop
  2465 ;; This function is called by:
  2466 ;;		_main
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text4
  2471   0070DA                     __ptext4:
  2472                           	callstack 0
  2473   0070DA                     _turn_left_135:
  2474                           	callstack 25
  2475   0070DA                     
  2476                           ;dc_motor.c: 161:     mL->direction = 1;
  2477   0070DA  EE20 F001          	lfsr	2,1
  2478   0070DE  5019               	movf	turn_left_135@mL^0,w,c
  2479   0070E0  26D9               	addwf	fsr2l,f,c
  2480   0070E2  501A               	movf	(turn_left_135@mL+1)^0,w,c
  2481   0070E4  22DA               	addwfc	fsr2h,f,c
  2482   0070E6  0E01               	movlw	1
  2483   0070E8  6EDF               	movwf	indf2,c
  2484                           
  2485                           ;dc_motor.c: 162:     mR->direction = 0;
  2486   0070EA  EE20 F001          	lfsr	2,1
  2487   0070EE  501B               	movf	turn_left_135@mR^0,w,c
  2488   0070F0  26D9               	addwf	fsr2l,f,c
  2489   0070F2  501C               	movf	(turn_left_135@mR+1)^0,w,c
  2490   0070F4  22DA               	addwfc	fsr2h,f,c
  2491   0070F6  6ADF               	clrf	indf2,c
  2492                           
  2493                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  2494   0070F8  EFB4  F038         	goto	l234
  2495   0070FC                     l6477:
  2496                           
  2497                           ;dc_motor.c: 165:         if ((mL->power) < 70) (mL->power) += 1;
  2498   0070FC  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  2499   007100  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  2500   007104  0E46               	movlw	70
  2501   007106  60DF               	cpfslt	indf2,c
  2502   007108  EF88  F038         	goto	u6451
  2503   00710C  EF8A  F038         	goto	u6450
  2504   007110                     u6451:
  2505   007110  EF8F  F038         	goto	l6481
  2506   007114                     u6450:
  2507   007114  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  2508   007118  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  2509   00711C  2ADF               	incf	indf2,f,c
  2510   00711E                     l6481:
  2511                           
  2512                           ;dc_motor.c: 166:         if ((mR->power) < 70) (mR->power) += 1;
  2513   00711E  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  2514   007122  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  2515   007126  0E46               	movlw	70
  2516   007128  60DF               	cpfslt	indf2,c
  2517   00712A  EF99  F038         	goto	u6461
  2518   00712E  EF9B  F038         	goto	u6460
  2519   007132                     u6461:
  2520   007132  EFA0  F038         	goto	l6485
  2521   007136                     u6460:
  2522   007136  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  2523   00713A  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  2524   00713E  2ADF               	incf	indf2,f,c
  2525   007140                     l6485:
  2526                           
  2527                           ;dc_motor.c: 168:         setMotorPWM(mL);
  2528   007140  C019  F00F         	movff	turn_left_135@mL,setMotorPWM@m
  2529   007144  C01A  F010         	movff	turn_left_135@mL+1,setMotorPWM@m+1
  2530   007148  ECB9  F034         	call	_setMotorPWM	;wreg free
  2531   00714C                     
  2532                           ;dc_motor.c: 169:         setMotorPWM(mR);
  2533   00714C  C01B  F00F         	movff	turn_left_135@mR,setMotorPWM@m
  2534   007150  C01C  F010         	movff	turn_left_135@mR+1,setMotorPWM@m+1
  2535   007154  ECB9  F034         	call	_setMotorPWM	;wreg free
  2536   007158                     
  2537                           ;dc_motor.c: 170:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2538   007158  0E15               	movlw	21
  2539   00715A  6E1D               	movwf	??_turn_left_135^0,c
  2540   00715C  0EC6               	movlw	198
  2541   00715E                     u9307:
  2542   00715E  2EE8               	decfsz	wreg,f,c
  2543   007160  D7FE               	bra	u9307
  2544   007162  2E1D               	decfsz	??_turn_left_135^0,f,c
  2545   007164  D7FC               	bra	u9307
  2546   007166  D000               	nop2	
  2547   007168                     l234:
  2548                           
  2549                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  2550   007168  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  2551   00716C  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  2552   007170  0E45               	movlw	69
  2553   007172  64DF               	cpfsgt	indf2,c
  2554   007174  EFBE  F038         	goto	u6471
  2555   007178  EFC0  F038         	goto	u6470
  2556   00717C                     u6471:
  2557   00717C  EF7E  F038         	goto	l6477
  2558   007180                     u6470:
  2559   007180  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  2560   007184  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  2561   007188  0E45               	movlw	69
  2562   00718A  64DF               	cpfsgt	indf2,c
  2563   00718C  EFCA  F038         	goto	u6481
  2564   007190  EFCC  F038         	goto	u6480
  2565   007194                     u6481:
  2566   007194  EF7E  F038         	goto	l6477
  2567   007198                     u6480:
  2568   007198                     
  2569                           ;dc_motor.c: 172:     _delay((unsigned long)((700)*(64000000/4000.0)));
  2570   007198  0E39               	movlw	57
  2571   00719A  6E1E               	movwf	(??_turn_left_135+1)^0,c
  2572   00719C  0ED2               	movlw	210
  2573   00719E  6E1D               	movwf	??_turn_left_135^0,c
  2574   0071A0  0E4C               	movlw	76
  2575   0071A2                     u9317:
  2576   0071A2  2EE8               	decfsz	wreg,f,c
  2577   0071A4  D7FE               	bra	u9317
  2578   0071A6  2E1D               	decfsz	??_turn_left_135^0,f,c
  2579   0071A8  D7FC               	bra	u9317
  2580   0071AA  2E1E               	decfsz	(??_turn_left_135+1)^0,f,c
  2581   0071AC  D7FA               	bra	u9317
  2582   0071AE  D000               	nop2	
  2583   0071B0                     
  2584                           ;dc_motor.c: 173:     stop(mL, mR);
  2585   0071B0  C019  F015         	movff	turn_left_135@mL,stop@mL
  2586   0071B4  C01A  F016         	movff	turn_left_135@mL+1,stop@mL+1
  2587   0071B8  C01B  F017         	movff	turn_left_135@mR,stop@mR
  2588   0071BC  C01C  F018         	movff	turn_left_135@mR+1,stop@mR+1
  2589   0071C0  EC5A  F03C         	call	_stop	;wreg free
  2590   0071C4  0012               	return		;funcret
  2591   0071C6                     __end_of_turn_left_135:
  2592                           	callstack 0
  2593                           
  2594 ;; *************** function _reverse_one_square *****************
  2595 ;; Defined at:
  2596 ;;		line 210 in file "dc_motor.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2599 ;;		 -> main@motorL(9), 
  2600 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2601 ;;		 -> main@motorR(9), 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;Total ram usage:        6 bytes
  2618 ;; Hardware stack levels used: 1
  2619 ;; Hardware stack levels required when called: 5
  2620 ;; This function calls:
  2621 ;;		_setMotorPWM
  2622 ;;		_stop
  2623 ;; This function is called by:
  2624 ;;		_main
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text5
  2629   006DEE                     __ptext5:
  2630                           	callstack 0
  2631   006DEE                     _reverse_one_square:
  2632                           	callstack 25
  2633   006DEE                     
  2634                           ;dc_motor.c: 211:     mL->direction = 0;
  2635   006DEE  EE20 F001          	lfsr	2,1
  2636   006DF2  5019               	movf	reverse_one_square@mL^0,w,c
  2637   006DF4  26D9               	addwf	fsr2l,f,c
  2638   006DF6  501A               	movf	(reverse_one_square@mL+1)^0,w,c
  2639   006DF8  22DA               	addwfc	fsr2h,f,c
  2640   006DFA  6ADF               	clrf	indf2,c
  2641                           
  2642                           ;dc_motor.c: 212:     mR->direction = 0;
  2643   006DFC  EE20 F001          	lfsr	2,1
  2644   006E00  501B               	movf	reverse_one_square@mR^0,w,c
  2645   006E02  26D9               	addwf	fsr2l,f,c
  2646   006E04  501C               	movf	(reverse_one_square@mR+1)^0,w,c
  2647   006E06  22DA               	addwfc	fsr2h,f,c
  2648   006E08  6ADF               	clrf	indf2,c
  2649                           
  2650                           ;dc_motor.c: 214:     while ((mL->power) < 70 || (mR->power) < 70){
  2651   006E0A  EF3D  F037         	goto	l258
  2652   006E0E                     l6545:
  2653                           
  2654                           ;dc_motor.c: 215:         if ((mL->power) < 70) (mL->power) += 1;
  2655   006E0E  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  2656   006E12  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  2657   006E16  0E46               	movlw	70
  2658   006E18  60DF               	cpfslt	indf2,c
  2659   006E1A  EF11  F037         	goto	u6571
  2660   006E1E  EF13  F037         	goto	u6570
  2661   006E22                     u6571:
  2662   006E22  EF18  F037         	goto	l6549
  2663   006E26                     u6570:
  2664   006E26  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  2665   006E2A  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  2666   006E2E  2ADF               	incf	indf2,f,c
  2667   006E30                     l6549:
  2668                           
  2669                           ;dc_motor.c: 216:         if ((mR->power) < 70) (mR->power) += 1;
  2670   006E30  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  2671   006E34  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  2672   006E38  0E46               	movlw	70
  2673   006E3A  60DF               	cpfslt	indf2,c
  2674   006E3C  EF22  F037         	goto	u6581
  2675   006E40  EF24  F037         	goto	u6580
  2676   006E44                     u6581:
  2677   006E44  EF29  F037         	goto	l6553
  2678   006E48                     u6580:
  2679   006E48  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  2680   006E4C  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  2681   006E50  2ADF               	incf	indf2,f,c
  2682   006E52                     l6553:
  2683                           
  2684                           ;dc_motor.c: 218:         setMotorPWM(mL);
  2685   006E52  C019  F00F         	movff	reverse_one_square@mL,setMotorPWM@m
  2686   006E56  C01A  F010         	movff	reverse_one_square@mL+1,setMotorPWM@m+1
  2687   006E5A  ECB9  F034         	call	_setMotorPWM	;wreg free
  2688   006E5E                     
  2689                           ;dc_motor.c: 219:         setMotorPWM(mR);
  2690   006E5E  C01B  F00F         	movff	reverse_one_square@mR,setMotorPWM@m
  2691   006E62  C01C  F010         	movff	reverse_one_square@mR+1,setMotorPWM@m+1
  2692   006E66  ECB9  F034         	call	_setMotorPWM	;wreg free
  2693   006E6A                     
  2694                           ;dc_motor.c: 220:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2695   006E6A  0E15               	movlw	21
  2696   006E6C  6E1D               	movwf	??_reverse_one_square^0,c
  2697   006E6E  0EC6               	movlw	198
  2698   006E70                     u9327:
  2699   006E70  2EE8               	decfsz	wreg,f,c
  2700   006E72  D7FE               	bra	u9327
  2701   006E74  2E1D               	decfsz	??_reverse_one_square^0,f,c
  2702   006E76  D7FC               	bra	u9327
  2703   006E78  D000               	nop2	
  2704   006E7A                     l258:
  2705                           
  2706                           ;dc_motor.c: 214:     while ((mL->power) < 70 || (mR->power) < 70){
  2707   006E7A  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  2708   006E7E  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  2709   006E82  0E45               	movlw	69
  2710   006E84  64DF               	cpfsgt	indf2,c
  2711   006E86  EF47  F037         	goto	u6591
  2712   006E8A  EF49  F037         	goto	u6590
  2713   006E8E                     u6591:
  2714   006E8E  EF07  F037         	goto	l6545
  2715   006E92                     u6590:
  2716   006E92  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  2717   006E96  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  2718   006E9A  0E45               	movlw	69
  2719   006E9C  64DF               	cpfsgt	indf2,c
  2720   006E9E  EF53  F037         	goto	u6601
  2721   006EA2  EF55  F037         	goto	u6600
  2722   006EA6                     u6601:
  2723   006EA6  EF07  F037         	goto	l6545
  2724   006EAA                     u6600:
  2725   006EAA                     
  2726                           ;dc_motor.c: 222:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2727   006EAA  0E29               	movlw	41
  2728   006EAC  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  2729   006EAE  0E96               	movlw	150
  2730   006EB0  6E1D               	movwf	??_reverse_one_square^0,c
  2731   006EB2  0E7F               	movlw	127
  2732   006EB4                     u9337:
  2733   006EB4  2EE8               	decfsz	wreg,f,c
  2734   006EB6  D7FE               	bra	u9337
  2735   006EB8  2E1D               	decfsz	??_reverse_one_square^0,f,c
  2736   006EBA  D7FC               	bra	u9337
  2737   006EBC  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  2738   006EBE  D7FA               	bra	u9337
  2739   006EC0  0000               	nop	
  2740   006EC2                     
  2741                           ;dc_motor.c: 223:     stop(mL, mR);
  2742   006EC2  C019  F015         	movff	reverse_one_square@mL,stop@mL
  2743   006EC6  C01A  F016         	movff	reverse_one_square@mL+1,stop@mL+1
  2744   006ECA  C01B  F017         	movff	reverse_one_square@mR,stop@mR
  2745   006ECE  C01C  F018         	movff	reverse_one_square@mR+1,stop@mR+1
  2746   006ED2  EC5A  F03C         	call	_stop	;wreg free
  2747   006ED6                     
  2748                           ;dc_motor.c: 224:     _delay((unsigned long)((250)*(64000000/4000.0)));
  2749   006ED6  0E15               	movlw	21
  2750   006ED8  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  2751   006EDA  0E4B               	movlw	75
  2752   006EDC  6E1D               	movwf	??_reverse_one_square^0,c
  2753   006EDE  0EBE               	movlw	190
  2754   006EE0                     u9347:
  2755   006EE0  2EE8               	decfsz	wreg,f,c
  2756   006EE2  D7FE               	bra	u9347
  2757   006EE4  2E1D               	decfsz	??_reverse_one_square^0,f,c
  2758   006EE6  D7FC               	bra	u9347
  2759   006EE8  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  2760   006EEA  D7FA               	bra	u9347
  2761   006EEC  D000               	nop2	
  2762   006EEE  0012               	return		;funcret
  2763   006EF0                     __end_of_reverse_one_square:
  2764                           	callstack 0
  2765                           
  2766 ;; *************** function _reverse_after_read *****************
  2767 ;; Defined at:
  2768 ;;		line 193 in file "dc_motor.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2771 ;;		 -> main@motorL(9), 
  2772 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2773 ;;		 -> main@motorR(9), 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2785 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2787 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;Total ram usage:        6 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 5
  2792 ;; This function calls:
  2793 ;;		_setMotorPWM
  2794 ;;		_stop
  2795 ;; This function is called by:
  2796 ;;		_main
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text6
  2801   006ADE                     __ptext6:
  2802                           	callstack 0
  2803   006ADE                     _reverse_after_read:
  2804                           	callstack 25
  2805   006ADE                     
  2806                           ;dc_motor.c: 194:     mL->direction = 1;
  2807   006ADE  EE20 F001          	lfsr	2,1
  2808   006AE2  5019               	movf	reverse_after_read@mL^0,w,c
  2809   006AE4  26D9               	addwf	fsr2l,f,c
  2810   006AE6  501A               	movf	(reverse_after_read@mL+1)^0,w,c
  2811   006AE8  22DA               	addwfc	fsr2h,f,c
  2812   006AEA  0E01               	movlw	1
  2813   006AEC  6EDF               	movwf	indf2,c
  2814                           
  2815                           ;dc_motor.c: 195:     mR->direction = 1;
  2816   006AEE  EE20 F001          	lfsr	2,1
  2817   006AF2  501B               	movf	reverse_after_read@mR^0,w,c
  2818   006AF4  26D9               	addwf	fsr2l,f,c
  2819   006AF6  501C               	movf	(reverse_after_read@mR+1)^0,w,c
  2820   006AF8  22DA               	addwfc	fsr2h,f,c
  2821   006AFA  0E01               	movlw	1
  2822   006AFC  6EDF               	movwf	indf2,c
  2823                           
  2824                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  2825   006AFE  EFB7  F035         	goto	l250
  2826   006B02                     l6521:
  2827                           
  2828                           ;dc_motor.c: 198:         if ((mL->power) < 70) (mL->power) += 1;
  2829   006B02  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  2830   006B06  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  2831   006B0A  0E46               	movlw	70
  2832   006B0C  60DF               	cpfslt	indf2,c
  2833   006B0E  EF8B  F035         	goto	u6531
  2834   006B12  EF8D  F035         	goto	u6530
  2835   006B16                     u6531:
  2836   006B16  EF92  F035         	goto	l6525
  2837   006B1A                     u6530:
  2838   006B1A  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  2839   006B1E  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  2840   006B22  2ADF               	incf	indf2,f,c
  2841   006B24                     l6525:
  2842                           
  2843                           ;dc_motor.c: 199:         if ((mR->power) < 70) (mR->power) += 1;
  2844   006B24  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  2845   006B28  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  2846   006B2C  0E46               	movlw	70
  2847   006B2E  60DF               	cpfslt	indf2,c
  2848   006B30  EF9C  F035         	goto	u6541
  2849   006B34  EF9E  F035         	goto	u6540
  2850   006B38                     u6541:
  2851   006B38  EFA3  F035         	goto	l6529
  2852   006B3C                     u6540:
  2853   006B3C  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  2854   006B40  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  2855   006B44  2ADF               	incf	indf2,f,c
  2856   006B46                     l6529:
  2857                           
  2858                           ;dc_motor.c: 201:         setMotorPWM(mL);
  2859   006B46  C019  F00F         	movff	reverse_after_read@mL,setMotorPWM@m
  2860   006B4A  C01A  F010         	movff	reverse_after_read@mL+1,setMotorPWM@m+1
  2861   006B4E  ECB9  F034         	call	_setMotorPWM	;wreg free
  2862   006B52                     
  2863                           ;dc_motor.c: 202:         setMotorPWM(mR);
  2864   006B52  C01B  F00F         	movff	reverse_after_read@mR,setMotorPWM@m
  2865   006B56  C01C  F010         	movff	reverse_after_read@mR+1,setMotorPWM@m+1
  2866   006B5A  ECB9  F034         	call	_setMotorPWM	;wreg free
  2867   006B5E                     
  2868                           ;dc_motor.c: 203:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2869   006B5E  0E15               	movlw	21
  2870   006B60  6E1D               	movwf	??_reverse_after_read^0,c
  2871   006B62  0EC6               	movlw	198
  2872   006B64                     u9357:
  2873   006B64  2EE8               	decfsz	wreg,f,c
  2874   006B66  D7FE               	bra	u9357
  2875   006B68  2E1D               	decfsz	??_reverse_after_read^0,f,c
  2876   006B6A  D7FC               	bra	u9357
  2877   006B6C  D000               	nop2	
  2878   006B6E                     l250:
  2879                           
  2880                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  2881   006B6E  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  2882   006B72  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  2883   006B76  0E45               	movlw	69
  2884   006B78  64DF               	cpfsgt	indf2,c
  2885   006B7A  EFC1  F035         	goto	u6551
  2886   006B7E  EFC3  F035         	goto	u6550
  2887   006B82                     u6551:
  2888   006B82  EF81  F035         	goto	l6521
  2889   006B86                     u6550:
  2890   006B86  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  2891   006B8A  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  2892   006B8E  0E45               	movlw	69
  2893   006B90  64DF               	cpfsgt	indf2,c
  2894   006B92  EFCD  F035         	goto	u6561
  2895   006B96  EFCF  F035         	goto	u6560
  2896   006B9A                     u6561:
  2897   006B9A  EF81  F035         	goto	l6521
  2898   006B9E                     u6560:
  2899   006B9E                     
  2900                           ;dc_motor.c: 205:     _delay((unsigned long)((225)*(64000000/4000.0)));
  2901   006B9E  0E13               	movlw	19
  2902   006BA0  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  2903   006BA2  0E44               	movlw	68
  2904   006BA4  6E1D               	movwf	??_reverse_after_read^0,c
  2905   006BA6  0E44               	movlw	68
  2906   006BA8                     u9367:
  2907   006BA8  2EE8               	decfsz	wreg,f,c
  2908   006BAA  D7FE               	bra	u9367
  2909   006BAC  2E1D               	decfsz	??_reverse_after_read^0,f,c
  2910   006BAE  D7FC               	bra	u9367
  2911   006BB0  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  2912   006BB2  D7FA               	bra	u9367
  2913   006BB4  D000               	nop2	
  2914   006BB6                     
  2915                           ;dc_motor.c: 206:     stop(mL, mR);
  2916   006BB6  C019  F015         	movff	reverse_after_read@mL,stop@mL
  2917   006BBA  C01A  F016         	movff	reverse_after_read@mL+1,stop@mL+1
  2918   006BBE  C01B  F017         	movff	reverse_after_read@mR,stop@mR
  2919   006BC2  C01C  F018         	movff	reverse_after_read@mR+1,stop@mR+1
  2920   006BC6  EC5A  F03C         	call	_stop	;wreg free
  2921   006BCA                     
  2922                           ;dc_motor.c: 207:     _delay((unsigned long)((250)*(64000000/4000.0)));
  2923   006BCA  0E15               	movlw	21
  2924   006BCC  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  2925   006BCE  0E4B               	movlw	75
  2926   006BD0  6E1D               	movwf	??_reverse_after_read^0,c
  2927   006BD2  0EBE               	movlw	190
  2928   006BD4                     u9377:
  2929   006BD4  2EE8               	decfsz	wreg,f,c
  2930   006BD6  D7FE               	bra	u9377
  2931   006BD8  2E1D               	decfsz	??_reverse_after_read^0,f,c
  2932   006BDA  D7FC               	bra	u9377
  2933   006BDC  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  2934   006BDE  D7FA               	bra	u9377
  2935   006BE0  D000               	nop2	
  2936   006BE2  0012               	return		;funcret
  2937   006BE4                     __end_of_reverse_after_read:
  2938                           	callstack 0
  2939                           
  2940 ;; *************** function _stop *****************
  2941 ;; Defined at:
  2942 ;;		line 114 in file "dc_motor.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  2945 ;;		 -> main@motorL(9), 
  2946 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  2947 ;;		 -> main@motorR(9), 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;		None
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      void 
  2952 ;; Registers used:
  2953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2959 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2962 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2963 ;;Total ram usage:        4 bytes
  2964 ;; Hardware stack levels used: 1
  2965 ;; Hardware stack levels required when called: 4
  2966 ;; This function calls:
  2967 ;;		_setMotorPWM
  2968 ;; This function is called by:
  2969 ;;		_turn_left_90
  2970 ;;		_turn_right_90
  2971 ;;		_turn_left_135
  2972 ;;		_turn_right_135
  2973 ;;		_reverse_after_read
  2974 ;;		_reverse_one_square
  2975 ;;		_main
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text7
  2980   0078B4                     __ptext7:
  2981                           	callstack 0
  2982   0078B4                     _stop:
  2983                           	callstack 25
  2984   0078B4                     
  2985                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  2986   0078B4  EF8E  F03C         	goto	l6113
  2987   0078B8                     l6099:
  2988                           
  2989                           ;dc_motor.c: 116:         if ((mL->power) > 0) (mL->power) -= 1;
  2990   0078B8  C015  FFD9         	movff	stop@mL,fsr2l
  2991   0078BC  C016  FFDA         	movff	stop@mL+1,fsr2h
  2992   0078C0  50DF               	movf	indf2,w,c
  2993   0078C2  B4D8               	btfsc	status,2,c
  2994   0078C4  EF66  F03C         	goto	u6181
  2995   0078C8  EF68  F03C         	goto	u6180
  2996   0078CC                     u6181:
  2997   0078CC  EF6D  F03C         	goto	l6103
  2998   0078D0                     u6180:
  2999   0078D0  C015  FFD9         	movff	stop@mL,fsr2l
  3000   0078D4  C016  FFDA         	movff	stop@mL+1,fsr2h
  3001   0078D8  06DF               	decf	indf2,f,c
  3002   0078DA                     l6103:
  3003                           
  3004                           ;dc_motor.c: 117:         if ((mR->power) > 0) (mR->power) -= 1;
  3005   0078DA  C017  FFD9         	movff	stop@mR,fsr2l
  3006   0078DE  C018  FFDA         	movff	stop@mR+1,fsr2h
  3007   0078E2  50DF               	movf	indf2,w,c
  3008   0078E4  B4D8               	btfsc	status,2,c
  3009   0078E6  EF77  F03C         	goto	u6191
  3010   0078EA  EF79  F03C         	goto	u6190
  3011   0078EE                     u6191:
  3012   0078EE  EF7E  F03C         	goto	l6107
  3013   0078F2                     u6190:
  3014   0078F2  C017  FFD9         	movff	stop@mR,fsr2l
  3015   0078F6  C018  FFDA         	movff	stop@mR+1,fsr2h
  3016   0078FA  06DF               	decf	indf2,f,c
  3017   0078FC                     l6107:
  3018                           
  3019                           ;dc_motor.c: 119:         setMotorPWM(mL);
  3020   0078FC  C015  F00F         	movff	stop@mL,setMotorPWM@m
  3021   007900  C016  F010         	movff	stop@mL+1,setMotorPWM@m+1
  3022   007904  ECB9  F034         	call	_setMotorPWM	;wreg free
  3023   007908                     
  3024                           ;dc_motor.c: 120:         setMotorPWM(mR);
  3025   007908  C017  F00F         	movff	stop@mR,setMotorPWM@m
  3026   00790C  C018  F010         	movff	stop@mR+1,setMotorPWM@m+1
  3027   007910  ECB9  F034         	call	_setMotorPWM	;wreg free
  3028   007914                     
  3029                           ;dc_motor.c: 121:         _delay((unsigned long)((25)*(64000000/4000000.0)));
  3030   007914  0E85               	movlw	133
  3031   007916                     u9387:
  3032   007916  2EE8               	decfsz	wreg,f,c
  3033   007918  D7FE               	bra	u9387
  3034   00791A  0000               	nop	
  3035   00791C                     l6113:
  3036                           
  3037                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  3038   00791C  C015  FFD9         	movff	stop@mL,fsr2l
  3039   007920  C016  FFDA         	movff	stop@mL+1,fsr2h
  3040   007924  50DF               	movf	indf2,w,c
  3041   007926  A4D8               	btfss	status,2,c
  3042   007928  EF98  F03C         	goto	u6201
  3043   00792C  EF9A  F03C         	goto	u6200
  3044   007930                     u6201:
  3045   007930  EF5C  F03C         	goto	l6099
  3046   007934                     u6200:
  3047   007934  C017  FFD9         	movff	stop@mR,fsr2l
  3048   007938  C018  FFDA         	movff	stop@mR+1,fsr2h
  3049   00793C  50DF               	movf	indf2,w,c
  3050   00793E  A4D8               	btfss	status,2,c
  3051   007940  EFA4  F03C         	goto	u6211
  3052   007944  EFA6  F03C         	goto	u6210
  3053   007948                     u6211:
  3054   007948  EF5C  F03C         	goto	l6099
  3055   00794C                     u6210:
  3056   00794C  0012               	return		;funcret
  3057   00794E                     __end_of_stop:
  3058                           	callstack 0
  3059                           
  3060 ;; *************** function _resetTimer0 *****************
  3061 ;; Defined at:
  3062 ;;		line 34 in file "timers.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;Total ram usage:        0 bytes
  3081 ;; Hardware stack levels used: 1
  3082 ;; Hardware stack levels required when called: 2
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_main
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text8
  3091   0080C8                     __ptext8:
  3092                           	callstack 0
  3093   0080C8                     _resetTimer0:
  3094                           	callstack 28
  3095   0080C8                     
  3096                           ;timers.c: 35:     TMR0H = 0;
  3097   0080C8  0E00               	movlw	0
  3098   0080CA  6ED4               	movwf	212,c	;volatile
  3099                           
  3100                           ;timers.c: 36:     TMR0L = 0;
  3101   0080CC  0E00               	movlw	0
  3102   0080CE  6ED3               	movwf	211,c	;volatile
  3103   0080D0  0012               	return		;funcret
  3104   0080D2                     __end_of_resetTimer0:
  3105                           	callstack 0
  3106                           
  3107 ;; *************** function _invert_action *****************
  3108 ;; Defined at:
  3109 ;;		line 187 in file "color.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  input_action    1    wreg     unsigned char 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  input_action    1    3[COMRAM] unsigned char 
  3114 ;;  output_actio    1    0        unsigned char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      unsigned char 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3127 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3128 ;;Total ram usage:        3 bytes
  3129 ;; Hardware stack levels used: 1
  3130 ;; Hardware stack levels required when called: 2
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_main
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text9
  3139   00794E                     __ptext9:
  3140                           	callstack 0
  3141   00794E                     _invert_action:
  3142                           	callstack 28
  3143                           
  3144                           ;incstack = 0
  3145                           ;invert_action@input_action stored from wreg
  3146   00794E  6E04               	movwf	invert_action@input_action^0,c
  3147   007950                     
  3148                           ;color.c: 188:     char output_action;;color.c: 189:     switch(input_action){
  3149   007950  EFB8  F03C         	goto	l6371
  3150   007954                     l6353:
  3151                           
  3152                           ;color.c: 192:             break;
  3153   007954  EFE1  F03C         	goto	l93
  3154   007958                     l6355:
  3155                           
  3156                           ;color.c: 195:             break;
  3157   007958  EFE1  F03C         	goto	l93
  3158   00795C                     l6357:
  3159                           
  3160                           ;color.c: 198:             break;
  3161   00795C  EFE1  F03C         	goto	l93
  3162   007960                     l6359:
  3163                           
  3164                           ;color.c: 201:             break;
  3165   007960  EFE1  F03C         	goto	l93
  3166   007964                     l6361:
  3167                           
  3168                           ;color.c: 204:             break;
  3169   007964  EFE1  F03C         	goto	l93
  3170   007968                     l6363:
  3171                           
  3172                           ;color.c: 207:             break;
  3173   007968  EFE1  F03C         	goto	l93
  3174   00796C                     l6365:
  3175                           
  3176                           ;color.c: 210:             break;
  3177   00796C  EFE1  F03C         	goto	l93
  3178   007970                     l6371:
  3179   007970  5004               	movf	invert_action@input_action^0,w,c
  3180   007972  6E02               	movwf	??_invert_action^0,c
  3181   007974  6A03               	clrf	(??_invert_action+1)^0,c
  3182                           
  3183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3184                           ; Switch size 1, requested type "simple"
  3185                           ; Number of cases is 1, Range of values is 0 to 0
  3186                           ; switch strategies available:
  3187                           ; Name         Instructions Cycles
  3188                           ; simple_byte            4     3 (average)
  3189                           ;	Chosen strategy is simple_byte
  3190   007976  5003               	movf	(??_invert_action+1)^0,w,c
  3191   007978  0A00               	xorlw	0	; case 0
  3192   00797A  B4D8               	btfsc	status,2,c
  3193   00797C  EFC2  F03C         	goto	l9111
  3194   007980  EFE1  F03C         	goto	l93
  3195   007984                     l9111:
  3196                           
  3197                           ; Switch size 1, requested type "simple"
  3198                           ; Number of cases is 7, Range of values is 0 to 6
  3199                           ; switch strategies available:
  3200                           ; Name         Instructions Cycles
  3201                           ; simple_byte           22    12 (average)
  3202                           ;	Chosen strategy is simple_byte
  3203   007984  5002               	movf	??_invert_action^0,w,c
  3204   007986  0A00               	xorlw	0	; case 0
  3205   007988  B4D8               	btfsc	status,2,c
  3206   00798A  EFAA  F03C         	goto	l6353
  3207   00798E  0A01               	xorlw	1	; case 1
  3208   007990  B4D8               	btfsc	status,2,c
  3209   007992  EFAC  F03C         	goto	l6355
  3210   007996  0A03               	xorlw	3	; case 2
  3211   007998  B4D8               	btfsc	status,2,c
  3212   00799A  EFAE  F03C         	goto	l6357
  3213   00799E  0A01               	xorlw	1	; case 3
  3214   0079A0  B4D8               	btfsc	status,2,c
  3215   0079A2  EFB0  F03C         	goto	l6359
  3216   0079A6  0A07               	xorlw	7	; case 4
  3217   0079A8  B4D8               	btfsc	status,2,c
  3218   0079AA  EFB2  F03C         	goto	l6361
  3219   0079AE  0A01               	xorlw	1	; case 5
  3220   0079B0  B4D8               	btfsc	status,2,c
  3221   0079B2  EFB4  F03C         	goto	l6363
  3222   0079B6  0A03               	xorlw	3	; case 6
  3223   0079B8  B4D8               	btfsc	status,2,c
  3224   0079BA  EFB6  F03C         	goto	l6365
  3225   0079BE  EFE1  F03C         	goto	l93
  3226   0079C2                     l93:
  3227   0079C2  0012               	return		;funcret
  3228   0079C4                     __end_of_invert_action:
  3229                           	callstack 0
  3230                           
  3231 ;; *************** function _initUSART4 *****************
  3232 ;; Defined at:
  3233 ;;		line 4 in file "serial.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;		None
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;		None
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg, status,2
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3251 ;;Total ram usage:        0 bytes
  3252 ;; Hardware stack levels used: 1
  3253 ;; Hardware stack levels required when called: 2
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_main
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text10
  3262   008044                     __ptext10:
  3263                           	callstack 0
  3264   008044                     _initUSART4:
  3265                           	callstack 28
  3266   008044                     
  3267                           ;serial.c: 8:     RC0PPS = 0x12;
  3268   008044  0E12               	movlw	18
  3269   008046  010E               	movlb	14	; () banked
  3270   008048  6F62               	movwf	98,b	;volatile
  3271                           
  3272                           ;serial.c: 9:     RX4PPS = 0x11;
  3273   00804A  0E11               	movlw	17
  3274   00804C  6F15               	movwf	21,b	;volatile
  3275   00804E                     
  3276                           ; BSR set to: 14
  3277                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  3278   00804E  97E9               	bcf	233,3,b	;volatile
  3279   008050                     
  3280                           ; BSR set to: 14
  3281                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  3282   008050  95E8               	bcf	232,2,b	;volatile
  3283                           
  3284                           ;serial.c: 15:     SP4BRGL = 51;
  3285   008052  0E33               	movlw	51
  3286   008054  6FE5               	movwf	229,b	;volatile
  3287                           
  3288                           ;serial.c: 16:     SP4BRGH = 0;
  3289   008056  0E00               	movlw	0
  3290   008058  6FE6               	movwf	230,b	;volatile
  3291   00805A                     
  3292                           ; BSR set to: 14
  3293                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  3294   00805A  89E7               	bsf	231,4,b	;volatile
  3295   00805C                     
  3296                           ; BSR set to: 14
  3297                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  3298   00805C  8BE8               	bsf	232,5,b	;volatile
  3299   00805E                     
  3300                           ; BSR set to: 14
  3301                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  3302   00805E  8FE7               	bsf	231,7,b	;volatile
  3303   008060                     
  3304                           ; BSR set to: 14
  3305   008060  0012               	return		;funcret
  3306   008062                     __end_of_initUSART4:
  3307                           	callstack 0
  3308                           
  3309 ;; *************** function _initDCmotorsPWM *****************
  3310 ;; Defined at:
  3311 ;;		line 6 in file "dc_motor.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  PWMperiod       2    1[COMRAM] int 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3328 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3329 ;;Total ram usage:        2 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; Hardware stack levels required when called: 2
  3332 ;; This function calls:
  3333 ;;		Nothing
  3334 ;; This function is called by:
  3335 ;;		_main
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           	psect	text11
  3340   007812                     __ptext11:
  3341                           	callstack 0
  3342   007812                     _initDCmotorsPWM:
  3343                           	callstack 28
  3344   007812                     
  3345                           ;dc_motor.c: 10:     RE2PPS=0x05;
  3346   007812  0E05               	movlw	5
  3347   007814  010E               	movlb	14	; () banked
  3348   007816  6F74               	movwf	116,b	;volatile
  3349                           
  3350                           ;dc_motor.c: 11:     RE4PPS=0x06;
  3351   007818  0E06               	movlw	6
  3352   00781A  6F76               	movwf	118,b	;volatile
  3353                           
  3354                           ;dc_motor.c: 12:     RC7PPS=0x07;
  3355   00781C  0E07               	movlw	7
  3356   00781E  6F69               	movwf	105,b	;volatile
  3357                           
  3358                           ;dc_motor.c: 13:     RG6PPS=0x08;
  3359   007820  0E08               	movlw	8
  3360   007822  6F88               	movwf	136,b	;volatile
  3361                           
  3362                           ;dc_motor.c: 16:     T2CONbits.CKPS=0b100;
  3363   007824  50BD               	movf	189,w,c	;volatile
  3364   007826  0B8F               	andlw	-113
  3365   007828  0940               	iorlw	64
  3366   00782A  6EBD               	movwf	189,c	;volatile
  3367                           
  3368                           ;dc_motor.c: 17:     T2HLTbits.MODE=0b00000;
  3369   00782C  0EE0               	movlw	-32
  3370   00782E  16BE               	andwf	190,f,c	;volatile
  3371                           
  3372                           ;dc_motor.c: 18:     T2CLKCONbits.CS=0b0001;
  3373   007830  50BF               	movf	191,w,c	;volatile
  3374   007832  0BF0               	andlw	-16
  3375   007834  0901               	iorlw	1
  3376   007836  6EBF               	movwf	191,c	;volatile
  3377                           
  3378                           ;dc_motor.c: 22:     T2PR=99;
  3379   007838  0E63               	movlw	99
  3380   00783A  6EBC               	movwf	188,c	;volatile
  3381   00783C                     
  3382                           ; BSR set to: 14
  3383                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  3384   00783C  8EBD               	bsf	189,7,c	;volatile
  3385                           
  3386                           ;dc_motor.c: 27:     CCPR1H=0;
  3387   00783E  0E00               	movlw	0
  3388   007840  6EAA               	movwf	170,c	;volatile
  3389                           
  3390                           ;dc_motor.c: 28:     CCPR2H=0;
  3391   007842  0E00               	movlw	0
  3392   007844  6EA6               	movwf	166,c	;volatile
  3393                           
  3394                           ;dc_motor.c: 29:     CCPR3H=0;
  3395   007846  0E00               	movlw	0
  3396   007848  010F               	movlb	15	; () banked
  3397   00784A  6F25               	movwf	37,b	;volatile
  3398                           
  3399                           ;dc_motor.c: 30:     CCPR4H=0;
  3400   00784C  0E00               	movlw	0
  3401   00784E  6F21               	movwf	33,b	;volatile
  3402                           
  3403                           ;dc_motor.c: 33:     CCPTMRS0bits.C1TSEL=0;
  3404   007850  0EFC               	movlw	-4
  3405   007852  16AD               	andwf	173,f,c	;volatile
  3406                           
  3407                           ;dc_motor.c: 34:     CCPTMRS0bits.C2TSEL=0;
  3408   007854  0EF3               	movlw	-13
  3409   007856  16AD               	andwf	173,f,c	;volatile
  3410                           
  3411                           ;dc_motor.c: 35:     CCPTMRS0bits.C3TSEL=0;
  3412   007858  0ECF               	movlw	-49
  3413   00785A  16AD               	andwf	173,f,c	;volatile
  3414                           
  3415                           ;dc_motor.c: 36:     CCPTMRS0bits.C4TSEL=0;
  3416   00785C  0E3F               	movlw	-193
  3417   00785E  16AD               	andwf	173,f,c	;volatile
  3418   007860                     
  3419                           ; BSR set to: 15
  3420                           ;dc_motor.c: 39:     CCP1CONbits.FMT=1;
  3421   007860  88AB               	bsf	171,4,c	;volatile
  3422                           
  3423                           ;dc_motor.c: 40:     CCP1CONbits.CCP1MODE=0b1100;
  3424   007862  50AB               	movf	171,w,c	;volatile
  3425   007864  0BF0               	andlw	-16
  3426   007866  090C               	iorlw	12
  3427   007868  6EAB               	movwf	171,c	;volatile
  3428   00786A                     
  3429                           ; BSR set to: 15
  3430                           ;dc_motor.c: 41:     CCP1CONbits.EN=1;
  3431   00786A  8EAB               	bsf	171,7,c	;volatile
  3432   00786C                     
  3433                           ; BSR set to: 15
  3434                           ;dc_motor.c: 43:     CCP2CONbits.FMT=1;
  3435   00786C  88A7               	bsf	167,4,c	;volatile
  3436                           
  3437                           ;dc_motor.c: 44:     CCP2CONbits.CCP2MODE=0b1100;
  3438   00786E  50A7               	movf	167,w,c	;volatile
  3439   007870  0BF0               	andlw	-16
  3440   007872  090C               	iorlw	12
  3441   007874  6EA7               	movwf	167,c	;volatile
  3442   007876                     
  3443                           ; BSR set to: 15
  3444                           ;dc_motor.c: 45:     CCP2CONbits.EN=1;
  3445   007876  8EA7               	bsf	167,7,c	;volatile
  3446   007878                     
  3447                           ; BSR set to: 15
  3448                           ;dc_motor.c: 47:     CCP3CONbits.FMT=1;
  3449   007878  8926               	bsf	38,4,b	;volatile
  3450                           
  3451                           ;dc_motor.c: 48:     CCP3CONbits.CCP3MODE=0b1100;
  3452   00787A  5126               	movf	38,w,b	;volatile
  3453   00787C  0BF0               	andlw	-16
  3454   00787E  090C               	iorlw	12
  3455   007880  6F26               	movwf	38,b	;volatile
  3456   007882                     
  3457                           ; BSR set to: 15
  3458                           ;dc_motor.c: 49:     CCP3CONbits.EN=1;
  3459   007882  8F26               	bsf	38,7,b	;volatile
  3460   007884                     
  3461                           ; BSR set to: 15
  3462                           ;dc_motor.c: 51:     CCP4CONbits.FMT=1;
  3463   007884  8922               	bsf	34,4,b	;volatile
  3464                           
  3465                           ;dc_motor.c: 52:     CCP4CONbits.CCP4MODE=0b1100;
  3466   007886  5122               	movf	34,w,b	;volatile
  3467   007888  0BF0               	andlw	-16
  3468   00788A  090C               	iorlw	12
  3469   00788C  6F22               	movwf	34,b	;volatile
  3470   00788E                     
  3471                           ; BSR set to: 15
  3472                           ;dc_motor.c: 53:     CCP4CONbits.EN=1;
  3473   00788E  8F22               	bsf	34,7,b	;volatile
  3474                           
  3475                           ;dc_motor.c: 56:     RE2PPS=0x05;
  3476   007890  0E05               	movlw	5
  3477   007892  010E               	movlb	14	; () banked
  3478   007894  6F74               	movwf	116,b	;volatile
  3479                           
  3480                           ;dc_motor.c: 57:     RE4PPS=0x06;
  3481   007896  0E06               	movlw	6
  3482   007898  6F76               	movwf	118,b	;volatile
  3483                           
  3484                           ;dc_motor.c: 58:     RC7PPS=0x07;
  3485   00789A  0E07               	movlw	7
  3486   00789C  6F69               	movwf	105,b	;volatile
  3487                           
  3488                           ;dc_motor.c: 59:     RG6PPS=0x08;
  3489   00789E  0E08               	movlw	8
  3490   0078A0  6F88               	movwf	136,b	;volatile
  3491   0078A2                     
  3492                           ; BSR set to: 14
  3493                           ;dc_motor.c: 62:     TRISEbits.TRISE2=0;
  3494   0078A2  9485               	bcf	133,2,c	;volatile
  3495   0078A4                     
  3496                           ; BSR set to: 14
  3497                           ;dc_motor.c: 63:     TRISEbits.TRISE4=0;
  3498   0078A4  9885               	bcf	133,4,c	;volatile
  3499   0078A6                     
  3500                           ; BSR set to: 14
  3501                           ;dc_motor.c: 64:     TRISCbits.TRISC7=0;
  3502   0078A6  9E83               	bcf	131,7,c	;volatile
  3503   0078A8                     
  3504                           ; BSR set to: 14
  3505                           ;dc_motor.c: 65:     TRISGbits.TRISG6=0;
  3506   0078A8  9C87               	bcf	135,6,c	;volatile
  3507   0078AA                     
  3508                           ; BSR set to: 14
  3509                           ;dc_motor.c: 68:     LATEbits.LATE2=0;
  3510   0078AA  947D               	bcf	125,2,c	;volatile
  3511   0078AC                     
  3512                           ; BSR set to: 14
  3513                           ;dc_motor.c: 69:     LATCbits.LATC7=0;
  3514   0078AC  9E7B               	bcf	123,7,c	;volatile
  3515   0078AE                     
  3516                           ; BSR set to: 14
  3517                           ;dc_motor.c: 70:     LATEbits.LATE4=0;
  3518   0078AE  987D               	bcf	125,4,c	;volatile
  3519   0078B0                     
  3520                           ; BSR set to: 14
  3521                           ;dc_motor.c: 71:     LATGbits.LATG6=0;
  3522   0078B0  9C7F               	bcf	127,6,c	;volatile
  3523   0078B2                     
  3524                           ; BSR set to: 14
  3525   0078B2  0012               	return		;funcret
  3526   0078B4                     __end_of_initDCmotorsPWM:
  3527                           	callstack 0
  3528                           
  3529 ;; *************** function _get16bitTMR0val *****************
  3530 ;; Defined at:
  3531 ;;		line 27 in file "timers.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;		None
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  timer_val       2    5[COMRAM] unsigned int 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  2    1[COMRAM] unsigned int 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3545 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3548 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3549 ;;Total ram usage:        6 bytes
  3550 ;; Hardware stack levels used: 1
  3551 ;; Hardware stack levels required when called: 2
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_main
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text12
  3560   008062                     __ptext12:
  3561                           	callstack 0
  3562   008062                     _get16bitTMR0val:
  3563                           	callstack 28
  3564   008062                     
  3565                           ;timers.c: 29:     unsigned int timer_val = TMR0L;
  3566   008062  CFD3 F006          	movff	4051,get16bitTMR0val@timer_val	;volatile
  3567   008066  6A07               	clrf	(get16bitTMR0val@timer_val+1)^0,c
  3568   008068                     
  3569                           ;timers.c: 30:     timer_val |= (TMR0H << 8);
  3570   008068  50D4               	movf	212,w,c	;volatile
  3571   00806A  6E05               	movwf	(??_get16bitTMR0val+1)^0,c
  3572   00806C  6A04               	clrf	??_get16bitTMR0val^0,c
  3573   00806E  5004               	movf	??_get16bitTMR0val^0,w,c
  3574   008070  1206               	iorwf	get16bitTMR0val@timer_val^0,f,c
  3575   008072  5005               	movf	(??_get16bitTMR0val+1)^0,w,c
  3576   008074  1207               	iorwf	(get16bitTMR0val@timer_val+1)^0,f,c
  3577   008076                     
  3578                           ;timers.c: 31:     return timer_val;
  3579   008076  C006  F002         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  3580   00807A  C007  F003         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  3581   00807E  0012               	return		;funcret
  3582   008080                     __end_of_get16bitTMR0val:
  3583                           	callstack 0
  3584                           
  3585 ;; *************** function _fullSpeedAhead *****************
  3586 ;; Defined at:
  3587 ;;		line 99 in file "dc_motor.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  3590 ;;		 -> main@motorL(9), 
  3591 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  3592 ;;		 -> main@motorR(9), 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;		None
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      void 
  3597 ;; Registers used:
  3598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3604 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3606 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3607 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3608 ;;Total ram usage:        5 bytes
  3609 ;; Hardware stack levels used: 1
  3610 ;; Hardware stack levels required when called: 4
  3611 ;; This function calls:
  3612 ;;		_setMotorPWM
  3613 ;; This function is called by:
  3614 ;;		_main
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text13
  3619   007542                     __ptext13:
  3620                           	callstack 0
  3621   007542                     _fullSpeedAhead:
  3622                           	callstack 26
  3623   007542                     
  3624                           ;dc_motor.c: 100:     mL->direction = 0;
  3625   007542  EE20 F001          	lfsr	2,1
  3626   007546  5015               	movf	fullSpeedAhead@mL^0,w,c
  3627   007548  26D9               	addwf	fsr2l,f,c
  3628   00754A  5016               	movf	(fullSpeedAhead@mL+1)^0,w,c
  3629   00754C  22DA               	addwfc	fsr2h,f,c
  3630   00754E  6ADF               	clrf	indf2,c
  3631                           
  3632                           ;dc_motor.c: 101:     mR->direction = 0;
  3633   007550  EE20 F001          	lfsr	2,1
  3634   007554  5017               	movf	fullSpeedAhead@mR^0,w,c
  3635   007556  26D9               	addwf	fsr2l,f,c
  3636   007558  5018               	movf	(fullSpeedAhead@mR+1)^0,w,c
  3637   00755A  22DA               	addwfc	fsr2h,f,c
  3638   00755C  6ADF               	clrf	indf2,c
  3639                           
  3640                           ;dc_motor.c: 103:     while ((mL->power) < 100 || (mR->power) < 100){
  3641   00755E  EFE6  F03A         	goto	l202
  3642   007562                     l6415:
  3643                           
  3644                           ;dc_motor.c: 104:         if ((mL->power) < 100) (mL->power) += 1;
  3645   007562  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  3646   007566  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  3647   00756A  0E64               	movlw	100
  3648   00756C  60DF               	cpfslt	indf2,c
  3649   00756E  EFBB  F03A         	goto	u6331
  3650   007572  EFBD  F03A         	goto	u6330
  3651   007576                     u6331:
  3652   007576  EFC2  F03A         	goto	l6419
  3653   00757A                     u6330:
  3654   00757A  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  3655   00757E  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  3656   007582  2ADF               	incf	indf2,f,c
  3657   007584                     l6419:
  3658                           
  3659                           ;dc_motor.c: 105:         if ((mR->power) < 100) (mR->power) += 1;
  3660   007584  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  3661   007588  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  3662   00758C  0E64               	movlw	100
  3663   00758E  60DF               	cpfslt	indf2,c
  3664   007590  EFCC  F03A         	goto	u6341
  3665   007594  EFCE  F03A         	goto	u6340
  3666   007598                     u6341:
  3667   007598  EFD3  F03A         	goto	l6423
  3668   00759C                     u6340:
  3669   00759C  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  3670   0075A0  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  3671   0075A4  2ADF               	incf	indf2,f,c
  3672   0075A6                     l6423:
  3673                           
  3674                           ;dc_motor.c: 107:         setMotorPWM(mL);
  3675   0075A6  C015  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  3676   0075AA  C016  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  3677   0075AE  ECB9  F034         	call	_setMotorPWM	;wreg free
  3678   0075B2                     
  3679                           ;dc_motor.c: 108:         setMotorPWM(mR);
  3680   0075B2  C017  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  3681   0075B6  C018  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  3682   0075BA  ECB9  F034         	call	_setMotorPWM	;wreg free
  3683   0075BE                     
  3684                           ;dc_motor.c: 109:         _delay((unsigned long)((2)*(64000000/4000.0)));
  3685   0075BE  0E2A               	movlw	42
  3686   0075C0  6E19               	movwf	??_fullSpeedAhead^0,c
  3687   0075C2  0E8E               	movlw	142
  3688   0075C4                     u9397:
  3689   0075C4  2EE8               	decfsz	wreg,f,c
  3690   0075C6  D7FE               	bra	u9397
  3691   0075C8  2E19               	decfsz	??_fullSpeedAhead^0,f,c
  3692   0075CA  D7FC               	bra	u9397
  3693   0075CC                     l202:
  3694                           
  3695                           ;dc_motor.c: 103:     while ((mL->power) < 100 || (mR->power) < 100){
  3696   0075CC  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  3697   0075D0  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  3698   0075D4  0E63               	movlw	99
  3699   0075D6  64DF               	cpfsgt	indf2,c
  3700   0075D8  EFF0  F03A         	goto	u6351
  3701   0075DC  EFF2  F03A         	goto	u6350
  3702   0075E0                     u6351:
  3703   0075E0  EFB1  F03A         	goto	l6415
  3704   0075E4                     u6350:
  3705   0075E4  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  3706   0075E8  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  3707   0075EC  0E63               	movlw	99
  3708   0075EE  64DF               	cpfsgt	indf2,c
  3709   0075F0  EFFC  F03A         	goto	u6361
  3710   0075F4  EFFE  F03A         	goto	u6360
  3711   0075F8                     u6361:
  3712   0075F8  EFB1  F03A         	goto	l6415
  3713   0075FC                     u6360:
  3714   0075FC  0012               	return		;funcret
  3715   0075FE                     __end_of_fullSpeedAhead:
  3716                           	callstack 0
  3717                           
  3718 ;; *************** function _setMotorPWM *****************
  3719 ;; Defined at:
  3720 ;;		line 76 in file "dc_motor.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  m               2   14[COMRAM] PTR struct DC_motor
  3723 ;;		 -> main@motorR(9), main@motorL(9), 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  negDuty         1   19[COMRAM] unsigned char 
  3726 ;;  posDuty         1   18[COMRAM] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3737 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;Total ram usage:        6 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; Hardware stack levels required when called: 3
  3743 ;; This function calls:
  3744 ;;		___lwdiv
  3745 ;;		___wmul
  3746 ;; This function is called by:
  3747 ;;		_fullSpeedAhead
  3748 ;;		_stop
  3749 ;;		_turn_left_90
  3750 ;;		_turn_right_90
  3751 ;;		_turn_left_135
  3752 ;;		_turn_right_135
  3753 ;;		_reverse_after_read
  3754 ;;		_reverse_one_square
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text14
  3759   006972                     __ptext14:
  3760                           	callstack 0
  3761   006972                     _setMotorPWM:
  3762                           	callstack 25
  3763   006972                     
  3764                           ;dc_motor.c: 76: void setMotorPWM(struct DC_motor *m);dc_motor.c: 77: {;dc_motor.c: 78: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 80:     if(m->brakemode) {
  3765   006972  EE20 F002          	lfsr	2,2
  3766   006976  500F               	movf	setMotorPWM@m^0,w,c
  3767   006978  26D9               	addwf	fsr2l,f,c
  3768   00697A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3769   00697C  22DA               	addwfc	fsr2h,f,c
  3770   00697E  50DF               	movf	indf2,w,c
  3771   006980  B4D8               	btfsc	status,2,c
  3772   006982  EFC5  F034         	goto	u5361
  3773   006986  EFC7  F034         	goto	u5360
  3774   00698A                     u5361:
  3775   00698A  EFFB  F034         	goto	l5511
  3776   00698E                     u5360:
  3777   00698E                     
  3778                           ;dc_motor.c: 81:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  3779   00698E  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  3780   006992  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3781   006996  50DF               	movf	indf2,w,c
  3782   006998  6E11               	movwf	??_setMotorPWM^0,c
  3783   00699A  5011               	movf	??_setMotorPWM^0,w,c
  3784   00699C  6E02               	movwf	___wmul@multiplier^0,c
  3785   00699E  6A03               	clrf	(___wmul@multiplier+1)^0,c
  3786   0069A0  EE20 F003          	lfsr	2,3
  3787   0069A4  500F               	movf	setMotorPWM@m^0,w,c
  3788   0069A6  26D9               	addwf	fsr2l,f,c
  3789   0069A8  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3790   0069AA  22DA               	addwfc	fsr2h,f,c
  3791   0069AC  CFDE F004          	movff	postinc2,___wmul@multiplicand
  3792   0069B0  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  3793   0069B4  ECEF  F03F         	call	___wmul	;wreg free
  3794   0069B8  C002  F008         	movff	?___wmul,___lwdiv@dividend
  3795   0069BC  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  3796   0069C0  0E00               	movlw	0
  3797   0069C2  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  3798   0069C4  0E64               	movlw	100
  3799   0069C6  6E0A               	movwf	___lwdiv@divisor^0,c
  3800   0069C8  ECE2  F03C         	call	___lwdiv	;wreg free
  3801   0069CC  EE20 F003          	lfsr	2,3
  3802   0069D0  500F               	movf	setMotorPWM@m^0,w,c
  3803   0069D2  26D9               	addwf	fsr2l,f,c
  3804   0069D4  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3805   0069D6  22DA               	addwfc	fsr2h,f,c
  3806   0069D8  50DF               	movf	indf2,w,c
  3807   0069DA  6E12               	movwf	(??_setMotorPWM+1)^0,c
  3808   0069DC  5008               	movf	?___lwdiv^0,w,c
  3809   0069DE  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  3810   0069E0  6E13               	movwf	setMotorPWM@posDuty^0,c
  3811   0069E2                     
  3812                           ;dc_motor.c: 82:         negDuty=m->PWMperiod;
  3813   0069E2  EE20 F003          	lfsr	2,3
  3814   0069E6  500F               	movf	setMotorPWM@m^0,w,c
  3815   0069E8  26D9               	addwf	fsr2l,f,c
  3816   0069EA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3817   0069EC  22DA               	addwfc	fsr2h,f,c
  3818   0069EE  50DF               	movf	indf2,w,c
  3819   0069F0  6E14               	movwf	setMotorPWM@negDuty^0,c
  3820                           
  3821                           ;dc_motor.c: 83:     }
  3822   0069F2  EF1E  F035         	goto	l5515
  3823   0069F6                     l5511:
  3824                           
  3825                           ;dc_motor.c: 85:         posDuty=0;
  3826   0069F6  0E00               	movlw	0
  3827   0069F8  6E13               	movwf	setMotorPWM@posDuty^0,c
  3828   0069FA                     
  3829                           ;dc_motor.c: 86:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  3830   0069FA  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  3831   0069FE  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3832   006A02  50DF               	movf	indf2,w,c
  3833   006A04  6E11               	movwf	??_setMotorPWM^0,c
  3834   006A06  5011               	movf	??_setMotorPWM^0,w,c
  3835   006A08  6E02               	movwf	___wmul@multiplier^0,c
  3836   006A0A  6A03               	clrf	(___wmul@multiplier+1)^0,c
  3837   006A0C  EE20 F003          	lfsr	2,3
  3838   006A10  500F               	movf	setMotorPWM@m^0,w,c
  3839   006A12  26D9               	addwf	fsr2l,f,c
  3840   006A14  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3841   006A16  22DA               	addwfc	fsr2h,f,c
  3842   006A18  CFDE F004          	movff	postinc2,___wmul@multiplicand
  3843   006A1C  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  3844   006A20  ECEF  F03F         	call	___wmul	;wreg free
  3845   006A24  C002  F008         	movff	?___wmul,___lwdiv@dividend
  3846   006A28  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  3847   006A2C  0E00               	movlw	0
  3848   006A2E  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  3849   006A30  0E64               	movlw	100
  3850   006A32  6E0A               	movwf	___lwdiv@divisor^0,c
  3851   006A34  ECE2  F03C         	call	___lwdiv	;wreg free
  3852   006A38  5008               	movf	?___lwdiv^0,w,c
  3853   006A3A  6E14               	movwf	setMotorPWM@negDuty^0,c
  3854   006A3C                     l5515:
  3855                           
  3856                           ;dc_motor.c: 89:     if (m->direction) {
  3857   006A3C  EE20 F001          	lfsr	2,1
  3858   006A40  500F               	movf	setMotorPWM@m^0,w,c
  3859   006A42  26D9               	addwf	fsr2l,f,c
  3860   006A44  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3861   006A46  22DA               	addwfc	fsr2h,f,c
  3862   006A48  50DF               	movf	indf2,w,c
  3863   006A4A  B4D8               	btfsc	status,2,c
  3864   006A4C  EF2A  F035         	goto	u5371
  3865   006A50  EF2C  F035         	goto	u5370
  3866   006A54                     u5371:
  3867   006A54  EF4E  F035         	goto	l5519
  3868   006A58                     u5370:
  3869   006A58                     
  3870                           ;dc_motor.c: 90:         *(m->posDutyHighByte)=posDuty;
  3871   006A58  EE20 F005          	lfsr	2,5
  3872   006A5C  500F               	movf	setMotorPWM@m^0,w,c
  3873   006A5E  26D9               	addwf	fsr2l,f,c
  3874   006A60  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3875   006A62  22DA               	addwfc	fsr2h,f,c
  3876   006A64  CFDE F011          	movff	postinc2,??_setMotorPWM
  3877   006A68  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  3878   006A6C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  3879   006A70  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3880   006A74  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  3881                           
  3882                           ;dc_motor.c: 91:         *(m->negDutyHighByte)=negDuty;
  3883   006A78  EE20 F007          	lfsr	2,7
  3884   006A7C  500F               	movf	setMotorPWM@m^0,w,c
  3885   006A7E  26D9               	addwf	fsr2l,f,c
  3886   006A80  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3887   006A82  22DA               	addwfc	fsr2h,f,c
  3888   006A84  CFDE F011          	movff	postinc2,??_setMotorPWM
  3889   006A88  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  3890   006A8C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  3891   006A90  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3892   006A94  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  3893                           
  3894                           ;dc_motor.c: 92:     } else {
  3895   006A98  EF6E  F035         	goto	l199
  3896   006A9C                     l5519:
  3897                           
  3898                           ;dc_motor.c: 93:         *(m->posDutyHighByte)=negDuty;
  3899   006A9C  EE20 F005          	lfsr	2,5
  3900   006AA0  500F               	movf	setMotorPWM@m^0,w,c
  3901   006AA2  26D9               	addwf	fsr2l,f,c
  3902   006AA4  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3903   006AA6  22DA               	addwfc	fsr2h,f,c
  3904   006AA8  CFDE F011          	movff	postinc2,??_setMotorPWM
  3905   006AAC  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  3906   006AB0  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  3907   006AB4  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3908   006AB8  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  3909                           
  3910                           ;dc_motor.c: 94:         *(m->negDutyHighByte)=posDuty;
  3911   006ABC  EE20 F007          	lfsr	2,7
  3912   006AC0  500F               	movf	setMotorPWM@m^0,w,c
  3913   006AC2  26D9               	addwf	fsr2l,f,c
  3914   006AC4  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3915   006AC6  22DA               	addwfc	fsr2h,f,c
  3916   006AC8  CFDE F011          	movff	postinc2,??_setMotorPWM
  3917   006ACC  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  3918   006AD0  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  3919   006AD4  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3920   006AD8  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  3921   006ADC                     l199:
  3922   006ADC  0012               	return		;funcret
  3923   006ADE                     __end_of_setMotorPWM:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function ___wmul *****************
  3927 ;; Defined at:
  3928 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  multiplier      2    1[COMRAM] unsigned int 
  3931 ;;  multiplicand    2    3[COMRAM] unsigned int 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;  product         2    5[COMRAM] unsigned int 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  2    1[COMRAM] unsigned int 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0, prodl, prodh
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;Total ram usage:        6 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; Hardware stack levels required when called: 2
  3950 ;; This function calls:
  3951 ;;		Nothing
  3952 ;; This function is called by:
  3953 ;;		_setMotorPWM
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text15
  3958   007FDE                     __ptext15:
  3959                           	callstack 0
  3960   007FDE                     ___wmul:
  3961                           	callstack 25
  3962   007FDE  5002               	movf	___wmul@multiplier^0,w,c
  3963   007FE0  0204               	mulwf	___wmul@multiplicand^0,c
  3964   007FE2  CFF3 F006          	movff	prodl,___wmul@product
  3965   007FE6  CFF4 F007          	movff	prodh,___wmul@product+1
  3966   007FEA  5002               	movf	___wmul@multiplier^0,w,c
  3967   007FEC  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  3968   007FEE  50F3               	movf	243,w,c
  3969   007FF0  2607               	addwf	(___wmul@product+1)^0,f,c
  3970   007FF2  5003               	movf	(___wmul@multiplier+1)^0,w,c
  3971   007FF4  0204               	mulwf	___wmul@multiplicand^0,c
  3972   007FF6  50F3               	movf	243,w,c
  3973   007FF8  2607               	addwf	(___wmul@product+1)^0,f,c
  3974   007FFA  C006  F002         	movff	___wmul@product,?___wmul
  3975   007FFE  C007  F003         	movff	___wmul@product+1,?___wmul+1
  3976   008002  0012               	return		;funcret
  3977   008004                     __end_of___wmul:
  3978                           	callstack 0
  3979                           
  3980 ;; *************** function ___lwdiv *****************
  3981 ;; Defined at:
  3982 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  dividend        2    7[COMRAM] unsigned int 
  3985 ;;  divisor         2    9[COMRAM] unsigned int 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  quotient        2   11[COMRAM] unsigned int 
  3988 ;;  counter         1   13[COMRAM] unsigned char 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  2    7[COMRAM] unsigned int 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3998 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;Total ram usage:        7 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; Hardware stack levels required when called: 2
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_setMotorPWM
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           	psect	text16
  4013   0079C4                     __ptext16:
  4014                           	callstack 0
  4015   0079C4                     ___lwdiv:
  4016                           	callstack 25
  4017   0079C4  0E00               	movlw	0
  4018   0079C6  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  4019   0079C8  0E00               	movlw	0
  4020   0079CA  6E0C               	movwf	___lwdiv@quotient^0,c
  4021   0079CC  500A               	movf	___lwdiv@divisor^0,w,c
  4022   0079CE  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4023   0079D0  B4D8               	btfsc	status,2,c
  4024   0079D2  EFED  F03C         	goto	u5081
  4025   0079D6  EFEF  F03C         	goto	u5080
  4026   0079DA                     u5081:
  4027   0079DA  EF17  F03D         	goto	l1051
  4028   0079DE                     u5080:
  4029   0079DE  0E01               	movlw	1
  4030   0079E0  6E0E               	movwf	___lwdiv@counter^0,c
  4031   0079E2  EFF7  F03C         	goto	l5317
  4032   0079E6                     l5315:
  4033   0079E6  90D8               	bcf	status,0,c
  4034   0079E8  360A               	rlcf	___lwdiv@divisor^0,f,c
  4035   0079EA  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4036   0079EC  2A0E               	incf	___lwdiv@counter^0,f,c
  4037   0079EE                     l5317:
  4038   0079EE  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  4039   0079F0  EFFC  F03C         	goto	u5091
  4040   0079F4  EFFE  F03C         	goto	u5090
  4041   0079F8                     u5091:
  4042   0079F8  EFF3  F03C         	goto	l5315
  4043   0079FC                     u5090:
  4044   0079FC                     l5319:
  4045   0079FC  90D8               	bcf	status,0,c
  4046   0079FE  360C               	rlcf	___lwdiv@quotient^0,f,c
  4047   007A00  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4048   007A02  500A               	movf	___lwdiv@divisor^0,w,c
  4049   007A04  5C08               	subwf	___lwdiv@dividend^0,w,c
  4050   007A06  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  4051   007A08  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4052   007A0A  A0D8               	btfss	status,0,c
  4053   007A0C  EF0A  F03D         	goto	u5101
  4054   007A10  EF0C  F03D         	goto	u5100
  4055   007A14                     u5101:
  4056   007A14  EF11  F03D         	goto	l5327
  4057   007A18                     u5100:
  4058   007A18  500A               	movf	___lwdiv@divisor^0,w,c
  4059   007A1A  5E08               	subwf	___lwdiv@dividend^0,f,c
  4060   007A1C  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  4061   007A1E  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4062   007A20  800C               	bsf	___lwdiv@quotient^0,0,c
  4063   007A22                     l5327:
  4064   007A22  90D8               	bcf	status,0,c
  4065   007A24  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4066   007A26  320A               	rrcf	___lwdiv@divisor^0,f,c
  4067   007A28  2E0E               	decfsz	___lwdiv@counter^0,f,c
  4068   007A2A  EFFE  F03C         	goto	l5319
  4069   007A2E                     l1051:
  4070   007A2E  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  4071   007A32  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4072   007A36  0012               	return		;funcret
  4073   007A38                     __end_of___lwdiv:
  4074                           	callstack 0
  4075                           
  4076 ;; *************** function _decide_action *****************
  4077 ;; Defined at:
  4078 ;;		line 114 in file "color.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  red_unsigned    2   83[BANK0 ] unsigned int 
  4081 ;;  green_unsign    2   85[BANK0 ] unsigned int 
  4082 ;;  blue_unsigne    2   87[BANK0 ] unsigned int 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  i               1  127[BANK2 ] unsigned char 
  4085 ;;  rgb_comp       32   90[BANK2 ] float [8]
  4086 ;;  blue_val       20   60[BANK2 ] unsigned char [20]
  4087 ;;  green_val      20   40[BANK2 ] unsigned char [20]
  4088 ;;  red_val        20   20[BANK2 ] unsigned char [20]
  4089 ;;  clear_val      20    0[BANK2 ] unsigned char [20]
  4090 ;;  blue_r          4  148[BANK2 ] float 
  4091 ;;  green_r         4  144[BANK2 ] float 
  4092 ;;  red_r           4  140[BANK2 ] float 
  4093 ;;  blue            4  136[BANK2 ] float 
  4094 ;;  green           4  132[BANK2 ] float 
  4095 ;;  red             4  128[BANK2 ] float 
  4096 ;;  total           4  123[BANK2 ] float 
  4097 ;;  pgreen_val      2   88[BANK2 ] PTR unsigned char 
  4098 ;;		 -> decide_action@green_val(20), 
  4099 ;;  pblue_val       2   86[BANK2 ] PTR unsigned char 
  4100 ;;		 -> decide_action@blue_val(20), 
  4101 ;;  pred_val        2   84[BANK2 ] PTR unsigned char 
  4102 ;;		 -> decide_action@red_val(20), 
  4103 ;;  pclear_val      2    0        PTR unsigned char 
  4104 ;;		 -> decide_action@clear_val(20), 
  4105 ;;  action          1  122[BANK2 ] unsigned char 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      unsigned char 
  4108 ;; Registers used:
  4109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4115 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4116 ;;      Locals:         0       0       0     180       0       0       0       0       0       0       0       0       
      +0       0       0
  4117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4118 ;;      Totals:         0       6       0     180       0       0       0       0       0       0       0       0       
      +0       0       0
  4119 ;;Total ram usage:      186 bytes
  4120 ;; Hardware stack levels used: 1
  4121 ;; Hardware stack levels required when called: 10
  4122 ;; This function calls:
  4123 ;;		___fladd
  4124 ;;		___fldiv
  4125 ;;		___flge
  4126 ;;		___flsub
  4127 ;;		___xxtofl
  4128 ;;		_color_writetoaddr
  4129 ;;		_powf
  4130 ;;		_sendStringSerial4
  4131 ;;		_sprintf
  4132 ;;		_sqrtf
  4133 ;; This function is called by:
  4134 ;;		_main
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text17
  4139   00335C                     __ptext17:
  4140                           	callstack 0
  4141   00335C                     _decide_action:
  4142                           	callstack 20
  4143   00335C                     
  4144                           ;color.c: 126:     pred_val = &red_val[0];
  4145   00335C  0E14               	movlw	low decide_action@red_val
  4146   00335E  0102               	movlb	2	; () banked
  4147   003360  6F54               	movwf	decide_action@pred_val& (0+255),b
  4148   003362  0E02               	movlw	high decide_action@red_val
  4149   003364  6F55               	movwf	(decide_action@pred_val+1)& (0+255),b
  4150                           
  4151                           ;color.c: 127:     pgreen_val = &green_val[0];
  4152   003366  0E28               	movlw	low decide_action@green_val
  4153   003368  6F58               	movwf	decide_action@pgreen_val& (0+255),b
  4154   00336A  0E02               	movlw	high decide_action@green_val
  4155   00336C  6F59               	movwf	(decide_action@pgreen_val+1)& (0+255),b
  4156                           
  4157                           ;color.c: 128:     pblue_val = &blue_val[0];
  4158   00336E  0E3C               	movlw	low decide_action@blue_val
  4159   003370  6F56               	movwf	decide_action@pblue_val& (0+255),b
  4160   003372  0E02               	movlw	high decide_action@blue_val
  4161   003374  6F57               	movwf	(decide_action@pblue_val+1)& (0+255),b
  4162   003376                     
  4163                           ; BSR set to: 2
  4164                           ;color.c: 130:     float red, green, blue;;color.c: 131:     float red_r, green_r, blue_
      +                          r;;color.c: 132:     float rgb_comp[8];;color.c: 133:     char action;;color.c: 135:    
      +                           red = (float)red_unsigned;
  4165   003376  C0B3  F002         	movff	decide_action@red_unsigned,___xxtofl@val
  4166   00337A  C0B4  F003         	movff	decide_action@red_unsigned+1,___xxtofl@val+1
  4167   00337E  6A04               	clrf	(___xxtofl@val+2)^0,c
  4168   003380  6A05               	clrf	(___xxtofl@val+3)^0,c
  4169   003382  0E00               	movlw	0
  4170   003384  ECDF  F033         	call	___xxtofl
  4171   003388  C002  F280         	movff	?___xxtofl,decide_action@red
  4172   00338C  C003  F281         	movff	?___xxtofl+1,decide_action@red+1
  4173   003390  C004  F282         	movff	?___xxtofl+2,decide_action@red+2
  4174   003394  C005  F283         	movff	?___xxtofl+3,decide_action@red+3
  4175   003398                     
  4176                           ;color.c: 136:     green = (float)green_unsigned;
  4177   003398  C0B5  F002         	movff	decide_action@green_unsigned,___xxtofl@val
  4178   00339C  C0B6  F003         	movff	decide_action@green_unsigned+1,___xxtofl@val+1
  4179   0033A0  6A04               	clrf	(___xxtofl@val+2)^0,c
  4180   0033A2  6A05               	clrf	(___xxtofl@val+3)^0,c
  4181   0033A4  0E00               	movlw	0
  4182   0033A6  ECDF  F033         	call	___xxtofl
  4183   0033AA  C002  F284         	movff	?___xxtofl,decide_action@green
  4184   0033AE  C003  F285         	movff	?___xxtofl+1,decide_action@green+1
  4185   0033B2  C004  F286         	movff	?___xxtofl+2,decide_action@green+2
  4186   0033B6  C005  F287         	movff	?___xxtofl+3,decide_action@green+3
  4187   0033BA                     
  4188                           ;color.c: 137:     blue = (float)blue_unsigned;
  4189   0033BA  C0B7  F002         	movff	decide_action@blue_unsigned,___xxtofl@val
  4190   0033BE  C0B8  F003         	movff	decide_action@blue_unsigned+1,___xxtofl@val+1
  4191   0033C2  6A04               	clrf	(___xxtofl@val+2)^0,c
  4192   0033C4  6A05               	clrf	(___xxtofl@val+3)^0,c
  4193   0033C6  0E00               	movlw	0
  4194   0033C8  ECDF  F033         	call	___xxtofl
  4195   0033CC  C002  F288         	movff	?___xxtofl,decide_action@blue
  4196   0033D0  C003  F289         	movff	?___xxtofl+1,decide_action@blue+1
  4197   0033D4  C004  F28A         	movff	?___xxtofl+2,decide_action@blue+2
  4198   0033D8  C005  F28B         	movff	?___xxtofl+3,decide_action@blue+3
  4199   0033DC                     
  4200                           ;color.c: 140:     if(red < 666){red = 0;} else{red -= 666;}
  4201   0033DC  C280  F04C         	movff	decide_action@red,___flge@ff1
  4202   0033E0  C281  F04D         	movff	decide_action@red+1,___flge@ff1+1
  4203   0033E4  C282  F04E         	movff	decide_action@red+2,___flge@ff1+2
  4204   0033E8  C283  F04F         	movff	decide_action@red+3,___flge@ff1+3
  4205   0033EC  0E00               	movlw	0
  4206   0033EE  6E50               	movwf	___flge@ff2^0,c
  4207   0033F0  0E80               	movlw	128
  4208   0033F2  6E51               	movwf	(___flge@ff2+1)^0,c
  4209   0033F4  0E26               	movlw	38
  4210   0033F6  6E52               	movwf	(___flge@ff2+2)^0,c
  4211   0033F8  0E44               	movlw	68
  4212   0033FA  6E53               	movwf	(___flge@ff2+3)^0,c
  4213   0033FC  EC75  F036         	call	___flge	;wreg free
  4214   003400  B0D8               	btfsc	status,0,c
  4215   003402  EF05  F01A         	goto	u9171
  4216   003406  EF07  F01A         	goto	u9170
  4217   00340A                     u9171:
  4218   00340A  EF12  F01A         	goto	l8587
  4219   00340E                     u9170:
  4220   00340E  0E00               	movlw	0
  4221   003410  0102               	movlb	2	; () banked
  4222   003412  6F80               	movwf	decide_action@red& (0+255),b
  4223   003414  0E00               	movlw	0
  4224   003416  6F81               	movwf	(decide_action@red+1)& (0+255),b
  4225   003418  0E00               	movlw	0
  4226   00341A  6F82               	movwf	(decide_action@red+2)& (0+255),b
  4227   00341C  0E00               	movlw	0
  4228   00341E  6F83               	movwf	(decide_action@red+3)& (0+255),b
  4229   003420  EF2C  F01A         	goto	l73
  4230   003424                     l8587:
  4231   003424  C280  F044         	movff	decide_action@red,___flsub@b
  4232   003428  C281  F045         	movff	decide_action@red+1,___flsub@b+1
  4233   00342C  C282  F046         	movff	decide_action@red+2,___flsub@b+2
  4234   003430  C283  F047         	movff	decide_action@red+3,___flsub@b+3
  4235   003434  0E00               	movlw	0
  4236   003436  6E48               	movwf	___flsub@a^0,c
  4237   003438  0E80               	movlw	128
  4238   00343A  6E49               	movwf	(___flsub@a+1)^0,c
  4239   00343C  0E26               	movlw	38
  4240   00343E  6E4A               	movwf	(___flsub@a+2)^0,c
  4241   003440  0E44               	movlw	68
  4242   003442  6E4B               	movwf	(___flsub@a+3)^0,c
  4243   003444  ECBD  F03E         	call	___flsub	;wreg free
  4244   003448  C044  F280         	movff	?___flsub,decide_action@red
  4245   00344C  C045  F281         	movff	?___flsub+1,decide_action@red+1
  4246   003450  C046  F282         	movff	?___flsub+2,decide_action@red+2
  4247   003454  C047  F283         	movff	?___flsub+3,decide_action@red+3
  4248   003458                     l73:
  4249                           
  4250                           ;color.c: 141:     if(green < 446){green = 0;} else{green -= 446;}
  4251   003458  C284  F04C         	movff	decide_action@green,___flge@ff1
  4252   00345C  C285  F04D         	movff	decide_action@green+1,___flge@ff1+1
  4253   003460  C286  F04E         	movff	decide_action@green+2,___flge@ff1+2
  4254   003464  C287  F04F         	movff	decide_action@green+3,___flge@ff1+3
  4255   003468  0E00               	movlw	0
  4256   00346A  6E50               	movwf	___flge@ff2^0,c
  4257   00346C  0E00               	movlw	0
  4258   00346E  6E51               	movwf	(___flge@ff2+1)^0,c
  4259   003470  0EDF               	movlw	223
  4260   003472  6E52               	movwf	(___flge@ff2+2)^0,c
  4261   003474  0E43               	movlw	67
  4262   003476  6E53               	movwf	(___flge@ff2+3)^0,c
  4263   003478  EC75  F036         	call	___flge	;wreg free
  4264   00347C  B0D8               	btfsc	status,0,c
  4265   00347E  EF43  F01A         	goto	u9181
  4266   003482  EF45  F01A         	goto	u9180
  4267   003486                     u9181:
  4268   003486  EF50  F01A         	goto	l8591
  4269   00348A                     u9180:
  4270   00348A  0E00               	movlw	0
  4271   00348C  0102               	movlb	2	; () banked
  4272   00348E  6F84               	movwf	decide_action@green& (0+255),b
  4273   003490  0E00               	movlw	0
  4274   003492  6F85               	movwf	(decide_action@green+1)& (0+255),b
  4275   003494  0E00               	movlw	0
  4276   003496  6F86               	movwf	(decide_action@green+2)& (0+255),b
  4277   003498  0E00               	movlw	0
  4278   00349A  6F87               	movwf	(decide_action@green+3)& (0+255),b
  4279   00349C  EF6A  F01A         	goto	l75
  4280   0034A0                     l8591:
  4281   0034A0  C284  F044         	movff	decide_action@green,___flsub@b
  4282   0034A4  C285  F045         	movff	decide_action@green+1,___flsub@b+1
  4283   0034A8  C286  F046         	movff	decide_action@green+2,___flsub@b+2
  4284   0034AC  C287  F047         	movff	decide_action@green+3,___flsub@b+3
  4285   0034B0  0E00               	movlw	0
  4286   0034B2  6E48               	movwf	___flsub@a^0,c
  4287   0034B4  0E00               	movlw	0
  4288   0034B6  6E49               	movwf	(___flsub@a+1)^0,c
  4289   0034B8  0EDF               	movlw	223
  4290   0034BA  6E4A               	movwf	(___flsub@a+2)^0,c
  4291   0034BC  0E43               	movlw	67
  4292   0034BE  6E4B               	movwf	(___flsub@a+3)^0,c
  4293   0034C0  ECBD  F03E         	call	___flsub	;wreg free
  4294   0034C4  C044  F284         	movff	?___flsub,decide_action@green
  4295   0034C8  C045  F285         	movff	?___flsub+1,decide_action@green+1
  4296   0034CC  C046  F286         	movff	?___flsub+2,decide_action@green+2
  4297   0034D0  C047  F287         	movff	?___flsub+3,decide_action@green+3
  4298   0034D4                     l75:
  4299                           
  4300                           ;color.c: 142:     if(blue < 295){blue = 0;} else{blue -= 295;}
  4301   0034D4  C288  F04C         	movff	decide_action@blue,___flge@ff1
  4302   0034D8  C289  F04D         	movff	decide_action@blue+1,___flge@ff1+1
  4303   0034DC  C28A  F04E         	movff	decide_action@blue+2,___flge@ff1+2
  4304   0034E0  C28B  F04F         	movff	decide_action@blue+3,___flge@ff1+3
  4305   0034E4  0E00               	movlw	0
  4306   0034E6  6E50               	movwf	___flge@ff2^0,c
  4307   0034E8  0E80               	movlw	128
  4308   0034EA  6E51               	movwf	(___flge@ff2+1)^0,c
  4309   0034EC  0E93               	movlw	147
  4310   0034EE  6E52               	movwf	(___flge@ff2+2)^0,c
  4311   0034F0  0E43               	movlw	67
  4312   0034F2  6E53               	movwf	(___flge@ff2+3)^0,c
  4313   0034F4  EC75  F036         	call	___flge	;wreg free
  4314   0034F8  B0D8               	btfsc	status,0,c
  4315   0034FA  EF81  F01A         	goto	u9191
  4316   0034FE  EF83  F01A         	goto	u9190
  4317   003502                     u9191:
  4318   003502  EF8E  F01A         	goto	l8595
  4319   003506                     u9190:
  4320   003506  0E00               	movlw	0
  4321   003508  0102               	movlb	2	; () banked
  4322   00350A  6F88               	movwf	decide_action@blue& (0+255),b
  4323   00350C  0E00               	movlw	0
  4324   00350E  6F89               	movwf	(decide_action@blue+1)& (0+255),b
  4325   003510  0E00               	movlw	0
  4326   003512  6F8A               	movwf	(decide_action@blue+2)& (0+255),b
  4327   003514  0E00               	movlw	0
  4328   003516  6F8B               	movwf	(decide_action@blue+3)& (0+255),b
  4329   003518  EFA8  F01A         	goto	l77
  4330   00351C                     l8595:
  4331   00351C  C288  F044         	movff	decide_action@blue,___flsub@b
  4332   003520  C289  F045         	movff	decide_action@blue+1,___flsub@b+1
  4333   003524  C28A  F046         	movff	decide_action@blue+2,___flsub@b+2
  4334   003528  C28B  F047         	movff	decide_action@blue+3,___flsub@b+3
  4335   00352C  0E00               	movlw	0
  4336   00352E  6E48               	movwf	___flsub@a^0,c
  4337   003530  0E80               	movlw	128
  4338   003532  6E49               	movwf	(___flsub@a+1)^0,c
  4339   003534  0E93               	movlw	147
  4340   003536  6E4A               	movwf	(___flsub@a+2)^0,c
  4341   003538  0E43               	movlw	67
  4342   00353A  6E4B               	movwf	(___flsub@a+3)^0,c
  4343   00353C  ECBD  F03E         	call	___flsub	;wreg free
  4344   003540  C044  F288         	movff	?___flsub,decide_action@blue
  4345   003544  C045  F289         	movff	?___flsub+1,decide_action@blue+1
  4346   003548  C046  F28A         	movff	?___flsub+2,decide_action@blue+2
  4347   00354C  C047  F28B         	movff	?___flsub+3,decide_action@blue+3
  4348   003550                     l77:
  4349                           
  4350                           ;color.c: 144:     red = red/1341;
  4351   003550  C280  F02B         	movff	decide_action@red,___fldiv@b
  4352   003554  C281  F02C         	movff	decide_action@red+1,___fldiv@b+1
  4353   003558  C282  F02D         	movff	decide_action@red+2,___fldiv@b+2
  4354   00355C  C283  F02E         	movff	decide_action@red+3,___fldiv@b+3
  4355   003560  0E00               	movlw	0
  4356   003562  6E2F               	movwf	___fldiv@a^0,c
  4357   003564  0EA0               	movlw	160
  4358   003566  6E30               	movwf	(___fldiv@a+1)^0,c
  4359   003568  0EA7               	movlw	167
  4360   00356A  6E31               	movwf	(___fldiv@a+2)^0,c
  4361   00356C  0E44               	movlw	68
  4362   00356E  6E32               	movwf	(___fldiv@a+3)^0,c
  4363   003570  EC48  F02E         	call	___fldiv	;wreg free
  4364   003574  C02B  F280         	movff	?___fldiv,decide_action@red
  4365   003578  C02C  F281         	movff	?___fldiv+1,decide_action@red+1
  4366   00357C  C02D  F282         	movff	?___fldiv+2,decide_action@red+2
  4367   003580  C02E  F283         	movff	?___fldiv+3,decide_action@red+3
  4368                           
  4369                           ;color.c: 145:     green = green/795;
  4370   003584  C284  F02B         	movff	decide_action@green,___fldiv@b
  4371   003588  C285  F02C         	movff	decide_action@green+1,___fldiv@b+1
  4372   00358C  C286  F02D         	movff	decide_action@green+2,___fldiv@b+2
  4373   003590  C287  F02E         	movff	decide_action@green+3,___fldiv@b+3
  4374   003594  0E00               	movlw	0
  4375   003596  6E2F               	movwf	___fldiv@a^0,c
  4376   003598  0EC0               	movlw	192
  4377   00359A  6E30               	movwf	(___fldiv@a+1)^0,c
  4378   00359C  0E46               	movlw	70
  4379   00359E  6E31               	movwf	(___fldiv@a+2)^0,c
  4380   0035A0  0E44               	movlw	68
  4381   0035A2  6E32               	movwf	(___fldiv@a+3)^0,c
  4382   0035A4  EC48  F02E         	call	___fldiv	;wreg free
  4383   0035A8  C02B  F284         	movff	?___fldiv,decide_action@green
  4384   0035AC  C02C  F285         	movff	?___fldiv+1,decide_action@green+1
  4385   0035B0  C02D  F286         	movff	?___fldiv+2,decide_action@green+2
  4386   0035B4  C02E  F287         	movff	?___fldiv+3,decide_action@green+3
  4387                           
  4388                           ;color.c: 146:     blue = blue/756;
  4389   0035B8  C288  F02B         	movff	decide_action@blue,___fldiv@b
  4390   0035BC  C289  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  4391   0035C0  C28A  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  4392   0035C4  C28B  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  4393   0035C8  0E00               	movlw	0
  4394   0035CA  6E2F               	movwf	___fldiv@a^0,c
  4395   0035CC  0E00               	movlw	0
  4396   0035CE  6E30               	movwf	(___fldiv@a+1)^0,c
  4397   0035D0  0E3D               	movlw	61
  4398   0035D2  6E31               	movwf	(___fldiv@a+2)^0,c
  4399   0035D4  0E44               	movlw	68
  4400   0035D6  6E32               	movwf	(___fldiv@a+3)^0,c
  4401   0035D8  EC48  F02E         	call	___fldiv	;wreg free
  4402   0035DC  C02B  F288         	movff	?___fldiv,decide_action@blue
  4403   0035E0  C02C  F289         	movff	?___fldiv+1,decide_action@blue+1
  4404   0035E4  C02D  F28A         	movff	?___fldiv+2,decide_action@blue+2
  4405   0035E8  C02E  F28B         	movff	?___fldiv+3,decide_action@blue+3
  4406                           
  4407                           ;color.c: 148:     float total = red + green + blue;
  4408   0035EC  C284  F006         	movff	decide_action@green,___fladd@a
  4409   0035F0  C285  F007         	movff	decide_action@green+1,___fladd@a+1
  4410   0035F4  C286  F008         	movff	decide_action@green+2,___fladd@a+2
  4411   0035F8  C287  F009         	movff	decide_action@green+3,___fladd@a+3
  4412   0035FC  C280  F002         	movff	decide_action@red,___fladd@b
  4413   003600  C281  F003         	movff	decide_action@red+1,___fladd@b+1
  4414   003604  C282  F004         	movff	decide_action@red+2,___fladd@b+2
  4415   003608  C283  F005         	movff	decide_action@red+3,___fladd@b+3
  4416   00360C  ECE4  F027         	call	___fladd	;wreg free
  4417   003610  C002  F250         	movff	?___fladd,_decide_action$3179
  4418   003614  C003  F251         	movff	?___fladd+1,_decide_action$3179+1
  4419   003618  C004  F252         	movff	?___fladd+2,_decide_action$3179+2
  4420   00361C  C005  F253         	movff	?___fladd+3,_decide_action$3179+3
  4421                           
  4422                           ;color.c: 148:     float total = red + green + blue;
  4423   003620  C250  F002         	movff	_decide_action$3179,___fladd@b
  4424   003624  C251  F003         	movff	_decide_action$3179+1,___fladd@b+1
  4425   003628  C252  F004         	movff	_decide_action$3179+2,___fladd@b+2
  4426   00362C  C253  F005         	movff	_decide_action$3179+3,___fladd@b+3
  4427   003630  C288  F006         	movff	decide_action@blue,___fladd@a
  4428   003634  C289  F007         	movff	decide_action@blue+1,___fladd@a+1
  4429   003638  C28A  F008         	movff	decide_action@blue+2,___fladd@a+2
  4430   00363C  C28B  F009         	movff	decide_action@blue+3,___fladd@a+3
  4431   003640  ECE4  F027         	call	___fladd	;wreg free
  4432   003644  C002  F27B         	movff	?___fladd,decide_action@total
  4433   003648  C003  F27C         	movff	?___fladd+1,decide_action@total+1
  4434   00364C  C004  F27D         	movff	?___fladd+2,decide_action@total+2
  4435   003650  C005  F27E         	movff	?___fladd+3,decide_action@total+3
  4436                           
  4437                           ;color.c: 150:     red_r = red / total;
  4438   003654  C280  F02B         	movff	decide_action@red,___fldiv@b
  4439   003658  C281  F02C         	movff	decide_action@red+1,___fldiv@b+1
  4440   00365C  C282  F02D         	movff	decide_action@red+2,___fldiv@b+2
  4441   003660  C283  F02E         	movff	decide_action@red+3,___fldiv@b+3
  4442   003664  C27B  F02F         	movff	decide_action@total,___fldiv@a
  4443   003668  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  4444   00366C  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  4445   003670  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  4446   003674  EC48  F02E         	call	___fldiv	;wreg free
  4447   003678  C02B  F28C         	movff	?___fldiv,decide_action@red_r
  4448   00367C  C02C  F28D         	movff	?___fldiv+1,decide_action@red_r+1
  4449   003680  C02D  F28E         	movff	?___fldiv+2,decide_action@red_r+2
  4450   003684  C02E  F28F         	movff	?___fldiv+3,decide_action@red_r+3
  4451                           
  4452                           ;color.c: 151:     green_r = green / total;
  4453   003688  C284  F02B         	movff	decide_action@green,___fldiv@b
  4454   00368C  C285  F02C         	movff	decide_action@green+1,___fldiv@b+1
  4455   003690  C286  F02D         	movff	decide_action@green+2,___fldiv@b+2
  4456   003694  C287  F02E         	movff	decide_action@green+3,___fldiv@b+3
  4457   003698  C27B  F02F         	movff	decide_action@total,___fldiv@a
  4458   00369C  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  4459   0036A0  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  4460   0036A4  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  4461   0036A8  EC48  F02E         	call	___fldiv	;wreg free
  4462   0036AC  C02B  F290         	movff	?___fldiv,decide_action@green_r
  4463   0036B0  C02C  F291         	movff	?___fldiv+1,decide_action@green_r+1
  4464   0036B4  C02D  F292         	movff	?___fldiv+2,decide_action@green_r+2
  4465   0036B8  C02E  F293         	movff	?___fldiv+3,decide_action@green_r+3
  4466                           
  4467                           ;color.c: 152:     blue_r = blue / total;
  4468   0036BC  C288  F02B         	movff	decide_action@blue,___fldiv@b
  4469   0036C0  C289  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  4470   0036C4  C28A  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  4471   0036C8  C28B  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  4472   0036CC  C27B  F02F         	movff	decide_action@total,___fldiv@a
  4473   0036D0  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  4474   0036D4  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  4475   0036D8  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  4476   0036DC  EC48  F02E         	call	___fldiv	;wreg free
  4477   0036E0  C02B  F294         	movff	?___fldiv,decide_action@blue_r
  4478   0036E4  C02C  F295         	movff	?___fldiv+1,decide_action@blue_r+1
  4479   0036E8  C02D  F296         	movff	?___fldiv+2,decide_action@blue_r+2
  4480   0036EC  C02E  F297         	movff	?___fldiv+3,decide_action@blue_r+3
  4481   0036F0                     
  4482                           ;color.c: 154:     sprintf(red_val,"redr = %f \r\n",red_r);
  4483   0036F0  0E14               	movlw	low decide_action@red_val
  4484   0036F2  0100               	movlb	0	; () banked
  4485   0036F4  6F9F               	movwf	sprintf@s& (0+255),b
  4486   0036F6  0E02               	movlw	high decide_action@red_val
  4487   0036F8  6FA0               	movwf	(sprintf@s+1)& (0+255),b
  4488   0036FA  0EB9               	movlw	low STR_1
  4489   0036FC  6FA1               	movwf	sprintf@fmt& (0+255),b
  4490   0036FE  C28C  F0A2         	movff	decide_action@red_r,?_sprintf+3
  4491   003702  C28D  F0A3         	movff	decide_action@red_r+1,?_sprintf+4
  4492   003706  C28E  F0A4         	movff	decide_action@red_r+2,?_sprintf+5
  4493   00370A  C28F  F0A5         	movff	decide_action@red_r+3,?_sprintf+6
  4494   00370E  EC01  F03F         	call	_sprintf	;wreg free
  4495   003712                     
  4496                           ;color.c: 155:     sendStringSerial4(pred_val);
  4497   003712  C254  F003         	movff	decide_action@pred_val,sendStringSerial4@string
  4498   003716  C255  F004         	movff	decide_action@pred_val+1,sendStringSerial4@string+1
  4499   00371A  ECAE  F03F         	call	_sendStringSerial4	;wreg free
  4500   00371E                     
  4501                           ;color.c: 156:     sprintf(green_val,"greenr = %f \r\n",green_r);
  4502   00371E  0E28               	movlw	low decide_action@green_val
  4503   003720  0100               	movlb	0	; () banked
  4504   003722  6F9F               	movwf	sprintf@s& (0+255),b
  4505   003724  0E02               	movlw	high decide_action@green_val
  4506   003726  6FA0               	movwf	(sprintf@s+1)& (0+255),b
  4507   003728  0E80               	movlw	low STR_2
  4508   00372A  6FA1               	movwf	sprintf@fmt& (0+255),b
  4509   00372C  C290  F0A2         	movff	decide_action@green_r,?_sprintf+3
  4510   003730  C291  F0A3         	movff	decide_action@green_r+1,?_sprintf+4
  4511   003734  C292  F0A4         	movff	decide_action@green_r+2,?_sprintf+5
  4512   003738  C293  F0A5         	movff	decide_action@green_r+3,?_sprintf+6
  4513   00373C  EC01  F03F         	call	_sprintf	;wreg free
  4514   003740                     
  4515                           ;color.c: 157:     sendStringSerial4(pgreen_val);
  4516   003740  C258  F003         	movff	decide_action@pgreen_val,sendStringSerial4@string
  4517   003744  C259  F004         	movff	decide_action@pgreen_val+1,sendStringSerial4@string+1
  4518   003748  ECAE  F03F         	call	_sendStringSerial4	;wreg free
  4519   00374C                     
  4520                           ;color.c: 158:     sprintf(blue_val,"bluer = %f \r\n",blue_r);
  4521   00374C  0E3C               	movlw	low decide_action@blue_val
  4522   00374E  0100               	movlb	0	; () banked
  4523   003750  6F9F               	movwf	sprintf@s& (0+255),b
  4524   003752  0E02               	movlw	high decide_action@blue_val
  4525   003754  6FA0               	movwf	(sprintf@s+1)& (0+255),b
  4526   003756  0EAB               	movlw	low STR_3
  4527   003758  6FA1               	movwf	sprintf@fmt& (0+255),b
  4528   00375A  C294  F0A2         	movff	decide_action@blue_r,?_sprintf+3
  4529   00375E  C295  F0A3         	movff	decide_action@blue_r+1,?_sprintf+4
  4530   003762  C296  F0A4         	movff	decide_action@blue_r+2,?_sprintf+5
  4531   003766  C297  F0A5         	movff	decide_action@blue_r+3,?_sprintf+6
  4532   00376A  EC01  F03F         	call	_sprintf	;wreg free
  4533   00376E                     
  4534                           ;color.c: 159:     sendStringSerial4(pblue_val);
  4535   00376E  C256  F003         	movff	decide_action@pblue_val,sendStringSerial4@string
  4536   003772  C257  F004         	movff	decide_action@pblue_val+1,sendStringSerial4@string+1
  4537   003776  ECAE  F03F         	call	_sendStringSerial4	;wreg free
  4538   00377A                     
  4539                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4540   00377A  0EBC               	movlw	188
  4541   00377C  6E06               	movwf	___fladd@a^0,c
  4542   00377E  0E74               	movlw	116
  4543   003780  6E07               	movwf	(___fladd@a+1)^0,c
  4544   003782  0E13               	movlw	19
  4545   003784  6E08               	movwf	(___fladd@a+2)^0,c
  4546   003786  0EBE               	movlw	190
  4547   003788  6E09               	movwf	(___fladd@a+3)^0,c
  4548   00378A  C290  F002         	movff	decide_action@green_r,___fladd@b
  4549   00378E  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  4550   003792  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  4551   003796  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  4552   00379A  ECE4  F027         	call	___fladd	;wreg free
  4553   00379E  C002  F298         	movff	?___fladd,_decide_action$3180
  4554   0037A2  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  4555   0037A6  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  4556   0037AA  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  4557   0037AE                     
  4558                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4559   0037AE  0E0C               	movlw	12
  4560   0037B0  6E06               	movwf	___fladd@a^0,c
  4561   0037B2  0E02               	movlw	2
  4562   0037B4  6E07               	movwf	(___fladd@a+1)^0,c
  4563   0037B6  0E2B               	movlw	43
  4564   0037B8  6E08               	movwf	(___fladd@a+2)^0,c
  4565   0037BA  0EBF               	movlw	191
  4566   0037BC  6E09               	movwf	(___fladd@a+3)^0,c
  4567   0037BE  C28C  F002         	movff	decide_action@red_r,___fladd@b
  4568   0037C2  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  4569   0037C6  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  4570   0037CA  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  4571   0037CE  ECE4  F027         	call	___fladd	;wreg free
  4572   0037D2  C002  F29C         	movff	?___fladd,_decide_action$3181
  4573   0037D6  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  4574   0037DA  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  4575   0037DE  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  4576   0037E2                     
  4577                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4578   0037E2  0E00               	movlw	0
  4579   0037E4  0100               	movlb	0	; () banked
  4580   0037E6  6F64               	movwf	powf@y& (0+255),b
  4581   0037E8  0E00               	movlw	0
  4582   0037EA  6F65               	movwf	(powf@y+1)& (0+255),b
  4583   0037EC  0E00               	movlw	0
  4584   0037EE  6F66               	movwf	(powf@y+2)& (0+255),b
  4585   0037F0  0E40               	movlw	64
  4586   0037F2  6F67               	movwf	(powf@y+3)& (0+255),b
  4587   0037F4  C298  F060         	movff	_decide_action$3180,powf@x
  4588   0037F8  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  4589   0037FC  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  4590   003800  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  4591   003804  EC6E  F007         	call	_powf	;wreg free
  4592   003808  C060  F2A0         	movff	?_powf,_decide_action$3182
  4593   00380C  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  4594   003810  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  4595   003814  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  4596   003818                     
  4597                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4598   003818  0E00               	movlw	0
  4599   00381A  0100               	movlb	0	; () banked
  4600   00381C  6F64               	movwf	powf@y& (0+255),b
  4601   00381E  0E00               	movlw	0
  4602   003820  6F65               	movwf	(powf@y+1)& (0+255),b
  4603   003822  0E00               	movlw	0
  4604   003824  6F66               	movwf	(powf@y+2)& (0+255),b
  4605   003826  0E40               	movlw	64
  4606   003828  6F67               	movwf	(powf@y+3)& (0+255),b
  4607   00382A  C29C  F060         	movff	_decide_action$3181,powf@x
  4608   00382E  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  4609   003832  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  4610   003836  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  4611   00383A  EC6E  F007         	call	_powf	;wreg free
  4612   00383E  C060  F2A4         	movff	?_powf,_decide_action$3183
  4613   003842  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  4614   003846  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  4615   00384A  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  4616   00384E                     
  4617                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4618   00384E  0E12               	movlw	18
  4619   003850  6E06               	movwf	___fladd@a^0,c
  4620   003852  0E83               	movlw	131
  4621   003854  6E07               	movwf	(___fladd@a+1)^0,c
  4622   003856  0E40               	movlw	64
  4623   003858  6E08               	movwf	(___fladd@a+2)^0,c
  4624   00385A  0EBE               	movlw	190
  4625   00385C  6E09               	movwf	(___fladd@a+3)^0,c
  4626   00385E  C294  F002         	movff	decide_action@blue_r,___fladd@b
  4627   003862  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  4628   003866  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  4629   00386A  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  4630   00386E  ECE4  F027         	call	___fladd	;wreg free
  4631   003872  C002  F2A8         	movff	?___fladd,_decide_action$3184
  4632   003876  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  4633   00387A  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  4634   00387E  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  4635   003882                     
  4636                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4637   003882  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  4638   003886  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  4639   00388A  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  4640   00388E  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  4641   003892  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  4642   003896  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  4643   00389A  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  4644   00389E  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  4645   0038A2  ECE4  F027         	call	___fladd	;wreg free
  4646   0038A6  C002  F2AC         	movff	?___fladd,_decide_action$3185
  4647   0038AA  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  4648   0038AE  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  4649   0038B2  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  4650   0038B6                     
  4651                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4652   0038B6  0E00               	movlw	0
  4653   0038B8  0100               	movlb	0	; () banked
  4654   0038BA  6F64               	movwf	powf@y& (0+255),b
  4655   0038BC  0E00               	movlw	0
  4656   0038BE  6F65               	movwf	(powf@y+1)& (0+255),b
  4657   0038C0  0E00               	movlw	0
  4658   0038C2  6F66               	movwf	(powf@y+2)& (0+255),b
  4659   0038C4  0E40               	movlw	64
  4660   0038C6  6F67               	movwf	(powf@y+3)& (0+255),b
  4661   0038C8  C2A8  F060         	movff	_decide_action$3184,powf@x
  4662   0038CC  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  4663   0038D0  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  4664   0038D4  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  4665   0038D8  EC6E  F007         	call	_powf	;wreg free
  4666   0038DC  C060  F2B0         	movff	?_powf,_decide_action$3186
  4667   0038E0  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  4668   0038E4  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  4669   0038E8  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  4670   0038EC                     
  4671                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4672   0038EC  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  4673   0038F0  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  4674   0038F4  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  4675   0038F8  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  4676   0038FC  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  4677   003900  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  4678   003904  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  4679   003908  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  4680   00390C  ECE4  F027         	call	___fladd	;wreg free
  4681   003910  C002  F012         	movff	?___fladd,sqrtf@x
  4682   003914  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  4683   003918  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  4684   00391C  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  4685   003920  EC59  F02C         	call	_sqrtf	;wreg free
  4686   003924  C012  F25A         	movff	?_sqrtf,decide_action@rgb_comp
  4687   003928  C013  F25B         	movff	?_sqrtf+1,decide_action@rgb_comp+1
  4688   00392C  C014  F25C         	movff	?_sqrtf+2,decide_action@rgb_comp+2
  4689   003930  C015  F25D         	movff	?_sqrtf+3,decide_action@rgb_comp+3
  4690   003934                     
  4691                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4692   003934  0E08               	movlw	8
  4693   003936  6E06               	movwf	___fladd@a^0,c
  4694   003938  0EAC               	movlw	172
  4695   00393A  6E07               	movwf	(___fladd@a+1)^0,c
  4696   00393C  0E1C               	movlw	28
  4697   00393E  6E08               	movwf	(___fladd@a+2)^0,c
  4698   003940  0EBF               	movlw	191
  4699   003942  6E09               	movwf	(___fladd@a+3)^0,c
  4700   003944  C290  F002         	movff	decide_action@green_r,___fladd@b
  4701   003948  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  4702   00394C  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  4703   003950  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  4704   003954  ECE4  F027         	call	___fladd	;wreg free
  4705   003958  C002  F298         	movff	?___fladd,_decide_action$3180
  4706   00395C  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  4707   003960  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  4708   003964  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  4709   003968                     
  4710                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4711   003968  0E87               	movlw	135
  4712   00396A  6E06               	movwf	___fladd@a^0,c
  4713   00396C  0E16               	movlw	22
  4714   00396E  6E07               	movwf	(___fladd@a+1)^0,c
  4715   003970  0ED9               	movlw	217
  4716   003972  6E08               	movwf	(___fladd@a+2)^0,c
  4717   003974  0EBD               	movlw	189
  4718   003976  6E09               	movwf	(___fladd@a+3)^0,c
  4719   003978  C28C  F002         	movff	decide_action@red_r,___fladd@b
  4720   00397C  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  4721   003980  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  4722   003984  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  4723   003988  ECE4  F027         	call	___fladd	;wreg free
  4724   00398C  C002  F29C         	movff	?___fladd,_decide_action$3181
  4725   003990  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  4726   003994  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  4727   003998  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  4728   00399C                     
  4729                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4730   00399C  0E00               	movlw	0
  4731   00399E  0100               	movlb	0	; () banked
  4732   0039A0  6F64               	movwf	powf@y& (0+255),b
  4733   0039A2  0E00               	movlw	0
  4734   0039A4  6F65               	movwf	(powf@y+1)& (0+255),b
  4735   0039A6  0E00               	movlw	0
  4736   0039A8  6F66               	movwf	(powf@y+2)& (0+255),b
  4737   0039AA  0E40               	movlw	64
  4738   0039AC  6F67               	movwf	(powf@y+3)& (0+255),b
  4739   0039AE  C298  F060         	movff	_decide_action$3180,powf@x
  4740   0039B2  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  4741   0039B6  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  4742   0039BA  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  4743   0039BE  EC6E  F007         	call	_powf	;wreg free
  4744   0039C2  C060  F2A0         	movff	?_powf,_decide_action$3182
  4745   0039C6  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  4746   0039CA  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  4747   0039CE  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  4748   0039D2                     
  4749                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4750   0039D2  0E00               	movlw	0
  4751   0039D4  0100               	movlb	0	; () banked
  4752   0039D6  6F64               	movwf	powf@y& (0+255),b
  4753   0039D8  0E00               	movlw	0
  4754   0039DA  6F65               	movwf	(powf@y+1)& (0+255),b
  4755   0039DC  0E00               	movlw	0
  4756   0039DE  6F66               	movwf	(powf@y+2)& (0+255),b
  4757   0039E0  0E40               	movlw	64
  4758   0039E2  6F67               	movwf	(powf@y+3)& (0+255),b
  4759   0039E4  C29C  F060         	movff	_decide_action$3181,powf@x
  4760   0039E8  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  4761   0039EC  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  4762   0039F0  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  4763   0039F4  EC6E  F007         	call	_powf	;wreg free
  4764   0039F8  C060  F2A4         	movff	?_powf,_decide_action$3183
  4765   0039FC  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  4766   003A00  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  4767   003A04  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  4768   003A08                     
  4769                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4770   003A08  0E3B               	movlw	59
  4771   003A0A  6E06               	movwf	___fladd@a^0,c
  4772   003A0C  0EDF               	movlw	223
  4773   003A0E  6E07               	movwf	(___fladd@a+1)^0,c
  4774   003A10  0E8F               	movlw	143
  4775   003A12  6E08               	movwf	(___fladd@a+2)^0,c
  4776   003A14  0EBE               	movlw	190
  4777   003A16  6E09               	movwf	(___fladd@a+3)^0,c
  4778   003A18  C294  F002         	movff	decide_action@blue_r,___fladd@b
  4779   003A1C  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  4780   003A20  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  4781   003A24  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  4782   003A28  ECE4  F027         	call	___fladd	;wreg free
  4783   003A2C  C002  F2A8         	movff	?___fladd,_decide_action$3184
  4784   003A30  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  4785   003A34  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  4786   003A38  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  4787   003A3C                     
  4788                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4789   003A3C  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  4790   003A40  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  4791   003A44  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  4792   003A48  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  4793   003A4C  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  4794   003A50  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  4795   003A54  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  4796   003A58  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  4797   003A5C  ECE4  F027         	call	___fladd	;wreg free
  4798   003A60  C002  F2AC         	movff	?___fladd,_decide_action$3185
  4799   003A64  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  4800   003A68  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  4801   003A6C  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  4802   003A70                     
  4803                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4804   003A70  0E00               	movlw	0
  4805   003A72  0100               	movlb	0	; () banked
  4806   003A74  6F64               	movwf	powf@y& (0+255),b
  4807   003A76  0E00               	movlw	0
  4808   003A78  6F65               	movwf	(powf@y+1)& (0+255),b
  4809   003A7A  0E00               	movlw	0
  4810   003A7C  6F66               	movwf	(powf@y+2)& (0+255),b
  4811   003A7E  0E40               	movlw	64
  4812   003A80  6F67               	movwf	(powf@y+3)& (0+255),b
  4813   003A82  C2A8  F060         	movff	_decide_action$3184,powf@x
  4814   003A86  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  4815   003A8A  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  4816   003A8E  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  4817   003A92  EC6E  F007         	call	_powf	;wreg free
  4818   003A96  C060  F2B0         	movff	?_powf,_decide_action$3186
  4819   003A9A  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  4820   003A9E  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  4821   003AA2  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  4822   003AA6                     
  4823                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4824   003AA6  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  4825   003AAA  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  4826   003AAE  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  4827   003AB2  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  4828   003AB6  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  4829   003ABA  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  4830   003ABE  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  4831   003AC2  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  4832   003AC6  ECE4  F027         	call	___fladd	;wreg free
  4833   003ACA  C002  F012         	movff	?___fladd,sqrtf@x
  4834   003ACE  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  4835   003AD2  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  4836   003AD6  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  4837   003ADA  EC59  F02C         	call	_sqrtf	;wreg free
  4838   003ADE  C012  F25E         	movff	?_sqrtf,decide_action@rgb_comp+4
  4839   003AE2  C013  F25F         	movff	?_sqrtf+1,decide_action@rgb_comp+5
  4840   003AE6  C014  F260         	movff	?_sqrtf+2,decide_action@rgb_comp+6
  4841   003AEA  C015  F261         	movff	?_sqrtf+3,decide_action@rgb_comp+7
  4842   003AEE                     
  4843                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4844   003AEE  0ED7               	movlw	215
  4845   003AF0  6E06               	movwf	___fladd@a^0,c
  4846   003AF2  0EA3               	movlw	163
  4847   003AF4  6E07               	movwf	(___fladd@a+1)^0,c
  4848   003AF6  0EF0               	movlw	240
  4849   003AF8  6E08               	movwf	(___fladd@a+2)^0,c
  4850   003AFA  0EBE               	movlw	190
  4851   003AFC  6E09               	movwf	(___fladd@a+3)^0,c
  4852   003AFE  C290  F002         	movff	decide_action@green_r,___fladd@b
  4853   003B02  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  4854   003B06  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  4855   003B0A  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  4856   003B0E  ECE4  F027         	call	___fladd	;wreg free
  4857   003B12  C002  F298         	movff	?___fladd,_decide_action$3180
  4858   003B16  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  4859   003B1A  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  4860   003B1E  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  4861   003B22                     
  4862                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4863   003B22  0E23               	movlw	35
  4864   003B24  6E06               	movwf	___fladd@a^0,c
  4865   003B26  0EDB               	movlw	219
  4866   003B28  6E07               	movwf	(___fladd@a+1)^0,c
  4867   003B2A  0E79               	movlw	121
  4868   003B2C  6E08               	movwf	(___fladd@a+2)^0,c
  4869   003B2E  0EBD               	movlw	189
  4870   003B30  6E09               	movwf	(___fladd@a+3)^0,c
  4871   003B32  C28C  F002         	movff	decide_action@red_r,___fladd@b
  4872   003B36  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  4873   003B3A  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  4874   003B3E  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  4875   003B42  ECE4  F027         	call	___fladd	;wreg free
  4876   003B46  C002  F29C         	movff	?___fladd,_decide_action$3181
  4877   003B4A  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  4878   003B4E  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  4879   003B52  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  4880   003B56                     
  4881                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4882   003B56  0E00               	movlw	0
  4883   003B58  0100               	movlb	0	; () banked
  4884   003B5A  6F64               	movwf	powf@y& (0+255),b
  4885   003B5C  0E00               	movlw	0
  4886   003B5E  6F65               	movwf	(powf@y+1)& (0+255),b
  4887   003B60  0E00               	movlw	0
  4888   003B62  6F66               	movwf	(powf@y+2)& (0+255),b
  4889   003B64  0E40               	movlw	64
  4890   003B66  6F67               	movwf	(powf@y+3)& (0+255),b
  4891   003B68  C298  F060         	movff	_decide_action$3180,powf@x
  4892   003B6C  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  4893   003B70  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  4894   003B74  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  4895   003B78  EC6E  F007         	call	_powf	;wreg free
  4896   003B7C  C060  F2A0         	movff	?_powf,_decide_action$3182
  4897   003B80  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  4898   003B84  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  4899   003B88  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  4900   003B8C                     
  4901                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4902   003B8C  0E00               	movlw	0
  4903   003B8E  0100               	movlb	0	; () banked
  4904   003B90  6F64               	movwf	powf@y& (0+255),b
  4905   003B92  0E00               	movlw	0
  4906   003B94  6F65               	movwf	(powf@y+1)& (0+255),b
  4907   003B96  0E00               	movlw	0
  4908   003B98  6F66               	movwf	(powf@y+2)& (0+255),b
  4909   003B9A  0E40               	movlw	64
  4910   003B9C  6F67               	movwf	(powf@y+3)& (0+255),b
  4911   003B9E  C29C  F060         	movff	_decide_action$3181,powf@x
  4912   003BA2  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  4913   003BA6  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  4914   003BAA  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  4915   003BAE  EC6E  F007         	call	_powf	;wreg free
  4916   003BB2  C060  F2A4         	movff	?_powf,_decide_action$3183
  4917   003BB6  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  4918   003BBA  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  4919   003BBE  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  4920   003BC2                     
  4921                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4922   003BC2  0ED7               	movlw	215
  4923   003BC4  6E06               	movwf	___fladd@a^0,c
  4924   003BC6  0EA3               	movlw	163
  4925   003BC8  6E07               	movwf	(___fladd@a+1)^0,c
  4926   003BCA  0EF0               	movlw	240
  4927   003BCC  6E08               	movwf	(___fladd@a+2)^0,c
  4928   003BCE  0EBE               	movlw	190
  4929   003BD0  6E09               	movwf	(___fladd@a+3)^0,c
  4930   003BD2  C294  F002         	movff	decide_action@blue_r,___fladd@b
  4931   003BD6  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  4932   003BDA  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  4933   003BDE  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  4934   003BE2  ECE4  F027         	call	___fladd	;wreg free
  4935   003BE6  C002  F2A8         	movff	?___fladd,_decide_action$3184
  4936   003BEA  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  4937   003BEE  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  4938   003BF2  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  4939   003BF6                     
  4940                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4941   003BF6  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  4942   003BFA  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  4943   003BFE  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  4944   003C02  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  4945   003C06  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  4946   003C0A  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  4947   003C0E  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  4948   003C12  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  4949   003C16  ECE4  F027         	call	___fladd	;wreg free
  4950   003C1A  C002  F2AC         	movff	?___fladd,_decide_action$3185
  4951   003C1E  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  4952   003C22  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  4953   003C26  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  4954   003C2A                     
  4955                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4956   003C2A  0E00               	movlw	0
  4957   003C2C  0100               	movlb	0	; () banked
  4958   003C2E  6F64               	movwf	powf@y& (0+255),b
  4959   003C30  0E00               	movlw	0
  4960   003C32  6F65               	movwf	(powf@y+1)& (0+255),b
  4961   003C34  0E00               	movlw	0
  4962   003C36  6F66               	movwf	(powf@y+2)& (0+255),b
  4963   003C38  0E40               	movlw	64
  4964   003C3A  6F67               	movwf	(powf@y+3)& (0+255),b
  4965   003C3C  C2A8  F060         	movff	_decide_action$3184,powf@x
  4966   003C40  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  4967   003C44  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  4968   003C48  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  4969   003C4C  EC6E  F007         	call	_powf	;wreg free
  4970   003C50  C060  F2B0         	movff	?_powf,_decide_action$3186
  4971   003C54  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  4972   003C58  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  4973   003C5C  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  4974   003C60                     
  4975                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4976   003C60  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  4977   003C64  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  4978   003C68  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  4979   003C6C  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  4980   003C70  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  4981   003C74  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  4982   003C78  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  4983   003C7C  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  4984   003C80  ECE4  F027         	call	___fladd	;wreg free
  4985   003C84  C002  F012         	movff	?___fladd,sqrtf@x
  4986   003C88  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  4987   003C8C  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  4988   003C90  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  4989   003C94  EC59  F02C         	call	_sqrtf	;wreg free
  4990   003C98  C012  F262         	movff	?_sqrtf,decide_action@rgb_comp+8
  4991   003C9C  C013  F263         	movff	?_sqrtf+1,decide_action@rgb_comp+9
  4992   003CA0  C014  F264         	movff	?_sqrtf+2,decide_action@rgb_comp+10
  4993   003CA4  C015  F265         	movff	?_sqrtf+3,decide_action@rgb_comp+11
  4994   003CA8                     
  4995                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  4996   003CA8  0ED3               	movlw	211
  4997   003CAA  6E06               	movwf	___fladd@a^0,c
  4998   003CAC  0E4D               	movlw	77
  4999   003CAE  6E07               	movwf	(___fladd@a+1)^0,c
  5000   003CB0  0EE2               	movlw	226
  5001   003CB2  6E08               	movwf	(___fladd@a+2)^0,c
  5002   003CB4  0EBE               	movlw	190
  5003   003CB6  6E09               	movwf	(___fladd@a+3)^0,c
  5004   003CB8  C290  F002         	movff	decide_action@green_r,___fladd@b
  5005   003CBC  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5006   003CC0  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5007   003CC4  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5008   003CC8  ECE4  F027         	call	___fladd	;wreg free
  5009   003CCC  C002  F298         	movff	?___fladd,_decide_action$3180
  5010   003CD0  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  5011   003CD4  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  5012   003CD8  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  5013   003CDC                     
  5014                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5015   003CDC  0E04               	movlw	4
  5016   003CDE  6E06               	movwf	___fladd@a^0,c
  5017   003CE0  0E56               	movlw	86
  5018   003CE2  6E07               	movwf	(___fladd@a+1)^0,c
  5019   003CE4  0ECE               	movlw	206
  5020   003CE6  6E08               	movwf	(___fladd@a+2)^0,c
  5021   003CE8  0EBE               	movlw	190
  5022   003CEA  6E09               	movwf	(___fladd@a+3)^0,c
  5023   003CEC  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5024   003CF0  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5025   003CF4  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5026   003CF8  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5027   003CFC  ECE4  F027         	call	___fladd	;wreg free
  5028   003D00  C002  F29C         	movff	?___fladd,_decide_action$3181
  5029   003D04  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  5030   003D08  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  5031   003D0C  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  5032   003D10                     
  5033                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5034   003D10  0E00               	movlw	0
  5035   003D12  0100               	movlb	0	; () banked
  5036   003D14  6F64               	movwf	powf@y& (0+255),b
  5037   003D16  0E00               	movlw	0
  5038   003D18  6F65               	movwf	(powf@y+1)& (0+255),b
  5039   003D1A  0E00               	movlw	0
  5040   003D1C  6F66               	movwf	(powf@y+2)& (0+255),b
  5041   003D1E  0E40               	movlw	64
  5042   003D20  6F67               	movwf	(powf@y+3)& (0+255),b
  5043   003D22  C298  F060         	movff	_decide_action$3180,powf@x
  5044   003D26  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  5045   003D2A  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  5046   003D2E  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  5047   003D32  EC6E  F007         	call	_powf	;wreg free
  5048   003D36  C060  F2A0         	movff	?_powf,_decide_action$3182
  5049   003D3A  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  5050   003D3E  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  5051   003D42  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  5052   003D46                     
  5053                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5054   003D46  0E00               	movlw	0
  5055   003D48  0100               	movlb	0	; () banked
  5056   003D4A  6F64               	movwf	powf@y& (0+255),b
  5057   003D4C  0E00               	movlw	0
  5058   003D4E  6F65               	movwf	(powf@y+1)& (0+255),b
  5059   003D50  0E00               	movlw	0
  5060   003D52  6F66               	movwf	(powf@y+2)& (0+255),b
  5061   003D54  0E40               	movlw	64
  5062   003D56  6F67               	movwf	(powf@y+3)& (0+255),b
  5063   003D58  C29C  F060         	movff	_decide_action$3181,powf@x
  5064   003D5C  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  5065   003D60  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  5066   003D64  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  5067   003D68  EC6E  F007         	call	_powf	;wreg free
  5068   003D6C  C060  F2A4         	movff	?_powf,_decide_action$3183
  5069   003D70  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  5070   003D74  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  5071   003D78  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  5072   003D7C                     
  5073                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5074   003D7C  0E2D               	movlw	45
  5075   003D7E  6E06               	movwf	___fladd@a^0,c
  5076   003D80  0EB2               	movlw	178
  5077   003D82  6E07               	movwf	(___fladd@a+1)^0,c
  5078   003D84  0E1D               	movlw	29
  5079   003D86  6E08               	movwf	(___fladd@a+2)^0,c
  5080   003D88  0EBE               	movlw	190
  5081   003D8A  6E09               	movwf	(___fladd@a+3)^0,c
  5082   003D8C  C294  F002         	movff	decide_action@blue_r,___fladd@b
  5083   003D90  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5084   003D94  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5085   003D98  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5086   003D9C  ECE4  F027         	call	___fladd	;wreg free
  5087   003DA0  C002  F2A8         	movff	?___fladd,_decide_action$3184
  5088   003DA4  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  5089   003DA8  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  5090   003DAC  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  5091   003DB0                     
  5092                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5093   003DB0  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  5094   003DB4  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  5095   003DB8  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  5096   003DBC  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  5097   003DC0  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  5098   003DC4  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  5099   003DC8  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  5100   003DCC  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  5101   003DD0  ECE4  F027         	call	___fladd	;wreg free
  5102   003DD4  C002  F2AC         	movff	?___fladd,_decide_action$3185
  5103   003DD8  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  5104   003DDC  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  5105   003DE0  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  5106   003DE4                     
  5107                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5108   003DE4  0E00               	movlw	0
  5109   003DE6  0100               	movlb	0	; () banked
  5110   003DE8  6F64               	movwf	powf@y& (0+255),b
  5111   003DEA  0E00               	movlw	0
  5112   003DEC  6F65               	movwf	(powf@y+1)& (0+255),b
  5113   003DEE  0E00               	movlw	0
  5114   003DF0  6F66               	movwf	(powf@y+2)& (0+255),b
  5115   003DF2  0E40               	movlw	64
  5116   003DF4  6F67               	movwf	(powf@y+3)& (0+255),b
  5117   003DF6  C2A8  F060         	movff	_decide_action$3184,powf@x
  5118   003DFA  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  5119   003DFE  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  5120   003E02  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  5121   003E06  EC6E  F007         	call	_powf	;wreg free
  5122   003E0A  C060  F2B0         	movff	?_powf,_decide_action$3186
  5123   003E0E  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  5124   003E12  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  5125   003E16  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  5126   003E1A                     
  5127                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5128   003E1A  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  5129   003E1E  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  5130   003E22  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  5131   003E26  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  5132   003E2A  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  5133   003E2E  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  5134   003E32  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  5135   003E36  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  5136   003E3A  ECE4  F027         	call	___fladd	;wreg free
  5137   003E3E  C002  F012         	movff	?___fladd,sqrtf@x
  5138   003E42  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5139   003E46  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5140   003E4A  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5141   003E4E  EC59  F02C         	call	_sqrtf	;wreg free
  5142   003E52  C012  F266         	movff	?_sqrtf,decide_action@rgb_comp+12
  5143   003E56  C013  F267         	movff	?_sqrtf+1,decide_action@rgb_comp+13
  5144   003E5A  C014  F268         	movff	?_sqrtf+2,decide_action@rgb_comp+14
  5145   003E5E  C015  F269         	movff	?_sqrtf+3,decide_action@rgb_comp+15
  5146   003E62                     
  5147                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5148   003E62  0E58               	movlw	88
  5149   003E64  6E06               	movwf	___fladd@a^0,c
  5150   003E66  0E39               	movlw	57
  5151   003E68  6E07               	movwf	(___fladd@a+1)^0,c
  5152   003E6A  0EB4               	movlw	180
  5153   003E6C  6E08               	movwf	(___fladd@a+2)^0,c
  5154   003E6E  0EBD               	movlw	189
  5155   003E70  6E09               	movwf	(___fladd@a+3)^0,c
  5156   003E72  C290  F002         	movff	decide_action@green_r,___fladd@b
  5157   003E76  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5158   003E7A  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5159   003E7E  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5160   003E82  ECE4  F027         	call	___fladd	;wreg free
  5161   003E86  C002  F298         	movff	?___fladd,_decide_action$3180
  5162   003E8A  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  5163   003E8E  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  5164   003E92  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  5165   003E96                     
  5166                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5167   003E96  0EE1               	movlw	225
  5168   003E98  6E06               	movwf	___fladd@a^0,c
  5169   003E9A  0E7A               	movlw	122
  5170   003E9C  6E07               	movwf	(___fladd@a+1)^0,c
  5171   003E9E  0E34               	movlw	52
  5172   003EA0  6E08               	movwf	(___fladd@a+2)^0,c
  5173   003EA2  0EBF               	movlw	191
  5174   003EA4  6E09               	movwf	(___fladd@a+3)^0,c
  5175   003EA6  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5176   003EAA  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5177   003EAE  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5178   003EB2  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5179   003EB6  ECE4  F027         	call	___fladd	;wreg free
  5180   003EBA  C002  F29C         	movff	?___fladd,_decide_action$3181
  5181   003EBE  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  5182   003EC2  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  5183   003EC6  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  5184   003ECA                     
  5185                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5186   003ECA  0E00               	movlw	0
  5187   003ECC  0100               	movlb	0	; () banked
  5188   003ECE  6F64               	movwf	powf@y& (0+255),b
  5189   003ED0  0E00               	movlw	0
  5190   003ED2  6F65               	movwf	(powf@y+1)& (0+255),b
  5191   003ED4  0E00               	movlw	0
  5192   003ED6  6F66               	movwf	(powf@y+2)& (0+255),b
  5193   003ED8  0E40               	movlw	64
  5194   003EDA  6F67               	movwf	(powf@y+3)& (0+255),b
  5195   003EDC  C298  F060         	movff	_decide_action$3180,powf@x
  5196   003EE0  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  5197   003EE4  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  5198   003EE8  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  5199   003EEC  EC6E  F007         	call	_powf	;wreg free
  5200   003EF0  C060  F2A0         	movff	?_powf,_decide_action$3182
  5201   003EF4  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  5202   003EF8  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  5203   003EFC  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  5204   003F00                     
  5205                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5206   003F00  0E00               	movlw	0
  5207   003F02  0100               	movlb	0	; () banked
  5208   003F04  6F64               	movwf	powf@y& (0+255),b
  5209   003F06  0E00               	movlw	0
  5210   003F08  6F65               	movwf	(powf@y+1)& (0+255),b
  5211   003F0A  0E00               	movlw	0
  5212   003F0C  6F66               	movwf	(powf@y+2)& (0+255),b
  5213   003F0E  0E40               	movlw	64
  5214   003F10  6F67               	movwf	(powf@y+3)& (0+255),b
  5215   003F12  C29C  F060         	movff	_decide_action$3181,powf@x
  5216   003F16  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  5217   003F1A  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  5218   003F1E  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  5219   003F22  EC6E  F007         	call	_powf	;wreg free
  5220   003F26  C060  F2A4         	movff	?_powf,_decide_action$3183
  5221   003F2A  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  5222   003F2E  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  5223   003F32  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  5224   003F36                     
  5225                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5226   003F36  0ECF               	movlw	207
  5227   003F38  6E06               	movwf	___fladd@a^0,c
  5228   003F3A  0EF7               	movlw	247
  5229   003F3C  6E07               	movwf	(___fladd@a+1)^0,c
  5230   003F3E  0E53               	movlw	83
  5231   003F40  6E08               	movwf	(___fladd@a+2)^0,c
  5232   003F42  0EBE               	movlw	190
  5233   003F44  6E09               	movwf	(___fladd@a+3)^0,c
  5234   003F46  C294  F002         	movff	decide_action@blue_r,___fladd@b
  5235   003F4A  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5236   003F4E  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5237   003F52  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5238   003F56  ECE4  F027         	call	___fladd	;wreg free
  5239   003F5A  C002  F2A8         	movff	?___fladd,_decide_action$3184
  5240   003F5E  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  5241   003F62  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  5242   003F66  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  5243   003F6A                     
  5244                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5245   003F6A  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  5246   003F6E  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  5247   003F72  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  5248   003F76  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  5249   003F7A  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  5250   003F7E  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  5251   003F82  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  5252   003F86  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  5253   003F8A  ECE4  F027         	call	___fladd	;wreg free
  5254   003F8E  C002  F2AC         	movff	?___fladd,_decide_action$3185
  5255   003F92  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  5256   003F96  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  5257   003F9A  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  5258   003F9E                     
  5259                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5260   003F9E  0E00               	movlw	0
  5261   003FA0  0100               	movlb	0	; () banked
  5262   003FA2  6F64               	movwf	powf@y& (0+255),b
  5263   003FA4  0E00               	movlw	0
  5264   003FA6  6F65               	movwf	(powf@y+1)& (0+255),b
  5265   003FA8  0E00               	movlw	0
  5266   003FAA  6F66               	movwf	(powf@y+2)& (0+255),b
  5267   003FAC  0E40               	movlw	64
  5268   003FAE  6F67               	movwf	(powf@y+3)& (0+255),b
  5269   003FB0  C2A8  F060         	movff	_decide_action$3184,powf@x
  5270   003FB4  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  5271   003FB8  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  5272   003FBC  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  5273   003FC0  EC6E  F007         	call	_powf	;wreg free
  5274   003FC4  C060  F2B0         	movff	?_powf,_decide_action$3186
  5275   003FC8  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  5276   003FCC  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  5277   003FD0  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  5278   003FD4                     
  5279                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5280   003FD4  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  5281   003FD8  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  5282   003FDC  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  5283   003FE0  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  5284   003FE4  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  5285   003FE8  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  5286   003FEC  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  5287   003FF0  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  5288   003FF4  ECE4  F027         	call	___fladd	;wreg free
  5289   003FF8  C002  F012         	movff	?___fladd,sqrtf@x
  5290   003FFC  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5291   004000  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5292   004004  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5293   004008  EC59  F02C         	call	_sqrtf	;wreg free
  5294   00400C  C012  F26A         	movff	?_sqrtf,decide_action@rgb_comp+16
  5295   004010  C013  F26B         	movff	?_sqrtf+1,decide_action@rgb_comp+17
  5296   004014  C014  F26C         	movff	?_sqrtf+2,decide_action@rgb_comp+18
  5297   004018  C015  F26D         	movff	?_sqrtf+3,decide_action@rgb_comp+19
  5298   00401C                     
  5299                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5300   00401C  0E4A               	movlw	74
  5301   00401E  6E06               	movwf	___fladd@a^0,c
  5302   004020  0E0C               	movlw	12
  5303   004022  6E07               	movwf	(___fladd@a+1)^0,c
  5304   004024  0E02               	movlw	2
  5305   004026  6E08               	movwf	(___fladd@a+2)^0,c
  5306   004028  0EBE               	movlw	190
  5307   00402A  6E09               	movwf	(___fladd@a+3)^0,c
  5308   00402C  C290  F002         	movff	decide_action@green_r,___fladd@b
  5309   004030  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5310   004034  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5311   004038  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5312   00403C  ECE4  F027         	call	___fladd	;wreg free
  5313   004040  C002  F298         	movff	?___fladd,_decide_action$3180
  5314   004044  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  5315   004048  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  5316   00404C  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  5317   004050                     
  5318                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5319   004050  0E19               	movlw	25
  5320   004052  6E06               	movwf	___fladd@a^0,c
  5321   004054  0E04               	movlw	4
  5322   004056  6E07               	movwf	(___fladd@a+1)^0,c
  5323   004058  0E36               	movlw	54
  5324   00405A  6E08               	movwf	(___fladd@a+2)^0,c
  5325   00405C  0EBF               	movlw	191
  5326   00405E  6E09               	movwf	(___fladd@a+3)^0,c
  5327   004060  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5328   004064  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5329   004068  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5330   00406C  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5331   004070  ECE4  F027         	call	___fladd	;wreg free
  5332   004074  C002  F29C         	movff	?___fladd,_decide_action$3181
  5333   004078  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  5334   00407C  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  5335   004080  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  5336   004084                     
  5337                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5338   004084  0E00               	movlw	0
  5339   004086  0100               	movlb	0	; () banked
  5340   004088  6F64               	movwf	powf@y& (0+255),b
  5341   00408A  0E00               	movlw	0
  5342   00408C  6F65               	movwf	(powf@y+1)& (0+255),b
  5343   00408E  0E00               	movlw	0
  5344   004090  6F66               	movwf	(powf@y+2)& (0+255),b
  5345   004092  0E40               	movlw	64
  5346   004094  6F67               	movwf	(powf@y+3)& (0+255),b
  5347   004096  C298  F060         	movff	_decide_action$3180,powf@x
  5348   00409A  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  5349   00409E  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  5350   0040A2  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  5351   0040A6  EC6E  F007         	call	_powf	;wreg free
  5352   0040AA  C060  F2A0         	movff	?_powf,_decide_action$3182
  5353   0040AE  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  5354   0040B2  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  5355   0040B6  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  5356   0040BA                     
  5357                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5358   0040BA  0E00               	movlw	0
  5359   0040BC  0100               	movlb	0	; () banked
  5360   0040BE  6F64               	movwf	powf@y& (0+255),b
  5361   0040C0  0E00               	movlw	0
  5362   0040C2  6F65               	movwf	(powf@y+1)& (0+255),b
  5363   0040C4  0E00               	movlw	0
  5364   0040C6  6F66               	movwf	(powf@y+2)& (0+255),b
  5365   0040C8  0E40               	movlw	64
  5366   0040CA  6F67               	movwf	(powf@y+3)& (0+255),b
  5367   0040CC  C29C  F060         	movff	_decide_action$3181,powf@x
  5368   0040D0  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  5369   0040D4  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  5370   0040D8  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  5371   0040DC  EC6E  F007         	call	_powf	;wreg free
  5372   0040E0  C060  F2A4         	movff	?_powf,_decide_action$3183
  5373   0040E4  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  5374   0040E8  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  5375   0040EC  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  5376   0040F0                     
  5377                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5378   0040F0  0E79               	movlw	121
  5379   0040F2  6E06               	movwf	___fladd@a^0,c
  5380   0040F4  0EE9               	movlw	233
  5381   0040F6  6E07               	movwf	(___fladd@a+1)^0,c
  5382   0040F8  0E26               	movlw	38
  5383   0040FA  6E08               	movwf	(___fladd@a+2)^0,c
  5384   0040FC  0EBE               	movlw	190
  5385   0040FE  6E09               	movwf	(___fladd@a+3)^0,c
  5386   004100  C294  F002         	movff	decide_action@blue_r,___fladd@b
  5387   004104  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5388   004108  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5389   00410C  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5390   004110  ECE4  F027         	call	___fladd	;wreg free
  5391   004114  C002  F2A8         	movff	?___fladd,_decide_action$3184
  5392   004118  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  5393   00411C  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  5394   004120  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  5395   004124                     
  5396                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5397   004124  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  5398   004128  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  5399   00412C  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  5400   004130  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  5401   004134  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  5402   004138  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  5403   00413C  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  5404   004140  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  5405   004144  ECE4  F027         	call	___fladd	;wreg free
  5406   004148  C002  F2AC         	movff	?___fladd,_decide_action$3185
  5407   00414C  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  5408   004150  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  5409   004154  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  5410   004158                     
  5411                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5412   004158  0E00               	movlw	0
  5413   00415A  0100               	movlb	0	; () banked
  5414   00415C  6F64               	movwf	powf@y& (0+255),b
  5415   00415E  0E00               	movlw	0
  5416   004160  6F65               	movwf	(powf@y+1)& (0+255),b
  5417   004162  0E00               	movlw	0
  5418   004164  6F66               	movwf	(powf@y+2)& (0+255),b
  5419   004166  0E40               	movlw	64
  5420   004168  6F67               	movwf	(powf@y+3)& (0+255),b
  5421   00416A  C2A8  F060         	movff	_decide_action$3184,powf@x
  5422   00416E  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  5423   004172  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  5424   004176  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  5425   00417A  EC6E  F007         	call	_powf	;wreg free
  5426   00417E  C060  F2B0         	movff	?_powf,_decide_action$3186
  5427   004182  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  5428   004186  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  5429   00418A  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  5430   00418E                     
  5431                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5432   00418E  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  5433   004192  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  5434   004196  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  5435   00419A  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  5436   00419E  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  5437   0041A2  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  5438   0041A6  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  5439   0041AA  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  5440   0041AE  ECE4  F027         	call	___fladd	;wreg free
  5441   0041B2  C002  F012         	movff	?___fladd,sqrtf@x
  5442   0041B6  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5443   0041BA  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5444   0041BE  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5445   0041C2  EC59  F02C         	call	_sqrtf	;wreg free
  5446   0041C6  C012  F26E         	movff	?_sqrtf,decide_action@rgb_comp+20
  5447   0041CA  C013  F26F         	movff	?_sqrtf+1,decide_action@rgb_comp+21
  5448   0041CE  C014  F270         	movff	?_sqrtf+2,decide_action@rgb_comp+22
  5449   0041D2  C015  F271         	movff	?_sqrtf+3,decide_action@rgb_comp+23
  5450   0041D6                     
  5451                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5452   0041D6  0EE7               	movlw	231
  5453   0041D8  6E06               	movwf	___fladd@a^0,c
  5454   0041DA  0EFB               	movlw	251
  5455   0041DC  6E07               	movwf	(___fladd@a+1)^0,c
  5456   0041DE  0EE9               	movlw	233
  5457   0041E0  6E08               	movwf	(___fladd@a+2)^0,c
  5458   0041E2  0EBE               	movlw	190
  5459   0041E4  6E09               	movwf	(___fladd@a+3)^0,c
  5460   0041E6  C290  F002         	movff	decide_action@green_r,___fladd@b
  5461   0041EA  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5462   0041EE  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5463   0041F2  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5464   0041F6  ECE4  F027         	call	___fladd	;wreg free
  5465   0041FA  C002  F298         	movff	?___fladd,_decide_action$3180
  5466   0041FE  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  5467   004202  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  5468   004206  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  5469   00420A                     
  5470                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5471   00420A  0EF0               	movlw	240
  5472   00420C  6E06               	movwf	___fladd@a^0,c
  5473   00420E  0EA7               	movlw	167
  5474   004210  6E07               	movwf	(___fladd@a+1)^0,c
  5475   004212  0E46               	movlw	70
  5476   004214  6E08               	movwf	(___fladd@a+2)^0,c
  5477   004216  0EBE               	movlw	190
  5478   004218  6E09               	movwf	(___fladd@a+3)^0,c
  5479   00421A  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5480   00421E  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5481   004222  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5482   004226  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5483   00422A  ECE4  F027         	call	___fladd	;wreg free
  5484   00422E  C002  F29C         	movff	?___fladd,_decide_action$3181
  5485   004232  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  5486   004236  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  5487   00423A  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  5488   00423E                     
  5489                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5490   00423E  0E00               	movlw	0
  5491   004240  0100               	movlb	0	; () banked
  5492   004242  6F64               	movwf	powf@y& (0+255),b
  5493   004244  0E00               	movlw	0
  5494   004246  6F65               	movwf	(powf@y+1)& (0+255),b
  5495   004248  0E00               	movlw	0
  5496   00424A  6F66               	movwf	(powf@y+2)& (0+255),b
  5497   00424C  0E40               	movlw	64
  5498   00424E  6F67               	movwf	(powf@y+3)& (0+255),b
  5499   004250  C298  F060         	movff	_decide_action$3180,powf@x
  5500   004254  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  5501   004258  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  5502   00425C  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  5503   004260  EC6E  F007         	call	_powf	;wreg free
  5504   004264  C060  F2A0         	movff	?_powf,_decide_action$3182
  5505   004268  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  5506   00426C  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  5507   004270  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  5508   004274                     
  5509                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5510   004274  0E00               	movlw	0
  5511   004276  0100               	movlb	0	; () banked
  5512   004278  6F64               	movwf	powf@y& (0+255),b
  5513   00427A  0E00               	movlw	0
  5514   00427C  6F65               	movwf	(powf@y+1)& (0+255),b
  5515   00427E  0E00               	movlw	0
  5516   004280  6F66               	movwf	(powf@y+2)& (0+255),b
  5517   004282  0E40               	movlw	64
  5518   004284  6F67               	movwf	(powf@y+3)& (0+255),b
  5519   004286  C29C  F060         	movff	_decide_action$3181,powf@x
  5520   00428A  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  5521   00428E  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  5522   004292  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  5523   004296  EC6E  F007         	call	_powf	;wreg free
  5524   00429A  C060  F2A4         	movff	?_powf,_decide_action$3183
  5525   00429E  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  5526   0042A2  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  5527   0042A6  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  5528   0042AA                     
  5529                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5530   0042AA  0E21               	movlw	33
  5531   0042AC  6E06               	movwf	___fladd@a^0,c
  5532   0042AE  0EB0               	movlw	176
  5533   0042B0  6E07               	movwf	(___fladd@a+1)^0,c
  5534   0042B2  0EB2               	movlw	178
  5535   0042B4  6E08               	movwf	(___fladd@a+2)^0,c
  5536   0042B6  0EBE               	movlw	190
  5537   0042B8  6E09               	movwf	(___fladd@a+3)^0,c
  5538   0042BA  C294  F002         	movff	decide_action@blue_r,___fladd@b
  5539   0042BE  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5540   0042C2  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5541   0042C6  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5542   0042CA  ECE4  F027         	call	___fladd	;wreg free
  5543   0042CE  C002  F2A8         	movff	?___fladd,_decide_action$3184
  5544   0042D2  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  5545   0042D6  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  5546   0042DA  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  5547   0042DE                     
  5548                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5549   0042DE  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  5550   0042E2  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  5551   0042E6  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  5552   0042EA  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  5553   0042EE  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  5554   0042F2  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  5555   0042F6  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  5556   0042FA  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  5557   0042FE  ECE4  F027         	call	___fladd	;wreg free
  5558   004302  C002  F2AC         	movff	?___fladd,_decide_action$3185
  5559   004306  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  5560   00430A  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  5561   00430E  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  5562   004312                     
  5563                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5564   004312  0E00               	movlw	0
  5565   004314  0100               	movlb	0	; () banked
  5566   004316  6F64               	movwf	powf@y& (0+255),b
  5567   004318  0E00               	movlw	0
  5568   00431A  6F65               	movwf	(powf@y+1)& (0+255),b
  5569   00431C  0E00               	movlw	0
  5570   00431E  6F66               	movwf	(powf@y+2)& (0+255),b
  5571   004320  0E40               	movlw	64
  5572   004322  6F67               	movwf	(powf@y+3)& (0+255),b
  5573   004324  C2A8  F060         	movff	_decide_action$3184,powf@x
  5574   004328  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  5575   00432C  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  5576   004330  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  5577   004334  EC6E  F007         	call	_powf	;wreg free
  5578   004338  C060  F2B0         	movff	?_powf,_decide_action$3186
  5579   00433C  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  5580   004340  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  5581   004344  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  5582   004348                     
  5583                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5584   004348  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  5585   00434C  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  5586   004350  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  5587   004354  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  5588   004358  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  5589   00435C  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  5590   004360  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  5591   004364  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  5592   004368  ECE4  F027         	call	___fladd	;wreg free
  5593   00436C  C002  F012         	movff	?___fladd,sqrtf@x
  5594   004370  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5595   004374  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5596   004378  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5597   00437C  EC59  F02C         	call	_sqrtf	;wreg free
  5598   004380  C012  F272         	movff	?_sqrtf,decide_action@rgb_comp+24
  5599   004384  C013  F273         	movff	?_sqrtf+1,decide_action@rgb_comp+25
  5600   004388  C014  F274         	movff	?_sqrtf+2,decide_action@rgb_comp+26
  5601   00438C  C015  F275         	movff	?_sqrtf+3,decide_action@rgb_comp+27
  5602   004390                     
  5603                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5604   004390  0EA8               	movlw	168
  5605   004392  6E06               	movwf	___fladd@a^0,c
  5606   004394  0EC6               	movlw	198
  5607   004396  6E07               	movwf	(___fladd@a+1)^0,c
  5608   004398  0ECB               	movlw	203
  5609   00439A  6E08               	movwf	(___fladd@a+2)^0,c
  5610   00439C  0EBE               	movlw	190
  5611   00439E  6E09               	movwf	(___fladd@a+3)^0,c
  5612   0043A0  C290  F002         	movff	decide_action@green_r,___fladd@b
  5613   0043A4  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5614   0043A8  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5615   0043AC  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5616   0043B0  ECE4  F027         	call	___fladd	;wreg free
  5617   0043B4  C002  F298         	movff	?___fladd,_decide_action$3180
  5618   0043B8  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  5619   0043BC  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  5620   0043C0  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  5621   0043C4                     
  5622                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5623   0043C4  0EF4               	movlw	244
  5624   0043C6  6E06               	movwf	___fladd@a^0,c
  5625   0043C8  0EFD               	movlw	253
  5626   0043CA  6E07               	movwf	(___fladd@a+1)^0,c
  5627   0043CC  0E94               	movlw	148
  5628   0043CE  6E08               	movwf	(___fladd@a+2)^0,c
  5629   0043D0  0EBE               	movlw	190
  5630   0043D2  6E09               	movwf	(___fladd@a+3)^0,c
  5631   0043D4  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5632   0043D8  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5633   0043DC  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5634   0043E0  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5635   0043E4  ECE4  F027         	call	___fladd	;wreg free
  5636   0043E8  C002  F29C         	movff	?___fladd,_decide_action$3181
  5637   0043EC  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  5638   0043F0  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  5639   0043F4  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  5640   0043F8                     
  5641                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5642   0043F8  0E00               	movlw	0
  5643   0043FA  0100               	movlb	0	; () banked
  5644   0043FC  6F64               	movwf	powf@y& (0+255),b
  5645   0043FE  0E00               	movlw	0
  5646   004400  6F65               	movwf	(powf@y+1)& (0+255),b
  5647   004402  0E00               	movlw	0
  5648   004404  6F66               	movwf	(powf@y+2)& (0+255),b
  5649   004406  0E40               	movlw	64
  5650   004408  6F67               	movwf	(powf@y+3)& (0+255),b
  5651   00440A  C298  F060         	movff	_decide_action$3180,powf@x
  5652   00440E  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  5653   004412  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  5654   004416  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  5655   00441A  EC6E  F007         	call	_powf	;wreg free
  5656   00441E  C060  F2A0         	movff	?_powf,_decide_action$3182
  5657   004422  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  5658   004426  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  5659   00442A  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  5660   00442E                     
  5661                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5662   00442E  0E00               	movlw	0
  5663   004430  0100               	movlb	0	; () banked
  5664   004432  6F64               	movwf	powf@y& (0+255),b
  5665   004434  0E00               	movlw	0
  5666   004436  6F65               	movwf	(powf@y+1)& (0+255),b
  5667   004438  0E00               	movlw	0
  5668   00443A  6F66               	movwf	(powf@y+2)& (0+255),b
  5669   00443C  0E40               	movlw	64
  5670   00443E  6F67               	movwf	(powf@y+3)& (0+255),b
  5671   004440  C29C  F060         	movff	_decide_action$3181,powf@x
  5672   004444  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  5673   004448  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  5674   00444C  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  5675   004450  EC6E  F007         	call	_powf	;wreg free
  5676   004454  C060  F2A4         	movff	?_powf,_decide_action$3183
  5677   004458  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  5678   00445C  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  5679   004460  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  5680   004464                     
  5681                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5682   004464  0E64               	movlw	100
  5683   004466  6E06               	movwf	___fladd@a^0,c
  5684   004468  0E3B               	movlw	59
  5685   00446A  6E07               	movwf	(___fladd@a+1)^0,c
  5686   00446C  0E9F               	movlw	159
  5687   00446E  6E08               	movwf	(___fladd@a+2)^0,c
  5688   004470  0EBE               	movlw	190
  5689   004472  6E09               	movwf	(___fladd@a+3)^0,c
  5690   004474  C294  F002         	movff	decide_action@blue_r,___fladd@b
  5691   004478  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5692   00447C  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5693   004480  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5694   004484  ECE4  F027         	call	___fladd	;wreg free
  5695   004488  C002  F2A8         	movff	?___fladd,_decide_action$3184
  5696   00448C  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  5697   004490  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  5698   004494  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  5699   004498                     
  5700                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5701   004498  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  5702   00449C  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  5703   0044A0  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  5704   0044A4  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  5705   0044A8  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  5706   0044AC  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  5707   0044B0  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  5708   0044B4  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  5709   0044B8  ECE4  F027         	call	___fladd	;wreg free
  5710   0044BC  C002  F2AC         	movff	?___fladd,_decide_action$3185
  5711   0044C0  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  5712   0044C4  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  5713   0044C8  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  5714   0044CC                     
  5715                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5716   0044CC  0E00               	movlw	0
  5717   0044CE  0100               	movlb	0	; () banked
  5718   0044D0  6F64               	movwf	powf@y& (0+255),b
  5719   0044D2  0E00               	movlw	0
  5720   0044D4  6F65               	movwf	(powf@y+1)& (0+255),b
  5721   0044D6  0E00               	movlw	0
  5722   0044D8  6F66               	movwf	(powf@y+2)& (0+255),b
  5723   0044DA  0E40               	movlw	64
  5724   0044DC  6F67               	movwf	(powf@y+3)& (0+255),b
  5725   0044DE  C2A8  F060         	movff	_decide_action$3184,powf@x
  5726   0044E2  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  5727   0044E6  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  5728   0044EA  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  5729   0044EE  EC6E  F007         	call	_powf	;wreg free
  5730   0044F2  C060  F2B0         	movff	?_powf,_decide_action$3186
  5731   0044F6  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  5732   0044FA  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  5733   0044FE  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  5734   004502                     
  5735                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5736   004502  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  5737   004506  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  5738   00450A  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  5739   00450E  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  5740   004512  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  5741   004516  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  5742   00451A  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  5743   00451E  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  5744   004522  ECE4  F027         	call	___fladd	;wreg free
  5745   004526  C002  F012         	movff	?___fladd,sqrtf@x
  5746   00452A  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5747   00452E  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5748   004532  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5749   004536  EC59  F02C         	call	_sqrtf	;wreg free
  5750   00453A  C012  F276         	movff	?_sqrtf,decide_action@rgb_comp+28
  5751   00453E  C013  F277         	movff	?_sqrtf+1,decide_action@rgb_comp+29
  5752   004542  C014  F278         	movff	?_sqrtf+2,decide_action@rgb_comp+30
  5753   004546  C015  F279         	movff	?_sqrtf+3,decide_action@rgb_comp+31
  5754   00454A                     
  5755                           ;color.c: 172:     action = 0;
  5756   00454A  0E00               	movlw	0
  5757   00454C  0102               	movlb	2	; () banked
  5758   00454E  6F7A               	movwf	decide_action@action& (0+255),b
  5759   004550                     
  5760                           ; BSR set to: 2
  5761                           ;color.c: 173:     for(char i = 0; i < 8; i +=1){
  5762   004550  0E00               	movlw	0
  5763   004552  6F7F               	movwf	decide_action@i& (0+255),b
  5764   004554                     l8741:
  5765                           
  5766                           ; BSR set to: 2
  5767   004554  0E07               	movlw	7
  5768   004556  657F               	cpfsgt	decide_action@i& (0+255),b
  5769   004558  EFB0  F022         	goto	u9201
  5770   00455C  EFB2  F022         	goto	u9200
  5771   004560                     u9201:
  5772   004560  EFB4  F022         	goto	l8745
  5773   004564                     u9200:
  5774   004564  EFE3  F022         	goto	l8753
  5775   004568                     l8745:
  5776                           
  5777                           ; BSR set to: 2
  5778                           ;color.c: 174:         if(rgb_comp[i] < rgb_comp[action]){
  5779   004568  517F               	movf	decide_action@i& (0+255),w,b
  5780   00456A  0D04               	mullw	4
  5781   00456C  0E5A               	movlw	low decide_action@rgb_comp
  5782   00456E  24F3               	addwf	243,w,c
  5783   004570  6ED9               	movwf	fsr2l,c
  5784   004572  0E02               	movlw	high decide_action@rgb_comp
  5785   004574  20F4               	addwfc	prodh,w,c
  5786   004576  6EDA               	movwf	fsr2h,c
  5787   004578  CFDE F04C          	movff	postinc2,___flge@ff1
  5788   00457C  CFDE F04D          	movff	postinc2,___flge@ff1+1
  5789   004580  CFDE F04E          	movff	postinc2,___flge@ff1+2
  5790   004584  CFDE F04F          	movff	postinc2,___flge@ff1+3
  5791   004588  517A               	movf	decide_action@action& (0+255),w,b
  5792   00458A  0D04               	mullw	4
  5793   00458C  0E5A               	movlw	low decide_action@rgb_comp
  5794   00458E  24F3               	addwf	243,w,c
  5795   004590  6ED9               	movwf	fsr2l,c
  5796   004592  0E02               	movlw	high decide_action@rgb_comp
  5797   004594  20F4               	addwfc	prodh,w,c
  5798   004596  6EDA               	movwf	fsr2h,c
  5799   004598  CFDE F050          	movff	postinc2,___flge@ff2
  5800   00459C  CFDE F051          	movff	postinc2,___flge@ff2+1
  5801   0045A0  CFDE F052          	movff	postinc2,___flge@ff2+2
  5802   0045A4  CFDE F053          	movff	postinc2,___flge@ff2+3
  5803   0045A8  EC75  F036         	call	___flge	;wreg free
  5804   0045AC  B0D8               	btfsc	status,0,c
  5805   0045AE  EFDB  F022         	goto	u9211
  5806   0045B2  EFDD  F022         	goto	u9210
  5807   0045B6                     u9211:
  5808   0045B6  EFDF  F022         	goto	l8749
  5809   0045BA                     u9210:
  5810   0045BA                     
  5811                           ;color.c: 175:             action = i;
  5812   0045BA  C27F  F27A         	movff	decide_action@i,decide_action@action
  5813   0045BE                     l8749:
  5814                           
  5815                           ;color.c: 177:     }
  5816   0045BE  0102               	movlb	2	; () banked
  5817   0045C0  2B7F               	incf	decide_action@i& (0+255),f,b
  5818   0045C2  EFAA  F022         	goto	l8741
  5819   0045C6                     l8753:
  5820                           
  5821                           ; BSR set to: 2
  5822                           ;color.c: 180:     color_writetoaddr(0x01, 0xFF);
  5823   0045C6  0EFF               	movlw	255
  5824   0045C8  6E04               	movwf	color_writetoaddr@value^0,c
  5825   0045CA  0E01               	movlw	1
  5826   0045CC  EC02  F040         	call	_color_writetoaddr
  5827                           
  5828                           ;color.c: 181:     color_writetoaddr(0x03, 0xFF);
  5829   0045D0  0EFF               	movlw	255
  5830   0045D2  6E04               	movwf	color_writetoaddr@value^0,c
  5831   0045D4  0E03               	movlw	3
  5832   0045D6  EC02  F040         	call	_color_writetoaddr
  5833   0045DA                     
  5834                           ;color.c: 183:     return action;
  5835   0045DA  0102               	movlb	2	; () banked
  5836   0045DC  517A               	movf	decide_action@action& (0+255),w,b
  5837   0045DE                     
  5838                           ; BSR set to: 2
  5839   0045DE  0012               	return		;funcret
  5840   0045E0                     __end_of_decide_action:
  5841                           	callstack 0
  5842                           
  5843 ;; *************** function _sprintf *****************
  5844 ;; Defined at:
  5845 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  s               2   63[BANK0 ] PTR unsigned char 
  5848 ;;		 -> main@blue_val(20), main@green_val(20), main@red_val(20), main@clear_val(20), 
  5849 ;;		 -> decide_action@blue_val(20), decide_action@green_val(20), decide_action@red_val(20), 
  5850 ;;  fmt             1   65[BANK0 ] PTR const unsigned char 
  5851 ;;		 -> STR_7(15), STR_6(14), STR_5(14), STR_4(12), 
  5852 ;;		 -> STR_3(14), STR_2(15), STR_1(13), 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;  f              12   71[BANK0 ] struct _IO_FILE
  5855 ;;  ret             2    0        int 
  5856 ;;  ap              1   70[BANK0 ] PTR void [1]
  5857 ;;		 -> ?_sprintf(2), 
  5858 ;; Return value:  Size  Location     Type
  5859 ;;                  2   63[BANK0 ] int 
  5860 ;; Registers used:
  5861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5867 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5868 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5870 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5871 ;;Total ram usage:       20 bytes
  5872 ;; Hardware stack levels used: 1
  5873 ;; Hardware stack levels required when called: 9
  5874 ;; This function calls:
  5875 ;;		_vfprintf
  5876 ;; This function is called by:
  5877 ;;		_decide_action
  5878 ;;		_main
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text18
  5883   007E02                     __ptext18:
  5884                           	callstack 0
  5885   007E02                     _sprintf:
  5886                           	callstack 21
  5887   007E02  0EA2               	movlw	low (?_sprintf+3)
  5888   007E04  0100               	movlb	0	; () banked
  5889   007E06  6FA6               	movwf	sprintf@ap& (0+255),b
  5890   007E08  C09F  F0A7         	movff	sprintf@s,sprintf@f
  5891   007E0C  C0A0  F0A8         	movff	sprintf@s+1,sprintf@f+1
  5892   007E10                     
  5893                           ; BSR set to: 0
  5894   007E10  0E00               	movlw	0
  5895   007E12  6FAB               	movwf	(sprintf@f+4)& (0+255),b
  5896   007E14  0E00               	movlw	0
  5897   007E16  6FAA               	movwf	(sprintf@f+3)& (0+255),b
  5898   007E18                     
  5899                           ; BSR set to: 0
  5900   007E18  0E00               	movlw	0
  5901   007E1A  6FB2               	movwf	(sprintf@f+11)& (0+255),b
  5902   007E1C  0E00               	movlw	0
  5903   007E1E  6FB1               	movwf	(sprintf@f+10)& (0+255),b
  5904   007E20                     
  5905                           ; BSR set to: 0
  5906   007E20  0EA7               	movlw	low sprintf@f
  5907   007E22  6F9C               	movwf	vfprintf@fp& (0+255),b
  5908   007E24  C0A1  F09D         	movff	sprintf@fmt,vfprintf@fmt
  5909   007E28  0EA6               	movlw	low sprintf@ap
  5910   007E2A  6F9E               	movwf	vfprintf@ap& (0+255),b
  5911   007E2C  EC9A  F03E         	call	_vfprintf	;wreg free
  5912   007E30  0100               	movlb	0	; () banked
  5913   007E32  51AA               	movf	(sprintf@f+3)& (0+255),w,b
  5914   007E34  259F               	addwf	sprintf@s& (0+255),w,b
  5915   007E36  6ED9               	movwf	fsr2l,c
  5916   007E38  51AB               	movf	(sprintf@f+4)& (0+255),w,b
  5917   007E3A  21A0               	addwfc	(sprintf@s+1)& (0+255),w,b
  5918   007E3C  6EDA               	movwf	fsr2h,c
  5919   007E3E  6ADF               	clrf	indf2,c
  5920   007E40                     
  5921                           ; BSR set to: 0
  5922   007E40  0012               	return		;funcret
  5923   007E42                     __end_of_sprintf:
  5924                           	callstack 0
  5925                           
  5926 ;; *************** function _vfprintf *****************
  5927 ;; Defined at:
  5928 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  fp              1   60[BANK0 ] PTR struct _IO_FILE
  5931 ;;		 -> sprintf@f(12), 
  5932 ;;  fmt             1   61[BANK0 ] PTR const unsigned char 
  5933 ;;		 -> STR_7(15), STR_6(14), STR_5(14), STR_4(12), 
  5934 ;;		 -> STR_3(14), STR_2(15), STR_1(13), 
  5935 ;;  ap              1   62[BANK0 ] PTR PTR void 
  5936 ;;		 -> sprintf@ap(1), 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  cfmt            1   91[COMRAM] PTR unsigned char 
  5939 ;;		 -> STR_7(15), STR_6(14), STR_5(14), STR_4(12), 
  5940 ;;		 -> STR_3(14), STR_2(15), STR_1(13), 
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  2   60[BANK0 ] int 
  5943 ;; Registers used:
  5944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5950 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5953 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5954 ;;Total ram usage:        4 bytes
  5955 ;; Hardware stack levels used: 1
  5956 ;; Hardware stack levels required when called: 8
  5957 ;; This function calls:
  5958 ;;		_vfpfcnvrt
  5959 ;; This function is called by:
  5960 ;;		_sprintf
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text19
  5965   007D34                     __ptext19:
  5966                           	callstack 0
  5967   007D34                     _vfprintf:
  5968                           	callstack 21
  5969   007D34                     
  5970                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  5971   007D34  C09D  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  5972                           
  5973                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5974   007D38  EFA7  F03E         	goto	l8093
  5975   007D3C                     l8091:
  5976                           
  5977                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5978   007D3C  C09C  F092         	movff	vfprintf@fp,vfpfcnvrt@fp
  5979   007D40  0E5C               	movlw	low vfprintf@cfmt
  5980   007D42  0100               	movlb	0	; () banked
  5981   007D44  6F93               	movwf	vfpfcnvrt@fmt& (0+255),b
  5982   007D46  C09E  F094         	movff	vfprintf@ap,vfpfcnvrt@ap
  5983   007D4A  EC15  F030         	call	_vfpfcnvrt	;wreg free
  5984   007D4E                     l8093:
  5985                           
  5986                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5987   007D4E  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  5988   007D52                     	if	1	;There is more than 1 active tblptr byte
  5989   007D52  0E0E               	movlw	high __smallconst
  5990   007D54  6EF7               	movwf	tblptrh,c
  5991   007D56                     	endif
  5992   007D56                     	if	0	;tblptru may be non-zero
  5993   007D56                     	endif
  5994   007D56                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5995   007D56  0E00               	movlw	low (__smallconst shr (0+16))
  5996   007D58  6EF8               	movwf	tblptru,c
  5997   007D5A                     	endif
  5998   007D5A  0008               	tblrd		*
  5999   007D5C  50F5               	movf	tablat,w,c
  6000   007D5E  0900               	iorlw	0
  6001   007D60  A4D8               	btfss	status,2,c
  6002   007D62  EFB5  F03E         	goto	u8511
  6003   007D66  EFB7  F03E         	goto	u8510
  6004   007D6A                     u8511:
  6005   007D6A  EF9E  F03E         	goto	l8091
  6006   007D6E                     u8510:
  6007   007D6E                     
  6008                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6009   007D6E  0E00               	movlw	0
  6010   007D70  0100               	movlb	0	; () banked
  6011   007D72  6F9D               	movwf	(?_vfprintf+1)& (0+255),b
  6012   007D74  0E00               	movlw	0
  6013   007D76  6F9C               	movwf	?_vfprintf& (0+255),b
  6014   007D78                     
  6015                           ; BSR set to: 0
  6016   007D78  0012               	return		;funcret
  6017   007D7A                     __end_of_vfprintf:
  6018                           	callstack 0
  6019                           
  6020 ;; *************** function _vfpfcnvrt *****************
  6021 ;; Defined at:
  6022 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  fp              1   50[BANK0 ] PTR struct _IO_FILE
  6025 ;;		 -> sprintf@f(12), 
  6026 ;;  fmt             1   51[BANK0 ] PTR PTR unsigned char 
  6027 ;;		 -> vfprintf@cfmt(1), 
  6028 ;;  ap              1   52[BANK0 ] PTR PTR void 
  6029 ;;		 -> sprintf@ap(1), 
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;  convarg         4   54[BANK0 ] struct .
  6032 ;;  c               1   59[BANK0 ] unsigned char 
  6033 ;;  cp              1   58[BANK0 ] PTR unsigned char 
  6034 ;;		 -> STR_7(15), STR_6(14), STR_5(14), STR_4(12), 
  6035 ;;		 -> STR_3(14), STR_2(15), STR_1(13), 
  6036 ;;  done            1   53[BANK0 ] _Bool 
  6037 ;; Return value:  Size  Location     Type
  6038 ;;                  1    wreg      void 
  6039 ;; Registers used:
  6040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6046 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6047 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6048 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6049 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6050 ;;Total ram usage:       12 bytes
  6051 ;; Hardware stack levels used: 1
  6052 ;; Hardware stack levels required when called: 7
  6053 ;; This function calls:
  6054 ;;		___awdiv
  6055 ;;		___awmod
  6056 ;;		_abs
  6057 ;;		_efgtoa
  6058 ;;		_fputc
  6059 ;; This function is called by:
  6060 ;;		_vfprintf
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text20
  6065   00602A                     __ptext20:
  6066                           	callstack 0
  6067   00602A                     _vfpfcnvrt:
  6068                           	callstack 21
  6069   00602A                     
  6070                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6071   00602A  0100               	movlb	0	; () banked
  6072   00602C  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6073   00602E  6ED9               	movwf	fsr2l,c
  6074   006030  6ADA               	clrf	fsr2h,c
  6075   006032  CFDF FFF6          	movff	indf2,tblptrl
  6076   006036                     	if	1	;There is more than 1 active tblptr byte
  6077   006036  0E0E               	movlw	high __smallconst
  6078   006038  6EF7               	movwf	tblptrh,c
  6079   00603A                     	endif
  6080   00603A                     	if	0	;tblptru may be non-zero
  6081   00603A                     	endif
  6082   00603A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6083   00603A  0E00               	movlw	low (__smallconst shr (0+16))
  6084   00603C  6EF8               	movwf	tblptru,c
  6085   00603E                     	endif
  6086   00603E  0008               	tblrd		*
  6087   006040  50F5               	movf	tablat,w,c
  6088   006042  0A25               	xorlw	37
  6089   006044  A4D8               	btfss	status,2,c
  6090   006046  EF27  F030         	goto	u8401
  6091   00604A  EF29  F030         	goto	u8400
  6092   00604E                     u8401:
  6093   00604E  EFA8  F031         	goto	l8071
  6094   006052                     u8400:
  6095   006052                     
  6096                           ; BSR set to: 0
  6097                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6098   006052  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6099   006054  6ED9               	movwf	fsr2l,c
  6100   006056  6ADA               	clrf	fsr2h,c
  6101   006058  2ADF               	incf	indf2,f,c
  6102   00605A                     
  6103                           ; BSR set to: 0
  6104                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6105   00605A  0E00               	movlw	0
  6106   00605C  6FDA               	movwf	(_width+1)& (0+255),b
  6107   00605E  0E00               	movlw	0
  6108   006060  6FD9               	movwf	_width& (0+255),b
  6109   006062  C0D9  F0DD         	movff	_width,_flags
  6110   006066                     
  6111                           ; BSR set to: 0
  6112                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6113   006066  69DB               	setf	_prec& (0+255),b
  6114   006068  69DC               	setf	(_prec+1)& (0+255),b
  6115   00606A                     
  6116                           ; BSR set to: 0
  6117                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6118   00606A  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6119   00606C  6ED9               	movwf	fsr2l,c
  6120   00606E  6ADA               	clrf	fsr2h,c
  6121   006070  50DF               	movf	indf2,w,c
  6122   006072  6F9A               	movwf	vfpfcnvrt@cp& (0+255),b
  6123   006074                     
  6124                           ; BSR set to: 0
  6125                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6126   006074  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6127   006078                     	if	1	;There is more than 1 active tblptr byte
  6128   006078  0E0E               	movlw	high __smallconst
  6129   00607A  6EF7               	movwf	tblptrh,c
  6130   00607C                     	endif
  6131   00607C                     	if	0	;tblptru may be non-zero
  6132   00607C                     	endif
  6133   00607C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6134   00607C  0E00               	movlw	low (__smallconst shr (0+16))
  6135   00607E  6EF8               	movwf	tblptru,c
  6136   006080                     	endif
  6137   006080  0008               	tblrd		*
  6138   006082  50F5               	movf	tablat,w,c
  6139   006084  0A64               	xorlw	100
  6140   006086  B4D8               	btfsc	status,2,c
  6141   006088  EF48  F030         	goto	u8411
  6142   00608C  EF4A  F030         	goto	u8410
  6143   006090                     u8411:
  6144   006090  EF5A  F030         	goto	l8007
  6145   006094                     u8410:
  6146   006094                     
  6147                           ; BSR set to: 0
  6148   006094  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6149   006098                     	if	1	;There is more than 1 active tblptr byte
  6150   006098  0E0E               	movlw	high __smallconst
  6151   00609A  6EF7               	movwf	tblptrh,c
  6152   00609C                     	endif
  6153   00609C                     	if	0	;tblptru may be non-zero
  6154   00609C                     	endif
  6155   00609C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6156   00609C  0E00               	movlw	low (__smallconst shr (0+16))
  6157   00609E  6EF8               	movwf	tblptru,c
  6158   0060A0                     	endif
  6159   0060A0  0008               	tblrd		*
  6160   0060A2  50F5               	movf	tablat,w,c
  6161   0060A4  0A69               	xorlw	105
  6162   0060A6  A4D8               	btfss	status,2,c
  6163   0060A8  EF58  F030         	goto	u8421
  6164   0060AC  EF5A  F030         	goto	u8420
  6165   0060B0                     u8421:
  6166   0060B0  EFE8  F030         	goto	l8033
  6167   0060B4                     u8420:
  6168   0060B4                     l8007:
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6172   0060B4  5194               	movf	vfpfcnvrt@ap& (0+255),w,b
  6173   0060B6  6ED9               	movwf	fsr2l,c
  6174   0060B8  6ADA               	clrf	fsr2h,c
  6175   0060BA  0E02               	movlw	2
  6176   0060BC  26DF               	addwf	indf2,f,c
  6177   0060BE  5CDF               	subwf	indf2,w,c
  6178   0060C0  6ED9               	movwf	fsr2l,c
  6179   0060C2  6ADA               	clrf	fsr2h,c
  6180   0060C4  CFDE F096          	movff	postinc2,vfpfcnvrt@convarg
  6181   0060C8  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg+1
  6182   0060CC                     
  6183                           ; BSR set to: 0
  6184                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6185   0060CC  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6186   0060CE  6ED9               	movwf	fsr2l,c
  6187   0060D0  6ADA               	clrf	fsr2h,c
  6188   0060D2  299A               	incf	vfpfcnvrt@cp& (0+255),w,b
  6189   0060D4  6EDF               	movwf	indf2,c
  6190   0060D6                     
  6191                           ; BSR set to: 0
  6192                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  6193   0060D6  0E50               	movlw	80
  6194   0060D8  6F9B               	movwf	vfpfcnvrt@c& (0+255),b
  6195                           
  6196                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  6197   0060DA  BF97               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  6198   0060DC  EF72  F030         	goto	u8431
  6199   0060E0  EF75  F030         	goto	u8430
  6200   0060E4                     u8431:
  6201   0060E4  0E01               	movlw	1
  6202   0060E6  EF76  F030         	goto	u8440
  6203   0060EA                     u8430:
  6204   0060EA  0E00               	movlw	0
  6205   0060EC                     u8440:
  6206   0060EC  6F95               	movwf	vfpfcnvrt@done& (0+255),b
  6207   0060EE                     l8013:
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  6211   0060EE  079B               	decf	vfpfcnvrt@c& (0+255),f,b
  6212   0060F0  0E00               	movlw	low _dbuf
  6213   0060F2  259B               	addwf	vfpfcnvrt@c& (0+255),w,b
  6214   0060F4  6ED9               	movwf	fsr2l,c
  6215   0060F6  6ADA               	clrf	fsr2h,c
  6216   0060F8  0E04               	movlw	high _dbuf
  6217   0060FA  22DA               	addwfc	fsr2h,f,c
  6218   0060FC  C096  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
  6219   006100  C097  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  6220   006104  0E00               	movlw	0
  6221   006106  6E05               	movwf	(___awmod@divisor+1)^0,c
  6222   006108  0E0A               	movlw	10
  6223   00610A  6E04               	movwf	___awmod@divisor^0,c
  6224   00610C  EC5C  F03B         	call	___awmod	;wreg free
  6225   006110  C002  F008         	movff	?___awmod,abs@a
  6226   006114  C003  F009         	movff	?___awmod+1,abs@a+1
  6227   006118  EC7C  F03F         	call	_abs	;wreg free
  6228   00611C  5008               	movf	?_abs^0,w,c
  6229   00611E  0F30               	addlw	48
  6230   006120  6EDF               	movwf	indf2,c
  6231   006122                     
  6232                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  6233   006122  C096  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  6234   006126  C097  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  6235   00612A  0E00               	movlw	0
  6236   00612C  6E05               	movwf	(___awdiv@divisor+1)^0,c
  6237   00612E  0E0A               	movlw	10
  6238   006130  6E04               	movwf	___awdiv@divisor^0,c
  6239   006132  EC3F  F03A         	call	___awdiv	;wreg free
  6240   006136  C002  F096         	movff	?___awdiv,vfpfcnvrt@convarg
  6241   00613A  C003  F097         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  6242   00613E                     
  6243                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  6244   00613E  0100               	movlb	0	; () banked
  6245   006140  5196               	movf	vfpfcnvrt@convarg& (0+255),w,b
  6246   006142  1197               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  6247   006144  B4D8               	btfsc	status,2,c
  6248   006146  EFA7  F030         	goto	u8451
  6249   00614A  EFA9  F030         	goto	u8450
  6250   00614E                     u8451:
  6251   00614E  EFB1  F030         	goto	l8021
  6252   006152                     u8450:
  6253   006152                     
  6254                           ; BSR set to: 0
  6255   006152  519B               	movf	vfpfcnvrt@c& (0+255),w,b
  6256   006154  A4D8               	btfss	status,2,c
  6257   006156  EFAF  F030         	goto	u8461
  6258   00615A  EFB1  F030         	goto	u8460
  6259   00615E                     u8461:
  6260   00615E  EF77  F030         	goto	l8013
  6261   006162                     u8460:
  6262   006162                     l8021:
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  6266   006162  519B               	movf	vfpfcnvrt@c& (0+255),w,b
  6267   006164  B4D8               	btfsc	status,2,c
  6268   006166  EFB7  F030         	goto	u8471
  6269   00616A  EFB9  F030         	goto	u8470
  6270   00616E                     u8471:
  6271   00616E  EFDD  F030         	goto	l8031
  6272   006172                     u8470:
  6273   006172                     
  6274                           ; BSR set to: 0
  6275   006172  5195               	movf	vfpfcnvrt@done& (0+255),w,b
  6276   006174  B4D8               	btfsc	status,2,c
  6277   006176  EFBF  F030         	goto	u8481
  6278   00617A  EFC1  F030         	goto	u8480
  6279   00617E                     u8481:
  6280   00617E  EFDD  F030         	goto	l8031
  6281   006182                     u8480:
  6282   006182                     
  6283                           ; BSR set to: 0
  6284                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  6285   006182  079B               	decf	vfpfcnvrt@c& (0+255),f,b
  6286   006184  0E00               	movlw	low _dbuf
  6287   006186  259B               	addwf	vfpfcnvrt@c& (0+255),w,b
  6288   006188  6ED9               	movwf	fsr2l,c
  6289   00618A  6ADA               	clrf	fsr2h,c
  6290   00618C  0E04               	movlw	high _dbuf
  6291   00618E  22DA               	addwfc	fsr2h,f,c
  6292   006190  0E2D               	movlw	45
  6293   006192  6EDF               	movwf	indf2,c
  6294   006194  EFDD  F030         	goto	l8031
  6295   006198                     l8027:
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  6299   006198  0E00               	movlw	low _dbuf
  6300   00619A  259B               	addwf	vfpfcnvrt@c& (0+255),w,b
  6301   00619C  6ED9               	movwf	fsr2l,c
  6302   00619E  6ADA               	clrf	fsr2h,c
  6303   0061A0  0E04               	movlw	high _dbuf
  6304   0061A2  22DA               	addwfc	fsr2h,f,c
  6305   0061A4  50DF               	movf	indf2,w,c
  6306   0061A6  6E5A               	movwf	??_vfpfcnvrt^0,c
  6307   0061A8  505A               	movf	??_vfpfcnvrt^0,w,c
  6308   0061AA  6E02               	movwf	fputc@c^0,c
  6309   0061AC  6A03               	clrf	(fputc@c+1)^0,c
  6310   0061AE  C092  F004         	movff	vfpfcnvrt@fp,fputc@fp
  6311   0061B2  ECFF  F03A         	call	_fputc	;wreg free
  6312   0061B6  0100               	movlb	0	; () banked
  6313   0061B8  2B9B               	incf	vfpfcnvrt@c& (0+255),f,b
  6314   0061BA                     l8031:
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  6318   0061BA  0E50               	movlw	80
  6319   0061BC  199B               	xorwf	vfpfcnvrt@c& (0+255),w,b
  6320   0061BE  A4D8               	btfss	status,2,c
  6321   0061C0  EFE4  F030         	goto	u8491
  6322   0061C4  EFE6  F030         	goto	u8490
  6323   0061C8                     u8491:
  6324   0061C8  EFCC  F030         	goto	l8027
  6325   0061CC                     u8490:
  6326   0061CC  EFBB  F031         	goto	l1338
  6327   0061D0                     l8033:
  6328                           
  6329                           ; BSR set to: 0
  6330                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  6331   0061D0  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6332   0061D2  6ED9               	movwf	fsr2l,c
  6333   0061D4  6ADA               	clrf	fsr2h,c
  6334   0061D6  50DF               	movf	indf2,w,c
  6335   0061D8  6F9A               	movwf	vfpfcnvrt@cp& (0+255),b
  6336   0061DA                     
  6337                           ; BSR set to: 0
  6338                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  6339   0061DA  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6340   0061DE                     	if	1	;There is more than 1 active tblptr byte
  6341   0061DE  0E0E               	movlw	high __smallconst
  6342   0061E0  6EF7               	movwf	tblptrh,c
  6343   0061E2                     	endif
  6344   0061E2                     	if	0	;tblptru may be non-zero
  6345   0061E2                     	endif
  6346   0061E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6347   0061E2  0E00               	movlw	low (__smallconst shr (0+16))
  6348   0061E4  6EF8               	movwf	tblptru,c
  6349   0061E6                     	endif
  6350   0061E6  0008               	tblrd		*
  6351   0061E8  CFF5 F09B          	movff	tablat,vfpfcnvrt@c
  6352                           
  6353                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  6354   0061EC  EF03  F031         	goto	l8045
  6355   0061F0                     l8037:
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  6359   0061F0  2B9A               	incf	vfpfcnvrt@cp& (0+255),f,b
  6360                           
  6361                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  6362   0061F2  EF1C  F031         	goto	l8047
  6363   0061F6                     l8039:
  6364                           
  6365                           ; BSR set to: 0
  6366                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  6367   0061F6  0E6C               	movlw	108
  6368   0061F8  6F9B               	movwf	vfpfcnvrt@c& (0+255),b
  6369                           
  6370                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  6371   0061FA  EF1C  F031         	goto	l8047
  6372   0061FE                     l8041:
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  6376   0061FE  0E00               	movlw	0
  6377   006200  6F9B               	movwf	vfpfcnvrt@c& (0+255),b
  6378                           
  6379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  6380   006202  EF1C  F031         	goto	l8047
  6381   006206                     l8045:
  6382                           
  6383                           ; BSR set to: 0
  6384   006206  519B               	movf	vfpfcnvrt@c& (0+255),w,b
  6385   006208  6E5A               	movwf	??_vfpfcnvrt^0,c
  6386   00620A  6A5B               	clrf	(??_vfpfcnvrt+1)^0,c
  6387                           
  6388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6389                           ; Switch size 1, requested type "simple"
  6390                           ; Number of cases is 1, Range of values is 0 to 0
  6391                           ; switch strategies available:
  6392                           ; Name         Instructions Cycles
  6393                           ; simple_byte            4     3 (average)
  6394                           ;	Chosen strategy is simple_byte
  6395   00620C  505B               	movf	(??_vfpfcnvrt+1)^0,w,c
  6396   00620E  0A00               	xorlw	0	; case 0
  6397   006210  B4D8               	btfsc	status,2,c
  6398   006212  EF0D  F031         	goto	l9113
  6399   006216  EFFF  F030         	goto	l8041
  6400   00621A                     l9113:
  6401                           
  6402                           ; BSR set to: 0
  6403                           ; Switch size 1, requested type "simple"
  6404                           ; Number of cases is 3, Range of values is 76 to 108
  6405                           ; switch strategies available:
  6406                           ; Name         Instructions Cycles
  6407                           ; simple_byte           10     6 (average)
  6408                           ;	Chosen strategy is simple_byte
  6409   00621A  505A               	movf	??_vfpfcnvrt^0,w,c
  6410   00621C  0A4C               	xorlw	76	; case 76
  6411   00621E  B4D8               	btfsc	status,2,c
  6412   006220  EFF8  F030         	goto	l8037
  6413   006224  0A2A               	xorlw	42	; case 102
  6414   006226  B4D8               	btfsc	status,2,c
  6415   006228  EFFB  F030         	goto	l8039
  6416   00622C  0A0A               	xorlw	10	; case 108
  6417   00622E  B4D8               	btfsc	status,2,c
  6418   006230  EFF8  F030         	goto	l8037
  6419   006234  EFFF  F030         	goto	l8041
  6420   006238                     l8047:
  6421                           
  6422                           ; BSR set to: 0
  6423   006238  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6424   00623C                     	if	1	;There is more than 1 active tblptr byte
  6425   00623C  0E0E               	movlw	high __smallconst
  6426   00623E  6EF7               	movwf	tblptrh,c
  6427   006240                     	endif
  6428   006240                     	if	0	;tblptru may be non-zero
  6429   006240                     	endif
  6430   006240                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6431   006240  0E00               	movlw	low (__smallconst shr (0+16))
  6432   006242  6EF8               	movwf	tblptru,c
  6433   006244                     	endif
  6434   006244  0008               	tblrd		*
  6435   006246  50F5               	movf	tablat,w,c
  6436   006248  0A66               	xorlw	102
  6437   00624A  A4D8               	btfss	status,2,c
  6438   00624C  EF2A  F031         	goto	u8501
  6439   006250  EF2C  F031         	goto	u8500
  6440   006254                     u8501:
  6441   006254  EFA1  F031         	goto	l8067
  6442   006258                     u8500:
  6443   006258  EF56  F031         	goto	l8055
  6444   00625C                     l8049:
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6448   00625C  5194               	movf	vfpfcnvrt@ap& (0+255),w,b
  6449   00625E  6ED9               	movwf	fsr2l,c
  6450   006260  6ADA               	clrf	fsr2h,c
  6451   006262  CFDF F05A          	movff	indf2,??_vfpfcnvrt
  6452   006266  0E04               	movlw	4
  6453   006268  26DF               	addwf	indf2,f,c
  6454   00626A  505A               	movf	??_vfpfcnvrt^0,w,c
  6455   00626C  6ED9               	movwf	fsr2l,c
  6456   00626E  6ADA               	clrf	fsr2h,c
  6457   006270  CFDE F096          	movff	postinc2,vfpfcnvrt@convarg
  6458   006274  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg+1
  6459   006278  CFDE F098          	movff	postinc2,vfpfcnvrt@convarg+2
  6460   00627C  CFDE F099          	movff	postinc2,vfpfcnvrt@convarg+3
  6461                           
  6462                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  6463   006280  EF6B  F031         	goto	l8057
  6464   006284                     l8051:
  6465                           
  6466                           ; BSR set to: 0
  6467                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6468   006284  5194               	movf	vfpfcnvrt@ap& (0+255),w,b
  6469   006286  6ED9               	movwf	fsr2l,c
  6470   006288  6ADA               	clrf	fsr2h,c
  6471   00628A  CFDF F05A          	movff	indf2,??_vfpfcnvrt
  6472   00628E  0E04               	movlw	4
  6473   006290  26DF               	addwf	indf2,f,c
  6474   006292  505A               	movf	??_vfpfcnvrt^0,w,c
  6475   006294  6ED9               	movwf	fsr2l,c
  6476   006296  6ADA               	clrf	fsr2h,c
  6477   006298  CFDE F096          	movff	postinc2,vfpfcnvrt@convarg
  6478   00629C  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg+1
  6479   0062A0  CFDE F098          	movff	postinc2,vfpfcnvrt@convarg+2
  6480   0062A4  CFDE F099          	movff	postinc2,vfpfcnvrt@convarg+3
  6481                           
  6482                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  6483   0062A8  EF6B  F031         	goto	l8057
  6484   0062AC                     l8055:
  6485                           
  6486                           ; BSR set to: 0
  6487   0062AC  519B               	movf	vfpfcnvrt@c& (0+255),w,b
  6488   0062AE  6E5A               	movwf	??_vfpfcnvrt^0,c
  6489   0062B0  6A5B               	clrf	(??_vfpfcnvrt+1)^0,c
  6490                           
  6491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6492                           ; Switch size 1, requested type "simple"
  6493                           ; Number of cases is 1, Range of values is 0 to 0
  6494                           ; switch strategies available:
  6495                           ; Name         Instructions Cycles
  6496                           ; simple_byte            4     3 (average)
  6497                           ;	Chosen strategy is simple_byte
  6498   0062B2  505B               	movf	(??_vfpfcnvrt+1)^0,w,c
  6499   0062B4  0A00               	xorlw	0	; case 0
  6500   0062B6  B4D8               	btfsc	status,2,c
  6501   0062B8  EF60  F031         	goto	l9115
  6502   0062BC  EF6B  F031         	goto	l8057
  6503   0062C0                     l9115:
  6504                           
  6505                           ; BSR set to: 0
  6506                           ; Switch size 1, requested type "simple"
  6507                           ; Number of cases is 2, Range of values is 76 to 108
  6508                           ; switch strategies available:
  6509                           ; Name         Instructions Cycles
  6510                           ; simple_byte            7     4 (average)
  6511                           ;	Chosen strategy is simple_byte
  6512   0062C0  505A               	movf	??_vfpfcnvrt^0,w,c
  6513   0062C2  0A4C               	xorlw	76	; case 76
  6514   0062C4  B4D8               	btfsc	status,2,c
  6515   0062C6  EF42  F031         	goto	l8051
  6516   0062CA  0A20               	xorlw	32	; case 108
  6517   0062CC  B4D8               	btfsc	status,2,c
  6518   0062CE  EF2E  F031         	goto	l8049
  6519   0062D2  EF6B  F031         	goto	l8057
  6520   0062D6                     l8057:
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  6524   0062D6  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6525   0062D8  6ED9               	movwf	fsr2l,c
  6526   0062DA  6ADA               	clrf	fsr2h,c
  6527   0062DC  299A               	incf	vfpfcnvrt@cp& (0+255),w,b
  6528   0062DE  6EDF               	movwf	indf2,c
  6529                           
  6530                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  6531   0062E0  EF89  F031         	goto	l8065
  6532   0062E4                     l8059:
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  6536   0062E4  C092  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  6537   0062E8  C096  F061         	movff	vfpfcnvrt@convarg,efgtoa@f
  6538   0062EC  C097  F062         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  6539   0062F0  C098  F063         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  6540   0062F4  C099  F064         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  6541   0062F8  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6542   0062FC                     	if	1	;There is more than 1 active tblptr byte
  6543   0062FC  0E0E               	movlw	high __smallconst
  6544   0062FE  6EF7               	movwf	tblptrh,c
  6545   006300                     	endif
  6546   006300                     	if	0	;tblptru may be non-zero
  6547   006300                     	endif
  6548   006300                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6549   006300  0E00               	movlw	low (__smallconst shr (0+16))
  6550   006302  6EF8               	movwf	tblptru,c
  6551   006304                     	endif
  6552   006304  0008               	tblrd		*
  6553   006306  CFF5 F065          	movff	tablat,efgtoa@c
  6554   00630A  ECF0  F022         	call	_efgtoa	;wreg free
  6555   00630E  EFBB  F031         	goto	l1338
  6556   006312                     l8065:
  6557                           
  6558                           ; BSR set to: 0
  6559   006312  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6560   006316                     	if	1	;There is more than 1 active tblptr byte
  6561   006316  0E0E               	movlw	high __smallconst
  6562   006318  6EF7               	movwf	tblptrh,c
  6563   00631A                     	endif
  6564   00631A                     	if	0	;tblptru may be non-zero
  6565   00631A                     	endif
  6566   00631A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6567   00631A  0E00               	movlw	low (__smallconst shr (0+16))
  6568   00631C  6EF8               	movwf	tblptru,c
  6569   00631E                     	endif
  6570   00631E  0008               	tblrd		*
  6571   006320  50F5               	movf	tablat,w,c
  6572   006322  6E5A               	movwf	??_vfpfcnvrt^0,c
  6573   006324  6A5B               	clrf	(??_vfpfcnvrt+1)^0,c
  6574                           
  6575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6576                           ; Switch size 1, requested type "simple"
  6577                           ; Number of cases is 1, Range of values is 0 to 0
  6578                           ; switch strategies available:
  6579                           ; Name         Instructions Cycles
  6580                           ; simple_byte            4     3 (average)
  6581                           ;	Chosen strategy is simple_byte
  6582   006326  505B               	movf	(??_vfpfcnvrt+1)^0,w,c
  6583   006328  0A00               	xorlw	0	; case 0
  6584   00632A  B4D8               	btfsc	status,2,c
  6585   00632C  EF9A  F031         	goto	l9117
  6586   006330  EFA1  F031         	goto	l8067
  6587   006334                     l9117:
  6588                           
  6589                           ; BSR set to: 0
  6590                           ; Switch size 1, requested type "simple"
  6591                           ; Number of cases is 1, Range of values is 102 to 102
  6592                           ; switch strategies available:
  6593                           ; Name         Instructions Cycles
  6594                           ; simple_byte            4     3 (average)
  6595                           ;	Chosen strategy is simple_byte
  6596   006334  505A               	movf	??_vfpfcnvrt^0,w,c
  6597   006336  0A66               	xorlw	102	; case 102
  6598   006338  B4D8               	btfsc	status,2,c
  6599   00633A  EF72  F031         	goto	l8059
  6600   00633E  EFA1  F031         	goto	l8067
  6601   006342                     l8067:
  6602                           
  6603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6604   006342  0100               	movlb	0	; () banked
  6605   006344  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6606   006346  6ED9               	movwf	fsr2l,c
  6607   006348  6ADA               	clrf	fsr2h,c
  6608   00634A  2ADF               	incf	indf2,f,c
  6609   00634C  EFBB  F031         	goto	l1338
  6610   006350                     l8071:
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6614   006350  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6615   006352  6ED9               	movwf	fsr2l,c
  6616   006354  6ADA               	clrf	fsr2h,c
  6617   006356  CFDF FFF6          	movff	indf2,tblptrl
  6618   00635A                     	if	1	;There is more than 1 active tblptr byte
  6619   00635A  0E0E               	movlw	high __smallconst
  6620   00635C  6EF7               	movwf	tblptrh,c
  6621   00635E                     	endif
  6622   00635E                     	if	0	;tblptru may be non-zero
  6623   00635E                     	endif
  6624   00635E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6625   00635E  0E00               	movlw	low (__smallconst shr (0+16))
  6626   006360  6EF8               	movwf	tblptru,c
  6627   006362                     	endif
  6628   006362  0008               	tblrd		*
  6629   006364  50F5               	movf	tablat,w,c
  6630   006366  6E02               	movwf	fputc@c^0,c
  6631   006368  6A03               	clrf	(fputc@c+1)^0,c
  6632   00636A  C092  F004         	movff	vfpfcnvrt@fp,fputc@fp
  6633   00636E  ECFF  F03A         	call	_fputc	;wreg free
  6634   006372  EFA1  F031         	goto	l8067
  6635   006376                     l1338:
  6636   006376  0012               	return		;funcret
  6637   006378                     __end_of_vfpfcnvrt:
  6638                           	callstack 0
  6639                           
  6640 ;; *************** function _efgtoa *****************
  6641 ;; Defined at:
  6642 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  6645 ;;		 -> sprintf@f(12), 
  6646 ;;  f               4    1[BANK0 ] PTR struct _IO_FILE
  6647 ;;  c               1    5[BANK0 ] unsigned char 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  u               4   46[BANK0 ] struct flui
  6650 ;;  g               4   40[BANK0 ] struct flui
  6651 ;;  l               4   35[BANK0 ] struct flui
  6652 ;;  h               4   31[BANK0 ] struct flui
  6653 ;;  ou              4   25[BANK0 ] struct flui
  6654 ;;  n               2   44[BANK0 ] int 
  6655 ;;  i               2   29[BANK0 ] int 
  6656 ;;  w               2   23[BANK0 ] int 
  6657 ;;  e               2   21[BANK0 ] int 
  6658 ;;  m               2   19[BANK0 ] int 
  6659 ;;  d               2   17[BANK0 ] int 
  6660 ;;  t               2   10[BANK0 ] int 
  6661 ;;  p               2    8[BANK0 ] int 
  6662 ;;  ne              2    6[BANK0 ] int 
  6663 ;;  sign            1   39[BANK0 ] unsigned char 
  6664 ;;  nmode           1   16[BANK0 ] unsigned char 
  6665 ;;  mode            1   15[BANK0 ] unsigned char 
  6666 ;;  pp              1   14[BANK0 ] unsigned char 
  6667 ;;  esign           1    0        unsigned char 
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      void 
  6670 ;; Registers used:
  6671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6677 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6679 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6680 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6681 ;;Total ram usage:       52 bytes
  6682 ;; Hardware stack levels used: 1
  6683 ;; Hardware stack levels required when called: 6
  6684 ;; This function calls:
  6685 ;;		___fladd
  6686 ;;		___fldiv
  6687 ;;		___fleq
  6688 ;;		___flge
  6689 ;;		___flmul
  6690 ;;		___flneg
  6691 ;;		___flsub
  6692 ;;		___fltol
  6693 ;;		___fpclassifyf
  6694 ;;		_floorf
  6695 ;;		_labs
  6696 ;;		_memcpy
  6697 ;;		_pad
  6698 ;;		_strcpy
  6699 ;; This function is called by:
  6700 ;;		_vfpfcnvrt
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           	psect	text21
  6705   0045E0                     __ptext21:
  6706                           	callstack 0
  6707   0045E0                     _efgtoa:
  6708                           	callstack 21
  6709   0045E0                     
  6710                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  6711   0045E0  0E00               	movlw	0
  6712   0045E2  0100               	movlb	0	; () banked
  6713   0045E4  6F87               	movwf	efgtoa@sign& (0+255),b
  6714   0045E6                     
  6715                           ; BSR set to: 0
  6716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  6717   0045E6  C061  F088         	movff	efgtoa@f,efgtoa@g
  6718   0045EA  C062  F089         	movff	efgtoa@f+1,efgtoa@g+1
  6719   0045EE  C063  F08A         	movff	efgtoa@f+2,efgtoa@g+2
  6720   0045F2  C064  F08B         	movff	efgtoa@f+3,efgtoa@g+3
  6721   0045F6                     
  6722                           ; BSR set to: 0
  6723                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  6724   0045F6  BF8B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  6725   0045F8  EF02  F023         	goto	u8070
  6726   0045FC  EF00  F023         	goto	u8071
  6727   004600                     u8071:
  6728   004600  EF16  F023         	goto	l7777
  6729   004604                     u8070:
  6730   004604                     
  6731                           ; BSR set to: 0
  6732                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  6733   004604  0E01               	movlw	1
  6734   004606  6F87               	movwf	efgtoa@sign& (0+255),b
  6735   004608                     
  6736                           ; BSR set to: 0
  6737                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  6738   004608  C088  F002         	movff	efgtoa@g,___flneg@f1
  6739   00460C  C089  F003         	movff	efgtoa@g+1,___flneg@f1+1
  6740   004610  C08A  F004         	movff	efgtoa@g+2,___flneg@f1+2
  6741   004614  C08B  F005         	movff	efgtoa@g+3,___flneg@f1+3
  6742   004618  EC60  F03F         	call	___flneg	;wreg free
  6743   00461C  C002  F088         	movff	?___flneg,efgtoa@g
  6744   004620  C003  F089         	movff	?___flneg+1,efgtoa@g+1
  6745   004624  C004  F08A         	movff	?___flneg+2,efgtoa@g+2
  6746   004628  C005  F08B         	movff	?___flneg+3,efgtoa@g+3
  6747   00462C                     l7777:
  6748                           
  6749                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  6750   00462C  0E00               	movlw	0
  6751   00462E  0100               	movlb	0	; () banked
  6752   004630  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  6753   004632  0E00               	movlw	0
  6754   004634  6F8C               	movwf	efgtoa@n& (0+255),b
  6755   004636                     
  6756                           ; BSR set to: 0
  6757                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  6758   004636  C0D9  F077         	movff	_width,efgtoa@w
  6759   00463A  C0DA  F078         	movff	_width+1,efgtoa@w+1
  6760   00463E                     
  6761                           ; BSR set to: 0
  6762                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  6763   00463E  5187               	movf	efgtoa@sign& (0+255),w,b
  6764   004640  B4D8               	btfsc	status,2,c
  6765   004642  EF25  F023         	goto	u8081
  6766   004646  EF27  F023         	goto	u8080
  6767   00464A                     u8081:
  6768   00464A  EF3B  F023         	goto	l7791
  6769   00464E                     u8080:
  6770   00464E                     
  6771                           ; BSR set to: 0
  6772                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  6773   00464E  5187               	movf	efgtoa@sign& (0+255),w,b
  6774   004650  A4D8               	btfss	status,2,c
  6775   004652  EF2D  F023         	goto	u8091
  6776   004656  EF2F  F023         	goto	u8090
  6777   00465A                     u8091:
  6778   00465A  EF35  F023         	goto	l7787
  6779   00465E                     u8090:
  6780   00465E                     
  6781                           ; BSR set to: 0
  6782   00465E  0E00               	movlw	0
  6783   004660  6F6D               	movwf	(_efgtoa$2687+1)& (0+255),b
  6784   004662  0E2B               	movlw	43
  6785   004664  6F6C               	movwf	_efgtoa$2687& (0+255),b
  6786   004666  EF39  F023         	goto	l7789
  6787   00466A                     l7787:
  6788                           
  6789                           ; BSR set to: 0
  6790   00466A  0E00               	movlw	0
  6791   00466C  6F6D               	movwf	(_efgtoa$2687+1)& (0+255),b
  6792   00466E  0E2D               	movlw	45
  6793   004670  6F6C               	movwf	_efgtoa$2687& (0+255),b
  6794   004672                     l7789:
  6795                           
  6796                           ; BSR set to: 0
  6797   004672  C06C  F087         	movff	_efgtoa$2687,efgtoa@sign
  6798   004676                     l7791:
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  6802   004676  C088  F002         	movff	efgtoa@g,___fpclassifyf@x
  6803   00467A  C089  F003         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6804   00467E  C08A  F004         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6805   004682  C08B  F005         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6806   004686  EC78  F037         	call	___fpclassifyf	;wreg free
  6807   00468A  0402               	decf	?___fpclassifyf^0,w,c
  6808   00468C  1003               	iorwf	(?___fpclassifyf+1)^0,w,c
  6809   00468E  A4D8               	btfss	status,2,c
  6810   004690  EF4C  F023         	goto	u8101
  6811   004694  EF4E  F023         	goto	u8100
  6812   004698                     u8101:
  6813   004698  EF7D  F023         	goto	l7809
  6814   00469C                     u8100:
  6815   00469C                     
  6816                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  6817   00469C  0100               	movlb	0	; () banked
  6818   00469E  5187               	movf	efgtoa@sign& (0+255),w,b
  6819   0046A0  B4D8               	btfsc	status,2,c
  6820   0046A2  EF55  F023         	goto	u8111
  6821   0046A6  EF57  F023         	goto	u8110
  6822   0046AA                     u8111:
  6823   0046AA  EF60  F023         	goto	l7801
  6824   0046AE                     u8110:
  6825   0046AE                     
  6826                           ; BSR set to: 0
  6827                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  6828   0046AE  C087  F400         	movff	efgtoa@sign,_dbuf
  6829   0046B2                     
  6830                           ; BSR set to: 0
  6831                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  6832   0046B2  0777               	decf	efgtoa@w& (0+255),f,b
  6833   0046B4  A0D8               	btfss	status,0,c
  6834   0046B6  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  6835   0046B8                     
  6836                           ; BSR set to: 0
  6837                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  6838   0046B8  0E00               	movlw	0
  6839   0046BA  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  6840   0046BC  0E01               	movlw	1
  6841   0046BE  6F8C               	movwf	efgtoa@n& (0+255),b
  6842   0046C0                     l7801:
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  6846   0046C0  0E00               	movlw	low _dbuf
  6847   0046C2  258C               	addwf	efgtoa@n& (0+255),w,b
  6848   0046C4  6E02               	movwf	strcpy@dest^0,c
  6849   0046C6  0E04               	movlw	high _dbuf
  6850   0046C8  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6851   0046CA  6E03               	movwf	(strcpy@dest+1)^0,c
  6852   0046CC  0ED2               	movlw	low STR_8
  6853   0046CE  6E04               	movwf	strcpy@src^0,c
  6854   0046D0  EC41  F03F         	call	_strcpy	;wreg free
  6855   0046D4                     l7803:
  6856                           
  6857                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  6858   0046D4  0100               	movlb	0	; () banked
  6859   0046D6  0EFD               	movlw	253
  6860   0046D8  2777               	addwf	efgtoa@w& (0+255),f,b
  6861   0046DA  0EFF               	movlw	255
  6862   0046DC  2378               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6863   0046DE                     
  6864                           ; BSR set to: 0
  6865                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  6866   0046DE  C060  F010         	movff	efgtoa@fp,pad@fp
  6867   0046E2  0E00               	movlw	low _dbuf
  6868   0046E4  6E11               	movwf	pad@buf^0,c
  6869   0046E6  0E04               	movlw	high _dbuf
  6870   0046E8  6E12               	movwf	(pad@buf+1)^0,c
  6871   0046EA  C077  F013         	movff	efgtoa@w,pad@p
  6872   0046EE  C078  F014         	movff	efgtoa@w+1,pad@p+1
  6873   0046F2  EC1C  F03D         	call	_pad	;wreg free
  6874   0046F6  EFE3  F027         	goto	l1282
  6875   0046FA                     l7809:
  6876                           
  6877                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  6878   0046FA  C088  F002         	movff	efgtoa@g,___fpclassifyf@x
  6879   0046FE  C089  F003         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6880   004702  C08A  F004         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6881   004706  C08B  F005         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6882   00470A  EC78  F037         	call	___fpclassifyf	;wreg free
  6883   00470E  5002               	movf	?___fpclassifyf^0,w,c
  6884   004710  1003               	iorwf	(?___fpclassifyf+1)^0,w,c
  6885   004712  A4D8               	btfss	status,2,c
  6886   004714  EF8E  F023         	goto	u8121
  6887   004718  EF90  F023         	goto	u8120
  6888   00471C                     u8121:
  6889   00471C  EFAE  F023         	goto	l7827
  6890   004720                     u8120:
  6891   004720                     
  6892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  6893   004720  0100               	movlb	0	; () banked
  6894   004722  5187               	movf	efgtoa@sign& (0+255),w,b
  6895   004724  B4D8               	btfsc	status,2,c
  6896   004726  EF97  F023         	goto	u8131
  6897   00472A  EF99  F023         	goto	u8130
  6898   00472E                     u8131:
  6899   00472E  EFA2  F023         	goto	l7819
  6900   004732                     u8130:
  6901   004732                     
  6902                           ; BSR set to: 0
  6903                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  6904   004732  C087  F400         	movff	efgtoa@sign,_dbuf
  6905   004736                     
  6906                           ; BSR set to: 0
  6907                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  6908   004736  0777               	decf	efgtoa@w& (0+255),f,b
  6909   004738  A0D8               	btfss	status,0,c
  6910   00473A  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  6911   00473C                     
  6912                           ; BSR set to: 0
  6913                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  6914   00473C  0E00               	movlw	0
  6915   00473E  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  6916   004740  0E01               	movlw	1
  6917   004742  6F8C               	movwf	efgtoa@n& (0+255),b
  6918   004744                     l7819:
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  6922   004744  0E00               	movlw	low _dbuf
  6923   004746  258C               	addwf	efgtoa@n& (0+255),w,b
  6924   004748  6E02               	movwf	strcpy@dest^0,c
  6925   00474A  0E04               	movlw	high _dbuf
  6926   00474C  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6927   00474E  6E03               	movwf	(strcpy@dest+1)^0,c
  6928   004750  0ED6               	movlw	low STR_11
  6929   004752  6E04               	movwf	strcpy@src^0,c
  6930   004754  EC41  F03F         	call	_strcpy	;wreg free
  6931   004758  EF6A  F023         	goto	l7803
  6932   00475C                     l7827:
  6933                           
  6934                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  6935   00475C  0E00               	movlw	0
  6936   00475E  0100               	movlb	0	; () banked
  6937   004760  6F8E               	movwf	efgtoa@u& (0+255),b
  6938   004762  0E00               	movlw	0
  6939   004764  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  6940   004766  0E80               	movlw	128
  6941   004768  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  6942   00476A  0E3F               	movlw	63
  6943   00476C  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  6944                           
  6945                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  6946   00476E  0E00               	movlw	0
  6947   004770  6F76               	movwf	(efgtoa@e+1)& (0+255),b
  6948   004772  0E00               	movlw	0
  6949   004774  6F75               	movwf	efgtoa@e& (0+255),b
  6950   004776                     
  6951                           ; BSR set to: 0
  6952                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  6953   004776  C088  F002         	movff	efgtoa@g,___fleq@ff1
  6954   00477A  C089  F003         	movff	efgtoa@g+1,___fleq@ff1+1
  6955   00477E  C08A  F004         	movff	efgtoa@g+2,___fleq@ff1+2
  6956   004782  C08B  F005         	movff	efgtoa@g+3,___fleq@ff1+3
  6957   004786  0E00               	movlw	0
  6958   004788  6E06               	movwf	___fleq@ff2^0,c
  6959   00478A  0E00               	movlw	0
  6960   00478C  6E07               	movwf	(___fleq@ff2+1)^0,c
  6961   00478E  0E00               	movlw	0
  6962   004790  6E08               	movwf	(___fleq@ff2+2)^0,c
  6963   004792  0E00               	movlw	0
  6964   004794  6E09               	movwf	(___fleq@ff2+3)^0,c
  6965   004796  ECB4  F03B         	call	___fleq	;wreg free
  6966   00479A  B0D8               	btfsc	status,0,c
  6967   00479C  EFD2  F023         	goto	u8141
  6968   0047A0  EFD4  F023         	goto	u8140
  6969   0047A4                     u8141:
  6970   0047A4  EFB3  F024         	goto	l1285
  6971   0047A8                     u8140:
  6972   0047A8  EFE1  F023         	goto	l7835
  6973   0047AC                     l1287:
  6974                           
  6975                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  6976   0047AC  C079  F08E         	movff	efgtoa@ou,efgtoa@u
  6977   0047B0  C07A  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  6978   0047B4  C07B  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  6979   0047B8  C07C  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  6980   0047BC                     
  6981                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  6982   0047BC  0100               	movlb	0	; () banked
  6983   0047BE  4B75               	infsnz	efgtoa@e& (0+255),f,b
  6984   0047C0  2B76               	incf	(efgtoa@e+1)& (0+255),f,b
  6985   0047C2                     l7835:
  6986                           
  6987                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  6988   0047C2  C08E  F012         	movff	efgtoa@u,___flmul@b
  6989   0047C6  C08F  F013         	movff	efgtoa@u+1,___flmul@b+1
  6990   0047CA  C090  F014         	movff	efgtoa@u+2,___flmul@b+2
  6991   0047CE  C091  F015         	movff	efgtoa@u+3,___flmul@b+3
  6992   0047D2  0E00               	movlw	0
  6993   0047D4  6E16               	movwf	___flmul@a^0,c
  6994   0047D6  0E00               	movlw	0
  6995   0047D8  6E17               	movwf	(___flmul@a+1)^0,c
  6996   0047DA  0E20               	movlw	32
  6997   0047DC  6E18               	movwf	(___flmul@a+2)^0,c
  6998   0047DE  0E41               	movlw	65
  6999   0047E0  6E19               	movwf	(___flmul@a+3)^0,c
  7000   0047E2  EC44  F02A         	call	___flmul	;wreg free
  7001   0047E6  C012  F079         	movff	?___flmul,efgtoa@ou
  7002   0047EA  C013  F07A         	movff	?___flmul+1,efgtoa@ou+1
  7003   0047EE  C014  F07B         	movff	?___flmul+2,efgtoa@ou+2
  7004   0047F2  C015  F07C         	movff	?___flmul+3,efgtoa@ou+3
  7005   0047F6  0100               	movlb	0	; () banked
  7006   0047F8  5179               	movf	efgtoa@ou& (0+255),w,b
  7007   0047FA  5D88               	subwf	efgtoa@g& (0+255),w,b
  7008   0047FC  6E02               	movwf	labs@a^0,c
  7009   0047FE  517A               	movf	(efgtoa@ou+1)& (0+255),w,b
  7010   004800  5989               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7011   004802  6E03               	movwf	(labs@a+1)^0,c
  7012   004804  517B               	movf	(efgtoa@ou+2)& (0+255),w,b
  7013   004806  598A               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7014   004808  6E04               	movwf	(labs@a+2)^0,c
  7015   00480A  517C               	movf	(efgtoa@ou+3)& (0+255),w,b
  7016   00480C  598B               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7017   00480E  6E05               	movwf	(labs@a+3)^0,c
  7018   004810  EC82  F03D         	call	_labs	;wreg free
  7019   004814  BE05               	btfsc	(?_labs+3)^0,7,c
  7020   004816  EF18  F024         	goto	u8151
  7021   00481A  5005               	movf	(?_labs+3)^0,w,c
  7022   00481C  1004               	iorwf	(?_labs+2)^0,w,c
  7023   00481E  1003               	iorwf	(?_labs+1)^0,w,c
  7024   004820  E109               	bnz	u8150
  7025   004822  0E02               	movlw	2
  7026   004824  5C02               	subwf	?_labs^0,w,c
  7027   004826  A0D8               	btfss	status,0,c
  7028   004828  EF18  F024         	goto	u8151
  7029   00482C  EF1A  F024         	goto	u8150
  7030   004830                     u8151:
  7031   004830  EFD6  F023         	goto	l1287
  7032   004834                     u8150:
  7033   004834  C079  F04C         	movff	efgtoa@ou,___flge@ff1
  7034   004838  C07A  F04D         	movff	efgtoa@ou+1,___flge@ff1+1
  7035   00483C  C07B  F04E         	movff	efgtoa@ou+2,___flge@ff1+2
  7036   004840  C07C  F04F         	movff	efgtoa@ou+3,___flge@ff1+3
  7037   004844  C088  F050         	movff	efgtoa@g,___flge@ff2
  7038   004848  C089  F051         	movff	efgtoa@g+1,___flge@ff2+1
  7039   00484C  C08A  F052         	movff	efgtoa@g+2,___flge@ff2+2
  7040   004850  C08B  F053         	movff	efgtoa@g+3,___flge@ff2+3
  7041   004854  EC75  F036         	call	___flge	;wreg free
  7042   004858  A0D8               	btfss	status,0,c
  7043   00485A  EF31  F024         	goto	u8161
  7044   00485E  EF33  F024         	goto	u8160
  7045   004862                     u8161:
  7046   004862  EFD6  F023         	goto	l1287
  7047   004866                     u8160:
  7048   004866                     
  7049                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  7050   004866  0100               	movlb	0	; () banked
  7051   004868  518E               	movf	efgtoa@u& (0+255),w,b
  7052   00486A  5D88               	subwf	efgtoa@g& (0+255),w,b
  7053   00486C  6E02               	movwf	labs@a^0,c
  7054   00486E  518F               	movf	(efgtoa@u+1)& (0+255),w,b
  7055   004870  5989               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7056   004872  6E03               	movwf	(labs@a+1)^0,c
  7057   004874  5190               	movf	(efgtoa@u+2)& (0+255),w,b
  7058   004876  598A               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7059   004878  6E04               	movwf	(labs@a+2)^0,c
  7060   00487A  5191               	movf	(efgtoa@u+3)& (0+255),w,b
  7061   00487C  598B               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7062   00487E  6E05               	movwf	(labs@a+3)^0,c
  7063   004880  EC82  F03D         	call	_labs	;wreg free
  7064   004884  BE05               	btfsc	(?_labs+3)^0,7,c
  7065   004886  EF52  F024         	goto	u8170
  7066   00488A  5005               	movf	(?_labs+3)^0,w,c
  7067   00488C  1004               	iorwf	(?_labs+2)^0,w,c
  7068   00488E  1003               	iorwf	(?_labs+1)^0,w,c
  7069   004890  E107               	bnz	u8171
  7070   004892  0E02               	movlw	2
  7071   004894  5C02               	subwf	?_labs^0,w,c
  7072   004896  B0D8               	btfsc	status,0,c
  7073   004898  EF50  F024         	goto	u8171
  7074   00489C  EF52  F024         	goto	u8170
  7075   0048A0                     u8171:
  7076   0048A0  EF9A  F024         	goto	l7853
  7077   0048A4                     u8170:
  7078   0048A4                     l7843:
  7079                           
  7080                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  7081   0048A4  C08E  F088         	movff	efgtoa@u,efgtoa@g
  7082   0048A8  C08F  F089         	movff	efgtoa@u+1,efgtoa@g+1
  7083   0048AC  C090  F08A         	movff	efgtoa@u+2,efgtoa@g+2
  7084   0048B0  C091  F08B         	movff	efgtoa@u+3,efgtoa@g+3
  7085                           
  7086                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  7087   0048B4  EFB3  F024         	goto	l1285
  7088   0048B8                     l7845:
  7089                           
  7090                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  7091   0048B8  C08E  F02B         	movff	efgtoa@u,___fldiv@b
  7092   0048BC  C08F  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  7093   0048C0  C090  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  7094   0048C4  C091  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  7095   0048C8  0E00               	movlw	0
  7096   0048CA  6E2F               	movwf	___fldiv@a^0,c
  7097   0048CC  0E00               	movlw	0
  7098   0048CE  6E30               	movwf	(___fldiv@a+1)^0,c
  7099   0048D0  0E20               	movlw	32
  7100   0048D2  6E31               	movwf	(___fldiv@a+2)^0,c
  7101   0048D4  0E41               	movlw	65
  7102   0048D6  6E32               	movwf	(___fldiv@a+3)^0,c
  7103   0048D8  EC48  F02E         	call	___fldiv	;wreg free
  7104   0048DC  C02B  F08E         	movff	?___fldiv,efgtoa@u
  7105   0048E0  C02C  F08F         	movff	?___fldiv+1,efgtoa@u+1
  7106   0048E4  C02D  F090         	movff	?___fldiv+2,efgtoa@u+2
  7107   0048E8  C02E  F091         	movff	?___fldiv+3,efgtoa@u+3
  7108   0048EC                     
  7109                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  7110   0048EC  0100               	movlb	0	; () banked
  7111   0048EE  0775               	decf	efgtoa@e& (0+255),f,b
  7112   0048F0  A0D8               	btfss	status,0,c
  7113   0048F2  0776               	decf	(efgtoa@e+1)& (0+255),f,b
  7114   0048F4                     
  7115                           ; BSR set to: 0
  7116                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  7117   0048F4  518E               	movf	efgtoa@u& (0+255),w,b
  7118   0048F6  5D88               	subwf	efgtoa@g& (0+255),w,b
  7119   0048F8  6E02               	movwf	labs@a^0,c
  7120   0048FA  518F               	movf	(efgtoa@u+1)& (0+255),w,b
  7121   0048FC  5989               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7122   0048FE  6E03               	movwf	(labs@a+1)^0,c
  7123   004900  5190               	movf	(efgtoa@u+2)& (0+255),w,b
  7124   004902  598A               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7125   004904  6E04               	movwf	(labs@a+2)^0,c
  7126   004906  5191               	movf	(efgtoa@u+3)& (0+255),w,b
  7127   004908  598B               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7128   00490A  6E05               	movwf	(labs@a+3)^0,c
  7129   00490C  EC82  F03D         	call	_labs	;wreg free
  7130   004910  BE05               	btfsc	(?_labs+3)^0,7,c
  7131   004912  EF98  F024         	goto	u8180
  7132   004916  5005               	movf	(?_labs+3)^0,w,c
  7133   004918  1004               	iorwf	(?_labs+2)^0,w,c
  7134   00491A  1003               	iorwf	(?_labs+1)^0,w,c
  7135   00491C  E107               	bnz	u8181
  7136   00491E  0E02               	movlw	2
  7137   004920  5C02               	subwf	?_labs^0,w,c
  7138   004922  B0D8               	btfsc	status,0,c
  7139   004924  EF96  F024         	goto	u8181
  7140   004928  EF98  F024         	goto	u8180
  7141   00492C                     u8181:
  7142   00492C  EF9A  F024         	goto	l7853
  7143   004930                     u8180:
  7144   004930  EF52  F024         	goto	l7843
  7145   004934                     l7853:
  7146                           
  7147                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  7148   004934  C088  F04C         	movff	efgtoa@g,___flge@ff1
  7149   004938  C089  F04D         	movff	efgtoa@g+1,___flge@ff1+1
  7150   00493C  C08A  F04E         	movff	efgtoa@g+2,___flge@ff1+2
  7151   004940  C08B  F04F         	movff	efgtoa@g+3,___flge@ff1+3
  7152   004944  C08E  F050         	movff	efgtoa@u,___flge@ff2
  7153   004948  C08F  F051         	movff	efgtoa@u+1,___flge@ff2+1
  7154   00494C  C090  F052         	movff	efgtoa@u+2,___flge@ff2+2
  7155   004950  C091  F053         	movff	efgtoa@u+3,___flge@ff2+3
  7156   004954  EC75  F036         	call	___flge	;wreg free
  7157   004958  A0D8               	btfss	status,0,c
  7158   00495A  EFB1  F024         	goto	u8191
  7159   00495E  EFB3  F024         	goto	u8190
  7160   004962                     u8191:
  7161   004962  EF5C  F024         	goto	l7845
  7162   004966                     u8190:
  7163   004966                     l1285:
  7164                           
  7165                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  7166   004966  C065  F06F         	movff	efgtoa@c,efgtoa@mode
  7167                           
  7168                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  7169   00496A  C06F  F070         	movff	efgtoa@mode,efgtoa@nmode
  7170   00496E                     
  7171                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  7172   00496E  0100               	movlb	0	; () banked
  7173   004970  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  7174   004972  EFBD  F024         	goto	u8201
  7175   004976  EFBF  F024         	goto	u8200
  7176   00497A                     u8201:
  7177   00497A  EFC5  F024         	goto	l7859
  7178   00497E                     u8200:
  7179   00497E                     
  7180                           ; BSR set to: 0
  7181   00497E  C0DB  F068         	movff	_prec,efgtoa@p
  7182   004982  C0DC  F069         	movff	_prec+1,efgtoa@p+1
  7183   004986  EFC9  F024         	goto	l7861
  7184   00498A                     l7859:
  7185                           
  7186                           ; BSR set to: 0
  7187   00498A  0E00               	movlw	0
  7188   00498C  6F69               	movwf	(efgtoa@p+1)& (0+255),b
  7189   00498E  0E06               	movlw	6
  7190   004990  6F68               	movwf	efgtoa@p& (0+255),b
  7191   004992                     l7861:
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  7195   004992  C068  F073         	movff	efgtoa@p,efgtoa@m
  7196   004996  C069  F074         	movff	efgtoa@p+1,efgtoa@m+1
  7197   00499A                     
  7198                           ; BSR set to: 0
  7199                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  7200   00499A  4B73               	infsnz	efgtoa@m& (0+255),f,b
  7201   00499C  2B74               	incf	(efgtoa@m+1)& (0+255),f,b
  7202   00499E                     
  7203                           ; BSR set to: 0
  7204                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  7205   00499E  0E66               	movlw	102
  7206   0049A0  1970               	xorwf	efgtoa@nmode& (0+255),w,b
  7207   0049A2  A4D8               	btfss	status,2,c
  7208   0049A4  EFD6  F024         	goto	u8211
  7209   0049A8  EFD8  F024         	goto	u8210
  7210   0049AC                     u8211:
  7211   0049AC  EFF8  F024         	goto	l7875
  7212   0049B0                     u8210:
  7213   0049B0                     
  7214                           ; BSR set to: 0
  7215                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  7216   0049B0  BF76               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7217   0049B2  EFDF  F024         	goto	u8220
  7218   0049B6  EFDD  F024         	goto	u8221
  7219   0049BA                     u8221:
  7220   0049BA  EFEB  F024         	goto	l7871
  7221   0049BE                     u8220:
  7222   0049BE                     
  7223                           ; BSR set to: 0
  7224                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  7225   0049BE  0E00               	movlw	0
  7226   0049C0  6F8E               	movwf	efgtoa@u& (0+255),b
  7227   0049C2  0E00               	movlw	0
  7228   0049C4  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  7229   0049C6  0E80               	movlw	128
  7230   0049C8  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  7231   0049CA  0E3F               	movlw	63
  7232   0049CC  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  7233                           
  7234                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  7235   0049CE  0E00               	movlw	0
  7236   0049D0  6F76               	movwf	(efgtoa@e+1)& (0+255),b
  7237   0049D2  0E00               	movlw	0
  7238   0049D4  6F75               	movwf	efgtoa@e& (0+255),b
  7239   0049D6                     l7871:
  7240                           
  7241                           ; BSR set to: 0
  7242                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  7243   0049D6  0E67               	movlw	103
  7244   0049D8  196F               	xorwf	efgtoa@mode& (0+255),w,b
  7245   0049DA  B4D8               	btfsc	status,2,c
  7246   0049DC  EFF2  F024         	goto	u8231
  7247   0049E0  EFF4  F024         	goto	u8230
  7248   0049E4                     u8231:
  7249   0049E4  EFF8  F024         	goto	l7875
  7250   0049E8                     u8230:
  7251   0049E8                     
  7252                           ; BSR set to: 0
  7253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  7254   0049E8  5175               	movf	efgtoa@e& (0+255),w,b
  7255   0049EA  2773               	addwf	efgtoa@m& (0+255),f,b
  7256   0049EC  5176               	movf	(efgtoa@e+1)& (0+255),w,b
  7257   0049EE  2374               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7258   0049F0                     l7875:
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  7262   0049F0  0E00               	movlw	0
  7263   0049F2  6F7E               	movwf	(efgtoa@i+1)& (0+255),b
  7264   0049F4  0E00               	movlw	0
  7265   0049F6  6F7D               	movwf	efgtoa@i& (0+255),b
  7266   0049F8                     
  7267                           ; BSR set to: 0
  7268                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  7269   0049F8  C088  F07F         	movff	efgtoa@g,efgtoa@h
  7270   0049FC  C089  F080         	movff	efgtoa@g+1,efgtoa@h+1
  7271   004A00  C08A  F081         	movff	efgtoa@g+2,efgtoa@h+2
  7272   004A04  C08B  F082         	movff	efgtoa@g+3,efgtoa@h+3
  7273   004A08                     
  7274                           ; BSR set to: 0
  7275                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  7276   004A08  C08E  F079         	movff	efgtoa@u,efgtoa@ou
  7277   004A0C  C08F  F07A         	movff	efgtoa@u+1,efgtoa@ou+1
  7278   004A10  C090  F07B         	movff	efgtoa@u+2,efgtoa@ou+2
  7279   004A14  C091  F07C         	movff	efgtoa@u+3,efgtoa@ou+3
  7280                           
  7281                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  7282   004A18  EF89  F025         	goto	l7889
  7283   004A1C                     l7881:
  7284                           
  7285                           ; BSR set to: 0
  7286                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  7287   004A1C  C07F  F02B         	movff	efgtoa@h,___fldiv@b
  7288   004A20  C080  F02C         	movff	efgtoa@h+1,___fldiv@b+1
  7289   004A24  C081  F02D         	movff	efgtoa@h+2,___fldiv@b+2
  7290   004A28  C082  F02E         	movff	efgtoa@h+3,___fldiv@b+3
  7291   004A2C  C08E  F02F         	movff	efgtoa@u,___fldiv@a
  7292   004A30  C08F  F030         	movff	efgtoa@u+1,___fldiv@a+1
  7293   004A34  C090  F031         	movff	efgtoa@u+2,___fldiv@a+2
  7294   004A38  C091  F032         	movff	efgtoa@u+3,___fldiv@a+3
  7295   004A3C  EC48  F02E         	call	___fldiv	;wreg free
  7296   004A40  C02B  F044         	movff	?___fldiv,floorf@x
  7297   004A44  C02C  F045         	movff	?___fldiv+1,floorf@x+1
  7298   004A48  C02D  F046         	movff	?___fldiv+2,floorf@x+2
  7299   004A4C  C02E  F047         	movff	?___fldiv+3,floorf@x+3
  7300   004A50  ECD6  F032         	call	_floorf	;wreg free
  7301   004A54  C044  F083         	movff	?_floorf,efgtoa@l
  7302   004A58  C045  F084         	movff	?_floorf+1,efgtoa@l+1
  7303   004A5C  C046  F085         	movff	?_floorf+2,efgtoa@l+2
  7304   004A60  C047  F086         	movff	?_floorf+3,efgtoa@l+3
  7305                           
  7306                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  7307   004A64  C083  F002         	movff	efgtoa@l,___fltol@f1
  7308   004A68  C084  F003         	movff	efgtoa@l+1,___fltol@f1+1
  7309   004A6C  C085  F004         	movff	efgtoa@l+2,___fltol@f1+2
  7310   004A70  C086  F005         	movff	efgtoa@l+3,___fltol@f1+3
  7311   004A74  ECF2  F035         	call	___fltol	;wreg free
  7312   004A78  C002  F071         	movff	?___fltol,efgtoa@d
  7313   004A7C  C003  F072         	movff	?___fltol+1,efgtoa@d+1
  7314   004A80                     
  7315                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  7316   004A80  C07F  F044         	movff	efgtoa@h,___flsub@b
  7317   004A84  C080  F045         	movff	efgtoa@h+1,___flsub@b+1
  7318   004A88  C081  F046         	movff	efgtoa@h+2,___flsub@b+2
  7319   004A8C  C082  F047         	movff	efgtoa@h+3,___flsub@b+3
  7320   004A90  C083  F016         	movff	efgtoa@l,___flmul@a
  7321   004A94  C084  F017         	movff	efgtoa@l+1,___flmul@a+1
  7322   004A98  C085  F018         	movff	efgtoa@l+2,___flmul@a+2
  7323   004A9C  C086  F019         	movff	efgtoa@l+3,___flmul@a+3
  7324   004AA0  C08E  F012         	movff	efgtoa@u,___flmul@b
  7325   004AA4  C08F  F013         	movff	efgtoa@u+1,___flmul@b+1
  7326   004AA8  C090  F014         	movff	efgtoa@u+2,___flmul@b+2
  7327   004AAC  C091  F015         	movff	efgtoa@u+3,___flmul@b+3
  7328   004AB0  EC44  F02A         	call	___flmul	;wreg free
  7329   004AB4  C012  F048         	movff	?___flmul,___flsub@a
  7330   004AB8  C013  F049         	movff	?___flmul+1,___flsub@a+1
  7331   004ABC  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  7332   004AC0  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  7333   004AC4  ECBD  F03E         	call	___flsub	;wreg free
  7334   004AC8  C044  F07F         	movff	?___flsub,efgtoa@h
  7335   004ACC  C045  F080         	movff	?___flsub+1,efgtoa@h+1
  7336   004AD0  C046  F081         	movff	?___flsub+2,efgtoa@h+2
  7337   004AD4  C047  F082         	movff	?___flsub+3,efgtoa@h+3
  7338   004AD8                     
  7339                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  7340   004AD8  C08E  F02B         	movff	efgtoa@u,___fldiv@b
  7341   004ADC  C08F  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  7342   004AE0  C090  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  7343   004AE4  C091  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  7344   004AE8  0E00               	movlw	0
  7345   004AEA  6E2F               	movwf	___fldiv@a^0,c
  7346   004AEC  0E00               	movlw	0
  7347   004AEE  6E30               	movwf	(___fldiv@a+1)^0,c
  7348   004AF0  0E20               	movlw	32
  7349   004AF2  6E31               	movwf	(___fldiv@a+2)^0,c
  7350   004AF4  0E41               	movlw	65
  7351   004AF6  6E32               	movwf	(___fldiv@a+3)^0,c
  7352   004AF8  EC48  F02E         	call	___fldiv	;wreg free
  7353   004AFC  C02B  F08E         	movff	?___fldiv,efgtoa@u
  7354   004B00  C02C  F08F         	movff	?___fldiv+1,efgtoa@u+1
  7355   004B04  C02D  F090         	movff	?___fldiv+2,efgtoa@u+2
  7356   004B08  C02E  F091         	movff	?___fldiv+3,efgtoa@u+3
  7357   004B0C                     
  7358                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  7359   004B0C  0100               	movlb	0	; () banked
  7360   004B0E  4B7D               	infsnz	efgtoa@i& (0+255),f,b
  7361   004B10  2B7E               	incf	(efgtoa@i+1)& (0+255),f,b
  7362   004B12                     l7889:
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  7366   004B12  5173               	movf	efgtoa@m& (0+255),w,b
  7367   004B14  5D7D               	subwf	efgtoa@i& (0+255),w,b
  7368   004B16  517E               	movf	(efgtoa@i+1)& (0+255),w,b
  7369   004B18  0A80               	xorlw	128
  7370   004B1A  6E58               	movwf	??_efgtoa^0,c
  7371   004B1C  5174               	movf	(efgtoa@m+1)& (0+255),w,b
  7372   004B1E  0A80               	xorlw	128
  7373   004B20  5858               	subwfb	??_efgtoa^0,w,c
  7374   004B22  A0D8               	btfss	status,0,c
  7375   004B24  EF96  F025         	goto	u8241
  7376   004B28  EF98  F025         	goto	u8240
  7377   004B2C                     u8241:
  7378   004B2C  EF0E  F025         	goto	l7881
  7379   004B30                     u8240:
  7380   004B30                     
  7381                           ; BSR set to: 0
  7382                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  7383   004B30  C08E  F012         	movff	efgtoa@u,___flmul@b
  7384   004B34  C08F  F013         	movff	efgtoa@u+1,___flmul@b+1
  7385   004B38  C090  F014         	movff	efgtoa@u+2,___flmul@b+2
  7386   004B3C  C091  F015         	movff	efgtoa@u+3,___flmul@b+3
  7387   004B40  0E00               	movlw	0
  7388   004B42  6E16               	movwf	___flmul@a^0,c
  7389   004B44  0E00               	movlw	0
  7390   004B46  6E17               	movwf	(___flmul@a+1)^0,c
  7391   004B48  0EA0               	movlw	160
  7392   004B4A  6E18               	movwf	(___flmul@a+2)^0,c
  7393   004B4C  0E40               	movlw	64
  7394   004B4E  6E19               	movwf	(___flmul@a+3)^0,c
  7395   004B50  EC44  F02A         	call	___flmul	;wreg free
  7396   004B54  C012  F083         	movff	?___flmul,efgtoa@l
  7397   004B58  C013  F084         	movff	?___flmul+1,efgtoa@l+1
  7398   004B5C  C014  F085         	movff	?___flmul+2,efgtoa@l+2
  7399   004B60  C015  F086         	movff	?___flmul+3,efgtoa@l+3
  7400   004B64                     
  7401                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  7402   004B64  C07F  F04C         	movff	efgtoa@h,___flge@ff1
  7403   004B68  C080  F04D         	movff	efgtoa@h+1,___flge@ff1+1
  7404   004B6C  C081  F04E         	movff	efgtoa@h+2,___flge@ff1+2
  7405   004B70  C082  F04F         	movff	efgtoa@h+3,___flge@ff1+3
  7406   004B74  C083  F050         	movff	efgtoa@l,___flge@ff2
  7407   004B78  C084  F051         	movff	efgtoa@l+1,___flge@ff2+1
  7408   004B7C  C085  F052         	movff	efgtoa@l+2,___flge@ff2+2
  7409   004B80  C086  F053         	movff	efgtoa@l+3,___flge@ff2+3
  7410   004B84  EC75  F036         	call	___flge	;wreg free
  7411   004B88  B0D8               	btfsc	status,0,c
  7412   004B8A  EFC9  F025         	goto	u8251
  7413   004B8E  EFCB  F025         	goto	u8250
  7414   004B92                     u8251:
  7415   004B92  EFD6  F025         	goto	l7897
  7416   004B96                     u8250:
  7417   004B96                     
  7418                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  7419   004B96  0E00               	movlw	0
  7420   004B98  0100               	movlb	0	; () banked
  7421   004B9A  6F83               	movwf	efgtoa@l& (0+255),b
  7422   004B9C  0E00               	movlw	0
  7423   004B9E  6F84               	movwf	(efgtoa@l+1)& (0+255),b
  7424   004BA0  0E00               	movlw	0
  7425   004BA2  6F85               	movwf	(efgtoa@l+2)& (0+255),b
  7426   004BA4  0E00               	movlw	0
  7427   004BA6  6F86               	movwf	(efgtoa@l+3)& (0+255),b
  7428                           
  7429                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  7430   004BA8  EFFF  F025         	goto	l7903
  7431   004BAC                     l7897:
  7432                           
  7433                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  7434   004BAC  C07F  F002         	movff	efgtoa@h,___fleq@ff1
  7435   004BB0  C080  F003         	movff	efgtoa@h+1,___fleq@ff1+1
  7436   004BB4  C081  F004         	movff	efgtoa@h+2,___fleq@ff1+2
  7437   004BB8  C082  F005         	movff	efgtoa@h+3,___fleq@ff1+3
  7438   004BBC  C083  F006         	movff	efgtoa@l,___fleq@ff2
  7439   004BC0  C084  F007         	movff	efgtoa@l+1,___fleq@ff2+1
  7440   004BC4  C085  F008         	movff	efgtoa@l+2,___fleq@ff2+2
  7441   004BC8  C086  F009         	movff	efgtoa@l+3,___fleq@ff2+3
  7442   004BCC  ECB4  F03B         	call	___fleq	;wreg free
  7443   004BD0  A0D8               	btfss	status,0,c
  7444   004BD2  EFED  F025         	goto	u8261
  7445   004BD6  EFEF  F025         	goto	u8260
  7446   004BDA                     u8261:
  7447   004BDA  EFFF  F025         	goto	l7903
  7448   004BDE                     u8260:
  7449   004BDE  0100               	movlb	0	; () banked
  7450   004BE0  B171               	btfsc	efgtoa@d& (0+255),0,b
  7451   004BE2  EFF5  F025         	goto	u8271
  7452   004BE6  EFF7  F025         	goto	u8270
  7453   004BEA                     u8271:
  7454   004BEA  EFFF  F025         	goto	l7903
  7455   004BEE                     u8270:
  7456   004BEE                     
  7457                           ; BSR set to: 0
  7458                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  7459   004BEE  0E00               	movlw	0
  7460   004BF0  6F83               	movwf	efgtoa@l& (0+255),b
  7461   004BF2  0E00               	movlw	0
  7462   004BF4  6F84               	movwf	(efgtoa@l+1)& (0+255),b
  7463   004BF6  0E00               	movlw	0
  7464   004BF8  6F85               	movwf	(efgtoa@l+2)& (0+255),b
  7465   004BFA  0E00               	movlw	0
  7466   004BFC  6F86               	movwf	(efgtoa@l+3)& (0+255),b
  7467   004BFE                     l7903:
  7468                           
  7469                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  7470   004BFE  C088  F002         	movff	efgtoa@g,___fladd@b
  7471   004C02  C089  F003         	movff	efgtoa@g+1,___fladd@b+1
  7472   004C06  C08A  F004         	movff	efgtoa@g+2,___fladd@b+2
  7473   004C0A  C08B  F005         	movff	efgtoa@g+3,___fladd@b+3
  7474   004C0E  C083  F006         	movff	efgtoa@l,___fladd@a
  7475   004C12  C084  F007         	movff	efgtoa@l+1,___fladd@a+1
  7476   004C16  C085  F008         	movff	efgtoa@l+2,___fladd@a+2
  7477   004C1A  C086  F009         	movff	efgtoa@l+3,___fladd@a+3
  7478   004C1E  ECE4  F027         	call	___fladd	;wreg free
  7479   004C22  C002  F07F         	movff	?___fladd,efgtoa@h
  7480   004C26  C003  F080         	movff	?___fladd+1,efgtoa@h+1
  7481   004C2A  C004  F081         	movff	?___fladd+2,efgtoa@h+2
  7482   004C2E  C005  F082         	movff	?___fladd+3,efgtoa@h+3
  7483   004C32                     
  7484                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  7485   004C32  C07F  F04C         	movff	efgtoa@h,___flge@ff1
  7486   004C36  C080  F04D         	movff	efgtoa@h+1,___flge@ff1+1
  7487   004C3A  C081  F04E         	movff	efgtoa@h+2,___flge@ff1+2
  7488   004C3E  C082  F04F         	movff	efgtoa@h+3,___flge@ff1+3
  7489   004C42  0E00               	movlw	0
  7490   004C44  6E16               	movwf	___flmul@a^0,c
  7491   004C46  0E00               	movlw	0
  7492   004C48  6E17               	movwf	(___flmul@a+1)^0,c
  7493   004C4A  0E20               	movlw	32
  7494   004C4C  6E18               	movwf	(___flmul@a+2)^0,c
  7495   004C4E  0E41               	movlw	65
  7496   004C50  6E19               	movwf	(___flmul@a+3)^0,c
  7497   004C52  C079  F012         	movff	efgtoa@ou,___flmul@b
  7498   004C56  C07A  F013         	movff	efgtoa@ou+1,___flmul@b+1
  7499   004C5A  C07B  F014         	movff	efgtoa@ou+2,___flmul@b+2
  7500   004C5E  C07C  F015         	movff	efgtoa@ou+3,___flmul@b+3
  7501   004C62  EC44  F02A         	call	___flmul	;wreg free
  7502   004C66  C012  F050         	movff	?___flmul,___flge@ff2
  7503   004C6A  C013  F051         	movff	?___flmul+1,___flge@ff2+1
  7504   004C6E  C014  F052         	movff	?___flmul+2,___flge@ff2+2
  7505   004C72  C015  F053         	movff	?___flmul+3,___flge@ff2+3
  7506   004C76  EC75  F036         	call	___flge	;wreg free
  7507   004C7A  A0D8               	btfss	status,0,c
  7508   004C7C  EF42  F026         	goto	u8281
  7509   004C80  EF44  F026         	goto	u8280
  7510   004C84                     u8281:
  7511   004C84  EF6D  F026         	goto	l7915
  7512   004C88                     u8280:
  7513   004C88                     
  7514                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  7515   004C88  0100               	movlb	0	; () banked
  7516   004C8A  4B75               	infsnz	efgtoa@e& (0+255),f,b
  7517   004C8C  2B76               	incf	(efgtoa@e+1)& (0+255),f,b
  7518   004C8E                     
  7519                           ; BSR set to: 0
  7520                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  7521   004C8E  C079  F012         	movff	efgtoa@ou,___flmul@b
  7522   004C92  C07A  F013         	movff	efgtoa@ou+1,___flmul@b+1
  7523   004C96  C07B  F014         	movff	efgtoa@ou+2,___flmul@b+2
  7524   004C9A  C07C  F015         	movff	efgtoa@ou+3,___flmul@b+3
  7525   004C9E  0E00               	movlw	0
  7526   004CA0  6E16               	movwf	___flmul@a^0,c
  7527   004CA2  0E00               	movlw	0
  7528   004CA4  6E17               	movwf	(___flmul@a+1)^0,c
  7529   004CA6  0E20               	movlw	32
  7530   004CA8  6E18               	movwf	(___flmul@a+2)^0,c
  7531   004CAA  0E41               	movlw	65
  7532   004CAC  6E19               	movwf	(___flmul@a+3)^0,c
  7533   004CAE  EC44  F02A         	call	___flmul	;wreg free
  7534   004CB2  C012  F079         	movff	?___flmul,efgtoa@ou
  7535   004CB6  C013  F07A         	movff	?___flmul+1,efgtoa@ou+1
  7536   004CBA  C014  F07B         	movff	?___flmul+2,efgtoa@ou+2
  7537   004CBE  C015  F07C         	movff	?___flmul+3,efgtoa@ou+3
  7538   004CC2                     
  7539                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  7540   004CC2  0E66               	movlw	102
  7541   004CC4  0100               	movlb	0	; () banked
  7542   004CC6  1970               	xorwf	efgtoa@nmode& (0+255),w,b
  7543   004CC8  A4D8               	btfss	status,2,c
  7544   004CCA  EF69  F026         	goto	u8291
  7545   004CCE  EF6B  F026         	goto	u8290
  7546   004CD2                     u8291:
  7547   004CD2  EF6D  F026         	goto	l7915
  7548   004CD6                     u8290:
  7549   004CD6                     
  7550                           ; BSR set to: 0
  7551                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  7552   004CD6  4B73               	infsnz	efgtoa@m& (0+255),f,b
  7553   004CD8  2B74               	incf	(efgtoa@m+1)& (0+255),f,b
  7554   004CDA                     l7915:
  7555                           
  7556                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  7557   004CDA  C079  F08E         	movff	efgtoa@ou,efgtoa@u
  7558   004CDE  C07A  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  7559   004CE2  C07B  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  7560   004CE6  C07C  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  7561   004CEA                     
  7562                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  7563   004CEA  C075  F066         	movff	efgtoa@e,efgtoa@ne
  7564   004CEE  C076  F067         	movff	efgtoa@e+1,efgtoa@ne+1
  7565   004CF2                     
  7566                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  7567   004CF2  0E00               	movlw	0
  7568   004CF4  0100               	movlb	0	; () banked
  7569   004CF6  6F6E               	movwf	efgtoa@pp& (0+255),b
  7570   004CF8                     
  7571                           ; BSR set to: 0
  7572                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  7573   004CF8  0E00               	movlw	0
  7574   004CFA  6F6B               	movwf	(efgtoa@t+1)& (0+255),b
  7575   004CFC  0E00               	movlw	0
  7576   004CFE  6F6A               	movwf	efgtoa@t& (0+255),b
  7577   004D00                     
  7578                           ; BSR set to: 0
  7579                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  7580   004D00  0E00               	movlw	0
  7581   004D02  6F7E               	movwf	(efgtoa@i+1)& (0+255),b
  7582   004D04  0E00               	movlw	0
  7583   004D06  6F7D               	movwf	efgtoa@i& (0+255),b
  7584                           
  7585                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7586   004D08  EF6B  F027         	goto	l7965
  7587   004D0C                     l7925:
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  7591   004D0C  C07F  F02B         	movff	efgtoa@h,___fldiv@b
  7592   004D10  C080  F02C         	movff	efgtoa@h+1,___fldiv@b+1
  7593   004D14  C081  F02D         	movff	efgtoa@h+2,___fldiv@b+2
  7594   004D18  C082  F02E         	movff	efgtoa@h+3,___fldiv@b+3
  7595   004D1C  C08E  F02F         	movff	efgtoa@u,___fldiv@a
  7596   004D20  C08F  F030         	movff	efgtoa@u+1,___fldiv@a+1
  7597   004D24  C090  F031         	movff	efgtoa@u+2,___fldiv@a+2
  7598   004D28  C091  F032         	movff	efgtoa@u+3,___fldiv@a+3
  7599   004D2C  EC48  F02E         	call	___fldiv	;wreg free
  7600   004D30  C02B  F044         	movff	?___fldiv,floorf@x
  7601   004D34  C02C  F045         	movff	?___fldiv+1,floorf@x+1
  7602   004D38  C02D  F046         	movff	?___fldiv+2,floorf@x+2
  7603   004D3C  C02E  F047         	movff	?___fldiv+3,floorf@x+3
  7604   004D40  ECD6  F032         	call	_floorf	;wreg free
  7605   004D44  C044  F083         	movff	?_floorf,efgtoa@l
  7606   004D48  C045  F084         	movff	?_floorf+1,efgtoa@l+1
  7607   004D4C  C046  F085         	movff	?_floorf+2,efgtoa@l+2
  7608   004D50  C047  F086         	movff	?_floorf+3,efgtoa@l+3
  7609                           
  7610                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  7611   004D54  C083  F002         	movff	efgtoa@l,___fltol@f1
  7612   004D58  C084  F003         	movff	efgtoa@l+1,___fltol@f1+1
  7613   004D5C  C085  F004         	movff	efgtoa@l+2,___fltol@f1+2
  7614   004D60  C086  F005         	movff	efgtoa@l+3,___fltol@f1+3
  7615   004D64  ECF2  F035         	call	___fltol	;wreg free
  7616   004D68  BE03               	btfsc	(?___fltol+1)^0,7,c
  7617   004D6A  EFC2  F026         	goto	u8300
  7618   004D6E  5003               	movf	(?___fltol+1)^0,w,c
  7619   004D70  E107               	bnz	u8301
  7620   004D72  0E0A               	movlw	10
  7621   004D74  5C02               	subwf	?___fltol^0,w,c
  7622   004D76  B0D8               	btfsc	status,0,c
  7623   004D78  EFC0  F026         	goto	u8301
  7624   004D7C  EFC2  F026         	goto	u8300
  7625   004D80                     u8301:
  7626   004D80  EFD2  F026         	goto	l7929
  7627   004D84                     u8300:
  7628   004D84  C083  F002         	movff	efgtoa@l,___fltol@f1
  7629   004D88  C084  F003         	movff	efgtoa@l+1,___fltol@f1+1
  7630   004D8C  C085  F004         	movff	efgtoa@l+2,___fltol@f1+2
  7631   004D90  C086  F005         	movff	efgtoa@l+3,___fltol@f1+3
  7632   004D94  ECF2  F035         	call	___fltol	;wreg free
  7633   004D98  C002  F071         	movff	?___fltol,efgtoa@d
  7634   004D9C  C003  F072         	movff	?___fltol+1,efgtoa@d+1
  7635   004DA0  EFD7  F026         	goto	l1315
  7636   004DA4                     l7929:
  7637   004DA4  0E00               	movlw	0
  7638   004DA6  0100               	movlb	0	; () banked
  7639   004DA8  6F72               	movwf	(efgtoa@d+1)& (0+255),b
  7640   004DAA  0E09               	movlw	9
  7641   004DAC  6F71               	movwf	efgtoa@d& (0+255),b
  7642   004DAE                     l1315:
  7643                           
  7644                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  7645   004DAE  0100               	movlb	0	; () banked
  7646   004DB0  516E               	movf	efgtoa@pp& (0+255),w,b
  7647   004DB2  A4D8               	btfss	status,2,c
  7648   004DB4  EFDE  F026         	goto	u8311
  7649   004DB8  EFE0  F026         	goto	u8310
  7650   004DBC                     u8311:
  7651   004DBC  EF08  F027         	goto	l7949
  7652   004DC0                     u8310:
  7653   004DC0                     
  7654                           ; BSR set to: 0
  7655   004DC0  BF67               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7656   004DC2  EFE7  F026         	goto	u8320
  7657   004DC6  EFE5  F026         	goto	u8321
  7658   004DCA                     u8321:
  7659   004DCA  EF08  F027         	goto	l7949
  7660   004DCE                     u8320:
  7661   004DCE                     
  7662                           ; BSR set to: 0
  7663                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  7664   004DCE  0E00               	movlw	low _dbuf
  7665   004DD0  258C               	addwf	efgtoa@n& (0+255),w,b
  7666   004DD2  6ED9               	movwf	fsr2l,c
  7667   004DD4  0E04               	movlw	high _dbuf
  7668   004DD6  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7669   004DD8  6EDA               	movwf	fsr2h,c
  7670   004DDA  0E2E               	movlw	46
  7671   004DDC  6EDF               	movwf	indf2,c
  7672   004DDE                     
  7673                           ; BSR set to: 0
  7674   004DDE  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  7675   004DE0  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  7676   004DE2                     
  7677                           ; BSR set to: 0
  7678                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  7679   004DE2  0777               	decf	efgtoa@w& (0+255),f,b
  7680   004DE4  A0D8               	btfss	status,0,c
  7681   004DE6  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  7682   004DE8                     
  7683                           ; BSR set to: 0
  7684                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  7685   004DE8  0E01               	movlw	1
  7686   004DEA  6F6E               	movwf	efgtoa@pp& (0+255),b
  7687   004DEC  EF08  F027         	goto	l7949
  7688   004DF0                     l7941:
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  7692   004DF0  0E00               	movlw	low _dbuf
  7693   004DF2  258C               	addwf	efgtoa@n& (0+255),w,b
  7694   004DF4  6ED9               	movwf	fsr2l,c
  7695   004DF6  0E04               	movlw	high _dbuf
  7696   004DF8  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7697   004DFA  6EDA               	movwf	fsr2h,c
  7698   004DFC  0E30               	movlw	48
  7699   004DFE  6EDF               	movwf	indf2,c
  7700   004E00                     
  7701                           ; BSR set to: 0
  7702   004E00  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  7703   004E02  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  7704   004E04                     
  7705                           ; BSR set to: 0
  7706                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  7707   004E04  0777               	decf	efgtoa@w& (0+255),f,b
  7708   004E06  A0D8               	btfss	status,0,c
  7709   004E08  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  7710   004E0A                     
  7711                           ; BSR set to: 0
  7712                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  7713   004E0A  076A               	decf	efgtoa@t& (0+255),f,b
  7714   004E0C  A0D8               	btfss	status,0,c
  7715   004E0E  076B               	decf	(efgtoa@t+1)& (0+255),f,b
  7716   004E10                     l7949:
  7717                           
  7718                           ; BSR set to: 0
  7719                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  7720   004E10  516A               	movf	efgtoa@t& (0+255),w,b
  7721   004E12  116B               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7722   004E14  A4D8               	btfss	status,2,c
  7723   004E16  EF0F  F027         	goto	u8331
  7724   004E1A  EF11  F027         	goto	u8330
  7725   004E1E                     u8331:
  7726   004E1E  EFF8  F026         	goto	l7941
  7727   004E22                     u8330:
  7728   004E22                     
  7729                           ; BSR set to: 0
  7730                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7731   004E22  0E00               	movlw	low _dbuf
  7732   004E24  258C               	addwf	efgtoa@n& (0+255),w,b
  7733   004E26  6ED9               	movwf	fsr2l,c
  7734   004E28  0E04               	movlw	high _dbuf
  7735   004E2A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7736   004E2C  6EDA               	movwf	fsr2h,c
  7737   004E2E  5171               	movf	efgtoa@d& (0+255),w,b
  7738   004E30  0F30               	addlw	48
  7739   004E32  6EDF               	movwf	indf2,c
  7740   004E34                     
  7741                           ; BSR set to: 0
  7742   004E34  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  7743   004E36  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  7744   004E38                     
  7745                           ; BSR set to: 0
  7746                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  7747   004E38  0777               	decf	efgtoa@w& (0+255),f,b
  7748   004E3A  A0D8               	btfss	status,0,c
  7749   004E3C  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  7750   004E3E                     
  7751                           ; BSR set to: 0
  7752                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  7753   004E3E  C07F  F044         	movff	efgtoa@h,___flsub@b
  7754   004E42  C080  F045         	movff	efgtoa@h+1,___flsub@b+1
  7755   004E46  C081  F046         	movff	efgtoa@h+2,___flsub@b+2
  7756   004E4A  C082  F047         	movff	efgtoa@h+3,___flsub@b+3
  7757   004E4E  C083  F016         	movff	efgtoa@l,___flmul@a
  7758   004E52  C084  F017         	movff	efgtoa@l+1,___flmul@a+1
  7759   004E56  C085  F018         	movff	efgtoa@l+2,___flmul@a+2
  7760   004E5A  C086  F019         	movff	efgtoa@l+3,___flmul@a+3
  7761   004E5E  C08E  F012         	movff	efgtoa@u,___flmul@b
  7762   004E62  C08F  F013         	movff	efgtoa@u+1,___flmul@b+1
  7763   004E66  C090  F014         	movff	efgtoa@u+2,___flmul@b+2
  7764   004E6A  C091  F015         	movff	efgtoa@u+3,___flmul@b+3
  7765   004E6E  EC44  F02A         	call	___flmul	;wreg free
  7766   004E72  C012  F048         	movff	?___flmul,___flsub@a
  7767   004E76  C013  F049         	movff	?___flmul+1,___flsub@a+1
  7768   004E7A  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  7769   004E7E  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  7770   004E82  ECBD  F03E         	call	___flsub	;wreg free
  7771   004E86  C044  F07F         	movff	?___flsub,efgtoa@h
  7772   004E8A  C045  F080         	movff	?___flsub+1,efgtoa@h+1
  7773   004E8E  C046  F081         	movff	?___flsub+2,efgtoa@h+2
  7774   004E92  C047  F082         	movff	?___flsub+3,efgtoa@h+3
  7775   004E96                     
  7776                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  7777   004E96  C08E  F02B         	movff	efgtoa@u,___fldiv@b
  7778   004E9A  C08F  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  7779   004E9E  C090  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  7780   004EA2  C091  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  7781   004EA6  0E00               	movlw	0
  7782   004EA8  6E2F               	movwf	___fldiv@a^0,c
  7783   004EAA  0E00               	movlw	0
  7784   004EAC  6E30               	movwf	(___fldiv@a+1)^0,c
  7785   004EAE  0E20               	movlw	32
  7786   004EB0  6E31               	movwf	(___fldiv@a+2)^0,c
  7787   004EB2  0E41               	movlw	65
  7788   004EB4  6E32               	movwf	(___fldiv@a+3)^0,c
  7789   004EB6  EC48  F02E         	call	___fldiv	;wreg free
  7790   004EBA  C02B  F08E         	movff	?___fldiv,efgtoa@u
  7791   004EBE  C02C  F08F         	movff	?___fldiv+1,efgtoa@u+1
  7792   004EC2  C02D  F090         	movff	?___fldiv+2,efgtoa@u+2
  7793   004EC6  C02E  F091         	movff	?___fldiv+3,efgtoa@u+3
  7794   004ECA                     
  7795                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  7796   004ECA  0100               	movlb	0	; () banked
  7797   004ECC  0766               	decf	efgtoa@ne& (0+255),f,b
  7798   004ECE  A0D8               	btfss	status,0,c
  7799   004ED0  0767               	decf	(efgtoa@ne+1)& (0+255),f,b
  7800   004ED2                     
  7801                           ; BSR set to: 0
  7802                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  7803   004ED2  4B7D               	infsnz	efgtoa@i& (0+255),f,b
  7804   004ED4  2B7E               	incf	(efgtoa@i+1)& (0+255),f,b
  7805   004ED6                     l7965:
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7809   004ED6  5173               	movf	efgtoa@m& (0+255),w,b
  7810   004ED8  5D7D               	subwf	efgtoa@i& (0+255),w,b
  7811   004EDA  517E               	movf	(efgtoa@i+1)& (0+255),w,b
  7812   004EDC  0A80               	xorlw	128
  7813   004EDE  6E58               	movwf	??_efgtoa^0,c
  7814   004EE0  5174               	movf	(efgtoa@m+1)& (0+255),w,b
  7815   004EE2  0A80               	xorlw	128
  7816   004EE4  5858               	subwfb	??_efgtoa^0,w,c
  7817   004EE6  B0D8               	btfsc	status,0,c
  7818   004EE8  EF78  F027         	goto	u8341
  7819   004EEC  EF7A  F027         	goto	u8340
  7820   004EF0                     u8341:
  7821   004EF0  EF88  F027         	goto	l7969
  7822   004EF4                     u8340:
  7823   004EF4                     
  7824                           ; BSR set to: 0
  7825   004EF4  BF8D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7826   004EF6  EF86  F027         	goto	u8351
  7827   004EFA  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  7828   004EFC  E109               	bnz	u8350
  7829   004EFE  0E4B               	movlw	75
  7830   004F00  5D8C               	subwf	efgtoa@n& (0+255),w,b
  7831   004F02  A0D8               	btfss	status,0,c
  7832   004F04  EF86  F027         	goto	u8351
  7833   004F08  EF88  F027         	goto	u8350
  7834   004F0C                     u8351:
  7835   004F0C  EF86  F026         	goto	l7925
  7836   004F10                     u8350:
  7837   004F10                     l7969:
  7838                           
  7839                           ; BSR set to: 0
  7840                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  7841   004F10  0E00               	movlw	0
  7842   004F12  6F7E               	movwf	(efgtoa@i+1)& (0+255),b
  7843   004F14  0E4F               	movlw	79
  7844   004F16  6F7D               	movwf	efgtoa@i& (0+255),b
  7845   004F18                     
  7846                           ; BSR set to: 0
  7847                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  7848   004F18  0E00               	movlw	low _dbuf
  7849   004F1A  257D               	addwf	efgtoa@i& (0+255),w,b
  7850   004F1C  6ED9               	movwf	fsr2l,c
  7851   004F1E  0E04               	movlw	high _dbuf
  7852   004F20  217E               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7853   004F22  6EDA               	movwf	fsr2h,c
  7854   004F24  6ADF               	clrf	indf2,c
  7855   004F26                     
  7856                           ; BSR set to: 0
  7857                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  7858   004F26  0E00               	movlw	low _dbuf
  7859   004F28  6E58               	movwf	??_efgtoa^0,c
  7860   004F2A  0E04               	movlw	high _dbuf
  7861   004F2C  6E59               	movwf	(??_efgtoa+1)^0,c
  7862   004F2E  518C               	movf	efgtoa@n& (0+255),w,b
  7863   004F30  5E58               	subwf	??_efgtoa^0,f,c
  7864   004F32  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  7865   004F34  5A59               	subwfb	(??_efgtoa+1)^0,f,c
  7866   004F36  517D               	movf	efgtoa@i& (0+255),w,b
  7867   004F38  2458               	addwf	??_efgtoa^0,w,c
  7868   004F3A  6E02               	movwf	memcpy@d1^0,c
  7869   004F3C  517E               	movf	(efgtoa@i+1)& (0+255),w,b
  7870   004F3E  2059               	addwfc	(??_efgtoa+1)^0,w,c
  7871   004F40  6E03               	movwf	(memcpy@d1+1)^0,c
  7872   004F42  0E00               	movlw	low _dbuf
  7873   004F44  6E04               	movwf	memcpy@s1^0,c
  7874   004F46  0E04               	movlw	high _dbuf
  7875   004F48  6E05               	movwf	(memcpy@s1+1)^0,c
  7876   004F4A  C08C  F006         	movff	efgtoa@n,memcpy@n
  7877   004F4E  C08D  F007         	movff	efgtoa@n+1,memcpy@n+1
  7878   004F52  ECAD  F03D         	call	_memcpy	;wreg free
  7879   004F56                     
  7880                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  7881   004F56  0100               	movlb	0	; () banked
  7882   004F58  518C               	movf	efgtoa@n& (0+255),w,b
  7883   004F5A  5D7D               	subwf	efgtoa@i& (0+255),w,b
  7884   004F5C  6F8C               	movwf	efgtoa@n& (0+255),b
  7885   004F5E  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  7886   004F60  597E               	subwfb	(efgtoa@i+1)& (0+255),w,b
  7887   004F62  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  7888   004F64                     
  7889                           ; BSR set to: 0
  7890                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  7891   004F64  5187               	movf	efgtoa@sign& (0+255),w,b
  7892   004F66  A4D8               	btfss	status,2,c
  7893   004F68  EFB8  F027         	goto	u8361
  7894   004F6C  EFBB  F027         	goto	u8360
  7895   004F70                     u8361:
  7896   004F70  0E01               	movlw	1
  7897   004F72  EFBC  F027         	goto	u8370
  7898   004F76                     u8360:
  7899   004F76  0E00               	movlw	0
  7900   004F78                     u8370:
  7901   004F78  6F7D               	movwf	efgtoa@i& (0+255),b
  7902   004F7A  6B7E               	clrf	(efgtoa@i+1)& (0+255),b
  7903   004F7C                     
  7904                           ; BSR set to: 0
  7905                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  7906   004F7C  5187               	movf	efgtoa@sign& (0+255),w,b
  7907   004F7E  B4D8               	btfsc	status,2,c
  7908   004F80  EFC4  F027         	goto	u8381
  7909   004F84  EFC6  F027         	goto	u8380
  7910   004F88                     u8381:
  7911   004F88  EFD1  F027         	goto	l7983
  7912   004F8C                     u8380:
  7913   004F8C                     
  7914                           ; BSR set to: 0
  7915                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  7916   004F8C  078C               	decf	efgtoa@n& (0+255),f,b
  7917   004F8E  A0D8               	btfss	status,0,c
  7918   004F90  078D               	decf	(efgtoa@n+1)& (0+255),f,b
  7919   004F92  0E00               	movlw	low _dbuf
  7920   004F94  258C               	addwf	efgtoa@n& (0+255),w,b
  7921   004F96  6ED9               	movwf	fsr2l,c
  7922   004F98  0E04               	movlw	high _dbuf
  7923   004F9A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7924   004F9C  6EDA               	movwf	fsr2h,c
  7925   004F9E  C087  FFDF         	movff	efgtoa@sign,indf2
  7926   004FA2                     l7983:
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  7930   004FA2  517D               	movf	efgtoa@i& (0+255),w,b
  7931   004FA4  5F77               	subwf	efgtoa@w& (0+255),f,b
  7932   004FA6  517E               	movf	(efgtoa@i+1)& (0+255),w,b
  7933   004FA8  5B78               	subwfb	(efgtoa@w+1)& (0+255),f,b
  7934   004FAA                     
  7935                           ; BSR set to: 0
  7936                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  7937   004FAA  C060  F010         	movff	efgtoa@fp,pad@fp
  7938   004FAE  0E00               	movlw	low _dbuf
  7939   004FB0  258C               	addwf	efgtoa@n& (0+255),w,b
  7940   004FB2  6E11               	movwf	pad@buf^0,c
  7941   004FB4  0E04               	movlw	high _dbuf
  7942   004FB6  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7943   004FB8  6E12               	movwf	(pad@buf+1)^0,c
  7944   004FBA  C077  F013         	movff	efgtoa@w,pad@p
  7945   004FBE  C078  F014         	movff	efgtoa@w+1,pad@p+1
  7946   004FC2  EC1C  F03D         	call	_pad	;wreg free
  7947   004FC6                     l1282:
  7948   004FC6  0012               	return		;funcret
  7949   004FC8                     __end_of_efgtoa:
  7950                           	callstack 0
  7951                           
  7952 ;; *************** function _strcpy *****************
  7953 ;; Defined at:
  7954 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;  dest            2    1[COMRAM] PTR unsigned char 
  7957 ;;		 -> dbuf(80), 
  7958 ;;  src             1    3[COMRAM] PTR const unsigned char 
  7959 ;;		 -> STR_11(4), STR_8(4), 
  7960 ;; Auto vars:     Size  Location     Type
  7961 ;;  d               2    5[COMRAM] PTR unsigned char 
  7962 ;;		 -> dbuf(80), 
  7963 ;; Return value:  Size  Location     Type
  7964 ;;                  2    1[COMRAM] PTR unsigned char 
  7965 ;; Registers used:
  7966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7967 ;; Tracked objects:
  7968 ;;		On entry : 0/0
  7969 ;;		On exit  : 0/0
  7970 ;;		Unchanged: 0/0
  7971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7972 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7975 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7976 ;;Total ram usage:        6 bytes
  7977 ;; Hardware stack levels used: 1
  7978 ;; Hardware stack levels required when called: 2
  7979 ;; This function calls:
  7980 ;;		Nothing
  7981 ;; This function is called by:
  7982 ;;		_efgtoa
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           	psect	text22
  7987   007E82                     __ptext22:
  7988                           	callstack 0
  7989   007E82                     _strcpy:
  7990                           	callstack 24
  7991   007E82  C002  F006         	movff	strcpy@dest,strcpy@d
  7992   007E86  C003  F007         	movff	strcpy@dest+1,strcpy@d+1
  7993   007E8A                     l7637:
  7994   007E8A  2A04               	incf	strcpy@src^0,f,c
  7995   007E8C  0404               	decf	strcpy@src^0,w,c
  7996   007E8E  6E05               	movwf	??_strcpy^0,c
  7997   007E90  C005  FFF6         	movff	??_strcpy,tblptrl
  7998   007E94                     	if	1	;There is more than 1 active tblptr byte
  7999   007E94  0E0E               	movlw	high __smallconst
  8000   007E96  6EF7               	movwf	tblptrh,c
  8001   007E98                     	endif
  8002   007E98                     	if	0	;tblptru may be non-zero
  8003   007E98                     	endif
  8004   007E98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8005   007E98  0E00               	movlw	low (__smallconst shr (0+16))
  8006   007E9A  6EF8               	movwf	tblptru,c
  8007   007E9C                     	endif
  8008   007E9C  C006  FFD9         	movff	strcpy@d,fsr2l
  8009   007EA0  C007  FFDA         	movff	strcpy@d+1,fsr2h
  8010   007EA4  4A06               	infsnz	strcpy@d^0,f,c
  8011   007EA6  2A07               	incf	(strcpy@d+1)^0,f,c
  8012   007EA8  0008               	tblrd		*
  8013   007EAA  CFF5 FFDF          	movff	tablat,indf2
  8014   007EAE  50DF               	movf	indf2,w,c
  8015   007EB0  A4D8               	btfss	status,2,c
  8016   007EB2  EF5D  F03F         	goto	u7821
  8017   007EB6  EF5F  F03F         	goto	u7820
  8018   007EBA                     u7821:
  8019   007EBA  EF45  F03F         	goto	l7637
  8020   007EBE                     u7820:
  8021   007EBE  0012               	return		;funcret
  8022   007EC0                     __end_of_strcpy:
  8023                           	callstack 0
  8024                           
  8025 ;; *************** function _pad *****************
  8026 ;; Defined at:
  8027 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;  fp              1   15[COMRAM] PTR struct _IO_FILE
  8030 ;;		 -> sprintf@f(12), 
  8031 ;;  buf             2   16[COMRAM] PTR unsigned char 
  8032 ;;		 -> dbuf(80), 
  8033 ;;  p               2   18[COMRAM] int 
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;  i               2   21[COMRAM] int 
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  1    wreg      void 
  8038 ;; Registers used:
  8039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8045 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8047 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8048 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8049 ;;Total ram usage:        8 bytes
  8050 ;; Hardware stack levels used: 1
  8051 ;; Hardware stack levels required when called: 5
  8052 ;; This function calls:
  8053 ;;		_fputc
  8054 ;;		_fputs
  8055 ;; This function is called by:
  8056 ;;		_efgtoa
  8057 ;; This function uses a non-reentrant model
  8058 ;;
  8059                           
  8060                           	psect	text23
  8061   007A38                     __ptext23:
  8062                           	callstack 0
  8063   007A38                     _pad:
  8064                           	callstack 21
  8065   007A38                     
  8066                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  8067   007A38  BE14               	btfsc	(pad@p+1)^0,7,c
  8068   007A3A  EF23  F03D         	goto	u7730
  8069   007A3E  EF21  F03D         	goto	u7731
  8070   007A42                     u7731:
  8071   007A42  EF27  F03D         	goto	l1267
  8072   007A46                     u7730:
  8073   007A46                     
  8074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  8075   007A46  0E00               	movlw	0
  8076   007A48  6E14               	movwf	(pad@p+1)^0,c
  8077   007A4A  0E00               	movlw	0
  8078   007A4C  6E13               	movwf	pad@p^0,c
  8079   007A4E                     l1267:
  8080                           
  8081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  8082   007A4E  0E00               	movlw	0
  8083   007A50  6E17               	movwf	(pad@i+1)^0,c
  8084   007A52  0E00               	movlw	0
  8085   007A54  6E16               	movwf	pad@i^0,c
  8086                           
  8087                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  8088   007A56  EF37  F03D         	goto	l7609
  8089   007A5A                     l7605:
  8090                           
  8091                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  8092   007A5A  0E00               	movlw	0
  8093   007A5C  6E03               	movwf	(fputc@c+1)^0,c
  8094   007A5E  0E20               	movlw	32
  8095   007A60  6E02               	movwf	fputc@c^0,c
  8096   007A62  C010  F004         	movff	pad@fp,fputc@fp
  8097   007A66  ECFF  F03A         	call	_fputc	;wreg free
  8098   007A6A                     
  8099                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  8100   007A6A  4A16               	infsnz	pad@i^0,f,c
  8101   007A6C  2A17               	incf	(pad@i+1)^0,f,c
  8102   007A6E                     l7609:
  8103                           
  8104                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  8105   007A6E  5013               	movf	pad@p^0,w,c
  8106   007A70  5C16               	subwf	pad@i^0,w,c
  8107   007A72  5017               	movf	(pad@i+1)^0,w,c
  8108   007A74  0A80               	xorlw	128
  8109   007A76  6E15               	movwf	??_pad^0,c
  8110   007A78  5014               	movf	(pad@p+1)^0,w,c
  8111   007A7A  0A80               	xorlw	128
  8112   007A7C  5815               	subwfb	??_pad^0,w,c
  8113   007A7E  A0D8               	btfss	status,0,c
  8114   007A80  EF44  F03D         	goto	u7741
  8115   007A84  EF46  F03D         	goto	u7740
  8116   007A88                     u7741:
  8117   007A88  EF2D  F03D         	goto	l7605
  8118   007A8C                     u7740:
  8119   007A8C                     
  8120                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  8121   007A8C  C011  F00A         	movff	pad@buf,fputs@s
  8122   007A90  C012  F00B         	movff	pad@buf+1,fputs@s+1
  8123   007A94  C010  F00C         	movff	pad@fp,fputs@fp
  8124   007A98  EC21  F03F         	call	_fputs	;wreg free
  8125   007A9C  0012               	return		;funcret
  8126   007A9E                     __end_of_pad:
  8127                           	callstack 0
  8128                           
  8129 ;; *************** function _fputs *****************
  8130 ;; Defined at:
  8131 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  8132 ;; Parameters:    Size  Location     Type
  8133 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8134 ;;		 -> dbuf(80), 
  8135 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  8136 ;;		 -> sprintf@f(12), 
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;  i               2   13[COMRAM] int 
  8139 ;;  c               1   12[COMRAM] unsigned char 
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  2    9[COMRAM] int 
  8142 ;; Registers used:
  8143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8149 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8150 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8152 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8153 ;;Total ram usage:        6 bytes
  8154 ;; Hardware stack levels used: 1
  8155 ;; Hardware stack levels required when called: 4
  8156 ;; This function calls:
  8157 ;;		_fputc
  8158 ;; This function is called by:
  8159 ;;		_pad
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text24
  8164   007E42                     __ptext24:
  8165                           	callstack 0
  8166   007E42                     _fputs:
  8167                           	callstack 21
  8168   007E42  0E00               	movlw	0
  8169   007E44  6E0F               	movwf	(fputs@i+1)^0,c
  8170   007E46  0E00               	movlw	0
  8171   007E48  6E0E               	movwf	fputs@i^0,c
  8172   007E4A  EF30  F03F         	goto	l7235
  8173   007E4E                     l7231:
  8174   007E4E  C00D  F002         	movff	fputs@c,fputc@c
  8175   007E52  6A03               	clrf	(fputc@c+1)^0,c
  8176   007E54  C00C  F004         	movff	fputs@fp,fputc@fp
  8177   007E58  ECFF  F03A         	call	_fputc	;wreg free
  8178   007E5C  4A0E               	infsnz	fputs@i^0,f,c
  8179   007E5E  2A0F               	incf	(fputs@i+1)^0,f,c
  8180   007E60                     l7235:
  8181   007E60  500E               	movf	fputs@i^0,w,c
  8182   007E62  240A               	addwf	fputs@s^0,w,c
  8183   007E64  6ED9               	movwf	fsr2l,c
  8184   007E66  500F               	movf	(fputs@i+1)^0,w,c
  8185   007E68  200B               	addwfc	(fputs@s+1)^0,w,c
  8186   007E6A  6EDA               	movwf	fsr2h,c
  8187   007E6C  50DF               	movf	indf2,w,c
  8188   007E6E  6E0D               	movwf	fputs@c^0,c
  8189   007E70  500D               	movf	fputs@c^0,w,c
  8190   007E72  A4D8               	btfss	status,2,c
  8191   007E74  EF3E  F03F         	goto	u7141
  8192   007E78  EF40  F03F         	goto	u7140
  8193   007E7C                     u7141:
  8194   007E7C  EF27  F03F         	goto	l7231
  8195   007E80                     u7140:
  8196   007E80  0012               	return		;funcret
  8197   007E82                     __end_of_fputs:
  8198                           	callstack 0
  8199                           
  8200 ;; *************** function _fputc *****************
  8201 ;; Defined at:
  8202 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;  c               2    1[COMRAM] int 
  8205 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  8206 ;;		 -> sprintf@f(12), 
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;		None
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  2    1[COMRAM] int 
  8211 ;; Registers used:
  8212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8218 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8220 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8221 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8222 ;;Total ram usage:        8 bytes
  8223 ;; Hardware stack levels used: 1
  8224 ;; Hardware stack levels required when called: 3
  8225 ;; This function calls:
  8226 ;;		_putch
  8227 ;; This function is called by:
  8228 ;;		_pad
  8229 ;;		_vfpfcnvrt
  8230 ;;		_fputs
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           	psect	text25
  8235   0075FE                     __ptext25:
  8236                           	callstack 0
  8237   0075FE                     _fputc:
  8238                           	callstack 24
  8239   0075FE  5004               	movf	fputc@fp^0,w,c
  8240   007600  B4D8               	btfsc	status,2,c
  8241   007602  EF05  F03B         	goto	u6711
  8242   007606  EF07  F03B         	goto	u6710
  8243   00760A                     u6711:
  8244   00760A  EF0F  F03B         	goto	l7017
  8245   00760E                     u6710:
  8246   00760E  5004               	movf	fputc@fp^0,w,c
  8247   007610  A4D8               	btfss	status,2,c
  8248   007612  EF0D  F03B         	goto	u6721
  8249   007616  EF0F  F03B         	goto	u6720
  8250   00761A                     u6721:
  8251   00761A  EF14  F03B         	goto	l7019
  8252   00761E                     u6720:
  8253   00761E                     l7017:
  8254   00761E  5002               	movf	fputc@c^0,w,c
  8255   007620  EC78  F040         	call	_putch
  8256   007624  EF5B  F03B         	goto	l1416
  8257   007628                     l7019:
  8258   007628  5004               	movf	fputc@fp^0,w,c
  8259   00762A  6ED9               	movwf	fsr2l,c
  8260   00762C  6ADA               	clrf	fsr2h,c
  8261   00762E  0E0A               	movlw	10
  8262   007630  26D9               	addwf	fsr2l,f,c
  8263   007632  50DE               	movf	postinc2,w,c
  8264   007634  10DE               	iorwf	postinc2,w,c
  8265   007636  B4D8               	btfsc	status,2,c
  8266   007638  EF20  F03B         	goto	u6731
  8267   00763C  EF22  F03B         	goto	u6730
  8268   007640                     u6731:
  8269   007640  EF3B  F03B         	goto	l7023
  8270   007644                     u6730:
  8271   007644  5004               	movf	fputc@fp^0,w,c
  8272   007646  6ED9               	movwf	fsr2l,c
  8273   007648  6ADA               	clrf	fsr2h,c
  8274   00764A  0E0A               	movlw	10
  8275   00764C  26D9               	addwf	fsr2l,f,c
  8276   00764E  5004               	movf	fputc@fp^0,w,c
  8277   007650  6EE1               	movwf	fsr1l,c
  8278   007652  6AE2               	clrf	fsr1h,c
  8279   007654  0E03               	movlw	3
  8280   007656  26E1               	addwf	fsr1l,f,c
  8281   007658  50DE               	movf	postinc2,w,c
  8282   00765A  5CE6               	subwf	postinc1,w,c
  8283   00765C  50E6               	movf	postinc1,w,c
  8284   00765E  0A80               	xorlw	128
  8285   007660  6E09               	movwf	(??_fputc+4)^0,c
  8286   007662  50DE               	movf	postinc2,w,c
  8287   007664  0A80               	xorlw	128
  8288   007666  5809               	subwfb	(??_fputc+4)^0,w,c
  8289   007668  B0D8               	btfsc	status,0,c
  8290   00766A  EF39  F03B         	goto	u6741
  8291   00766E  EF3B  F03B         	goto	u6740
  8292   007672                     u6741:
  8293   007672  EF5B  F03B         	goto	l1416
  8294   007676                     u6740:
  8295   007676                     l7023:
  8296   007676  5004               	movf	fputc@fp^0,w,c
  8297   007678  6ED9               	movwf	fsr2l,c
  8298   00767A  6ADA               	clrf	fsr2h,c
  8299   00767C  0E03               	movlw	3
  8300   00767E  26D9               	addwf	fsr2l,f,c
  8301   007680  CFDE F005          	movff	postinc2,??_fputc
  8302   007684  CFDD F006          	movff	postdec2,??_fputc+1
  8303   007688  5004               	movf	fputc@fp^0,w,c
  8304   00768A  6ED9               	movwf	fsr2l,c
  8305   00768C  6ADA               	clrf	fsr2h,c
  8306   00768E  CFDE F007          	movff	postinc2,??_fputc+2
  8307   007692  CFDD F008          	movff	postdec2,??_fputc+3
  8308   007696  5005               	movf	??_fputc^0,w,c
  8309   007698  2407               	addwf	(??_fputc+2)^0,w,c
  8310   00769A  6ED9               	movwf	fsr2l,c
  8311   00769C  5006               	movf	(??_fputc+1)^0,w,c
  8312   00769E  2008               	addwfc	(??_fputc+3)^0,w,c
  8313   0076A0  6EDA               	movwf	fsr2h,c
  8314   0076A2  C002  FFDF         	movff	fputc@c,indf2
  8315   0076A6  5004               	movf	fputc@fp^0,w,c
  8316   0076A8  6ED9               	movwf	fsr2l,c
  8317   0076AA  6ADA               	clrf	fsr2h,c
  8318   0076AC  0E03               	movlw	3
  8319   0076AE  26D9               	addwf	fsr2l,f,c
  8320   0076B0  2ADE               	incf	postinc2,f,c
  8321   0076B2  0E00               	movlw	0
  8322   0076B4  22DD               	addwfc	postdec2,f,c
  8323   0076B6                     l1416:
  8324   0076B6  0012               	return		;funcret
  8325   0076B8                     __end_of_fputc:
  8326                           	callstack 0
  8327                           
  8328 ;; *************** function _putch *****************
  8329 ;; Defined at:
  8330 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  c               1    wreg     unsigned char 
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;  c               1    0[COMRAM] unsigned char 
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  1    wreg      void 
  8337 ;; Registers used:
  8338 ;;		wreg
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8348 ;;Total ram usage:        0 bytes
  8349 ;; Hardware stack levels used: 1
  8350 ;; Hardware stack levels required when called: 2
  8351 ;; This function calls:
  8352 ;;		Nothing
  8353 ;; This function is called by:
  8354 ;;		_fputc
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text26
  8359   0080F0                     __ptext26:
  8360                           	callstack 0
  8361   0080F0                     _putch:
  8362                           	callstack 24
  8363   0080F0  0012               	return		;funcret
  8364   0080F2                     __end_of_putch:
  8365                           	callstack 0
  8366                           
  8367 ;; *************** function _memcpy *****************
  8368 ;; Defined at:
  8369 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;  d1              2    1[COMRAM] PTR void 
  8372 ;;		 -> dbuf(80), 
  8373 ;;  s1              2    3[COMRAM] PTR const void 
  8374 ;;		 -> dbuf(80), 
  8375 ;;  n               2    5[COMRAM] unsigned int 
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;  s               2   10[COMRAM] PTR const unsigned char 
  8378 ;;		 -> dbuf(80), 
  8379 ;;  d               2    8[COMRAM] PTR unsigned char 
  8380 ;;		 -> dbuf(80), 
  8381 ;;  tmp             1    7[COMRAM] unsigned char 
  8382 ;; Return value:  Size  Location     Type
  8383 ;;                  2    1[COMRAM] PTR void 
  8384 ;; Registers used:
  8385 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8386 ;; Tracked objects:
  8387 ;;		On entry : 0/0
  8388 ;;		On exit  : 0/0
  8389 ;;		Unchanged: 0/0
  8390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8391 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8392 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8394 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8395 ;;Total ram usage:       11 bytes
  8396 ;; Hardware stack levels used: 1
  8397 ;; Hardware stack levels required when called: 2
  8398 ;; This function calls:
  8399 ;;		Nothing
  8400 ;; This function is called by:
  8401 ;;		_efgtoa
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           	psect	text27
  8406   007B5A                     __ptext27:
  8407                           	callstack 0
  8408   007B5A                     _memcpy:
  8409                           	callstack 24
  8410   007B5A  C004  F00B         	movff	memcpy@s1,memcpy@s
  8411   007B5E  C005  F00C         	movff	memcpy@s1+1,memcpy@s+1
  8412   007B62  C002  F009         	movff	memcpy@d1,memcpy@d
  8413   007B66  C003  F00A         	movff	memcpy@d1+1,memcpy@d+1
  8414   007B6A  EFC7  F03D         	goto	l7685
  8415   007B6E                     l7677:
  8416   007B6E  C00B  FFD9         	movff	memcpy@s,fsr2l
  8417   007B72  C00C  FFDA         	movff	memcpy@s+1,fsr2h
  8418   007B76  50DF               	movf	indf2,w,c
  8419   007B78  6E08               	movwf	memcpy@tmp^0,c
  8420   007B7A  4A0B               	infsnz	memcpy@s^0,f,c
  8421   007B7C  2A0C               	incf	(memcpy@s+1)^0,f,c
  8422   007B7E  C009  FFD9         	movff	memcpy@d,fsr2l
  8423   007B82  C00A  FFDA         	movff	memcpy@d+1,fsr2h
  8424   007B86  C008  FFDF         	movff	memcpy@tmp,indf2
  8425   007B8A  4A09               	infsnz	memcpy@d^0,f,c
  8426   007B8C  2A0A               	incf	(memcpy@d+1)^0,f,c
  8427   007B8E                     l7685:
  8428   007B8E  0606               	decf	memcpy@n^0,f,c
  8429   007B90  A0D8               	btfss	status,0,c
  8430   007B92  0607               	decf	(memcpy@n+1)^0,f,c
  8431   007B94  2806               	incf	memcpy@n^0,w,c
  8432   007B96  E106               	bnz	u7941
  8433   007B98  2807               	incf	(memcpy@n+1)^0,w,c
  8434   007B9A  A4D8               	btfss	status,2,c
  8435   007B9C  EFD2  F03D         	goto	u7941
  8436   007BA0  EFD4  F03D         	goto	u7940
  8437   007BA4                     u7941:
  8438   007BA4  EFB7  F03D         	goto	l7677
  8439   007BA8                     u7940:
  8440   007BA8  0012               	return		;funcret
  8441   007BAA                     __end_of_memcpy:
  8442                           	callstack 0
  8443                           
  8444 ;; *************** function _labs *****************
  8445 ;; Defined at:
  8446 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  a               4    1[COMRAM] long 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;		None
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  4    1[COMRAM] long 
  8453 ;; Registers used:
  8454 ;;		wreg, status,2, status,0
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8460 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8462 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8463 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8464 ;;Total ram usage:        8 bytes
  8465 ;; Hardware stack levels used: 1
  8466 ;; Hardware stack levels required when called: 2
  8467 ;; This function calls:
  8468 ;;		Nothing
  8469 ;; This function is called by:
  8470 ;;		_efgtoa
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           	psect	text28
  8475   007B04                     __ptext28:
  8476                           	callstack 0
  8477   007B04                     _labs:
  8478                           	callstack 24
  8479   007B04  BE05               	btfsc	(labs@a+3)^0,7,c
  8480   007B06  EF87  F03D         	goto	u7831
  8481   007B0A  EF89  F03D         	goto	u7830
  8482   007B0E                     u7831:
  8483   007B0E  EF93  F03D         	goto	l7643
  8484   007B12                     u7830:
  8485   007B12  C002  F002         	movff	labs@a,?_labs
  8486   007B16  C003  F003         	movff	labs@a+1,?_labs+1
  8487   007B1A  C004  F004         	movff	labs@a+2,?_labs+2
  8488   007B1E  C005  F005         	movff	labs@a+3,?_labs+3
  8489   007B22  EFAC  F03D         	goto	l1398
  8490   007B26                     l7643:
  8491   007B26  C002  F006         	movff	labs@a,??_labs
  8492   007B2A  C003  F007         	movff	labs@a+1,??_labs+1
  8493   007B2E  C004  F008         	movff	labs@a+2,??_labs+2
  8494   007B32  C005  F009         	movff	labs@a+3,??_labs+3
  8495   007B36  1E06               	comf	??_labs^0,f,c
  8496   007B38  1E07               	comf	(??_labs+1)^0,f,c
  8497   007B3A  1E08               	comf	(??_labs+2)^0,f,c
  8498   007B3C  1E09               	comf	(??_labs+3)^0,f,c
  8499   007B3E  2A06               	incf	??_labs^0,f,c
  8500   007B40  0E00               	movlw	0
  8501   007B42  2207               	addwfc	(??_labs+1)^0,f,c
  8502   007B44  2208               	addwfc	(??_labs+2)^0,f,c
  8503   007B46  2209               	addwfc	(??_labs+3)^0,f,c
  8504   007B48  C006  F002         	movff	??_labs,?_labs
  8505   007B4C  C007  F003         	movff	??_labs+1,?_labs+1
  8506   007B50  C008  F004         	movff	??_labs+2,?_labs+2
  8507   007B54  C009  F005         	movff	??_labs+3,?_labs+3
  8508   007B58                     l1398:
  8509   007B58  0012               	return		;funcret
  8510   007B5A                     __end_of_labs:
  8511                           	callstack 0
  8512                           
  8513 ;; *************** function _floorf *****************
  8514 ;; Defined at:
  8515 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  x               4   67[COMRAM] float 
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;  u               4   83[COMRAM] struct .
  8520 ;;  m               4   77[COMRAM] unsigned long 
  8521 ;;  e               2   81[COMRAM] int 
  8522 ;; Return value:  Size  Location     Type
  8523 ;;                  4   67[COMRAM] float 
  8524 ;; Registers used:
  8525 ;;		wreg, status,2, status,0
  8526 ;; Tracked objects:
  8527 ;;		On entry : 0/0
  8528 ;;		On exit  : 0/0
  8529 ;;		Unchanged: 0/0
  8530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8531 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8532 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8533 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8534 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8535 ;;Total ram usage:       20 bytes
  8536 ;; Hardware stack levels used: 1
  8537 ;; Hardware stack levels required when called: 2
  8538 ;; This function calls:
  8539 ;;		Nothing
  8540 ;; This function is called by:
  8541 ;;		_efgtoa
  8542 ;; This function uses a non-reentrant model
  8543 ;;
  8544                           
  8545                           	psect	text29
  8546   0065AC                     __ptext29:
  8547                           	callstack 0
  8548   0065AC                     _floorf:
  8549                           	callstack 24
  8550   0065AC  C0CF  F054         	movff	floorf@F521,floorf@u
  8551   0065B0  C0D0  F055         	movff	floorf@F521+1,floorf@u+1
  8552   0065B4  C0D1  F056         	movff	floorf@F521+2,floorf@u+2
  8553   0065B8  C0D2  F057         	movff	floorf@F521+3,floorf@u+3
  8554   0065BC  C044  F054         	movff	floorf@x,floorf@u
  8555   0065C0  C045  F055         	movff	floorf@x+1,floorf@u+1
  8556   0065C4  C046  F056         	movff	floorf@x+2,floorf@u+2
  8557   0065C8  C047  F057         	movff	floorf@x+3,floorf@u+3
  8558   0065CC  0E81               	movlw	129
  8559   0065CE  6E48               	movwf	??_floorf^0,c
  8560   0065D0  0EFF               	movlw	255
  8561   0065D2  6E49               	movwf	(??_floorf+1)^0,c
  8562   0065D4  C054  F04A         	movff	floorf@u,??_floorf+2
  8563   0065D8  C055  F04B         	movff	floorf@u+1,??_floorf+3
  8564   0065DC  C056  F04C         	movff	floorf@u+2,??_floorf+4
  8565   0065E0  C057  F04D         	movff	floorf@u+3,??_floorf+5
  8566   0065E4  0E18               	movlw	24
  8567   0065E6  EFFA  F032         	goto	u7840
  8568   0065EA                     u7845:
  8569   0065EA  90D8               	bcf	status,0,c
  8570   0065EC  324D               	rrcf	(??_floorf+5)^0,f,c
  8571   0065EE  324C               	rrcf	(??_floorf+4)^0,f,c
  8572   0065F0  324B               	rrcf	(??_floorf+3)^0,f,c
  8573   0065F2  324A               	rrcf	(??_floorf+2)^0,f,c
  8574   0065F4                     u7840:
  8575   0065F4  2EE8               	decfsz	wreg,f,c
  8576   0065F6  EFF5  F032         	goto	u7845
  8577   0065FA  504A               	movf	(??_floorf+2)^0,w,c
  8578   0065FC  2448               	addwf	??_floorf^0,w,c
  8579   0065FE  6E52               	movwf	floorf@e^0,c
  8580   006600  0E00               	movlw	0
  8581   006602  2049               	addwfc	(??_floorf+1)^0,w,c
  8582   006604  6E53               	movwf	(floorf@e+1)^0,c
  8583   006606  BE53               	btfsc	(floorf@e+1)^0,7,c
  8584   006608  EF0F  F033         	goto	u7851
  8585   00660C  5053               	movf	(floorf@e+1)^0,w,c
  8586   00660E  E109               	bnz	u7850
  8587   006610  0E17               	movlw	23
  8588   006612  5C52               	subwf	floorf@e^0,w,c
  8589   006614  A0D8               	btfss	status,0,c
  8590   006616  EF0F  F033         	goto	u7851
  8591   00661A  EF11  F033         	goto	u7850
  8592   00661E                     u7851:
  8593   00661E  EF1B  F033         	goto	l7653
  8594   006622                     u7850:
  8595   006622                     l7651:
  8596   006622  C044  F044         	movff	floorf@x,?_floorf
  8597   006626  C045  F045         	movff	floorf@x+1,?_floorf+1
  8598   00662A  C046  F046         	movff	floorf@x+2,?_floorf+2
  8599   00662E  C047  F047         	movff	floorf@x+3,?_floorf+3
  8600   006632  EFDE  F033         	goto	l1384
  8601   006636                     l7653:
  8602   006636  BE53               	btfsc	(floorf@e+1)^0,7,c
  8603   006638  EF20  F033         	goto	u7861
  8604   00663C  EF22  F033         	goto	u7860
  8605   006640                     u7861:
  8606   006640  EF92  F033         	goto	l7663
  8607   006644                     u7860:
  8608   006644  C052  F048         	movff	floorf@e,??_floorf
  8609   006648  0EFF               	movlw	255
  8610   00664A  6E49               	movwf	(??_floorf+1)^0,c
  8611   00664C  0EFF               	movlw	255
  8612   00664E  6E4A               	movwf	(??_floorf+2)^0,c
  8613   006650  0E7F               	movlw	127
  8614   006652  6E4B               	movwf	(??_floorf+3)^0,c
  8615   006654  0E00               	movlw	0
  8616   006656  6E4C               	movwf	(??_floorf+4)^0,c
  8617   006658                     u7875:
  8618   006658  6648               	tstfsz	??_floorf^0,c
  8619   00665A  EF31  F033         	goto	u7876
  8620   00665E  EF39  F033         	goto	u7877
  8621   006662                     u7876:
  8622   006662  344C               	rlcf	(??_floorf+4)^0,w,c
  8623   006664  324C               	rrcf	(??_floorf+4)^0,f,c
  8624   006666  324B               	rrcf	(??_floorf+3)^0,f,c
  8625   006668  324A               	rrcf	(??_floorf+2)^0,f,c
  8626   00666A  3249               	rrcf	(??_floorf+1)^0,f,c
  8627   00666C  2E48               	decfsz	??_floorf^0,f,c
  8628   00666E  EF2C  F033         	goto	u7875
  8629   006672                     u7877:
  8630   006672  C049  F04E         	movff	??_floorf+1,floorf@m
  8631   006676  C04A  F04F         	movff	??_floorf+2,floorf@m+1
  8632   00667A  C04B  F050         	movff	??_floorf+3,floorf@m+2
  8633   00667E  C04C  F051         	movff	??_floorf+4,floorf@m+3
  8634   006682  504E               	movf	floorf@m^0,w,c
  8635   006684  1454               	andwf	floorf@u^0,w,c
  8636   006686  6E48               	movwf	??_floorf^0,c
  8637   006688  504F               	movf	(floorf@m+1)^0,w,c
  8638   00668A  1455               	andwf	(floorf@u+1)^0,w,c
  8639   00668C  6E49               	movwf	(??_floorf+1)^0,c
  8640   00668E  5050               	movf	(floorf@m+2)^0,w,c
  8641   006690  1456               	andwf	(floorf@u+2)^0,w,c
  8642   006692  6E4A               	movwf	(??_floorf+2)^0,c
  8643   006694  5051               	movf	(floorf@m+3)^0,w,c
  8644   006696  1457               	andwf	(floorf@u+3)^0,w,c
  8645   006698  6E4B               	movwf	(??_floorf+3)^0,c
  8646   00669A  5048               	movf	??_floorf^0,w,c
  8647   00669C  1049               	iorwf	(??_floorf+1)^0,w,c
  8648   00669E  104A               	iorwf	(??_floorf+2)^0,w,c
  8649   0066A0  104B               	iorwf	(??_floorf+3)^0,w,c
  8650   0066A2  A4D8               	btfss	status,2,c
  8651   0066A4  EF56  F033         	goto	u7881
  8652   0066A8  EF58  F033         	goto	u7880
  8653   0066AC                     u7881:
  8654   0066AC  EF5A  F033         	goto	l7659
  8655   0066B0                     u7880:
  8656   0066B0  EF11  F033         	goto	l7651
  8657   0066B4                     l7659:
  8658   0066B4  C054  F048         	movff	floorf@u,??_floorf
  8659   0066B8  C055  F049         	movff	floorf@u+1,??_floorf+1
  8660   0066BC  C056  F04A         	movff	floorf@u+2,??_floorf+2
  8661   0066C0  C057  F04B         	movff	floorf@u+3,??_floorf+3
  8662   0066C4  0E20               	movlw	32
  8663   0066C6  EF6A  F033         	goto	u7890
  8664   0066CA                     u7895:
  8665   0066CA  90D8               	bcf	status,0,c
  8666   0066CC  324B               	rrcf	(??_floorf+3)^0,f,c
  8667   0066CE  324A               	rrcf	(??_floorf+2)^0,f,c
  8668   0066D0  3249               	rrcf	(??_floorf+1)^0,f,c
  8669   0066D2  3248               	rrcf	??_floorf^0,f,c
  8670   0066D4                     u7890:
  8671   0066D4  2EE8               	decfsz	wreg,f,c
  8672   0066D6  EF65  F033         	goto	u7895
  8673   0066DA  5048               	movf	??_floorf^0,w,c
  8674   0066DC  1049               	iorwf	(??_floorf+1)^0,w,c
  8675   0066DE  104A               	iorwf	(??_floorf+2)^0,w,c
  8676   0066E0  104B               	iorwf	(??_floorf+3)^0,w,c
  8677   0066E2  B4D8               	btfsc	status,2,c
  8678   0066E4  EF76  F033         	goto	u7901
  8679   0066E8  EF78  F033         	goto	u7900
  8680   0066EC                     u7901:
  8681   0066EC  EF80  F033         	goto	l1387
  8682   0066F0                     u7900:
  8683   0066F0  504E               	movf	floorf@m^0,w,c
  8684   0066F2  2654               	addwf	floorf@u^0,f,c
  8685   0066F4  504F               	movf	(floorf@m+1)^0,w,c
  8686   0066F6  2255               	addwfc	(floorf@u+1)^0,f,c
  8687   0066F8  5050               	movf	(floorf@m+2)^0,w,c
  8688   0066FA  2256               	addwfc	(floorf@u+2)^0,f,c
  8689   0066FC  5051               	movf	(floorf@m+3)^0,w,c
  8690   0066FE  2257               	addwfc	(floorf@u+3)^0,f,c
  8691   006700                     l1387:
  8692   006700  1C4E               	comf	floorf@m^0,w,c
  8693   006702  6E48               	movwf	??_floorf^0,c
  8694   006704  1C4F               	comf	(floorf@m+1)^0,w,c
  8695   006706  6E49               	movwf	(??_floorf+1)^0,c
  8696   006708  1C50               	comf	(floorf@m+2)^0,w,c
  8697   00670A  6E4A               	movwf	(??_floorf+2)^0,c
  8698   00670C  1C51               	comf	(floorf@m+3)^0,w,c
  8699   00670E  6E4B               	movwf	(??_floorf+3)^0,c
  8700   006710  5048               	movf	??_floorf^0,w,c
  8701   006712  1654               	andwf	floorf@u^0,f,c
  8702   006714  5049               	movf	(??_floorf+1)^0,w,c
  8703   006716  1655               	andwf	(floorf@u+1)^0,f,c
  8704   006718  504A               	movf	(??_floorf+2)^0,w,c
  8705   00671A  1656               	andwf	(floorf@u+2)^0,f,c
  8706   00671C  504B               	movf	(??_floorf+3)^0,w,c
  8707   00671E  1657               	andwf	(floorf@u+3)^0,f,c
  8708   006720  EFD6  F033         	goto	l7671
  8709   006724                     l7663:
  8710   006724  C054  F048         	movff	floorf@u,??_floorf
  8711   006728  C055  F049         	movff	floorf@u+1,??_floorf+1
  8712   00672C  C056  F04A         	movff	floorf@u+2,??_floorf+2
  8713   006730  C057  F04B         	movff	floorf@u+3,??_floorf+3
  8714   006734  0E20               	movlw	32
  8715   006736  EFA2  F033         	goto	u7910
  8716   00673A                     u7915:
  8717   00673A  90D8               	bcf	status,0,c
  8718   00673C  324B               	rrcf	(??_floorf+3)^0,f,c
  8719   00673E  324A               	rrcf	(??_floorf+2)^0,f,c
  8720   006740  3249               	rrcf	(??_floorf+1)^0,f,c
  8721   006742  3248               	rrcf	??_floorf^0,f,c
  8722   006744                     u7910:
  8723   006744  2EE8               	decfsz	wreg,f,c
  8724   006746  EF9D  F033         	goto	u7915
  8725   00674A  5048               	movf	??_floorf^0,w,c
  8726   00674C  1049               	iorwf	(??_floorf+1)^0,w,c
  8727   00674E  104A               	iorwf	(??_floorf+2)^0,w,c
  8728   006750  104B               	iorwf	(??_floorf+3)^0,w,c
  8729   006752  A4D8               	btfss	status,2,c
  8730   006754  EFAE  F033         	goto	u7921
  8731   006758  EFB0  F033         	goto	u7920
  8732   00675C                     u7921:
  8733   00675C  EFBA  F033         	goto	l7667
  8734   006760                     u7920:
  8735   006760  0E00               	movlw	0
  8736   006762  6E54               	movwf	floorf@u^0,c
  8737   006764  0E00               	movlw	0
  8738   006766  6E55               	movwf	(floorf@u+1)^0,c
  8739   006768  0E00               	movlw	0
  8740   00676A  6E56               	movwf	(floorf@u+2)^0,c
  8741   00676C  0E00               	movlw	0
  8742   00676E  6E57               	movwf	(floorf@u+3)^0,c
  8743   006770  EFD6  F033         	goto	l7671
  8744   006774                     l7667:
  8745   006774  90D8               	bcf	status,0,c
  8746   006776  3454               	rlcf	floorf@u^0,w,c
  8747   006778  6E48               	movwf	??_floorf^0,c
  8748   00677A  3455               	rlcf	(floorf@u+1)^0,w,c
  8749   00677C  6E49               	movwf	(??_floorf+1)^0,c
  8750   00677E  3456               	rlcf	(floorf@u+2)^0,w,c
  8751   006780  6E4A               	movwf	(??_floorf+2)^0,c
  8752   006782  3457               	rlcf	(floorf@u+3)^0,w,c
  8753   006784  6E4B               	movwf	(??_floorf+3)^0,c
  8754   006786  5048               	movf	??_floorf^0,w,c
  8755   006788  1049               	iorwf	(??_floorf+1)^0,w,c
  8756   00678A  104A               	iorwf	(??_floorf+2)^0,w,c
  8757   00678C  104B               	iorwf	(??_floorf+3)^0,w,c
  8758   00678E  B4D8               	btfsc	status,2,c
  8759   006790  EFCC  F033         	goto	u7931
  8760   006794  EFCE  F033         	goto	u7930
  8761   006798                     u7931:
  8762   006798  EFD6  F033         	goto	l7671
  8763   00679C                     u7930:
  8764   00679C  0E00               	movlw	0
  8765   00679E  6E54               	movwf	floorf@u^0,c
  8766   0067A0  0E00               	movlw	0
  8767   0067A2  6E55               	movwf	(floorf@u+1)^0,c
  8768   0067A4  0E80               	movlw	128
  8769   0067A6  6E56               	movwf	(floorf@u+2)^0,c
  8770   0067A8  0EBF               	movlw	191
  8771   0067AA  6E57               	movwf	(floorf@u+3)^0,c
  8772   0067AC                     l7671:
  8773   0067AC  C054  F044         	movff	floorf@u,?_floorf
  8774   0067B0  C055  F045         	movff	floorf@u+1,?_floorf+1
  8775   0067B4  C056  F046         	movff	floorf@u+2,?_floorf+2
  8776   0067B8  C057  F047         	movff	floorf@u+3,?_floorf+3
  8777   0067BC                     l1384:
  8778   0067BC  0012               	return		;funcret
  8779   0067BE                     __end_of_floorf:
  8780                           	callstack 0
  8781                           
  8782 ;; *************** function ___fpclassifyf *****************
  8783 ;; Defined at:
  8784 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  x               4    1[COMRAM] float 
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;  u               4   11[COMRAM] struct .
  8789 ;;  e               2    9[COMRAM] int 
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  2    1[COMRAM] int 
  8792 ;; Registers used:
  8793 ;;		wreg, status,2, status,0
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8803 ;;Total ram usage:       14 bytes
  8804 ;; Hardware stack levels used: 1
  8805 ;; Hardware stack levels required when called: 2
  8806 ;; This function calls:
  8807 ;;		Nothing
  8808 ;; This function is called by:
  8809 ;;		_efgtoa
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           	psect	text30
  8814   006EF0                     __ptext30:
  8815                           	callstack 0
  8816   006EF0                     ___fpclassifyf:
  8817                           	callstack 24
  8818   006EF0  C0D3  F00C         	movff	___fpclassifyf@F465,___fpclassifyf@u
  8819   006EF4  C0D4  F00D         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  8820   006EF8  C0D5  F00E         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  8821   006EFC  C0D6  F00F         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  8822   006F00  C002  F00C         	movff	___fpclassifyf@x,___fpclassifyf@u
  8823   006F04  C003  F00D         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8824   006F08  C004  F00E         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8825   006F0C  C005  F00F         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8826   006F10  C00C  F006         	movff	___fpclassifyf@u,??___fpclassifyf
  8827   006F14  C00D  F007         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8828   006F18  C00E  F008         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8829   006F1C  C00F  F009         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8830   006F20  0E18               	movlw	24
  8831   006F22  EF98  F037         	goto	u7750
  8832   006F26                     u7755:
  8833   006F26  90D8               	bcf	status,0,c
  8834   006F28  3209               	rrcf	(??___fpclassifyf+3)^0,f,c
  8835   006F2A  3208               	rrcf	(??___fpclassifyf+2)^0,f,c
  8836   006F2C  3207               	rrcf	(??___fpclassifyf+1)^0,f,c
  8837   006F2E  3206               	rrcf	??___fpclassifyf^0,f,c
  8838   006F30                     u7750:
  8839   006F30  2EE8               	decfsz	wreg,f,c
  8840   006F32  EF93  F037         	goto	u7755
  8841   006F36  5006               	movf	??___fpclassifyf^0,w,c
  8842   006F38  6E0A               	movwf	___fpclassifyf@e^0,c
  8843   006F3A  6A0B               	clrf	(___fpclassifyf@e+1)^0,c
  8844   006F3C  500A               	movf	___fpclassifyf@e^0,w,c
  8845   006F3E  100B               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8846   006F40  A4D8               	btfss	status,2,c
  8847   006F42  EFA5  F037         	goto	u7761
  8848   006F46  EFA7  F037         	goto	u7760
  8849   006F4A                     u7761:
  8850   006F4A  EFC7  F037         	goto	l7625
  8851   006F4E                     u7760:
  8852   006F4E  90D8               	bcf	status,0,c
  8853   006F50  340C               	rlcf	___fpclassifyf@u^0,w,c
  8854   006F52  6E06               	movwf	??___fpclassifyf^0,c
  8855   006F54  340D               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8856   006F56  6E07               	movwf	(??___fpclassifyf+1)^0,c
  8857   006F58  340E               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8858   006F5A  6E08               	movwf	(??___fpclassifyf+2)^0,c
  8859   006F5C  340F               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8860   006F5E  6E09               	movwf	(??___fpclassifyf+3)^0,c
  8861   006F60  5006               	movf	??___fpclassifyf^0,w,c
  8862   006F62  1007               	iorwf	(??___fpclassifyf+1)^0,w,c
  8863   006F64  1008               	iorwf	(??___fpclassifyf+2)^0,w,c
  8864   006F66  1009               	iorwf	(??___fpclassifyf+3)^0,w,c
  8865   006F68  A4D8               	btfss	status,2,c
  8866   006F6A  EFB9  F037         	goto	u7771
  8867   006F6E  EFBB  F037         	goto	u7770
  8868   006F72                     u7771:
  8869   006F72  EFC1  F037         	goto	l7621
  8870   006F76                     u7770:
  8871   006F76  0E00               	movlw	0
  8872   006F78  6E03               	movwf	(?___fpclassifyf+1)^0,c
  8873   006F7A  0E02               	movlw	2
  8874   006F7C  6E02               	movwf	?___fpclassifyf^0,c
  8875   006F7E  EFF6  F037         	goto	l1370
  8876   006F82                     l7621:
  8877   006F82  0E00               	movlw	0
  8878   006F84  6E03               	movwf	(?___fpclassifyf+1)^0,c
  8879   006F86  0E03               	movlw	3
  8880   006F88  6E02               	movwf	?___fpclassifyf^0,c
  8881   006F8A  EFF6  F037         	goto	l1370
  8882   006F8E                     l7625:
  8883   006F8E  280A               	incf	___fpclassifyf@e^0,w,c
  8884   006F90  100B               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8885   006F92  A4D8               	btfss	status,2,c
  8886   006F94  EFCE  F037         	goto	u7781
  8887   006F98  EFD0  F037         	goto	u7780
  8888   006F9C                     u7781:
  8889   006F9C  EFF2  F037         	goto	l7631
  8890   006FA0                     u7780:
  8891   006FA0  C00C  F006         	movff	___fpclassifyf@u,??___fpclassifyf
  8892   006FA4  C00D  F007         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8893   006FA8  C00E  F008         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8894   006FAC  C00F  F009         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8895   006FB0  0E09               	movlw	9
  8896   006FB2                     u7795:
  8897   006FB2  90D8               	bcf	status,0,c
  8898   006FB4  3606               	rlcf	??___fpclassifyf^0,f,c
  8899   006FB6  3607               	rlcf	(??___fpclassifyf+1)^0,f,c
  8900   006FB8  3608               	rlcf	(??___fpclassifyf+2)^0,f,c
  8901   006FBA  3609               	rlcf	(??___fpclassifyf+3)^0,f,c
  8902   006FBC  2EE8               	decfsz	wreg,f,c
  8903   006FBE  EFD9  F037         	goto	u7795
  8904   006FC2  5006               	movf	??___fpclassifyf^0,w,c
  8905   006FC4  1007               	iorwf	(??___fpclassifyf+1)^0,w,c
  8906   006FC6  1008               	iorwf	(??___fpclassifyf+2)^0,w,c
  8907   006FC8  1009               	iorwf	(??___fpclassifyf+3)^0,w,c
  8908   006FCA  B4D8               	btfsc	status,2,c
  8909   006FCC  EFEA  F037         	goto	u7801
  8910   006FD0  EFED  F037         	goto	u7800
  8911   006FD4                     u7801:
  8912   006FD4  0E01               	movlw	1
  8913   006FD6  EFEE  F037         	goto	u7810
  8914   006FDA                     u7800:
  8915   006FDA  0E00               	movlw	0
  8916   006FDC                     u7810:
  8917   006FDC  6E02               	movwf	?___fpclassifyf^0,c
  8918   006FDE  6A03               	clrf	(?___fpclassifyf+1)^0,c
  8919   006FE0  EFF6  F037         	goto	l1370
  8920   006FE4                     l7631:
  8921   006FE4  0E00               	movlw	0
  8922   006FE6  6E03               	movwf	(?___fpclassifyf+1)^0,c
  8923   006FE8  0E04               	movlw	4
  8924   006FEA  6E02               	movwf	?___fpclassifyf^0,c
  8925   006FEC                     l1370:
  8926   006FEC  0012               	return		;funcret
  8927   006FEE                     __end_of___fpclassifyf:
  8928                           	callstack 0
  8929                           
  8930 ;; *************** function ___fltol *****************
  8931 ;; Defined at:
  8932 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  f1              4    1[COMRAM] int 
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;  exp1            1   10[COMRAM] unsigned char 
  8937 ;;  sign1           1    9[COMRAM] unsigned char 
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  4    1[COMRAM] long 
  8940 ;; Registers used:
  8941 ;;		wreg, status,2, status,0
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/0
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8948 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8949 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8950 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8951 ;;Total ram usage:       10 bytes
  8952 ;; Hardware stack levels used: 1
  8953 ;; Hardware stack levels required when called: 2
  8954 ;; This function calls:
  8955 ;;		Nothing
  8956 ;; This function is called by:
  8957 ;;		_efgtoa
  8958 ;; This function uses a non-reentrant model
  8959 ;;
  8960                           
  8961                           	psect	text31
  8962   006BE4                     __ptext31:
  8963                           	callstack 0
  8964   006BE4                     ___fltol:
  8965                           	callstack 24
  8966   006BE4  3404               	rlcf	(___fltol@f1+2)^0,w,c
  8967   006BE6  3405               	rlcf	(___fltol@f1+3)^0,w,c
  8968   006BE8  6E0B               	movwf	___fltol@exp1^0,c
  8969   006BEA  500B               	movf	___fltol@exp1^0,w,c
  8970   006BEC  A4D8               	btfss	status,2,c
  8971   006BEE  EFFB  F035         	goto	u7661
  8972   006BF2  EFFD  F035         	goto	u7660
  8973   006BF6                     u7661:
  8974   006BF6  EF07  F036         	goto	l7563
  8975   006BFA                     u7660:
  8976   006BFA                     l7559:
  8977   006BFA  0E00               	movlw	0
  8978   006BFC  6E02               	movwf	?___fltol^0,c
  8979   006BFE  0E00               	movlw	0
  8980   006C00  6E03               	movwf	(?___fltol+1)^0,c
  8981   006C02  0E00               	movlw	0
  8982   006C04  6E04               	movwf	(?___fltol+2)^0,c
  8983   006C06  0E00               	movlw	0
  8984   006C08  6E05               	movwf	(?___fltol+3)^0,c
  8985   006C0A  EF74  F036         	goto	l857
  8986   006C0E                     l7563:
  8987   006C0E  C002  F006         	movff	___fltol@f1,??___fltol
  8988   006C12  C003  F007         	movff	___fltol@f1+1,??___fltol+1
  8989   006C16  C004  F008         	movff	___fltol@f1+2,??___fltol+2
  8990   006C1A  C005  F009         	movff	___fltol@f1+3,??___fltol+3
  8991   006C1E  0E20               	movlw	32
  8992   006C20  EF17  F036         	goto	u7670
  8993   006C24                     u7675:
  8994   006C24  90D8               	bcf	status,0,c
  8995   006C26  3209               	rrcf	(??___fltol+3)^0,f,c
  8996   006C28  3208               	rrcf	(??___fltol+2)^0,f,c
  8997   006C2A  3207               	rrcf	(??___fltol+1)^0,f,c
  8998   006C2C  3206               	rrcf	??___fltol^0,f,c
  8999   006C2E                     u7670:
  9000   006C2E  2EE8               	decfsz	wreg,f,c
  9001   006C30  EF12  F036         	goto	u7675
  9002   006C34  5006               	movf	??___fltol^0,w,c
  9003   006C36  6E0A               	movwf	___fltol@sign1^0,c
  9004   006C38  8E04               	bsf	(___fltol@f1+2)^0,7,c
  9005   006C3A  0EFF               	movlw	255
  9006   006C3C  1602               	andwf	___fltol@f1^0,f,c
  9007   006C3E  0EFF               	movlw	255
  9008   006C40  1603               	andwf	(___fltol@f1+1)^0,f,c
  9009   006C42  0EFF               	movlw	255
  9010   006C44  1604               	andwf	(___fltol@f1+2)^0,f,c
  9011   006C46  0E00               	movlw	0
  9012   006C48  1605               	andwf	(___fltol@f1+3)^0,f,c
  9013   006C4A  0E96               	movlw	150
  9014   006C4C  5E0B               	subwf	___fltol@exp1^0,f,c
  9015   006C4E  BE0B               	btfsc	___fltol@exp1^0,7,c
  9016   006C50  EF2E  F036         	goto	u7680
  9017   006C54  EF2C  F036         	goto	u7681
  9018   006C58                     u7681:
  9019   006C58  EF44  F036         	goto	l7583
  9020   006C5C                     u7680:
  9021   006C5C  500B               	movf	___fltol@exp1^0,w,c
  9022   006C5E  0A80               	xorlw	128
  9023   006C60  0F97               	addlw	151
  9024   006C62  B0D8               	btfsc	status,0,c
  9025   006C64  EF36  F036         	goto	u7691
  9026   006C68  EF38  F036         	goto	u7690
  9027   006C6C                     u7691:
  9028   006C6C  EF3A  F036         	goto	l7579
  9029   006C70                     u7690:
  9030   006C70  EFFD  F035         	goto	l7559
  9031   006C74                     l7579:
  9032   006C74  90D8               	bcf	status,0,c
  9033   006C76  3205               	rrcf	(___fltol@f1+3)^0,f,c
  9034   006C78  3204               	rrcf	(___fltol@f1+2)^0,f,c
  9035   006C7A  3203               	rrcf	(___fltol@f1+1)^0,f,c
  9036   006C7C  3202               	rrcf	___fltol@f1^0,f,c
  9037   006C7E  3E0B               	incfsz	___fltol@exp1^0,f,c
  9038   006C80  EF3A  F036         	goto	l7579
  9039   006C84  EF5C  F036         	goto	l7593
  9040   006C88                     l7583:
  9041   006C88  0E1F               	movlw	31
  9042   006C8A  640B               	cpfsgt	___fltol@exp1^0,c
  9043   006C8C  EF4A  F036         	goto	u7701
  9044   006C90  EF4C  F036         	goto	u7700
  9045   006C94                     u7701:
  9046   006C94  EF54  F036         	goto	l7591
  9047   006C98                     u7700:
  9048   006C98  EFFD  F035         	goto	l7559
  9049   006C9C                     l7589:
  9050   006C9C  90D8               	bcf	status,0,c
  9051   006C9E  3602               	rlcf	___fltol@f1^0,f,c
  9052   006CA0  3603               	rlcf	(___fltol@f1+1)^0,f,c
  9053   006CA2  3604               	rlcf	(___fltol@f1+2)^0,f,c
  9054   006CA4  3605               	rlcf	(___fltol@f1+3)^0,f,c
  9055   006CA6  060B               	decf	___fltol@exp1^0,f,c
  9056   006CA8                     l7591:
  9057   006CA8  500B               	movf	___fltol@exp1^0,w,c
  9058   006CAA  A4D8               	btfss	status,2,c
  9059   006CAC  EF5A  F036         	goto	u7711
  9060   006CB0  EF5C  F036         	goto	u7710
  9061   006CB4                     u7711:
  9062   006CB4  EF4E  F036         	goto	l7589
  9063   006CB8                     u7710:
  9064   006CB8                     l7593:
  9065   006CB8  500A               	movf	___fltol@sign1^0,w,c
  9066   006CBA  B4D8               	btfsc	status,2,c
  9067   006CBC  EF62  F036         	goto	u7721
  9068   006CC0  EF64  F036         	goto	u7720
  9069   006CC4                     u7721:
  9070   006CC4  EF6C  F036         	goto	l7597
  9071   006CC8                     u7720:
  9072   006CC8  1E05               	comf	(___fltol@f1+3)^0,f,c
  9073   006CCA  1E04               	comf	(___fltol@f1+2)^0,f,c
  9074   006CCC  1E03               	comf	(___fltol@f1+1)^0,f,c
  9075   006CCE  6C02               	negf	___fltol@f1^0,c
  9076   006CD0  0E00               	movlw	0
  9077   006CD2  2203               	addwfc	(___fltol@f1+1)^0,f,c
  9078   006CD4  2204               	addwfc	(___fltol@f1+2)^0,f,c
  9079   006CD6  2205               	addwfc	(___fltol@f1+3)^0,f,c
  9080   006CD8                     l7597:
  9081   006CD8  C002  F002         	movff	___fltol@f1,?___fltol
  9082   006CDC  C003  F003         	movff	___fltol@f1+1,?___fltol+1
  9083   006CE0  C004  F004         	movff	___fltol@f1+2,?___fltol+2
  9084   006CE4  C005  F005         	movff	___fltol@f1+3,?___fltol+3
  9085   006CE8                     l857:
  9086   006CE8  0012               	return		;funcret
  9087   006CEA                     __end_of___fltol:
  9088                           	callstack 0
  9089                           
  9090 ;; *************** function ___fleq *****************
  9091 ;; Defined at:
  9092 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;  ff1             4    1[COMRAM] long 
  9095 ;;  ff2             4    5[COMRAM] long 
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;		None
  9098 ;; Return value:  Size  Location     Type
  9099 ;;		None               void
  9100 ;; Registers used:
  9101 ;;		wreg, status,2, status,0
  9102 ;; Tracked objects:
  9103 ;;		On entry : 0/0
  9104 ;;		On exit  : 0/0
  9105 ;;		Unchanged: 0/0
  9106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9107 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9109 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9110 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9111 ;;Total ram usage:       12 bytes
  9112 ;; Hardware stack levels used: 1
  9113 ;; Hardware stack levels required when called: 2
  9114 ;; This function calls:
  9115 ;;		Nothing
  9116 ;; This function is called by:
  9117 ;;		_efgtoa
  9118 ;; This function uses a non-reentrant model
  9119 ;;
  9120                           
  9121                           	psect	text32
  9122   007768                     __ptext32:
  9123                           	callstack 0
  9124   007768                     ___fleq:
  9125                           	callstack 24
  9126   007768  0E00               	movlw	0
  9127   00776A  1402               	andwf	___fleq@ff1^0,w,c
  9128   00776C  6E0A               	movwf	??___fleq^0,c
  9129   00776E  0E00               	movlw	0
  9130   007770  1403               	andwf	(___fleq@ff1+1)^0,w,c
  9131   007772  6E0B               	movwf	(??___fleq+1)^0,c
  9132   007774  0E80               	movlw	128
  9133   007776  1404               	andwf	(___fleq@ff1+2)^0,w,c
  9134   007778  6E0C               	movwf	(??___fleq+2)^0,c
  9135   00777A  0E7F               	movlw	127
  9136   00777C  1405               	andwf	(___fleq@ff1+3)^0,w,c
  9137   00777E  6E0D               	movwf	(??___fleq+3)^0,c
  9138   007780  500A               	movf	??___fleq^0,w,c
  9139   007782  100B               	iorwf	(??___fleq+1)^0,w,c
  9140   007784  100C               	iorwf	(??___fleq+2)^0,w,c
  9141   007786  100D               	iorwf	(??___fleq+3)^0,w,c
  9142   007788  A4D8               	btfss	status,2,c
  9143   00778A  EFC9  F03B         	goto	u7571
  9144   00778E  EFCB  F03B         	goto	u7570
  9145   007792                     u7571:
  9146   007792  EFD3  F03B         	goto	l7515
  9147   007796                     u7570:
  9148   007796  0E00               	movlw	0
  9149   007798  6E02               	movwf	___fleq@ff1^0,c
  9150   00779A  0E00               	movlw	0
  9151   00779C  6E03               	movwf	(___fleq@ff1+1)^0,c
  9152   00779E  0E00               	movlw	0
  9153   0077A0  6E04               	movwf	(___fleq@ff1+2)^0,c
  9154   0077A2  0E00               	movlw	0
  9155   0077A4  6E05               	movwf	(___fleq@ff1+3)^0,c
  9156   0077A6                     l7515:
  9157   0077A6  0E00               	movlw	0
  9158   0077A8  1406               	andwf	___fleq@ff2^0,w,c
  9159   0077AA  6E0A               	movwf	??___fleq^0,c
  9160   0077AC  0E00               	movlw	0
  9161   0077AE  1407               	andwf	(___fleq@ff2+1)^0,w,c
  9162   0077B0  6E0B               	movwf	(??___fleq+1)^0,c
  9163   0077B2  0E80               	movlw	128
  9164   0077B4  1408               	andwf	(___fleq@ff2+2)^0,w,c
  9165   0077B6  6E0C               	movwf	(??___fleq+2)^0,c
  9166   0077B8  0E7F               	movlw	127
  9167   0077BA  1409               	andwf	(___fleq@ff2+3)^0,w,c
  9168   0077BC  6E0D               	movwf	(??___fleq+3)^0,c
  9169   0077BE  500A               	movf	??___fleq^0,w,c
  9170   0077C0  100B               	iorwf	(??___fleq+1)^0,w,c
  9171   0077C2  100C               	iorwf	(??___fleq+2)^0,w,c
  9172   0077C4  100D               	iorwf	(??___fleq+3)^0,w,c
  9173   0077C6  A4D8               	btfss	status,2,c
  9174   0077C8  EFE8  F03B         	goto	u7581
  9175   0077CC  EFEA  F03B         	goto	u7580
  9176   0077D0                     u7581:
  9177   0077D0  EFF2  F03B         	goto	l7519
  9178   0077D4                     u7580:
  9179   0077D4  0E00               	movlw	0
  9180   0077D6  6E06               	movwf	___fleq@ff2^0,c
  9181   0077D8  0E00               	movlw	0
  9182   0077DA  6E07               	movwf	(___fleq@ff2+1)^0,c
  9183   0077DC  0E00               	movlw	0
  9184   0077DE  6E08               	movwf	(___fleq@ff2+2)^0,c
  9185   0077E0  0E00               	movlw	0
  9186   0077E2  6E09               	movwf	(___fleq@ff2+3)^0,c
  9187   0077E4                     l7519:
  9188   0077E4  5006               	movf	___fleq@ff2^0,w,c
  9189   0077E6  1802               	xorwf	___fleq@ff1^0,w,c
  9190   0077E8  E10F               	bnz	u7590
  9191   0077EA  5007               	movf	(___fleq@ff2+1)^0,w,c
  9192   0077EC  1803               	xorwf	(___fleq@ff1+1)^0,w,c
  9193   0077EE  E10C               	bnz	u7590
  9194   0077F0  5008               	movf	(___fleq@ff2+2)^0,w,c
  9195   0077F2  1804               	xorwf	(___fleq@ff1+2)^0,w,c
  9196   0077F4  E109               	bnz	u7590
  9197   0077F6  5009               	movf	(___fleq@ff2+3)^0,w,c
  9198   0077F8  1805               	xorwf	(___fleq@ff1+3)^0,w,c
  9199   0077FA  B4D8               	btfsc	status,2,c
  9200   0077FC  EF02  F03C         	goto	u7591
  9201   007800  EF04  F03C         	goto	u7590
  9202   007804                     u7591:
  9203   007804  EF07  F03C         	goto	l7523
  9204   007808                     u7590:
  9205   007808  90D8               	bcf	status,0,c
  9206   00780A  EF08  F03C         	goto	l819
  9207   00780E                     l7523:
  9208   00780E  80D8               	bsf	status,0,c
  9209   007810                     l819:
  9210   007810  0012               	return		;funcret
  9211   007812                     __end_of___fleq:
  9212                           	callstack 0
  9213                           
  9214 ;; *************** function _abs *****************
  9215 ;; Defined at:
  9216 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;  a               2    7[COMRAM] int 
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  2    7[COMRAM] int 
  9223 ;; Registers used:
  9224 ;;		wreg, status,2, status,0
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9232 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9234 ;;Total ram usage:        4 bytes
  9235 ;; Hardware stack levels used: 1
  9236 ;; Hardware stack levels required when called: 2
  9237 ;; This function calls:
  9238 ;;		Nothing
  9239 ;; This function is called by:
  9240 ;;		_vfpfcnvrt
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           	psect	text33
  9245   007EF8                     __ptext33:
  9246                           	callstack 0
  9247   007EF8                     _abs:
  9248                           	callstack 25
  9249   007EF8  BE09               	btfsc	(abs@a+1)^0,7,c
  9250   007EFA  EF81  F03F         	goto	u8391
  9251   007EFE  EF83  F03F         	goto	u8390
  9252   007F02                     u8391:
  9253   007F02  EF89  F03F         	goto	l1375
  9254   007F06                     u8390:
  9255   007F06  C008  F008         	movff	abs@a,?_abs
  9256   007F0A  C009  F009         	movff	abs@a+1,?_abs+1
  9257   007F0E  EF95  F03F         	goto	l1378
  9258   007F12                     l1375:
  9259   007F12  C008  F00A         	movff	abs@a,??_abs
  9260   007F16  C009  F00B         	movff	abs@a+1,??_abs+1
  9261   007F1A  1E0A               	comf	??_abs^0,f,c
  9262   007F1C  1E0B               	comf	(??_abs+1)^0,f,c
  9263   007F1E  4A0A               	infsnz	??_abs^0,f,c
  9264   007F20  2A0B               	incf	(??_abs+1)^0,f,c
  9265   007F22  C00A  F008         	movff	??_abs,?_abs
  9266   007F26  C00B  F009         	movff	??_abs+1,?_abs+1
  9267   007F2A                     l1378:
  9268   007F2A  0012               	return		;funcret
  9269   007F2C                     __end_of_abs:
  9270                           	callstack 0
  9271                           
  9272 ;; *************** function ___awmod *****************
  9273 ;; Defined at:
  9274 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  dividend        2    1[COMRAM] int 
  9277 ;;  divisor         2    3[COMRAM] int 
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;  sign            1    6[COMRAM] unsigned char 
  9280 ;;  counter         1    5[COMRAM] unsigned char 
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  2    1[COMRAM] int 
  9283 ;; Registers used:
  9284 ;;		wreg, status,2, status,0
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9293 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9294 ;;Total ram usage:        6 bytes
  9295 ;; Hardware stack levels used: 1
  9296 ;; Hardware stack levels required when called: 2
  9297 ;; This function calls:
  9298 ;;		Nothing
  9299 ;; This function is called by:
  9300 ;;		_vfpfcnvrt
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           	psect	text34
  9305   0076B8                     __ptext34:
  9306                           	callstack 0
  9307   0076B8                     ___awmod:
  9308                           	callstack 25
  9309   0076B8  0E00               	movlw	0
  9310   0076BA  6E07               	movwf	___awmod@sign^0,c
  9311   0076BC  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  9312   0076BE  EF65  F03B         	goto	u8010
  9313   0076C2  EF63  F03B         	goto	u8011
  9314   0076C6                     u8011:
  9315   0076C6  EF6B  F03B         	goto	l7739
  9316   0076CA                     u8010:
  9317   0076CA  6C02               	negf	___awmod@dividend^0,c
  9318   0076CC  1E03               	comf	(___awmod@dividend+1)^0,f,c
  9319   0076CE  B0D8               	btfsc	status,0,c
  9320   0076D0  2A03               	incf	(___awmod@dividend+1)^0,f,c
  9321   0076D2  0E01               	movlw	1
  9322   0076D4  6E07               	movwf	___awmod@sign^0,c
  9323   0076D6                     l7739:
  9324   0076D6  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  9325   0076D8  EF72  F03B         	goto	u8020
  9326   0076DC  EF70  F03B         	goto	u8021
  9327   0076E0                     u8021:
  9328   0076E0  EF76  F03B         	goto	l7743
  9329   0076E4                     u8020:
  9330   0076E4  6C04               	negf	___awmod@divisor^0,c
  9331   0076E6  1E05               	comf	(___awmod@divisor+1)^0,f,c
  9332   0076E8  B0D8               	btfsc	status,0,c
  9333   0076EA  2A05               	incf	(___awmod@divisor+1)^0,f,c
  9334   0076EC                     l7743:
  9335   0076EC  5004               	movf	___awmod@divisor^0,w,c
  9336   0076EE  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  9337   0076F0  B4D8               	btfsc	status,2,c
  9338   0076F2  EF7D  F03B         	goto	u8031
  9339   0076F6  EF7F  F03B         	goto	u8030
  9340   0076FA                     u8031:
  9341   0076FA  EFA3  F03B         	goto	l7759
  9342   0076FE                     u8030:
  9343   0076FE  0E01               	movlw	1
  9344   007700  6E06               	movwf	___awmod@counter^0,c
  9345   007702  EF87  F03B         	goto	l7749
  9346   007706                     l7747:
  9347   007706  90D8               	bcf	status,0,c
  9348   007708  3604               	rlcf	___awmod@divisor^0,f,c
  9349   00770A  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  9350   00770C  2A06               	incf	___awmod@counter^0,f,c
  9351   00770E                     l7749:
  9352   00770E  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  9353   007710  EF8C  F03B         	goto	u8041
  9354   007714  EF8E  F03B         	goto	u8040
  9355   007718                     u8041:
  9356   007718  EF83  F03B         	goto	l7747
  9357   00771C                     u8040:
  9358   00771C                     l7751:
  9359   00771C  5004               	movf	___awmod@divisor^0,w,c
  9360   00771E  5C02               	subwf	___awmod@dividend^0,w,c
  9361   007720  5005               	movf	(___awmod@divisor+1)^0,w,c
  9362   007722  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  9363   007724  A0D8               	btfss	status,0,c
  9364   007726  EF97  F03B         	goto	u8051
  9365   00772A  EF99  F03B         	goto	u8050
  9366   00772E                     u8051:
  9367   00772E  EF9D  F03B         	goto	l7755
  9368   007732                     u8050:
  9369   007732  5004               	movf	___awmod@divisor^0,w,c
  9370   007734  5E02               	subwf	___awmod@dividend^0,f,c
  9371   007736  5005               	movf	(___awmod@divisor+1)^0,w,c
  9372   007738  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  9373   00773A                     l7755:
  9374   00773A  90D8               	bcf	status,0,c
  9375   00773C  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  9376   00773E  3204               	rrcf	___awmod@divisor^0,f,c
  9377   007740  2E06               	decfsz	___awmod@counter^0,f,c
  9378   007742  EF8E  F03B         	goto	l7751
  9379   007746                     l7759:
  9380   007746  5007               	movf	___awmod@sign^0,w,c
  9381   007748  B4D8               	btfsc	status,2,c
  9382   00774A  EFA9  F03B         	goto	u8061
  9383   00774E  EFAB  F03B         	goto	u8060
  9384   007752                     u8061:
  9385   007752  EFAF  F03B         	goto	l7763
  9386   007756                     u8060:
  9387   007756  6C02               	negf	___awmod@dividend^0,c
  9388   007758  1E03               	comf	(___awmod@dividend+1)^0,f,c
  9389   00775A  B0D8               	btfsc	status,0,c
  9390   00775C  2A03               	incf	(___awmod@dividend+1)^0,f,c
  9391   00775E                     l7763:
  9392   00775E  C002  F002         	movff	___awmod@dividend,?___awmod
  9393   007762  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  9394   007766  0012               	return		;funcret
  9395   007768                     __end_of___awmod:
  9396                           	callstack 0
  9397                           
  9398 ;; *************** function ___awdiv *****************
  9399 ;; Defined at:
  9400 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;  dividend        2    1[COMRAM] int 
  9403 ;;  divisor         2    3[COMRAM] int 
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;  quotient        2    7[COMRAM] int 
  9406 ;;  sign            1    6[COMRAM] unsigned char 
  9407 ;;  counter         1    5[COMRAM] unsigned char 
  9408 ;; Return value:  Size  Location     Type
  9409 ;;                  2    1[COMRAM] int 
  9410 ;; Registers used:
  9411 ;;		wreg, status,2, status,0
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9418 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9420 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9421 ;;Total ram usage:        8 bytes
  9422 ;; Hardware stack levels used: 1
  9423 ;; Hardware stack levels required when called: 2
  9424 ;; This function calls:
  9425 ;;		Nothing
  9426 ;; This function is called by:
  9427 ;;		_vfpfcnvrt
  9428 ;; This function uses a non-reentrant model
  9429 ;;
  9430                           
  9431                           	psect	text35
  9432   00747E                     __ptext35:
  9433                           	callstack 0
  9434   00747E                     ___awdiv:
  9435                           	callstack 25
  9436   00747E  0E00               	movlw	0
  9437   007480  6E07               	movwf	___awdiv@sign^0,c
  9438   007482  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  9439   007484  EF48  F03A         	goto	u7950
  9440   007488  EF46  F03A         	goto	u7951
  9441   00748C                     u7951:
  9442   00748C  EF4E  F03A         	goto	l7695
  9443   007490                     u7950:
  9444   007490  6C04               	negf	___awdiv@divisor^0,c
  9445   007492  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  9446   007494  B0D8               	btfsc	status,0,c
  9447   007496  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  9448   007498  0E01               	movlw	1
  9449   00749A  6E07               	movwf	___awdiv@sign^0,c
  9450   00749C                     l7695:
  9451   00749C  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  9452   00749E  EF55  F03A         	goto	u7960
  9453   0074A2  EF53  F03A         	goto	u7961
  9454   0074A6                     u7961:
  9455   0074A6  EF5B  F03A         	goto	l7701
  9456   0074AA                     u7960:
  9457   0074AA  6C02               	negf	___awdiv@dividend^0,c
  9458   0074AC  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  9459   0074AE  B0D8               	btfsc	status,0,c
  9460   0074B0  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  9461   0074B2  0E01               	movlw	1
  9462   0074B4  1A07               	xorwf	___awdiv@sign^0,f,c
  9463   0074B6                     l7701:
  9464   0074B6  0E00               	movlw	0
  9465   0074B8  6E09               	movwf	(___awdiv@quotient+1)^0,c
  9466   0074BA  0E00               	movlw	0
  9467   0074BC  6E08               	movwf	___awdiv@quotient^0,c
  9468   0074BE  5004               	movf	___awdiv@divisor^0,w,c
  9469   0074C0  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  9470   0074C2  B4D8               	btfsc	status,2,c
  9471   0074C4  EF66  F03A         	goto	u7971
  9472   0074C8  EF68  F03A         	goto	u7970
  9473   0074CC                     u7971:
  9474   0074CC  EF90  F03A         	goto	l7723
  9475   0074D0                     u7970:
  9476   0074D0  0E01               	movlw	1
  9477   0074D2  6E06               	movwf	___awdiv@counter^0,c
  9478   0074D4  EF70  F03A         	goto	l7709
  9479   0074D8                     l7707:
  9480   0074D8  90D8               	bcf	status,0,c
  9481   0074DA  3604               	rlcf	___awdiv@divisor^0,f,c
  9482   0074DC  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  9483   0074DE  2A06               	incf	___awdiv@counter^0,f,c
  9484   0074E0                     l7709:
  9485   0074E0  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  9486   0074E2  EF75  F03A         	goto	u7981
  9487   0074E6  EF77  F03A         	goto	u7980
  9488   0074EA                     u7981:
  9489   0074EA  EF6C  F03A         	goto	l7707
  9490   0074EE                     u7980:
  9491   0074EE                     l7711:
  9492   0074EE  90D8               	bcf	status,0,c
  9493   0074F0  3608               	rlcf	___awdiv@quotient^0,f,c
  9494   0074F2  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  9495   0074F4  5004               	movf	___awdiv@divisor^0,w,c
  9496   0074F6  5C02               	subwf	___awdiv@dividend^0,w,c
  9497   0074F8  5005               	movf	(___awdiv@divisor+1)^0,w,c
  9498   0074FA  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  9499   0074FC  A0D8               	btfss	status,0,c
  9500   0074FE  EF83  F03A         	goto	u7991
  9501   007502  EF85  F03A         	goto	u7990
  9502   007506                     u7991:
  9503   007506  EF8A  F03A         	goto	l7719
  9504   00750A                     u7990:
  9505   00750A  5004               	movf	___awdiv@divisor^0,w,c
  9506   00750C  5E02               	subwf	___awdiv@dividend^0,f,c
  9507   00750E  5005               	movf	(___awdiv@divisor+1)^0,w,c
  9508   007510  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  9509   007512  8008               	bsf	___awdiv@quotient^0,0,c
  9510   007514                     l7719:
  9511   007514  90D8               	bcf	status,0,c
  9512   007516  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  9513   007518  3204               	rrcf	___awdiv@divisor^0,f,c
  9514   00751A  2E06               	decfsz	___awdiv@counter^0,f,c
  9515   00751C  EF77  F03A         	goto	l7711
  9516   007520                     l7723:
  9517   007520  5007               	movf	___awdiv@sign^0,w,c
  9518   007522  B4D8               	btfsc	status,2,c
  9519   007524  EF96  F03A         	goto	u8001
  9520   007528  EF98  F03A         	goto	u8000
  9521   00752C                     u8001:
  9522   00752C  EF9C  F03A         	goto	l7727
  9523   007530                     u8000:
  9524   007530  6C08               	negf	___awdiv@quotient^0,c
  9525   007532  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  9526   007534  B0D8               	btfsc	status,0,c
  9527   007536  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  9528   007538                     l7727:
  9529   007538  C008  F002         	movff	___awdiv@quotient,?___awdiv
  9530   00753C  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  9531   007540  0012               	return		;funcret
  9532   007542                     __end_of___awdiv:
  9533                           	callstack 0
  9534                           
  9535 ;; *************** function _sendStringSerial4 *****************
  9536 ;; Defined at:
  9537 ;;		line 38 in file "serial.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  string          2    2[COMRAM] PTR unsigned char 
  9540 ;;		 -> main@blue_val(20), main@green_val(20), main@red_val(20), main@clear_val(20), 
  9541 ;;		 -> decide_action@blue_val(20), decide_action@green_val(20), decide_action@red_val(20), 
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;		None
  9544 ;; Return value:  Size  Location     Type
  9545 ;;                  1    wreg      void 
  9546 ;; Registers used:
  9547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9548 ;; Tracked objects:
  9549 ;;		On entry : 0/0
  9550 ;;		On exit  : 0/0
  9551 ;;		Unchanged: 0/0
  9552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9557 ;;Total ram usage:        2 bytes
  9558 ;; Hardware stack levels used: 1
  9559 ;; Hardware stack levels required when called: 3
  9560 ;; This function calls:
  9561 ;;		_sendCharSerial4
  9562 ;; This function is called by:
  9563 ;;		_decide_action
  9564 ;;		_main
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           	psect	text36
  9569   007F5C                     __ptext36:
  9570                           	callstack 0
  9571   007F5C                     _sendStringSerial4:
  9572                           	callstack 27
  9573   007F5C                     
  9574                           ;serial.c: 40:     while(*string != 0){
  9575   007F5C  EFB9  F03F         	goto	l5673
  9576   007F60                     l5669:
  9577                           
  9578                           ;serial.c: 41:   sendCharSerial4(*string++);
  9579   007F60  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  9580   007F64  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9581   007F68  50DF               	movf	indf2,w,c
  9582   007F6A  EC40  F040         	call	_sendCharSerial4
  9583   007F6E  4A03               	infsnz	sendStringSerial4@string^0,f,c
  9584   007F70  2A04               	incf	(sendStringSerial4@string+1)^0,f,c
  9585   007F72                     l5673:
  9586                           
  9587                           ;serial.c: 40:     while(*string != 0){
  9588   007F72  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  9589   007F76  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9590   007F7A  50DF               	movf	indf2,w,c
  9591   007F7C  A4D8               	btfss	status,2,c
  9592   007F7E  EFC3  F03F         	goto	u5591
  9593   007F82  EFC5  F03F         	goto	u5590
  9594   007F86                     u5591:
  9595   007F86  EFB0  F03F         	goto	l5669
  9596   007F8A                     u5590:
  9597   007F8A  0012               	return		;funcret
  9598   007F8C                     __end_of_sendStringSerial4:
  9599                           	callstack 0
  9600                           
  9601 ;; *************** function _sendCharSerial4 *****************
  9602 ;; Defined at:
  9603 ;;		line 31 in file "serial.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  charToSend      1    wreg     unsigned char 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  charToSend      1    1[COMRAM] unsigned char 
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1    wreg      void 
  9610 ;; Registers used:
  9611 ;;		wreg
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9621 ;;Total ram usage:        1 bytes
  9622 ;; Hardware stack levels used: 1
  9623 ;; Hardware stack levels required when called: 2
  9624 ;; This function calls:
  9625 ;;		Nothing
  9626 ;; This function is called by:
  9627 ;;		_sendStringSerial4
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           
  9631                           	psect	text37
  9632   008080                     __ptext37:
  9633                           	callstack 0
  9634   008080                     _sendCharSerial4:
  9635                           	callstack 27
  9636                           
  9637                           ;incstack = 0
  9638                           ;sendCharSerial4@charToSend stored from wreg
  9639   008080  6E02               	movwf	sendCharSerial4@charToSend^0,c
  9640   008082                     l495:
  9641   008082  010E               	movlb	14	; () banked
  9642   008084  A537               	btfss	55,2,b	;volatile
  9643   008086  EF47  F040         	goto	u5381
  9644   00808A  EF49  F040         	goto	u5380
  9645   00808E                     u5381:
  9646   00808E  EF41  F040         	goto	l495
  9647   008092                     u5380:
  9648   008092                     
  9649                           ; BSR set to: 14
  9650                           ;serial.c: 33:     TX4REG = charToSend;
  9651   008092  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  9652   008096                     
  9653                           ; BSR set to: 14
  9654   008096  0012               	return		;funcret
  9655   008098                     __end_of_sendCharSerial4:
  9656                           	callstack 0
  9657                           
  9658 ;; *************** function _powf *****************
  9659 ;; Defined at:
  9660 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\powf.c"
  9661 ;; Parameters:    Size  Location     Type
  9662 ;;  x               4    0[BANK0 ] float 
  9663 ;;  y               4    4[BANK0 ] float 
  9664 ;; Auto vars:     Size  Location     Type
  9665 ;;  s2              4  144[BANK1 ] float 
  9666 ;;  s_h             4  116[BANK1 ] struct fui
  9667 ;;  t_h             4  112[BANK1 ] struct fui
  9668 ;;  t_l             4   52[BANK1 ] float 
  9669 ;;  s_l             4   48[BANK1 ] float 
  9670 ;;  z               4  180[BANK1 ] struct fui
  9671 ;;  t               4  176[BANK1 ] struct fui
  9672 ;;  ix              4  172[BANK1 ] struct fui
  9673 ;;  j               4  168[BANK1 ] long 
  9674 ;;  k               4  164[BANK1 ] long 
  9675 ;;  p_h             4  160[BANK1 ] struct fui
  9676 ;;  is              4  152[BANK1 ] struct fui
  9677 ;;  iy              4  148[BANK1 ] long 
  9678 ;;  t1              4  140[BANK1 ] struct fui
  9679 ;;  n               4  136[BANK1 ] long 
  9680 ;;  hy              4  132[BANK1 ] struct fui
  9681 ;;  v               4  128[BANK1 ] float 
  9682 ;;  u               4  124[BANK1 ] float 
  9683 ;;  ax              4  120[BANK1 ] struct fui
  9684 ;;  p_l             4  108[BANK1 ] float 
  9685 ;;  hx              4  104[BANK1 ] struct fui
  9686 ;;  sn              4  100[BANK1 ] unsigned long 
  9687 ;;  s               4   96[BANK1 ] float 
  9688 ;;  yisint          4   84[BANK1 ] long 
  9689 ;;  r               4   80[BANK1 ] float 
  9690 ;;  w               4   68[BANK1 ] float 
  9691 ;;  y1              4   44[BANK1 ] struct fui
  9692 ;;  i               4   40[BANK1 ] long 
  9693 ;;  z_l             4   36[BANK1 ] float 
  9694 ;;  z_h             4   32[BANK1 ] float 
  9695 ;;  t2              4   28[BANK1 ] float 
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  4    0[BANK0 ] float 
  9698 ;; Registers used:
  9699 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9705 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9706 ;;      Locals:         0       0     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9707 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9708 ;;      Totals:         0      17     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9709 ;;Total ram usage:      201 bytes
  9710 ;; Hardware stack levels used: 1
  9711 ;; Hardware stack levels required when called: 4
  9712 ;; This function calls:
  9713 ;;		___fladd
  9714 ;;		___fldiv
  9715 ;;		___flge
  9716 ;;		___flmul
  9717 ;;		___flneg
  9718 ;;		___flsub
  9719 ;;		___xxtofl
  9720 ;;		_scalbnf
  9721 ;;		_sqrtf
  9722 ;; This function is called by:
  9723 ;;		_decide_action
  9724 ;; This function uses a non-reentrant model
  9725 ;;
  9726                           
  9727                           	psect	text38
  9728   000EDC                     __ptext38:
  9729                           	callstack 0
  9730   000EDC                     _powf:
  9731                           	callstack 25
  9732   000EDC  C060  F168         	movff	powf@x,powf@hx
  9733   000EE0  C061  F169         	movff	powf@x+1,powf@hx+1
  9734   000EE4  C062  F16A         	movff	powf@x+2,powf@hx+2
  9735   000EE8  C063  F16B         	movff	powf@x+3,powf@hx+3
  9736   000EEC  C064  F184         	movff	powf@y,powf@hy
  9737   000EF0  C065  F185         	movff	powf@y+1,powf@hy+1
  9738   000EF4  C066  F186         	movff	powf@y+2,powf@hy+2
  9739   000EF8  C067  F187         	movff	powf@y+3,powf@hy+3
  9740   000EFC  0EFF               	movlw	255
  9741   000EFE  0101               	movlb	1	; () banked
  9742   000F00  1568               	andwf	powf@hx& (0+255),w,b
  9743   000F02  6FAC               	movwf	powf@ix& (0+255),b
  9744   000F04  0EFF               	movlw	255
  9745   000F06  1569               	andwf	(powf@hx+1)& (0+255),w,b
  9746   000F08  6FAD               	movwf	(powf@ix+1)& (0+255),b
  9747   000F0A  0EFF               	movlw	255
  9748   000F0C  156A               	andwf	(powf@hx+2)& (0+255),w,b
  9749   000F0E  6FAE               	movwf	(powf@ix+2)& (0+255),b
  9750   000F10  0E7F               	movlw	127
  9751   000F12  156B               	andwf	(powf@hx+3)& (0+255),w,b
  9752   000F14  6FAF               	movwf	(powf@ix+3)& (0+255),b
  9753   000F16  0EFF               	movlw	255
  9754   000F18  1584               	andwf	powf@hy& (0+255),w,b
  9755   000F1A  6F94               	movwf	powf@iy& (0+255),b
  9756   000F1C  0EFF               	movlw	255
  9757   000F1E  1585               	andwf	(powf@hy+1)& (0+255),w,b
  9758   000F20  6F95               	movwf	(powf@iy+1)& (0+255),b
  9759   000F22  0EFF               	movlw	255
  9760   000F24  1586               	andwf	(powf@hy+2)& (0+255),w,b
  9761   000F26  6F96               	movwf	(powf@iy+2)& (0+255),b
  9762   000F28  0E7F               	movlw	127
  9763   000F2A  1587               	andwf	(powf@hy+3)& (0+255),w,b
  9764   000F2C  6F97               	movwf	(powf@iy+3)& (0+255),b
  9765   000F2E  5194               	movf	powf@iy& (0+255),w,b
  9766   000F30  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  9767   000F32  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  9768   000F34  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  9769   000F36  A4D8               	btfss	status,2,c
  9770   000F38  EFA0  F007         	goto	u8591
  9771   000F3C  EFA2  F007         	goto	u8590
  9772   000F40                     u8591:
  9773   000F40  EFAD  F007         	goto	l8161
  9774   000F44                     u8590:
  9775   000F44                     
  9776                           ; BSR set to: 1
  9777   000F44  0E00               	movlw	0
  9778   000F46  0100               	movlb	0	; () banked
  9779   000F48  6F60               	movwf	?_powf& (0+255),b
  9780   000F4A  0E00               	movlw	0
  9781   000F4C  6F61               	movwf	(?_powf+1)& (0+255),b
  9782   000F4E  0E80               	movlw	128
  9783   000F50  6F62               	movwf	(?_powf+2)& (0+255),b
  9784   000F52  0E3F               	movlw	63
  9785   000F54  6F63               	movwf	(?_powf+3)& (0+255),b
  9786   000F56  EFAD  F019         	goto	l1484
  9787   000F5A                     l8161:
  9788                           
  9789                           ; BSR set to: 1
  9790   000F5A  0E80               	movlw	128
  9791   000F5C  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  9792   000F5E  E109               	bnz	u8601
  9793   000F60  0E3F               	movlw	63
  9794   000F62  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  9795   000F64  1168               	iorwf	powf@hx& (0+255),w,b
  9796   000F66  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  9797   000F68  A4D8               	btfss	status,2,c
  9798   000F6A  EFB9  F007         	goto	u8601
  9799   000F6E  EFBB  F007         	goto	u8600
  9800   000F72                     u8601:
  9801   000F72  EFC6  F007         	goto	l8167
  9802   000F76                     u8600:
  9803   000F76                     
  9804                           ; BSR set to: 1
  9805   000F76  0E00               	movlw	0
  9806   000F78  0100               	movlb	0	; () banked
  9807   000F7A  6F60               	movwf	?_powf& (0+255),b
  9808   000F7C  0E00               	movlw	0
  9809   000F7E  6F61               	movwf	(?_powf+1)& (0+255),b
  9810   000F80  0E80               	movlw	128
  9811   000F82  6F62               	movwf	(?_powf+2)& (0+255),b
  9812   000F84  0E3F               	movlw	63
  9813   000F86  6F63               	movwf	(?_powf+3)& (0+255),b
  9814   000F88  EFAD  F019         	goto	l1484
  9815   000F8C                     l8167:
  9816                           
  9817                           ; BSR set to: 1
  9818   000F8C  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  9819   000F8E  EFD7  F007         	goto	u8610
  9820   000F92  05AC               	decf	powf@ix& (0+255),w,b
  9821   000F94  0E00               	movlw	0
  9822   000F96  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  9823   000F98  0E80               	movlw	128
  9824   000F9A  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  9825   000F9C  0E7F               	movlw	127
  9826   000F9E  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  9827   000FA0  B0D8               	btfsc	status,0,c
  9828   000FA2  EFD5  F007         	goto	u8611
  9829   000FA6  EFD7  F007         	goto	u8610
  9830   000FAA                     u8611:
  9831   000FAA  EFE8  F007         	goto	l8171
  9832   000FAE                     u8610:
  9833   000FAE                     
  9834                           ; BSR set to: 1
  9835   000FAE  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9836   000FB0  EFE6  F007         	goto	u8621
  9837   000FB4  0594               	decf	powf@iy& (0+255),w,b
  9838   000FB6  0E00               	movlw	0
  9839   000FB8  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  9840   000FBA  0E80               	movlw	128
  9841   000FBC  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  9842   000FBE  0E7F               	movlw	127
  9843   000FC0  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9844   000FC2  A0D8               	btfss	status,0,c
  9845   000FC4  EFE6  F007         	goto	u8621
  9846   000FC8  EFE8  F007         	goto	u8620
  9847   000FCC                     u8621:
  9848   000FCC  EF04  F008         	goto	l8175
  9849   000FD0                     u8620:
  9850   000FD0                     l8171:
  9851                           
  9852                           ; BSR set to: 1
  9853   000FD0  C060  F002         	movff	powf@x,___fladd@b
  9854   000FD4  C061  F003         	movff	powf@x+1,___fladd@b+1
  9855   000FD8  C062  F004         	movff	powf@x+2,___fladd@b+2
  9856   000FDC  C063  F005         	movff	powf@x+3,___fladd@b+3
  9857   000FE0  C064  F006         	movff	powf@y,___fladd@a
  9858   000FE4  C065  F007         	movff	powf@y+1,___fladd@a+1
  9859   000FE8  C066  F008         	movff	powf@y+2,___fladd@a+2
  9860   000FEC  C067  F009         	movff	powf@y+3,___fladd@a+3
  9861   000FF0  ECE4  F027         	call	___fladd	;wreg free
  9862   000FF4  C002  F060         	movff	?___fladd,?_powf
  9863   000FF8  C003  F061         	movff	?___fladd+1,?_powf+1
  9864   000FFC  C004  F062         	movff	?___fladd+2,?_powf+2
  9865   001000  C005  F063         	movff	?___fladd+3,?_powf+3
  9866   001004  EFAD  F019         	goto	l1484
  9867   001008                     l8175:
  9868                           
  9869                           ; BSR set to: 1
  9870   001008  0E00               	movlw	0
  9871   00100A  6F54               	movwf	powf@yisint& (0+255),b
  9872   00100C  0E00               	movlw	0
  9873   00100E  6F55               	movwf	(powf@yisint+1)& (0+255),b
  9874   001010  0E00               	movlw	0
  9875   001012  6F56               	movwf	(powf@yisint+2)& (0+255),b
  9876   001014  0E00               	movlw	0
  9877   001016  6F57               	movwf	(powf@yisint+3)& (0+255),b
  9878   001018                     
  9879                           ; BSR set to: 1
  9880   001018  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  9881   00101A  EF13  F008         	goto	u8630
  9882   00101E  EF11  F008         	goto	u8631
  9883   001022                     u8631:
  9884   001022  EFDF  F008         	goto	l1489
  9885   001026                     u8630:
  9886   001026                     
  9887                           ; BSR set to: 1
  9888   001026  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9889   001028  EF1F  F008         	goto	u8641
  9890   00102C  0E80               	movlw	128
  9891   00102E  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  9892   001030  0E4B               	movlw	75
  9893   001032  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9894   001034  A0D8               	btfss	status,0,c
  9895   001036  EF1F  F008         	goto	u8641
  9896   00103A  EF21  F008         	goto	u8640
  9897   00103E                     u8641:
  9898   00103E  EF2B  F008         	goto	l8183
  9899   001042                     u8640:
  9900   001042                     
  9901                           ; BSR set to: 1
  9902   001042  0E02               	movlw	2
  9903   001044  6F54               	movwf	powf@yisint& (0+255),b
  9904   001046  0E00               	movlw	0
  9905   001048  6F55               	movwf	(powf@yisint+1)& (0+255),b
  9906   00104A  0E00               	movlw	0
  9907   00104C  6F56               	movwf	(powf@yisint+2)& (0+255),b
  9908   00104E  0E00               	movlw	0
  9909   001050  6F57               	movwf	(powf@yisint+3)& (0+255),b
  9910   001052  EFDF  F008         	goto	l1489
  9911   001056                     l8183:
  9912                           
  9913                           ; BSR set to: 1
  9914   001056  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9915   001058  EF37  F008         	goto	u8651
  9916   00105C  0E80               	movlw	128
  9917   00105E  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  9918   001060  0E3F               	movlw	63
  9919   001062  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9920   001064  A0D8               	btfss	status,0,c
  9921   001066  EF37  F008         	goto	u8651
  9922   00106A  EF39  F008         	goto	u8650
  9923   00106E                     u8651:
  9924   00106E  EFDF  F008         	goto	l1489
  9925   001072                     u8650:
  9926   001072                     
  9927                           ; BSR set to: 1
  9928   001072  0E17               	movlw	23
  9929   001074  0100               	movlb	0	; () banked
  9930   001076  6F68               	movwf	??_powf& (0+255),b
  9931   001078  C194  F069         	movff	powf@iy,??_powf+1
  9932   00107C  C195  F06A         	movff	powf@iy+1,??_powf+2
  9933   001080  C196  F06B         	movff	powf@iy+2,??_powf+3
  9934   001084  C197  F06C         	movff	powf@iy+3,??_powf+4
  9935   001088                     u8665:
  9936   001088  6768               	tstfsz	??_powf& (0+255),b
  9937   00108A  EF49  F008         	goto	u8666
  9938   00108E  EF51  F008         	goto	u8667
  9939   001092                     u8666:
  9940   001092  356C               	rlcf	(??_powf+4)& (0+255),w,b
  9941   001094  336C               	rrcf	(??_powf+4)& (0+255),f,b
  9942   001096  336B               	rrcf	(??_powf+3)& (0+255),f,b
  9943   001098  336A               	rrcf	(??_powf+2)& (0+255),f,b
  9944   00109A  3369               	rrcf	(??_powf+1)& (0+255),f,b
  9945   00109C  2F68               	decfsz	??_powf& (0+255),f,b
  9946   00109E  EF44  F008         	goto	u8665
  9947   0010A2                     u8667:
  9948   0010A2  0E81               	movlw	129
  9949   0010A4  0100               	movlb	0	; () banked
  9950   0010A6  2569               	addwf	(??_powf+1)& (0+255),w,b
  9951   0010A8  0101               	movlb	1	; () banked
  9952   0010AA  6FA4               	movwf	powf@k& (0+255),b
  9953   0010AC  0EFF               	movlw	255
  9954   0010AE  0100               	movlb	0	; () banked
  9955   0010B0  216A               	addwfc	(??_powf+2)& (0+255),w,b
  9956   0010B2  0101               	movlb	1	; () banked
  9957   0010B4  6FA5               	movwf	(powf@k+1)& (0+255),b
  9958   0010B6  0EFF               	movlw	255
  9959   0010B8  0100               	movlb	0	; () banked
  9960   0010BA  216B               	addwfc	(??_powf+3)& (0+255),w,b
  9961   0010BC  0101               	movlb	1	; () banked
  9962   0010BE  6FA6               	movwf	(powf@k+2)& (0+255),b
  9963   0010C0  0EFF               	movlw	255
  9964   0010C2  0100               	movlb	0	; () banked
  9965   0010C4  216C               	addwfc	(??_powf+4)& (0+255),w,b
  9966   0010C6  0101               	movlb	1	; () banked
  9967   0010C8  6FA7               	movwf	(powf@k+3)& (0+255),b
  9968   0010CA  51A4               	movf	powf@k& (0+255),w,b
  9969   0010CC  0817               	sublw	23
  9970   0010CE  0100               	movlb	0	; () banked
  9971   0010D0  6F68               	movwf	??_powf& (0+255),b
  9972   0010D2  C194  F069         	movff	powf@iy,??_powf+1
  9973   0010D6  C195  F06A         	movff	powf@iy+1,??_powf+2
  9974   0010DA  C196  F06B         	movff	powf@iy+2,??_powf+3
  9975   0010DE  C197  F06C         	movff	powf@iy+3,??_powf+4
  9976   0010E2                     u8675:
  9977   0010E2  6768               	tstfsz	??_powf& (0+255),b
  9978   0010E4  EF76  F008         	goto	u8676
  9979   0010E8  EF7E  F008         	goto	u8677
  9980   0010EC                     u8676:
  9981   0010EC  356C               	rlcf	(??_powf+4)& (0+255),w,b
  9982   0010EE  336C               	rrcf	(??_powf+4)& (0+255),f,b
  9983   0010F0  336B               	rrcf	(??_powf+3)& (0+255),f,b
  9984   0010F2  336A               	rrcf	(??_powf+2)& (0+255),f,b
  9985   0010F4  3369               	rrcf	(??_powf+1)& (0+255),f,b
  9986   0010F6  2F68               	decfsz	??_powf& (0+255),f,b
  9987   0010F8  EF71  F008         	goto	u8675
  9988   0010FC                     u8677:
  9989   0010FC  C069  F1A8         	movff	??_powf+1,powf@j
  9990   001100  C06A  F1A9         	movff	??_powf+2,powf@j+1
  9991   001104  C06B  F1AA         	movff	??_powf+3,powf@j+2
  9992   001108  C06C  F1AB         	movff	??_powf+4,powf@j+3
  9993   00110C  0101               	movlb	1	; () banked
  9994   00110E  51A4               	movf	powf@k& (0+255),w,b
  9995   001110  0817               	sublw	23
  9996   001112  0100               	movlb	0	; () banked
  9997   001114  6F68               	movwf	??_powf& (0+255),b
  9998   001116  C1A8  F069         	movff	powf@j,??_powf+1
  9999   00111A  C1A9  F06A         	movff	powf@j+1,??_powf+2
 10000   00111E  C1AA  F06B         	movff	powf@j+2,??_powf+3
 10001   001122  C1AB  F06C         	movff	powf@j+3,??_powf+4
 10002   001126  2B68               	incf	??_powf& (0+255),f,b
 10003   001128  EF9B  F008         	goto	u8680
 10004   00112C                     u8685:
 10005   00112C  90D8               	bcf	status,0,c
 10006   00112E  3769               	rlcf	(??_powf+1)& (0+255),f,b
 10007   001130  376A               	rlcf	(??_powf+2)& (0+255),f,b
 10008   001132  376B               	rlcf	(??_powf+3)& (0+255),f,b
 10009   001134  376C               	rlcf	(??_powf+4)& (0+255),f,b
 10010   001136                     u8680:
 10011   001136  2F68               	decfsz	??_powf& (0+255),f,b
 10012   001138  EF96  F008         	goto	u8685
 10013   00113C  0101               	movlb	1	; () banked
 10014   00113E  5194               	movf	powf@iy& (0+255),w,b
 10015   001140  0100               	movlb	0	; () banked
 10016   001142  1969               	xorwf	(??_powf+1)& (0+255),w,b
 10017   001144  E113               	bnz	u8691
 10018   001146  0101               	movlb	1	; () banked
 10019   001148  5195               	movf	(powf@iy+1)& (0+255),w,b
 10020   00114A  0100               	movlb	0	; () banked
 10021   00114C  196A               	xorwf	(??_powf+2)& (0+255),w,b
 10022   00114E  E10E               	bnz	u8691
 10023   001150  0101               	movlb	1	; () banked
 10024   001152  5196               	movf	(powf@iy+2)& (0+255),w,b
 10025   001154  0100               	movlb	0	; () banked
 10026   001156  196B               	xorwf	(??_powf+3)& (0+255),w,b
 10027   001158  E109               	bnz	u8691
 10028   00115A  0101               	movlb	1	; () banked
 10029   00115C  5197               	movf	(powf@iy+3)& (0+255),w,b
 10030   00115E  0100               	movlb	0	; () banked
 10031   001160  196C               	xorwf	(??_powf+4)& (0+255),w,b
 10032   001162  A4D8               	btfss	status,2,c
 10033   001164  EFB6  F008         	goto	u8691
 10034   001168  EFB8  F008         	goto	u8690
 10035   00116C                     u8691:
 10036   00116C  EFDF  F008         	goto	l1489
 10037   001170                     u8690:
 10038   001170                     
 10039                           ; BSR set to: 0
 10040   001170  0E01               	movlw	1
 10041   001172  0101               	movlb	1	; () banked
 10042   001174  15A8               	andwf	powf@j& (0+255),w,b
 10043   001176  0100               	movlb	0	; () banked
 10044   001178  6F68               	movwf	??_powf& (0+255),b
 10045   00117A  0E00               	movlw	0
 10046   00117C  0101               	movlb	1	; () banked
 10047   00117E  15A9               	andwf	(powf@j+1)& (0+255),w,b
 10048   001180  0100               	movlb	0	; () banked
 10049   001182  6F69               	movwf	(??_powf+1)& (0+255),b
 10050   001184  0E00               	movlw	0
 10051   001186  0101               	movlb	1	; () banked
 10052   001188  15AA               	andwf	(powf@j+2)& (0+255),w,b
 10053   00118A  0100               	movlb	0	; () banked
 10054   00118C  6F6A               	movwf	(??_powf+2)& (0+255),b
 10055   00118E  0E00               	movlw	0
 10056   001190  0101               	movlb	1	; () banked
 10057   001192  15AB               	andwf	(powf@j+3)& (0+255),w,b
 10058   001194  0100               	movlb	0	; () banked
 10059   001196  6F6B               	movwf	(??_powf+3)& (0+255),b
 10060   001198  5168               	movf	??_powf& (0+255),w,b
 10061   00119A  0802               	sublw	2
 10062   00119C  0101               	movlb	1	; () banked
 10063   00119E  6F54               	movwf	powf@yisint& (0+255),b
 10064   0011A0  0E00               	movlw	0
 10065   0011A2  0100               	movlb	0	; () banked
 10066   0011A4  5569               	subfwb	(??_powf+1)& (0+255),w,b
 10067   0011A6  0101               	movlb	1	; () banked
 10068   0011A8  6F55               	movwf	(powf@yisint+1)& (0+255),b
 10069   0011AA  0E00               	movlw	0
 10070   0011AC  0100               	movlb	0	; () banked
 10071   0011AE  556A               	subfwb	(??_powf+2)& (0+255),w,b
 10072   0011B0  0101               	movlb	1	; () banked
 10073   0011B2  6F56               	movwf	(powf@yisint+2)& (0+255),b
 10074   0011B4  0E00               	movlw	0
 10075   0011B6  0100               	movlb	0	; () banked
 10076   0011B8  556B               	subfwb	(??_powf+3)& (0+255),w,b
 10077   0011BA  0101               	movlb	1	; () banked
 10078   0011BC  6F57               	movwf	(powf@yisint+3)& (0+255),b
 10079   0011BE                     l1489:
 10080   0011BE  0E80               	movlw	128
 10081   0011C0  0101               	movlb	1	; () banked
 10082   0011C2  1996               	xorwf	(powf@iy+2)& (0+255),w,b
 10083   0011C4  E109               	bnz	u8701
 10084   0011C6  0E7F               	movlw	127
 10085   0011C8  1997               	xorwf	(powf@iy+3)& (0+255),w,b
 10086   0011CA  1194               	iorwf	powf@iy& (0+255),w,b
 10087   0011CC  1195               	iorwf	(powf@iy+1)& (0+255),w,b
 10088   0011CE  A4D8               	btfss	status,2,c
 10089   0011D0  EFEC  F008         	goto	u8701
 10090   0011D4  EFEE  F008         	goto	u8700
 10091   0011D8                     u8701:
 10092   0011D8  EF5A  F009         	goto	l8213
 10093   0011DC                     u8700:
 10094   0011DC                     
 10095                           ; BSR set to: 1
 10096   0011DC  0E80               	movlw	128
 10097   0011DE  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
 10098   0011E0  E109               	bnz	u8711
 10099   0011E2  0E3F               	movlw	63
 10100   0011E4  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
 10101   0011E6  11AC               	iorwf	powf@ix& (0+255),w,b
 10102   0011E8  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
 10103   0011EA  A4D8               	btfss	status,2,c
 10104   0011EC  EFFA  F008         	goto	u8711
 10105   0011F0  EFFC  F008         	goto	u8710
 10106   0011F4                     u8711:
 10107   0011F4  EF07  F009         	goto	l8197
 10108   0011F8                     u8710:
 10109   0011F8                     
 10110                           ; BSR set to: 1
 10111   0011F8  0E00               	movlw	0
 10112   0011FA  0100               	movlb	0	; () banked
 10113   0011FC  6F60               	movwf	?_powf& (0+255),b
 10114   0011FE  0E00               	movlw	0
 10115   001200  6F61               	movwf	(?_powf+1)& (0+255),b
 10116   001202  0E80               	movlw	128
 10117   001204  6F62               	movwf	(?_powf+2)& (0+255),b
 10118   001206  0E3F               	movlw	63
 10119   001208  6F63               	movwf	(?_powf+3)& (0+255),b
 10120   00120A  EFAD  F019         	goto	l1484
 10121   00120E                     l8197:
 10122                           
 10123                           ; BSR set to: 1
 10124   00120E  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10125   001210  EF16  F009         	goto	u8721
 10126   001214  05AC               	decf	powf@ix& (0+255),w,b
 10127   001216  0E00               	movlw	0
 10128   001218  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
 10129   00121A  0E80               	movlw	128
 10130   00121C  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
 10131   00121E  0E3F               	movlw	63
 10132   001220  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
 10133   001222  A0D8               	btfss	status,0,c
 10134   001224  EF16  F009         	goto	u8721
 10135   001228  EF18  F009         	goto	u8720
 10136   00122C                     u8721:
 10137   00122C  EF34  F009         	goto	l8205
 10138   001230                     u8720:
 10139   001230                     
 10140                           ; BSR set to: 1
 10141   001230  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10142   001232  EF1F  F009         	goto	u8730
 10143   001236  EF1D  F009         	goto	u8731
 10144   00123A                     u8731:
 10145   00123A  EF2A  F009         	goto	l1499
 10146   00123E                     u8730:
 10147   00123E                     
 10148                           ; BSR set to: 1
 10149   00123E  0E00               	movlw	0
 10150   001240  0100               	movlb	0	; () banked
 10151   001242  6F60               	movwf	?_powf& (0+255),b
 10152   001244  0E00               	movlw	0
 10153   001246  6F61               	movwf	(?_powf+1)& (0+255),b
 10154   001248  0E00               	movlw	0
 10155   00124A  6F62               	movwf	(?_powf+2)& (0+255),b
 10156   00124C  0E00               	movlw	0
 10157   00124E  6F63               	movwf	(?_powf+3)& (0+255),b
 10158   001250  EFAD  F019         	goto	l1484
 10159   001254                     l1499:
 10160                           
 10161                           ; BSR set to: 1
 10162   001254  C064  F060         	movff	powf@y,?_powf
 10163   001258  C065  F061         	movff	powf@y+1,?_powf+1
 10164   00125C  C066  F062         	movff	powf@y+2,?_powf+2
 10165   001260  C067  F063         	movff	powf@y+3,?_powf+3
 10166   001264  EFAD  F019         	goto	l1484
 10167   001268                     l8205:
 10168                           
 10169                           ; BSR set to: 1
 10170   001268  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10171   00126A  EF3B  F009         	goto	u8740
 10172   00126E  EF39  F009         	goto	u8741
 10173   001272                     u8741:
 10174   001272  EF4F  F009         	goto	l8209
 10175   001276                     u8740:
 10176   001276                     
 10177                           ; BSR set to: 1
 10178   001276  C064  F002         	movff	powf@y,___flneg@f1
 10179   00127A  C065  F003         	movff	powf@y+1,___flneg@f1+1
 10180   00127E  C066  F004         	movff	powf@y+2,___flneg@f1+2
 10181   001282  C067  F005         	movff	powf@y+3,___flneg@f1+3
 10182   001286  EC60  F03F         	call	___flneg	;wreg free
 10183   00128A  C002  F060         	movff	?___flneg,?_powf
 10184   00128E  C003  F061         	movff	?___flneg+1,?_powf+1
 10185   001292  C004  F062         	movff	?___flneg+2,?_powf+2
 10186   001296  C005  F063         	movff	?___flneg+3,?_powf+3
 10187   00129A  EFAD  F019         	goto	l1484
 10188   00129E                     l8209:
 10189                           
 10190                           ; BSR set to: 1
 10191   00129E  0E00               	movlw	0
 10192   0012A0  0100               	movlb	0	; () banked
 10193   0012A2  6F60               	movwf	?_powf& (0+255),b
 10194   0012A4  0E00               	movlw	0
 10195   0012A6  6F61               	movwf	(?_powf+1)& (0+255),b
 10196   0012A8  0E00               	movlw	0
 10197   0012AA  6F62               	movwf	(?_powf+2)& (0+255),b
 10198   0012AC  0E00               	movlw	0
 10199   0012AE  6F63               	movwf	(?_powf+3)& (0+255),b
 10200   0012B0  EFAD  F019         	goto	l1484
 10201   0012B4                     l8213:
 10202                           
 10203                           ; BSR set to: 1
 10204   0012B4  0E80               	movlw	128
 10205   0012B6  1996               	xorwf	(powf@iy+2)& (0+255),w,b
 10206   0012B8  E109               	bnz	u8751
 10207   0012BA  0E3F               	movlw	63
 10208   0012BC  1997               	xorwf	(powf@iy+3)& (0+255),w,b
 10209   0012BE  1194               	iorwf	powf@iy& (0+255),w,b
 10210   0012C0  1195               	iorwf	(powf@iy+1)& (0+255),w,b
 10211   0012C2  A4D8               	btfss	status,2,c
 10212   0012C4  EF66  F009         	goto	u8751
 10213   0012C8  EF68  F009         	goto	u8750
 10214   0012CC                     u8751:
 10215   0012CC  EF95  F009         	goto	l8219
 10216   0012D0                     u8750:
 10217   0012D0                     
 10218                           ; BSR set to: 1
 10219   0012D0  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10220   0012D2  EF6F  F009         	goto	u8760
 10221   0012D6  EF6D  F009         	goto	u8761
 10222   0012DA                     u8761:
 10223   0012DA  EF8B  F009         	goto	l1509
 10224   0012DE                     u8760:
 10225   0012DE                     
 10226                           ; BSR set to: 1
 10227   0012DE  0E00               	movlw	0
 10228   0012E0  6E2B               	movwf	___fldiv@b^0,c
 10229   0012E2  0E00               	movlw	0
 10230   0012E4  6E2C               	movwf	(___fldiv@b+1)^0,c
 10231   0012E6  0E80               	movlw	128
 10232   0012E8  6E2D               	movwf	(___fldiv@b+2)^0,c
 10233   0012EA  0E3F               	movlw	63
 10234   0012EC  6E2E               	movwf	(___fldiv@b+3)^0,c
 10235   0012EE  C060  F02F         	movff	powf@x,___fldiv@a
 10236   0012F2  C061  F030         	movff	powf@x+1,___fldiv@a+1
 10237   0012F6  C062  F031         	movff	powf@x+2,___fldiv@a+2
 10238   0012FA  C063  F032         	movff	powf@x+3,___fldiv@a+3
 10239   0012FE  EC48  F02E         	call	___fldiv	;wreg free
 10240   001302  C02B  F060         	movff	?___fldiv,?_powf
 10241   001306  C02C  F061         	movff	?___fldiv+1,?_powf+1
 10242   00130A  C02D  F062         	movff	?___fldiv+2,?_powf+2
 10243   00130E  C02E  F063         	movff	?___fldiv+3,?_powf+3
 10244   001312  EFAD  F019         	goto	l1484
 10245   001316                     l1509:
 10246                           
 10247                           ; BSR set to: 1
 10248   001316  C060  F060         	movff	powf@x,?_powf
 10249   00131A  C061  F061         	movff	powf@x+1,?_powf+1
 10250   00131E  C062  F062         	movff	powf@x+2,?_powf+2
 10251   001322  C063  F063         	movff	powf@x+3,?_powf+3
 10252   001326  EFAD  F019         	goto	l1484
 10253   00132A                     l8219:
 10254                           
 10255                           ; BSR set to: 1
 10256   00132A  0E40               	movlw	64
 10257   00132C  1987               	xorwf	(powf@hy+3)& (0+255),w,b
 10258   00132E  1184               	iorwf	powf@hy& (0+255),w,b
 10259   001330  1185               	iorwf	(powf@hy+1)& (0+255),w,b
 10260   001332  1186               	iorwf	(powf@hy+2)& (0+255),w,b
 10261   001334  A4D8               	btfss	status,2,c
 10262   001336  EF9F  F009         	goto	u8771
 10263   00133A  EFA1  F009         	goto	u8770
 10264   00133E                     u8771:
 10265   00133E  EFBD  F009         	goto	l8225
 10266   001342                     u8770:
 10267   001342                     
 10268                           ; BSR set to: 1
 10269   001342  C060  F012         	movff	powf@x,___flmul@b
 10270   001346  C061  F013         	movff	powf@x+1,___flmul@b+1
 10271   00134A  C062  F014         	movff	powf@x+2,___flmul@b+2
 10272   00134E  C063  F015         	movff	powf@x+3,___flmul@b+3
 10273   001352  C060  F016         	movff	powf@x,___flmul@a
 10274   001356  C061  F017         	movff	powf@x+1,___flmul@a+1
 10275   00135A  C062  F018         	movff	powf@x+2,___flmul@a+2
 10276   00135E  C063  F019         	movff	powf@x+3,___flmul@a+3
 10277   001362  EC44  F02A         	call	___flmul	;wreg free
 10278   001366  C012  F060         	movff	?___flmul,?_powf
 10279   00136A  C013  F061         	movff	?___flmul+1,?_powf+1
 10280   00136E  C014  F062         	movff	?___flmul+2,?_powf+2
 10281   001372  C015  F063         	movff	?___flmul+3,?_powf+3
 10282   001376  EFAD  F019         	goto	l1484
 10283   00137A                     l8225:
 10284                           
 10285                           ; BSR set to: 1
 10286   00137A  0E3F               	movlw	63
 10287   00137C  1987               	xorwf	(powf@hy+3)& (0+255),w,b
 10288   00137E  1184               	iorwf	powf@hy& (0+255),w,b
 10289   001380  1185               	iorwf	(powf@hy+1)& (0+255),w,b
 10290   001382  1186               	iorwf	(powf@hy+2)& (0+255),w,b
 10291   001384  A4D8               	btfss	status,2,c
 10292   001386  EFC7  F009         	goto	u8781
 10293   00138A  EFC9  F009         	goto	u8780
 10294   00138E                     u8781:
 10295   00138E  EFE4  F009         	goto	l1513
 10296   001392                     u8780:
 10297   001392                     
 10298                           ; BSR set to: 1
 10299   001392  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
 10300   001394  EFCE  F009         	goto	u8791
 10301   001398  EFD0  F009         	goto	u8790
 10302   00139C                     u8791:
 10303   00139C  EFE4  F009         	goto	l1513
 10304   0013A0                     u8790:
 10305   0013A0                     
 10306                           ; BSR set to: 1
 10307   0013A0  C060  F012         	movff	powf@x,sqrtf@x
 10308   0013A4  C061  F013         	movff	powf@x+1,sqrtf@x+1
 10309   0013A8  C062  F014         	movff	powf@x+2,sqrtf@x+2
 10310   0013AC  C063  F015         	movff	powf@x+3,sqrtf@x+3
 10311   0013B0  EC59  F02C         	call	_sqrtf	;wreg free
 10312   0013B4  C012  F060         	movff	?_sqrtf,?_powf
 10313   0013B8  C013  F061         	movff	?_sqrtf+1,?_powf+1
 10314   0013BC  C014  F062         	movff	?_sqrtf+2,?_powf+2
 10315   0013C0  C015  F063         	movff	?_sqrtf+3,?_powf+3
 10316   0013C4  EFAD  F019         	goto	l1484
 10317   0013C8                     l1513:
 10318                           
 10319                           ; BSR set to: 1
 10320   0013C8  C1AC  F178         	movff	powf@ix,powf@ax
 10321   0013CC  C1AD  F179         	movff	powf@ix+1,powf@ax+1
 10322   0013D0  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
 10323   0013D4  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
 10324   0013D8                     
 10325                           ; BSR set to: 1
 10326   0013D8  0E80               	movlw	128
 10327   0013DA  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
 10328   0013DC  E10B               	bnz	u8800
 10329   0013DE  0E7F               	movlw	127
 10330   0013E0  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
 10331   0013E2  11AC               	iorwf	powf@ix& (0+255),w,b
 10332   0013E4  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
 10333   0013E6  B4D8               	btfsc	status,2,c
 10334   0013E8  EFF8  F009         	goto	u8801
 10335   0013EC  EFFA  F009         	goto	u8800
 10336   0013F0                     u8801:
 10337   0013F0  EF13  F00A         	goto	l1517
 10338   0013F4                     u8800:
 10339   0013F4                     
 10340                           ; BSR set to: 1
 10341   0013F4  51AC               	movf	powf@ix& (0+255),w,b
 10342   0013F6  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
 10343   0013F8  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
 10344   0013FA  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
 10345   0013FC  B4D8               	btfsc	status,2,c
 10346   0013FE  EF03  F00A         	goto	u8811
 10347   001402  EF05  F00A         	goto	u8810
 10348   001406                     u8811:
 10349   001406  EF13  F00A         	goto	l1517
 10350   00140A                     u8810:
 10351   00140A                     
 10352                           ; BSR set to: 1
 10353   00140A  0E80               	movlw	128
 10354   00140C  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
 10355   00140E  E109               	bnz	u8821
 10356   001410  0E3F               	movlw	63
 10357   001412  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
 10358   001414  11AC               	iorwf	powf@ix& (0+255),w,b
 10359   001416  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
 10360   001418  A4D8               	btfss	status,2,c
 10361   00141A  EF11  F00A         	goto	u8821
 10362   00141E  EF13  F00A         	goto	u8820
 10363   001422                     u8821:
 10364   001422  EFAE  F00A         	goto	l8257
 10365   001426                     u8820:
 10366   001426                     l1517:
 10367                           
 10368                           ; BSR set to: 1
 10369   001426  C178  F1B4         	movff	powf@ax,powf@z
 10370   00142A  C179  F1B5         	movff	powf@ax+1,powf@z+1
 10371   00142E  C17A  F1B6         	movff	powf@ax+2,powf@z+2
 10372   001432  C17B  F1B7         	movff	powf@ax+3,powf@z+3
 10373   001436                     
 10374                           ; BSR set to: 1
 10375   001436  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10376   001438  EF22  F00A         	goto	u8830
 10377   00143C  EF20  F00A         	goto	u8831
 10378   001440                     u8831:
 10379   001440  EF3C  F00A         	goto	l8243
 10380   001444                     u8830:
 10381   001444                     
 10382                           ; BSR set to: 1
 10383   001444  0E00               	movlw	0
 10384   001446  6E2B               	movwf	___fldiv@b^0,c
 10385   001448  0E00               	movlw	0
 10386   00144A  6E2C               	movwf	(___fldiv@b+1)^0,c
 10387   00144C  0E80               	movlw	128
 10388   00144E  6E2D               	movwf	(___fldiv@b+2)^0,c
 10389   001450  0E3F               	movlw	63
 10390   001452  6E2E               	movwf	(___fldiv@b+3)^0,c
 10391   001454  C1B4  F02F         	movff	powf@z,___fldiv@a
 10392   001458  C1B5  F030         	movff	powf@z+1,___fldiv@a+1
 10393   00145C  C1B6  F031         	movff	powf@z+2,___fldiv@a+2
 10394   001460  C1B7  F032         	movff	powf@z+3,___fldiv@a+3
 10395   001464  EC48  F02E         	call	___fldiv	;wreg free
 10396   001468  C02B  F1B4         	movff	?___fldiv,powf@z
 10397   00146C  C02C  F1B5         	movff	?___fldiv+1,powf@z+1
 10398   001470  C02D  F1B6         	movff	?___fldiv+2,powf@z+2
 10399   001474  C02E  F1B7         	movff	?___fldiv+3,powf@z+3
 10400   001478                     l8243:
 10401   001478  0101               	movlb	1	; () banked
 10402   00147A  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
 10403   00147C  EF44  F00A         	goto	u8840
 10404   001480  EF42  F00A         	goto	u8841
 10405   001484                     u8841:
 10406   001484  EFA4  F00A         	goto	l8253
 10407   001488                     u8840:
 10408   001488                     
 10409                           ; BSR set to: 1
 10410   001488  0E00               	movlw	0
 10411   00148A  25AC               	addwf	powf@ix& (0+255),w,b
 10412   00148C  0100               	movlb	0	; () banked
 10413   00148E  6F68               	movwf	??_powf& (0+255),b
 10414   001490  0E00               	movlw	0
 10415   001492  0101               	movlb	1	; () banked
 10416   001494  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
 10417   001496  0100               	movlb	0	; () banked
 10418   001498  6F69               	movwf	(??_powf+1)& (0+255),b
 10419   00149A  0E80               	movlw	128
 10420   00149C  0101               	movlb	1	; () banked
 10421   00149E  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
 10422   0014A0  0100               	movlb	0	; () banked
 10423   0014A2  6F6A               	movwf	(??_powf+2)& (0+255),b
 10424   0014A4  0EC0               	movlw	192
 10425   0014A6  0101               	movlb	1	; () banked
 10426   0014A8  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
 10427   0014AA  0100               	movlb	0	; () banked
 10428   0014AC  6F6B               	movwf	(??_powf+3)& (0+255),b
 10429   0014AE  0101               	movlb	1	; () banked
 10430   0014B0  5154               	movf	powf@yisint& (0+255),w,b
 10431   0014B2  0100               	movlb	0	; () banked
 10432   0014B4  1168               	iorwf	??_powf& (0+255),w,b
 10433   0014B6  6F6C               	movwf	(??_powf+4)& (0+255),b
 10434   0014B8  0101               	movlb	1	; () banked
 10435   0014BA  5155               	movf	(powf@yisint+1)& (0+255),w,b
 10436   0014BC  0100               	movlb	0	; () banked
 10437   0014BE  1169               	iorwf	(??_powf+1)& (0+255),w,b
 10438   0014C0  6F6D               	movwf	(??_powf+5)& (0+255),b
 10439   0014C2  0101               	movlb	1	; () banked
 10440   0014C4  5156               	movf	(powf@yisint+2)& (0+255),w,b
 10441   0014C6  0100               	movlb	0	; () banked
 10442   0014C8  116A               	iorwf	(??_powf+2)& (0+255),w,b
 10443   0014CA  6F6E               	movwf	(??_powf+6)& (0+255),b
 10444   0014CC  0101               	movlb	1	; () banked
 10445   0014CE  5157               	movf	(powf@yisint+3)& (0+255),w,b
 10446   0014D0  0100               	movlb	0	; () banked
 10447   0014D2  116B               	iorwf	(??_powf+3)& (0+255),w,b
 10448   0014D4  6F6F               	movwf	(??_powf+7)& (0+255),b
 10449   0014D6  516C               	movf	(??_powf+4)& (0+255),w,b
 10450   0014D8  116D               	iorwf	(??_powf+5)& (0+255),w,b
 10451   0014DA  116E               	iorwf	(??_powf+6)& (0+255),w,b
 10452   0014DC  116F               	iorwf	(??_powf+7)& (0+255),w,b
 10453   0014DE  A4D8               	btfss	status,2,c
 10454   0014E0  EF74  F00A         	goto	u8851
 10455   0014E4  EF76  F00A         	goto	u8850
 10456   0014E8                     u8851:
 10457   0014E8  EF86  F00A         	goto	l8249
 10458   0014EC                     u8850:
 10459   0014EC                     l8247:
 10460   0014EC  0E00               	movlw	0
 10461   0014EE  0100               	movlb	0	; () banked
 10462   0014F0  6FD8               	movwf	(_errno+1)& (0+255),b
 10463   0014F2  0E21               	movlw	33
 10464   0014F4  6FD7               	movwf	_errno& (0+255),b
 10465   0014F6  0EFF               	movlw	255
 10466   0014F8  0101               	movlb	1	; () banked
 10467   0014FA  6FB4               	movwf	powf@z& (0+255),b
 10468   0014FC  0EFF               	movlw	255
 10469   0014FE  6FB5               	movwf	(powf@z+1)& (0+255),b
 10470   001500  0EFF               	movlw	255
 10471   001502  6FB6               	movwf	(powf@z+2)& (0+255),b
 10472   001504  0E7F               	movlw	127
 10473   001506  6FB7               	movwf	(powf@z+3)& (0+255),b
 10474   001508  EFA4  F00A         	goto	l8253
 10475   00150C                     l8249:
 10476                           
 10477                           ; BSR set to: 0
 10478   00150C  0101               	movlb	1	; () banked
 10479   00150E  0554               	decf	powf@yisint& (0+255),w,b
 10480   001510  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
 10481   001512  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
 10482   001514  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
 10483   001516  A4D8               	btfss	status,2,c
 10484   001518  EF90  F00A         	goto	u8861
 10485   00151C  EF92  F00A         	goto	u8860
 10486   001520                     u8861:
 10487   001520  EFA4  F00A         	goto	l8253
 10488   001524                     u8860:
 10489   001524                     
 10490                           ; BSR set to: 1
 10491   001524  C1B4  F002         	movff	powf@z,___flneg@f1
 10492   001528  C1B5  F003         	movff	powf@z+1,___flneg@f1+1
 10493   00152C  C1B6  F004         	movff	powf@z+2,___flneg@f1+2
 10494   001530  C1B7  F005         	movff	powf@z+3,___flneg@f1+3
 10495   001534  EC60  F03F         	call	___flneg	;wreg free
 10496   001538  C002  F1B4         	movff	?___flneg,powf@z
 10497   00153C  C003  F1B5         	movff	?___flneg+1,powf@z+1
 10498   001540  C004  F1B6         	movff	?___flneg+2,powf@z+2
 10499   001544  C005  F1B7         	movff	?___flneg+3,powf@z+3
 10500   001548                     l8253:
 10501   001548  C1B4  F060         	movff	powf@z,?_powf
 10502   00154C  C1B5  F061         	movff	powf@z+1,?_powf+1
 10503   001550  C1B6  F062         	movff	powf@z+2,?_powf+2
 10504   001554  C1B7  F063         	movff	powf@z+3,?_powf+3
 10505   001558  EFAD  F019         	goto	l1484
 10506   00155C                     l8257:
 10507                           
 10508                           ; BSR set to: 1
 10509   00155C  0E00               	movlw	0
 10510   00155E  6F64               	movwf	powf@sn& (0+255),b
 10511   001560  0E00               	movlw	0
 10512   001562  6F65               	movwf	(powf@sn+1)& (0+255),b
 10513   001564  0E00               	movlw	0
 10514   001566  6F66               	movwf	(powf@sn+2)& (0+255),b
 10515   001568  0E00               	movlw	0
 10516   00156A  6F67               	movwf	(powf@sn+3)& (0+255),b
 10517   00156C                     
 10518                           ; BSR set to: 1
 10519   00156C  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
 10520   00156E  EFBD  F00A         	goto	u8870
 10521   001572  EFBB  F00A         	goto	u8871
 10522   001576                     u8871:
 10523   001576  EFDD  F00A         	goto	l8273
 10524   00157A                     u8870:
 10525   00157A                     
 10526                           ; BSR set to: 1
 10527   00157A  5154               	movf	powf@yisint& (0+255),w,b
 10528   00157C  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
 10529   00157E  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
 10530   001580  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
 10531   001582  A4D8               	btfss	status,2,c
 10532   001584  EFC6  F00A         	goto	u8881
 10533   001588  EFC8  F00A         	goto	u8880
 10534   00158C                     u8881:
 10535   00158C  EFCA  F00A         	goto	l8269
 10536   001590                     u8880:
 10537   001590  EF76  F00A         	goto	l8247
 10538   001594                     l8269:
 10539                           
 10540                           ; BSR set to: 1
 10541   001594  0554               	decf	powf@yisint& (0+255),w,b
 10542   001596  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
 10543   001598  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
 10544   00159A  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
 10545   00159C  A4D8               	btfss	status,2,c
 10546   00159E  EFD3  F00A         	goto	u8891
 10547   0015A2  EFD5  F00A         	goto	u8890
 10548   0015A6                     u8891:
 10549   0015A6  EFDD  F00A         	goto	l8273
 10550   0015AA                     u8890:
 10551   0015AA                     
 10552                           ; BSR set to: 1
 10553   0015AA  0E00               	movlw	0
 10554   0015AC  6F64               	movwf	powf@sn& (0+255),b
 10555   0015AE  0E00               	movlw	0
 10556   0015B0  6F65               	movwf	(powf@sn+1)& (0+255),b
 10557   0015B2  0E00               	movlw	0
 10558   0015B4  6F66               	movwf	(powf@sn+2)& (0+255),b
 10559   0015B6  0E80               	movlw	128
 10560   0015B8  6F67               	movwf	(powf@sn+3)& (0+255),b
 10561   0015BA                     l8273:
 10562                           
 10563                           ; BSR set to: 1
 10564   0015BA  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
 10565   0015BC  EFEC  F00A         	goto	u8901
 10566   0015C0  0594               	decf	powf@iy& (0+255),w,b
 10567   0015C2  0E00               	movlw	0
 10568   0015C4  5995               	subwfb	(powf@iy+1)& (0+255),w,b
 10569   0015C6  0E00               	movlw	0
 10570   0015C8  5996               	subwfb	(powf@iy+2)& (0+255),w,b
 10571   0015CA  0E4D               	movlw	77
 10572   0015CC  5997               	subwfb	(powf@iy+3)& (0+255),w,b
 10573   0015CE  A0D8               	btfss	status,0,c
 10574   0015D0  EFEC  F00A         	goto	u8901
 10575   0015D4  EFEE  F00A         	goto	u8900
 10576   0015D8                     u8901:
 10577   0015D8  EFB2  F00C         	goto	l8329
 10578   0015DC                     u8900:
 10579   0015DC                     
 10580                           ; BSR set to: 1
 10581   0015DC  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10582   0015DE  EF00  F00B         	goto	u8910
 10583   0015E2  0EF8               	movlw	248
 10584   0015E4  5DAC               	subwf	powf@ix& (0+255),w,b
 10585   0015E6  0EFF               	movlw	255
 10586   0015E8  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
 10587   0015EA  0E7F               	movlw	127
 10588   0015EC  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
 10589   0015EE  0E3F               	movlw	63
 10590   0015F0  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
 10591   0015F2  B0D8               	btfsc	status,0,c
 10592   0015F4  EFFE  F00A         	goto	u8911
 10593   0015F8  EF00  F00B         	goto	u8910
 10594   0015FC                     u8911:
 10595   0015FC  EF21  F00B         	goto	l8291
 10596   001600                     u8910:
 10597   001600                     
 10598                           ; BSR set to: 1
 10599   001600  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10600   001602  EF07  F00B         	goto	u8920
 10601   001606  EF05  F00B         	goto	u8921
 10602   00160A                     u8921:
 10603   00160A  EF16  F00B         	goto	l8287
 10604   00160E                     u8920:
 10605   00160E                     l8279:
 10606   00160E  0E00               	movlw	0
 10607   001610  0101               	movlb	1	; () banked
 10608   001612  1164               	iorwf	powf@sn& (0+255),w,b
 10609   001614  6FB4               	movwf	powf@z& (0+255),b
 10610   001616  0E00               	movlw	0
 10611   001618  1165               	iorwf	(powf@sn+1)& (0+255),w,b
 10612   00161A  6FB5               	movwf	(powf@z+1)& (0+255),b
 10613   00161C  0E80               	movlw	128
 10614   00161E  1166               	iorwf	(powf@sn+2)& (0+255),w,b
 10615   001620  6FB6               	movwf	(powf@z+2)& (0+255),b
 10616   001622  0E7F               	movlw	127
 10617   001624  1167               	iorwf	(powf@sn+3)& (0+255),w,b
 10618   001626  6FB7               	movwf	(powf@z+3)& (0+255),b
 10619   001628  EFA4  F00A         	goto	l8253
 10620   00162C                     l8287:
 10621                           
 10622                           ; BSR set to: 1
 10623   00162C  0E00               	movlw	0
 10624   00162E  0100               	movlb	0	; () banked
 10625   001630  6F60               	movwf	?_powf& (0+255),b
 10626   001632  0E00               	movlw	0
 10627   001634  6F61               	movwf	(?_powf+1)& (0+255),b
 10628   001636  0E00               	movlw	0
 10629   001638  6F62               	movwf	(?_powf+2)& (0+255),b
 10630   00163A  0E00               	movlw	0
 10631   00163C  6F63               	movwf	(?_powf+3)& (0+255),b
 10632   00163E  EFAD  F019         	goto	l1484
 10633   001642                     l8291:
 10634                           
 10635                           ; BSR set to: 1
 10636   001642  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10637   001644  EF31  F00B         	goto	u8931
 10638   001648  0E08               	movlw	8
 10639   00164A  5DAC               	subwf	powf@ix& (0+255),w,b
 10640   00164C  0E00               	movlw	0
 10641   00164E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
 10642   001650  0E80               	movlw	128
 10643   001652  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
 10644   001654  0E3F               	movlw	63
 10645   001656  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
 10646   001658  A0D8               	btfss	status,0,c
 10647   00165A  EF31  F00B         	goto	u8931
 10648   00165E  EF33  F00B         	goto	u8930
 10649   001662                     u8931:
 10650   001662  EF4F  F00B         	goto	l8307
 10651   001666                     u8930:
 10652   001666                     
 10653                           ; BSR set to: 1
 10654   001666  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10655   001668  EF40  F00B         	goto	u8941
 10656   00166C  5187               	movf	(powf@hy+3)& (0+255),w,b
 10657   00166E  1186               	iorwf	(powf@hy+2)& (0+255),w,b
 10658   001670  1185               	iorwf	(powf@hy+1)& (0+255),w,b
 10659   001672  E108               	bnz	u8940
 10660   001674  0584               	decf	powf@hy& (0+255),w,b
 10661   001676  A0D8               	btfss	status,0,c
 10662   001678  EF40  F00B         	goto	u8941
 10663   00167C  EF42  F00B         	goto	u8940
 10664   001680                     u8941:
 10665   001680  EF44  F00B         	goto	l8303
 10666   001684                     u8940:
 10667   001684  EF07  F00B         	goto	l8279
 10668   001688                     l8303:
 10669                           
 10670                           ; BSR set to: 1
 10671   001688  0E00               	movlw	0
 10672   00168A  0100               	movlb	0	; () banked
 10673   00168C  6F60               	movwf	?_powf& (0+255),b
 10674   00168E  0E00               	movlw	0
 10675   001690  6F61               	movwf	(?_powf+1)& (0+255),b
 10676   001692  0E00               	movlw	0
 10677   001694  6F62               	movwf	(?_powf+2)& (0+255),b
 10678   001696  0E00               	movlw	0
 10679   001698  6F63               	movwf	(?_powf+3)& (0+255),b
 10680   00169A  EFAD  F019         	goto	l1484
 10681   00169E                     l8307:
 10682                           
 10683                           ; BSR set to: 1
 10684   00169E  C178  F002         	movff	powf@ax,___fladd@b
 10685   0016A2  C179  F003         	movff	powf@ax+1,___fladd@b+1
 10686   0016A6  C17A  F004         	movff	powf@ax+2,___fladd@b+2
 10687   0016AA  C17B  F005         	movff	powf@ax+3,___fladd@b+3
 10688   0016AE  0E00               	movlw	0
 10689   0016B0  6E06               	movwf	___fladd@a^0,c
 10690   0016B2  0E00               	movlw	0
 10691   0016B4  6E07               	movwf	(___fladd@a+1)^0,c
 10692   0016B6  0E80               	movlw	128
 10693   0016B8  6E08               	movwf	(___fladd@a+2)^0,c
 10694   0016BA  0EBF               	movlw	191
 10695   0016BC  6E09               	movwf	(___fladd@a+3)^0,c
 10696   0016BE  ECE4  F027         	call	___fladd	;wreg free
 10697   0016C2  C002  F1B0         	movff	?___fladd,powf@t
 10698   0016C6  C003  F1B1         	movff	?___fladd+1,powf@t+1
 10699   0016CA  C004  F1B2         	movff	?___fladd+2,powf@t+2
 10700   0016CE  C005  F1B3         	movff	?___fladd+3,powf@t+3
 10701   0016D2  0E00               	movlw	0
 10702   0016D4  6E16               	movwf	___flmul@a^0,c
 10703   0016D6  0E00               	movlw	0
 10704   0016D8  6E17               	movwf	(___flmul@a+1)^0,c
 10705   0016DA  0E80               	movlw	128
 10706   0016DC  6E18               	movwf	(___flmul@a+2)^0,c
 10707   0016DE  0E3E               	movlw	62
 10708   0016E0  6E19               	movwf	(___flmul@a+3)^0,c
 10709   0016E2  C1B0  F012         	movff	powf@t,___flmul@b
 10710   0016E6  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10711   0016EA  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10712   0016EE  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10713   0016F2  EC44  F02A         	call	___flmul	;wreg free
 10714   0016F6  C012  F048         	movff	?___flmul,___flsub@a
 10715   0016FA  C013  F049         	movff	?___flmul+1,___flsub@a+1
 10716   0016FE  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 10717   001702  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 10718   001706  0EAB               	movlw	171
 10719   001708  6E44               	movwf	___flsub@b^0,c
 10720   00170A  0EAA               	movlw	170
 10721   00170C  6E45               	movwf	(___flsub@b+1)^0,c
 10722   00170E  0EAA               	movlw	170
 10723   001710  6E46               	movwf	(___flsub@b+2)^0,c
 10724   001712  0E3E               	movlw	62
 10725   001714  6E47               	movwf	(___flsub@b+3)^0,c
 10726   001716  ECBD  F03E         	call	___flsub	;wreg free
 10727   00171A  C044  F148         	movff	?___flsub,_powf$3187
 10728   00171E  C045  F149         	movff	?___flsub+1,_powf$3187+1
 10729   001722  C046  F14A         	movff	?___flsub+2,_powf$3187+2
 10730   001726  C047  F14B         	movff	?___flsub+3,_powf$3187+3
 10731   00172A  C1B0  F016         	movff	powf@t,___flmul@a
 10732   00172E  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10733   001732  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10734   001736  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10735   00173A  C1B0  F012         	movff	powf@t,___flmul@b
 10736   00173E  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10737   001742  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10738   001746  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10739   00174A  EC44  F02A         	call	___flmul	;wreg free
 10740   00174E  C012  F158         	movff	?___flmul,_powf$3188
 10741   001752  C013  F159         	movff	?___flmul+1,_powf$3188+1
 10742   001756  C014  F15A         	movff	?___flmul+2,_powf$3188+2
 10743   00175A  C015  F15B         	movff	?___flmul+3,_powf$3188+3
 10744   00175E  C1B0  F016         	movff	powf@t,___flmul@a
 10745   001762  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10746   001766  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10747   00176A  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10748   00176E  C148  F012         	movff	_powf$3187,___flmul@b
 10749   001772  C149  F013         	movff	_powf$3187+1,___flmul@b+1
 10750   001776  C14A  F014         	movff	_powf$3187+2,___flmul@b+2
 10751   00177A  C14B  F015         	movff	_powf$3187+3,___flmul@b+3
 10752   00177E  EC44  F02A         	call	___flmul	;wreg free
 10753   001782  C012  F048         	movff	?___flmul,___flsub@a
 10754   001786  C013  F049         	movff	?___flmul+1,___flsub@a+1
 10755   00178A  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 10756   00178E  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 10757   001792  0E00               	movlw	0
 10758   001794  6E44               	movwf	___flsub@b^0,c
 10759   001796  0E00               	movlw	0
 10760   001798  6E45               	movwf	(___flsub@b+1)^0,c
 10761   00179A  0E00               	movlw	0
 10762   00179C  6E46               	movwf	(___flsub@b+2)^0,c
 10763   00179E  0E3F               	movlw	63
 10764   0017A0  6E47               	movwf	(___flsub@b+3)^0,c
 10765   0017A2  ECBD  F03E         	call	___flsub	;wreg free
 10766   0017A6  C044  F14C         	movff	?___flsub,_powf$3189
 10767   0017AA  C045  F14D         	movff	?___flsub+1,_powf$3189+1
 10768   0017AE  C046  F14E         	movff	?___flsub+2,_powf$3189+2
 10769   0017B2  C047  F14F         	movff	?___flsub+3,_powf$3189+3
 10770   0017B6  C158  F012         	movff	_powf$3188,___flmul@b
 10771   0017BA  C159  F013         	movff	_powf$3188+1,___flmul@b+1
 10772   0017BE  C15A  F014         	movff	_powf$3188+2,___flmul@b+2
 10773   0017C2  C15B  F015         	movff	_powf$3188+3,___flmul@b+3
 10774   0017C6  C14C  F016         	movff	_powf$3189,___flmul@a
 10775   0017CA  C14D  F017         	movff	_powf$3189+1,___flmul@a+1
 10776   0017CE  C14E  F018         	movff	_powf$3189+2,___flmul@a+2
 10777   0017D2  C14F  F019         	movff	_powf$3189+3,___flmul@a+3
 10778   0017D6  EC44  F02A         	call	___flmul	;wreg free
 10779   0017DA  C012  F144         	movff	?___flmul,powf@w
 10780   0017DE  C013  F145         	movff	?___flmul+1,powf@w+1
 10781   0017E2  C014  F146         	movff	?___flmul+2,powf@w+2
 10782   0017E6  C015  F147         	movff	?___flmul+3,powf@w+3
 10783   0017EA  C1B0  F012         	movff	powf@t,___flmul@b
 10784   0017EE  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10785   0017F2  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10786   0017F6  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10787   0017FA  0E00               	movlw	0
 10788   0017FC  6E16               	movwf	___flmul@a^0,c
 10789   0017FE  0EAA               	movlw	170
 10790   001800  6E17               	movwf	(___flmul@a+1)^0,c
 10791   001802  0EB8               	movlw	184
 10792   001804  6E18               	movwf	(___flmul@a+2)^0,c
 10793   001806  0E3F               	movlw	63
 10794   001808  6E19               	movwf	(___flmul@a+3)^0,c
 10795   00180A  EC44  F02A         	call	___flmul	;wreg free
 10796   00180E  C012  F17C         	movff	?___flmul,powf@u
 10797   001812  C013  F17D         	movff	?___flmul+1,powf@u+1
 10798   001816  C014  F17E         	movff	?___flmul+2,powf@u+2
 10799   00181A  C015  F17F         	movff	?___flmul+3,powf@u+3
 10800   00181E  0E70               	movlw	112
 10801   001820  6E16               	movwf	___flmul@a^0,c
 10802   001822  0EA5               	movlw	165
 10803   001824  6E17               	movwf	(___flmul@a+1)^0,c
 10804   001826  0EEC               	movlw	236
 10805   001828  6E18               	movwf	(___flmul@a+2)^0,c
 10806   00182A  0E36               	movlw	54
 10807   00182C  6E19               	movwf	(___flmul@a+3)^0,c
 10808   00182E  C1B0  F012         	movff	powf@t,___flmul@b
 10809   001832  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10810   001836  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10811   00183A  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10812   00183E  EC44  F02A         	call	___flmul	;wreg free
 10813   001842  C012  F044         	movff	?___flmul,___flsub@b
 10814   001846  C013  F045         	movff	?___flmul+1,___flsub@b+1
 10815   00184A  C014  F046         	movff	?___flmul+2,___flsub@b+2
 10816   00184E  C015  F047         	movff	?___flmul+3,___flsub@b+3
 10817   001852  0E3B               	movlw	59
 10818   001854  6E16               	movwf	___flmul@a^0,c
 10819   001856  0EAA               	movlw	170
 10820   001858  6E17               	movwf	(___flmul@a+1)^0,c
 10821   00185A  0EB8               	movlw	184
 10822   00185C  6E18               	movwf	(___flmul@a+2)^0,c
 10823   00185E  0E3F               	movlw	63
 10824   001860  6E19               	movwf	(___flmul@a+3)^0,c
 10825   001862  C144  F012         	movff	powf@w,___flmul@b
 10826   001866  C145  F013         	movff	powf@w+1,___flmul@b+1
 10827   00186A  C146  F014         	movff	powf@w+2,___flmul@b+2
 10828   00186E  C147  F015         	movff	powf@w+3,___flmul@b+3
 10829   001872  EC44  F02A         	call	___flmul	;wreg free
 10830   001876  C012  F048         	movff	?___flmul,___flsub@a
 10831   00187A  C013  F049         	movff	?___flmul+1,___flsub@a+1
 10832   00187E  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 10833   001882  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 10834   001886  ECBD  F03E         	call	___flsub	;wreg free
 10835   00188A  C044  F180         	movff	?___flsub,powf@v
 10836   00188E  C045  F181         	movff	?___flsub+1,powf@v+1
 10837   001892  C046  F182         	movff	?___flsub+2,powf@v+2
 10838   001896  C047  F183         	movff	?___flsub+3,powf@v+3
 10839   00189A  C17C  F002         	movff	powf@u,___fladd@b
 10840   00189E  C17D  F003         	movff	powf@u+1,___fladd@b+1
 10841   0018A2  C17E  F004         	movff	powf@u+2,___fladd@b+2
 10842   0018A6  C17F  F005         	movff	powf@u+3,___fladd@b+3
 10843   0018AA  C180  F006         	movff	powf@v,___fladd@a
 10844   0018AE  C181  F007         	movff	powf@v+1,___fladd@a+1
 10845   0018B2  C182  F008         	movff	powf@v+2,___fladd@a+2
 10846   0018B6  C183  F009         	movff	powf@v+3,___fladd@a+3
 10847   0018BA  ECE4  F027         	call	___fladd	;wreg free
 10848   0018BE  C002  F18C         	movff	?___fladd,powf@t1
 10849   0018C2  C003  F18D         	movff	?___fladd+1,powf@t1+1
 10850   0018C6  C004  F18E         	movff	?___fladd+2,powf@t1+2
 10851   0018CA  C005  F18F         	movff	?___fladd+3,powf@t1+3
 10852   0018CE  C18C  F198         	movff	powf@t1,powf@is
 10853   0018D2  C18D  F199         	movff	powf@t1+1,powf@is+1
 10854   0018D6  C18E  F19A         	movff	powf@t1+2,powf@is+2
 10855   0018DA  C18F  F19B         	movff	powf@t1+3,powf@is+3
 10856   0018DE  0E00               	movlw	0
 10857   0018E0  0101               	movlb	1	; () banked
 10858   0018E2  1598               	andwf	powf@is& (0+255),w,b
 10859   0018E4  6F8C               	movwf	powf@t1& (0+255),b
 10860   0018E6  0EF0               	movlw	240
 10861   0018E8  1599               	andwf	(powf@is+1)& (0+255),w,b
 10862   0018EA  6F8D               	movwf	(powf@t1+1)& (0+255),b
 10863   0018EC  0EFF               	movlw	255
 10864   0018EE  159A               	andwf	(powf@is+2)& (0+255),w,b
 10865   0018F0  6F8E               	movwf	(powf@t1+2)& (0+255),b
 10866   0018F2  0EFF               	movlw	255
 10867   0018F4  159B               	andwf	(powf@is+3)& (0+255),w,b
 10868   0018F6  6F8F               	movwf	(powf@t1+3)& (0+255),b
 10869   0018F8                     
 10870                           ; BSR set to: 1
 10871   0018F8  C17C  F048         	movff	powf@u,___flsub@a
 10872   0018FC  C17D  F049         	movff	powf@u+1,___flsub@a+1
 10873   001900  C17E  F04A         	movff	powf@u+2,___flsub@a+2
 10874   001904  C17F  F04B         	movff	powf@u+3,___flsub@a+3
 10875   001908  C18C  F044         	movff	powf@t1,___flsub@b
 10876   00190C  C18D  F045         	movff	powf@t1+1,___flsub@b+1
 10877   001910  C18E  F046         	movff	powf@t1+2,___flsub@b+2
 10878   001914  C18F  F047         	movff	powf@t1+3,___flsub@b+3
 10879   001918  ECBD  F03E         	call	___flsub	;wreg free
 10880   00191C  C044  F19C         	movff	?___flsub,_powf$3190
 10881   001920  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 10882   001924  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 10883   001928  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 10884   00192C  C180  F044         	movff	powf@v,___flsub@b
 10885   001930  C181  F045         	movff	powf@v+1,___flsub@b+1
 10886   001934  C182  F046         	movff	powf@v+2,___flsub@b+2
 10887   001938  C183  F047         	movff	powf@v+3,___flsub@b+3
 10888   00193C  C19C  F048         	movff	_powf$3190,___flsub@a
 10889   001940  C19D  F049         	movff	_powf$3190+1,___flsub@a+1
 10890   001944  C19E  F04A         	movff	_powf$3190+2,___flsub@a+2
 10891   001948  C19F  F04B         	movff	_powf$3190+3,___flsub@a+3
 10892   00194C  ECBD  F03E         	call	___flsub	;wreg free
 10893   001950  C044  F11C         	movff	?___flsub,powf@t2
 10894   001954  C045  F11D         	movff	?___flsub+1,powf@t2+1
 10895   001958  C046  F11E         	movff	?___flsub+2,powf@t2+2
 10896   00195C  C047  F11F         	movff	?___flsub+3,powf@t2+3
 10897   001960  EFA6  F013         	goto	l8457
 10898   001964                     l8329:
 10899                           
 10900                           ; BSR set to: 1
 10901   001964  0E00               	movlw	0
 10902   001966  6F88               	movwf	powf@n& (0+255),b
 10903   001968  0E00               	movlw	0
 10904   00196A  6F89               	movwf	(powf@n+1)& (0+255),b
 10905   00196C  0E00               	movlw	0
 10906   00196E  6F8A               	movwf	(powf@n+2)& (0+255),b
 10907   001970  0E00               	movlw	0
 10908   001972  6F8B               	movwf	(powf@n+3)& (0+255),b
 10909   001974                     
 10910                           ; BSR set to: 1
 10911   001974  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10912   001976  EFC8  F00C         	goto	u8950
 10913   00197A  51AF               	movf	(powf@ix+3)& (0+255),w,b
 10914   00197C  E107               	bnz	u8951
 10915   00197E  0E80               	movlw	128
 10916   001980  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
 10917   001982  B0D8               	btfsc	status,0,c
 10918   001984  EFC6  F00C         	goto	u8951
 10919   001988  EFC8  F00C         	goto	u8950
 10920   00198C                     u8951:
 10921   00198C  EFF3  F00C         	goto	l8339
 10922   001990                     u8950:
 10923   001990                     
 10924                           ; BSR set to: 1
 10925   001990  C178  F012         	movff	powf@ax,___flmul@b
 10926   001994  C179  F013         	movff	powf@ax+1,___flmul@b+1
 10927   001998  C17A  F014         	movff	powf@ax+2,___flmul@b+2
 10928   00199C  C17B  F015         	movff	powf@ax+3,___flmul@b+3
 10929   0019A0  0E00               	movlw	0
 10930   0019A2  6E16               	movwf	___flmul@a^0,c
 10931   0019A4  0E00               	movlw	0
 10932   0019A6  6E17               	movwf	(___flmul@a+1)^0,c
 10933   0019A8  0E80               	movlw	128
 10934   0019AA  6E18               	movwf	(___flmul@a+2)^0,c
 10935   0019AC  0E4B               	movlw	75
 10936   0019AE  6E19               	movwf	(___flmul@a+3)^0,c
 10937   0019B0  EC44  F02A         	call	___flmul	;wreg free
 10938   0019B4  C012  F178         	movff	?___flmul,powf@ax
 10939   0019B8  C013  F179         	movff	?___flmul+1,powf@ax+1
 10940   0019BC  C014  F17A         	movff	?___flmul+2,powf@ax+2
 10941   0019C0  C015  F17B         	movff	?___flmul+3,powf@ax+3
 10942   0019C4  0EE8               	movlw	232
 10943   0019C6  0101               	movlb	1	; () banked
 10944   0019C8  2788               	addwf	powf@n& (0+255),f,b
 10945   0019CA  0EFF               	movlw	255
 10946   0019CC  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10947   0019CE  0EFF               	movlw	255
 10948   0019D0  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10949   0019D2  0EFF               	movlw	255
 10950   0019D4  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10951   0019D6                     
 10952                           ; BSR set to: 1
 10953   0019D6  C178  F1AC         	movff	powf@ax,powf@ix
 10954   0019DA  C179  F1AD         	movff	powf@ax+1,powf@ix+1
 10955   0019DE  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
 10956   0019E2  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
 10957   0019E6                     l8339:
 10958                           
 10959                           ; BSR set to: 1
 10960   0019E6  0E17               	movlw	23
 10961   0019E8  0100               	movlb	0	; () banked
 10962   0019EA  6F68               	movwf	??_powf& (0+255),b
 10963   0019EC  C1AC  F069         	movff	powf@ix,??_powf+1
 10964   0019F0  C1AD  F06A         	movff	powf@ix+1,??_powf+2
 10965   0019F4  C1AE  F06B         	movff	powf@ix+2,??_powf+3
 10966   0019F8  C1AF  F06C         	movff	powf@ix+3,??_powf+4
 10967   0019FC                     u8965:
 10968   0019FC  6768               	tstfsz	??_powf& (0+255),b
 10969   0019FE  EF03  F00D         	goto	u8966
 10970   001A02  EF0B  F00D         	goto	u8967
 10971   001A06                     u8966:
 10972   001A06  356C               	rlcf	(??_powf+4)& (0+255),w,b
 10973   001A08  336C               	rrcf	(??_powf+4)& (0+255),f,b
 10974   001A0A  336B               	rrcf	(??_powf+3)& (0+255),f,b
 10975   001A0C  336A               	rrcf	(??_powf+2)& (0+255),f,b
 10976   001A0E  3369               	rrcf	(??_powf+1)& (0+255),f,b
 10977   001A10  2F68               	decfsz	??_powf& (0+255),f,b
 10978   001A12  EFFE  F00C         	goto	u8965
 10979   001A16                     u8967:
 10980   001A16  0E81               	movlw	129
 10981   001A18  0100               	movlb	0	; () banked
 10982   001A1A  2569               	addwf	(??_powf+1)& (0+255),w,b
 10983   001A1C  6F6D               	movwf	(??_powf+5)& (0+255),b
 10984   001A1E  0EFF               	movlw	255
 10985   001A20  216A               	addwfc	(??_powf+2)& (0+255),w,b
 10986   001A22  6F6E               	movwf	(??_powf+6)& (0+255),b
 10987   001A24  0EFF               	movlw	255
 10988   001A26  216B               	addwfc	(??_powf+3)& (0+255),w,b
 10989   001A28  6F6F               	movwf	(??_powf+7)& (0+255),b
 10990   001A2A  0EFF               	movlw	255
 10991   001A2C  216C               	addwfc	(??_powf+4)& (0+255),w,b
 10992   001A2E  6F70               	movwf	(??_powf+8)& (0+255),b
 10993   001A30  516D               	movf	(??_powf+5)& (0+255),w,b
 10994   001A32  0101               	movlb	1	; () banked
 10995   001A34  2788               	addwf	powf@n& (0+255),f,b
 10996   001A36  0100               	movlb	0	; () banked
 10997   001A38  516E               	movf	(??_powf+6)& (0+255),w,b
 10998   001A3A  0101               	movlb	1	; () banked
 10999   001A3C  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11000   001A3E  0100               	movlb	0	; () banked
 11001   001A40  516F               	movf	(??_powf+7)& (0+255),w,b
 11002   001A42  0101               	movlb	1	; () banked
 11003   001A44  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11004   001A46  0100               	movlb	0	; () banked
 11005   001A48  5170               	movf	(??_powf+8)& (0+255),w,b
 11006   001A4A  0101               	movlb	1	; () banked
 11007   001A4C  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11008   001A4E                     
 11009                           ; BSR set to: 1
 11010   001A4E  0EFF               	movlw	255
 11011   001A50  15AC               	andwf	powf@ix& (0+255),w,b
 11012   001A52  6FA8               	movwf	powf@j& (0+255),b
 11013   001A54  0EFF               	movlw	255
 11014   001A56  15AD               	andwf	(powf@ix+1)& (0+255),w,b
 11015   001A58  6FA9               	movwf	(powf@j+1)& (0+255),b
 11016   001A5A  0E7F               	movlw	127
 11017   001A5C  15AE               	andwf	(powf@ix+2)& (0+255),w,b
 11018   001A5E  6FAA               	movwf	(powf@j+2)& (0+255),b
 11019   001A60  0E00               	movlw	0
 11020   001A62  15AF               	andwf	(powf@ix+3)& (0+255),w,b
 11021   001A64  6FAB               	movwf	(powf@j+3)& (0+255),b
 11022   001A66                     
 11023                           ; BSR set to: 1
 11024   001A66  0E00               	movlw	0
 11025   001A68  6FA4               	movwf	powf@k& (0+255),b
 11026   001A6A  0E00               	movlw	0
 11027   001A6C  6FA5               	movwf	(powf@k+1)& (0+255),b
 11028   001A6E  0E00               	movlw	0
 11029   001A70  6FA6               	movwf	(powf@k+2)& (0+255),b
 11030   001A72  0E00               	movlw	0
 11031   001A74  6FA7               	movwf	(powf@k+3)& (0+255),b
 11032   001A76                     
 11033                           ; BSR set to: 1
 11034   001A76  0E00               	movlw	0
 11035   001A78  11A8               	iorwf	powf@j& (0+255),w,b
 11036   001A7A  6FAC               	movwf	powf@ix& (0+255),b
 11037   001A7C  0E00               	movlw	0
 11038   001A7E  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 11039   001A80  6FAD               	movwf	(powf@ix+1)& (0+255),b
 11040   001A82  0E80               	movlw	128
 11041   001A84  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 11042   001A86  6FAE               	movwf	(powf@ix+2)& (0+255),b
 11043   001A88  0E3F               	movlw	63
 11044   001A8A  11AB               	iorwf	(powf@j+3)& (0+255),w,b
 11045   001A8C  6FAF               	movwf	(powf@ix+3)& (0+255),b
 11046   001A8E                     
 11047                           ; BSR set to: 1
 11048   001A8E  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 11049   001A90  EF59  F00D         	goto	u8970
 11050   001A94  51AB               	movf	(powf@j+3)& (0+255),w,b
 11051   001A96  E10B               	bnz	u8971
 11052   001A98  0E72               	movlw	114
 11053   001A9A  5DA8               	subwf	powf@j& (0+255),w,b
 11054   001A9C  0EC4               	movlw	196
 11055   001A9E  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 11056   001AA0  0E1C               	movlw	28
 11057   001AA2  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 11058   001AA4  B0D8               	btfsc	status,0,c
 11059   001AA6  EF57  F00D         	goto	u8971
 11060   001AAA  EF59  F00D         	goto	u8970
 11061   001AAE                     u8971:
 11062   001AAE  EF5B  F00D         	goto	l8351
 11063   001AB2                     u8970:
 11064   001AB2  EF85  F00D         	goto	l8357
 11065   001AB6                     l8351:
 11066                           
 11067                           ; BSR set to: 1
 11068   001AB6  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 11069   001AB8  EF6D  F00D         	goto	u8980
 11070   001ABC  51AB               	movf	(powf@j+3)& (0+255),w,b
 11071   001ABE  E10B               	bnz	u8981
 11072   001AC0  0ED7               	movlw	215
 11073   001AC2  5DA8               	subwf	powf@j& (0+255),w,b
 11074   001AC4  0EB3               	movlw	179
 11075   001AC6  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 11076   001AC8  0E5D               	movlw	93
 11077   001ACA  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 11078   001ACC  B0D8               	btfsc	status,0,c
 11079   001ACE  EF6B  F00D         	goto	u8981
 11080   001AD2  EF6D  F00D         	goto	u8980
 11081   001AD6                     u8981:
 11082   001AD6  EF77  F00D         	goto	l8355
 11083   001ADA                     u8980:
 11084   001ADA                     
 11085                           ; BSR set to: 1
 11086   001ADA  0E01               	movlw	1
 11087   001ADC  6FA4               	movwf	powf@k& (0+255),b
 11088   001ADE  0E00               	movlw	0
 11089   001AE0  6FA5               	movwf	(powf@k+1)& (0+255),b
 11090   001AE2  0E00               	movlw	0
 11091   001AE4  6FA6               	movwf	(powf@k+2)& (0+255),b
 11092   001AE6  0E00               	movlw	0
 11093   001AE8  6FA7               	movwf	(powf@k+3)& (0+255),b
 11094   001AEA  EF85  F00D         	goto	l8357
 11095   001AEE                     l8355:
 11096                           
 11097                           ; BSR set to: 1
 11098   001AEE  0E01               	movlw	1
 11099   001AF0  2788               	addwf	powf@n& (0+255),f,b
 11100   001AF2  0E00               	movlw	0
 11101   001AF4  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11102   001AF6  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11103   001AF8  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11104   001AFA  0E00               	movlw	0
 11105   001AFC  27AC               	addwf	powf@ix& (0+255),f,b
 11106   001AFE  0E00               	movlw	0
 11107   001B00  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
 11108   001B02  0E80               	movlw	128
 11109   001B04  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
 11110   001B06  0EFF               	movlw	255
 11111   001B08  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
 11112   001B0A                     l8357:
 11113                           
 11114                           ; BSR set to: 1
 11115   001B0A  C1AC  F178         	movff	powf@ix,powf@ax
 11116   001B0E  C1AD  F179         	movff	powf@ix+1,powf@ax+1
 11117   001B12  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
 11118   001B16  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
 11119   001B1A                     
 11120                           ; BSR set to: 1
 11121   001B1A  C178  F044         	movff	powf@ax,___flsub@b
 11122   001B1E  C179  F045         	movff	powf@ax+1,___flsub@b+1
 11123   001B22  C17A  F046         	movff	powf@ax+2,___flsub@b+2
 11124   001B26  C17B  F047         	movff	powf@ax+3,___flsub@b+3
 11125   001B2A  51A4               	movf	powf@k& (0+255),w,b
 11126   001B2C  0D04               	mullw	4
 11127   001B2E  50F3               	movf	243,w,c
 11128   001B30  0F11               	addlw	low _bp
 11129   001B32  0100               	movlb	0	; () banked
 11130   001B34  6F68               	movwf	??_powf& (0+255),b
 11131   001B36  C068  FFF6         	movff	??_powf,tblptrl
 11132   001B3A                     	if	1	;There is more than 1 active tblptr byte
 11133   001B3A  0E0E               	movlw	high __smallconst
 11134   001B3C  6EF7               	movwf	tblptrh,c
 11135   001B3E                     	endif
 11136   001B3E                     	if	0	;tblptru may be non-zero
 11137   001B3E                     	endif
 11138   001B3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11139   001B3E  0E00               	movlw	low (__smallconst shr (0+16))
 11140   001B40  6EF8               	movwf	tblptru,c
 11141   001B42                     	endif
 11142   001B42  0009               	tblrd		*+
 11143   001B44  CFF5 F048          	movff	tablat,___flsub@a
 11144   001B48  0009               	tblrd		*+
 11145   001B4A  CFF5 F049          	movff	tablat,___flsub@a+1
 11146   001B4E  0009               	tblrd		*+
 11147   001B50  CFF5 F04A          	movff	tablat,___flsub@a+2
 11148   001B54  000A               	tblrd		*-
 11149   001B56  CFF5 F04B          	movff	tablat,___flsub@a+3
 11150   001B5A  ECBD  F03E         	call	___flsub	;wreg free
 11151   001B5E  C044  F17C         	movff	?___flsub,powf@u
 11152   001B62  C045  F17D         	movff	?___flsub+1,powf@u+1
 11153   001B66  C046  F17E         	movff	?___flsub+2,powf@u+2
 11154   001B6A  C047  F17F         	movff	?___flsub+3,powf@u+3
 11155   001B6E  0E00               	movlw	0
 11156   001B70  6E2B               	movwf	___fldiv@b^0,c
 11157   001B72  0E00               	movlw	0
 11158   001B74  6E2C               	movwf	(___fldiv@b+1)^0,c
 11159   001B76  0E80               	movlw	128
 11160   001B78  6E2D               	movwf	(___fldiv@b+2)^0,c
 11161   001B7A  0E3F               	movlw	63
 11162   001B7C  6E2E               	movwf	(___fldiv@b+3)^0,c
 11163   001B7E  C178  F006         	movff	powf@ax,___fladd@a
 11164   001B82  C179  F007         	movff	powf@ax+1,___fladd@a+1
 11165   001B86  C17A  F008         	movff	powf@ax+2,___fladd@a+2
 11166   001B8A  C17B  F009         	movff	powf@ax+3,___fladd@a+3
 11167   001B8E  0101               	movlb	1	; () banked
 11168   001B90  51A4               	movf	powf@k& (0+255),w,b
 11169   001B92  0D04               	mullw	4
 11170   001B94  50F3               	movf	243,w,c
 11171   001B96  0F11               	addlw	low _bp
 11172   001B98  0100               	movlb	0	; () banked
 11173   001B9A  6F68               	movwf	??_powf& (0+255),b
 11174   001B9C  C068  FFF6         	movff	??_powf,tblptrl
 11175   001BA0                     	if	1	;There is more than 1 active tblptr byte
 11176   001BA0  0E0E               	movlw	high __smallconst
 11177   001BA2  6EF7               	movwf	tblptrh,c
 11178   001BA4                     	endif
 11179   001BA4                     	if	0	;tblptru may be non-zero
 11180   001BA4                     	endif
 11181   001BA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11182   001BA4  0E00               	movlw	low (__smallconst shr (0+16))
 11183   001BA6  6EF8               	movwf	tblptru,c
 11184   001BA8                     	endif
 11185   001BA8  0009               	tblrd		*+
 11186   001BAA  CFF5 F002          	movff	tablat,___fladd@b
 11187   001BAE  0009               	tblrd		*+
 11188   001BB0  CFF5 F003          	movff	tablat,___fladd@b+1
 11189   001BB4  0009               	tblrd		*+
 11190   001BB6  CFF5 F004          	movff	tablat,___fladd@b+2
 11191   001BBA  000A               	tblrd		*-
 11192   001BBC  CFF5 F005          	movff	tablat,___fladd@b+3
 11193   001BC0  ECE4  F027         	call	___fladd	;wreg free
 11194   001BC4  C002  F02F         	movff	?___fladd,___fldiv@a
 11195   001BC8  C003  F030         	movff	?___fladd+1,___fldiv@a+1
 11196   001BCC  C004  F031         	movff	?___fladd+2,___fldiv@a+2
 11197   001BD0  C005  F032         	movff	?___fladd+3,___fldiv@a+3
 11198   001BD4  EC48  F02E         	call	___fldiv	;wreg free
 11199   001BD8  C02B  F180         	movff	?___fldiv,powf@v
 11200   001BDC  C02C  F181         	movff	?___fldiv+1,powf@v+1
 11201   001BE0  C02D  F182         	movff	?___fldiv+2,powf@v+2
 11202   001BE4  C02E  F183         	movff	?___fldiv+3,powf@v+3
 11203   001BE8  C17C  F012         	movff	powf@u,___flmul@b
 11204   001BEC  C17D  F013         	movff	powf@u+1,___flmul@b+1
 11205   001BF0  C17E  F014         	movff	powf@u+2,___flmul@b+2
 11206   001BF4  C17F  F015         	movff	powf@u+3,___flmul@b+3
 11207   001BF8  C180  F016         	movff	powf@v,___flmul@a
 11208   001BFC  C181  F017         	movff	powf@v+1,___flmul@a+1
 11209   001C00  C182  F018         	movff	powf@v+2,___flmul@a+2
 11210   001C04  C183  F019         	movff	powf@v+3,___flmul@a+3
 11211   001C08  EC44  F02A         	call	___flmul	;wreg free
 11212   001C0C  C012  F160         	movff	?___flmul,powf@s
 11213   001C10  C013  F161         	movff	?___flmul+1,powf@s+1
 11214   001C14  C014  F162         	movff	?___flmul+2,powf@s+2
 11215   001C18  C015  F163         	movff	?___flmul+3,powf@s+3
 11216   001C1C  C160  F174         	movff	powf@s,powf@s_h
 11217   001C20  C161  F175         	movff	powf@s+1,powf@s_h+1
 11218   001C24  C162  F176         	movff	powf@s+2,powf@s_h+2
 11219   001C28  C163  F177         	movff	powf@s+3,powf@s_h+3
 11220   001C2C  C174  F198         	movff	powf@s_h,powf@is
 11221   001C30  C175  F199         	movff	powf@s_h+1,powf@is+1
 11222   001C34  C176  F19A         	movff	powf@s_h+2,powf@is+2
 11223   001C38  C177  F19B         	movff	powf@s_h+3,powf@is+3
 11224   001C3C  0E00               	movlw	0
 11225   001C3E  0101               	movlb	1	; () banked
 11226   001C40  1598               	andwf	powf@is& (0+255),w,b
 11227   001C42  6F74               	movwf	powf@s_h& (0+255),b
 11228   001C44  0EF0               	movlw	240
 11229   001C46  1599               	andwf	(powf@is+1)& (0+255),w,b
 11230   001C48  6F75               	movwf	(powf@s_h+1)& (0+255),b
 11231   001C4A  0EFF               	movlw	255
 11232   001C4C  159A               	andwf	(powf@is+2)& (0+255),w,b
 11233   001C4E  6F76               	movwf	(powf@s_h+2)& (0+255),b
 11234   001C50  0EFF               	movlw	255
 11235   001C52  159B               	andwf	(powf@is+3)& (0+255),w,b
 11236   001C54  6F77               	movwf	(powf@s_h+3)& (0+255),b
 11237   001C56                     
 11238                           ; BSR set to: 1
 11239   001C56  C1AC  F068         	movff	powf@ix,??_powf
 11240   001C5A  C1AD  F069         	movff	powf@ix+1,??_powf+1
 11241   001C5E  C1AE  F06A         	movff	powf@ix+2,??_powf+2
 11242   001C62  C1AF  F06B         	movff	powf@ix+3,??_powf+3
 11243   001C66  0100               	movlb	0	; () banked
 11244   001C68  356B               	rlcf	(??_powf+3)& (0+255),w,b
 11245   001C6A  336B               	rrcf	(??_powf+3)& (0+255),f,b
 11246   001C6C  336A               	rrcf	(??_powf+2)& (0+255),f,b
 11247   001C6E  3369               	rrcf	(??_powf+1)& (0+255),f,b
 11248   001C70  3368               	rrcf	??_powf& (0+255),f,b
 11249   001C72  0E00               	movlw	0
 11250   001C74  1568               	andwf	??_powf& (0+255),w,b
 11251   001C76  6F6C               	movwf	(??_powf+4)& (0+255),b
 11252   001C78  0EF0               	movlw	240
 11253   001C7A  1569               	andwf	(??_powf+1)& (0+255),w,b
 11254   001C7C  6F6D               	movwf	(??_powf+5)& (0+255),b
 11255   001C7E  0EFF               	movlw	255
 11256   001C80  156A               	andwf	(??_powf+2)& (0+255),w,b
 11257   001C82  6F6E               	movwf	(??_powf+6)& (0+255),b
 11258   001C84  0EFF               	movlw	255
 11259   001C86  156B               	andwf	(??_powf+3)& (0+255),w,b
 11260   001C88  6F6F               	movwf	(??_powf+7)& (0+255),b
 11261   001C8A  0E00               	movlw	0
 11262   001C8C  116C               	iorwf	(??_powf+4)& (0+255),w,b
 11263   001C8E  0101               	movlb	1	; () banked
 11264   001C90  6F98               	movwf	powf@is& (0+255),b
 11265   001C92  0E00               	movlw	0
 11266   001C94  0100               	movlb	0	; () banked
 11267   001C96  116D               	iorwf	(??_powf+5)& (0+255),w,b
 11268   001C98  0101               	movlb	1	; () banked
 11269   001C9A  6F99               	movwf	(powf@is+1)& (0+255),b
 11270   001C9C  0E00               	movlw	0
 11271   001C9E  0100               	movlb	0	; () banked
 11272   001CA0  116E               	iorwf	(??_powf+6)& (0+255),w,b
 11273   001CA2  0101               	movlb	1	; () banked
 11274   001CA4  6F9A               	movwf	(powf@is+2)& (0+255),b
 11275   001CA6  0E20               	movlw	32
 11276   001CA8  0100               	movlb	0	; () banked
 11277   001CAA  116F               	iorwf	(??_powf+7)& (0+255),w,b
 11278   001CAC  0101               	movlb	1	; () banked
 11279   001CAE  6F9B               	movwf	(powf@is+3)& (0+255),b
 11280   001CB0                     
 11281                           ; BSR set to: 1
 11282   001CB0  C1A4  F068         	movff	powf@k,??_powf
 11283   001CB4  C1A5  F069         	movff	powf@k+1,??_powf+1
 11284   001CB8  C1A6  F06A         	movff	powf@k+2,??_powf+2
 11285   001CBC  C1A7  F06B         	movff	powf@k+3,??_powf+3
 11286   001CC0  0E15               	movlw	21
 11287   001CC2                     u8995:
 11288   001CC2  90D8               	bcf	status,0,c
 11289   001CC4  0100               	movlb	0	; () banked
 11290   001CC6  3768               	rlcf	??_powf& (0+255),f,b
 11291   001CC8  3769               	rlcf	(??_powf+1)& (0+255),f,b
 11292   001CCA  376A               	rlcf	(??_powf+2)& (0+255),f,b
 11293   001CCC  376B               	rlcf	(??_powf+3)& (0+255),f,b
 11294   001CCE  2EE8               	decfsz	wreg,f,c
 11295   001CD0  EF61  F00E         	goto	u8995
 11296   001CD4  0101               	movlb	1	; () banked
 11297   001CD6  5198               	movf	powf@is& (0+255),w,b
 11298   001CD8  0100               	movlb	0	; () banked
 11299   001CDA  2568               	addwf	??_powf& (0+255),w,b
 11300   001CDC  6F6C               	movwf	(??_powf+4)& (0+255),b
 11301   001CDE  0101               	movlb	1	; () banked
 11302   001CE0  5199               	movf	(powf@is+1)& (0+255),w,b
 11303   001CE2  0100               	movlb	0	; () banked
 11304   001CE4  2169               	addwfc	(??_powf+1)& (0+255),w,b
 11305   001CE6  6F6D               	movwf	(??_powf+5)& (0+255),b
 11306   001CE8  0101               	movlb	1	; () banked
 11307   001CEA  519A               	movf	(powf@is+2)& (0+255),w,b
 11308   001CEC  0100               	movlb	0	; () banked
 11309   001CEE  216A               	addwfc	(??_powf+2)& (0+255),w,b
 11310   001CF0  6F6E               	movwf	(??_powf+6)& (0+255),b
 11311   001CF2  0101               	movlb	1	; () banked
 11312   001CF4  519B               	movf	(powf@is+3)& (0+255),w,b
 11313   001CF6  0100               	movlb	0	; () banked
 11314   001CF8  216B               	addwfc	(??_powf+3)& (0+255),w,b
 11315   001CFA  6F6F               	movwf	(??_powf+7)& (0+255),b
 11316   001CFC  0E00               	movlw	0
 11317   001CFE  256C               	addwf	(??_powf+4)& (0+255),w,b
 11318   001D00  0101               	movlb	1	; () banked
 11319   001D02  6F70               	movwf	powf@t_h& (0+255),b
 11320   001D04  0E00               	movlw	0
 11321   001D06  0100               	movlb	0	; () banked
 11322   001D08  216D               	addwfc	(??_powf+5)& (0+255),w,b
 11323   001D0A  0101               	movlb	1	; () banked
 11324   001D0C  6F71               	movwf	(powf@t_h+1)& (0+255),b
 11325   001D0E  0E40               	movlw	64
 11326   001D10  0100               	movlb	0	; () banked
 11327   001D12  216E               	addwfc	(??_powf+6)& (0+255),w,b
 11328   001D14  0101               	movlb	1	; () banked
 11329   001D16  6F72               	movwf	(powf@t_h+2)& (0+255),b
 11330   001D18  0E00               	movlw	0
 11331   001D1A  0100               	movlb	0	; () banked
 11332   001D1C  216F               	addwfc	(??_powf+7)& (0+255),w,b
 11333   001D1E  0101               	movlb	1	; () banked
 11334   001D20  6F73               	movwf	(powf@t_h+3)& (0+255),b
 11335   001D22                     
 11336                           ; BSR set to: 1
 11337   001D22  51A4               	movf	powf@k& (0+255),w,b
 11338   001D24  0D04               	mullw	4
 11339   001D26  50F3               	movf	243,w,c
 11340   001D28  0F11               	addlw	low _bp
 11341   001D2A  0100               	movlb	0	; () banked
 11342   001D2C  6F68               	movwf	??_powf& (0+255),b
 11343   001D2E  C068  FFF6         	movff	??_powf,tblptrl
 11344   001D32                     	if	1	;There is more than 1 active tblptr byte
 11345   001D32  0E0E               	movlw	high __smallconst
 11346   001D34  6EF7               	movwf	tblptrh,c
 11347   001D36                     	endif
 11348   001D36                     	if	0	;tblptru may be non-zero
 11349   001D36                     	endif
 11350   001D36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11351   001D36  0E00               	movlw	low (__smallconst shr (0+16))
 11352   001D38  6EF8               	movwf	tblptru,c
 11353   001D3A                     	endif
 11354   001D3A  0009               	tblrd		*+
 11355   001D3C  CFF5 F048          	movff	tablat,___flsub@a
 11356   001D40  0009               	tblrd		*+
 11357   001D42  CFF5 F049          	movff	tablat,___flsub@a+1
 11358   001D46  0009               	tblrd		*+
 11359   001D48  CFF5 F04A          	movff	tablat,___flsub@a+2
 11360   001D4C  000A               	tblrd		*-
 11361   001D4E  CFF5 F04B          	movff	tablat,___flsub@a+3
 11362   001D52  C170  F044         	movff	powf@t_h,___flsub@b
 11363   001D56  C171  F045         	movff	powf@t_h+1,___flsub@b+1
 11364   001D5A  C172  F046         	movff	powf@t_h+2,___flsub@b+2
 11365   001D5E  C173  F047         	movff	powf@t_h+3,___flsub@b+3
 11366   001D62  ECBD  F03E         	call	___flsub	;wreg free
 11367   001D66  C044  F19C         	movff	?___flsub,_powf$3190
 11368   001D6A  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 11369   001D6E  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 11370   001D72  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 11371   001D76  C178  F044         	movff	powf@ax,___flsub@b
 11372   001D7A  C179  F045         	movff	powf@ax+1,___flsub@b+1
 11373   001D7E  C17A  F046         	movff	powf@ax+2,___flsub@b+2
 11374   001D82  C17B  F047         	movff	powf@ax+3,___flsub@b+3
 11375   001D86  C19C  F048         	movff	_powf$3190,___flsub@a
 11376   001D8A  C19D  F049         	movff	_powf$3190+1,___flsub@a+1
 11377   001D8E  C19E  F04A         	movff	_powf$3190+2,___flsub@a+2
 11378   001D92  C19F  F04B         	movff	_powf$3190+3,___flsub@a+3
 11379   001D96  ECBD  F03E         	call	___flsub	;wreg free
 11380   001D9A  C044  F134         	movff	?___flsub,powf@t_l
 11381   001D9E  C045  F135         	movff	?___flsub+1,powf@t_l+1
 11382   001DA2  C046  F136         	movff	?___flsub+2,powf@t_l+2
 11383   001DA6  C047  F137         	movff	?___flsub+3,powf@t_l+3
 11384   001DAA  C170  F016         	movff	powf@t_h,___flmul@a
 11385   001DAE  C171  F017         	movff	powf@t_h+1,___flmul@a+1
 11386   001DB2  C172  F018         	movff	powf@t_h+2,___flmul@a+2
 11387   001DB6  C173  F019         	movff	powf@t_h+3,___flmul@a+3
 11388   001DBA  C174  F012         	movff	powf@s_h,___flmul@b
 11389   001DBE  C175  F013         	movff	powf@s_h+1,___flmul@b+1
 11390   001DC2  C176  F014         	movff	powf@s_h+2,___flmul@b+2
 11391   001DC6  C177  F015         	movff	powf@s_h+3,___flmul@b+3
 11392   001DCA  EC44  F02A         	call	___flmul	;wreg free
 11393   001DCE  C012  F048         	movff	?___flmul,___flsub@a
 11394   001DD2  C013  F049         	movff	?___flmul+1,___flsub@a+1
 11395   001DD6  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 11396   001DDA  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 11397   001DDE  C17C  F044         	movff	powf@u,___flsub@b
 11398   001DE2  C17D  F045         	movff	powf@u+1,___flsub@b+1
 11399   001DE6  C17E  F046         	movff	powf@u+2,___flsub@b+2
 11400   001DEA  C17F  F047         	movff	powf@u+3,___flsub@b+3
 11401   001DEE  ECBD  F03E         	call	___flsub	;wreg free
 11402   001DF2  C044  F19C         	movff	?___flsub,_powf$3190
 11403   001DF6  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 11404   001DFA  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 11405   001DFE  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 11406   001E02  C134  F016         	movff	powf@t_l,___flmul@a
 11407   001E06  C135  F017         	movff	powf@t_l+1,___flmul@a+1
 11408   001E0A  C136  F018         	movff	powf@t_l+2,___flmul@a+2
 11409   001E0E  C137  F019         	movff	powf@t_l+3,___flmul@a+3
 11410   001E12  C174  F012         	movff	powf@s_h,___flmul@b
 11411   001E16  C175  F013         	movff	powf@s_h+1,___flmul@b+1
 11412   001E1A  C176  F014         	movff	powf@s_h+2,___flmul@b+2
 11413   001E1E  C177  F015         	movff	powf@s_h+3,___flmul@b+3
 11414   001E22  EC44  F02A         	call	___flmul	;wreg free
 11415   001E26  C012  F048         	movff	?___flmul,___flsub@a
 11416   001E2A  C013  F049         	movff	?___flmul+1,___flsub@a+1
 11417   001E2E  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 11418   001E32  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 11419   001E36  C19C  F044         	movff	_powf$3190,___flsub@b
 11420   001E3A  C19D  F045         	movff	_powf$3190+1,___flsub@b+1
 11421   001E3E  C19E  F046         	movff	_powf$3190+2,___flsub@b+2
 11422   001E42  C19F  F047         	movff	_powf$3190+3,___flsub@b+3
 11423   001E46  ECBD  F03E         	call	___flsub	;wreg free
 11424   001E4A  C044  F158         	movff	?___flsub,_powf$3188
 11425   001E4E  C045  F159         	movff	?___flsub+1,_powf$3188+1
 11426   001E52  C046  F15A         	movff	?___flsub+2,_powf$3188+2
 11427   001E56  C047  F15B         	movff	?___flsub+3,_powf$3188+3
 11428   001E5A  C158  F012         	movff	_powf$3188,___flmul@b
 11429   001E5E  C159  F013         	movff	_powf$3188+1,___flmul@b+1
 11430   001E62  C15A  F014         	movff	_powf$3188+2,___flmul@b+2
 11431   001E66  C15B  F015         	movff	_powf$3188+3,___flmul@b+3
 11432   001E6A  C180  F016         	movff	powf@v,___flmul@a
 11433   001E6E  C181  F017         	movff	powf@v+1,___flmul@a+1
 11434   001E72  C182  F018         	movff	powf@v+2,___flmul@a+2
 11435   001E76  C183  F019         	movff	powf@v+3,___flmul@a+3
 11436   001E7A  EC44  F02A         	call	___flmul	;wreg free
 11437   001E7E  C012  F130         	movff	?___flmul,powf@s_l
 11438   001E82  C013  F131         	movff	?___flmul+1,powf@s_l+1
 11439   001E86  C014  F132         	movff	?___flmul+2,powf@s_l+2
 11440   001E8A  C015  F133         	movff	?___flmul+3,powf@s_l+3
 11441   001E8E  C160  F012         	movff	powf@s,___flmul@b
 11442   001E92  C161  F013         	movff	powf@s+1,___flmul@b+1
 11443   001E96  C162  F014         	movff	powf@s+2,___flmul@b+2
 11444   001E9A  C163  F015         	movff	powf@s+3,___flmul@b+3
 11445   001E9E  C160  F016         	movff	powf@s,___flmul@a
 11446   001EA2  C161  F017         	movff	powf@s+1,___flmul@a+1
 11447   001EA6  C162  F018         	movff	powf@s+2,___flmul@a+2
 11448   001EAA  C163  F019         	movff	powf@s+3,___flmul@a+3
 11449   001EAE  EC44  F02A         	call	___flmul	;wreg free
 11450   001EB2  C012  F190         	movff	?___flmul,powf@s2
 11451   001EB6  C013  F191         	movff	?___flmul+1,powf@s2+1
 11452   001EBA  C014  F192         	movff	?___flmul+2,powf@s2+2
 11453   001EBE  C015  F193         	movff	?___flmul+3,powf@s2+3
 11454   001EC2  0E55               	movlw	85
 11455   001EC4  6E06               	movwf	___fladd@a^0,c
 11456   001EC6  0E32               	movlw	50
 11457   001EC8  6E07               	movwf	(___fladd@a+1)^0,c
 11458   001ECA  0E6C               	movlw	108
 11459   001ECC  6E08               	movwf	(___fladd@a+2)^0,c
 11460   001ECE  0E3E               	movlw	62
 11461   001ED0  6E09               	movwf	(___fladd@a+3)^0,c
 11462   001ED2  0E42               	movlw	66
 11463   001ED4  6E16               	movwf	___flmul@a^0,c
 11464   001ED6  0EF1               	movlw	241
 11465   001ED8  6E17               	movwf	(___flmul@a+1)^0,c
 11466   001EDA  0E53               	movlw	83
 11467   001EDC  6E18               	movwf	(___flmul@a+2)^0,c
 11468   001EDE  0E3E               	movlw	62
 11469   001EE0  6E19               	movwf	(___flmul@a+3)^0,c
 11470   001EE2  C190  F012         	movff	powf@s2,___flmul@b
 11471   001EE6  C191  F013         	movff	powf@s2+1,___flmul@b+1
 11472   001EEA  C192  F014         	movff	powf@s2+2,___flmul@b+2
 11473   001EEE  C193  F015         	movff	powf@s2+3,___flmul@b+3
 11474   001EF2  EC44  F02A         	call	___flmul	;wreg free
 11475   001EF6  C012  F002         	movff	?___flmul,___fladd@b
 11476   001EFA  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11477   001EFE  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11478   001F02  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11479   001F06  ECE4  F027         	call	___fladd	;wreg free
 11480   001F0A  C002  F148         	movff	?___fladd,_powf$3187
 11481   001F0E  C003  F149         	movff	?___fladd+1,_powf$3187+1
 11482   001F12  C004  F14A         	movff	?___fladd+2,_powf$3187+2
 11483   001F16  C005  F14B         	movff	?___fladd+3,_powf$3187+3
 11484   001F1A  0E05               	movlw	5
 11485   001F1C  6E06               	movwf	___fladd@a^0,c
 11486   001F1E  0EA3               	movlw	163
 11487   001F20  6E07               	movwf	(___fladd@a+1)^0,c
 11488   001F22  0E8B               	movlw	139
 11489   001F24  6E08               	movwf	(___fladd@a+2)^0,c
 11490   001F26  0E3E               	movlw	62
 11491   001F28  6E09               	movwf	(___fladd@a+3)^0,c
 11492   001F2A  C190  F016         	movff	powf@s2,___flmul@a
 11493   001F2E  C191  F017         	movff	powf@s2+1,___flmul@a+1
 11494   001F32  C192  F018         	movff	powf@s2+2,___flmul@a+2
 11495   001F36  C193  F019         	movff	powf@s2+3,___flmul@a+3
 11496   001F3A  C148  F012         	movff	_powf$3187,___flmul@b
 11497   001F3E  C149  F013         	movff	_powf$3187+1,___flmul@b+1
 11498   001F42  C14A  F014         	movff	_powf$3187+2,___flmul@b+2
 11499   001F46  C14B  F015         	movff	_powf$3187+3,___flmul@b+3
 11500   001F4A  EC44  F02A         	call	___flmul	;wreg free
 11501   001F4E  C012  F002         	movff	?___flmul,___fladd@b
 11502   001F52  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11503   001F56  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11504   001F5A  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11505   001F5E  ECE4  F027         	call	___fladd	;wreg free
 11506   001F62  C002  F158         	movff	?___fladd,_powf$3188
 11507   001F66  C003  F159         	movff	?___fladd+1,_powf$3188+1
 11508   001F6A  C004  F15A         	movff	?___fladd+2,_powf$3188+2
 11509   001F6E  C005  F15B         	movff	?___fladd+3,_powf$3188+3
 11510   001F72  0EAB               	movlw	171
 11511   001F74  6E06               	movwf	___fladd@a^0,c
 11512   001F76  0EAA               	movlw	170
 11513   001F78  6E07               	movwf	(___fladd@a+1)^0,c
 11514   001F7A  0EAA               	movlw	170
 11515   001F7C  6E08               	movwf	(___fladd@a+2)^0,c
 11516   001F7E  0E3E               	movlw	62
 11517   001F80  6E09               	movwf	(___fladd@a+3)^0,c
 11518   001F82  C190  F016         	movff	powf@s2,___flmul@a
 11519   001F86  C191  F017         	movff	powf@s2+1,___flmul@a+1
 11520   001F8A  C192  F018         	movff	powf@s2+2,___flmul@a+2
 11521   001F8E  C193  F019         	movff	powf@s2+3,___flmul@a+3
 11522   001F92  C158  F012         	movff	_powf$3188,___flmul@b
 11523   001F96  C159  F013         	movff	_powf$3188+1,___flmul@b+1
 11524   001F9A  C15A  F014         	movff	_powf$3188+2,___flmul@b+2
 11525   001F9E  C15B  F015         	movff	_powf$3188+3,___flmul@b+3
 11526   001FA2  EC44  F02A         	call	___flmul	;wreg free
 11527   001FA6  C012  F002         	movff	?___flmul,___fladd@b
 11528   001FAA  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11529   001FAE  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11530   001FB2  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11531   001FB6  ECE4  F027         	call	___fladd	;wreg free
 11532   001FBA  C002  F14C         	movff	?___fladd,_powf$3189
 11533   001FBE  C003  F14D         	movff	?___fladd+1,_powf$3189+1
 11534   001FC2  C004  F14E         	movff	?___fladd+2,_powf$3189+2
 11535   001FC6  C005  F14F         	movff	?___fladd+3,_powf$3189+3
 11536   001FCA  0EB7               	movlw	183
 11537   001FCC  6E06               	movwf	___fladd@a^0,c
 11538   001FCE  0E6D               	movlw	109
 11539   001FD0  6E07               	movwf	(___fladd@a+1)^0,c
 11540   001FD2  0EDB               	movlw	219
 11541   001FD4  6E08               	movwf	(___fladd@a+2)^0,c
 11542   001FD6  0E3E               	movlw	62
 11543   001FD8  6E09               	movwf	(___fladd@a+3)^0,c
 11544   001FDA  C190  F016         	movff	powf@s2,___flmul@a
 11545   001FDE  C191  F017         	movff	powf@s2+1,___flmul@a+1
 11546   001FE2  C192  F018         	movff	powf@s2+2,___flmul@a+2
 11547   001FE6  C193  F019         	movff	powf@s2+3,___flmul@a+3
 11548   001FEA  C14C  F012         	movff	_powf$3189,___flmul@b
 11549   001FEE  C14D  F013         	movff	_powf$3189+1,___flmul@b+1
 11550   001FF2  C14E  F014         	movff	_powf$3189+2,___flmul@b+2
 11551   001FF6  C14F  F015         	movff	_powf$3189+3,___flmul@b+3
 11552   001FFA  EC44  F02A         	call	___flmul	;wreg free
 11553   001FFE  C012  F002         	movff	?___flmul,___fladd@b
 11554   002002  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11555   002006  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11556   00200A  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11557   00200E  ECE4  F027         	call	___fladd	;wreg free
 11558   002012  C002  F138         	movff	?___fladd,_powf$3191
 11559   002016  C003  F139         	movff	?___fladd+1,_powf$3191+1
 11560   00201A  C004  F13A         	movff	?___fladd+2,_powf$3191+2
 11561   00201E  C005  F13B         	movff	?___fladd+3,_powf$3191+3
 11562   002022  0E9A               	movlw	154
 11563   002024  6E06               	movwf	___fladd@a^0,c
 11564   002026  0E99               	movlw	153
 11565   002028  6E07               	movwf	(___fladd@a+1)^0,c
 11566   00202A  0E19               	movlw	25
 11567   00202C  6E08               	movwf	(___fladd@a+2)^0,c
 11568   00202E  0E3F               	movlw	63
 11569   002030  6E09               	movwf	(___fladd@a+3)^0,c
 11570   002032  C190  F016         	movff	powf@s2,___flmul@a
 11571   002036  C191  F017         	movff	powf@s2+1,___flmul@a+1
 11572   00203A  C192  F018         	movff	powf@s2+2,___flmul@a+2
 11573   00203E  C193  F019         	movff	powf@s2+3,___flmul@a+3
 11574   002042  C138  F012         	movff	_powf$3191,___flmul@b
 11575   002046  C139  F013         	movff	_powf$3191+1,___flmul@b+1
 11576   00204A  C13A  F014         	movff	_powf$3191+2,___flmul@b+2
 11577   00204E  C13B  F015         	movff	_powf$3191+3,___flmul@b+3
 11578   002052  EC44  F02A         	call	___flmul	;wreg free
 11579   002056  C012  F002         	movff	?___flmul,___fladd@b
 11580   00205A  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11581   00205E  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11582   002062  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11583   002066  ECE4  F027         	call	___fladd	;wreg free
 11584   00206A  C002  F100         	movff	?___fladd,_powf$3192
 11585   00206E  C003  F101         	movff	?___fladd+1,_powf$3192+1
 11586   002072  C004  F102         	movff	?___fladd+2,_powf$3192+2
 11587   002076  C005  F103         	movff	?___fladd+3,_powf$3192+3
 11588   00207A  C190  F016         	movff	powf@s2,___flmul@a
 11589   00207E  C191  F017         	movff	powf@s2+1,___flmul@a+1
 11590   002082  C192  F018         	movff	powf@s2+2,___flmul@a+2
 11591   002086  C193  F019         	movff	powf@s2+3,___flmul@a+3
 11592   00208A  C190  F012         	movff	powf@s2,___flmul@b
 11593   00208E  C191  F013         	movff	powf@s2+1,___flmul@b+1
 11594   002092  C192  F014         	movff	powf@s2+2,___flmul@b+2
 11595   002096  C193  F015         	movff	powf@s2+3,___flmul@b+3
 11596   00209A  EC44  F02A         	call	___flmul	;wreg free
 11597   00209E  C012  F104         	movff	?___flmul,_powf$3193
 11598   0020A2  C013  F105         	movff	?___flmul+1,_powf$3193+1
 11599   0020A6  C014  F106         	movff	?___flmul+2,_powf$3193+2
 11600   0020AA  C015  F107         	movff	?___flmul+3,_powf$3193+3
 11601   0020AE  C100  F012         	movff	_powf$3192,___flmul@b
 11602   0020B2  C101  F013         	movff	_powf$3192+1,___flmul@b+1
 11603   0020B6  C102  F014         	movff	_powf$3192+2,___flmul@b+2
 11604   0020BA  C103  F015         	movff	_powf$3192+3,___flmul@b+3
 11605   0020BE  C104  F016         	movff	_powf$3193,___flmul@a
 11606   0020C2  C105  F017         	movff	_powf$3193+1,___flmul@a+1
 11607   0020C6  C106  F018         	movff	_powf$3193+2,___flmul@a+2
 11608   0020CA  C107  F019         	movff	_powf$3193+3,___flmul@a+3
 11609   0020CE  EC44  F02A         	call	___flmul	;wreg free
 11610   0020D2  C012  F150         	movff	?___flmul,powf@r
 11611   0020D6  C013  F151         	movff	?___flmul+1,powf@r+1
 11612   0020DA  C014  F152         	movff	?___flmul+2,powf@r+2
 11613   0020DE  C015  F153         	movff	?___flmul+3,powf@r+3
 11614   0020E2  C130  F016         	movff	powf@s_l,___flmul@a
 11615   0020E6  C131  F017         	movff	powf@s_l+1,___flmul@a+1
 11616   0020EA  C132  F018         	movff	powf@s_l+2,___flmul@a+2
 11617   0020EE  C133  F019         	movff	powf@s_l+3,___flmul@a+3
 11618   0020F2  C160  F006         	movff	powf@s,___fladd@a
 11619   0020F6  C161  F007         	movff	powf@s+1,___fladd@a+1
 11620   0020FA  C162  F008         	movff	powf@s+2,___fladd@a+2
 11621   0020FE  C163  F009         	movff	powf@s+3,___fladd@a+3
 11622   002102  C174  F002         	movff	powf@s_h,___fladd@b
 11623   002106  C175  F003         	movff	powf@s_h+1,___fladd@b+1
 11624   00210A  C176  F004         	movff	powf@s_h+2,___fladd@b+2
 11625   00210E  C177  F005         	movff	powf@s_h+3,___fladd@b+3
 11626   002112  ECE4  F027         	call	___fladd	;wreg free
 11627   002116  C002  F012         	movff	?___fladd,___flmul@b
 11628   00211A  C003  F013         	movff	?___fladd+1,___flmul@b+1
 11629   00211E  C004  F014         	movff	?___fladd+2,___flmul@b+2
 11630   002122  C005  F015         	movff	?___fladd+3,___flmul@b+3
 11631   002126  EC44  F02A         	call	___flmul	;wreg free
 11632   00212A  C012  F15C         	movff	?___flmul,_powf$3194
 11633   00212E  C013  F15D         	movff	?___flmul+1,_powf$3194+1
 11634   002132  C014  F15E         	movff	?___flmul+2,_powf$3194+2
 11635   002136  C015  F15F         	movff	?___flmul+3,_powf$3194+3
 11636   00213A  C150  F002         	movff	powf@r,___fladd@b
 11637   00213E  C151  F003         	movff	powf@r+1,___fladd@b+1
 11638   002142  C152  F004         	movff	powf@r+2,___fladd@b+2
 11639   002146  C153  F005         	movff	powf@r+3,___fladd@b+3
 11640   00214A  C15C  F006         	movff	_powf$3194,___fladd@a
 11641   00214E  C15D  F007         	movff	_powf$3194+1,___fladd@a+1
 11642   002152  C15E  F008         	movff	_powf$3194+2,___fladd@a+2
 11643   002156  C15F  F009         	movff	_powf$3194+3,___fladd@a+3
 11644   00215A  ECE4  F027         	call	___fladd	;wreg free
 11645   00215E  C002  F150         	movff	?___fladd,powf@r
 11646   002162  C003  F151         	movff	?___fladd+1,powf@r+1
 11647   002166  C004  F152         	movff	?___fladd+2,powf@r+2
 11648   00216A  C005  F153         	movff	?___fladd+3,powf@r+3
 11649   00216E  C174  F012         	movff	powf@s_h,___flmul@b
 11650   002172  C175  F013         	movff	powf@s_h+1,___flmul@b+1
 11651   002176  C176  F014         	movff	powf@s_h+2,___flmul@b+2
 11652   00217A  C177  F015         	movff	powf@s_h+3,___flmul@b+3
 11653   00217E  C174  F016         	movff	powf@s_h,___flmul@a
 11654   002182  C175  F017         	movff	powf@s_h+1,___flmul@a+1
 11655   002186  C176  F018         	movff	powf@s_h+2,___flmul@a+2
 11656   00218A  C177  F019         	movff	powf@s_h+3,___flmul@a+3
 11657   00218E  EC44  F02A         	call	___flmul	;wreg free
 11658   002192  C012  F190         	movff	?___flmul,powf@s2
 11659   002196  C013  F191         	movff	?___flmul+1,powf@s2+1
 11660   00219A  C014  F192         	movff	?___flmul+2,powf@s2+2
 11661   00219E  C015  F193         	movff	?___flmul+3,powf@s2+3
 11662   0021A2  0E00               	movlw	0
 11663   0021A4  6E06               	movwf	___fladd@a^0,c
 11664   0021A6  0E00               	movlw	0
 11665   0021A8  6E07               	movwf	(___fladd@a+1)^0,c
 11666   0021AA  0E40               	movlw	64
 11667   0021AC  6E08               	movwf	(___fladd@a+2)^0,c
 11668   0021AE  0E40               	movlw	64
 11669   0021B0  6E09               	movwf	(___fladd@a+3)^0,c
 11670   0021B2  C190  F002         	movff	powf@s2,___fladd@b
 11671   0021B6  C191  F003         	movff	powf@s2+1,___fladd@b+1
 11672   0021BA  C192  F004         	movff	powf@s2+2,___fladd@b+2
 11673   0021BE  C193  F005         	movff	powf@s2+3,___fladd@b+3
 11674   0021C2  ECE4  F027         	call	___fladd	;wreg free
 11675   0021C6  C002  F15C         	movff	?___fladd,_powf$3194
 11676   0021CA  C003  F15D         	movff	?___fladd+1,_powf$3194+1
 11677   0021CE  C004  F15E         	movff	?___fladd+2,_powf$3194+2
 11678   0021D2  C005  F15F         	movff	?___fladd+3,_powf$3194+3
 11679   0021D6  C15C  F002         	movff	_powf$3194,___fladd@b
 11680   0021DA  C15D  F003         	movff	_powf$3194+1,___fladd@b+1
 11681   0021DE  C15E  F004         	movff	_powf$3194+2,___fladd@b+2
 11682   0021E2  C15F  F005         	movff	_powf$3194+3,___fladd@b+3
 11683   0021E6  C150  F006         	movff	powf@r,___fladd@a
 11684   0021EA  C151  F007         	movff	powf@r+1,___fladd@a+1
 11685   0021EE  C152  F008         	movff	powf@r+2,___fladd@a+2
 11686   0021F2  C153  F009         	movff	powf@r+3,___fladd@a+3
 11687   0021F6  ECE4  F027         	call	___fladd	;wreg free
 11688   0021FA  C002  F170         	movff	?___fladd,powf@t_h
 11689   0021FE  C003  F171         	movff	?___fladd+1,powf@t_h+1
 11690   002202  C004  F172         	movff	?___fladd+2,powf@t_h+2
 11691   002206  C005  F173         	movff	?___fladd+3,powf@t_h+3
 11692   00220A  C170  F198         	movff	powf@t_h,powf@is
 11693   00220E  C171  F199         	movff	powf@t_h+1,powf@is+1
 11694   002212  C172  F19A         	movff	powf@t_h+2,powf@is+2
 11695   002216  C173  F19B         	movff	powf@t_h+3,powf@is+3
 11696   00221A  0E00               	movlw	0
 11697   00221C  0101               	movlb	1	; () banked
 11698   00221E  1598               	andwf	powf@is& (0+255),w,b
 11699   002220  6F70               	movwf	powf@t_h& (0+255),b
 11700   002222  0EF0               	movlw	240
 11701   002224  1599               	andwf	(powf@is+1)& (0+255),w,b
 11702   002226  6F71               	movwf	(powf@t_h+1)& (0+255),b
 11703   002228  0EFF               	movlw	255
 11704   00222A  159A               	andwf	(powf@is+2)& (0+255),w,b
 11705   00222C  6F72               	movwf	(powf@t_h+2)& (0+255),b
 11706   00222E  0EFF               	movlw	255
 11707   002230  159B               	andwf	(powf@is+3)& (0+255),w,b
 11708   002232  6F73               	movwf	(powf@t_h+3)& (0+255),b
 11709   002234                     
 11710                           ; BSR set to: 1
 11711   002234  0E00               	movlw	0
 11712   002236  6E06               	movwf	___fladd@a^0,c
 11713   002238  0E00               	movlw	0
 11714   00223A  6E07               	movwf	(___fladd@a+1)^0,c
 11715   00223C  0E40               	movlw	64
 11716   00223E  6E08               	movwf	(___fladd@a+2)^0,c
 11717   002240  0EC0               	movlw	192
 11718   002242  6E09               	movwf	(___fladd@a+3)^0,c
 11719   002244  C170  F002         	movff	powf@t_h,___fladd@b
 11720   002248  C171  F003         	movff	powf@t_h+1,___fladd@b+1
 11721   00224C  C172  F004         	movff	powf@t_h+2,___fladd@b+2
 11722   002250  C173  F005         	movff	powf@t_h+3,___fladd@b+3
 11723   002254  ECE4  F027         	call	___fladd	;wreg free
 11724   002258  C002  F13C         	movff	?___fladd,_powf$3195
 11725   00225C  C003  F13D         	movff	?___fladd+1,_powf$3195+1
 11726   002260  C004  F13E         	movff	?___fladd+2,_powf$3195+2
 11727   002264  C005  F13F         	movff	?___fladd+3,_powf$3195+3
 11728   002268  C190  F048         	movff	powf@s2,___flsub@a
 11729   00226C  C191  F049         	movff	powf@s2+1,___flsub@a+1
 11730   002270  C192  F04A         	movff	powf@s2+2,___flsub@a+2
 11731   002274  C193  F04B         	movff	powf@s2+3,___flsub@a+3
 11732   002278  C13C  F044         	movff	_powf$3195,___flsub@b
 11733   00227C  C13D  F045         	movff	_powf$3195+1,___flsub@b+1
 11734   002280  C13E  F046         	movff	_powf$3195+2,___flsub@b+2
 11735   002284  C13F  F047         	movff	_powf$3195+3,___flsub@b+3
 11736   002288  ECBD  F03E         	call	___flsub	;wreg free
 11737   00228C  C044  F140         	movff	?___flsub,_powf$3196
 11738   002290  C045  F141         	movff	?___flsub+1,_powf$3196+1
 11739   002294  C046  F142         	movff	?___flsub+2,_powf$3196+2
 11740   002298  C047  F143         	movff	?___flsub+3,_powf$3196+3
 11741   00229C  C150  F044         	movff	powf@r,___flsub@b
 11742   0022A0  C151  F045         	movff	powf@r+1,___flsub@b+1
 11743   0022A4  C152  F046         	movff	powf@r+2,___flsub@b+2
 11744   0022A8  C153  F047         	movff	powf@r+3,___flsub@b+3
 11745   0022AC  C140  F048         	movff	_powf$3196,___flsub@a
 11746   0022B0  C141  F049         	movff	_powf$3196+1,___flsub@a+1
 11747   0022B4  C142  F04A         	movff	_powf$3196+2,___flsub@a+2
 11748   0022B8  C143  F04B         	movff	_powf$3196+3,___flsub@a+3
 11749   0022BC  ECBD  F03E         	call	___flsub	;wreg free
 11750   0022C0  C044  F134         	movff	?___flsub,powf@t_l
 11751   0022C4  C045  F135         	movff	?___flsub+1,powf@t_l+1
 11752   0022C8  C046  F136         	movff	?___flsub+2,powf@t_l+2
 11753   0022CC  C047  F137         	movff	?___flsub+3,powf@t_l+3
 11754   0022D0  C174  F012         	movff	powf@s_h,___flmul@b
 11755   0022D4  C175  F013         	movff	powf@s_h+1,___flmul@b+1
 11756   0022D8  C176  F014         	movff	powf@s_h+2,___flmul@b+2
 11757   0022DC  C177  F015         	movff	powf@s_h+3,___flmul@b+3
 11758   0022E0  C170  F016         	movff	powf@t_h,___flmul@a
 11759   0022E4  C171  F017         	movff	powf@t_h+1,___flmul@a+1
 11760   0022E8  C172  F018         	movff	powf@t_h+2,___flmul@a+2
 11761   0022EC  C173  F019         	movff	powf@t_h+3,___flmul@a+3
 11762   0022F0  EC44  F02A         	call	___flmul	;wreg free
 11763   0022F4  C012  F17C         	movff	?___flmul,powf@u
 11764   0022F8  C013  F17D         	movff	?___flmul+1,powf@u+1
 11765   0022FC  C014  F17E         	movff	?___flmul+2,powf@u+2
 11766   002300  C015  F17F         	movff	?___flmul+3,powf@u+3
 11767   002304  C130  F016         	movff	powf@s_l,___flmul@a
 11768   002308  C131  F017         	movff	powf@s_l+1,___flmul@a+1
 11769   00230C  C132  F018         	movff	powf@s_l+2,___flmul@a+2
 11770   002310  C133  F019         	movff	powf@s_l+3,___flmul@a+3
 11771   002314  C170  F012         	movff	powf@t_h,___flmul@b
 11772   002318  C171  F013         	movff	powf@t_h+1,___flmul@b+1
 11773   00231C  C172  F014         	movff	powf@t_h+2,___flmul@b+2
 11774   002320  C173  F015         	movff	powf@t_h+3,___flmul@b+3
 11775   002324  EC44  F02A         	call	___flmul	;wreg free
 11776   002328  C012  F002         	movff	?___flmul,___fladd@b
 11777   00232C  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11778   002330  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11779   002334  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11780   002338  C160  F016         	movff	powf@s,___flmul@a
 11781   00233C  C161  F017         	movff	powf@s+1,___flmul@a+1
 11782   002340  C162  F018         	movff	powf@s+2,___flmul@a+2
 11783   002344  C163  F019         	movff	powf@s+3,___flmul@a+3
 11784   002348  C134  F012         	movff	powf@t_l,___flmul@b
 11785   00234C  C135  F013         	movff	powf@t_l+1,___flmul@b+1
 11786   002350  C136  F014         	movff	powf@t_l+2,___flmul@b+2
 11787   002354  C137  F015         	movff	powf@t_l+3,___flmul@b+3
 11788   002358  EC44  F02A         	call	___flmul	;wreg free
 11789   00235C  C012  F006         	movff	?___flmul,___fladd@a
 11790   002360  C013  F007         	movff	?___flmul+1,___fladd@a+1
 11791   002364  C014  F008         	movff	?___flmul+2,___fladd@a+2
 11792   002368  C015  F009         	movff	?___flmul+3,___fladd@a+3
 11793   00236C  ECE4  F027         	call	___fladd	;wreg free
 11794   002370  C002  F180         	movff	?___fladd,powf@v
 11795   002374  C003  F181         	movff	?___fladd+1,powf@v+1
 11796   002378  C004  F182         	movff	?___fladd+2,powf@v+2
 11797   00237C  C005  F183         	movff	?___fladd+3,powf@v+3
 11798   002380  C17C  F002         	movff	powf@u,___fladd@b
 11799   002384  C17D  F003         	movff	powf@u+1,___fladd@b+1
 11800   002388  C17E  F004         	movff	powf@u+2,___fladd@b+2
 11801   00238C  C17F  F005         	movff	powf@u+3,___fladd@b+3
 11802   002390  C180  F006         	movff	powf@v,___fladd@a
 11803   002394  C181  F007         	movff	powf@v+1,___fladd@a+1
 11804   002398  C182  F008         	movff	powf@v+2,___fladd@a+2
 11805   00239C  C183  F009         	movff	powf@v+3,___fladd@a+3
 11806   0023A0  ECE4  F027         	call	___fladd	;wreg free
 11807   0023A4  C002  F1A0         	movff	?___fladd,powf@p_h
 11808   0023A8  C003  F1A1         	movff	?___fladd+1,powf@p_h+1
 11809   0023AC  C004  F1A2         	movff	?___fladd+2,powf@p_h+2
 11810   0023B0  C005  F1A3         	movff	?___fladd+3,powf@p_h+3
 11811   0023B4  C1A0  F198         	movff	powf@p_h,powf@is
 11812   0023B8  C1A1  F199         	movff	powf@p_h+1,powf@is+1
 11813   0023BC  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
 11814   0023C0  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
 11815   0023C4  0E00               	movlw	0
 11816   0023C6  0101               	movlb	1	; () banked
 11817   0023C8  1598               	andwf	powf@is& (0+255),w,b
 11818   0023CA  6FA0               	movwf	powf@p_h& (0+255),b
 11819   0023CC  0EF0               	movlw	240
 11820   0023CE  1599               	andwf	(powf@is+1)& (0+255),w,b
 11821   0023D0  6FA1               	movwf	(powf@p_h+1)& (0+255),b
 11822   0023D2  0EFF               	movlw	255
 11823   0023D4  159A               	andwf	(powf@is+2)& (0+255),w,b
 11824   0023D6  6FA2               	movwf	(powf@p_h+2)& (0+255),b
 11825   0023D8  0EFF               	movlw	255
 11826   0023DA  159B               	andwf	(powf@is+3)& (0+255),w,b
 11827   0023DC  6FA3               	movwf	(powf@p_h+3)& (0+255),b
 11828   0023DE                     
 11829                           ; BSR set to: 1
 11830   0023DE  C17C  F048         	movff	powf@u,___flsub@a
 11831   0023E2  C17D  F049         	movff	powf@u+1,___flsub@a+1
 11832   0023E6  C17E  F04A         	movff	powf@u+2,___flsub@a+2
 11833   0023EA  C17F  F04B         	movff	powf@u+3,___flsub@a+3
 11834   0023EE  C1A0  F044         	movff	powf@p_h,___flsub@b
 11835   0023F2  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
 11836   0023F6  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
 11837   0023FA  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
 11838   0023FE  ECBD  F03E         	call	___flsub	;wreg free
 11839   002402  C044  F19C         	movff	?___flsub,_powf$3190
 11840   002406  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 11841   00240A  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 11842   00240E  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 11843   002412  C180  F044         	movff	powf@v,___flsub@b
 11844   002416  C181  F045         	movff	powf@v+1,___flsub@b+1
 11845   00241A  C182  F046         	movff	powf@v+2,___flsub@b+2
 11846   00241E  C183  F047         	movff	powf@v+3,___flsub@b+3
 11847   002422  C19C  F048         	movff	_powf$3190,___flsub@a
 11848   002426  C19D  F049         	movff	_powf$3190+1,___flsub@a+1
 11849   00242A  C19E  F04A         	movff	_powf$3190+2,___flsub@a+2
 11850   00242E  C19F  F04B         	movff	_powf$3190+3,___flsub@a+3
 11851   002432  ECBD  F03E         	call	___flsub	;wreg free
 11852   002436  C044  F16C         	movff	?___flsub,powf@p_l
 11853   00243A  C045  F16D         	movff	?___flsub+1,powf@p_l+1
 11854   00243E  C046  F16E         	movff	?___flsub+2,powf@p_l+2
 11855   002442  C047  F16F         	movff	?___flsub+3,powf@p_l+3
 11856   002446  C1A0  F012         	movff	powf@p_h,___flmul@b
 11857   00244A  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
 11858   00244E  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
 11859   002452  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
 11860   002456  0E00               	movlw	0
 11861   002458  6E16               	movwf	___flmul@a^0,c
 11862   00245A  0E40               	movlw	64
 11863   00245C  6E17               	movwf	(___flmul@a+1)^0,c
 11864   00245E  0E76               	movlw	118
 11865   002460  6E18               	movwf	(___flmul@a+2)^0,c
 11866   002462  0E3F               	movlw	63
 11867   002464  6E19               	movwf	(___flmul@a+3)^0,c
 11868   002466  EC44  F02A         	call	___flmul	;wreg free
 11869   00246A  C012  F120         	movff	?___flmul,powf@z_h
 11870   00246E  C013  F121         	movff	?___flmul+1,powf@z_h+1
 11871   002472  C014  F122         	movff	?___flmul+2,powf@z_h+2
 11872   002476  C015  F123         	movff	?___flmul+3,powf@z_h+3
 11873   00247A  0E4F               	movlw	79
 11874   00247C  6E16               	movwf	___flmul@a^0,c
 11875   00247E  0E38               	movlw	56
 11876   002480  6E17               	movwf	(___flmul@a+1)^0,c
 11877   002482  0E76               	movlw	118
 11878   002484  6E18               	movwf	(___flmul@a+2)^0,c
 11879   002486  0E3F               	movlw	63
 11880   002488  6E19               	movwf	(___flmul@a+3)^0,c
 11881   00248A  C16C  F012         	movff	powf@p_l,___flmul@b
 11882   00248E  C16D  F013         	movff	powf@p_l+1,___flmul@b+1
 11883   002492  C16E  F014         	movff	powf@p_l+2,___flmul@b+2
 11884   002496  C16F  F015         	movff	powf@p_l+3,___flmul@b+3
 11885   00249A  EC44  F02A         	call	___flmul	;wreg free
 11886   00249E  C012  F006         	movff	?___flmul,___fladd@a
 11887   0024A2  C013  F007         	movff	?___flmul+1,___fladd@a+1
 11888   0024A6  C014  F008         	movff	?___flmul+2,___fladd@a+2
 11889   0024AA  C015  F009         	movff	?___flmul+3,___fladd@a+3
 11890   0024AE  0EC6               	movlw	198
 11891   0024B0  6E16               	movwf	___flmul@a^0,c
 11892   0024B2  0E23               	movlw	35
 11893   0024B4  6E17               	movwf	(___flmul@a+1)^0,c
 11894   0024B6  0EF6               	movlw	246
 11895   0024B8  6E18               	movwf	(___flmul@a+2)^0,c
 11896   0024BA  0EB8               	movlw	184
 11897   0024BC  6E19               	movwf	(___flmul@a+3)^0,c
 11898   0024BE  C1A0  F012         	movff	powf@p_h,___flmul@b
 11899   0024C2  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
 11900   0024C6  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
 11901   0024CA  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
 11902   0024CE  EC44  F02A         	call	___flmul	;wreg free
 11903   0024D2  C012  F002         	movff	?___flmul,___fladd@b
 11904   0024D6  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11905   0024DA  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11906   0024DE  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11907   0024E2  ECE4  F027         	call	___fladd	;wreg free
 11908   0024E6  C002  F15C         	movff	?___fladd,_powf$3194
 11909   0024EA  C003  F15D         	movff	?___fladd+1,_powf$3194+1
 11910   0024EE  C004  F15E         	movff	?___fladd+2,_powf$3194+2
 11911   0024F2  C005  F15F         	movff	?___fladd+3,_powf$3194+3
 11912   0024F6  C15C  F002         	movff	_powf$3194,___fladd@b
 11913   0024FA  C15D  F003         	movff	_powf$3194+1,___fladd@b+1
 11914   0024FE  C15E  F004         	movff	_powf$3194+2,___fladd@b+2
 11915   002502  C15F  F005         	movff	_powf$3194+3,___fladd@b+3
 11916   002506  0101               	movlb	1	; () banked
 11917   002508  51A4               	movf	powf@k& (0+255),w,b
 11918   00250A  0D04               	mullw	4
 11919   00250C  50F3               	movf	243,w,c
 11920   00250E  0F01               	addlw	low _dp_l
 11921   002510  0100               	movlb	0	; () banked
 11922   002512  6F68               	movwf	??_powf& (0+255),b
 11923   002514  C068  FFF6         	movff	??_powf,tblptrl
 11924   002518                     	if	1	;There is more than 1 active tblptr byte
 11925   002518  0E0E               	movlw	high __smallconst
 11926   00251A  6EF7               	movwf	tblptrh,c
 11927   00251C                     	endif
 11928   00251C                     	if	0	;tblptru may be non-zero
 11929   00251C                     	endif
 11930   00251C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11931   00251C  0E00               	movlw	low (__smallconst shr (0+16))
 11932   00251E  6EF8               	movwf	tblptru,c
 11933   002520                     	endif
 11934   002520  0009               	tblrd		*+
 11935   002522  CFF5 F006          	movff	tablat,___fladd@a
 11936   002526  0009               	tblrd		*+
 11937   002528  CFF5 F007          	movff	tablat,___fladd@a+1
 11938   00252C  0009               	tblrd		*+
 11939   00252E  CFF5 F008          	movff	tablat,___fladd@a+2
 11940   002532  000A               	tblrd		*-
 11941   002534  CFF5 F009          	movff	tablat,___fladd@a+3
 11942   002538  ECE4  F027         	call	___fladd	;wreg free
 11943   00253C  C002  F124         	movff	?___fladd,powf@z_l
 11944   002540  C003  F125         	movff	?___fladd+1,powf@z_l+1
 11945   002544  C004  F126         	movff	?___fladd+2,powf@z_l+2
 11946   002548  C005  F127         	movff	?___fladd+3,powf@z_l+3
 11947   00254C  C188  F002         	movff	powf@n,___xxtofl@val
 11948   002550  C189  F003         	movff	powf@n+1,___xxtofl@val+1
 11949   002554  C18A  F004         	movff	powf@n+2,___xxtofl@val+2
 11950   002558  C18B  F005         	movff	powf@n+3,___xxtofl@val+3
 11951   00255C  0E01               	movlw	1
 11952   00255E  ECDF  F033         	call	___xxtofl
 11953   002562  C002  F1B0         	movff	?___xxtofl,powf@t
 11954   002566  C003  F1B1         	movff	?___xxtofl+1,powf@t+1
 11955   00256A  C004  F1B2         	movff	?___xxtofl+2,powf@t+2
 11956   00256E  C005  F1B3         	movff	?___xxtofl+3,powf@t+3
 11957   002572  C124  F006         	movff	powf@z_l,___fladd@a
 11958   002576  C125  F007         	movff	powf@z_l+1,___fladd@a+1
 11959   00257A  C126  F008         	movff	powf@z_l+2,___fladd@a+2
 11960   00257E  C127  F009         	movff	powf@z_l+3,___fladd@a+3
 11961   002582  C120  F002         	movff	powf@z_h,___fladd@b
 11962   002586  C121  F003         	movff	powf@z_h+1,___fladd@b+1
 11963   00258A  C122  F004         	movff	powf@z_h+2,___fladd@b+2
 11964   00258E  C123  F005         	movff	powf@z_h+3,___fladd@b+3
 11965   002592  ECE4  F027         	call	___fladd	;wreg free
 11966   002596  C002  F15C         	movff	?___fladd,_powf$3194
 11967   00259A  C003  F15D         	movff	?___fladd+1,_powf$3194+1
 11968   00259E  C004  F15E         	movff	?___fladd+2,_powf$3194+2
 11969   0025A2  C005  F15F         	movff	?___fladd+3,_powf$3194+3
 11970   0025A6  0101               	movlb	1	; () banked
 11971   0025A8  51A4               	movf	powf@k& (0+255),w,b
 11972   0025AA  0D04               	mullw	4
 11973   0025AC  50F3               	movf	243,w,c
 11974   0025AE  0F09               	addlw	low _dp_h
 11975   0025B0  0100               	movlb	0	; () banked
 11976   0025B2  6F68               	movwf	??_powf& (0+255),b
 11977   0025B4  C068  FFF6         	movff	??_powf,tblptrl
 11978   0025B8                     	if	1	;There is more than 1 active tblptr byte
 11979   0025B8  0E0E               	movlw	high __smallconst
 11980   0025BA  6EF7               	movwf	tblptrh,c
 11981   0025BC                     	endif
 11982   0025BC                     	if	0	;tblptru may be non-zero
 11983   0025BC                     	endif
 11984   0025BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11985   0025BC  0E00               	movlw	low (__smallconst shr (0+16))
 11986   0025BE  6EF8               	movwf	tblptru,c
 11987   0025C0                     	endif
 11988   0025C0  0009               	tblrd		*+
 11989   0025C2  CFF5 F006          	movff	tablat,___fladd@a
 11990   0025C6  0009               	tblrd		*+
 11991   0025C8  CFF5 F007          	movff	tablat,___fladd@a+1
 11992   0025CC  0009               	tblrd		*+
 11993   0025CE  CFF5 F008          	movff	tablat,___fladd@a+2
 11994   0025D2  000A               	tblrd		*-
 11995   0025D4  CFF5 F009          	movff	tablat,___fladd@a+3
 11996   0025D8  C15C  F002         	movff	_powf$3194,___fladd@b
 11997   0025DC  C15D  F003         	movff	_powf$3194+1,___fladd@b+1
 11998   0025E0  C15E  F004         	movff	_powf$3194+2,___fladd@b+2
 11999   0025E4  C15F  F005         	movff	_powf$3194+3,___fladd@b+3
 12000   0025E8  ECE4  F027         	call	___fladd	;wreg free
 12001   0025EC  C002  F108         	movff	?___fladd,_powf$3197
 12002   0025F0  C003  F109         	movff	?___fladd+1,_powf$3197+1
 12003   0025F4  C004  F10A         	movff	?___fladd+2,_powf$3197+2
 12004   0025F8  C005  F10B         	movff	?___fladd+3,_powf$3197+3
 12005   0025FC  C108  F002         	movff	_powf$3197,___fladd@b
 12006   002600  C109  F003         	movff	_powf$3197+1,___fladd@b+1
 12007   002604  C10A  F004         	movff	_powf$3197+2,___fladd@b+2
 12008   002608  C10B  F005         	movff	_powf$3197+3,___fladd@b+3
 12009   00260C  C1B0  F006         	movff	powf@t,___fladd@a
 12010   002610  C1B1  F007         	movff	powf@t+1,___fladd@a+1
 12011   002614  C1B2  F008         	movff	powf@t+2,___fladd@a+2
 12012   002618  C1B3  F009         	movff	powf@t+3,___fladd@a+3
 12013   00261C  ECE4  F027         	call	___fladd	;wreg free
 12014   002620  C002  F18C         	movff	?___fladd,powf@t1
 12015   002624  C003  F18D         	movff	?___fladd+1,powf@t1+1
 12016   002628  C004  F18E         	movff	?___fladd+2,powf@t1+2
 12017   00262C  C005  F18F         	movff	?___fladd+3,powf@t1+3
 12018   002630  C18C  F198         	movff	powf@t1,powf@is
 12019   002634  C18D  F199         	movff	powf@t1+1,powf@is+1
 12020   002638  C18E  F19A         	movff	powf@t1+2,powf@is+2
 12021   00263C  C18F  F19B         	movff	powf@t1+3,powf@is+3
 12022   002640  0E00               	movlw	0
 12023   002642  0101               	movlb	1	; () banked
 12024   002644  1598               	andwf	powf@is& (0+255),w,b
 12025   002646  6F8C               	movwf	powf@t1& (0+255),b
 12026   002648  0EF0               	movlw	240
 12027   00264A  1599               	andwf	(powf@is+1)& (0+255),w,b
 12028   00264C  6F8D               	movwf	(powf@t1+1)& (0+255),b
 12029   00264E  0EFF               	movlw	255
 12030   002650  159A               	andwf	(powf@is+2)& (0+255),w,b
 12031   002652  6F8E               	movwf	(powf@t1+2)& (0+255),b
 12032   002654  0EFF               	movlw	255
 12033   002656  159B               	andwf	(powf@is+3)& (0+255),w,b
 12034   002658  6F8F               	movwf	(powf@t1+3)& (0+255),b
 12035   00265A                     
 12036                           ; BSR set to: 1
 12037   00265A  C1B0  F048         	movff	powf@t,___flsub@a
 12038   00265E  C1B1  F049         	movff	powf@t+1,___flsub@a+1
 12039   002662  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
 12040   002666  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
 12041   00266A  C18C  F044         	movff	powf@t1,___flsub@b
 12042   00266E  C18D  F045         	movff	powf@t1+1,___flsub@b+1
 12043   002672  C18E  F046         	movff	powf@t1+2,___flsub@b+2
 12044   002676  C18F  F047         	movff	powf@t1+3,___flsub@b+3
 12045   00267A  ECBD  F03E         	call	___flsub	;wreg free
 12046   00267E  C044  F19C         	movff	?___flsub,_powf$3190
 12047   002682  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 12048   002686  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 12049   00268A  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 12050   00268E  0101               	movlb	1	; () banked
 12051   002690  51A4               	movf	powf@k& (0+255),w,b
 12052   002692  0D04               	mullw	4
 12053   002694  50F3               	movf	243,w,c
 12054   002696  0F09               	addlw	low _dp_h
 12055   002698  0100               	movlb	0	; () banked
 12056   00269A  6F68               	movwf	??_powf& (0+255),b
 12057   00269C  C068  FFF6         	movff	??_powf,tblptrl
 12058   0026A0                     	if	1	;There is more than 1 active tblptr byte
 12059   0026A0  0E0E               	movlw	high __smallconst
 12060   0026A2  6EF7               	movwf	tblptrh,c
 12061   0026A4                     	endif
 12062   0026A4                     	if	0	;tblptru may be non-zero
 12063   0026A4                     	endif
 12064   0026A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12065   0026A4  0E00               	movlw	low (__smallconst shr (0+16))
 12066   0026A6  6EF8               	movwf	tblptru,c
 12067   0026A8                     	endif
 12068   0026A8  0009               	tblrd		*+
 12069   0026AA  CFF5 F048          	movff	tablat,___flsub@a
 12070   0026AE  0009               	tblrd		*+
 12071   0026B0  CFF5 F049          	movff	tablat,___flsub@a+1
 12072   0026B4  0009               	tblrd		*+
 12073   0026B6  CFF5 F04A          	movff	tablat,___flsub@a+2
 12074   0026BA  000A               	tblrd		*-
 12075   0026BC  CFF5 F04B          	movff	tablat,___flsub@a+3
 12076   0026C0  C19C  F044         	movff	_powf$3190,___flsub@b
 12077   0026C4  C19D  F045         	movff	_powf$3190+1,___flsub@b+1
 12078   0026C8  C19E  F046         	movff	_powf$3190+2,___flsub@b+2
 12079   0026CC  C19F  F047         	movff	_powf$3190+3,___flsub@b+3
 12080   0026D0  ECBD  F03E         	call	___flsub	;wreg free
 12081   0026D4  C044  F140         	movff	?___flsub,_powf$3196
 12082   0026D8  C045  F141         	movff	?___flsub+1,_powf$3196+1
 12083   0026DC  C046  F142         	movff	?___flsub+2,_powf$3196+2
 12084   0026E0  C047  F143         	movff	?___flsub+3,_powf$3196+3
 12085   0026E4  C120  F048         	movff	powf@z_h,___flsub@a
 12086   0026E8  C121  F049         	movff	powf@z_h+1,___flsub@a+1
 12087   0026EC  C122  F04A         	movff	powf@z_h+2,___flsub@a+2
 12088   0026F0  C123  F04B         	movff	powf@z_h+3,___flsub@a+3
 12089   0026F4  C140  F044         	movff	_powf$3196,___flsub@b
 12090   0026F8  C141  F045         	movff	_powf$3196+1,___flsub@b+1
 12091   0026FC  C142  F046         	movff	_powf$3196+2,___flsub@b+2
 12092   002700  C143  F047         	movff	_powf$3196+3,___flsub@b+3
 12093   002704  ECBD  F03E         	call	___flsub	;wreg free
 12094   002708  C044  F10C         	movff	?___flsub,_powf$3198
 12095   00270C  C045  F10D         	movff	?___flsub+1,_powf$3198+1
 12096   002710  C046  F10E         	movff	?___flsub+2,_powf$3198+2
 12097   002714  C047  F10F         	movff	?___flsub+3,_powf$3198+3
 12098   002718  C124  F044         	movff	powf@z_l,___flsub@b
 12099   00271C  C125  F045         	movff	powf@z_l+1,___flsub@b+1
 12100   002720  C126  F046         	movff	powf@z_l+2,___flsub@b+2
 12101   002724  C127  F047         	movff	powf@z_l+3,___flsub@b+3
 12102   002728  C10C  F048         	movff	_powf$3198,___flsub@a
 12103   00272C  C10D  F049         	movff	_powf$3198+1,___flsub@a+1
 12104   002730  C10E  F04A         	movff	_powf$3198+2,___flsub@a+2
 12105   002734  C10F  F04B         	movff	_powf$3198+3,___flsub@a+3
 12106   002738  ECBD  F03E         	call	___flsub	;wreg free
 12107   00273C  C044  F11C         	movff	?___flsub,powf@t2
 12108   002740  C045  F11D         	movff	?___flsub+1,powf@t2+1
 12109   002744  C046  F11E         	movff	?___flsub+2,powf@t2+2
 12110   002748  C047  F11F         	movff	?___flsub+3,powf@t2+3
 12111   00274C                     l8457:
 12112   00274C  C064  F198         	movff	powf@y,powf@is
 12113   002750  C065  F199         	movff	powf@y+1,powf@is+1
 12114   002754  C066  F19A         	movff	powf@y+2,powf@is+2
 12115   002758  C067  F19B         	movff	powf@y+3,powf@is+3
 12116   00275C  0E00               	movlw	0
 12117   00275E  0101               	movlb	1	; () banked
 12118   002760  1598               	andwf	powf@is& (0+255),w,b
 12119   002762  6F2C               	movwf	powf@y1& (0+255),b
 12120   002764  0EF0               	movlw	240
 12121   002766  1599               	andwf	(powf@is+1)& (0+255),w,b
 12122   002768  6F2D               	movwf	(powf@y1+1)& (0+255),b
 12123   00276A  0EFF               	movlw	255
 12124   00276C  159A               	andwf	(powf@is+2)& (0+255),w,b
 12125   00276E  6F2E               	movwf	(powf@y1+2)& (0+255),b
 12126   002770  0EFF               	movlw	255
 12127   002772  159B               	andwf	(powf@is+3)& (0+255),w,b
 12128   002774  6F2F               	movwf	(powf@y1+3)& (0+255),b
 12129   002776                     
 12130                           ; BSR set to: 1
 12131   002776  C18C  F016         	movff	powf@t1,___flmul@a
 12132   00277A  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 12133   00277E  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 12134   002782  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 12135   002786  C12C  F048         	movff	powf@y1,___flsub@a
 12136   00278A  C12D  F049         	movff	powf@y1+1,___flsub@a+1
 12137   00278E  C12E  F04A         	movff	powf@y1+2,___flsub@a+2
 12138   002792  C12F  F04B         	movff	powf@y1+3,___flsub@a+3
 12139   002796  C064  F044         	movff	powf@y,___flsub@b
 12140   00279A  C065  F045         	movff	powf@y+1,___flsub@b+1
 12141   00279E  C066  F046         	movff	powf@y+2,___flsub@b+2
 12142   0027A2  C067  F047         	movff	powf@y+3,___flsub@b+3
 12143   0027A6  ECBD  F03E         	call	___flsub	;wreg free
 12144   0027AA  C044  F012         	movff	?___flsub,___flmul@b
 12145   0027AE  C045  F013         	movff	?___flsub+1,___flmul@b+1
 12146   0027B2  C046  F014         	movff	?___flsub+2,___flmul@b+2
 12147   0027B6  C047  F015         	movff	?___flsub+3,___flmul@b+3
 12148   0027BA  EC44  F02A         	call	___flmul	;wreg free
 12149   0027BE  C012  F110         	movff	?___flmul,_powf$3199
 12150   0027C2  C013  F111         	movff	?___flmul+1,_powf$3199+1
 12151   0027C6  C014  F112         	movff	?___flmul+2,_powf$3199+2
 12152   0027CA  C015  F113         	movff	?___flmul+3,_powf$3199+3
 12153   0027CE  C110  F002         	movff	_powf$3199,___fladd@b
 12154   0027D2  C111  F003         	movff	_powf$3199+1,___fladd@b+1
 12155   0027D6  C112  F004         	movff	_powf$3199+2,___fladd@b+2
 12156   0027DA  C113  F005         	movff	_powf$3199+3,___fladd@b+3
 12157   0027DE  C11C  F016         	movff	powf@t2,___flmul@a
 12158   0027E2  C11D  F017         	movff	powf@t2+1,___flmul@a+1
 12159   0027E6  C11E  F018         	movff	powf@t2+2,___flmul@a+2
 12160   0027EA  C11F  F019         	movff	powf@t2+3,___flmul@a+3
 12161   0027EE  C064  F012         	movff	powf@y,___flmul@b
 12162   0027F2  C065  F013         	movff	powf@y+1,___flmul@b+1
 12163   0027F6  C066  F014         	movff	powf@y+2,___flmul@b+2
 12164   0027FA  C067  F015         	movff	powf@y+3,___flmul@b+3
 12165   0027FE  EC44  F02A         	call	___flmul	;wreg free
 12166   002802  C012  F006         	movff	?___flmul,___fladd@a
 12167   002806  C013  F007         	movff	?___flmul+1,___fladd@a+1
 12168   00280A  C014  F008         	movff	?___flmul+2,___fladd@a+2
 12169   00280E  C015  F009         	movff	?___flmul+3,___fladd@a+3
 12170   002812  ECE4  F027         	call	___fladd	;wreg free
 12171   002816  C002  F16C         	movff	?___fladd,powf@p_l
 12172   00281A  C003  F16D         	movff	?___fladd+1,powf@p_l+1
 12173   00281E  C004  F16E         	movff	?___fladd+2,powf@p_l+2
 12174   002822  C005  F16F         	movff	?___fladd+3,powf@p_l+3
 12175   002826  C12C  F012         	movff	powf@y1,___flmul@b
 12176   00282A  C12D  F013         	movff	powf@y1+1,___flmul@b+1
 12177   00282E  C12E  F014         	movff	powf@y1+2,___flmul@b+2
 12178   002832  C12F  F015         	movff	powf@y1+3,___flmul@b+3
 12179   002836  C18C  F016         	movff	powf@t1,___flmul@a
 12180   00283A  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 12181   00283E  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 12182   002842  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 12183   002846  EC44  F02A         	call	___flmul	;wreg free
 12184   00284A  C012  F1A0         	movff	?___flmul,powf@p_h
 12185   00284E  C013  F1A1         	movff	?___flmul+1,powf@p_h+1
 12186   002852  C014  F1A2         	movff	?___flmul+2,powf@p_h+2
 12187   002856  C015  F1A3         	movff	?___flmul+3,powf@p_h+3
 12188   00285A  C1A0  F002         	movff	powf@p_h,___fladd@b
 12189   00285E  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
 12190   002862  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
 12191   002866  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
 12192   00286A  C16C  F006         	movff	powf@p_l,___fladd@a
 12193   00286E  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
 12194   002872  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
 12195   002876  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
 12196   00287A  ECE4  F027         	call	___fladd	;wreg free
 12197   00287E  C002  F1B4         	movff	?___fladd,powf@z
 12198   002882  C003  F1B5         	movff	?___fladd+1,powf@z+1
 12199   002886  C004  F1B6         	movff	?___fladd+2,powf@z+2
 12200   00288A  C005  F1B7         	movff	?___fladd+3,powf@z+3
 12201   00288E  C1B4  F1A8         	movff	powf@z,powf@j
 12202   002892  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 12203   002896  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 12204   00289A  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 12205   00289E  0101               	movlb	1	; () banked
 12206   0028A0  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 12207   0028A2  EF5F  F014         	goto	u9001
 12208   0028A6  05A8               	decf	powf@j& (0+255),w,b
 12209   0028A8  0E00               	movlw	0
 12210   0028AA  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 12211   0028AC  0E00               	movlw	0
 12212   0028AE  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 12213   0028B0  0E43               	movlw	67
 12214   0028B2  59AB               	subwfb	(powf@j+3)& (0+255),w,b
 12215   0028B4  A0D8               	btfss	status,0,c
 12216   0028B6  EF5F  F014         	goto	u9001
 12217   0028BA  EF61  F014         	goto	u9000
 12218   0028BE                     u9001:
 12219   0028BE  EF63  F014         	goto	l8479
 12220   0028C2                     u9000:
 12221   0028C2  EF07  F00B         	goto	l8279
 12222   0028C6                     l8479:
 12223                           
 12224                           ; BSR set to: 1
 12225   0028C6  0E43               	movlw	67
 12226   0028C8  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 12227   0028CA  11A8               	iorwf	powf@j& (0+255),w,b
 12228   0028CC  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 12229   0028CE  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 12230   0028D0  A4D8               	btfss	status,2,c
 12231   0028D2  EF6D  F014         	goto	u9011
 12232   0028D6  EF6F  F014         	goto	u9010
 12233   0028DA                     u9011:
 12234   0028DA  EFAE  F014         	goto	l8489
 12235   0028DE                     u9010:
 12236   0028DE                     
 12237                           ; BSR set to: 1
 12238   0028DE  C1A0  F048         	movff	powf@p_h,___flsub@a
 12239   0028E2  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 12240   0028E6  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 12241   0028EA  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 12242   0028EE  C1B4  F044         	movff	powf@z,___flsub@b
 12243   0028F2  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 12244   0028F6  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 12245   0028FA  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 12246   0028FE  ECBD  F03E         	call	___flsub	;wreg free
 12247   002902  C044  F04C         	movff	?___flsub,___flge@ff1
 12248   002906  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
 12249   00290A  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
 12250   00290E  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
 12251   002912  0E3C               	movlw	60
 12252   002914  6E06               	movwf	___fladd@a^0,c
 12253   002916  0EAA               	movlw	170
 12254   002918  6E07               	movwf	(___fladd@a+1)^0,c
 12255   00291A  0E38               	movlw	56
 12256   00291C  6E08               	movwf	(___fladd@a+2)^0,c
 12257   00291E  0E33               	movlw	51
 12258   002920  6E09               	movwf	(___fladd@a+3)^0,c
 12259   002922  C16C  F002         	movff	powf@p_l,___fladd@b
 12260   002926  C16D  F003         	movff	powf@p_l+1,___fladd@b+1
 12261   00292A  C16E  F004         	movff	powf@p_l+2,___fladd@b+2
 12262   00292E  C16F  F005         	movff	powf@p_l+3,___fladd@b+3
 12263   002932  ECE4  F027         	call	___fladd	;wreg free
 12264   002936  C002  F050         	movff	?___fladd,___flge@ff2
 12265   00293A  C003  F051         	movff	?___fladd+1,___flge@ff2+1
 12266   00293E  C004  F052         	movff	?___fladd+2,___flge@ff2+2
 12267   002942  C005  F053         	movff	?___fladd+3,___flge@ff2+3
 12268   002946  EC75  F036         	call	___flge	;wreg free
 12269   00294A  B0D8               	btfsc	status,0,c
 12270   00294C  EFAA  F014         	goto	u9021
 12271   002950  EFAC  F014         	goto	u9020
 12272   002954                     u9021:
 12273   002954  EF21  F015         	goto	l8505
 12274   002958                     u9020:
 12275   002958  EF07  F00B         	goto	l8279
 12276   00295C                     l8489:
 12277                           
 12278                           ; BSR set to: 1
 12279   00295C  0EFF               	movlw	255
 12280   00295E  15A8               	andwf	powf@j& (0+255),w,b
 12281   002960  0100               	movlb	0	; () banked
 12282   002962  6F68               	movwf	??_powf& (0+255),b
 12283   002964  0EFF               	movlw	255
 12284   002966  0101               	movlb	1	; () banked
 12285   002968  15A9               	andwf	(powf@j+1)& (0+255),w,b
 12286   00296A  0100               	movlb	0	; () banked
 12287   00296C  6F69               	movwf	(??_powf+1)& (0+255),b
 12288   00296E  0EFF               	movlw	255
 12289   002970  0101               	movlb	1	; () banked
 12290   002972  15AA               	andwf	(powf@j+2)& (0+255),w,b
 12291   002974  0100               	movlb	0	; () banked
 12292   002976  6F6A               	movwf	(??_powf+2)& (0+255),b
 12293   002978  0E7F               	movlw	127
 12294   00297A  0101               	movlb	1	; () banked
 12295   00297C  15AB               	andwf	(powf@j+3)& (0+255),w,b
 12296   00297E  0100               	movlb	0	; () banked
 12297   002980  6F6B               	movwf	(??_powf+3)& (0+255),b
 12298   002982  BF6B               	btfsc	(??_powf+3)& (0+255),7,b
 12299   002984  EFD0  F014         	goto	u9031
 12300   002988  0568               	decf	??_powf& (0+255),w,b
 12301   00298A  0E00               	movlw	0
 12302   00298C  5969               	subwfb	(??_powf+1)& (0+255),w,b
 12303   00298E  0E16               	movlw	22
 12304   002990  596A               	subwfb	(??_powf+2)& (0+255),w,b
 12305   002992  0E43               	movlw	67
 12306   002994  596B               	subwfb	(??_powf+3)& (0+255),w,b
 12307   002996  A0D8               	btfss	status,0,c
 12308   002998  EFD0  F014         	goto	u9031
 12309   00299C  EFD2  F014         	goto	u9030
 12310   0029A0                     u9031:
 12311   0029A0  EFDC  F014         	goto	l8497
 12312   0029A4                     u9030:
 12313   0029A4                     
 12314                           ; BSR set to: 0
 12315   0029A4  0E00               	movlw	0
 12316   0029A6  6F60               	movwf	?_powf& (0+255),b
 12317   0029A8  0E00               	movlw	0
 12318   0029AA  6F61               	movwf	(?_powf+1)& (0+255),b
 12319   0029AC  0E00               	movlw	0
 12320   0029AE  6F62               	movwf	(?_powf+2)& (0+255),b
 12321   0029B0  0E00               	movlw	0
 12322   0029B2  6F63               	movwf	(?_powf+3)& (0+255),b
 12323   0029B4  EFAD  F019         	goto	l1484
 12324   0029B8                     l8497:
 12325                           
 12326                           ; BSR set to: 0
 12327   0029B8  0E16               	movlw	22
 12328   0029BA  0101               	movlb	1	; () banked
 12329   0029BC  19AA               	xorwf	(powf@j+2)& (0+255),w,b
 12330   0029BE  E109               	bnz	u9041
 12331   0029C0  0EC3               	movlw	195
 12332   0029C2  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 12333   0029C4  11A8               	iorwf	powf@j& (0+255),w,b
 12334   0029C6  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 12335   0029C8  A4D8               	btfss	status,2,c
 12336   0029CA  EFE9  F014         	goto	u9041
 12337   0029CE  EFEB  F014         	goto	u9040
 12338   0029D2                     u9041:
 12339   0029D2  EF21  F015         	goto	l8505
 12340   0029D6                     u9040:
 12341   0029D6                     
 12342                           ; BSR set to: 1
 12343   0029D6  C1A0  F048         	movff	powf@p_h,___flsub@a
 12344   0029DA  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 12345   0029DE  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 12346   0029E2  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 12347   0029E6  C1B4  F044         	movff	powf@z,___flsub@b
 12348   0029EA  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 12349   0029EE  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 12350   0029F2  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 12351   0029F6  ECBD  F03E         	call	___flsub	;wreg free
 12352   0029FA  C044  F04C         	movff	?___flsub,___flge@ff1
 12353   0029FE  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
 12354   002A02  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
 12355   002A06  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
 12356   002A0A  C16C  F050         	movff	powf@p_l,___flge@ff2
 12357   002A0E  C16D  F051         	movff	powf@p_l+1,___flge@ff2+1
 12358   002A12  C16E  F052         	movff	powf@p_l+2,___flge@ff2+2
 12359   002A16  C16F  F053         	movff	powf@p_l+3,___flge@ff2+3
 12360   002A1A  EC75  F036         	call	___flge	;wreg free
 12361   002A1E  A0D8               	btfss	status,0,c
 12362   002A20  EF14  F015         	goto	u9051
 12363   002A24  EF16  F015         	goto	u9050
 12364   002A28                     u9051:
 12365   002A28  EF21  F015         	goto	l8505
 12366   002A2C                     u9050:
 12367   002A2C  0E00               	movlw	0
 12368   002A2E  0100               	movlb	0	; () banked
 12369   002A30  6F60               	movwf	?_powf& (0+255),b
 12370   002A32  0E00               	movlw	0
 12371   002A34  6F61               	movwf	(?_powf+1)& (0+255),b
 12372   002A36  0E00               	movlw	0
 12373   002A38  6F62               	movwf	(?_powf+2)& (0+255),b
 12374   002A3A  0E00               	movlw	0
 12375   002A3C  6F63               	movwf	(?_powf+3)& (0+255),b
 12376   002A3E  EFAD  F019         	goto	l1484
 12377   002A42                     l8505:
 12378   002A42  0EFF               	movlw	255
 12379   002A44  0101               	movlb	1	; () banked
 12380   002A46  15A8               	andwf	powf@j& (0+255),w,b
 12381   002A48  6F28               	movwf	powf@i& (0+255),b
 12382   002A4A  0EFF               	movlw	255
 12383   002A4C  15A9               	andwf	(powf@j+1)& (0+255),w,b
 12384   002A4E  6F29               	movwf	(powf@i+1)& (0+255),b
 12385   002A50  0EFF               	movlw	255
 12386   002A52  15AA               	andwf	(powf@j+2)& (0+255),w,b
 12387   002A54  6F2A               	movwf	(powf@i+2)& (0+255),b
 12388   002A56  0E7F               	movlw	127
 12389   002A58  15AB               	andwf	(powf@j+3)& (0+255),w,b
 12390   002A5A  6F2B               	movwf	(powf@i+3)& (0+255),b
 12391   002A5C  0E17               	movlw	23
 12392   002A5E  0100               	movlb	0	; () banked
 12393   002A60  6F68               	movwf	??_powf& (0+255),b
 12394   002A62  C128  F069         	movff	powf@i,??_powf+1
 12395   002A66  C129  F06A         	movff	powf@i+1,??_powf+2
 12396   002A6A  C12A  F06B         	movff	powf@i+2,??_powf+3
 12397   002A6E  C12B  F06C         	movff	powf@i+3,??_powf+4
 12398   002A72                     u9065:
 12399   002A72  6768               	tstfsz	??_powf& (0+255),b
 12400   002A74  EF3E  F015         	goto	u9066
 12401   002A78  EF46  F015         	goto	u9067
 12402   002A7C                     u9066:
 12403   002A7C  356C               	rlcf	(??_powf+4)& (0+255),w,b
 12404   002A7E  336C               	rrcf	(??_powf+4)& (0+255),f,b
 12405   002A80  336B               	rrcf	(??_powf+3)& (0+255),f,b
 12406   002A82  336A               	rrcf	(??_powf+2)& (0+255),f,b
 12407   002A84  3369               	rrcf	(??_powf+1)& (0+255),f,b
 12408   002A86  2F68               	decfsz	??_powf& (0+255),f,b
 12409   002A88  EF39  F015         	goto	u9065
 12410   002A8C                     u9067:
 12411   002A8C  0E81               	movlw	129
 12412   002A8E  0100               	movlb	0	; () banked
 12413   002A90  2569               	addwf	(??_powf+1)& (0+255),w,b
 12414   002A92  0101               	movlb	1	; () banked
 12415   002A94  6FA4               	movwf	powf@k& (0+255),b
 12416   002A96  0EFF               	movlw	255
 12417   002A98  0100               	movlb	0	; () banked
 12418   002A9A  216A               	addwfc	(??_powf+2)& (0+255),w,b
 12419   002A9C  0101               	movlb	1	; () banked
 12420   002A9E  6FA5               	movwf	(powf@k+1)& (0+255),b
 12421   002AA0  0EFF               	movlw	255
 12422   002AA2  0100               	movlb	0	; () banked
 12423   002AA4  216B               	addwfc	(??_powf+3)& (0+255),w,b
 12424   002AA6  0101               	movlb	1	; () banked
 12425   002AA8  6FA6               	movwf	(powf@k+2)& (0+255),b
 12426   002AAA  0EFF               	movlw	255
 12427   002AAC  0100               	movlb	0	; () banked
 12428   002AAE  216C               	addwfc	(??_powf+4)& (0+255),w,b
 12429   002AB0  0101               	movlb	1	; () banked
 12430   002AB2  6FA7               	movwf	(powf@k+3)& (0+255),b
 12431   002AB4                     
 12432                           ; BSR set to: 1
 12433   002AB4  0E00               	movlw	0
 12434   002AB6  6F88               	movwf	powf@n& (0+255),b
 12435   002AB8  0E00               	movlw	0
 12436   002ABA  6F89               	movwf	(powf@n+1)& (0+255),b
 12437   002ABC  0E00               	movlw	0
 12438   002ABE  6F8A               	movwf	(powf@n+2)& (0+255),b
 12439   002AC0  0E00               	movlw	0
 12440   002AC2  6F8B               	movwf	(powf@n+3)& (0+255),b
 12441   002AC4                     
 12442                           ; BSR set to: 1
 12443   002AC4  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
 12444   002AC6  EF71  F015         	goto	u9071
 12445   002ACA  0528               	decf	powf@i& (0+255),w,b
 12446   002ACC  0E00               	movlw	0
 12447   002ACE  5929               	subwfb	(powf@i+1)& (0+255),w,b
 12448   002AD0  0E00               	movlw	0
 12449   002AD2  592A               	subwfb	(powf@i+2)& (0+255),w,b
 12450   002AD4  0E3F               	movlw	63
 12451   002AD6  592B               	subwfb	(powf@i+3)& (0+255),w,b
 12452   002AD8  A0D8               	btfss	status,0,c
 12453   002ADA  EF71  F015         	goto	u9071
 12454   002ADE  EF73  F015         	goto	u9070
 12455   002AE2                     u9071:
 12456   002AE2  EF6F  F016         	goto	l8517
 12457   002AE6                     u9070:
 12458   002AE6                     
 12459                           ; BSR set to: 1
 12460   002AE6  C1A4  F068         	movff	powf@k,??_powf
 12461   002AEA  0E01               	movlw	1
 12462   002AEC  0100               	movlb	0	; () banked
 12463   002AEE  2768               	addwf	??_powf& (0+255),f,b
 12464   002AF0  0E00               	movlw	0
 12465   002AF2  6F69               	movwf	(??_powf+1)& (0+255),b
 12466   002AF4  0E00               	movlw	0
 12467   002AF6  6F6A               	movwf	(??_powf+2)& (0+255),b
 12468   002AF8  0E80               	movlw	128
 12469   002AFA  6F6B               	movwf	(??_powf+3)& (0+255),b
 12470   002AFC  0E00               	movlw	0
 12471   002AFE  6F6C               	movwf	(??_powf+4)& (0+255),b
 12472   002B00                     u9085:
 12473   002B00  6768               	tstfsz	??_powf& (0+255),b
 12474   002B02  EF85  F015         	goto	u9086
 12475   002B06  EF8D  F015         	goto	u9087
 12476   002B0A                     u9086:
 12477   002B0A  356C               	rlcf	(??_powf+4)& (0+255),w,b
 12478   002B0C  336C               	rrcf	(??_powf+4)& (0+255),f,b
 12479   002B0E  336B               	rrcf	(??_powf+3)& (0+255),f,b
 12480   002B10  336A               	rrcf	(??_powf+2)& (0+255),f,b
 12481   002B12  3369               	rrcf	(??_powf+1)& (0+255),f,b
 12482   002B14  2F68               	decfsz	??_powf& (0+255),f,b
 12483   002B16  EF80  F015         	goto	u9085
 12484   002B1A                     u9087:
 12485   002B1A  0101               	movlb	1	; () banked
 12486   002B1C  51A8               	movf	powf@j& (0+255),w,b
 12487   002B1E  0100               	movlb	0	; () banked
 12488   002B20  2569               	addwf	(??_powf+1)& (0+255),w,b
 12489   002B22  0101               	movlb	1	; () banked
 12490   002B24  6F88               	movwf	powf@n& (0+255),b
 12491   002B26  51A9               	movf	(powf@j+1)& (0+255),w,b
 12492   002B28  0100               	movlb	0	; () banked
 12493   002B2A  216A               	addwfc	(??_powf+2)& (0+255),w,b
 12494   002B2C  0101               	movlb	1	; () banked
 12495   002B2E  6F89               	movwf	(powf@n+1)& (0+255),b
 12496   002B30  51AA               	movf	(powf@j+2)& (0+255),w,b
 12497   002B32  0100               	movlb	0	; () banked
 12498   002B34  216B               	addwfc	(??_powf+3)& (0+255),w,b
 12499   002B36  0101               	movlb	1	; () banked
 12500   002B38  6F8A               	movwf	(powf@n+2)& (0+255),b
 12501   002B3A  51AB               	movf	(powf@j+3)& (0+255),w,b
 12502   002B3C  0100               	movlb	0	; () banked
 12503   002B3E  216C               	addwfc	(??_powf+4)& (0+255),w,b
 12504   002B40  0101               	movlb	1	; () banked
 12505   002B42  6F8B               	movwf	(powf@n+3)& (0+255),b
 12506   002B44  0E81               	movlw	129
 12507   002B46  0100               	movlb	0	; () banked
 12508   002B48  6F68               	movwf	??_powf& (0+255),b
 12509   002B4A  0EFF               	movlw	255
 12510   002B4C  6F69               	movwf	(??_powf+1)& (0+255),b
 12511   002B4E  0EFF               	movlw	255
 12512   002B50  6F6A               	movwf	(??_powf+2)& (0+255),b
 12513   002B52  0EFF               	movlw	255
 12514   002B54  6F6B               	movwf	(??_powf+3)& (0+255),b
 12515   002B56  0E17               	movlw	23
 12516   002B58  6F6C               	movwf	(??_powf+4)& (0+255),b
 12517   002B5A  C188  F06D         	movff	powf@n,??_powf+5
 12518   002B5E  C189  F06E         	movff	powf@n+1,??_powf+6
 12519   002B62  C18A  F06F         	movff	powf@n+2,??_powf+7
 12520   002B66  C18B  F070         	movff	powf@n+3,??_powf+8
 12521   002B6A                     u9095:
 12522   002B6A  676C               	tstfsz	(??_powf+4)& (0+255),b
 12523   002B6C  EFBA  F015         	goto	u9096
 12524   002B70  EFC2  F015         	goto	u9097
 12525   002B74                     u9096:
 12526   002B74  3570               	rlcf	(??_powf+8)& (0+255),w,b
 12527   002B76  3370               	rrcf	(??_powf+8)& (0+255),f,b
 12528   002B78  336F               	rrcf	(??_powf+7)& (0+255),f,b
 12529   002B7A  336E               	rrcf	(??_powf+6)& (0+255),f,b
 12530   002B7C  336D               	rrcf	(??_powf+5)& (0+255),f,b
 12531   002B7E  2F6C               	decfsz	(??_powf+4)& (0+255),f,b
 12532   002B80  EFB5  F015         	goto	u9095
 12533   002B84                     u9097:
 12534   002B84  0100               	movlb	0	; () banked
 12535   002B86  516D               	movf	(??_powf+5)& (0+255),w,b
 12536   002B88  2568               	addwf	??_powf& (0+255),w,b
 12537   002B8A  0101               	movlb	1	; () banked
 12538   002B8C  6FA4               	movwf	powf@k& (0+255),b
 12539   002B8E  0E00               	movlw	0
 12540   002B90  0100               	movlb	0	; () banked
 12541   002B92  2169               	addwfc	(??_powf+1)& (0+255),w,b
 12542   002B94  0101               	movlb	1	; () banked
 12543   002B96  6FA5               	movwf	(powf@k+1)& (0+255),b
 12544   002B98  0E00               	movlw	0
 12545   002B9A  0100               	movlb	0	; () banked
 12546   002B9C  216A               	addwfc	(??_powf+2)& (0+255),w,b
 12547   002B9E  0101               	movlb	1	; () banked
 12548   002BA0  6FA6               	movwf	(powf@k+2)& (0+255),b
 12549   002BA2  0E00               	movlw	0
 12550   002BA4  0100               	movlb	0	; () banked
 12551   002BA6  216B               	addwfc	(??_powf+3)& (0+255),w,b
 12552   002BA8  0101               	movlb	1	; () banked
 12553   002BAA  6FA7               	movwf	(powf@k+3)& (0+255),b
 12554   002BAC  C1A4  F068         	movff	powf@k,??_powf
 12555   002BB0  0EFF               	movlw	255
 12556   002BB2  0100               	movlb	0	; () banked
 12557   002BB4  6F69               	movwf	(??_powf+1)& (0+255),b
 12558   002BB6  0EFF               	movlw	255
 12559   002BB8  6F6A               	movwf	(??_powf+2)& (0+255),b
 12560   002BBA  0E7F               	movlw	127
 12561   002BBC  6F6B               	movwf	(??_powf+3)& (0+255),b
 12562   002BBE  0E00               	movlw	0
 12563   002BC0  6F6C               	movwf	(??_powf+4)& (0+255),b
 12564   002BC2                     u9105:
 12565   002BC2  6768               	tstfsz	??_powf& (0+255),b
 12566   002BC4  EFE6  F015         	goto	u9106
 12567   002BC8  EFEE  F015         	goto	u9107
 12568   002BCC                     u9106:
 12569   002BCC  356C               	rlcf	(??_powf+4)& (0+255),w,b
 12570   002BCE  336C               	rrcf	(??_powf+4)& (0+255),f,b
 12571   002BD0  336B               	rrcf	(??_powf+3)& (0+255),f,b
 12572   002BD2  336A               	rrcf	(??_powf+2)& (0+255),f,b
 12573   002BD4  3369               	rrcf	(??_powf+1)& (0+255),f,b
 12574   002BD6  2F68               	decfsz	??_powf& (0+255),f,b
 12575   002BD8  EFE1  F015         	goto	u9105
 12576   002BDC                     u9107:
 12577   002BDC  0100               	movlb	0	; () banked
 12578   002BDE  1D69               	comf	(??_powf+1)& (0+255),w,b
 12579   002BE0  6F6D               	movwf	(??_powf+5)& (0+255),b
 12580   002BE2  1D6A               	comf	(??_powf+2)& (0+255),w,b
 12581   002BE4  6F6E               	movwf	(??_powf+6)& (0+255),b
 12582   002BE6  1D6B               	comf	(??_powf+3)& (0+255),w,b
 12583   002BE8  6F6F               	movwf	(??_powf+7)& (0+255),b
 12584   002BEA  1D6C               	comf	(??_powf+4)& (0+255),w,b
 12585   002BEC  6F70               	movwf	(??_powf+8)& (0+255),b
 12586   002BEE  0101               	movlb	1	; () banked
 12587   002BF0  5188               	movf	powf@n& (0+255),w,b
 12588   002BF2  0100               	movlb	0	; () banked
 12589   002BF4  156D               	andwf	(??_powf+5)& (0+255),w,b
 12590   002BF6  0101               	movlb	1	; () banked
 12591   002BF8  6FB0               	movwf	powf@t& (0+255),b
 12592   002BFA  5189               	movf	(powf@n+1)& (0+255),w,b
 12593   002BFC  0100               	movlb	0	; () banked
 12594   002BFE  156E               	andwf	(??_powf+6)& (0+255),w,b
 12595   002C00  0101               	movlb	1	; () banked
 12596   002C02  6FB1               	movwf	(powf@t+1)& (0+255),b
 12597   002C04  518A               	movf	(powf@n+2)& (0+255),w,b
 12598   002C06  0100               	movlb	0	; () banked
 12599   002C08  156F               	andwf	(??_powf+7)& (0+255),w,b
 12600   002C0A  0101               	movlb	1	; () banked
 12601   002C0C  6FB2               	movwf	(powf@t+2)& (0+255),b
 12602   002C0E  518B               	movf	(powf@n+3)& (0+255),w,b
 12603   002C10  0100               	movlb	0	; () banked
 12604   002C12  1570               	andwf	(??_powf+8)& (0+255),w,b
 12605   002C14  0101               	movlb	1	; () banked
 12606   002C16  6FB3               	movwf	(powf@t+3)& (0+255),b
 12607   002C18  51A4               	movf	powf@k& (0+255),w,b
 12608   002C1A  0817               	sublw	23
 12609   002C1C  0100               	movlb	0	; () banked
 12610   002C1E  6F68               	movwf	??_powf& (0+255),b
 12611   002C20  0EFF               	movlw	255
 12612   002C22  0101               	movlb	1	; () banked
 12613   002C24  1588               	andwf	powf@n& (0+255),w,b
 12614   002C26  0100               	movlb	0	; () banked
 12615   002C28  6F69               	movwf	(??_powf+1)& (0+255),b
 12616   002C2A  0EFF               	movlw	255
 12617   002C2C  0101               	movlb	1	; () banked
 12618   002C2E  1589               	andwf	(powf@n+1)& (0+255),w,b
 12619   002C30  0100               	movlb	0	; () banked
 12620   002C32  6F6A               	movwf	(??_powf+2)& (0+255),b
 12621   002C34  0E7F               	movlw	127
 12622   002C36  0101               	movlb	1	; () banked
 12623   002C38  158A               	andwf	(powf@n+2)& (0+255),w,b
 12624   002C3A  0100               	movlb	0	; () banked
 12625   002C3C  6F6B               	movwf	(??_powf+3)& (0+255),b
 12626   002C3E  0E00               	movlw	0
 12627   002C40  0101               	movlb	1	; () banked
 12628   002C42  158B               	andwf	(powf@n+3)& (0+255),w,b
 12629   002C44  0100               	movlb	0	; () banked
 12630   002C46  6F6C               	movwf	(??_powf+4)& (0+255),b
 12631   002C48  0E00               	movlw	0
 12632   002C4A  1169               	iorwf	(??_powf+1)& (0+255),w,b
 12633   002C4C  6F6D               	movwf	(??_powf+5)& (0+255),b
 12634   002C4E  0E00               	movlw	0
 12635   002C50  116A               	iorwf	(??_powf+2)& (0+255),w,b
 12636   002C52  6F6E               	movwf	(??_powf+6)& (0+255),b
 12637   002C54  0E80               	movlw	128
 12638   002C56  116B               	iorwf	(??_powf+3)& (0+255),w,b
 12639   002C58  6F6F               	movwf	(??_powf+7)& (0+255),b
 12640   002C5A  0E00               	movlw	0
 12641   002C5C  116C               	iorwf	(??_powf+4)& (0+255),w,b
 12642   002C5E  6F70               	movwf	(??_powf+8)& (0+255),b
 12643   002C60                     u9115:
 12644   002C60  6768               	tstfsz	??_powf& (0+255),b
 12645   002C62  EF35  F016         	goto	u9116
 12646   002C66  EF3D  F016         	goto	u9117
 12647   002C6A                     u9116:
 12648   002C6A  3570               	rlcf	(??_powf+8)& (0+255),w,b
 12649   002C6C  3370               	rrcf	(??_powf+8)& (0+255),f,b
 12650   002C6E  336F               	rrcf	(??_powf+7)& (0+255),f,b
 12651   002C70  336E               	rrcf	(??_powf+6)& (0+255),f,b
 12652   002C72  336D               	rrcf	(??_powf+5)& (0+255),f,b
 12653   002C74  2F68               	decfsz	??_powf& (0+255),f,b
 12654   002C76  EF30  F016         	goto	u9115
 12655   002C7A                     u9117:
 12656   002C7A  C06D  F188         	movff	??_powf+5,powf@n
 12657   002C7E  C06E  F189         	movff	??_powf+6,powf@n+1
 12658   002C82  C06F  F18A         	movff	??_powf+7,powf@n+2
 12659   002C86  C070  F18B         	movff	??_powf+8,powf@n+3
 12660   002C8A  0101               	movlb	1	; () banked
 12661   002C8C  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 12662   002C8E  EF4D  F016         	goto	u9120
 12663   002C92  EF4B  F016         	goto	u9121
 12664   002C96                     u9121:
 12665   002C96  EF55  F016         	goto	l8515
 12666   002C9A                     u9120:
 12667   002C9A                     
 12668                           ; BSR set to: 1
 12669   002C9A  1F8B               	comf	(powf@n+3)& (0+255),f,b
 12670   002C9C  1F8A               	comf	(powf@n+2)& (0+255),f,b
 12671   002C9E  1F89               	comf	(powf@n+1)& (0+255),f,b
 12672   002CA0  6D88               	negf	powf@n& (0+255),b
 12673   002CA2  0E00               	movlw	0
 12674   002CA4  2389               	addwfc	(powf@n+1)& (0+255),f,b
 12675   002CA6  238A               	addwfc	(powf@n+2)& (0+255),f,b
 12676   002CA8  238B               	addwfc	(powf@n+3)& (0+255),f,b
 12677   002CAA                     l8515:
 12678                           
 12679                           ; BSR set to: 1
 12680   002CAA  C1A0  F044         	movff	powf@p_h,___flsub@b
 12681   002CAE  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
 12682   002CB2  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
 12683   002CB6  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
 12684   002CBA  C1B0  F048         	movff	powf@t,___flsub@a
 12685   002CBE  C1B1  F049         	movff	powf@t+1,___flsub@a+1
 12686   002CC2  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
 12687   002CC6  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
 12688   002CCA  ECBD  F03E         	call	___flsub	;wreg free
 12689   002CCE  C044  F1A0         	movff	?___flsub,powf@p_h
 12690   002CD2  C045  F1A1         	movff	?___flsub+1,powf@p_h+1
 12691   002CD6  C046  F1A2         	movff	?___flsub+2,powf@p_h+2
 12692   002CDA  C047  F1A3         	movff	?___flsub+3,powf@p_h+3
 12693   002CDE                     l8517:
 12694   002CDE  C1A0  F002         	movff	powf@p_h,___fladd@b
 12695   002CE2  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
 12696   002CE6  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
 12697   002CEA  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
 12698   002CEE  C16C  F006         	movff	powf@p_l,___fladd@a
 12699   002CF2  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
 12700   002CF6  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
 12701   002CFA  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
 12702   002CFE  ECE4  F027         	call	___fladd	;wreg free
 12703   002D02  C002  F1B0         	movff	?___fladd,powf@t
 12704   002D06  C003  F1B1         	movff	?___fladd+1,powf@t+1
 12705   002D0A  C004  F1B2         	movff	?___fladd+2,powf@t+2
 12706   002D0E  C005  F1B3         	movff	?___fladd+3,powf@t+3
 12707   002D12  C1B0  F198         	movff	powf@t,powf@is
 12708   002D16  C1B1  F199         	movff	powf@t+1,powf@is+1
 12709   002D1A  C1B2  F19A         	movff	powf@t+2,powf@is+2
 12710   002D1E  C1B3  F19B         	movff	powf@t+3,powf@is+3
 12711   002D22  0E00               	movlw	0
 12712   002D24  0101               	movlb	1	; () banked
 12713   002D26  1598               	andwf	powf@is& (0+255),w,b
 12714   002D28  6FB0               	movwf	powf@t& (0+255),b
 12715   002D2A  0E80               	movlw	128
 12716   002D2C  1599               	andwf	(powf@is+1)& (0+255),w,b
 12717   002D2E  6FB1               	movwf	(powf@t+1)& (0+255),b
 12718   002D30  0EFF               	movlw	255
 12719   002D32  159A               	andwf	(powf@is+2)& (0+255),w,b
 12720   002D34  6FB2               	movwf	(powf@t+2)& (0+255),b
 12721   002D36  0EFF               	movlw	255
 12722   002D38  159B               	andwf	(powf@is+3)& (0+255),w,b
 12723   002D3A  6FB3               	movwf	(powf@t+3)& (0+255),b
 12724   002D3C                     
 12725                           ; BSR set to: 1
 12726   002D3C  C1B0  F012         	movff	powf@t,___flmul@b
 12727   002D40  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 12728   002D44  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 12729   002D48  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 12730   002D4C  0E00               	movlw	0
 12731   002D4E  6E16               	movwf	___flmul@a^0,c
 12732   002D50  0E72               	movlw	114
 12733   002D52  6E17               	movwf	(___flmul@a+1)^0,c
 12734   002D54  0E31               	movlw	49
 12735   002D56  6E18               	movwf	(___flmul@a+2)^0,c
 12736   002D58  0E3F               	movlw	63
 12737   002D5A  6E19               	movwf	(___flmul@a+3)^0,c
 12738   002D5C  EC44  F02A         	call	___flmul	;wreg free
 12739   002D60  C012  F17C         	movff	?___flmul,powf@u
 12740   002D64  C013  F17D         	movff	?___flmul+1,powf@u+1
 12741   002D68  C014  F17E         	movff	?___flmul+2,powf@u+2
 12742   002D6C  C015  F17F         	movff	?___flmul+3,powf@u+3
 12743   002D70  C1A0  F048         	movff	powf@p_h,___flsub@a
 12744   002D74  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 12745   002D78  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 12746   002D7C  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 12747   002D80  C1B0  F044         	movff	powf@t,___flsub@b
 12748   002D84  C1B1  F045         	movff	powf@t+1,___flsub@b+1
 12749   002D88  C1B2  F046         	movff	powf@t+2,___flsub@b+2
 12750   002D8C  C1B3  F047         	movff	powf@t+3,___flsub@b+3
 12751   002D90  ECBD  F03E         	call	___flsub	;wreg free
 12752   002D94  C044  F19C         	movff	?___flsub,_powf$3190
 12753   002D98  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 12754   002D9C  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 12755   002DA0  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 12756   002DA4  0E18               	movlw	24
 12757   002DA6  6E16               	movwf	___flmul@a^0,c
 12758   002DA8  0E72               	movlw	114
 12759   002DAA  6E17               	movwf	(___flmul@a+1)^0,c
 12760   002DAC  0E31               	movlw	49
 12761   002DAE  6E18               	movwf	(___flmul@a+2)^0,c
 12762   002DB0  0E3F               	movlw	63
 12763   002DB2  6E19               	movwf	(___flmul@a+3)^0,c
 12764   002DB4  C19C  F048         	movff	_powf$3190,___flsub@a
 12765   002DB8  C19D  F049         	movff	_powf$3190+1,___flsub@a+1
 12766   002DBC  C19E  F04A         	movff	_powf$3190+2,___flsub@a+2
 12767   002DC0  C19F  F04B         	movff	_powf$3190+3,___flsub@a+3
 12768   002DC4  C16C  F044         	movff	powf@p_l,___flsub@b
 12769   002DC8  C16D  F045         	movff	powf@p_l+1,___flsub@b+1
 12770   002DCC  C16E  F046         	movff	powf@p_l+2,___flsub@b+2
 12771   002DD0  C16F  F047         	movff	powf@p_l+3,___flsub@b+3
 12772   002DD4  ECBD  F03E         	call	___flsub	;wreg free
 12773   002DD8  C044  F012         	movff	?___flsub,___flmul@b
 12774   002DDC  C045  F013         	movff	?___flsub+1,___flmul@b+1
 12775   002DE0  C046  F014         	movff	?___flsub+2,___flmul@b+2
 12776   002DE4  C047  F015         	movff	?___flsub+3,___flmul@b+3
 12777   002DE8  EC44  F02A         	call	___flmul	;wreg free
 12778   002DEC  C012  F114         	movff	?___flmul,_powf$3200
 12779   002DF0  C013  F115         	movff	?___flmul+1,_powf$3200+1
 12780   002DF4  C014  F116         	movff	?___flmul+2,_powf$3200+2
 12781   002DF8  C015  F117         	movff	?___flmul+3,_powf$3200+3
 12782   002DFC  C114  F002         	movff	_powf$3200,___fladd@b
 12783   002E00  C115  F003         	movff	_powf$3200+1,___fladd@b+1
 12784   002E04  C116  F004         	movff	_powf$3200+2,___fladd@b+2
 12785   002E08  C117  F005         	movff	_powf$3200+3,___fladd@b+3
 12786   002E0C  0E8C               	movlw	140
 12787   002E0E  6E16               	movwf	___flmul@a^0,c
 12788   002E10  0EBE               	movlw	190
 12789   002E12  6E17               	movwf	(___flmul@a+1)^0,c
 12790   002E14  0EBF               	movlw	191
 12791   002E16  6E18               	movwf	(___flmul@a+2)^0,c
 12792   002E18  0E35               	movlw	53
 12793   002E1A  6E19               	movwf	(___flmul@a+3)^0,c
 12794   002E1C  C1B0  F012         	movff	powf@t,___flmul@b
 12795   002E20  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 12796   002E24  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 12797   002E28  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 12798   002E2C  EC44  F02A         	call	___flmul	;wreg free
 12799   002E30  C012  F006         	movff	?___flmul,___fladd@a
 12800   002E34  C013  F007         	movff	?___flmul+1,___fladd@a+1
 12801   002E38  C014  F008         	movff	?___flmul+2,___fladd@a+2
 12802   002E3C  C015  F009         	movff	?___flmul+3,___fladd@a+3
 12803   002E40  ECE4  F027         	call	___fladd	;wreg free
 12804   002E44  C002  F180         	movff	?___fladd,powf@v
 12805   002E48  C003  F181         	movff	?___fladd+1,powf@v+1
 12806   002E4C  C004  F182         	movff	?___fladd+2,powf@v+2
 12807   002E50  C005  F183         	movff	?___fladd+3,powf@v+3
 12808   002E54  C17C  F002         	movff	powf@u,___fladd@b
 12809   002E58  C17D  F003         	movff	powf@u+1,___fladd@b+1
 12810   002E5C  C17E  F004         	movff	powf@u+2,___fladd@b+2
 12811   002E60  C17F  F005         	movff	powf@u+3,___fladd@b+3
 12812   002E64  C180  F006         	movff	powf@v,___fladd@a
 12813   002E68  C181  F007         	movff	powf@v+1,___fladd@a+1
 12814   002E6C  C182  F008         	movff	powf@v+2,___fladd@a+2
 12815   002E70  C183  F009         	movff	powf@v+3,___fladd@a+3
 12816   002E74  ECE4  F027         	call	___fladd	;wreg free
 12817   002E78  C002  F1B4         	movff	?___fladd,powf@z
 12818   002E7C  C003  F1B5         	movff	?___fladd+1,powf@z+1
 12819   002E80  C004  F1B6         	movff	?___fladd+2,powf@z+2
 12820   002E84  C005  F1B7         	movff	?___fladd+3,powf@z+3
 12821   002E88  C17C  F048         	movff	powf@u,___flsub@a
 12822   002E8C  C17D  F049         	movff	powf@u+1,___flsub@a+1
 12823   002E90  C17E  F04A         	movff	powf@u+2,___flsub@a+2
 12824   002E94  C17F  F04B         	movff	powf@u+3,___flsub@a+3
 12825   002E98  C1B4  F044         	movff	powf@z,___flsub@b
 12826   002E9C  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 12827   002EA0  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 12828   002EA4  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 12829   002EA8  ECBD  F03E         	call	___flsub	;wreg free
 12830   002EAC  C044  F19C         	movff	?___flsub,_powf$3190
 12831   002EB0  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 12832   002EB4  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 12833   002EB8  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 12834   002EBC  C180  F044         	movff	powf@v,___flsub@b
 12835   002EC0  C181  F045         	movff	powf@v+1,___flsub@b+1
 12836   002EC4  C182  F046         	movff	powf@v+2,___flsub@b+2
 12837   002EC8  C183  F047         	movff	powf@v+3,___flsub@b+3
 12838   002ECC  C19C  F048         	movff	_powf$3190,___flsub@a
 12839   002ED0  C19D  F049         	movff	_powf$3190+1,___flsub@a+1
 12840   002ED4  C19E  F04A         	movff	_powf$3190+2,___flsub@a+2
 12841   002ED8  C19F  F04B         	movff	_powf$3190+3,___flsub@a+3
 12842   002EDC  ECBD  F03E         	call	___flsub	;wreg free
 12843   002EE0  C044  F144         	movff	?___flsub,powf@w
 12844   002EE4  C045  F145         	movff	?___flsub+1,powf@w+1
 12845   002EE8  C046  F146         	movff	?___flsub+2,powf@w+2
 12846   002EEC  C047  F147         	movff	?___flsub+3,powf@w+3
 12847   002EF0  C1B4  F012         	movff	powf@z,___flmul@b
 12848   002EF4  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 12849   002EF8  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 12850   002EFC  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 12851   002F00  C1B4  F016         	movff	powf@z,___flmul@a
 12852   002F04  C1B5  F017         	movff	powf@z+1,___flmul@a+1
 12853   002F08  C1B6  F018         	movff	powf@z+2,___flmul@a+2
 12854   002F0C  C1B7  F019         	movff	powf@z+3,___flmul@a+3
 12855   002F10  EC44  F02A         	call	___flmul	;wreg free
 12856   002F14  C012  F1B0         	movff	?___flmul,powf@t
 12857   002F18  C013  F1B1         	movff	?___flmul+1,powf@t+1
 12858   002F1C  C014  F1B2         	movff	?___flmul+2,powf@t+2
 12859   002F20  C015  F1B3         	movff	?___flmul+3,powf@t+3
 12860   002F24  0E0E               	movlw	14
 12861   002F26  6E06               	movwf	___fladd@a^0,c
 12862   002F28  0EEA               	movlw	234
 12863   002F2A  6E07               	movwf	(___fladd@a+1)^0,c
 12864   002F2C  0EDD               	movlw	221
 12865   002F2E  6E08               	movwf	(___fladd@a+2)^0,c
 12866   002F30  0EB5               	movlw	181
 12867   002F32  6E09               	movwf	(___fladd@a+3)^0,c
 12868   002F34  0E4C               	movlw	76
 12869   002F36  6E16               	movwf	___flmul@a^0,c
 12870   002F38  0EBB               	movlw	187
 12871   002F3A  6E17               	movwf	(___flmul@a+1)^0,c
 12872   002F3C  0E31               	movlw	49
 12873   002F3E  6E18               	movwf	(___flmul@a+2)^0,c
 12874   002F40  0E33               	movlw	51
 12875   002F42  6E19               	movwf	(___flmul@a+3)^0,c
 12876   002F44  C1B0  F012         	movff	powf@t,___flmul@b
 12877   002F48  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 12878   002F4C  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 12879   002F50  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 12880   002F54  EC44  F02A         	call	___flmul	;wreg free
 12881   002F58  C012  F002         	movff	?___flmul,___fladd@b
 12882   002F5C  C013  F003         	movff	?___flmul+1,___fladd@b+1
 12883   002F60  C014  F004         	movff	?___flmul+2,___fladd@b+2
 12884   002F64  C015  F005         	movff	?___flmul+3,___fladd@b+3
 12885   002F68  ECE4  F027         	call	___fladd	;wreg free
 12886   002F6C  C002  F148         	movff	?___fladd,_powf$3187
 12887   002F70  C003  F149         	movff	?___fladd+1,_powf$3187+1
 12888   002F74  C004  F14A         	movff	?___fladd+2,_powf$3187+2
 12889   002F78  C005  F14B         	movff	?___fladd+3,_powf$3187+3
 12890   002F7C  0E55               	movlw	85
 12891   002F7E  6E06               	movwf	___fladd@a^0,c
 12892   002F80  0EB3               	movlw	179
 12893   002F82  6E07               	movwf	(___fladd@a+1)^0,c
 12894   002F84  0E8A               	movlw	138
 12895   002F86  6E08               	movwf	(___fladd@a+2)^0,c
 12896   002F88  0E38               	movlw	56
 12897   002F8A  6E09               	movwf	(___fladd@a+3)^0,c
 12898   002F8C  C1B0  F016         	movff	powf@t,___flmul@a
 12899   002F90  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 12900   002F94  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 12901   002F98  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 12902   002F9C  C148  F012         	movff	_powf$3187,___flmul@b
 12903   002FA0  C149  F013         	movff	_powf$3187+1,___flmul@b+1
 12904   002FA4  C14A  F014         	movff	_powf$3187+2,___flmul@b+2
 12905   002FA8  C14B  F015         	movff	_powf$3187+3,___flmul@b+3
 12906   002FAC  EC44  F02A         	call	___flmul	;wreg free
 12907   002FB0  C012  F002         	movff	?___flmul,___fladd@b
 12908   002FB4  C013  F003         	movff	?___flmul+1,___fladd@b+1
 12909   002FB8  C014  F004         	movff	?___flmul+2,___fladd@b+2
 12910   002FBC  C015  F005         	movff	?___flmul+3,___fladd@b+3
 12911   002FC0  ECE4  F027         	call	___fladd	;wreg free
 12912   002FC4  C002  F158         	movff	?___fladd,_powf$3188
 12913   002FC8  C003  F159         	movff	?___fladd+1,_powf$3188+1
 12914   002FCC  C004  F15A         	movff	?___fladd+2,_powf$3188+2
 12915   002FD0  C005  F15B         	movff	?___fladd+3,_powf$3188+3
 12916   002FD4  0E61               	movlw	97
 12917   002FD6  6E06               	movwf	___fladd@a^0,c
 12918   002FD8  0E0B               	movlw	11
 12919   002FDA  6E07               	movwf	(___fladd@a+1)^0,c
 12920   002FDC  0E36               	movlw	54
 12921   002FDE  6E08               	movwf	(___fladd@a+2)^0,c
 12922   002FE0  0EBB               	movlw	187
 12923   002FE2  6E09               	movwf	(___fladd@a+3)^0,c
 12924   002FE4  C1B0  F016         	movff	powf@t,___flmul@a
 12925   002FE8  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 12926   002FEC  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 12927   002FF0  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 12928   002FF4  C158  F012         	movff	_powf$3188,___flmul@b
 12929   002FF8  C159  F013         	movff	_powf$3188+1,___flmul@b+1
 12930   002FFC  C15A  F014         	movff	_powf$3188+2,___flmul@b+2
 12931   003000  C15B  F015         	movff	_powf$3188+3,___flmul@b+3
 12932   003004  EC44  F02A         	call	___flmul	;wreg free
 12933   003008  C012  F002         	movff	?___flmul,___fladd@b
 12934   00300C  C013  F003         	movff	?___flmul+1,___fladd@b+1
 12935   003010  C014  F004         	movff	?___flmul+2,___fladd@b+2
 12936   003014  C015  F005         	movff	?___flmul+3,___fladd@b+3
 12937   003018  ECE4  F027         	call	___fladd	;wreg free
 12938   00301C  C002  F14C         	movff	?___fladd,_powf$3189
 12939   003020  C003  F14D         	movff	?___fladd+1,_powf$3189+1
 12940   003024  C004  F14E         	movff	?___fladd+2,_powf$3189+2
 12941   003028  C005  F14F         	movff	?___fladd+3,_powf$3189+3
 12942   00302C  0EAB               	movlw	171
 12943   00302E  6E06               	movwf	___fladd@a^0,c
 12944   003030  0EAA               	movlw	170
 12945   003032  6E07               	movwf	(___fladd@a+1)^0,c
 12946   003034  0E2A               	movlw	42
 12947   003036  6E08               	movwf	(___fladd@a+2)^0,c
 12948   003038  0E3E               	movlw	62
 12949   00303A  6E09               	movwf	(___fladd@a+3)^0,c
 12950   00303C  C1B0  F016         	movff	powf@t,___flmul@a
 12951   003040  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 12952   003044  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 12953   003048  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 12954   00304C  C14C  F012         	movff	_powf$3189,___flmul@b
 12955   003050  C14D  F013         	movff	_powf$3189+1,___flmul@b+1
 12956   003054  C14E  F014         	movff	_powf$3189+2,___flmul@b+2
 12957   003058  C14F  F015         	movff	_powf$3189+3,___flmul@b+3
 12958   00305C  EC44  F02A         	call	___flmul	;wreg free
 12959   003060  C012  F002         	movff	?___flmul,___fladd@b
 12960   003064  C013  F003         	movff	?___flmul+1,___fladd@b+1
 12961   003068  C014  F004         	movff	?___flmul+2,___fladd@b+2
 12962   00306C  C015  F005         	movff	?___flmul+3,___fladd@b+3
 12963   003070  ECE4  F027         	call	___fladd	;wreg free
 12964   003074  C002  F138         	movff	?___fladd,_powf$3191
 12965   003078  C003  F139         	movff	?___fladd+1,_powf$3191+1
 12966   00307C  C004  F13A         	movff	?___fladd+2,_powf$3191+2
 12967   003080  C005  F13B         	movff	?___fladd+3,_powf$3191+3
 12968   003084  C1B4  F044         	movff	powf@z,___flsub@b
 12969   003088  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 12970   00308C  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 12971   003090  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 12972   003094  C1B0  F016         	movff	powf@t,___flmul@a
 12973   003098  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 12974   00309C  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 12975   0030A0  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 12976   0030A4  C138  F012         	movff	_powf$3191,___flmul@b
 12977   0030A8  C139  F013         	movff	_powf$3191+1,___flmul@b+1
 12978   0030AC  C13A  F014         	movff	_powf$3191+2,___flmul@b+2
 12979   0030B0  C13B  F015         	movff	_powf$3191+3,___flmul@b+3
 12980   0030B4  EC44  F02A         	call	___flmul	;wreg free
 12981   0030B8  C012  F048         	movff	?___flmul,___flsub@a
 12982   0030BC  C013  F049         	movff	?___flmul+1,___flsub@a+1
 12983   0030C0  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 12984   0030C4  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 12985   0030C8  ECBD  F03E         	call	___flsub	;wreg free
 12986   0030CC  C044  F18C         	movff	?___flsub,powf@t1
 12987   0030D0  C045  F18D         	movff	?___flsub+1,powf@t1+1
 12988   0030D4  C046  F18E         	movff	?___flsub+2,powf@t1+2
 12989   0030D8  C047  F18F         	movff	?___flsub+3,powf@t1+3
 12990   0030DC  0E00               	movlw	0
 12991   0030DE  6E06               	movwf	___fladd@a^0,c
 12992   0030E0  0E00               	movlw	0
 12993   0030E2  6E07               	movwf	(___fladd@a+1)^0,c
 12994   0030E4  0E00               	movlw	0
 12995   0030E6  6E08               	movwf	(___fladd@a+2)^0,c
 12996   0030E8  0EC0               	movlw	192
 12997   0030EA  6E09               	movwf	(___fladd@a+3)^0,c
 12998   0030EC  C18C  F002         	movff	powf@t1,___fladd@b
 12999   0030F0  C18D  F003         	movff	powf@t1+1,___fladd@b+1
 13000   0030F4  C18E  F004         	movff	powf@t1+2,___fladd@b+2
 13001   0030F8  C18F  F005         	movff	powf@t1+3,___fladd@b+3
 13002   0030FC  ECE4  F027         	call	___fladd	;wreg free
 13003   003100  C002  F02F         	movff	?___fladd,___fldiv@a
 13004   003104  C003  F030         	movff	?___fladd+1,___fldiv@a+1
 13005   003108  C004  F031         	movff	?___fladd+2,___fldiv@a+2
 13006   00310C  C005  F032         	movff	?___fladd+3,___fldiv@a+3
 13007   003110  C18C  F016         	movff	powf@t1,___flmul@a
 13008   003114  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 13009   003118  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 13010   00311C  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 13011   003120  C1B4  F012         	movff	powf@z,___flmul@b
 13012   003124  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 13013   003128  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 13014   00312C  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 13015   003130  EC44  F02A         	call	___flmul	;wreg free
 13016   003134  C012  F02B         	movff	?___flmul,___fldiv@b
 13017   003138  C013  F02C         	movff	?___flmul+1,___fldiv@b+1
 13018   00313C  C014  F02D         	movff	?___flmul+2,___fldiv@b+2
 13019   003140  C015  F02E         	movff	?___flmul+3,___fldiv@b+3
 13020   003144  EC48  F02E         	call	___fldiv	;wreg free
 13021   003148  C02B  F13C         	movff	?___fldiv,_powf$3195
 13022   00314C  C02C  F13D         	movff	?___fldiv+1,_powf$3195+1
 13023   003150  C02D  F13E         	movff	?___fldiv+2,_powf$3195+2
 13024   003154  C02E  F13F         	movff	?___fldiv+3,_powf$3195+3
 13025   003158  C144  F006         	movff	powf@w,___fladd@a
 13026   00315C  C145  F007         	movff	powf@w+1,___fladd@a+1
 13027   003160  C146  F008         	movff	powf@w+2,___fladd@a+2
 13028   003164  C147  F009         	movff	powf@w+3,___fladd@a+3
 13029   003168  C144  F016         	movff	powf@w,___flmul@a
 13030   00316C  C145  F017         	movff	powf@w+1,___flmul@a+1
 13031   003170  C146  F018         	movff	powf@w+2,___flmul@a+2
 13032   003174  C147  F019         	movff	powf@w+3,___flmul@a+3
 13033   003178  C1B4  F012         	movff	powf@z,___flmul@b
 13034   00317C  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 13035   003180  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 13036   003184  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 13037   003188  EC44  F02A         	call	___flmul	;wreg free
 13038   00318C  C012  F002         	movff	?___flmul,___fladd@b
 13039   003190  C013  F003         	movff	?___flmul+1,___fladd@b+1
 13040   003194  C014  F004         	movff	?___flmul+2,___fladd@b+2
 13041   003198  C015  F005         	movff	?___flmul+3,___fladd@b+3
 13042   00319C  ECE4  F027         	call	___fladd	;wreg free
 13043   0031A0  C002  F118         	movff	?___fladd,_powf$3201
 13044   0031A4  C003  F119         	movff	?___fladd+1,_powf$3201+1
 13045   0031A8  C004  F11A         	movff	?___fladd+2,_powf$3201+2
 13046   0031AC  C005  F11B         	movff	?___fladd+3,_powf$3201+3
 13047   0031B0  C13C  F044         	movff	_powf$3195,___flsub@b
 13048   0031B4  C13D  F045         	movff	_powf$3195+1,___flsub@b+1
 13049   0031B8  C13E  F046         	movff	_powf$3195+2,___flsub@b+2
 13050   0031BC  C13F  F047         	movff	_powf$3195+3,___flsub@b+3
 13051   0031C0  C118  F048         	movff	_powf$3201,___flsub@a
 13052   0031C4  C119  F049         	movff	_powf$3201+1,___flsub@a+1
 13053   0031C8  C11A  F04A         	movff	_powf$3201+2,___flsub@a+2
 13054   0031CC  C11B  F04B         	movff	_powf$3201+3,___flsub@a+3
 13055   0031D0  ECBD  F03E         	call	___flsub	;wreg free
 13056   0031D4  C044  F150         	movff	?___flsub,powf@r
 13057   0031D8  C045  F151         	movff	?___flsub+1,powf@r+1
 13058   0031DC  C046  F152         	movff	?___flsub+2,powf@r+2
 13059   0031E0  C047  F153         	movff	?___flsub+3,powf@r+3
 13060   0031E4  C1B4  F048         	movff	powf@z,___flsub@a
 13061   0031E8  C1B5  F049         	movff	powf@z+1,___flsub@a+1
 13062   0031EC  C1B6  F04A         	movff	powf@z+2,___flsub@a+2
 13063   0031F0  C1B7  F04B         	movff	powf@z+3,___flsub@a+3
 13064   0031F4  C150  F044         	movff	powf@r,___flsub@b
 13065   0031F8  C151  F045         	movff	powf@r+1,___flsub@b+1
 13066   0031FC  C152  F046         	movff	powf@r+2,___flsub@b+2
 13067   003200  C153  F047         	movff	powf@r+3,___flsub@b+3
 13068   003204  ECBD  F03E         	call	___flsub	;wreg free
 13069   003208  C044  F19C         	movff	?___flsub,_powf$3190
 13070   00320C  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 13071   003210  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 13072   003214  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 13073   003218  0E00               	movlw	0
 13074   00321A  6E44               	movwf	___flsub@b^0,c
 13075   00321C  0E00               	movlw	0
 13076   00321E  6E45               	movwf	(___flsub@b+1)^0,c
 13077   003220  0E80               	movlw	128
 13078   003222  6E46               	movwf	(___flsub@b+2)^0,c
 13079   003224  0E3F               	movlw	63
 13080   003226  6E47               	movwf	(___flsub@b+3)^0,c
 13081   003228  C19C  F048         	movff	_powf$3190,___flsub@a
 13082   00322C  C19D  F049         	movff	_powf$3190+1,___flsub@a+1
 13083   003230  C19E  F04A         	movff	_powf$3190+2,___flsub@a+2
 13084   003234  C19F  F04B         	movff	_powf$3190+3,___flsub@a+3
 13085   003238  ECBD  F03E         	call	___flsub	;wreg free
 13086   00323C  C044  F1B4         	movff	?___flsub,powf@z
 13087   003240  C045  F1B5         	movff	?___flsub+1,powf@z+1
 13088   003244  C046  F1B6         	movff	?___flsub+2,powf@z+2
 13089   003248  C047  F1B7         	movff	?___flsub+3,powf@z+3
 13090   00324C  C1B4  F1A8         	movff	powf@z,powf@j
 13091   003250  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 13092   003254  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 13093   003258  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 13094   00325C  C188  F068         	movff	powf@n,??_powf
 13095   003260  C189  F069         	movff	powf@n+1,??_powf+1
 13096   003264  C18A  F06A         	movff	powf@n+2,??_powf+2
 13097   003268  C18B  F06B         	movff	powf@n+3,??_powf+3
 13098   00326C  0E17               	movlw	23
 13099   00326E                     u9135:
 13100   00326E  90D8               	bcf	status,0,c
 13101   003270  0100               	movlb	0	; () banked
 13102   003272  3768               	rlcf	??_powf& (0+255),f,b
 13103   003274  3769               	rlcf	(??_powf+1)& (0+255),f,b
 13104   003276  376A               	rlcf	(??_powf+2)& (0+255),f,b
 13105   003278  376B               	rlcf	(??_powf+3)& (0+255),f,b
 13106   00327A  2EE8               	decfsz	wreg,f,c
 13107   00327C  EF37  F019         	goto	u9135
 13108   003280  5168               	movf	??_powf& (0+255),w,b
 13109   003282  0101               	movlb	1	; () banked
 13110   003284  27A8               	addwf	powf@j& (0+255),f,b
 13111   003286  0100               	movlb	0	; () banked
 13112   003288  5169               	movf	(??_powf+1)& (0+255),w,b
 13113   00328A  0101               	movlb	1	; () banked
 13114   00328C  23A9               	addwfc	(powf@j+1)& (0+255),f,b
 13115   00328E  0100               	movlb	0	; () banked
 13116   003290  516A               	movf	(??_powf+2)& (0+255),w,b
 13117   003292  0101               	movlb	1	; () banked
 13118   003294  23AA               	addwfc	(powf@j+2)& (0+255),f,b
 13119   003296  0100               	movlb	0	; () banked
 13120   003298  516B               	movf	(??_powf+3)& (0+255),w,b
 13121   00329A  0101               	movlb	1	; () banked
 13122   00329C  23AB               	addwfc	(powf@j+3)& (0+255),f,b
 13123   00329E                     
 13124                           ; BSR set to: 1
 13125   00329E  0E17               	movlw	23
 13126   0032A0  0100               	movlb	0	; () banked
 13127   0032A2  6F68               	movwf	??_powf& (0+255),b
 13128   0032A4  C1A8  F069         	movff	powf@j,??_powf+1
 13129   0032A8  C1A9  F06A         	movff	powf@j+1,??_powf+2
 13130   0032AC  C1AA  F06B         	movff	powf@j+2,??_powf+3
 13131   0032B0  C1AB  F06C         	movff	powf@j+3,??_powf+4
 13132   0032B4                     u9145:
 13133   0032B4  6768               	tstfsz	??_powf& (0+255),b
 13134   0032B6  EF5F  F019         	goto	u9146
 13135   0032BA  EF67  F019         	goto	u9147
 13136   0032BE                     u9146:
 13137   0032BE  356C               	rlcf	(??_powf+4)& (0+255),w,b
 13138   0032C0  336C               	rrcf	(??_powf+4)& (0+255),f,b
 13139   0032C2  336B               	rrcf	(??_powf+3)& (0+255),f,b
 13140   0032C4  336A               	rrcf	(??_powf+2)& (0+255),f,b
 13141   0032C6  3369               	rrcf	(??_powf+1)& (0+255),f,b
 13142   0032C8  2F68               	decfsz	??_powf& (0+255),f,b
 13143   0032CA  EF5A  F019         	goto	u9145
 13144   0032CE                     u9147:
 13145   0032CE  0100               	movlb	0	; () banked
 13146   0032D0  BF6C               	btfsc	(??_powf+4)& (0+255),7,b
 13147   0032D2  EF77  F019         	goto	u9150
 13148   0032D6  516C               	movf	(??_powf+4)& (0+255),w,b
 13149   0032D8  116B               	iorwf	(??_powf+3)& (0+255),w,b
 13150   0032DA  116A               	iorwf	(??_powf+2)& (0+255),w,b
 13151   0032DC  E106               	bnz	u9151
 13152   0032DE  0569               	decf	(??_powf+1)& (0+255),w,b
 13153   0032E0  B0D8               	btfsc	status,0,c
 13154   0032E2  EF75  F019         	goto	u9151
 13155   0032E6  EF77  F019         	goto	u9150
 13156   0032EA                     u9151:
 13157   0032EA  EF8F  F019         	goto	l1550
 13158   0032EE                     u9150:
 13159   0032EE                     
 13160                           ; BSR set to: 0
 13161   0032EE  C1B4  F02B         	movff	powf@z,scalbnf@x
 13162   0032F2  C1B5  F02C         	movff	powf@z+1,scalbnf@x+1
 13163   0032F6  C1B6  F02D         	movff	powf@z+2,scalbnf@x+2
 13164   0032FA  C1B7  F02E         	movff	powf@z+3,scalbnf@x+3
 13165   0032FE  C188  F02F         	movff	powf@n,scalbnf@n
 13166   003302  C189  F030         	movff	powf@n+1,scalbnf@n+1
 13167   003306  ECBC  F031         	call	_scalbnf	;wreg free
 13168   00330A  C02B  F1B4         	movff	?_scalbnf,powf@z
 13169   00330E  C02C  F1B5         	movff	?_scalbnf+1,powf@z+1
 13170   003312  C02D  F1B6         	movff	?_scalbnf+2,powf@z+2
 13171   003316  C02E  F1B7         	movff	?_scalbnf+3,powf@z+3
 13172   00331A  EF97  F019         	goto	l8567
 13173   00331E                     l1550:
 13174                           
 13175                           ; BSR set to: 0
 13176   00331E  C1A8  F1B4         	movff	powf@j,powf@z
 13177   003322  C1A9  F1B5         	movff	powf@j+1,powf@z+1
 13178   003326  C1AA  F1B6         	movff	powf@j+2,powf@z+2
 13179   00332A  C1AB  F1B7         	movff	powf@j+3,powf@z+3
 13180   00332E                     l8567:
 13181   00332E  0101               	movlb	1	; () banked
 13182   003330  51B4               	movf	powf@z& (0+255),w,b
 13183   003332  11B5               	iorwf	(powf@z+1)& (0+255),w,b
 13184   003334  11B6               	iorwf	(powf@z+2)& (0+255),w,b
 13185   003336  11B7               	iorwf	(powf@z+3)& (0+255),w,b
 13186   003338  B4D8               	btfsc	status,2,c
 13187   00333A  EFA1  F019         	goto	u9161
 13188   00333E  EFA3  F019         	goto	u9160
 13189   003342                     u9161:
 13190   003342  EFA4  F00A         	goto	l8253
 13191   003346                     u9160:
 13192   003346                     
 13193                           ; BSR set to: 1
 13194   003346  5164               	movf	powf@sn& (0+255),w,b
 13195   003348  1BB4               	xorwf	powf@z& (0+255),f,b
 13196   00334A  5165               	movf	(powf@sn+1)& (0+255),w,b
 13197   00334C  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
 13198   00334E  5166               	movf	(powf@sn+2)& (0+255),w,b
 13199   003350  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
 13200   003352  5167               	movf	(powf@sn+3)& (0+255),w,b
 13201   003354  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
 13202   003356  EFA4  F00A         	goto	l8253
 13203   00335A                     l1484:
 13204   00335A  0012               	return		;funcret
 13205   00335C                     __end_of_powf:
 13206                           	callstack 0
 13207                           
 13208 ;; *************** function _sqrtf *****************
 13209 ;; Defined at:
 13210 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sqrtf.c"
 13211 ;; Parameters:    Size  Location     Type
 13212 ;;  x               4   17[COMRAM] float 
 13213 ;; Auto vars:     Size  Location     Type
 13214 ;;  ix              4   50[COMRAM] struct .
 13215 ;;  r               4   46[COMRAM] unsigned long 
 13216 ;;  m               4   42[COMRAM] long 
 13217 ;;  t               4   38[COMRAM] long 
 13218 ;;  q               4   34[COMRAM] long 
 13219 ;;  i               4   30[COMRAM] long 
 13220 ;;  s               4   26[COMRAM] long 
 13221 ;;  z               4    0        float 
 13222 ;; Return value:  Size  Location     Type
 13223 ;;                  4   17[COMRAM] float 
 13224 ;; Registers used:
 13225 ;;		wreg, status,2, status,0
 13226 ;; Tracked objects:
 13227 ;;		On entry : 0/0
 13228 ;;		On exit  : 0/0
 13229 ;;		Unchanged: 0/0
 13230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13232 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13233 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13234 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13235 ;;Total ram usage:       37 bytes
 13236 ;; Hardware stack levels used: 1
 13237 ;; Hardware stack levels required when called: 2
 13238 ;; This function calls:
 13239 ;;		Nothing
 13240 ;; This function is called by:
 13241 ;;		_decide_action
 13242 ;;		_powf
 13243 ;; This function uses a non-reentrant model
 13244 ;;
 13245                           
 13246                           	psect	text39
 13247   0058B2                     __ptext39:
 13248                           	callstack 0
 13249   0058B2                     _sqrtf:
 13250                           	callstack 27
 13251   0058B2  C012  F033         	movff	sqrtf@x,sqrtf@ix
 13252   0058B6  C013  F034         	movff	sqrtf@x+1,sqrtf@ix+1
 13253   0058BA  C014  F035         	movff	sqrtf@x+2,sqrtf@ix+2
 13254   0058BE  C015  F036         	movff	sqrtf@x+3,sqrtf@ix+3
 13255   0058C2  0E00               	movlw	0
 13256   0058C4  1433               	andwf	sqrtf@ix^0,w,c
 13257   0058C6  6E16               	movwf	??_sqrtf^0,c
 13258   0058C8  0E00               	movlw	0
 13259   0058CA  1434               	andwf	(sqrtf@ix+1)^0,w,c
 13260   0058CC  6E17               	movwf	(??_sqrtf+1)^0,c
 13261   0058CE  0E80               	movlw	128
 13262   0058D0  1435               	andwf	(sqrtf@ix+2)^0,w,c
 13263   0058D2  6E18               	movwf	(??_sqrtf+2)^0,c
 13264   0058D4  0E7F               	movlw	127
 13265   0058D6  1436               	andwf	(sqrtf@ix+3)^0,w,c
 13266   0058D8  6E19               	movwf	(??_sqrtf+3)^0,c
 13267   0058DA  0E80               	movlw	128
 13268   0058DC  1818               	xorwf	(??_sqrtf+2)^0,w,c
 13269   0058DE  E109               	bnz	u5221
 13270   0058E0  0E7F               	movlw	127
 13271   0058E2  1819               	xorwf	(??_sqrtf+3)^0,w,c
 13272   0058E4  1016               	iorwf	??_sqrtf^0,w,c
 13273   0058E6  1017               	iorwf	(??_sqrtf+1)^0,w,c
 13274   0058E8  A4D8               	btfss	status,2,c
 13275   0058EA  EF79  F02C         	goto	u5221
 13276   0058EE  EF7B  F02C         	goto	u5220
 13277   0058F2                     u5221:
 13278   0058F2  EFAB  F02C         	goto	l5453
 13279   0058F6                     u5220:
 13280   0058F6  0EFF               	movlw	255
 13281   0058F8  1433               	andwf	sqrtf@ix^0,w,c
 13282   0058FA  6E16               	movwf	??_sqrtf^0,c
 13283   0058FC  0EFF               	movlw	255
 13284   0058FE  1434               	andwf	(sqrtf@ix+1)^0,w,c
 13285   005900  6E17               	movwf	(??_sqrtf+1)^0,c
 13286   005902  0E7F               	movlw	127
 13287   005904  1435               	andwf	(sqrtf@ix+2)^0,w,c
 13288   005906  6E18               	movwf	(??_sqrtf+2)^0,c
 13289   005908  0E00               	movlw	0
 13290   00590A  1436               	andwf	(sqrtf@ix+3)^0,w,c
 13291   00590C  6E19               	movwf	(??_sqrtf+3)^0,c
 13292   00590E  5016               	movf	??_sqrtf^0,w,c
 13293   005910  1017               	iorwf	(??_sqrtf+1)^0,w,c
 13294   005912  1018               	iorwf	(??_sqrtf+2)^0,w,c
 13295   005914  1019               	iorwf	(??_sqrtf+3)^0,w,c
 13296   005916  A4D8               	btfss	status,2,c
 13297   005918  EF90  F02C         	goto	u5231
 13298   00591C  EF92  F02C         	goto	u5230
 13299   005920                     u5231:
 13300   005920  EF99  F02C         	goto	l5447
 13301   005924                     u5230:
 13302   005924  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 13303   005926  EF99  F02C         	goto	u5240
 13304   00592A  EF97  F02C         	goto	u5241
 13305   00592E                     u5241:
 13306   00592E  EFA1  F02C         	goto	l5449
 13307   005932                     u5240:
 13308   005932                     l5447:
 13309   005932  0EFF               	movlw	255
 13310   005934  1233               	iorwf	sqrtf@ix^0,f,c
 13311   005936  0EFF               	movlw	255
 13312   005938  1234               	iorwf	(sqrtf@ix+1)^0,f,c
 13313   00593A  0E7F               	movlw	127
 13314   00593C  1235               	iorwf	(sqrtf@ix+2)^0,f,c
 13315   00593E  0E00               	movlw	0
 13316   005940  1236               	iorwf	(sqrtf@ix+3)^0,f,c
 13317   005942                     l5449:
 13318   005942  C033  F012         	movff	sqrtf@ix,?_sqrtf
 13319   005946  C034  F013         	movff	sqrtf@ix+1,?_sqrtf+1
 13320   00594A  C035  F014         	movff	sqrtf@ix+2,?_sqrtf+2
 13321   00594E  C036  F015         	movff	sqrtf@ix+3,?_sqrtf+3
 13322   005952  EF47  F02E         	goto	l1576
 13323   005956                     l5453:
 13324   005956  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 13325   005958  EFBA  F02C         	goto	u5250
 13326   00595C  5036               	movf	(sqrtf@ix+3)^0,w,c
 13327   00595E  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 13328   005960  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 13329   005962  E106               	bnz	u5251
 13330   005964  0433               	decf	sqrtf@ix^0,w,c
 13331   005966  B0D8               	btfsc	status,0,c
 13332   005968  EFB8  F02C         	goto	u5251
 13333   00596C  EFBA  F02C         	goto	u5250
 13334   005970                     u5251:
 13335   005970  EFF1  F02C         	goto	l5469
 13336   005974                     u5250:
 13337   005974  0EFF               	movlw	255
 13338   005976  1433               	andwf	sqrtf@ix^0,w,c
 13339   005978  6E16               	movwf	??_sqrtf^0,c
 13340   00597A  0EFF               	movlw	255
 13341   00597C  1434               	andwf	(sqrtf@ix+1)^0,w,c
 13342   00597E  6E17               	movwf	(??_sqrtf+1)^0,c
 13343   005980  0EFF               	movlw	255
 13344   005982  1435               	andwf	(sqrtf@ix+2)^0,w,c
 13345   005984  6E18               	movwf	(??_sqrtf+2)^0,c
 13346   005986  0E7F               	movlw	127
 13347   005988  1436               	andwf	(sqrtf@ix+3)^0,w,c
 13348   00598A  6E19               	movwf	(??_sqrtf+3)^0,c
 13349   00598C  5016               	movf	??_sqrtf^0,w,c
 13350   00598E  1017               	iorwf	(??_sqrtf+1)^0,w,c
 13351   005990  1018               	iorwf	(??_sqrtf+2)^0,w,c
 13352   005992  1019               	iorwf	(??_sqrtf+3)^0,w,c
 13353   005994  A4D8               	btfss	status,2,c
 13354   005996  EFCF  F02C         	goto	u5261
 13355   00599A  EFD1  F02C         	goto	u5260
 13356   00599E                     u5261:
 13357   00599E  EFDB  F02C         	goto	l5461
 13358   0059A2                     u5260:
 13359   0059A2  0E00               	movlw	0
 13360   0059A4  6E12               	movwf	?_sqrtf^0,c
 13361   0059A6  0E00               	movlw	0
 13362   0059A8  6E13               	movwf	(?_sqrtf+1)^0,c
 13363   0059AA  0E00               	movlw	0
 13364   0059AC  6E14               	movwf	(?_sqrtf+2)^0,c
 13365   0059AE  0E00               	movlw	0
 13366   0059B0  6E15               	movwf	(?_sqrtf+3)^0,c
 13367   0059B2  EF47  F02E         	goto	l1576
 13368   0059B6                     l5461:
 13369   0059B6  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 13370   0059B8  EFE2  F02C         	goto	u5270
 13371   0059BC  EFE0  F02C         	goto	u5271
 13372   0059C0                     u5271:
 13373   0059C0  EFF1  F02C         	goto	l5469
 13374   0059C4                     u5270:
 13375   0059C4  0E00               	movlw	0
 13376   0059C6  0100               	movlb	0	; () banked
 13377   0059C8  6FD8               	movwf	(_errno+1)& (0+255),b
 13378   0059CA  0E21               	movlw	33
 13379   0059CC  6FD7               	movwf	_errno& (0+255),b
 13380   0059CE  0EFF               	movlw	255
 13381   0059D0  6E33               	movwf	sqrtf@ix^0,c
 13382   0059D2  0EFF               	movlw	255
 13383   0059D4  6E34               	movwf	(sqrtf@ix+1)^0,c
 13384   0059D6  0EFF               	movlw	255
 13385   0059D8  6E35               	movwf	(sqrtf@ix+2)^0,c
 13386   0059DA  0E7F               	movlw	127
 13387   0059DC  6E36               	movwf	(sqrtf@ix+3)^0,c
 13388   0059DE  EFA1  F02C         	goto	l5449
 13389   0059E2                     l5469:
 13390   0059E2  0E17               	movlw	23
 13391   0059E4  6E16               	movwf	??_sqrtf^0,c
 13392   0059E6  C033  F017         	movff	sqrtf@ix,??_sqrtf+1
 13393   0059EA  C034  F018         	movff	sqrtf@ix+1,??_sqrtf+2
 13394   0059EE  C035  F019         	movff	sqrtf@ix+2,??_sqrtf+3
 13395   0059F2  C036  F01A         	movff	sqrtf@ix+3,??_sqrtf+4
 13396   0059F6                     u5285:
 13397   0059F6  6616               	tstfsz	??_sqrtf^0,c
 13398   0059F8  EF00  F02D         	goto	u5286
 13399   0059FC  EF08  F02D         	goto	u5287
 13400   005A00                     u5286:
 13401   005A00  341A               	rlcf	(??_sqrtf+4)^0,w,c
 13402   005A02  321A               	rrcf	(??_sqrtf+4)^0,f,c
 13403   005A04  3219               	rrcf	(??_sqrtf+3)^0,f,c
 13404   005A06  3218               	rrcf	(??_sqrtf+2)^0,f,c
 13405   005A08  3217               	rrcf	(??_sqrtf+1)^0,f,c
 13406   005A0A  2E16               	decfsz	??_sqrtf^0,f,c
 13407   005A0C  EFFB  F02C         	goto	u5285
 13408   005A10                     u5287:
 13409   005A10  C017  F02B         	movff	??_sqrtf+1,sqrtf@m
 13410   005A14  C018  F02C         	movff	??_sqrtf+2,sqrtf@m+1
 13411   005A18  C019  F02D         	movff	??_sqrtf+3,sqrtf@m+2
 13412   005A1C  C01A  F02E         	movff	??_sqrtf+4,sqrtf@m+3
 13413   005A20  502B               	movf	sqrtf@m^0,w,c
 13414   005A22  102C               	iorwf	(sqrtf@m+1)^0,w,c
 13415   005A24  102D               	iorwf	(sqrtf@m+2)^0,w,c
 13416   005A26  102E               	iorwf	(sqrtf@m+3)^0,w,c
 13417   005A28  A4D8               	btfss	status,2,c
 13418   005A2A  EF19  F02D         	goto	u5291
 13419   005A2E  EF1B  F02D         	goto	u5290
 13420   005A32                     u5291:
 13421   005A32  EF4B  F02D         	goto	l1580
 13422   005A36                     u5290:
 13423   005A36  0E00               	movlw	0
 13424   005A38  6E1F               	movwf	sqrtf@i^0,c
 13425   005A3A  0E00               	movlw	0
 13426   005A3C  6E20               	movwf	(sqrtf@i+1)^0,c
 13427   005A3E  0E00               	movlw	0
 13428   005A40  6E21               	movwf	(sqrtf@i+2)^0,c
 13429   005A42  0E00               	movlw	0
 13430   005A44  6E22               	movwf	(sqrtf@i+3)^0,c
 13431   005A46  EF30  F02D         	goto	l5477
 13432   005A4A                     l5473:
 13433   005A4A  90D8               	bcf	status,0,c
 13434   005A4C  3633               	rlcf	sqrtf@ix^0,f,c
 13435   005A4E  3634               	rlcf	(sqrtf@ix+1)^0,f,c
 13436   005A50  3635               	rlcf	(sqrtf@ix+2)^0,f,c
 13437   005A52  3636               	rlcf	(sqrtf@ix+3)^0,f,c
 13438   005A54  0E01               	movlw	1
 13439   005A56  261F               	addwf	sqrtf@i^0,f,c
 13440   005A58  0E00               	movlw	0
 13441   005A5A  2220               	addwfc	(sqrtf@i+1)^0,f,c
 13442   005A5C  2221               	addwfc	(sqrtf@i+2)^0,f,c
 13443   005A5E  2222               	addwfc	(sqrtf@i+3)^0,f,c
 13444   005A60                     l5477:
 13445   005A60  AE35               	btfss	(sqrtf@ix+2)^0,7,c
 13446   005A62  EF35  F02D         	goto	u5301
 13447   005A66  EF37  F02D         	goto	u5300
 13448   005A6A                     u5301:
 13449   005A6A  EF25  F02D         	goto	l5473
 13450   005A6E                     u5300:
 13451   005A6E  0EFF               	movlw	255
 13452   005A70  241F               	addwf	sqrtf@i^0,w,c
 13453   005A72  6E16               	movwf	??_sqrtf^0,c
 13454   005A74  0EFF               	movlw	255
 13455   005A76  2020               	addwfc	(sqrtf@i+1)^0,w,c
 13456   005A78  6E17               	movwf	(??_sqrtf+1)^0,c
 13457   005A7A  0EFF               	movlw	255
 13458   005A7C  2021               	addwfc	(sqrtf@i+2)^0,w,c
 13459   005A7E  6E18               	movwf	(??_sqrtf+2)^0,c
 13460   005A80  0EFF               	movlw	255
 13461   005A82  2022               	addwfc	(sqrtf@i+3)^0,w,c
 13462   005A84  6E19               	movwf	(??_sqrtf+3)^0,c
 13463   005A86  5016               	movf	??_sqrtf^0,w,c
 13464   005A88  5E2B               	subwf	sqrtf@m^0,f,c
 13465   005A8A  5017               	movf	(??_sqrtf+1)^0,w,c
 13466   005A8C  5A2C               	subwfb	(sqrtf@m+1)^0,f,c
 13467   005A8E  5018               	movf	(??_sqrtf+2)^0,w,c
 13468   005A90  5A2D               	subwfb	(sqrtf@m+2)^0,f,c
 13469   005A92  5019               	movf	(??_sqrtf+3)^0,w,c
 13470   005A94  5A2E               	subwfb	(sqrtf@m+3)^0,f,c
 13471   005A96                     l1580:
 13472   005A96  0E81               	movlw	129
 13473   005A98  262B               	addwf	sqrtf@m^0,f,c
 13474   005A9A  0EFF               	movlw	255
 13475   005A9C  222C               	addwfc	(sqrtf@m+1)^0,f,c
 13476   005A9E  0EFF               	movlw	255
 13477   005AA0  222D               	addwfc	(sqrtf@m+2)^0,f,c
 13478   005AA2  0EFF               	movlw	255
 13479   005AA4  222E               	addwfc	(sqrtf@m+3)^0,f,c
 13480   005AA6  0EFF               	movlw	255
 13481   005AA8  1433               	andwf	sqrtf@ix^0,w,c
 13482   005AAA  6E16               	movwf	??_sqrtf^0,c
 13483   005AAC  0EFF               	movlw	255
 13484   005AAE  1434               	andwf	(sqrtf@ix+1)^0,w,c
 13485   005AB0  6E17               	movwf	(??_sqrtf+1)^0,c
 13486   005AB2  0E7F               	movlw	127
 13487   005AB4  1435               	andwf	(sqrtf@ix+2)^0,w,c
 13488   005AB6  6E18               	movwf	(??_sqrtf+2)^0,c
 13489   005AB8  0E00               	movlw	0
 13490   005ABA  1436               	andwf	(sqrtf@ix+3)^0,w,c
 13491   005ABC  6E19               	movwf	(??_sqrtf+3)^0,c
 13492   005ABE  0E00               	movlw	0
 13493   005AC0  1016               	iorwf	??_sqrtf^0,w,c
 13494   005AC2  6E33               	movwf	sqrtf@ix^0,c
 13495   005AC4  0E00               	movlw	0
 13496   005AC6  1017               	iorwf	(??_sqrtf+1)^0,w,c
 13497   005AC8  6E34               	movwf	(sqrtf@ix+1)^0,c
 13498   005ACA  0E80               	movlw	128
 13499   005ACC  1018               	iorwf	(??_sqrtf+2)^0,w,c
 13500   005ACE  6E35               	movwf	(sqrtf@ix+2)^0,c
 13501   005AD0  0E00               	movlw	0
 13502   005AD2  1019               	iorwf	(??_sqrtf+3)^0,w,c
 13503   005AD4  6E36               	movwf	(sqrtf@ix+3)^0,c
 13504   005AD6  A02B               	btfss	sqrtf@m^0,0,c
 13505   005AD8  EF70  F02D         	goto	u5311
 13506   005ADC  EF72  F02D         	goto	u5310
 13507   005AE0                     u5311:
 13508   005AE0  EF7A  F02D         	goto	l1584
 13509   005AE4                     u5310:
 13510   005AE4  5033               	movf	sqrtf@ix^0,w,c
 13511   005AE6  2633               	addwf	sqrtf@ix^0,f,c
 13512   005AE8  5034               	movf	(sqrtf@ix+1)^0,w,c
 13513   005AEA  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 13514   005AEC  5035               	movf	(sqrtf@ix+2)^0,w,c
 13515   005AEE  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 13516   005AF0  5036               	movf	(sqrtf@ix+3)^0,w,c
 13517   005AF2  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 13518   005AF4                     l1584:
 13519   005AF4  342E               	rlcf	(sqrtf@m+3)^0,w,c
 13520   005AF6  322E               	rrcf	(sqrtf@m+3)^0,f,c
 13521   005AF8  322D               	rrcf	(sqrtf@m+2)^0,f,c
 13522   005AFA  322C               	rrcf	(sqrtf@m+1)^0,f,c
 13523   005AFC  322B               	rrcf	sqrtf@m^0,f,c
 13524   005AFE  5033               	movf	sqrtf@ix^0,w,c
 13525   005B00  2633               	addwf	sqrtf@ix^0,f,c
 13526   005B02  5034               	movf	(sqrtf@ix+1)^0,w,c
 13527   005B04  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 13528   005B06  5035               	movf	(sqrtf@ix+2)^0,w,c
 13529   005B08  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 13530   005B0A  5036               	movf	(sqrtf@ix+3)^0,w,c
 13531   005B0C  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 13532   005B0E  0E00               	movlw	0
 13533   005B10  6E1B               	movwf	sqrtf@s^0,c
 13534   005B12  0E00               	movlw	0
 13535   005B14  6E1C               	movwf	(sqrtf@s+1)^0,c
 13536   005B16  0E00               	movlw	0
 13537   005B18  6E1D               	movwf	(sqrtf@s+2)^0,c
 13538   005B1A  0E00               	movlw	0
 13539   005B1C  6E1E               	movwf	(sqrtf@s+3)^0,c
 13540   005B1E  C01B  F023         	movff	sqrtf@s,sqrtf@q
 13541   005B22  C01C  F024         	movff	sqrtf@s+1,sqrtf@q+1
 13542   005B26  C01D  F025         	movff	sqrtf@s+2,sqrtf@q+2
 13543   005B2A  C01E  F026         	movff	sqrtf@s+3,sqrtf@q+3
 13544   005B2E  0E00               	movlw	0
 13545   005B30  6E2F               	movwf	sqrtf@r^0,c
 13546   005B32  0E00               	movlw	0
 13547   005B34  6E30               	movwf	(sqrtf@r+1)^0,c
 13548   005B36  0E00               	movlw	0
 13549   005B38  6E31               	movwf	(sqrtf@r+2)^0,c
 13550   005B3A  0E01               	movlw	1
 13551   005B3C  6E32               	movwf	(sqrtf@r+3)^0,c
 13552   005B3E  EFE9  F02D         	goto	l5495
 13553   005B42                     l5489:
 13554   005B42  501B               	movf	sqrtf@s^0,w,c
 13555   005B44  242F               	addwf	sqrtf@r^0,w,c
 13556   005B46  6E27               	movwf	sqrtf@t^0,c
 13557   005B48  501C               	movf	(sqrtf@s+1)^0,w,c
 13558   005B4A  2030               	addwfc	(sqrtf@r+1)^0,w,c
 13559   005B4C  6E28               	movwf	(sqrtf@t+1)^0,c
 13560   005B4E  501D               	movf	(sqrtf@s+2)^0,w,c
 13561   005B50  2031               	addwfc	(sqrtf@r+2)^0,w,c
 13562   005B52  6E29               	movwf	(sqrtf@t+2)^0,c
 13563   005B54  501E               	movf	(sqrtf@s+3)^0,w,c
 13564   005B56  2032               	addwfc	(sqrtf@r+3)^0,w,c
 13565   005B58  6E2A               	movwf	(sqrtf@t+3)^0,c
 13566   005B5A  5027               	movf	sqrtf@t^0,w,c
 13567   005B5C  5C33               	subwf	sqrtf@ix^0,w,c
 13568   005B5E  5028               	movf	(sqrtf@t+1)^0,w,c
 13569   005B60  5834               	subwfb	(sqrtf@ix+1)^0,w,c
 13570   005B62  5029               	movf	(sqrtf@t+2)^0,w,c
 13571   005B64  5835               	subwfb	(sqrtf@ix+2)^0,w,c
 13572   005B66  5036               	movf	(sqrtf@ix+3)^0,w,c
 13573   005B68  0A80               	xorlw	128
 13574   005B6A  6E16               	movwf	??_sqrtf^0,c
 13575   005B6C  502A               	movf	(sqrtf@t+3)^0,w,c
 13576   005B6E  0A80               	xorlw	128
 13577   005B70  5816               	subwfb	??_sqrtf^0,w,c
 13578   005B72  A0D8               	btfss	status,0,c
 13579   005B74  EFBE  F02D         	goto	u5321
 13580   005B78  EFC0  F02D         	goto	u5320
 13581   005B7C                     u5321:
 13582   005B7C  EFDC  F02D         	goto	l1587
 13583   005B80                     u5320:
 13584   005B80  5027               	movf	sqrtf@t^0,w,c
 13585   005B82  242F               	addwf	sqrtf@r^0,w,c
 13586   005B84  6E1B               	movwf	sqrtf@s^0,c
 13587   005B86  5028               	movf	(sqrtf@t+1)^0,w,c
 13588   005B88  2030               	addwfc	(sqrtf@r+1)^0,w,c
 13589   005B8A  6E1C               	movwf	(sqrtf@s+1)^0,c
 13590   005B8C  5029               	movf	(sqrtf@t+2)^0,w,c
 13591   005B8E  2031               	addwfc	(sqrtf@r+2)^0,w,c
 13592   005B90  6E1D               	movwf	(sqrtf@s+2)^0,c
 13593   005B92  502A               	movf	(sqrtf@t+3)^0,w,c
 13594   005B94  2032               	addwfc	(sqrtf@r+3)^0,w,c
 13595   005B96  6E1E               	movwf	(sqrtf@s+3)^0,c
 13596   005B98  5027               	movf	sqrtf@t^0,w,c
 13597   005B9A  5E33               	subwf	sqrtf@ix^0,f,c
 13598   005B9C  5028               	movf	(sqrtf@t+1)^0,w,c
 13599   005B9E  5A34               	subwfb	(sqrtf@ix+1)^0,f,c
 13600   005BA0  5029               	movf	(sqrtf@t+2)^0,w,c
 13601   005BA2  5A35               	subwfb	(sqrtf@ix+2)^0,f,c
 13602   005BA4  502A               	movf	(sqrtf@t+3)^0,w,c
 13603   005BA6  5A36               	subwfb	(sqrtf@ix+3)^0,f,c
 13604   005BA8  502F               	movf	sqrtf@r^0,w,c
 13605   005BAA  2623               	addwf	sqrtf@q^0,f,c
 13606   005BAC  5030               	movf	(sqrtf@r+1)^0,w,c
 13607   005BAE  2224               	addwfc	(sqrtf@q+1)^0,f,c
 13608   005BB0  5031               	movf	(sqrtf@r+2)^0,w,c
 13609   005BB2  2225               	addwfc	(sqrtf@q+2)^0,f,c
 13610   005BB4  5032               	movf	(sqrtf@r+3)^0,w,c
 13611   005BB6  2226               	addwfc	(sqrtf@q+3)^0,f,c
 13612   005BB8                     l1587:
 13613   005BB8  5033               	movf	sqrtf@ix^0,w,c
 13614   005BBA  2633               	addwf	sqrtf@ix^0,f,c
 13615   005BBC  5034               	movf	(sqrtf@ix+1)^0,w,c
 13616   005BBE  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 13617   005BC0  5035               	movf	(sqrtf@ix+2)^0,w,c
 13618   005BC2  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 13619   005BC4  5036               	movf	(sqrtf@ix+3)^0,w,c
 13620   005BC6  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 13621   005BC8  90D8               	bcf	status,0,c
 13622   005BCA  3232               	rrcf	(sqrtf@r+3)^0,f,c
 13623   005BCC  3231               	rrcf	(sqrtf@r+2)^0,f,c
 13624   005BCE  3230               	rrcf	(sqrtf@r+1)^0,f,c
 13625   005BD0  322F               	rrcf	sqrtf@r^0,f,c
 13626   005BD2                     l5495:
 13627   005BD2  502F               	movf	sqrtf@r^0,w,c
 13628   005BD4  1030               	iorwf	(sqrtf@r+1)^0,w,c
 13629   005BD6  1031               	iorwf	(sqrtf@r+2)^0,w,c
 13630   005BD8  1032               	iorwf	(sqrtf@r+3)^0,w,c
 13631   005BDA  A4D8               	btfss	status,2,c
 13632   005BDC  EFF2  F02D         	goto	u5331
 13633   005BE0  EFF4  F02D         	goto	u5330
 13634   005BE4                     u5331:
 13635   005BE4  EFA1  F02D         	goto	l5489
 13636   005BE8                     u5330:
 13637   005BE8  5033               	movf	sqrtf@ix^0,w,c
 13638   005BEA  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 13639   005BEC  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 13640   005BEE  1036               	iorwf	(sqrtf@ix+3)^0,w,c
 13641   005BF0  B4D8               	btfsc	status,2,c
 13642   005BF2  EFFD  F02D         	goto	u5341
 13643   005BF6  EFFF  F02D         	goto	u5340
 13644   005BFA                     u5341:
 13645   005BFA  EF13  F02E         	goto	l1589
 13646   005BFE                     u5340:
 13647   005BFE  0E01               	movlw	1
 13648   005C00  1423               	andwf	sqrtf@q^0,w,c
 13649   005C02  6E16               	movwf	??_sqrtf^0,c
 13650   005C04  0E00               	movlw	0
 13651   005C06  1424               	andwf	(sqrtf@q+1)^0,w,c
 13652   005C08  6E17               	movwf	(??_sqrtf+1)^0,c
 13653   005C0A  0E00               	movlw	0
 13654   005C0C  1425               	andwf	(sqrtf@q+2)^0,w,c
 13655   005C0E  6E18               	movwf	(??_sqrtf+2)^0,c
 13656   005C10  0E00               	movlw	0
 13657   005C12  1426               	andwf	(sqrtf@q+3)^0,w,c
 13658   005C14  6E19               	movwf	(??_sqrtf+3)^0,c
 13659   005C16  5016               	movf	??_sqrtf^0,w,c
 13660   005C18  2623               	addwf	sqrtf@q^0,f,c
 13661   005C1A  5017               	movf	(??_sqrtf+1)^0,w,c
 13662   005C1C  2224               	addwfc	(sqrtf@q+1)^0,f,c
 13663   005C1E  5018               	movf	(??_sqrtf+2)^0,w,c
 13664   005C20  2225               	addwfc	(sqrtf@q+2)^0,f,c
 13665   005C22  5019               	movf	(??_sqrtf+3)^0,w,c
 13666   005C24  2226               	addwfc	(sqrtf@q+3)^0,f,c
 13667   005C26                     l1589:
 13668   005C26  C023  F016         	movff	sqrtf@q,??_sqrtf
 13669   005C2A  C024  F017         	movff	sqrtf@q+1,??_sqrtf+1
 13670   005C2E  C025  F018         	movff	sqrtf@q+2,??_sqrtf+2
 13671   005C32  C026  F019         	movff	sqrtf@q+3,??_sqrtf+3
 13672   005C36  3419               	rlcf	(??_sqrtf+3)^0,w,c
 13673   005C38  3219               	rrcf	(??_sqrtf+3)^0,f,c
 13674   005C3A  3218               	rrcf	(??_sqrtf+2)^0,f,c
 13675   005C3C  3217               	rrcf	(??_sqrtf+1)^0,f,c
 13676   005C3E  3216               	rrcf	??_sqrtf^0,f,c
 13677   005C40  0E00               	movlw	0
 13678   005C42  2416               	addwf	??_sqrtf^0,w,c
 13679   005C44  6E33               	movwf	sqrtf@ix^0,c
 13680   005C46  0E00               	movlw	0
 13681   005C48  2017               	addwfc	(??_sqrtf+1)^0,w,c
 13682   005C4A  6E34               	movwf	(sqrtf@ix+1)^0,c
 13683   005C4C  0E00               	movlw	0
 13684   005C4E  2018               	addwfc	(??_sqrtf+2)^0,w,c
 13685   005C50  6E35               	movwf	(sqrtf@ix+2)^0,c
 13686   005C52  0E3F               	movlw	63
 13687   005C54  2019               	addwfc	(??_sqrtf+3)^0,w,c
 13688   005C56  6E36               	movwf	(sqrtf@ix+3)^0,c
 13689   005C58  C02B  F016         	movff	sqrtf@m,??_sqrtf
 13690   005C5C  C02C  F017         	movff	sqrtf@m+1,??_sqrtf+1
 13691   005C60  C02D  F018         	movff	sqrtf@m+2,??_sqrtf+2
 13692   005C64  C02E  F019         	movff	sqrtf@m+3,??_sqrtf+3
 13693   005C68  0E17               	movlw	23
 13694   005C6A                     u5355:
 13695   005C6A  90D8               	bcf	status,0,c
 13696   005C6C  3616               	rlcf	??_sqrtf^0,f,c
 13697   005C6E  3617               	rlcf	(??_sqrtf+1)^0,f,c
 13698   005C70  3618               	rlcf	(??_sqrtf+2)^0,f,c
 13699   005C72  3619               	rlcf	(??_sqrtf+3)^0,f,c
 13700   005C74  2EE8               	decfsz	wreg,f,c
 13701   005C76  EF35  F02E         	goto	u5355
 13702   005C7A  5016               	movf	??_sqrtf^0,w,c
 13703   005C7C  2633               	addwf	sqrtf@ix^0,f,c
 13704   005C7E  5017               	movf	(??_sqrtf+1)^0,w,c
 13705   005C80  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 13706   005C82  5018               	movf	(??_sqrtf+2)^0,w,c
 13707   005C84  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 13708   005C86  5019               	movf	(??_sqrtf+3)^0,w,c
 13709   005C88  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 13710   005C8A  EFA1  F02C         	goto	l5449
 13711   005C8E                     l1576:
 13712   005C8E  0012               	return		;funcret
 13713   005C90                     __end_of_sqrtf:
 13714                           	callstack 0
 13715                           
 13716 ;; *************** function _scalbnf *****************
 13717 ;; Defined at:
 13718 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\scalbnf.c"
 13719 ;; Parameters:    Size  Location     Type
 13720 ;;  x               4   42[COMRAM] float 
 13721 ;;  n               2   46[COMRAM] int 
 13722 ;; Auto vars:     Size  Location     Type
 13723 ;;  y               4   56[COMRAM] float 
 13724 ;;  u               4   52[COMRAM] struct .
 13725 ;; Return value:  Size  Location     Type
 13726 ;;                  4   42[COMRAM] float 
 13727 ;; Registers used:
 13728 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13729 ;; Tracked objects:
 13730 ;;		On entry : 0/0
 13731 ;;		On exit  : 0/0
 13732 ;;		Unchanged: 0/0
 13733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13734 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13735 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13736 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13737 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13738 ;;Total ram usage:       18 bytes
 13739 ;; Hardware stack levels used: 1
 13740 ;; Hardware stack levels required when called: 3
 13741 ;; This function calls:
 13742 ;;		___flmul
 13743 ;; This function is called by:
 13744 ;;		_powf
 13745 ;; This function uses a non-reentrant model
 13746 ;;
 13747                           
 13748                           	psect	text40
 13749   006378                     __ptext40:
 13750                           	callstack 0
 13751   006378                     _scalbnf:
 13752                           	callstack 25
 13753   006378  C02B  F039         	movff	scalbnf@x,scalbnf@y
 13754   00637C  C02C  F03A         	movff	scalbnf@x+1,scalbnf@y+1
 13755   006380  C02D  F03B         	movff	scalbnf@x+2,scalbnf@y+2
 13756   006384  C02E  F03C         	movff	scalbnf@x+3,scalbnf@y+3
 13757   006388  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 13758   00638A  EFD0  F031         	goto	u8521
 13759   00638E  5030               	movf	(scalbnf@n+1)^0,w,c
 13760   006390  E109               	bnz	u8520
 13761   006392  0E80               	movlw	128
 13762   006394  5C2F               	subwf	scalbnf@n^0,w,c
 13763   006396  A0D8               	btfss	status,0,c
 13764   006398  EFD0  F031         	goto	u8521
 13765   00639C  EFD2  F031         	goto	u8520
 13766   0063A0                     u8521:
 13767   0063A0  EF30  F032         	goto	l8117
 13768   0063A4                     u8520:
 13769   0063A4  C039  F012         	movff	scalbnf@y,___flmul@b
 13770   0063A8  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 13771   0063AC  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 13772   0063B0  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 13773   0063B4  0E00               	movlw	0
 13774   0063B6  6E16               	movwf	___flmul@a^0,c
 13775   0063B8  0E00               	movlw	0
 13776   0063BA  6E17               	movwf	(___flmul@a+1)^0,c
 13777   0063BC  0E00               	movlw	0
 13778   0063BE  6E18               	movwf	(___flmul@a+2)^0,c
 13779   0063C0  0E7F               	movlw	127
 13780   0063C2  6E19               	movwf	(___flmul@a+3)^0,c
 13781   0063C4  EC44  F02A         	call	___flmul	;wreg free
 13782   0063C8  C012  F039         	movff	?___flmul,scalbnf@y
 13783   0063CC  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 13784   0063D0  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 13785   0063D4  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 13786   0063D8  0E81               	movlw	129
 13787   0063DA  262F               	addwf	scalbnf@n^0,f,c
 13788   0063DC  0EFF               	movlw	255
 13789   0063DE  2230               	addwfc	(scalbnf@n+1)^0,f,c
 13790   0063E0  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 13791   0063E2  EFFC  F031         	goto	u8531
 13792   0063E6  5030               	movf	(scalbnf@n+1)^0,w,c
 13793   0063E8  E109               	bnz	u8530
 13794   0063EA  0E80               	movlw	128
 13795   0063EC  5C2F               	subwf	scalbnf@n^0,w,c
 13796   0063EE  A0D8               	btfss	status,0,c
 13797   0063F0  EFFC  F031         	goto	u8531
 13798   0063F4  EFFE  F031         	goto	u8530
 13799   0063F8                     u8531:
 13800   0063F8  EF9A  F032         	goto	l8133
 13801   0063FC                     u8530:
 13802   0063FC  C039  F012         	movff	scalbnf@y,___flmul@b
 13803   006400  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 13804   006404  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 13805   006408  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 13806   00640C  0E00               	movlw	0
 13807   00640E  6E16               	movwf	___flmul@a^0,c
 13808   006410  0E00               	movlw	0
 13809   006412  6E17               	movwf	(___flmul@a+1)^0,c
 13810   006414  0E00               	movlw	0
 13811   006416  6E18               	movwf	(___flmul@a+2)^0,c
 13812   006418  0E7F               	movlw	127
 13813   00641A  6E19               	movwf	(___flmul@a+3)^0,c
 13814   00641C  EC44  F02A         	call	___flmul	;wreg free
 13815   006420  C012  F039         	movff	?___flmul,scalbnf@y
 13816   006424  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 13817   006428  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 13818   00642C  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 13819   006430  0E81               	movlw	129
 13820   006432  262F               	addwf	scalbnf@n^0,f,c
 13821   006434  0EFF               	movlw	255
 13822   006436  2230               	addwfc	(scalbnf@n+1)^0,f,c
 13823   006438  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 13824   00643A  EF28  F032         	goto	u8541
 13825   00643E  5030               	movf	(scalbnf@n+1)^0,w,c
 13826   006440  E109               	bnz	u8540
 13827   006442  0E80               	movlw	128
 13828   006444  5C2F               	subwf	scalbnf@n^0,w,c
 13829   006446  A0D8               	btfss	status,0,c
 13830   006448  EF28  F032         	goto	u8541
 13831   00644C  EF2A  F032         	goto	u8540
 13832   006450                     u8541:
 13833   006450  EF9A  F032         	goto	l8133
 13834   006454                     u8540:
 13835   006454  0E00               	movlw	0
 13836   006456  6E30               	movwf	(scalbnf@n+1)^0,c
 13837   006458  0E7F               	movlw	127
 13838   00645A  6E2F               	movwf	scalbnf@n^0,c
 13839   00645C  EF9A  F032         	goto	l8133
 13840   006460                     l8117:
 13841   006460  AE30               	btfss	(scalbnf@n+1)^0,7,c
 13842   006462  EF3C  F032         	goto	u8551
 13843   006466  0E82               	movlw	130
 13844   006468  5C2F               	subwf	scalbnf@n^0,w,c
 13845   00646A  0EFF               	movlw	255
 13846   00646C  5830               	subwfb	(scalbnf@n+1)^0,w,c
 13847   00646E  B0D8               	btfsc	status,0,c
 13848   006470  EF3C  F032         	goto	u8551
 13849   006474  EF3E  F032         	goto	u8550
 13850   006478                     u8551:
 13851   006478  EF9A  F032         	goto	l8133
 13852   00647C                     u8550:
 13853   00647C  C039  F012         	movff	scalbnf@y,___flmul@b
 13854   006480  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 13855   006484  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 13856   006488  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 13857   00648C  0E00               	movlw	0
 13858   00648E  6E16               	movwf	___flmul@a^0,c
 13859   006490  0E00               	movlw	0
 13860   006492  6E17               	movwf	(___flmul@a+1)^0,c
 13861   006494  0E80               	movlw	128
 13862   006496  6E18               	movwf	(___flmul@a+2)^0,c
 13863   006498  0E0C               	movlw	12
 13864   00649A  6E19               	movwf	(___flmul@a+3)^0,c
 13865   00649C  EC44  F02A         	call	___flmul	;wreg free
 13866   0064A0  C012  F039         	movff	?___flmul,scalbnf@y
 13867   0064A4  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 13868   0064A8  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 13869   0064AC  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 13870   0064B0  0E66               	movlw	102
 13871   0064B2  262F               	addwf	scalbnf@n^0,f,c
 13872   0064B4  0E00               	movlw	0
 13873   0064B6  2230               	addwfc	(scalbnf@n+1)^0,f,c
 13874   0064B8  AE30               	btfss	(scalbnf@n+1)^0,7,c
 13875   0064BA  EF68  F032         	goto	u8561
 13876   0064BE  0E82               	movlw	130
 13877   0064C0  5C2F               	subwf	scalbnf@n^0,w,c
 13878   0064C2  0EFF               	movlw	255
 13879   0064C4  5830               	subwfb	(scalbnf@n+1)^0,w,c
 13880   0064C6  B0D8               	btfsc	status,0,c
 13881   0064C8  EF68  F032         	goto	u8561
 13882   0064CC  EF6A  F032         	goto	u8560
 13883   0064D0                     u8561:
 13884   0064D0  EF9A  F032         	goto	l8133
 13885   0064D4                     u8560:
 13886   0064D4  C039  F012         	movff	scalbnf@y,___flmul@b
 13887   0064D8  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 13888   0064DC  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 13889   0064E0  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 13890   0064E4  0E00               	movlw	0
 13891   0064E6  6E16               	movwf	___flmul@a^0,c
 13892   0064E8  0E00               	movlw	0
 13893   0064EA  6E17               	movwf	(___flmul@a+1)^0,c
 13894   0064EC  0E80               	movlw	128
 13895   0064EE  6E18               	movwf	(___flmul@a+2)^0,c
 13896   0064F0  0E0C               	movlw	12
 13897   0064F2  6E19               	movwf	(___flmul@a+3)^0,c
 13898   0064F4  EC44  F02A         	call	___flmul	;wreg free
 13899   0064F8  C012  F039         	movff	?___flmul,scalbnf@y
 13900   0064FC  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 13901   006500  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 13902   006504  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 13903   006508  0E66               	movlw	102
 13904   00650A  262F               	addwf	scalbnf@n^0,f,c
 13905   00650C  0E00               	movlw	0
 13906   00650E  2230               	addwfc	(scalbnf@n+1)^0,f,c
 13907   006510  AE30               	btfss	(scalbnf@n+1)^0,7,c
 13908   006512  EF94  F032         	goto	u8571
 13909   006516  0E82               	movlw	130
 13910   006518  5C2F               	subwf	scalbnf@n^0,w,c
 13911   00651A  0EFF               	movlw	255
 13912   00651C  5830               	subwfb	(scalbnf@n+1)^0,w,c
 13913   00651E  B0D8               	btfsc	status,0,c
 13914   006520  EF94  F032         	goto	u8571
 13915   006524  EF96  F032         	goto	u8570
 13916   006528                     u8571:
 13917   006528  EF9A  F032         	goto	l8133
 13918   00652C                     u8570:
 13919   00652C  0EFF               	movlw	255
 13920   00652E  6E30               	movwf	(scalbnf@n+1)^0,c
 13921   006530  0E82               	movlw	130
 13922   006532  6E2F               	movwf	scalbnf@n^0,c
 13923   006534                     l8133:
 13924   006534  0E7F               	movlw	127
 13925   006536  242F               	addwf	scalbnf@n^0,w,c
 13926   006538  6E31               	movwf	??_scalbnf^0,c
 13927   00653A  0E00               	movlw	0
 13928   00653C  2030               	addwfc	(scalbnf@n+1)^0,w,c
 13929   00653E  6E32               	movwf	(??_scalbnf+1)^0,c
 13930   006540  6A33               	clrf	(??_scalbnf+2)^0,c
 13931   006542  6A34               	clrf	(??_scalbnf+3)^0,c
 13932   006544  0E17               	movlw	23
 13933   006546                     u8585:
 13934   006546  90D8               	bcf	status,0,c
 13935   006548  3631               	rlcf	??_scalbnf^0,f,c
 13936   00654A  3632               	rlcf	(??_scalbnf+1)^0,f,c
 13937   00654C  3633               	rlcf	(??_scalbnf+2)^0,f,c
 13938   00654E  3634               	rlcf	(??_scalbnf+3)^0,f,c
 13939   006550  2EE8               	decfsz	wreg,f,c
 13940   006552  EFA3  F032         	goto	u8585
 13941   006556  C031  F035         	movff	??_scalbnf,scalbnf@u
 13942   00655A  C032  F036         	movff	??_scalbnf+1,scalbnf@u+1
 13943   00655E  C033  F037         	movff	??_scalbnf+2,scalbnf@u+2
 13944   006562  C034  F038         	movff	??_scalbnf+3,scalbnf@u+3
 13945   006566  C035  F012         	movff	scalbnf@u,___flmul@b
 13946   00656A  C036  F013         	movff	scalbnf@u+1,___flmul@b+1
 13947   00656E  C037  F014         	movff	scalbnf@u+2,___flmul@b+2
 13948   006572  C038  F015         	movff	scalbnf@u+3,___flmul@b+3
 13949   006576  C039  F016         	movff	scalbnf@y,___flmul@a
 13950   00657A  C03A  F017         	movff	scalbnf@y+1,___flmul@a+1
 13951   00657E  C03B  F018         	movff	scalbnf@y+2,___flmul@a+2
 13952   006582  C03C  F019         	movff	scalbnf@y+3,___flmul@a+3
 13953   006586  EC44  F02A         	call	___flmul	;wreg free
 13954   00658A  C012  F02B         	movff	?___flmul,scalbnf@x
 13955   00658E  C013  F02C         	movff	?___flmul+1,scalbnf@x+1
 13956   006592  C014  F02D         	movff	?___flmul+2,scalbnf@x+2
 13957   006596  C015  F02E         	movff	?___flmul+3,scalbnf@x+3
 13958   00659A  C02B  F02B         	movff	scalbnf@x,?_scalbnf
 13959   00659E  C02C  F02C         	movff	scalbnf@x+1,?_scalbnf+1
 13960   0065A2  C02D  F02D         	movff	scalbnf@x+2,?_scalbnf+2
 13961   0065A6  C02E  F02E         	movff	scalbnf@x+3,?_scalbnf+3
 13962   0065AA  0012               	return		;funcret
 13963   0065AC                     __end_of_scalbnf:
 13964                           	callstack 0
 13965                           
 13966 ;; *************** function ___flmul *****************
 13967 ;; Defined at:
 13968 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 13969 ;; Parameters:    Size  Location     Type
 13970 ;;  b               4   17[COMRAM] float 
 13971 ;;  a               4   21[COMRAM] float 
 13972 ;; Auto vars:     Size  Location     Type
 13973 ;;  prod            4   36[COMRAM] struct .
 13974 ;;  grs             4   31[COMRAM] unsigned long 
 13975 ;;  temp            2   40[COMRAM] struct .
 13976 ;;  bexp            1   35[COMRAM] unsigned char 
 13977 ;;  aexp            1   30[COMRAM] unsigned char 
 13978 ;;  sign            1   29[COMRAM] unsigned char 
 13979 ;; Return value:  Size  Location     Type
 13980 ;;                  4   17[COMRAM] unsigned char 
 13981 ;; Registers used:
 13982 ;;		wreg, status,2, status,0, prodl, prodh
 13983 ;; Tracked objects:
 13984 ;;		On entry : 0/0
 13985 ;;		On exit  : 0/0
 13986 ;;		Unchanged: 0/0
 13987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13988 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13989 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13990 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13991 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13992 ;;Total ram usage:       25 bytes
 13993 ;; Hardware stack levels used: 1
 13994 ;; Hardware stack levels required when called: 2
 13995 ;; This function calls:
 13996 ;;		Nothing
 13997 ;; This function is called by:
 13998 ;;		_efgtoa
 13999 ;;		_powf
 14000 ;;		_scalbnf
 14001 ;; This function uses a non-reentrant model
 14002 ;;
 14003                           
 14004                           	psect	text41
 14005   005488                     __ptext41:
 14006                           	callstack 0
 14007   005488                     ___flmul:
 14008                           	callstack 24
 14009   005488  5015               	movf	(___flmul@b+3)^0,w,c
 14010   00548A  0B80               	andlw	128
 14011   00548C  6E1E               	movwf	___flmul@sign^0,c
 14012   00548E  5015               	movf	(___flmul@b+3)^0,w,c
 14013   005490  2415               	addwf	(___flmul@b+3)^0,w,c
 14014   005492  6E24               	movwf	___flmul@bexp^0,c
 14015   005494  AE14               	btfss	(___flmul@b+2)^0,7,c
 14016   005496  EF4F  F02A         	goto	u7381
 14017   00549A  EF51  F02A         	goto	u7380
 14018   00549E                     u7381:
 14019   00549E  EF52  F02A         	goto	l7381
 14020   0054A2                     u7380:
 14021   0054A2  8024               	bsf	___flmul@bexp^0,0,c
 14022   0054A4                     l7381:
 14023   0054A4  5024               	movf	___flmul@bexp^0,w,c
 14024   0054A6  B4D8               	btfsc	status,2,c
 14025   0054A8  EF58  F02A         	goto	u7391
 14026   0054AC  EF5A  F02A         	goto	u7390
 14027   0054B0                     u7391:
 14028   0054B0  EF6D  F02A         	goto	l7389
 14029   0054B4                     u7390:
 14030   0054B4  2824               	incf	___flmul@bexp^0,w,c
 14031   0054B6  A4D8               	btfss	status,2,c
 14032   0054B8  EF60  F02A         	goto	u7401
 14033   0054BC  EF62  F02A         	goto	u7400
 14034   0054C0                     u7401:
 14035   0054C0  EF6A  F02A         	goto	l7387
 14036   0054C4                     u7400:
 14037   0054C4  0E00               	movlw	0
 14038   0054C6  6E12               	movwf	___flmul@b^0,c
 14039   0054C8  0E00               	movlw	0
 14040   0054CA  6E13               	movwf	(___flmul@b+1)^0,c
 14041   0054CC  0E00               	movlw	0
 14042   0054CE  6E14               	movwf	(___flmul@b+2)^0,c
 14043   0054D0  0E00               	movlw	0
 14044   0054D2  6E15               	movwf	(___flmul@b+3)^0,c
 14045   0054D4                     l7387:
 14046   0054D4  8E14               	bsf	(___flmul@b+2)^0,7,c
 14047   0054D6  EF75  F02A         	goto	l7391
 14048   0054DA                     l7389:
 14049   0054DA  0E00               	movlw	0
 14050   0054DC  6E12               	movwf	___flmul@b^0,c
 14051   0054DE  0E00               	movlw	0
 14052   0054E0  6E13               	movwf	(___flmul@b+1)^0,c
 14053   0054E2  0E00               	movlw	0
 14054   0054E4  6E14               	movwf	(___flmul@b+2)^0,c
 14055   0054E6  0E00               	movlw	0
 14056   0054E8  6E15               	movwf	(___flmul@b+3)^0,c
 14057   0054EA                     l7391:
 14058   0054EA  5019               	movf	(___flmul@a+3)^0,w,c
 14059   0054EC  0B80               	andlw	128
 14060   0054EE  1A1E               	xorwf	___flmul@sign^0,f,c
 14061   0054F0  5019               	movf	(___flmul@a+3)^0,w,c
 14062   0054F2  2419               	addwf	(___flmul@a+3)^0,w,c
 14063   0054F4  6E1F               	movwf	___flmul@aexp^0,c
 14064   0054F6  AE18               	btfss	(___flmul@a+2)^0,7,c
 14065   0054F8  EF80  F02A         	goto	u7411
 14066   0054FC  EF82  F02A         	goto	u7410
 14067   005500                     u7411:
 14068   005500  EF83  F02A         	goto	l7399
 14069   005504                     u7410:
 14070   005504  801F               	bsf	___flmul@aexp^0,0,c
 14071   005506                     l7399:
 14072   005506  501F               	movf	___flmul@aexp^0,w,c
 14073   005508  B4D8               	btfsc	status,2,c
 14074   00550A  EF89  F02A         	goto	u7421
 14075   00550E  EF8B  F02A         	goto	u7420
 14076   005512                     u7421:
 14077   005512  EF9E  F02A         	goto	l7407
 14078   005516                     u7420:
 14079   005516  281F               	incf	___flmul@aexp^0,w,c
 14080   005518  A4D8               	btfss	status,2,c
 14081   00551A  EF91  F02A         	goto	u7431
 14082   00551E  EF93  F02A         	goto	u7430
 14083   005522                     u7431:
 14084   005522  EF9B  F02A         	goto	l7405
 14085   005526                     u7430:
 14086   005526  0E00               	movlw	0
 14087   005528  6E16               	movwf	___flmul@a^0,c
 14088   00552A  0E00               	movlw	0
 14089   00552C  6E17               	movwf	(___flmul@a+1)^0,c
 14090   00552E  0E00               	movlw	0
 14091   005530  6E18               	movwf	(___flmul@a+2)^0,c
 14092   005532  0E00               	movlw	0
 14093   005534  6E19               	movwf	(___flmul@a+3)^0,c
 14094   005536                     l7405:
 14095   005536  8E18               	bsf	(___flmul@a+2)^0,7,c
 14096   005538  EFA6  F02A         	goto	l1174
 14097   00553C                     l7407:
 14098   00553C  0E00               	movlw	0
 14099   00553E  6E16               	movwf	___flmul@a^0,c
 14100   005540  0E00               	movlw	0
 14101   005542  6E17               	movwf	(___flmul@a+1)^0,c
 14102   005544  0E00               	movlw	0
 14103   005546  6E18               	movwf	(___flmul@a+2)^0,c
 14104   005548  0E00               	movlw	0
 14105   00554A  6E19               	movwf	(___flmul@a+3)^0,c
 14106   00554C                     l1174:
 14107   00554C  501F               	movf	___flmul@aexp^0,w,c
 14108   00554E  B4D8               	btfsc	status,2,c
 14109   005550  EFAC  F02A         	goto	u7441
 14110   005554  EFAE  F02A         	goto	u7440
 14111   005558                     u7441:
 14112   005558  EFB6  F02A         	goto	l7411
 14113   00555C                     u7440:
 14114   00555C  5024               	movf	___flmul@bexp^0,w,c
 14115   00555E  A4D8               	btfss	status,2,c
 14116   005560  EFB4  F02A         	goto	u7451
 14117   005564  EFB6  F02A         	goto	u7450
 14118   005568                     u7451:
 14119   005568  EFC0  F02A         	goto	l7415
 14120   00556C                     u7450:
 14121   00556C                     l7411:
 14122   00556C  0E00               	movlw	0
 14123   00556E  6E12               	movwf	?___flmul^0,c
 14124   005570  0E00               	movlw	0
 14125   005572  6E13               	movwf	(?___flmul+1)^0,c
 14126   005574  0E00               	movlw	0
 14127   005576  6E14               	movwf	(?___flmul+2)^0,c
 14128   005578  0E00               	movlw	0
 14129   00557A  6E15               	movwf	(?___flmul+3)^0,c
 14130   00557C  EF58  F02C         	goto	l1178
 14131   005580                     l7415:
 14132   005580  5018               	movf	(___flmul@a+2)^0,w,c
 14133   005582  0212               	mulwf	___flmul@b^0,c
 14134   005584  CFF3 F029          	movff	prodl,___flmul@temp
 14135   005588  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14136   00558C  5029               	movf	___flmul@temp^0,w,c
 14137   00558E  6E20               	movwf	___flmul@grs^0,c
 14138   005590  6A21               	clrf	(___flmul@grs+1)^0,c
 14139   005592  6A22               	clrf	(___flmul@grs+2)^0,c
 14140   005594  6A23               	clrf	(___flmul@grs+3)^0,c
 14141   005596  502A               	movf	(___flmul@temp+1)^0,w,c
 14142   005598  6E25               	movwf	___flmul@prod^0,c
 14143   00559A  6A26               	clrf	(___flmul@prod+1)^0,c
 14144   00559C  6A27               	clrf	(___flmul@prod+2)^0,c
 14145   00559E  6A28               	clrf	(___flmul@prod+3)^0,c
 14146   0055A0  5017               	movf	(___flmul@a+1)^0,w,c
 14147   0055A2  0213               	mulwf	(___flmul@b+1)^0,c
 14148   0055A4  CFF3 F029          	movff	prodl,___flmul@temp
 14149   0055A8  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14150   0055AC  5029               	movf	___flmul@temp^0,w,c
 14151   0055AE  2620               	addwf	___flmul@grs^0,f,c
 14152   0055B0  0E00               	movlw	0
 14153   0055B2  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14154   0055B4  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14155   0055B6  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14156   0055B8  502A               	movf	(___flmul@temp+1)^0,w,c
 14157   0055BA  2625               	addwf	___flmul@prod^0,f,c
 14158   0055BC  0E00               	movlw	0
 14159   0055BE  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14160   0055C0  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14161   0055C2  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14162   0055C4  5016               	movf	___flmul@a^0,w,c
 14163   0055C6  0214               	mulwf	(___flmul@b+2)^0,c
 14164   0055C8  CFF3 F029          	movff	prodl,___flmul@temp
 14165   0055CC  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14166   0055D0  5029               	movf	___flmul@temp^0,w,c
 14167   0055D2  2620               	addwf	___flmul@grs^0,f,c
 14168   0055D4  0E00               	movlw	0
 14169   0055D6  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14170   0055D8  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14171   0055DA  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14172   0055DC  502A               	movf	(___flmul@temp+1)^0,w,c
 14173   0055DE  2625               	addwf	___flmul@prod^0,f,c
 14174   0055E0  0E00               	movlw	0
 14175   0055E2  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14176   0055E4  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14177   0055E6  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14178   0055E8  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 14179   0055EC  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 14180   0055F0  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 14181   0055F4  6A20               	clrf	___flmul@grs^0,c
 14182   0055F6  5016               	movf	___flmul@a^0,w,c
 14183   0055F8  0213               	mulwf	(___flmul@b+1)^0,c
 14184   0055FA  CFF3 F029          	movff	prodl,___flmul@temp
 14185   0055FE  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14186   005602  5029               	movf	___flmul@temp^0,w,c
 14187   005604  2620               	addwf	___flmul@grs^0,f,c
 14188   005606  502A               	movf	(___flmul@temp+1)^0,w,c
 14189   005608  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14190   00560A  0E00               	movlw	0
 14191   00560C  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14192   00560E  0E00               	movlw	0
 14193   005610  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14194   005612  5017               	movf	(___flmul@a+1)^0,w,c
 14195   005614  0212               	mulwf	___flmul@b^0,c
 14196   005616  CFF3 F029          	movff	prodl,___flmul@temp
 14197   00561A  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14198   00561E  5029               	movf	___flmul@temp^0,w,c
 14199   005620  2620               	addwf	___flmul@grs^0,f,c
 14200   005622  502A               	movf	(___flmul@temp+1)^0,w,c
 14201   005624  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14202   005626  0E00               	movlw	0
 14203   005628  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14204   00562A  0E00               	movlw	0
 14205   00562C  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14206   00562E  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 14207   005632  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 14208   005636  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 14209   00563A  6A20               	clrf	___flmul@grs^0,c
 14210   00563C  5016               	movf	___flmul@a^0,w,c
 14211   00563E  0212               	mulwf	___flmul@b^0,c
 14212   005640  CFF3 F029          	movff	prodl,___flmul@temp
 14213   005644  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14214   005648  5029               	movf	___flmul@temp^0,w,c
 14215   00564A  2620               	addwf	___flmul@grs^0,f,c
 14216   00564C  502A               	movf	(___flmul@temp+1)^0,w,c
 14217   00564E  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14218   005650  0E00               	movlw	0
 14219   005652  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14220   005654  0E00               	movlw	0
 14221   005656  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14222   005658  5018               	movf	(___flmul@a+2)^0,w,c
 14223   00565A  0213               	mulwf	(___flmul@b+1)^0,c
 14224   00565C  CFF3 F029          	movff	prodl,___flmul@temp
 14225   005660  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14226   005664  5029               	movf	___flmul@temp^0,w,c
 14227   005666  2625               	addwf	___flmul@prod^0,f,c
 14228   005668  502A               	movf	(___flmul@temp+1)^0,w,c
 14229   00566A  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14230   00566C  0E00               	movlw	0
 14231   00566E  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14232   005670  0E00               	movlw	0
 14233   005672  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14234   005674  5017               	movf	(___flmul@a+1)^0,w,c
 14235   005676  0214               	mulwf	(___flmul@b+2)^0,c
 14236   005678  CFF3 F029          	movff	prodl,___flmul@temp
 14237   00567C  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14238   005680  5029               	movf	___flmul@temp^0,w,c
 14239   005682  2625               	addwf	___flmul@prod^0,f,c
 14240   005684  502A               	movf	(___flmul@temp+1)^0,w,c
 14241   005686  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14242   005688  0E00               	movlw	0
 14243   00568A  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14244   00568C  0E00               	movlw	0
 14245   00568E  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14246   005690  5018               	movf	(___flmul@a+2)^0,w,c
 14247   005692  0214               	mulwf	(___flmul@b+2)^0,c
 14248   005694  CFF3 F029          	movff	prodl,___flmul@temp
 14249   005698  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14250   00569C  5029               	movf	___flmul@temp^0,w,c
 14251   00569E  6E1A               	movwf	??___flmul^0,c
 14252   0056A0  502A               	movf	(___flmul@temp+1)^0,w,c
 14253   0056A2  6E1B               	movwf	(??___flmul+1)^0,c
 14254   0056A4  6A1C               	clrf	(??___flmul+2)^0,c
 14255   0056A6  6A1D               	clrf	(??___flmul+3)^0,c
 14256   0056A8  C01C  F01D         	movff	??___flmul+2,??___flmul+3
 14257   0056AC  C01B  F01C         	movff	??___flmul+1,??___flmul+2
 14258   0056B0  C01A  F01B         	movff	??___flmul,??___flmul+1
 14259   0056B4  6A1A               	clrf	??___flmul^0,c
 14260   0056B6  501A               	movf	??___flmul^0,w,c
 14261   0056B8  2625               	addwf	___flmul@prod^0,f,c
 14262   0056BA  501B               	movf	(??___flmul+1)^0,w,c
 14263   0056BC  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14264   0056BE  501C               	movf	(??___flmul+2)^0,w,c
 14265   0056C0  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14266   0056C2  501D               	movf	(??___flmul+3)^0,w,c
 14267   0056C4  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14268   0056C6  C020  F01A         	movff	___flmul@grs,??___flmul
 14269   0056CA  C021  F01B         	movff	___flmul@grs+1,??___flmul+1
 14270   0056CE  C022  F01C         	movff	___flmul@grs+2,??___flmul+2
 14271   0056D2  C023  F01D         	movff	___flmul@grs+3,??___flmul+3
 14272   0056D6  0E19               	movlw	25
 14273   0056D8  EF73  F02B         	goto	u7460
 14274   0056DC                     u7465:
 14275   0056DC  90D8               	bcf	status,0,c
 14276   0056DE  321D               	rrcf	(??___flmul+3)^0,f,c
 14277   0056E0  321C               	rrcf	(??___flmul+2)^0,f,c
 14278   0056E2  321B               	rrcf	(??___flmul+1)^0,f,c
 14279   0056E4  321A               	rrcf	??___flmul^0,f,c
 14280   0056E6                     u7460:
 14281   0056E6  2EE8               	decfsz	wreg,f,c
 14282   0056E8  EF6E  F02B         	goto	u7465
 14283   0056EC  501A               	movf	??___flmul^0,w,c
 14284   0056EE  2625               	addwf	___flmul@prod^0,f,c
 14285   0056F0  501B               	movf	(??___flmul+1)^0,w,c
 14286   0056F2  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14287   0056F4  501C               	movf	(??___flmul+2)^0,w,c
 14288   0056F6  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14289   0056F8  501D               	movf	(??___flmul+3)^0,w,c
 14290   0056FA  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14291   0056FC  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 14292   005700  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 14293   005704  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 14294   005708  6A20               	clrf	___flmul@grs^0,c
 14295   00570A  501F               	movf	___flmul@aexp^0,w,c
 14296   00570C  C024  F01A         	movff	___flmul@bexp,??___flmul
 14297   005710  6A1B               	clrf	(??___flmul+1)^0,c
 14298   005712  261A               	addwf	??___flmul^0,f,c
 14299   005714  0E00               	movlw	0
 14300   005716  221B               	addwfc	(??___flmul+1)^0,f,c
 14301   005718  0E82               	movlw	130
 14302   00571A  241A               	addwf	??___flmul^0,w,c
 14303   00571C  6E29               	movwf	___flmul@temp^0,c
 14304   00571E  0EFF               	movlw	255
 14305   005720  201B               	addwfc	(??___flmul+1)^0,w,c
 14306   005722  6E2A               	movwf	(___flmul@temp+1)^0,c
 14307   005724  EFA9  F02B         	goto	l7463
 14308   005728                     l7457:
 14309   005728  90D8               	bcf	status,0,c
 14310   00572A  3625               	rlcf	___flmul@prod^0,f,c
 14311   00572C  3626               	rlcf	(___flmul@prod+1)^0,f,c
 14312   00572E  3627               	rlcf	(___flmul@prod+2)^0,f,c
 14313   005730  3628               	rlcf	(___flmul@prod+3)^0,f,c
 14314   005732  AE23               	btfss	(___flmul@grs+3)^0,7,c
 14315   005734  EF9E  F02B         	goto	u7471
 14316   005738  EFA0  F02B         	goto	u7470
 14317   00573C                     u7471:
 14318   00573C  EFA1  F02B         	goto	l1181
 14319   005740                     u7470:
 14320   005740  8025               	bsf	___flmul@prod^0,0,c
 14321   005742                     l1181:
 14322   005742  90D8               	bcf	status,0,c
 14323   005744  3620               	rlcf	___flmul@grs^0,f,c
 14324   005746  3621               	rlcf	(___flmul@grs+1)^0,f,c
 14325   005748  3622               	rlcf	(___flmul@grs+2)^0,f,c
 14326   00574A  3623               	rlcf	(___flmul@grs+3)^0,f,c
 14327   00574C  0629               	decf	___flmul@temp^0,f,c
 14328   00574E  A0D8               	btfss	status,0,c
 14329   005750  062A               	decf	(___flmul@temp+1)^0,f,c
 14330   005752                     l7463:
 14331   005752  AE27               	btfss	(___flmul@prod+2)^0,7,c
 14332   005754  EFAE  F02B         	goto	u7481
 14333   005758  EFB0  F02B         	goto	u7480
 14334   00575C                     u7481:
 14335   00575C  EF94  F02B         	goto	l7457
 14336   005760                     u7480:
 14337   005760  0E00               	movlw	0
 14338   005762  6E1F               	movwf	___flmul@aexp^0,c
 14339   005764  AE23               	btfss	(___flmul@grs+3)^0,7,c
 14340   005766  EFB7  F02B         	goto	u7491
 14341   00576A  EFB9  F02B         	goto	u7490
 14342   00576E                     u7491:
 14343   00576E  EFDD  F02B         	goto	l1183
 14344   005772                     u7490:
 14345   005772  0EFF               	movlw	255
 14346   005774  1420               	andwf	___flmul@grs^0,w,c
 14347   005776  6E1A               	movwf	??___flmul^0,c
 14348   005778  0EFF               	movlw	255
 14349   00577A  1421               	andwf	(___flmul@grs+1)^0,w,c
 14350   00577C  6E1B               	movwf	(??___flmul+1)^0,c
 14351   00577E  0EFF               	movlw	255
 14352   005780  1422               	andwf	(___flmul@grs+2)^0,w,c
 14353   005782  6E1C               	movwf	(??___flmul+2)^0,c
 14354   005784  0E7F               	movlw	127
 14355   005786  1423               	andwf	(___flmul@grs+3)^0,w,c
 14356   005788  6E1D               	movwf	(??___flmul+3)^0,c
 14357   00578A  501A               	movf	??___flmul^0,w,c
 14358   00578C  101B               	iorwf	(??___flmul+1)^0,w,c
 14359   00578E  101C               	iorwf	(??___flmul+2)^0,w,c
 14360   005790  101D               	iorwf	(??___flmul+3)^0,w,c
 14361   005792  B4D8               	btfsc	status,2,c
 14362   005794  EFCE  F02B         	goto	u7501
 14363   005798  EFD0  F02B         	goto	u7500
 14364   00579C                     u7501:
 14365   00579C  EFD4  F02B         	goto	l1184
 14366   0057A0                     u7500:
 14367   0057A0                     l7471:
 14368   0057A0  0E01               	movlw	1
 14369   0057A2  6E1F               	movwf	___flmul@aexp^0,c
 14370   0057A4  EFDD  F02B         	goto	l1183
 14371   0057A8                     l1184:
 14372   0057A8  A025               	btfss	___flmul@prod^0,0,c
 14373   0057AA  EFD9  F02B         	goto	u7511
 14374   0057AE  EFDB  F02B         	goto	u7510
 14375   0057B2                     u7511:
 14376   0057B2  EFDD  F02B         	goto	l1183
 14377   0057B6                     u7510:
 14378   0057B6  EFD0  F02B         	goto	l7471
 14379   0057BA                     l1183:
 14380   0057BA  501F               	movf	___flmul@aexp^0,w,c
 14381   0057BC  B4D8               	btfsc	status,2,c
 14382   0057BE  EFE3  F02B         	goto	u7521
 14383   0057C2  EFE5  F02B         	goto	u7520
 14384   0057C6                     u7521:
 14385   0057C6  EF09  F02C         	goto	l7483
 14386   0057CA                     u7520:
 14387   0057CA  0E01               	movlw	1
 14388   0057CC  2625               	addwf	___flmul@prod^0,f,c
 14389   0057CE  0E00               	movlw	0
 14390   0057D0  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14391   0057D2  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14392   0057D4  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14393   0057D6  A028               	btfss	(___flmul@prod+3)^0,0,c
 14394   0057D8  EFF0  F02B         	goto	u7531
 14395   0057DC  EFF2  F02B         	goto	u7530
 14396   0057E0                     u7531:
 14397   0057E0  EF09  F02C         	goto	l7483
 14398   0057E4                     u7530:
 14399   0057E4  C025  F01A         	movff	___flmul@prod,??___flmul
 14400   0057E8  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
 14401   0057EC  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
 14402   0057F0  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
 14403   0057F4  341D               	rlcf	(??___flmul+3)^0,w,c
 14404   0057F6  321D               	rrcf	(??___flmul+3)^0,f,c
 14405   0057F8  321C               	rrcf	(??___flmul+2)^0,f,c
 14406   0057FA  321B               	rrcf	(??___flmul+1)^0,f,c
 14407   0057FC  321A               	rrcf	??___flmul^0,f,c
 14408   0057FE  C01A  F025         	movff	??___flmul,___flmul@prod
 14409   005802  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
 14410   005806  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
 14411   00580A  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
 14412   00580E  4A29               	infsnz	___flmul@temp^0,f,c
 14413   005810  2A2A               	incf	(___flmul@temp+1)^0,f,c
 14414   005812                     l7483:
 14415   005812  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 14416   005814  EF14  F02C         	goto	u7541
 14417   005818  502A               	movf	(___flmul@temp+1)^0,w,c
 14418   00581A  E108               	bnz	u7540
 14419   00581C  2829               	incf	___flmul@temp^0,w,c
 14420   00581E  A0D8               	btfss	status,0,c
 14421   005820  EF14  F02C         	goto	u7541
 14422   005824  EF16  F02C         	goto	u7540
 14423   005828                     u7541:
 14424   005828  EF20  F02C         	goto	l7487
 14425   00582C                     u7540:
 14426   00582C  0E00               	movlw	0
 14427   00582E  6E25               	movwf	___flmul@prod^0,c
 14428   005830  0E00               	movlw	0
 14429   005832  6E26               	movwf	(___flmul@prod+1)^0,c
 14430   005834  0E80               	movlw	128
 14431   005836  6E27               	movwf	(___flmul@prod+2)^0,c
 14432   005838  0E7F               	movlw	127
 14433   00583A  6E28               	movwf	(___flmul@prod+3)^0,c
 14434   00583C  EF4E  F02C         	goto	l7499
 14435   005840                     l7487:
 14436   005840  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 14437   005842  EF2D  F02C         	goto	u7550
 14438   005846  502A               	movf	(___flmul@temp+1)^0,w,c
 14439   005848  E106               	bnz	u7551
 14440   00584A  0429               	decf	___flmul@temp^0,w,c
 14441   00584C  B0D8               	btfsc	status,0,c
 14442   00584E  EF2B  F02C         	goto	u7551
 14443   005852  EF2D  F02C         	goto	u7550
 14444   005856                     u7551:
 14445   005856  EF39  F02C         	goto	l1191
 14446   00585A                     u7550:
 14447   00585A  0E00               	movlw	0
 14448   00585C  6E25               	movwf	___flmul@prod^0,c
 14449   00585E  0E00               	movlw	0
 14450   005860  6E26               	movwf	(___flmul@prod+1)^0,c
 14451   005862  0E00               	movlw	0
 14452   005864  6E27               	movwf	(___flmul@prod+2)^0,c
 14453   005866  0E00               	movlw	0
 14454   005868  6E28               	movwf	(___flmul@prod+3)^0,c
 14455   00586A  0E00               	movlw	0
 14456   00586C  6E1E               	movwf	___flmul@sign^0,c
 14457   00586E  EF4E  F02C         	goto	l7499
 14458   005872                     l1191:
 14459   005872  C029  F024         	movff	___flmul@temp,___flmul@bexp
 14460   005876  0EFF               	movlw	255
 14461   005878  1625               	andwf	___flmul@prod^0,f,c
 14462   00587A  0EFF               	movlw	255
 14463   00587C  1626               	andwf	(___flmul@prod+1)^0,f,c
 14464   00587E  0E7F               	movlw	127
 14465   005880  1627               	andwf	(___flmul@prod+2)^0,f,c
 14466   005882  0E00               	movlw	0
 14467   005884  1628               	andwf	(___flmul@prod+3)^0,f,c
 14468   005886  A024               	btfss	___flmul@bexp^0,0,c
 14469   005888  EF48  F02C         	goto	u7561
 14470   00588C  EF4A  F02C         	goto	u7560
 14471   005890                     u7561:
 14472   005890  EF4B  F02C         	goto	l7497
 14473   005894                     u7560:
 14474   005894  8E27               	bsf	(___flmul@prod+2)^0,7,c
 14475   005896                     l7497:
 14476   005896  90D8               	bcf	status,0,c
 14477   005898  3024               	rrcf	___flmul@bexp^0,w,c
 14478   00589A  6E28               	movwf	(___flmul@prod+3)^0,c
 14479   00589C                     l7499:
 14480   00589C  501E               	movf	___flmul@sign^0,w,c
 14481   00589E  1228               	iorwf	(___flmul@prod+3)^0,f,c
 14482   0058A0  C025  F012         	movff	___flmul@prod,?___flmul
 14483   0058A4  C026  F013         	movff	___flmul@prod+1,?___flmul+1
 14484   0058A8  C027  F014         	movff	___flmul@prod+2,?___flmul+2
 14485   0058AC  C028  F015         	movff	___flmul@prod+3,?___flmul+3
 14486   0058B0                     l1178:
 14487   0058B0  0012               	return		;funcret
 14488   0058B2                     __end_of___flmul:
 14489                           	callstack 0
 14490                           
 14491 ;; *************** function ___xxtofl *****************
 14492 ;; Defined at:
 14493 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 14494 ;; Parameters:    Size  Location     Type
 14495 ;;  sign            1    wreg     unsigned char 
 14496 ;;  val             4    1[COMRAM] long 
 14497 ;; Auto vars:     Size  Location     Type
 14498 ;;  sign            1    9[COMRAM] unsigned char 
 14499 ;;  arg             4   11[COMRAM] unsigned long 
 14500 ;;  exp             1   10[COMRAM] unsigned char 
 14501 ;; Return value:  Size  Location     Type
 14502 ;;                  4    1[COMRAM] unsigned char 
 14503 ;; Registers used:
 14504 ;;		wreg, status,2, status,0
 14505 ;; Tracked objects:
 14506 ;;		On entry : 0/0
 14507 ;;		On exit  : 0/0
 14508 ;;		Unchanged: 0/0
 14509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14510 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14511 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14512 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14513 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14514 ;;Total ram usage:       14 bytes
 14515 ;; Hardware stack levels used: 1
 14516 ;; Hardware stack levels required when called: 2
 14517 ;; This function calls:
 14518 ;;		Nothing
 14519 ;; This function is called by:
 14520 ;;		_decide_action
 14521 ;;		_powf
 14522 ;; This function uses a non-reentrant model
 14523 ;;
 14524                           
 14525                           	psect	text42
 14526   0067BE                     __ptext42:
 14527                           	callstack 0
 14528   0067BE                     ___xxtofl:
 14529                           	callstack 26
 14530                           
 14531                           ;incstack = 0
 14532                           ;___xxtofl@sign stored from wreg
 14533   0067BE  6E0A               	movwf	___xxtofl@sign^0,c
 14534   0067C0  500A               	movf	___xxtofl@sign^0,w,c
 14535   0067C2  B4D8               	btfsc	status,2,c
 14536   0067C4  EFE6  F033         	goto	u5391
 14537   0067C8  EFE8  F033         	goto	u5390
 14538   0067CC                     u5391:
 14539   0067CC  EF0A  F034         	goto	l1215
 14540   0067D0                     u5390:
 14541   0067D0  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 14542   0067D2  EFEF  F033         	goto	u5400
 14543   0067D6  EFED  F033         	goto	u5401
 14544   0067DA                     u5401:
 14545   0067DA  EF0A  F034         	goto	l1215
 14546   0067DE                     u5400:
 14547   0067DE  C002  F006         	movff	___xxtofl@val,??___xxtofl
 14548   0067E2  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
 14549   0067E6  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
 14550   0067EA  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
 14551   0067EE  1E06               	comf	??___xxtofl^0,f,c
 14552   0067F0  1E07               	comf	(??___xxtofl+1)^0,f,c
 14553   0067F2  1E08               	comf	(??___xxtofl+2)^0,f,c
 14554   0067F4  1E09               	comf	(??___xxtofl+3)^0,f,c
 14555   0067F6  2A06               	incf	??___xxtofl^0,f,c
 14556   0067F8  0E00               	movlw	0
 14557   0067FA  2207               	addwfc	(??___xxtofl+1)^0,f,c
 14558   0067FC  2208               	addwfc	(??___xxtofl+2)^0,f,c
 14559   0067FE  2209               	addwfc	(??___xxtofl+3)^0,f,c
 14560   006800  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
 14561   006804  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
 14562   006808  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
 14563   00680C  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
 14564   006810  EF12  F034         	goto	l5531
 14565   006814                     l1215:
 14566   006814  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
 14567   006818  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14568   00681C  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14569   006820  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14570   006824                     l5531:
 14571   006824  5002               	movf	___xxtofl@val^0,w,c
 14572   006826  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 14573   006828  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 14574   00682A  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 14575   00682C  A4D8               	btfss	status,2,c
 14576   00682E  EF1B  F034         	goto	u5411
 14577   006832  EF1D  F034         	goto	u5410
 14578   006836                     u5411:
 14579   006836  EF27  F034         	goto	l5537
 14580   00683A                     u5410:
 14581   00683A  0E00               	movlw	0
 14582   00683C  6E02               	movwf	?___xxtofl^0,c
 14583   00683E  0E00               	movlw	0
 14584   006840  6E03               	movwf	(?___xxtofl+1)^0,c
 14585   006842  0E00               	movlw	0
 14586   006844  6E04               	movwf	(?___xxtofl+2)^0,c
 14587   006846  0E00               	movlw	0
 14588   006848  6E05               	movwf	(?___xxtofl+3)^0,c
 14589   00684A  EFB8  F034         	goto	l1218
 14590   00684E                     l5537:
 14591   00684E  0E96               	movlw	150
 14592   006850  6E0B               	movwf	___xxtofl@exp^0,c
 14593   006852  EF31  F034         	goto	l5541
 14594   006856                     l5539:
 14595   006856  2A0B               	incf	___xxtofl@exp^0,f,c
 14596   006858  90D8               	bcf	status,0,c
 14597   00685A  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 14598   00685C  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 14599   00685E  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 14600   006860  320C               	rrcf	___xxtofl@arg^0,f,c
 14601   006862                     l5541:
 14602   006862  0E00               	movlw	0
 14603   006864  140C               	andwf	___xxtofl@arg^0,w,c
 14604   006866  6E06               	movwf	??___xxtofl^0,c
 14605   006868  0E00               	movlw	0
 14606   00686A  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 14607   00686C  6E07               	movwf	(??___xxtofl+1)^0,c
 14608   00686E  0E00               	movlw	0
 14609   006870  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 14610   006872  6E08               	movwf	(??___xxtofl+2)^0,c
 14611   006874  0EFE               	movlw	254
 14612   006876  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 14613   006878  6E09               	movwf	(??___xxtofl+3)^0,c
 14614   00687A  5006               	movf	??___xxtofl^0,w,c
 14615   00687C  1007               	iorwf	(??___xxtofl+1)^0,w,c
 14616   00687E  1008               	iorwf	(??___xxtofl+2)^0,w,c
 14617   006880  1009               	iorwf	(??___xxtofl+3)^0,w,c
 14618   006882  A4D8               	btfss	status,2,c
 14619   006884  EF46  F034         	goto	u5421
 14620   006888  EF48  F034         	goto	u5420
 14621   00688C                     u5421:
 14622   00688C  EF2B  F034         	goto	l5539
 14623   006890                     u5420:
 14624   006890  EF56  F034         	goto	l1222
 14625   006894                     l5543:
 14626   006894  2A0B               	incf	___xxtofl@exp^0,f,c
 14627   006896  0E01               	movlw	1
 14628   006898  260C               	addwf	___xxtofl@arg^0,f,c
 14629   00689A  0E00               	movlw	0
 14630   00689C  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 14631   00689E  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 14632   0068A0  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 14633   0068A2  90D8               	bcf	status,0,c
 14634   0068A4  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 14635   0068A6  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 14636   0068A8  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 14637   0068AA  320C               	rrcf	___xxtofl@arg^0,f,c
 14638   0068AC                     l1222:
 14639   0068AC  0E00               	movlw	0
 14640   0068AE  140C               	andwf	___xxtofl@arg^0,w,c
 14641   0068B0  6E06               	movwf	??___xxtofl^0,c
 14642   0068B2  0E00               	movlw	0
 14643   0068B4  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 14644   0068B6  6E07               	movwf	(??___xxtofl+1)^0,c
 14645   0068B8  0E00               	movlw	0
 14646   0068BA  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 14647   0068BC  6E08               	movwf	(??___xxtofl+2)^0,c
 14648   0068BE  0EFF               	movlw	255
 14649   0068C0  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 14650   0068C2  6E09               	movwf	(??___xxtofl+3)^0,c
 14651   0068C4  5006               	movf	??___xxtofl^0,w,c
 14652   0068C6  1007               	iorwf	(??___xxtofl+1)^0,w,c
 14653   0068C8  1008               	iorwf	(??___xxtofl+2)^0,w,c
 14654   0068CA  1009               	iorwf	(??___xxtofl+3)^0,w,c
 14655   0068CC  A4D8               	btfss	status,2,c
 14656   0068CE  EF6B  F034         	goto	u5431
 14657   0068D2  EF6D  F034         	goto	u5430
 14658   0068D6                     u5431:
 14659   0068D6  EF4A  F034         	goto	l5543
 14660   0068DA                     u5430:
 14661   0068DA  EF75  F034         	goto	l5551
 14662   0068DE                     l5549:
 14663   0068DE  060B               	decf	___xxtofl@exp^0,f,c
 14664   0068E0  90D8               	bcf	status,0,c
 14665   0068E2  360C               	rlcf	___xxtofl@arg^0,f,c
 14666   0068E4  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 14667   0068E6  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 14668   0068E8  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 14669   0068EA                     l5551:
 14670   0068EA  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 14671   0068EC  EF7A  F034         	goto	u5441
 14672   0068F0  EF7C  F034         	goto	u5440
 14673   0068F4                     u5441:
 14674   0068F4  EF84  F034         	goto	l1229
 14675   0068F8                     u5440:
 14676   0068F8  0E02               	movlw	2
 14677   0068FA  600B               	cpfslt	___xxtofl@exp^0,c
 14678   0068FC  EF82  F034         	goto	u5451
 14679   006900  EF84  F034         	goto	u5450
 14680   006904                     u5451:
 14681   006904  EF6F  F034         	goto	l5549
 14682   006908                     u5450:
 14683   006908                     l1229:
 14684   006908  B00B               	btfsc	___xxtofl@exp^0,0,c
 14685   00690A  EF89  F034         	goto	u5461
 14686   00690E  EF8B  F034         	goto	u5460
 14687   006912                     u5461:
 14688   006912  EF8C  F034         	goto	l5557
 14689   006916                     u5460:
 14690   006916  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 14691   006918                     l5557:
 14692   006918  90D8               	bcf	status,0,c
 14693   00691A  320B               	rrcf	___xxtofl@exp^0,f,c
 14694   00691C  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
 14695   006920  6A07               	clrf	(??___xxtofl+1)^0,c
 14696   006922  6A08               	clrf	(??___xxtofl+2)^0,c
 14697   006924  6A09               	clrf	(??___xxtofl+3)^0,c
 14698   006926  C006  F009         	movff	??___xxtofl,??___xxtofl+3
 14699   00692A  6A08               	clrf	(??___xxtofl+2)^0,c
 14700   00692C  6A07               	clrf	(??___xxtofl+1)^0,c
 14701   00692E  6A06               	clrf	??___xxtofl^0,c
 14702   006930  5006               	movf	??___xxtofl^0,w,c
 14703   006932  120C               	iorwf	___xxtofl@arg^0,f,c
 14704   006934  5007               	movf	(??___xxtofl+1)^0,w,c
 14705   006936  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 14706   006938  5008               	movf	(??___xxtofl+2)^0,w,c
 14707   00693A  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 14708   00693C  5009               	movf	(??___xxtofl+3)^0,w,c
 14709   00693E  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 14710   006940  500A               	movf	___xxtofl@sign^0,w,c
 14711   006942  B4D8               	btfsc	status,2,c
 14712   006944  EFA6  F034         	goto	u5471
 14713   006948  EFA8  F034         	goto	u5470
 14714   00694C                     u5471:
 14715   00694C  EFB0  F034         	goto	l5567
 14716   006950                     u5470:
 14717   006950  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 14718   006952  EFAF  F034         	goto	u5480
 14719   006956  EFAD  F034         	goto	u5481
 14720   00695A                     u5481:
 14721   00695A  EFB0  F034         	goto	l5567
 14722   00695E                     u5480:
 14723   00695E  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 14724   006960                     l5567:
 14725   006960  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
 14726   006964  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
 14727   006968  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
 14728   00696C  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
 14729   006970                     l1218:
 14730   006970  0012               	return		;funcret
 14731   006972                     __end_of___xxtofl:
 14732                           	callstack 0
 14733                           
 14734 ;; *************** function ___flsub *****************
 14735 ;; Defined at:
 14736 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 14737 ;; Parameters:    Size  Location     Type
 14738 ;;  b               4   67[COMRAM] unsigned char 
 14739 ;;  a               4   71[COMRAM] unsigned char 
 14740 ;; Auto vars:     Size  Location     Type
 14741 ;;		None
 14742 ;; Return value:  Size  Location     Type
 14743 ;;                  4   67[COMRAM] unsigned char 
 14744 ;; Registers used:
 14745 ;;		wreg, status,2, status,0, cstack
 14746 ;; Tracked objects:
 14747 ;;		On entry : 0/0
 14748 ;;		On exit  : 0/0
 14749 ;;		Unchanged: 0/0
 14750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14751 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14754 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14755 ;;Total ram usage:        8 bytes
 14756 ;; Hardware stack levels used: 1
 14757 ;; Hardware stack levels required when called: 3
 14758 ;; This function calls:
 14759 ;;		___fladd
 14760 ;; This function is called by:
 14761 ;;		_decide_action
 14762 ;;		_efgtoa
 14763 ;;		_powf
 14764 ;; This function uses a non-reentrant model
 14765 ;;
 14766                           
 14767                           	psect	text43
 14768   007D7A                     __ptext43:
 14769                           	callstack 0
 14770   007D7A                     ___flsub:
 14771                           	callstack 23
 14772   007D7A  0E00               	movlw	0
 14773   007D7C  1A48               	xorwf	___flsub@a^0,f,c
 14774   007D7E  0E00               	movlw	0
 14775   007D80  1A49               	xorwf	(___flsub@a+1)^0,f,c
 14776   007D82  0E00               	movlw	0
 14777   007D84  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 14778   007D86  0E80               	movlw	128
 14779   007D88  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 14780   007D8A  C044  F002         	movff	___flsub@b,___fladd@b
 14781   007D8E  C045  F003         	movff	___flsub@b+1,___fladd@b+1
 14782   007D92  C046  F004         	movff	___flsub@b+2,___fladd@b+2
 14783   007D96  C047  F005         	movff	___flsub@b+3,___fladd@b+3
 14784   007D9A  C048  F006         	movff	___flsub@a,___fladd@a
 14785   007D9E  C049  F007         	movff	___flsub@a+1,___fladd@a+1
 14786   007DA2  C04A  F008         	movff	___flsub@a+2,___fladd@a+2
 14787   007DA6  C04B  F009         	movff	___flsub@a+3,___fladd@a+3
 14788   007DAA  ECE4  F027         	call	___fladd	;wreg free
 14789   007DAE  C002  F044         	movff	?___fladd,?___flsub
 14790   007DB2  C003  F045         	movff	?___fladd+1,?___flsub+1
 14791   007DB6  C004  F046         	movff	?___fladd+2,?___flsub+2
 14792   007DBA  C005  F047         	movff	?___fladd+3,?___flsub+3
 14793   007DBE  0012               	return		;funcret
 14794   007DC0                     __end_of___flsub:
 14795                           	callstack 0
 14796                           
 14797 ;; *************** function ___fladd *****************
 14798 ;; Defined at:
 14799 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 14800 ;; Parameters:    Size  Location     Type
 14801 ;;  b               4    1[COMRAM] unsigned char 
 14802 ;;  a               4    5[COMRAM] unsigned char 
 14803 ;; Auto vars:     Size  Location     Type
 14804 ;;  grs             1   16[COMRAM] unsigned char 
 14805 ;;  bexp            1   15[COMRAM] unsigned char 
 14806 ;;  aexp            1   14[COMRAM] unsigned char 
 14807 ;;  signs           1   13[COMRAM] unsigned char 
 14808 ;; Return value:  Size  Location     Type
 14809 ;;                  4    1[COMRAM] unsigned char 
 14810 ;; Registers used:
 14811 ;;		wreg, status,2, status,0
 14812 ;; Tracked objects:
 14813 ;;		On entry : 0/0
 14814 ;;		On exit  : 0/0
 14815 ;;		Unchanged: 0/0
 14816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14817 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14818 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14819 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14820 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14821 ;;Total ram usage:       16 bytes
 14822 ;; Hardware stack levels used: 1
 14823 ;; Hardware stack levels required when called: 2
 14824 ;; This function calls:
 14825 ;;		Nothing
 14826 ;; This function is called by:
 14827 ;;		_decide_action
 14828 ;;		___flsub
 14829 ;;		_efgtoa
 14830 ;;		_powf
 14831 ;; This function uses a non-reentrant model
 14832 ;;
 14833                           
 14834                           	psect	text44
 14835   004FC8                     __ptext44:
 14836                           	callstack 0
 14837   004FC8                     ___fladd:
 14838                           	callstack 23
 14839   004FC8  5005               	movf	(___fladd@b+3)^0,w,c
 14840   004FCA  0B80               	andlw	128
 14841   004FCC  6E0E               	movwf	___fladd@signs^0,c
 14842   004FCE  5005               	movf	(___fladd@b+3)^0,w,c
 14843   004FD0  2405               	addwf	(___fladd@b+3)^0,w,c
 14844   004FD2  6E10               	movwf	___fladd@bexp^0,c
 14845   004FD4  AE04               	btfss	(___fladd@b+2)^0,7,c
 14846   004FD6  EFEF  F027         	goto	u6751
 14847   004FDA  EFF1  F027         	goto	u6750
 14848   004FDE                     u6751:
 14849   004FDE  EFF2  F027         	goto	l7033
 14850   004FE2                     u6750:
 14851   004FE2  8010               	bsf	___fladd@bexp^0,0,c
 14852   004FE4                     l7033:
 14853   004FE4  5010               	movf	___fladd@bexp^0,w,c
 14854   004FE6  B4D8               	btfsc	status,2,c
 14855   004FE8  EFF8  F027         	goto	u6761
 14856   004FEC  EFFA  F027         	goto	u6760
 14857   004FF0                     u6761:
 14858   004FF0  EF0F  F028         	goto	l7043
 14859   004FF4                     u6760:
 14860   004FF4  2810               	incf	___fladd@bexp^0,w,c
 14861   004FF6  A4D8               	btfss	status,2,c
 14862   004FF8  EF00  F028         	goto	u6771
 14863   004FFC  EF02  F028         	goto	u6770
 14864   005000                     u6771:
 14865   005000  EF0A  F028         	goto	l7039
 14866   005004                     u6770:
 14867   005004  0E00               	movlw	0
 14868   005006  6E02               	movwf	___fladd@b^0,c
 14869   005008  0E00               	movlw	0
 14870   00500A  6E03               	movwf	(___fladd@b+1)^0,c
 14871   00500C  0E00               	movlw	0
 14872   00500E  6E04               	movwf	(___fladd@b+2)^0,c
 14873   005010  0E00               	movlw	0
 14874   005012  6E05               	movwf	(___fladd@b+3)^0,c
 14875   005014                     l7039:
 14876   005014  8E04               	bsf	(___fladd@b+2)^0,7,c
 14877   005016  0E00               	movlw	0
 14878   005018  6E05               	movwf	(___fladd@b+3)^0,c
 14879   00501A  EF17  F028         	goto	l7045
 14880   00501E                     l7043:
 14881   00501E  0E00               	movlw	0
 14882   005020  6E02               	movwf	___fladd@b^0,c
 14883   005022  0E00               	movlw	0
 14884   005024  6E03               	movwf	(___fladd@b+1)^0,c
 14885   005026  0E00               	movlw	0
 14886   005028  6E04               	movwf	(___fladd@b+2)^0,c
 14887   00502A  0E00               	movlw	0
 14888   00502C  6E05               	movwf	(___fladd@b+3)^0,c
 14889   00502E                     l7045:
 14890   00502E  5009               	movf	(___fladd@a+3)^0,w,c
 14891   005030  0B80               	andlw	128
 14892   005032  6E0F               	movwf	___fladd@aexp^0,c
 14893   005034  500E               	movf	___fladd@signs^0,w,c
 14894   005036  180F               	xorwf	___fladd@aexp^0,w,c
 14895   005038  B4D8               	btfsc	status,2,c
 14896   00503A  EF21  F028         	goto	u6781
 14897   00503E  EF23  F028         	goto	u6780
 14898   005042                     u6781:
 14899   005042  EF24  F028         	goto	l7051
 14900   005046                     u6780:
 14901   005046  8C0E               	bsf	___fladd@signs^0,6,c
 14902   005048                     l7051:
 14903   005048  5009               	movf	(___fladd@a+3)^0,w,c
 14904   00504A  2409               	addwf	(___fladd@a+3)^0,w,c
 14905   00504C  6E0F               	movwf	___fladd@aexp^0,c
 14906   00504E  AE08               	btfss	(___fladd@a+2)^0,7,c
 14907   005050  EF2C  F028         	goto	u6791
 14908   005054  EF2E  F028         	goto	u6790
 14909   005058                     u6791:
 14910   005058  EF2F  F028         	goto	l7057
 14911   00505C                     u6790:
 14912   00505C  800F               	bsf	___fladd@aexp^0,0,c
 14913   00505E                     l7057:
 14914   00505E  500F               	movf	___fladd@aexp^0,w,c
 14915   005060  B4D8               	btfsc	status,2,c
 14916   005062  EF35  F028         	goto	u6801
 14917   005066  EF37  F028         	goto	u6800
 14918   00506A                     u6801:
 14919   00506A  EF4C  F028         	goto	l7067
 14920   00506E                     u6800:
 14921   00506E  280F               	incf	___fladd@aexp^0,w,c
 14922   005070  A4D8               	btfss	status,2,c
 14923   005072  EF3D  F028         	goto	u6811
 14924   005076  EF3F  F028         	goto	u6810
 14925   00507A                     u6811:
 14926   00507A  EF47  F028         	goto	l7063
 14927   00507E                     u6810:
 14928   00507E  0E00               	movlw	0
 14929   005080  6E06               	movwf	___fladd@a^0,c
 14930   005082  0E00               	movlw	0
 14931   005084  6E07               	movwf	(___fladd@a+1)^0,c
 14932   005086  0E00               	movlw	0
 14933   005088  6E08               	movwf	(___fladd@a+2)^0,c
 14934   00508A  0E00               	movlw	0
 14935   00508C  6E09               	movwf	(___fladd@a+3)^0,c
 14936   00508E                     l7063:
 14937   00508E  8E08               	bsf	(___fladd@a+2)^0,7,c
 14938   005090  0E00               	movlw	0
 14939   005092  6E09               	movwf	(___fladd@a+3)^0,c
 14940   005094  EF54  F028         	goto	l7069
 14941   005098                     l7067:
 14942   005098  0E00               	movlw	0
 14943   00509A  6E06               	movwf	___fladd@a^0,c
 14944   00509C  0E00               	movlw	0
 14945   00509E  6E07               	movwf	(___fladd@a+1)^0,c
 14946   0050A0  0E00               	movlw	0
 14947   0050A2  6E08               	movwf	(___fladd@a+2)^0,c
 14948   0050A4  0E00               	movlw	0
 14949   0050A6  6E09               	movwf	(___fladd@a+3)^0,c
 14950   0050A8                     l7069:
 14951   0050A8  5010               	movf	___fladd@bexp^0,w,c
 14952   0050AA  5C0F               	subwf	___fladd@aexp^0,w,c
 14953   0050AC  B0D8               	btfsc	status,0,c
 14954   0050AE  EF5B  F028         	goto	u6821
 14955   0050B2  EF5D  F028         	goto	u6820
 14956   0050B6                     u6821:
 14957   0050B6  EF84  F028         	goto	l7105
 14958   0050BA                     u6820:
 14959   0050BA  AC0E               	btfss	___fladd@signs^0,6,c
 14960   0050BC  EF62  F028         	goto	u6831
 14961   0050C0  EF64  F028         	goto	u6830
 14962   0050C4                     u6831:
 14963   0050C4  EF66  F028         	goto	l7075
 14964   0050C8                     u6830:
 14965   0050C8  0E80               	movlw	128
 14966   0050CA  1A0E               	xorwf	___fladd@signs^0,f,c
 14967   0050CC                     l7075:
 14968   0050CC  C010  F011         	movff	___fladd@bexp,___fladd@grs
 14969   0050D0  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 14970   0050D4  C011  F00F         	movff	___fladd@grs,___fladd@aexp
 14971   0050D8  C002  F011         	movff	___fladd@b,___fladd@grs
 14972   0050DC  C006  F002         	movff	___fladd@a,___fladd@b
 14973   0050E0  C011  F006         	movff	___fladd@grs,___fladd@a
 14974   0050E4  C003  F011         	movff	___fladd@b+1,___fladd@grs
 14975   0050E8  C007  F003         	movff	___fladd@a+1,___fladd@b+1
 14976   0050EC  C011  F007         	movff	___fladd@grs,___fladd@a+1
 14977   0050F0  C004  F011         	movff	___fladd@b+2,___fladd@grs
 14978   0050F4  C008  F004         	movff	___fladd@a+2,___fladd@b+2
 14979   0050F8  C011  F008         	movff	___fladd@grs,___fladd@a+2
 14980   0050FC  C005  F011         	movff	___fladd@b+3,___fladd@grs
 14981   005100  C009  F005         	movff	___fladd@a+3,___fladd@b+3
 14982   005104  C011  F009         	movff	___fladd@grs,___fladd@a+3
 14983   005108                     l7105:
 14984   005108  0E00               	movlw	0
 14985   00510A  6E11               	movwf	___fladd@grs^0,c
 14986   00510C  5010               	movf	___fladd@bexp^0,w,c
 14987   00510E  C00F  F00A         	movff	___fladd@aexp,??___fladd
 14988   005112  6A0B               	clrf	(??___fladd+1)^0,c
 14989   005114  5E0A               	subwf	??___fladd^0,f,c
 14990   005116  0E00               	movlw	0
 14991   005118  5A0B               	subwfb	(??___fladd+1)^0,f,c
 14992   00511A  BE0B               	btfsc	(??___fladd+1)^0,7,c
 14993   00511C  EF99  F028         	goto	u6841
 14994   005120  500B               	movf	(??___fladd+1)^0,w,c
 14995   005122  E109               	bnz	u6840
 14996   005124  0E1A               	movlw	26
 14997   005126  5C0A               	subwf	??___fladd^0,w,c
 14998   005128  A0D8               	btfss	status,0,c
 14999   00512A  EF99  F028         	goto	u6841
 15000   00512E  EF9B  F028         	goto	u6840
 15001   005132                     u6841:
 15002   005132  EFD2  F028         	goto	l1089
 15003   005136                     u6840:
 15004   005136  5002               	movf	___fladd@b^0,w,c
 15005   005138  1003               	iorwf	(___fladd@b+1)^0,w,c
 15006   00513A  1004               	iorwf	(___fladd@b+2)^0,w,c
 15007   00513C  1005               	iorwf	(___fladd@b+3)^0,w,c
 15008   00513E  A4D8               	btfss	status,2,c
 15009   005140  EFA4  F028         	goto	u6851
 15010   005144  EFA7  F028         	goto	u6850
 15011   005148                     u6851:
 15012   005148  0E01               	movlw	1
 15013   00514A  EFA8  F028         	goto	u6860
 15014   00514E                     u6850:
 15015   00514E  0E00               	movlw	0
 15016   005150                     u6860:
 15017   005150  6E11               	movwf	___fladd@grs^0,c
 15018   005152  0E00               	movlw	0
 15019   005154  6E02               	movwf	___fladd@b^0,c
 15020   005156  0E00               	movlw	0
 15021   005158  6E03               	movwf	(___fladd@b+1)^0,c
 15022   00515A  0E00               	movlw	0
 15023   00515C  6E04               	movwf	(___fladd@b+2)^0,c
 15024   00515E  0E00               	movlw	0
 15025   005160  6E05               	movwf	(___fladd@b+3)^0,c
 15026   005162  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 15027   005166  EFDB  F028         	goto	l1088
 15028   00516A                     l1090:
 15029   00516A  A011               	btfss	___fladd@grs^0,0,c
 15030   00516C  EFBA  F028         	goto	u6871
 15031   005170  EFBC  F028         	goto	u6870
 15032   005174                     u6871:
 15033   005174  EFC2  F028         	goto	l7117
 15034   005178                     u6870:
 15035   005178  90D8               	bcf	status,0,c
 15036   00517A  3011               	rrcf	___fladd@grs^0,w,c
 15037   00517C  0901               	iorlw	1
 15038   00517E  6E11               	movwf	___fladd@grs^0,c
 15039   005180  EFC4  F028         	goto	l7119
 15040   005184                     l7117:
 15041   005184  90D8               	bcf	status,0,c
 15042   005186  3211               	rrcf	___fladd@grs^0,f,c
 15043   005188                     l7119:
 15044   005188  A002               	btfss	___fladd@b^0,0,c
 15045   00518A  EFC9  F028         	goto	u6881
 15046   00518E  EFCB  F028         	goto	u6880
 15047   005192                     u6881:
 15048   005192  EFCC  F028         	goto	l7123
 15049   005196                     u6880:
 15050   005196  8E11               	bsf	___fladd@grs^0,7,c
 15051   005198                     l7123:
 15052   005198  3405               	rlcf	(___fladd@b+3)^0,w,c
 15053   00519A  3205               	rrcf	(___fladd@b+3)^0,f,c
 15054   00519C  3204               	rrcf	(___fladd@b+2)^0,f,c
 15055   00519E  3203               	rrcf	(___fladd@b+1)^0,f,c
 15056   0051A0  3202               	rrcf	___fladd@b^0,f,c
 15057   0051A2  2A10               	incf	___fladd@bexp^0,f,c
 15058   0051A4                     l1089:
 15059   0051A4  500F               	movf	___fladd@aexp^0,w,c
 15060   0051A6  5C10               	subwf	___fladd@bexp^0,w,c
 15061   0051A8  A0D8               	btfss	status,0,c
 15062   0051AA  EFD9  F028         	goto	u6891
 15063   0051AE  EFDB  F028         	goto	u6890
 15064   0051B2                     u6891:
 15065   0051B2  EFB5  F028         	goto	l1090
 15066   0051B6                     u6890:
 15067   0051B6                     l1088:
 15068   0051B6  BC0E               	btfsc	___fladd@signs^0,6,c
 15069   0051B8  EFE0  F028         	goto	u6901
 15070   0051BC  EFE2  F028         	goto	u6900
 15071   0051C0                     u6901:
 15072   0051C0  EF22  F029         	goto	l7151
 15073   0051C4                     u6900:
 15074   0051C4  5010               	movf	___fladd@bexp^0,w,c
 15075   0051C6  A4D8               	btfss	status,2,c
 15076   0051C8  EFE8  F028         	goto	u6911
 15077   0051CC  EFEA  F028         	goto	u6910
 15078   0051D0                     u6911:
 15079   0051D0  EFF4  F028         	goto	l7133
 15080   0051D4                     u6910:
 15081   0051D4  0E00               	movlw	0
 15082   0051D6  6E02               	movwf	?___fladd^0,c
 15083   0051D8  0E00               	movlw	0
 15084   0051DA  6E03               	movwf	(?___fladd+1)^0,c
 15085   0051DC  0E00               	movlw	0
 15086   0051DE  6E04               	movwf	(?___fladd+2)^0,c
 15087   0051E0  0E00               	movlw	0
 15088   0051E2  6E05               	movwf	(?___fladd+3)^0,c
 15089   0051E4  EF43  F02A         	goto	l1097
 15090   0051E8                     l7133:
 15091   0051E8  5006               	movf	___fladd@a^0,w,c
 15092   0051EA  2602               	addwf	___fladd@b^0,f,c
 15093   0051EC  5007               	movf	(___fladd@a+1)^0,w,c
 15094   0051EE  2203               	addwfc	(___fladd@b+1)^0,f,c
 15095   0051F0  5008               	movf	(___fladd@a+2)^0,w,c
 15096   0051F2  2204               	addwfc	(___fladd@b+2)^0,f,c
 15097   0051F4  5009               	movf	(___fladd@a+3)^0,w,c
 15098   0051F6  2205               	addwfc	(___fladd@b+3)^0,f,c
 15099   0051F8  A005               	btfss	(___fladd@b+3)^0,0,c
 15100   0051FA  EF01  F029         	goto	u6921
 15101   0051FE  EF03  F029         	goto	u6920
 15102   005202                     u6921:
 15103   005202  EFAF  F029         	goto	l7187
 15104   005206                     u6920:
 15105   005206  A011               	btfss	___fladd@grs^0,0,c
 15106   005208  EF08  F029         	goto	u6931
 15107   00520C  EF0A  F029         	goto	u6930
 15108   005210                     u6931:
 15109   005210  EF10  F029         	goto	l7141
 15110   005214                     u6930:
 15111   005214  90D8               	bcf	status,0,c
 15112   005216  3011               	rrcf	___fladd@grs^0,w,c
 15113   005218  0901               	iorlw	1
 15114   00521A  6E11               	movwf	___fladd@grs^0,c
 15115   00521C  EF12  F029         	goto	l7143
 15116   005220                     l7141:
 15117   005220  90D8               	bcf	status,0,c
 15118   005222  3211               	rrcf	___fladd@grs^0,f,c
 15119   005224                     l7143:
 15120   005224  A002               	btfss	___fladd@b^0,0,c
 15121   005226  EF17  F029         	goto	u6941
 15122   00522A  EF19  F029         	goto	u6940
 15123   00522E                     u6941:
 15124   00522E  EF1A  F029         	goto	l7147
 15125   005232                     u6940:
 15126   005232  8E11               	bsf	___fladd@grs^0,7,c
 15127   005234                     l7147:
 15128   005234  3405               	rlcf	(___fladd@b+3)^0,w,c
 15129   005236  3205               	rrcf	(___fladd@b+3)^0,f,c
 15130   005238  3204               	rrcf	(___fladd@b+2)^0,f,c
 15131   00523A  3203               	rrcf	(___fladd@b+1)^0,f,c
 15132   00523C  3202               	rrcf	___fladd@b^0,f,c
 15133   00523E  2A10               	incf	___fladd@bexp^0,f,c
 15134   005240  EFAF  F029         	goto	l7187
 15135   005244                     l7151:
 15136   005244  5006               	movf	___fladd@a^0,w,c
 15137   005246  5C02               	subwf	___fladd@b^0,w,c
 15138   005248  5007               	movf	(___fladd@a+1)^0,w,c
 15139   00524A  5803               	subwfb	(___fladd@b+1)^0,w,c
 15140   00524C  5008               	movf	(___fladd@a+2)^0,w,c
 15141   00524E  5804               	subwfb	(___fladd@b+2)^0,w,c
 15142   005250  5005               	movf	(___fladd@b+3)^0,w,c
 15143   005252  0A80               	xorlw	128
 15144   005254  6E0A               	movwf	??___fladd^0,c
 15145   005256  5009               	movf	(___fladd@a+3)^0,w,c
 15146   005258  0A80               	xorlw	128
 15147   00525A  580A               	subwfb	??___fladd^0,w,c
 15148   00525C  B0D8               	btfsc	status,0,c
 15149   00525E  EF33  F029         	goto	u6951
 15150   005262  EF35  F029         	goto	u6950
 15151   005266                     u6951:
 15152   005266  EF60  F029         	goto	l7161
 15153   00526A                     u6950:
 15154   00526A  5002               	movf	___fladd@b^0,w,c
 15155   00526C  5C06               	subwf	___fladd@a^0,w,c
 15156   00526E  6E0A               	movwf	??___fladd^0,c
 15157   005270  5003               	movf	(___fladd@b+1)^0,w,c
 15158   005272  5807               	subwfb	(___fladd@a+1)^0,w,c
 15159   005274  6E0B               	movwf	(??___fladd+1)^0,c
 15160   005276  5004               	movf	(___fladd@b+2)^0,w,c
 15161   005278  5808               	subwfb	(___fladd@a+2)^0,w,c
 15162   00527A  6E0C               	movwf	(??___fladd+2)^0,c
 15163   00527C  5005               	movf	(___fladd@b+3)^0,w,c
 15164   00527E  5809               	subwfb	(___fladd@a+3)^0,w,c
 15165   005280  6E0D               	movwf	(??___fladd+3)^0,c
 15166   005282  0EFF               	movlw	255
 15167   005284  240A               	addwf	??___fladd^0,w,c
 15168   005286  6E02               	movwf	___fladd@b^0,c
 15169   005288  0EFF               	movlw	255
 15170   00528A  200B               	addwfc	(??___fladd+1)^0,w,c
 15171   00528C  6E03               	movwf	(___fladd@b+1)^0,c
 15172   00528E  0EFF               	movlw	255
 15173   005290  200C               	addwfc	(??___fladd+2)^0,w,c
 15174   005292  6E04               	movwf	(___fladd@b+2)^0,c
 15175   005294  0EFF               	movlw	255
 15176   005296  200D               	addwfc	(??___fladd+3)^0,w,c
 15177   005298  6E05               	movwf	(___fladd@b+3)^0,c
 15178   00529A  0E80               	movlw	128
 15179   00529C  1A0E               	xorwf	___fladd@signs^0,f,c
 15180   00529E  6C11               	negf	___fladd@grs^0,c
 15181   0052A0  5011               	movf	___fladd@grs^0,w,c
 15182   0052A2  A4D8               	btfss	status,2,c
 15183   0052A4  EF56  F029         	goto	u6961
 15184   0052A8  EF58  F029         	goto	u6960
 15185   0052AC                     u6961:
 15186   0052AC  EF68  F029         	goto	l1105
 15187   0052B0                     u6960:
 15188   0052B0  0E01               	movlw	1
 15189   0052B2  2602               	addwf	___fladd@b^0,f,c
 15190   0052B4  0E00               	movlw	0
 15191   0052B6  2203               	addwfc	(___fladd@b+1)^0,f,c
 15192   0052B8  2204               	addwfc	(___fladd@b+2)^0,f,c
 15193   0052BA  2205               	addwfc	(___fladd@b+3)^0,f,c
 15194   0052BC  EF68  F029         	goto	l1105
 15195   0052C0                     l7161:
 15196   0052C0  5006               	movf	___fladd@a^0,w,c
 15197   0052C2  5E02               	subwf	___fladd@b^0,f,c
 15198   0052C4  5007               	movf	(___fladd@a+1)^0,w,c
 15199   0052C6  5A03               	subwfb	(___fladd@b+1)^0,f,c
 15200   0052C8  5008               	movf	(___fladd@a+2)^0,w,c
 15201   0052CA  5A04               	subwfb	(___fladd@b+2)^0,f,c
 15202   0052CC  5009               	movf	(___fladd@a+3)^0,w,c
 15203   0052CE  5A05               	subwfb	(___fladd@b+3)^0,f,c
 15204   0052D0                     l1105:
 15205   0052D0  5002               	movf	___fladd@b^0,w,c
 15206   0052D2  1003               	iorwf	(___fladd@b+1)^0,w,c
 15207   0052D4  1004               	iorwf	(___fladd@b+2)^0,w,c
 15208   0052D6  1005               	iorwf	(___fladd@b+3)^0,w,c
 15209   0052D8  A4D8               	btfss	status,2,c
 15210   0052DA  EF71  F029         	goto	u6971
 15211   0052DE  EF73  F029         	goto	u6970
 15212   0052E2                     u6971:
 15213   0052E2  EFA8  F029         	goto	l7185
 15214   0052E6                     u6970:
 15215   0052E6  5011               	movf	___fladd@grs^0,w,c
 15216   0052E8  A4D8               	btfss	status,2,c
 15217   0052EA  EF79  F029         	goto	u6981
 15218   0052EE  EF7B  F029         	goto	u6980
 15219   0052F2                     u6981:
 15220   0052F2  EFA8  F029         	goto	l7185
 15221   0052F6                     u6980:
 15222   0052F6  0E00               	movlw	0
 15223   0052F8  6E02               	movwf	?___fladd^0,c
 15224   0052FA  0E00               	movlw	0
 15225   0052FC  6E03               	movwf	(?___fladd+1)^0,c
 15226   0052FE  0E00               	movlw	0
 15227   005300  6E04               	movwf	(?___fladd+2)^0,c
 15228   005302  0E00               	movlw	0
 15229   005304  6E05               	movwf	(?___fladd+3)^0,c
 15230   005306  EF43  F02A         	goto	l1097
 15231   00530A                     l7169:
 15232   00530A  90D8               	bcf	status,0,c
 15233   00530C  3602               	rlcf	___fladd@b^0,f,c
 15234   00530E  3603               	rlcf	(___fladd@b+1)^0,f,c
 15235   005310  3604               	rlcf	(___fladd@b+2)^0,f,c
 15236   005312  3605               	rlcf	(___fladd@b+3)^0,f,c
 15237   005314  AE11               	btfss	___fladd@grs^0,7,c
 15238   005316  EF8F  F029         	goto	u6991
 15239   00531A  EF91  F029         	goto	u6990
 15240   00531E                     u6991:
 15241   00531E  EF92  F029         	goto	l7175
 15242   005322                     u6990:
 15243   005322  8002               	bsf	___fladd@b^0,0,c
 15244   005324                     l7175:
 15245   005324  A011               	btfss	___fladd@grs^0,0,c
 15246   005326  EF97  F029         	goto	u7001
 15247   00532A  EF99  F029         	goto	u7000
 15248   00532E                     u7001:
 15249   00532E  EF9D  F029         	goto	l7179
 15250   005332                     u7000:
 15251   005332  80D8               	bsf	status,0,c
 15252   005334  3611               	rlcf	___fladd@grs^0,f,c
 15253   005336  EF9F  F029         	goto	l7181
 15254   00533A                     l7179:
 15255   00533A  90D8               	bcf	status,0,c
 15256   00533C  3611               	rlcf	___fladd@grs^0,f,c
 15257   00533E                     l7181:
 15258   00533E  5010               	movf	___fladd@bexp^0,w,c
 15259   005340  B4D8               	btfsc	status,2,c
 15260   005342  EFA5  F029         	goto	u7011
 15261   005346  EFA7  F029         	goto	u7010
 15262   00534A                     u7011:
 15263   00534A  EFA8  F029         	goto	l7185
 15264   00534E                     u7010:
 15265   00534E  0610               	decf	___fladd@bexp^0,f,c
 15266   005350                     l7185:
 15267   005350  AE04               	btfss	(___fladd@b+2)^0,7,c
 15268   005352  EFAD  F029         	goto	u7021
 15269   005356  EFAF  F029         	goto	u7020
 15270   00535A                     u7021:
 15271   00535A  EF85  F029         	goto	l7169
 15272   00535E                     u7020:
 15273   00535E                     l7187:
 15274   00535E  0E00               	movlw	0
 15275   005360  6E0F               	movwf	___fladd@aexp^0,c
 15276   005362  AE11               	btfss	___fladd@grs^0,7,c
 15277   005364  EFB6  F029         	goto	u7031
 15278   005368  EFB8  F029         	goto	u7030
 15279   00536C                     u7031:
 15280   00536C  EFD0  F029         	goto	l1114
 15281   005370                     u7030:
 15282   005370  C011  F00A         	movff	___fladd@grs,??___fladd
 15283   005374  0E7F               	movlw	127
 15284   005376  160A               	andwf	??___fladd^0,f,c
 15285   005378  B4D8               	btfsc	status,2,c
 15286   00537A  EFC1  F029         	goto	u7041
 15287   00537E  EFC3  F029         	goto	u7040
 15288   005382                     u7041:
 15289   005382  EFC7  F029         	goto	l1115
 15290   005386                     u7040:
 15291   005386                     l7193:
 15292   005386  0E01               	movlw	1
 15293   005388  6E0F               	movwf	___fladd@aexp^0,c
 15294   00538A  EFD0  F029         	goto	l1114
 15295   00538E                     l1115:
 15296   00538E  A002               	btfss	___fladd@b^0,0,c
 15297   005390  EFCC  F029         	goto	u7051
 15298   005394  EFCE  F029         	goto	u7050
 15299   005398                     u7051:
 15300   005398  EFD0  F029         	goto	l1114
 15301   00539C                     u7050:
 15302   00539C  EFC3  F029         	goto	l7193
 15303   0053A0                     l1114:
 15304   0053A0  500F               	movf	___fladd@aexp^0,w,c
 15305   0053A2  B4D8               	btfsc	status,2,c
 15306   0053A4  EFD6  F029         	goto	u7061
 15307   0053A8  EFD8  F029         	goto	u7060
 15308   0053AC                     u7061:
 15309   0053AC  EF03  F02A         	goto	l7205
 15310   0053B0                     u7060:
 15311   0053B0  0E01               	movlw	1
 15312   0053B2  2602               	addwf	___fladd@b^0,f,c
 15313   0053B4  0E00               	movlw	0
 15314   0053B6  2203               	addwfc	(___fladd@b+1)^0,f,c
 15315   0053B8  2204               	addwfc	(___fladd@b+2)^0,f,c
 15316   0053BA  2205               	addwfc	(___fladd@b+3)^0,f,c
 15317   0053BC  A005               	btfss	(___fladd@b+3)^0,0,c
 15318   0053BE  EFE3  F029         	goto	u7071
 15319   0053C2  EFE5  F029         	goto	u7070
 15320   0053C6                     u7071:
 15321   0053C6  EF03  F02A         	goto	l7205
 15322   0053CA                     u7070:
 15323   0053CA  C002  F00A         	movff	___fladd@b,??___fladd
 15324   0053CE  C003  F00B         	movff	___fladd@b+1,??___fladd+1
 15325   0053D2  C004  F00C         	movff	___fladd@b+2,??___fladd+2
 15326   0053D6  C005  F00D         	movff	___fladd@b+3,??___fladd+3
 15327   0053DA  340D               	rlcf	(??___fladd+3)^0,w,c
 15328   0053DC  320D               	rrcf	(??___fladd+3)^0,f,c
 15329   0053DE  320C               	rrcf	(??___fladd+2)^0,f,c
 15330   0053E0  320B               	rrcf	(??___fladd+1)^0,f,c
 15331   0053E2  320A               	rrcf	??___fladd^0,f,c
 15332   0053E4  C00A  F002         	movff	??___fladd,___fladd@b
 15333   0053E8  C00B  F003         	movff	??___fladd+1,___fladd@b+1
 15334   0053EC  C00C  F004         	movff	??___fladd+2,___fladd@b+2
 15335   0053F0  C00D  F005         	movff	??___fladd+3,___fladd@b+3
 15336   0053F4  2810               	incf	___fladd@bexp^0,w,c
 15337   0053F6  B4D8               	btfsc	status,2,c
 15338   0053F8  EF00  F02A         	goto	u7081
 15339   0053FC  EF02  F02A         	goto	u7080
 15340   005400                     u7081:
 15341   005400  EF03  F02A         	goto	l7205
 15342   005404                     u7080:
 15343   005404  2A10               	incf	___fladd@bexp^0,f,c
 15344   005406                     l7205:
 15345   005406  2810               	incf	___fladd@bexp^0,w,c
 15346   005408  B4D8               	btfsc	status,2,c
 15347   00540A  EF09  F02A         	goto	u7091
 15348   00540E  EF0B  F02A         	goto	u7090
 15349   005412                     u7091:
 15350   005412  EF13  F02A         	goto	l7209
 15351   005416                     u7090:
 15352   005416  5010               	movf	___fladd@bexp^0,w,c
 15353   005418  A4D8               	btfss	status,2,c
 15354   00541A  EF11  F02A         	goto	u7101
 15355   00541E  EF13  F02A         	goto	u7100
 15356   005422                     u7101:
 15357   005422  EF25  F02A         	goto	l7213
 15358   005426                     u7100:
 15359   005426                     l7209:
 15360   005426  0E00               	movlw	0
 15361   005428  6E02               	movwf	___fladd@b^0,c
 15362   00542A  0E00               	movlw	0
 15363   00542C  6E03               	movwf	(___fladd@b+1)^0,c
 15364   00542E  0E00               	movlw	0
 15365   005430  6E04               	movwf	(___fladd@b+2)^0,c
 15366   005432  0E00               	movlw	0
 15367   005434  6E05               	movwf	(___fladd@b+3)^0,c
 15368   005436  5010               	movf	___fladd@bexp^0,w,c
 15369   005438  A4D8               	btfss	status,2,c
 15370   00543A  EF21  F02A         	goto	u7111
 15371   00543E  EF23  F02A         	goto	u7110
 15372   005442                     u7111:
 15373   005442  EF25  F02A         	goto	l7213
 15374   005446                     u7110:
 15375   005446  0E00               	movlw	0
 15376   005448  6E0E               	movwf	___fladd@signs^0,c
 15377   00544A                     l7213:
 15378   00544A  A010               	btfss	___fladd@bexp^0,0,c
 15379   00544C  EF2A  F02A         	goto	u7121
 15380   005450  EF2C  F02A         	goto	u7120
 15381   005454                     u7121:
 15382   005454  EF2F  F02A         	goto	l7217
 15383   005458                     u7120:
 15384   005458  8E04               	bsf	(___fladd@b+2)^0,7,c
 15385   00545A  EF30  F02A         	goto	l7219
 15386   00545E                     l7217:
 15387   00545E  9E04               	bcf	(___fladd@b+2)^0,7,c
 15388   005460                     l7219:
 15389   005460  90D8               	bcf	status,0,c
 15390   005462  3010               	rrcf	___fladd@bexp^0,w,c
 15391   005464  6E05               	movwf	(___fladd@b+3)^0,c
 15392   005466  AE0E               	btfss	___fladd@signs^0,7,c
 15393   005468  EF38  F02A         	goto	u7131
 15394   00546C  EF3A  F02A         	goto	u7130
 15395   005470                     u7131:
 15396   005470  EF3B  F02A         	goto	l7225
 15397   005474                     u7130:
 15398   005474  8E05               	bsf	(___fladd@b+3)^0,7,c
 15399   005476                     l7225:
 15400   005476  C002  F002         	movff	___fladd@b,?___fladd
 15401   00547A  C003  F003         	movff	___fladd@b+1,?___fladd+1
 15402   00547E  C004  F004         	movff	___fladd@b+2,?___fladd+2
 15403   005482  C005  F005         	movff	___fladd@b+3,?___fladd+3
 15404   005486                     l1097:
 15405   005486  0012               	return		;funcret
 15406   005488                     __end_of___fladd:
 15407                           	callstack 0
 15408                           
 15409 ;; *************** function ___flneg *****************
 15410 ;; Defined at:
 15411 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
 15412 ;; Parameters:    Size  Location     Type
 15413 ;;  f1              4    1[COMRAM] unsigned char 
 15414 ;; Auto vars:     Size  Location     Type
 15415 ;;		None
 15416 ;; Return value:  Size  Location     Type
 15417 ;;                  4    1[COMRAM] unsigned char 
 15418 ;; Registers used:
 15419 ;;		wreg, status,2, status,0
 15420 ;; Tracked objects:
 15421 ;;		On entry : 0/0
 15422 ;;		On exit  : 0/0
 15423 ;;		Unchanged: 0/0
 15424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15429 ;;Total ram usage:        4 bytes
 15430 ;; Hardware stack levels used: 1
 15431 ;; Hardware stack levels required when called: 2
 15432 ;; This function calls:
 15433 ;;		Nothing
 15434 ;; This function is called by:
 15435 ;;		_efgtoa
 15436 ;;		_powf
 15437 ;; This function uses a non-reentrant model
 15438 ;;
 15439                           
 15440                           	psect	text45
 15441   007EC0                     __ptext45:
 15442                           	callstack 0
 15443   007EC0                     ___flneg:
 15444                           	callstack 24
 15445   007EC0  5002               	movf	___flneg@f1^0,w,c
 15446   007EC2  1003               	iorwf	(___flneg@f1+1)^0,w,c
 15447   007EC4  1004               	iorwf	(___flneg@f1+2)^0,w,c
 15448   007EC6  1005               	iorwf	(___flneg@f1+3)^0,w,c
 15449   007EC8  B4D8               	btfsc	status,2,c
 15450   007ECA  EF69  F03F         	goto	u7651
 15451   007ECE  EF6B  F03F         	goto	u7650
 15452   007ED2                     u7651:
 15453   007ED2  EF73  F03F         	goto	l7553
 15454   007ED6                     u7650:
 15455   007ED6  0E00               	movlw	0
 15456   007ED8  1A02               	xorwf	___flneg@f1^0,f,c
 15457   007EDA  0E00               	movlw	0
 15458   007EDC  1A03               	xorwf	(___flneg@f1+1)^0,f,c
 15459   007EDE  0E00               	movlw	0
 15460   007EE0  1A04               	xorwf	(___flneg@f1+2)^0,f,c
 15461   007EE2  0E80               	movlw	128
 15462   007EE4  1A05               	xorwf	(___flneg@f1+3)^0,f,c
 15463   007EE6                     l7553:
 15464   007EE6  C002  F002         	movff	___flneg@f1,?___flneg
 15465   007EEA  C003  F003         	movff	___flneg@f1+1,?___flneg+1
 15466   007EEE  C004  F004         	movff	___flneg@f1+2,?___flneg+2
 15467   007EF2  C005  F005         	movff	___flneg@f1+3,?___flneg+3
 15468   007EF6  0012               	return		;funcret
 15469   007EF8                     __end_of___flneg:
 15470                           	callstack 0
 15471                           
 15472 ;; *************** function ___flge *****************
 15473 ;; Defined at:
 15474 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 15475 ;; Parameters:    Size  Location     Type
 15476 ;;  ff1             4   75[COMRAM] unsigned char 
 15477 ;;  ff2             4   79[COMRAM] unsigned char 
 15478 ;; Auto vars:     Size  Location     Type
 15479 ;;		None
 15480 ;; Return value:  Size  Location     Type
 15481 ;;		None               void
 15482 ;; Registers used:
 15483 ;;		wreg, status,2, status,0
 15484 ;; Tracked objects:
 15485 ;;		On entry : 0/0
 15486 ;;		On exit  : 0/0
 15487 ;;		Unchanged: 0/0
 15488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15489 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15491 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15492 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15493 ;;Total ram usage:       12 bytes
 15494 ;; Hardware stack levels used: 1
 15495 ;; Hardware stack levels required when called: 2
 15496 ;; This function calls:
 15497 ;;		Nothing
 15498 ;; This function is called by:
 15499 ;;		_decide_action
 15500 ;;		_efgtoa
 15501 ;;		_powf
 15502 ;; This function uses a non-reentrant model
 15503 ;;
 15504                           
 15505                           	psect	text46
 15506   006CEA                     __ptext46:
 15507                           	callstack 0
 15508   006CEA                     ___flge:
 15509                           	callstack 24
 15510   006CEA  0E00               	movlw	0
 15511   006CEC  144C               	andwf	___flge@ff1^0,w,c
 15512   006CEE  6E54               	movwf	??___flge^0,c
 15513   006CF0  0E00               	movlw	0
 15514   006CF2  144D               	andwf	(___flge@ff1+1)^0,w,c
 15515   006CF4  6E55               	movwf	(??___flge+1)^0,c
 15516   006CF6  0E80               	movlw	128
 15517   006CF8  144E               	andwf	(___flge@ff1+2)^0,w,c
 15518   006CFA  6E56               	movwf	(??___flge+2)^0,c
 15519   006CFC  0E7F               	movlw	127
 15520   006CFE  144F               	andwf	(___flge@ff1+3)^0,w,c
 15521   006D00  6E57               	movwf	(??___flge+3)^0,c
 15522   006D02  5054               	movf	??___flge^0,w,c
 15523   006D04  1055               	iorwf	(??___flge+1)^0,w,c
 15524   006D06  1056               	iorwf	(??___flge+2)^0,w,c
 15525   006D08  1057               	iorwf	(??___flge+3)^0,w,c
 15526   006D0A  A4D8               	btfss	status,2,c
 15527   006D0C  EF8A  F036         	goto	u7601
 15528   006D10  EF8C  F036         	goto	u7600
 15529   006D14                     u7601:
 15530   006D14  EF94  F036         	goto	l7531
 15531   006D18                     u7600:
 15532   006D18  0E00               	movlw	0
 15533   006D1A  6E4C               	movwf	___flge@ff1^0,c
 15534   006D1C  0E00               	movlw	0
 15535   006D1E  6E4D               	movwf	(___flge@ff1+1)^0,c
 15536   006D20  0E00               	movlw	0
 15537   006D22  6E4E               	movwf	(___flge@ff1+2)^0,c
 15538   006D24  0E00               	movlw	0
 15539   006D26  6E4F               	movwf	(___flge@ff1+3)^0,c
 15540   006D28                     l7531:
 15541   006D28  0E00               	movlw	0
 15542   006D2A  1450               	andwf	___flge@ff2^0,w,c
 15543   006D2C  6E54               	movwf	??___flge^0,c
 15544   006D2E  0E00               	movlw	0
 15545   006D30  1451               	andwf	(___flge@ff2+1)^0,w,c
 15546   006D32  6E55               	movwf	(??___flge+1)^0,c
 15547   006D34  0E80               	movlw	128
 15548   006D36  1452               	andwf	(___flge@ff2+2)^0,w,c
 15549   006D38  6E56               	movwf	(??___flge+2)^0,c
 15550   006D3A  0E7F               	movlw	127
 15551   006D3C  1453               	andwf	(___flge@ff2+3)^0,w,c
 15552   006D3E  6E57               	movwf	(??___flge+3)^0,c
 15553   006D40  5054               	movf	??___flge^0,w,c
 15554   006D42  1055               	iorwf	(??___flge+1)^0,w,c
 15555   006D44  1056               	iorwf	(??___flge+2)^0,w,c
 15556   006D46  1057               	iorwf	(??___flge+3)^0,w,c
 15557   006D48  A4D8               	btfss	status,2,c
 15558   006D4A  EFA9  F036         	goto	u7611
 15559   006D4E  EFAB  F036         	goto	u7610
 15560   006D52                     u7611:
 15561   006D52  EFB3  F036         	goto	l7535
 15562   006D56                     u7610:
 15563   006D56  0E00               	movlw	0
 15564   006D58  6E50               	movwf	___flge@ff2^0,c
 15565   006D5A  0E00               	movlw	0
 15566   006D5C  6E51               	movwf	(___flge@ff2+1)^0,c
 15567   006D5E  0E00               	movlw	0
 15568   006D60  6E52               	movwf	(___flge@ff2+2)^0,c
 15569   006D62  0E00               	movlw	0
 15570   006D64  6E53               	movwf	(___flge@ff2+3)^0,c
 15571   006D66                     l7535:
 15572   006D66  AE4F               	btfss	(___flge@ff1+3)^0,7,c
 15573   006D68  EFB8  F036         	goto	u7621
 15574   006D6C  EFBA  F036         	goto	u7620
 15575   006D70                     u7621:
 15576   006D70  EFC3  F036         	goto	l7539
 15577   006D74                     u7620:
 15578   006D74  6C4C               	negf	___flge@ff1^0,c
 15579   006D76  1E4D               	comf	(___flge@ff1+1)^0,f,c
 15580   006D78  B0D8               	btfsc	status,0,c
 15581   006D7A  2A4D               	incf	(___flge@ff1+1)^0,f,c
 15582   006D7C  1E4E               	comf	(___flge@ff1+2)^0,f,c
 15583   006D7E  B0D8               	btfsc	status,0,c
 15584   006D80  2A4E               	incf	(___flge@ff1+2)^0,f,c
 15585   006D82  0E80               	movlw	128
 15586   006D84  564F               	subfwb	(___flge@ff1+3)^0,f,c
 15587   006D86                     l7539:
 15588   006D86  AE53               	btfss	(___flge@ff2+3)^0,7,c
 15589   006D88  EFC8  F036         	goto	u7631
 15590   006D8C  EFCA  F036         	goto	u7630
 15591   006D90                     u7631:
 15592   006D90  EFD3  F036         	goto	l825
 15593   006D94                     u7630:
 15594   006D94  6C50               	negf	___flge@ff2^0,c
 15595   006D96  1E51               	comf	(___flge@ff2+1)^0,f,c
 15596   006D98  B0D8               	btfsc	status,0,c
 15597   006D9A  2A51               	incf	(___flge@ff2+1)^0,f,c
 15598   006D9C  1E52               	comf	(___flge@ff2+2)^0,f,c
 15599   006D9E  B0D8               	btfsc	status,0,c
 15600   006DA0  2A52               	incf	(___flge@ff2+2)^0,f,c
 15601   006DA2  0E80               	movlw	128
 15602   006DA4  5653               	subfwb	(___flge@ff2+3)^0,f,c
 15603   006DA6                     l825:
 15604   006DA6  0E00               	movlw	0
 15605   006DA8  1A4C               	xorwf	___flge@ff1^0,f,c
 15606   006DAA  0E00               	movlw	0
 15607   006DAC  1A4D               	xorwf	(___flge@ff1+1)^0,f,c
 15608   006DAE  0E00               	movlw	0
 15609   006DB0  1A4E               	xorwf	(___flge@ff1+2)^0,f,c
 15610   006DB2  0E80               	movlw	128
 15611   006DB4  1A4F               	xorwf	(___flge@ff1+3)^0,f,c
 15612   006DB6  0E00               	movlw	0
 15613   006DB8  1A50               	xorwf	___flge@ff2^0,f,c
 15614   006DBA  0E00               	movlw	0
 15615   006DBC  1A51               	xorwf	(___flge@ff2+1)^0,f,c
 15616   006DBE  0E00               	movlw	0
 15617   006DC0  1A52               	xorwf	(___flge@ff2+2)^0,f,c
 15618   006DC2  0E80               	movlw	128
 15619   006DC4  1A53               	xorwf	(___flge@ff2+3)^0,f,c
 15620   006DC6  5050               	movf	___flge@ff2^0,w,c
 15621   006DC8  5C4C               	subwf	___flge@ff1^0,w,c
 15622   006DCA  5051               	movf	(___flge@ff2+1)^0,w,c
 15623   006DCC  584D               	subwfb	(___flge@ff1+1)^0,w,c
 15624   006DCE  5052               	movf	(___flge@ff2+2)^0,w,c
 15625   006DD0  584E               	subwfb	(___flge@ff1+2)^0,w,c
 15626   006DD2  5053               	movf	(___flge@ff2+3)^0,w,c
 15627   006DD4  584F               	subwfb	(___flge@ff1+3)^0,w,c
 15628   006DD6  B0D8               	btfsc	status,0,c
 15629   006DD8  EFF0  F036         	goto	u7641
 15630   006DDC  EFF2  F036         	goto	u7640
 15631   006DE0                     u7641:
 15632   006DE0  EFF5  F036         	goto	l7545
 15633   006DE4                     u7640:
 15634   006DE4  90D8               	bcf	status,0,c
 15635   006DE6  EFF6  F036         	goto	l830
 15636   006DEA                     l7545:
 15637   006DEA  80D8               	bsf	status,0,c
 15638   006DEC                     l830:
 15639   006DEC  0012               	return		;funcret
 15640   006DEE                     __end_of___flge:
 15641                           	callstack 0
 15642                           
 15643 ;; *************** function ___fldiv *****************
 15644 ;; Defined at:
 15645 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 15646 ;; Parameters:    Size  Location     Type
 15647 ;;  b               4   42[COMRAM] unsigned char 
 15648 ;;  a               4   46[COMRAM] unsigned char 
 15649 ;; Auto vars:     Size  Location     Type
 15650 ;;  grs             4   61[COMRAM] unsigned long 
 15651 ;;  rem             4   54[COMRAM] unsigned long 
 15652 ;;  new_exp         2   59[COMRAM] short 
 15653 ;;  aexp            1   66[COMRAM] unsigned char 
 15654 ;;  bexp            1   65[COMRAM] unsigned char 
 15655 ;;  sign            1   58[COMRAM] unsigned char 
 15656 ;; Return value:  Size  Location     Type
 15657 ;;                  4   42[COMRAM] unsigned char 
 15658 ;; Registers used:
 15659 ;;		wreg, status,2, status,0
 15660 ;; Tracked objects:
 15661 ;;		On entry : 0/0
 15662 ;;		On exit  : 0/0
 15663 ;;		Unchanged: 0/0
 15664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15665 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15666 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15667 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15668 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15669 ;;Total ram usage:       25 bytes
 15670 ;; Hardware stack levels used: 1
 15671 ;; Hardware stack levels required when called: 2
 15672 ;; This function calls:
 15673 ;;		Nothing
 15674 ;; This function is called by:
 15675 ;;		_decide_action
 15676 ;;		_efgtoa
 15677 ;;		_powf
 15678 ;; This function uses a non-reentrant model
 15679 ;;
 15680                           
 15681                           	psect	text47
 15682   005C90                     __ptext47:
 15683                           	callstack 0
 15684   005C90                     ___fldiv:
 15685                           	callstack 24
 15686   005C90  502E               	movf	(___fldiv@b+3)^0,w,c
 15687   005C92  0B80               	andlw	128
 15688   005C94  6E3B               	movwf	___fldiv@sign^0,c
 15689   005C96  502E               	movf	(___fldiv@b+3)^0,w,c
 15690   005C98  242E               	addwf	(___fldiv@b+3)^0,w,c
 15691   005C9A  6E42               	movwf	___fldiv@bexp^0,c
 15692   005C9C  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 15693   005C9E  EF53  F02E         	goto	u7151
 15694   005CA2  EF55  F02E         	goto	u7150
 15695   005CA6                     u7151:
 15696   005CA6  EF56  F02E         	goto	l7243
 15697   005CAA                     u7150:
 15698   005CAA  8042               	bsf	___fldiv@bexp^0,0,c
 15699   005CAC                     l7243:
 15700   005CAC  5042               	movf	___fldiv@bexp^0,w,c
 15701   005CAE  B4D8               	btfsc	status,2,c
 15702   005CB0  EF5C  F02E         	goto	u7161
 15703   005CB4  EF5E  F02E         	goto	u7160
 15704   005CB8                     u7161:
 15705   005CB8  EF73  F02E         	goto	l7253
 15706   005CBC                     u7160:
 15707   005CBC  2842               	incf	___fldiv@bexp^0,w,c
 15708   005CBE  A4D8               	btfss	status,2,c
 15709   005CC0  EF64  F02E         	goto	u7171
 15710   005CC4  EF66  F02E         	goto	u7170
 15711   005CC8                     u7171:
 15712   005CC8  EF6E  F02E         	goto	l7249
 15713   005CCC                     u7170:
 15714   005CCC  0E00               	movlw	0
 15715   005CCE  6E2B               	movwf	___fldiv@b^0,c
 15716   005CD0  0E00               	movlw	0
 15717   005CD2  6E2C               	movwf	(___fldiv@b+1)^0,c
 15718   005CD4  0E00               	movlw	0
 15719   005CD6  6E2D               	movwf	(___fldiv@b+2)^0,c
 15720   005CD8  0E00               	movlw	0
 15721   005CDA  6E2E               	movwf	(___fldiv@b+3)^0,c
 15722   005CDC                     l7249:
 15723   005CDC  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 15724   005CDE  0E00               	movlw	0
 15725   005CE0  6E2E               	movwf	(___fldiv@b+3)^0,c
 15726   005CE2  EF7B  F02E         	goto	l7255
 15727   005CE6                     l7253:
 15728   005CE6  0E00               	movlw	0
 15729   005CE8  6E2B               	movwf	___fldiv@b^0,c
 15730   005CEA  0E00               	movlw	0
 15731   005CEC  6E2C               	movwf	(___fldiv@b+1)^0,c
 15732   005CEE  0E00               	movlw	0
 15733   005CF0  6E2D               	movwf	(___fldiv@b+2)^0,c
 15734   005CF2  0E00               	movlw	0
 15735   005CF4  6E2E               	movwf	(___fldiv@b+3)^0,c
 15736   005CF6                     l7255:
 15737   005CF6  5032               	movf	(___fldiv@a+3)^0,w,c
 15738   005CF8  0B80               	andlw	128
 15739   005CFA  1A3B               	xorwf	___fldiv@sign^0,f,c
 15740   005CFC  5032               	movf	(___fldiv@a+3)^0,w,c
 15741   005CFE  2432               	addwf	(___fldiv@a+3)^0,w,c
 15742   005D00  6E43               	movwf	___fldiv@aexp^0,c
 15743   005D02  AE31               	btfss	(___fldiv@a+2)^0,7,c
 15744   005D04  EF86  F02E         	goto	u7181
 15745   005D08  EF88  F02E         	goto	u7180
 15746   005D0C                     u7181:
 15747   005D0C  EF89  F02E         	goto	l7263
 15748   005D10                     u7180:
 15749   005D10  8043               	bsf	___fldiv@aexp^0,0,c
 15750   005D12                     l7263:
 15751   005D12  5043               	movf	___fldiv@aexp^0,w,c
 15752   005D14  B4D8               	btfsc	status,2,c
 15753   005D16  EF8F  F02E         	goto	u7191
 15754   005D1A  EF91  F02E         	goto	u7190
 15755   005D1E                     u7191:
 15756   005D1E  EFA6  F02E         	goto	l7273
 15757   005D22                     u7190:
 15758   005D22  2843               	incf	___fldiv@aexp^0,w,c
 15759   005D24  A4D8               	btfss	status,2,c
 15760   005D26  EF97  F02E         	goto	u7201
 15761   005D2A  EF99  F02E         	goto	u7200
 15762   005D2E                     u7201:
 15763   005D2E  EFA1  F02E         	goto	l7269
 15764   005D32                     u7200:
 15765   005D32  0E00               	movlw	0
 15766   005D34  6E2F               	movwf	___fldiv@a^0,c
 15767   005D36  0E00               	movlw	0
 15768   005D38  6E30               	movwf	(___fldiv@a+1)^0,c
 15769   005D3A  0E00               	movlw	0
 15770   005D3C  6E31               	movwf	(___fldiv@a+2)^0,c
 15771   005D3E  0E00               	movlw	0
 15772   005D40  6E32               	movwf	(___fldiv@a+3)^0,c
 15773   005D42                     l7269:
 15774   005D42  8E31               	bsf	(___fldiv@a+2)^0,7,c
 15775   005D44  0E00               	movlw	0
 15776   005D46  6E32               	movwf	(___fldiv@a+3)^0,c
 15777   005D48  EFAE  F02E         	goto	l7275
 15778   005D4C                     l7273:
 15779   005D4C  0E00               	movlw	0
 15780   005D4E  6E2F               	movwf	___fldiv@a^0,c
 15781   005D50  0E00               	movlw	0
 15782   005D52  6E30               	movwf	(___fldiv@a+1)^0,c
 15783   005D54  0E00               	movlw	0
 15784   005D56  6E31               	movwf	(___fldiv@a+2)^0,c
 15785   005D58  0E00               	movlw	0
 15786   005D5A  6E32               	movwf	(___fldiv@a+3)^0,c
 15787   005D5C                     l7275:
 15788   005D5C  502F               	movf	___fldiv@a^0,w,c
 15789   005D5E  1030               	iorwf	(___fldiv@a+1)^0,w,c
 15790   005D60  1031               	iorwf	(___fldiv@a+2)^0,w,c
 15791   005D62  1032               	iorwf	(___fldiv@a+3)^0,w,c
 15792   005D64  A4D8               	btfss	status,2,c
 15793   005D66  EFB7  F02E         	goto	u7211
 15794   005D6A  EFB9  F02E         	goto	u7210
 15795   005D6E                     u7211:
 15796   005D6E  EFD1  F02E         	goto	l7287
 15797   005D72                     u7210:
 15798   005D72  0E00               	movlw	0
 15799   005D74  6E2B               	movwf	___fldiv@b^0,c
 15800   005D76  0E00               	movlw	0
 15801   005D78  6E2C               	movwf	(___fldiv@b+1)^0,c
 15802   005D7A  0E00               	movlw	0
 15803   005D7C  6E2D               	movwf	(___fldiv@b+2)^0,c
 15804   005D7E  0E00               	movlw	0
 15805   005D80  6E2E               	movwf	(___fldiv@b+3)^0,c
 15806   005D82  0E80               	movlw	128
 15807   005D84  122D               	iorwf	(___fldiv@b+2)^0,f,c
 15808   005D86  0E7F               	movlw	127
 15809   005D88  122E               	iorwf	(___fldiv@b+3)^0,f,c
 15810   005D8A                     l7281:
 15811   005D8A  503B               	movf	___fldiv@sign^0,w,c
 15812   005D8C  122E               	iorwf	(___fldiv@b+3)^0,f,c
 15813   005D8E  C02B  F02B         	movff	___fldiv@b,?___fldiv
 15814   005D92  C02C  F02C         	movff	___fldiv@b+1,?___fldiv+1
 15815   005D96  C02D  F02D         	movff	___fldiv@b+2,?___fldiv+2
 15816   005D9A  C02E  F02E         	movff	___fldiv@b+3,?___fldiv+3
 15817   005D9E  EF14  F030         	goto	l1142
 15818   005DA2                     l7287:
 15819   005DA2  5042               	movf	___fldiv@bexp^0,w,c
 15820   005DA4  A4D8               	btfss	status,2,c
 15821   005DA6  EFD7  F02E         	goto	u7221
 15822   005DAA  EFD9  F02E         	goto	u7220
 15823   005DAE                     u7221:
 15824   005DAE  EFE3  F02E         	goto	l7295
 15825   005DB2                     u7220:
 15826   005DB2  0E00               	movlw	0
 15827   005DB4  6E2B               	movwf	?___fldiv^0,c
 15828   005DB6  0E00               	movlw	0
 15829   005DB8  6E2C               	movwf	(?___fldiv+1)^0,c
 15830   005DBA  0E00               	movlw	0
 15831   005DBC  6E2D               	movwf	(?___fldiv+2)^0,c
 15832   005DBE  0E00               	movlw	0
 15833   005DC0  6E2E               	movwf	(?___fldiv+3)^0,c
 15834   005DC2  EF14  F030         	goto	l1142
 15835   005DC6                     l7295:
 15836   005DC6  5043               	movf	___fldiv@aexp^0,w,c
 15837   005DC8  C042  F033         	movff	___fldiv@bexp,??___fldiv
 15838   005DCC  6A34               	clrf	(??___fldiv+1)^0,c
 15839   005DCE  5E33               	subwf	??___fldiv^0,f,c
 15840   005DD0  0E00               	movlw	0
 15841   005DD2  5A34               	subwfb	(??___fldiv+1)^0,f,c
 15842   005DD4  0E7F               	movlw	127
 15843   005DD6  2433               	addwf	??___fldiv^0,w,c
 15844   005DD8  6E3C               	movwf	___fldiv@new_exp^0,c
 15845   005DDA  0E00               	movlw	0
 15846   005DDC  2034               	addwfc	(??___fldiv+1)^0,w,c
 15847   005DDE  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 15848   005DE0  C02B  F037         	movff	___fldiv@b,___fldiv@rem
 15849   005DE4  C02C  F038         	movff	___fldiv@b+1,___fldiv@rem+1
 15850   005DE8  C02D  F039         	movff	___fldiv@b+2,___fldiv@rem+2
 15851   005DEC  C02E  F03A         	movff	___fldiv@b+3,___fldiv@rem+3
 15852   005DF0  0E00               	movlw	0
 15853   005DF2  6E2B               	movwf	___fldiv@b^0,c
 15854   005DF4  0E00               	movlw	0
 15855   005DF6  6E2C               	movwf	(___fldiv@b+1)^0,c
 15856   005DF8  0E00               	movlw	0
 15857   005DFA  6E2D               	movwf	(___fldiv@b+2)^0,c
 15858   005DFC  0E00               	movlw	0
 15859   005DFE  6E2E               	movwf	(___fldiv@b+3)^0,c
 15860   005E00  0E00               	movlw	0
 15861   005E02  6E3E               	movwf	___fldiv@grs^0,c
 15862   005E04  0E00               	movlw	0
 15863   005E06  6E3F               	movwf	(___fldiv@grs+1)^0,c
 15864   005E08  0E00               	movlw	0
 15865   005E0A  6E40               	movwf	(___fldiv@grs+2)^0,c
 15866   005E0C  0E00               	movlw	0
 15867   005E0E  6E41               	movwf	(___fldiv@grs+3)^0,c
 15868   005E10  0E00               	movlw	0
 15869   005E12  6E43               	movwf	___fldiv@aexp^0,c
 15870   005E14  EF44  F02F         	goto	l1144
 15871   005E18                     l7305:
 15872   005E18  5043               	movf	___fldiv@aexp^0,w,c
 15873   005E1A  B4D8               	btfsc	status,2,c
 15874   005E1C  EF12  F02F         	goto	u7231
 15875   005E20  EF14  F02F         	goto	u7230
 15876   005E24                     u7231:
 15877   005E24  EF2B  F02F         	goto	l7313
 15878   005E28                     u7230:
 15879   005E28  90D8               	bcf	status,0,c
 15880   005E2A  3637               	rlcf	___fldiv@rem^0,f,c
 15881   005E2C  3638               	rlcf	(___fldiv@rem+1)^0,f,c
 15882   005E2E  3639               	rlcf	(___fldiv@rem+2)^0,f,c
 15883   005E30  363A               	rlcf	(___fldiv@rem+3)^0,f,c
 15884   005E32  90D8               	bcf	status,0,c
 15885   005E34  362B               	rlcf	___fldiv@b^0,f,c
 15886   005E36  362C               	rlcf	(___fldiv@b+1)^0,f,c
 15887   005E38  362D               	rlcf	(___fldiv@b+2)^0,f,c
 15888   005E3A  362E               	rlcf	(___fldiv@b+3)^0,f,c
 15889   005E3C  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 15890   005E3E  EF23  F02F         	goto	u7241
 15891   005E42  EF25  F02F         	goto	u7240
 15892   005E46                     u7241:
 15893   005E46  EF26  F02F         	goto	l1147
 15894   005E4A                     u7240:
 15895   005E4A  802B               	bsf	___fldiv@b^0,0,c
 15896   005E4C                     l1147:
 15897   005E4C  90D8               	bcf	status,0,c
 15898   005E4E  363E               	rlcf	___fldiv@grs^0,f,c
 15899   005E50  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 15900   005E52  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 15901   005E54  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 15902   005E56                     l7313:
 15903   005E56  502F               	movf	___fldiv@a^0,w,c
 15904   005E58  5C37               	subwf	___fldiv@rem^0,w,c
 15905   005E5A  5030               	movf	(___fldiv@a+1)^0,w,c
 15906   005E5C  5838               	subwfb	(___fldiv@rem+1)^0,w,c
 15907   005E5E  5031               	movf	(___fldiv@a+2)^0,w,c
 15908   005E60  5839               	subwfb	(___fldiv@rem+2)^0,w,c
 15909   005E62  5032               	movf	(___fldiv@a+3)^0,w,c
 15910   005E64  583A               	subwfb	(___fldiv@rem+3)^0,w,c
 15911   005E66  A0D8               	btfss	status,0,c
 15912   005E68  EF38  F02F         	goto	u7251
 15913   005E6C  EF3A  F02F         	goto	u7250
 15914   005E70                     u7251:
 15915   005E70  EF43  F02F         	goto	l7319
 15916   005E74                     u7250:
 15917   005E74  8C41               	bsf	(___fldiv@grs+3)^0,6,c
 15918   005E76  502F               	movf	___fldiv@a^0,w,c
 15919   005E78  5E37               	subwf	___fldiv@rem^0,f,c
 15920   005E7A  5030               	movf	(___fldiv@a+1)^0,w,c
 15921   005E7C  5A38               	subwfb	(___fldiv@rem+1)^0,f,c
 15922   005E7E  5031               	movf	(___fldiv@a+2)^0,w,c
 15923   005E80  5A39               	subwfb	(___fldiv@rem+2)^0,f,c
 15924   005E82  5032               	movf	(___fldiv@a+3)^0,w,c
 15925   005E84  5A3A               	subwfb	(___fldiv@rem+3)^0,f,c
 15926   005E86                     l7319:
 15927   005E86  2A43               	incf	___fldiv@aexp^0,f,c
 15928   005E88                     l1144:
 15929   005E88  0E19               	movlw	25
 15930   005E8A  6443               	cpfsgt	___fldiv@aexp^0,c
 15931   005E8C  EF4A  F02F         	goto	u7261
 15932   005E90  EF4C  F02F         	goto	u7260
 15933   005E94                     u7261:
 15934   005E94  EF0C  F02F         	goto	l7305
 15935   005E98                     u7260:
 15936   005E98  5037               	movf	___fldiv@rem^0,w,c
 15937   005E9A  1038               	iorwf	(___fldiv@rem+1)^0,w,c
 15938   005E9C  1039               	iorwf	(___fldiv@rem+2)^0,w,c
 15939   005E9E  103A               	iorwf	(___fldiv@rem+3)^0,w,c
 15940   005EA0  B4D8               	btfsc	status,2,c
 15941   005EA2  EF55  F02F         	goto	u7271
 15942   005EA6  EF57  F02F         	goto	u7270
 15943   005EAA                     u7271:
 15944   005EAA  EF6F  F02F         	goto	l7331
 15945   005EAE                     u7270:
 15946   005EAE  803E               	bsf	___fldiv@grs^0,0,c
 15947   005EB0  EF6F  F02F         	goto	l7331
 15948   005EB4                     l7325:
 15949   005EB4  90D8               	bcf	status,0,c
 15950   005EB6  362B               	rlcf	___fldiv@b^0,f,c
 15951   005EB8  362C               	rlcf	(___fldiv@b+1)^0,f,c
 15952   005EBA  362D               	rlcf	(___fldiv@b+2)^0,f,c
 15953   005EBC  362E               	rlcf	(___fldiv@b+3)^0,f,c
 15954   005EBE  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 15955   005EC0  EF64  F02F         	goto	u7281
 15956   005EC4  EF66  F02F         	goto	u7280
 15957   005EC8                     u7281:
 15958   005EC8  EF67  F02F         	goto	l1153
 15959   005ECC                     u7280:
 15960   005ECC  802B               	bsf	___fldiv@b^0,0,c
 15961   005ECE                     l1153:
 15962   005ECE  90D8               	bcf	status,0,c
 15963   005ED0  363E               	rlcf	___fldiv@grs^0,f,c
 15964   005ED2  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 15965   005ED4  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 15966   005ED6  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 15967   005ED8  063C               	decf	___fldiv@new_exp^0,f,c
 15968   005EDA  A0D8               	btfss	status,0,c
 15969   005EDC  063D               	decf	(___fldiv@new_exp+1)^0,f,c
 15970   005EDE                     l7331:
 15971   005EDE  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 15972   005EE0  EF74  F02F         	goto	u7291
 15973   005EE4  EF76  F02F         	goto	u7290
 15974   005EE8                     u7291:
 15975   005EE8  EF5A  F02F         	goto	l7325
 15976   005EEC                     u7290:
 15977   005EEC  0E00               	movlw	0
 15978   005EEE  6E43               	movwf	___fldiv@aexp^0,c
 15979   005EF0  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 15980   005EF2  EF7D  F02F         	goto	u7301
 15981   005EF6  EF7F  F02F         	goto	u7300
 15982   005EFA                     u7301:
 15983   005EFA  EFA3  F02F         	goto	l1155
 15984   005EFE                     u7300:
 15985   005EFE  0EFF               	movlw	255
 15986   005F00  143E               	andwf	___fldiv@grs^0,w,c
 15987   005F02  6E33               	movwf	??___fldiv^0,c
 15988   005F04  0EFF               	movlw	255
 15989   005F06  143F               	andwf	(___fldiv@grs+1)^0,w,c
 15990   005F08  6E34               	movwf	(??___fldiv+1)^0,c
 15991   005F0A  0EFF               	movlw	255
 15992   005F0C  1440               	andwf	(___fldiv@grs+2)^0,w,c
 15993   005F0E  6E35               	movwf	(??___fldiv+2)^0,c
 15994   005F10  0E7F               	movlw	127
 15995   005F12  1441               	andwf	(___fldiv@grs+3)^0,w,c
 15996   005F14  6E36               	movwf	(??___fldiv+3)^0,c
 15997   005F16  5033               	movf	??___fldiv^0,w,c
 15998   005F18  1034               	iorwf	(??___fldiv+1)^0,w,c
 15999   005F1A  1035               	iorwf	(??___fldiv+2)^0,w,c
 16000   005F1C  1036               	iorwf	(??___fldiv+3)^0,w,c
 16001   005F1E  B4D8               	btfsc	status,2,c
 16002   005F20  EF94  F02F         	goto	u7311
 16003   005F24  EF96  F02F         	goto	u7310
 16004   005F28                     u7311:
 16005   005F28  EF9A  F02F         	goto	l1156
 16006   005F2C                     u7310:
 16007   005F2C                     l7339:
 16008   005F2C  0E01               	movlw	1
 16009   005F2E  6E43               	movwf	___fldiv@aexp^0,c
 16010   005F30  EFA3  F02F         	goto	l1155
 16011   005F34                     l1156:
 16012   005F34  A02B               	btfss	___fldiv@b^0,0,c
 16013   005F36  EF9F  F02F         	goto	u7321
 16014   005F3A  EFA1  F02F         	goto	u7320
 16015   005F3E                     u7321:
 16016   005F3E  EFA3  F02F         	goto	l1155
 16017   005F42                     u7320:
 16018   005F42  EF96  F02F         	goto	l7339
 16019   005F46                     l1155:
 16020   005F46  5043               	movf	___fldiv@aexp^0,w,c
 16021   005F48  B4D8               	btfsc	status,2,c
 16022   005F4A  EFA9  F02F         	goto	u7331
 16023   005F4E  EFAB  F02F         	goto	u7330
 16024   005F52                     u7331:
 16025   005F52  EFCF  F02F         	goto	l7351
 16026   005F56                     u7330:
 16027   005F56  0E01               	movlw	1
 16028   005F58  262B               	addwf	___fldiv@b^0,f,c
 16029   005F5A  0E00               	movlw	0
 16030   005F5C  222C               	addwfc	(___fldiv@b+1)^0,f,c
 16031   005F5E  222D               	addwfc	(___fldiv@b+2)^0,f,c
 16032   005F60  222E               	addwfc	(___fldiv@b+3)^0,f,c
 16033   005F62  A02E               	btfss	(___fldiv@b+3)^0,0,c
 16034   005F64  EFB6  F02F         	goto	u7341
 16035   005F68  EFB8  F02F         	goto	u7340
 16036   005F6C                     u7341:
 16037   005F6C  EFCF  F02F         	goto	l7351
 16038   005F70                     u7340:
 16039   005F70  C02B  F033         	movff	___fldiv@b,??___fldiv
 16040   005F74  C02C  F034         	movff	___fldiv@b+1,??___fldiv+1
 16041   005F78  C02D  F035         	movff	___fldiv@b+2,??___fldiv+2
 16042   005F7C  C02E  F036         	movff	___fldiv@b+3,??___fldiv+3
 16043   005F80  3436               	rlcf	(??___fldiv+3)^0,w,c
 16044   005F82  3236               	rrcf	(??___fldiv+3)^0,f,c
 16045   005F84  3235               	rrcf	(??___fldiv+2)^0,f,c
 16046   005F86  3234               	rrcf	(??___fldiv+1)^0,f,c
 16047   005F88  3233               	rrcf	??___fldiv^0,f,c
 16048   005F8A  C033  F02B         	movff	??___fldiv,___fldiv@b
 16049   005F8E  C034  F02C         	movff	??___fldiv+1,___fldiv@b+1
 16050   005F92  C035  F02D         	movff	??___fldiv+2,___fldiv@b+2
 16051   005F96  C036  F02E         	movff	??___fldiv+3,___fldiv@b+3
 16052   005F9A  4A3C               	infsnz	___fldiv@new_exp^0,f,c
 16053   005F9C  2A3D               	incf	(___fldiv@new_exp+1)^0,f,c
 16054   005F9E                     l7351:
 16055   005F9E  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 16056   005FA0  EFDA  F02F         	goto	u7351
 16057   005FA4  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 16058   005FA6  E108               	bnz	u7350
 16059   005FA8  283C               	incf	___fldiv@new_exp^0,w,c
 16060   005FAA  A0D8               	btfss	status,0,c
 16061   005FAC  EFDA  F02F         	goto	u7351
 16062   005FB0  EFDC  F02F         	goto	u7350
 16063   005FB4                     u7351:
 16064   005FB4  EFE7  F02F         	goto	l7355
 16065   005FB8                     u7350:
 16066   005FB8  0E00               	movlw	0
 16067   005FBA  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 16068   005FBC  683C               	setf	___fldiv@new_exp^0,c
 16069   005FBE  0E00               	movlw	0
 16070   005FC0  6E2B               	movwf	___fldiv@b^0,c
 16071   005FC2  0E00               	movlw	0
 16072   005FC4  6E2C               	movwf	(___fldiv@b+1)^0,c
 16073   005FC6  0E00               	movlw	0
 16074   005FC8  6E2D               	movwf	(___fldiv@b+2)^0,c
 16075   005FCA  0E00               	movlw	0
 16076   005FCC  6E2E               	movwf	(___fldiv@b+3)^0,c
 16077   005FCE                     l7355:
 16078   005FCE  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 16079   005FD0  EFF4  F02F         	goto	u7360
 16080   005FD4  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 16081   005FD6  E106               	bnz	u7361
 16082   005FD8  043C               	decf	___fldiv@new_exp^0,w,c
 16083   005FDA  B0D8               	btfsc	status,0,c
 16084   005FDC  EFF2  F02F         	goto	u7361
 16085   005FE0  EFF4  F02F         	goto	u7360
 16086   005FE4                     u7361:
 16087   005FE4  EF02  F030         	goto	l7359
 16088   005FE8                     u7360:
 16089   005FE8  0E00               	movlw	0
 16090   005FEA  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 16091   005FEC  0E00               	movlw	0
 16092   005FEE  6E3C               	movwf	___fldiv@new_exp^0,c
 16093   005FF0  0E00               	movlw	0
 16094   005FF2  6E2B               	movwf	___fldiv@b^0,c
 16095   005FF4  0E00               	movlw	0
 16096   005FF6  6E2C               	movwf	(___fldiv@b+1)^0,c
 16097   005FF8  0E00               	movlw	0
 16098   005FFA  6E2D               	movwf	(___fldiv@b+2)^0,c
 16099   005FFC  0E00               	movlw	0
 16100   005FFE  6E2E               	movwf	(___fldiv@b+3)^0,c
 16101   006000  0E00               	movlw	0
 16102   006002  6E3B               	movwf	___fldiv@sign^0,c
 16103   006004                     l7359:
 16104   006004  C03C  F042         	movff	___fldiv@new_exp,___fldiv@bexp
 16105   006008  A042               	btfss	___fldiv@bexp^0,0,c
 16106   00600A  EF09  F030         	goto	u7371
 16107   00600E  EF0B  F030         	goto	u7370
 16108   006012                     u7371:
 16109   006012  EF0E  F030         	goto	l7365
 16110   006016                     u7370:
 16111   006016  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 16112   006018  EF0F  F030         	goto	l7367
 16113   00601C                     l7365:
 16114   00601C  9E2D               	bcf	(___fldiv@b+2)^0,7,c
 16115   00601E                     l7367:
 16116   00601E  90D8               	bcf	status,0,c
 16117   006020  3042               	rrcf	___fldiv@bexp^0,w,c
 16118   006022  6E2E               	movwf	(___fldiv@b+3)^0,c
 16119   006024  EFC5  F02E         	goto	l7281
 16120   006028                     l1142:
 16121   006028  0012               	return		;funcret
 16122   00602A                     __end_of___fldiv:
 16123                           	callstack 0
 16124                           
 16125 ;; *************** function _color_read_Red *****************
 16126 ;; Defined at:
 16127 ;;		line 68 in file "color.c"
 16128 ;; Parameters:    Size  Location     Type
 16129 ;;		None
 16130 ;; Auto vars:     Size  Location     Type
 16131 ;;  tmp             2   10[COMRAM] unsigned int 
 16132 ;; Return value:  Size  Location     Type
 16133 ;;                  2    5[COMRAM] unsigned int 
 16134 ;; Registers used:
 16135 ;;		wreg, status,2, status,0, cstack
 16136 ;; Tracked objects:
 16137 ;;		On entry : 0/0
 16138 ;;		On exit  : 0/0
 16139 ;;		Unchanged: 0/0
 16140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16143 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16144 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16145 ;;Total ram usage:        7 bytes
 16146 ;; Hardware stack levels used: 1
 16147 ;; Hardware stack levels required when called: 4
 16148 ;; This function calls:
 16149 ;;		_I2C_2_Master_Read
 16150 ;;		_I2C_2_Master_RepStart
 16151 ;;		_I2C_2_Master_Start
 16152 ;;		_I2C_2_Master_Stop
 16153 ;;		_I2C_2_Master_Write
 16154 ;; This function is called by:
 16155 ;;		_main
 16156 ;; This function uses a non-reentrant model
 16157 ;;
 16158                           
 16159                           	psect	text48
 16160   007BAA                     __ptext48:
 16161                           	callstack 0
 16162   007BAA                     _color_read_Red:
 16163                           	callstack 26
 16164   007BAA                     
 16165                           ;color.c: 69:  unsigned int tmp;;color.c: 70:  I2C_2_Master_Start();
 16166   007BAA  EC73  F040         	call	_I2C_2_Master_Start	;wreg free
 16167                           
 16168                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x00);
 16169   007BAE  0E52               	movlw	82
 16170   007BB0  EC58  F040         	call	_I2C_2_Master_Write
 16171                           
 16172                           ;color.c: 72:  I2C_2_Master_Write(0xA0 | 0x16);
 16173   007BB4  0EB6               	movlw	182
 16174   007BB6  EC58  F040         	call	_I2C_2_Master_Write
 16175                           
 16176                           ;color.c: 73:  I2C_2_Master_RepStart();
 16177   007BBA  EC69  F040         	call	_I2C_2_Master_RepStart	;wreg free
 16178                           
 16179                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x01);
 16180   007BBE  0E53               	movlw	83
 16181   007BC0  EC58  F040         	call	_I2C_2_Master_Write
 16182                           
 16183                           ;color.c: 75:  tmp=I2C_2_Master_Read(1);
 16184   007BC4  0E01               	movlw	1
 16185   007BC6  ECE0  F03E         	call	_I2C_2_Master_Read
 16186   007BCA  6E08               	movwf	??_color_read_Red^0,c
 16187   007BCC  5008               	movf	??_color_read_Red^0,w,c
 16188   007BCE  6E0B               	movwf	color_read_Red@tmp^0,c
 16189   007BD0  6A0C               	clrf	(color_read_Red@tmp+1)^0,c
 16190                           
 16191                           ;color.c: 76:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 16192   007BD2  0E00               	movlw	0
 16193   007BD4  ECE0  F03E         	call	_I2C_2_Master_Read
 16194   007BD8  6E08               	movwf	??_color_read_Red^0,c
 16195   007BDA  5008               	movf	??_color_read_Red^0,w,c
 16196   007BDC  6E0A               	movwf	(??_color_read_Red+2)^0,c
 16197   007BDE  6A09               	clrf	(??_color_read_Red+1)^0,c
 16198   007BE0  500B               	movf	color_read_Red@tmp^0,w,c
 16199   007BE2  1009               	iorwf	(??_color_read_Red+1)^0,w,c
 16200   007BE4  6E0B               	movwf	color_read_Red@tmp^0,c
 16201   007BE6  500C               	movf	(color_read_Red@tmp+1)^0,w,c
 16202   007BE8  100A               	iorwf	(??_color_read_Red+2)^0,w,c
 16203   007BEA  6E0C               	movwf	(color_read_Red@tmp+1)^0,c
 16204                           
 16205                           ;color.c: 77:  I2C_2_Master_Stop();
 16206   007BEC  EC6E  F040         	call	_I2C_2_Master_Stop	;wreg free
 16207   007BF0                     
 16208                           ;color.c: 78:  return tmp;
 16209   007BF0  C00B  F006         	movff	color_read_Red@tmp,?_color_read_Red
 16210   007BF4  C00C  F007         	movff	color_read_Red@tmp+1,?_color_read_Red+1
 16211   007BF8  0012               	return		;funcret
 16212   007BFA                     __end_of_color_read_Red:
 16213                           	callstack 0
 16214                           
 16215 ;; *************** function _color_read_Green *****************
 16216 ;; Defined at:
 16217 ;;		line 81 in file "color.c"
 16218 ;; Parameters:    Size  Location     Type
 16219 ;;		None
 16220 ;; Auto vars:     Size  Location     Type
 16221 ;;  tmp             2   10[COMRAM] unsigned int 
 16222 ;; Return value:  Size  Location     Type
 16223 ;;                  2    5[COMRAM] unsigned int 
 16224 ;; Registers used:
 16225 ;;		wreg, status,2, status,0, cstack
 16226 ;; Tracked objects:
 16227 ;;		On entry : 0/0
 16228 ;;		On exit  : 0/0
 16229 ;;		Unchanged: 0/0
 16230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16232 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16233 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16234 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16235 ;;Total ram usage:        7 bytes
 16236 ;; Hardware stack levels used: 1
 16237 ;; Hardware stack levels required when called: 4
 16238 ;; This function calls:
 16239 ;;		_I2C_2_Master_Read
 16240 ;;		_I2C_2_Master_RepStart
 16241 ;;		_I2C_2_Master_Start
 16242 ;;		_I2C_2_Master_Stop
 16243 ;;		_I2C_2_Master_Write
 16244 ;; This function is called by:
 16245 ;;		_main
 16246 ;; This function uses a non-reentrant model
 16247 ;;
 16248                           
 16249                           	psect	text49
 16250   007BFA                     __ptext49:
 16251                           	callstack 0
 16252   007BFA                     _color_read_Green:
 16253                           	callstack 26
 16254   007BFA                     
 16255                           ;color.c: 82:  unsigned int tmp;;color.c: 83:  I2C_2_Master_Start();
 16256   007BFA  EC73  F040         	call	_I2C_2_Master_Start	;wreg free
 16257                           
 16258                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x00);
 16259   007BFE  0E52               	movlw	82
 16260   007C00  EC58  F040         	call	_I2C_2_Master_Write
 16261                           
 16262                           ;color.c: 85:  I2C_2_Master_Write(0xA0 | 0x18);
 16263   007C04  0EB8               	movlw	184
 16264   007C06  EC58  F040         	call	_I2C_2_Master_Write
 16265                           
 16266                           ;color.c: 86:  I2C_2_Master_RepStart();
 16267   007C0A  EC69  F040         	call	_I2C_2_Master_RepStart	;wreg free
 16268                           
 16269                           ;color.c: 87:  I2C_2_Master_Write(0x52 | 0x01);
 16270   007C0E  0E53               	movlw	83
 16271   007C10  EC58  F040         	call	_I2C_2_Master_Write
 16272                           
 16273                           ;color.c: 88:  tmp=I2C_2_Master_Read(1);
 16274   007C14  0E01               	movlw	1
 16275   007C16  ECE0  F03E         	call	_I2C_2_Master_Read
 16276   007C1A  6E08               	movwf	??_color_read_Green^0,c
 16277   007C1C  5008               	movf	??_color_read_Green^0,w,c
 16278   007C1E  6E0B               	movwf	color_read_Green@tmp^0,c
 16279   007C20  6A0C               	clrf	(color_read_Green@tmp+1)^0,c
 16280                           
 16281                           ;color.c: 89:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 16282   007C22  0E00               	movlw	0
 16283   007C24  ECE0  F03E         	call	_I2C_2_Master_Read
 16284   007C28  6E08               	movwf	??_color_read_Green^0,c
 16285   007C2A  5008               	movf	??_color_read_Green^0,w,c
 16286   007C2C  6E0A               	movwf	(??_color_read_Green+2)^0,c
 16287   007C2E  6A09               	clrf	(??_color_read_Green+1)^0,c
 16288   007C30  500B               	movf	color_read_Green@tmp^0,w,c
 16289   007C32  1009               	iorwf	(??_color_read_Green+1)^0,w,c
 16290   007C34  6E0B               	movwf	color_read_Green@tmp^0,c
 16291   007C36  500C               	movf	(color_read_Green@tmp+1)^0,w,c
 16292   007C38  100A               	iorwf	(??_color_read_Green+2)^0,w,c
 16293   007C3A  6E0C               	movwf	(color_read_Green@tmp+1)^0,c
 16294                           
 16295                           ;color.c: 90:  I2C_2_Master_Stop();
 16296   007C3C  EC6E  F040         	call	_I2C_2_Master_Stop	;wreg free
 16297   007C40                     
 16298                           ;color.c: 91:  return tmp;
 16299   007C40  C00B  F006         	movff	color_read_Green@tmp,?_color_read_Green
 16300   007C44  C00C  F007         	movff	color_read_Green@tmp+1,?_color_read_Green+1
 16301   007C48  0012               	return		;funcret
 16302   007C4A                     __end_of_color_read_Green:
 16303                           	callstack 0
 16304                           
 16305 ;; *************** function _color_read_Clear *****************
 16306 ;; Defined at:
 16307 ;;		line 55 in file "color.c"
 16308 ;; Parameters:    Size  Location     Type
 16309 ;;		None
 16310 ;; Auto vars:     Size  Location     Type
 16311 ;;  tmp             2   10[COMRAM] unsigned int 
 16312 ;; Return value:  Size  Location     Type
 16313 ;;                  2    5[COMRAM] unsigned int 
 16314 ;; Registers used:
 16315 ;;		wreg, status,2, status,0, cstack
 16316 ;; Tracked objects:
 16317 ;;		On entry : 0/0
 16318 ;;		On exit  : 0/0
 16319 ;;		Unchanged: 0/0
 16320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16322 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16323 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16324 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16325 ;;Total ram usage:        7 bytes
 16326 ;; Hardware stack levels used: 1
 16327 ;; Hardware stack levels required when called: 4
 16328 ;; This function calls:
 16329 ;;		_I2C_2_Master_Read
 16330 ;;		_I2C_2_Master_RepStart
 16331 ;;		_I2C_2_Master_Start
 16332 ;;		_I2C_2_Master_Stop
 16333 ;;		_I2C_2_Master_Write
 16334 ;; This function is called by:
 16335 ;;		_main
 16336 ;; This function uses a non-reentrant model
 16337 ;;
 16338                           
 16339                           	psect	text50
 16340   007C4A                     __ptext50:
 16341                           	callstack 0
 16342   007C4A                     _color_read_Clear:
 16343                           	callstack 26
 16344   007C4A                     
 16345                           ;color.c: 56:  unsigned int tmp;;color.c: 57:  I2C_2_Master_Start();
 16346   007C4A  EC73  F040         	call	_I2C_2_Master_Start	;wreg free
 16347                           
 16348                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
 16349   007C4E  0E52               	movlw	82
 16350   007C50  EC58  F040         	call	_I2C_2_Master_Write
 16351                           
 16352                           ;color.c: 59:  I2C_2_Master_Write(0xA0 | 0x14);
 16353   007C54  0EB4               	movlw	180
 16354   007C56  EC58  F040         	call	_I2C_2_Master_Write
 16355                           
 16356                           ;color.c: 60:  I2C_2_Master_RepStart();
 16357   007C5A  EC69  F040         	call	_I2C_2_Master_RepStart	;wreg free
 16358                           
 16359                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
 16360   007C5E  0E53               	movlw	83
 16361   007C60  EC58  F040         	call	_I2C_2_Master_Write
 16362                           
 16363                           ;color.c: 62:  tmp=I2C_2_Master_Read(1);
 16364   007C64  0E01               	movlw	1
 16365   007C66  ECE0  F03E         	call	_I2C_2_Master_Read
 16366   007C6A  6E08               	movwf	??_color_read_Clear^0,c
 16367   007C6C  5008               	movf	??_color_read_Clear^0,w,c
 16368   007C6E  6E0B               	movwf	color_read_Clear@tmp^0,c
 16369   007C70  6A0C               	clrf	(color_read_Clear@tmp+1)^0,c
 16370                           
 16371                           ;color.c: 63:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 16372   007C72  0E00               	movlw	0
 16373   007C74  ECE0  F03E         	call	_I2C_2_Master_Read
 16374   007C78  6E08               	movwf	??_color_read_Clear^0,c
 16375   007C7A  5008               	movf	??_color_read_Clear^0,w,c
 16376   007C7C  6E0A               	movwf	(??_color_read_Clear+2)^0,c
 16377   007C7E  6A09               	clrf	(??_color_read_Clear+1)^0,c
 16378   007C80  500B               	movf	color_read_Clear@tmp^0,w,c
 16379   007C82  1009               	iorwf	(??_color_read_Clear+1)^0,w,c
 16380   007C84  6E0B               	movwf	color_read_Clear@tmp^0,c
 16381   007C86  500C               	movf	(color_read_Clear@tmp+1)^0,w,c
 16382   007C88  100A               	iorwf	(??_color_read_Clear+2)^0,w,c
 16383   007C8A  6E0C               	movwf	(color_read_Clear@tmp+1)^0,c
 16384                           
 16385                           ;color.c: 64:  I2C_2_Master_Stop();
 16386   007C8C  EC6E  F040         	call	_I2C_2_Master_Stop	;wreg free
 16387   007C90                     
 16388                           ;color.c: 65:  return tmp;
 16389   007C90  C00B  F006         	movff	color_read_Clear@tmp,?_color_read_Clear
 16390   007C94  C00C  F007         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 16391   007C98  0012               	return		;funcret
 16392   007C9A                     __end_of_color_read_Clear:
 16393                           	callstack 0
 16394                           
 16395 ;; *************** function _color_read_Blue *****************
 16396 ;; Defined at:
 16397 ;;		line 94 in file "color.c"
 16398 ;; Parameters:    Size  Location     Type
 16399 ;;		None
 16400 ;; Auto vars:     Size  Location     Type
 16401 ;;  tmp             2   10[COMRAM] unsigned int 
 16402 ;; Return value:  Size  Location     Type
 16403 ;;                  2    5[COMRAM] unsigned int 
 16404 ;; Registers used:
 16405 ;;		wreg, status,2, status,0, cstack
 16406 ;; Tracked objects:
 16407 ;;		On entry : 0/0
 16408 ;;		On exit  : 0/0
 16409 ;;		Unchanged: 0/0
 16410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16413 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16414 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16415 ;;Total ram usage:        7 bytes
 16416 ;; Hardware stack levels used: 1
 16417 ;; Hardware stack levels required when called: 4
 16418 ;; This function calls:
 16419 ;;		_I2C_2_Master_Read
 16420 ;;		_I2C_2_Master_RepStart
 16421 ;;		_I2C_2_Master_Start
 16422 ;;		_I2C_2_Master_Stop
 16423 ;;		_I2C_2_Master_Write
 16424 ;; This function is called by:
 16425 ;;		_main
 16426 ;; This function uses a non-reentrant model
 16427 ;;
 16428                           
 16429                           	psect	text51
 16430   007C9A                     __ptext51:
 16431                           	callstack 0
 16432   007C9A                     _color_read_Blue:
 16433                           	callstack 26
 16434   007C9A                     
 16435                           ;color.c: 95:  unsigned int tmp;;color.c: 96:  I2C_2_Master_Start();
 16436   007C9A  EC73  F040         	call	_I2C_2_Master_Start	;wreg free
 16437                           
 16438                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x00);
 16439   007C9E  0E52               	movlw	82
 16440   007CA0  EC58  F040         	call	_I2C_2_Master_Write
 16441                           
 16442                           ;color.c: 98:  I2C_2_Master_Write(0xA0 | 0x1A);
 16443   007CA4  0EBA               	movlw	186
 16444   007CA6  EC58  F040         	call	_I2C_2_Master_Write
 16445                           
 16446                           ;color.c: 99:  I2C_2_Master_RepStart();
 16447   007CAA  EC69  F040         	call	_I2C_2_Master_RepStart	;wreg free
 16448                           
 16449                           ;color.c: 100:  I2C_2_Master_Write(0x52 | 0x01);
 16450   007CAE  0E53               	movlw	83
 16451   007CB0  EC58  F040         	call	_I2C_2_Master_Write
 16452                           
 16453                           ;color.c: 101:  tmp=I2C_2_Master_Read(1);
 16454   007CB4  0E01               	movlw	1
 16455   007CB6  ECE0  F03E         	call	_I2C_2_Master_Read
 16456   007CBA  6E08               	movwf	??_color_read_Blue^0,c
 16457   007CBC  5008               	movf	??_color_read_Blue^0,w,c
 16458   007CBE  6E0B               	movwf	color_read_Blue@tmp^0,c
 16459   007CC0  6A0C               	clrf	(color_read_Blue@tmp+1)^0,c
 16460                           
 16461                           ;color.c: 102:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 16462   007CC2  0E00               	movlw	0
 16463   007CC4  ECE0  F03E         	call	_I2C_2_Master_Read
 16464   007CC8  6E08               	movwf	??_color_read_Blue^0,c
 16465   007CCA  5008               	movf	??_color_read_Blue^0,w,c
 16466   007CCC  6E0A               	movwf	(??_color_read_Blue+2)^0,c
 16467   007CCE  6A09               	clrf	(??_color_read_Blue+1)^0,c
 16468   007CD0  500B               	movf	color_read_Blue@tmp^0,w,c
 16469   007CD2  1009               	iorwf	(??_color_read_Blue+1)^0,w,c
 16470   007CD4  6E0B               	movwf	color_read_Blue@tmp^0,c
 16471   007CD6  500C               	movf	(color_read_Blue@tmp+1)^0,w,c
 16472   007CD8  100A               	iorwf	(??_color_read_Blue+2)^0,w,c
 16473   007CDA  6E0C               	movwf	(color_read_Blue@tmp+1)^0,c
 16474                           
 16475                           ;color.c: 103:  I2C_2_Master_Stop();
 16476   007CDC  EC6E  F040         	call	_I2C_2_Master_Stop	;wreg free
 16477   007CE0                     
 16478                           ;color.c: 104:  return tmp;
 16479   007CE0  C00B  F006         	movff	color_read_Blue@tmp,?_color_read_Blue
 16480   007CE4  C00C  F007         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
 16481   007CE8  0012               	return		;funcret
 16482   007CEA                     __end_of_color_read_Blue:
 16483                           	callstack 0
 16484                           
 16485 ;; *************** function _I2C_2_Master_RepStart *****************
 16486 ;; Defined at:
 16487 ;;		line 30 in file "i2c.c"
 16488 ;; Parameters:    Size  Location     Type
 16489 ;;		None
 16490 ;; Auto vars:     Size  Location     Type
 16491 ;;		None
 16492 ;; Return value:  Size  Location     Type
 16493 ;;                  1    wreg      void 
 16494 ;; Registers used:
 16495 ;;		wreg, status,2, status,0, cstack
 16496 ;; Tracked objects:
 16497 ;;		On entry : 0/0
 16498 ;;		On exit  : 0/0
 16499 ;;		Unchanged: 0/0
 16500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16505 ;;Total ram usage:        0 bytes
 16506 ;; Hardware stack levels used: 1
 16507 ;; Hardware stack levels required when called: 3
 16508 ;; This function calls:
 16509 ;;		_I2C_2_Master_Idle
 16510 ;; This function is called by:
 16511 ;;		_color_read_Clear
 16512 ;;		_color_read_Red
 16513 ;;		_color_read_Green
 16514 ;;		_color_read_Blue
 16515 ;; This function uses a non-reentrant model
 16516 ;;
 16517                           
 16518                           	psect	text52
 16519   0080D2                     __ptext52:
 16520                           	callstack 0
 16521   0080D2                     _I2C_2_Master_RepStart:
 16522                           	callstack 26
 16523   0080D2                     
 16524                           ;i2c.c: 31:   I2C_2_Master_Idle();
 16525   0080D2  ECDB  F03F         	call	_I2C_2_Master_Idle	;wreg free
 16526   0080D6                     
 16527                           ;i2c.c: 32:   SSP2CON2bits.RSEN = 1;
 16528   0080D6  010E               	movlb	14	; () banked
 16529   0080D8  83DA               	bsf	218,1,b	;volatile
 16530   0080DA                     
 16531                           ; BSR set to: 14
 16532   0080DA  0012               	return		;funcret
 16533   0080DC                     __end_of_I2C_2_Master_RepStart:
 16534                           	callstack 0
 16535                           
 16536 ;; *************** function _I2C_2_Master_Read *****************
 16537 ;; Defined at:
 16538 ;;		line 45 in file "i2c.c"
 16539 ;; Parameters:    Size  Location     Type
 16540 ;;  ack             1    wreg     unsigned char 
 16541 ;; Auto vars:     Size  Location     Type
 16542 ;;  ack             1    3[COMRAM] unsigned char 
 16543 ;;  tmp             1    4[COMRAM] unsigned char 
 16544 ;; Return value:  Size  Location     Type
 16545 ;;                  1    wreg      unsigned char 
 16546 ;; Registers used:
 16547 ;;		wreg, status,2, status,0, cstack
 16548 ;; Tracked objects:
 16549 ;;		On entry : 0/0
 16550 ;;		On exit  : 0/0
 16551 ;;		Unchanged: 0/0
 16552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16554 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16555 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16556 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16557 ;;Total ram usage:        3 bytes
 16558 ;; Hardware stack levels used: 1
 16559 ;; Hardware stack levels required when called: 3
 16560 ;; This function calls:
 16561 ;;		_I2C_2_Master_Idle
 16562 ;; This function is called by:
 16563 ;;		_color_read_Clear
 16564 ;;		_color_read_Red
 16565 ;;		_color_read_Green
 16566 ;;		_color_read_Blue
 16567 ;; This function uses a non-reentrant model
 16568 ;;
 16569                           
 16570                           	psect	text53
 16571   007DC0                     __ptext53:
 16572                           	callstack 0
 16573   007DC0                     _I2C_2_Master_Read:
 16574                           	callstack 26
 16575                           
 16576                           ; BSR set to: 14
 16577                           ;incstack = 0
 16578                           ;I2C_2_Master_Read@ack stored from wreg
 16579   007DC0  6E04               	movwf	I2C_2_Master_Read@ack^0,c
 16580   007DC2                     
 16581                           ;i2c.c: 46:   unsigned char tmp;;i2c.c: 47:   I2C_2_Master_Idle();
 16582   007DC2  ECDB  F03F         	call	_I2C_2_Master_Idle	;wreg free
 16583   007DC6                     
 16584                           ;i2c.c: 48:   SSP2CON2bits.RCEN = 1;
 16585   007DC6  010E               	movlb	14	; () banked
 16586   007DC8  87DA               	bsf	218,3,b	;volatile
 16587                           
 16588                           ;i2c.c: 49:   I2C_2_Master_Idle();
 16589   007DCA  ECDB  F03F         	call	_I2C_2_Master_Idle	;wreg free
 16590   007DCE                     
 16591                           ;i2c.c: 50:   tmp = SSP2BUF;
 16592   007DCE  CED5 F005          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 16593                           
 16594                           ;i2c.c: 51:   I2C_2_Master_Idle();
 16595   007DD2  ECDB  F03F         	call	_I2C_2_Master_Idle	;wreg free
 16596   007DD6                     
 16597                           ;i2c.c: 52:   SSP2CON2bits.ACKDT = !ack;
 16598   007DD6  5004               	movf	I2C_2_Master_Read@ack^0,w,c
 16599   007DD8  B4D8               	btfsc	status,2,c
 16600   007DDA  EFF1  F03E         	goto	u5571
 16601   007DDE  EFF5  F03E         	goto	u5570
 16602   007DE2                     u5571:
 16603   007DE2  6A03               	clrf	??_I2C_2_Master_Read^0,c
 16604   007DE4  2A03               	incf	??_I2C_2_Master_Read^0,f,c
 16605   007DE6  EFF6  F03E         	goto	u5588
 16606   007DEA                     u5570:
 16607   007DEA  6A03               	clrf	??_I2C_2_Master_Read^0,c
 16608   007DEC                     u5588:
 16609   007DEC  3A03               	swapf	??_I2C_2_Master_Read^0,f,c
 16610   007DEE  4603               	rlncf	??_I2C_2_Master_Read^0,f,c
 16611   007DF0  010E               	movlb	14	; () banked
 16612   007DF2  51DA               	movf	218,w,b	;volatile
 16613   007DF4  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 16614   007DF6  0BDF               	andlw	-33
 16615   007DF8  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 16616   007DFA  6FDA               	movwf	218,b	;volatile
 16617   007DFC                     
 16618                           ; BSR set to: 14
 16619                           ;i2c.c: 53:   SSP2CON2bits.ACKEN = 1;
 16620   007DFC  89DA               	bsf	218,4,b	;volatile
 16621   007DFE                     
 16622                           ; BSR set to: 14
 16623                           ;i2c.c: 54:   return tmp;
 16624   007DFE  5005               	movf	I2C_2_Master_Read@tmp^0,w,c
 16625   007E00                     
 16626                           ; BSR set to: 14
 16627   007E00  0012               	return		;funcret
 16628   007E02                     __end_of_I2C_2_Master_Read:
 16629                           	callstack 0
 16630                           
 16631 ;; *************** function _color_click_toggleLED *****************
 16632 ;; Defined at:
 16633 ;;		line 108 in file "color.c"
 16634 ;; Parameters:    Size  Location     Type
 16635 ;;		None
 16636 ;; Auto vars:     Size  Location     Type
 16637 ;;		None
 16638 ;; Return value:  Size  Location     Type
 16639 ;;                  1    wreg      void 
 16640 ;; Registers used:
 16641 ;;		wreg, status,2, status,0
 16642 ;; Tracked objects:
 16643 ;;		On entry : 0/0
 16644 ;;		On exit  : 0/0
 16645 ;;		Unchanged: 0/0
 16646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16651 ;;Total ram usage:        1 bytes
 16652 ;; Hardware stack levels used: 1
 16653 ;; Hardware stack levels required when called: 2
 16654 ;; This function calls:
 16655 ;;		Nothing
 16656 ;; This function is called by:
 16657 ;;		_main
 16658 ;; This function uses a non-reentrant model
 16659 ;;
 16660                           
 16661                           	psect	text54
 16662   007A9E                     __ptext54:
 16663                           	callstack 0
 16664   007A9E                     _color_click_toggleLED:
 16665                           	callstack 28
 16666   007A9E                     
 16667                           ;color.c: 109:     LATGbits.LATG0 = !LATGbits.LATG0;
 16668   007A9E  A07F               	btfss	127,0,c	;volatile
 16669   007AA0  EF54  F03D         	goto	u6221
 16670   007AA4  EF58  F03D         	goto	u6220
 16671   007AA8                     u6221:
 16672   007AA8  6A02               	clrf	??_color_click_toggleLED^0,c
 16673   007AAA  2A02               	incf	??_color_click_toggleLED^0,f,c
 16674   007AAC  EF59  F03D         	goto	u6238
 16675   007AB0                     u6220:
 16676   007AB0  6A02               	clrf	??_color_click_toggleLED^0,c
 16677   007AB2                     u6238:
 16678   007AB2  507F               	movf	127,w,c	;volatile
 16679   007AB4  1802               	xorwf	??_color_click_toggleLED^0,w,c
 16680   007AB6  0BFE               	andlw	-2
 16681   007AB8  1802               	xorwf	??_color_click_toggleLED^0,w,c
 16682   007ABA  6E7F               	movwf	127,c	;volatile
 16683                           
 16684                           ;color.c: 110:     LATAbits.LATA3 = !LATAbits.LATA3;
 16685   007ABC  A679               	btfss	121,3,c	;volatile
 16686   007ABE  EF63  F03D         	goto	u6241
 16687   007AC2  EF67  F03D         	goto	u6240
 16688   007AC6                     u6241:
 16689   007AC6  6A02               	clrf	??_color_click_toggleLED^0,c
 16690   007AC8  2A02               	incf	??_color_click_toggleLED^0,f,c
 16691   007ACA  EF68  F03D         	goto	u6258
 16692   007ACE                     u6240:
 16693   007ACE  6A02               	clrf	??_color_click_toggleLED^0,c
 16694   007AD0                     u6258:
 16695   007AD0  4602               	rlncf	??_color_click_toggleLED^0,f,c
 16696   007AD2  4602               	rlncf	??_color_click_toggleLED^0,f,c
 16697   007AD4  4602               	rlncf	??_color_click_toggleLED^0,f,c
 16698   007AD6  5079               	movf	121,w,c	;volatile
 16699   007AD8  1802               	xorwf	??_color_click_toggleLED^0,w,c
 16700   007ADA  0BF7               	andlw	-9
 16701   007ADC  1802               	xorwf	??_color_click_toggleLED^0,w,c
 16702   007ADE  6E79               	movwf	121,c	;volatile
 16703                           
 16704                           ;color.c: 111:     LATEbits.LATE7 = !LATEbits.LATE7;
 16705   007AE0  AE7D               	btfss	125,7,c	;volatile
 16706   007AE2  EF75  F03D         	goto	u6261
 16707   007AE6  EF79  F03D         	goto	u6260
 16708   007AEA                     u6261:
 16709   007AEA  6A02               	clrf	??_color_click_toggleLED^0,c
 16710   007AEC  2A02               	incf	??_color_click_toggleLED^0,f,c
 16711   007AEE  EF7A  F03D         	goto	u6278
 16712   007AF2                     u6260:
 16713   007AF2  6A02               	clrf	??_color_click_toggleLED^0,c
 16714   007AF4                     u6278:
 16715   007AF4  3202               	rrcf	??_color_click_toggleLED^0,f,c
 16716   007AF6  3202               	rrcf	??_color_click_toggleLED^0,f,c
 16717   007AF8  507D               	movf	125,w,c	;volatile
 16718   007AFA  1802               	xorwf	??_color_click_toggleLED^0,w,c
 16719   007AFC  0B7F               	andlw	-129
 16720   007AFE  1802               	xorwf	??_color_click_toggleLED^0,w,c
 16721   007B00  6E7D               	movwf	125,c	;volatile
 16722   007B02  0012               	return		;funcret
 16723   007B04                     __end_of_color_click_toggleLED:
 16724                           	callstack 0
 16725                           
 16726 ;; *************** function _color_click_init *****************
 16727 ;; Defined at:
 16728 ;;		line 8 in file "color.c"
 16729 ;; Parameters:    Size  Location     Type
 16730 ;;		None
 16731 ;; Auto vars:     Size  Location     Type
 16732 ;;		None
 16733 ;; Return value:  Size  Location     Type
 16734 ;;                  1    wreg      void 
 16735 ;; Registers used:
 16736 ;;		wreg, status,2, status,0, cstack
 16737 ;; Tracked objects:
 16738 ;;		On entry : 0/0
 16739 ;;		On exit  : 0/0
 16740 ;;		Unchanged: 0/0
 16741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16745 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16746 ;;Total ram usage:        1 bytes
 16747 ;; Hardware stack levels used: 1
 16748 ;; Hardware stack levels required when called: 5
 16749 ;; This function calls:
 16750 ;;		_I2C_2_Master_Init
 16751 ;;		_color_writetoaddr
 16752 ;; This function is called by:
 16753 ;;		_main
 16754 ;; This function uses a non-reentrant model
 16755 ;;
 16756                           
 16757                           	psect	text55
 16758   007CEA                     __ptext55:
 16759                           	callstack 0
 16760   007CEA                     _color_click_init:
 16761                           	callstack 25
 16762   007CEA                     
 16763                           ;color.c: 10:     I2C_2_Master_Init();
 16764   007CEA  ECC6  F03F         	call	_I2C_2_Master_Init	;wreg free
 16765   007CEE                     
 16766                           ;color.c: 11:  color_writetoaddr(0x00, 0x01);
 16767   007CEE  0E01               	movlw	1
 16768   007CF0  6E04               	movwf	color_writetoaddr@value^0,c
 16769   007CF2  0E00               	movlw	0
 16770   007CF4  EC02  F040         	call	_color_writetoaddr
 16771   007CF8                     
 16772                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
 16773   007CF8  0E3F               	movlw	63
 16774   007CFA  6E06               	movwf	??_color_click_init^0,c
 16775   007CFC  0E55               	movlw	85
 16776   007CFE                     u9407:
 16777   007CFE  2EE8               	decfsz	wreg,f,c
 16778   007D00  D7FE               	bra	u9407
 16779   007D02  2E06               	decfsz	??_color_click_init^0,f,c
 16780   007D04  D7FC               	bra	u9407
 16781   007D06  0000               	nop	
 16782   007D08                     
 16783                           ;color.c: 13:  color_writetoaddr(0x00, 0x03);
 16784   007D08  0E03               	movlw	3
 16785   007D0A  6E04               	movwf	color_writetoaddr@value^0,c
 16786   007D0C  0E00               	movlw	0
 16787   007D0E  EC02  F040         	call	_color_writetoaddr
 16788   007D12                     
 16789                           ;color.c: 14:  color_writetoaddr(0x01, 0xFF);
 16790   007D12  0EFF               	movlw	255
 16791   007D14  6E04               	movwf	color_writetoaddr@value^0,c
 16792   007D16  0E01               	movlw	1
 16793   007D18  EC02  F040         	call	_color_writetoaddr
 16794   007D1C                     
 16795                           ;color.c: 15:     color_writetoaddr(0x03, 0xFF);
 16796   007D1C  0EFF               	movlw	255
 16797   007D1E  6E04               	movwf	color_writetoaddr@value^0,c
 16798   007D20  0E03               	movlw	3
 16799   007D22  EC02  F040         	call	_color_writetoaddr
 16800   007D26                     
 16801                           ;color.c: 27:     LATGbits.LATG0=0;
 16802   007D26  907F               	bcf	127,0,c	;volatile
 16803   007D28                     
 16804                           ;color.c: 28:     LATAbits.LATA3=0;
 16805   007D28  9679               	bcf	121,3,c	;volatile
 16806   007D2A                     
 16807                           ;color.c: 29:     LATEbits.LATE7=0;
 16808   007D2A  9E7D               	bcf	125,7,c	;volatile
 16809   007D2C                     
 16810                           ;color.c: 32:     TRISGbits.TRISG0=0;
 16811   007D2C  9087               	bcf	135,0,c	;volatile
 16812   007D2E                     
 16813                           ;color.c: 33:     TRISAbits.TRISA3=0;
 16814   007D2E  9681               	bcf	129,3,c	;volatile
 16815   007D30                     
 16816                           ;color.c: 34:     TRISEbits.TRISE7=0;
 16817   007D30  9E85               	bcf	133,7,c	;volatile
 16818   007D32  0012               	return		;funcret
 16819   007D34                     __end_of_color_click_init:
 16820                           	callstack 0
 16821                           
 16822 ;; *************** function _color_writetoaddr *****************
 16823 ;; Defined at:
 16824 ;;		line 38 in file "color.c"
 16825 ;; Parameters:    Size  Location     Type
 16826 ;;  address         1    wreg     unsigned char 
 16827 ;;  value           1    3[COMRAM] unsigned char 
 16828 ;; Auto vars:     Size  Location     Type
 16829 ;;  address         1    4[COMRAM] unsigned char 
 16830 ;; Return value:  Size  Location     Type
 16831 ;;                  1    wreg      void 
 16832 ;; Registers used:
 16833 ;;		wreg, status,2, status,0, cstack
 16834 ;; Tracked objects:
 16835 ;;		On entry : 0/0
 16836 ;;		On exit  : 0/0
 16837 ;;		Unchanged: 0/0
 16838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16839 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16843 ;;Total ram usage:        2 bytes
 16844 ;; Hardware stack levels used: 1
 16845 ;; Hardware stack levels required when called: 4
 16846 ;; This function calls:
 16847 ;;		_I2C_2_Master_Start
 16848 ;;		_I2C_2_Master_Stop
 16849 ;;		_I2C_2_Master_Write
 16850 ;; This function is called by:
 16851 ;;		_color_click_init
 16852 ;;		_decide_action
 16853 ;;		_main
 16854 ;; This function uses a non-reentrant model
 16855 ;;
 16856                           
 16857                           	psect	text56
 16858   008004                     __ptext56:
 16859                           	callstack 0
 16860   008004                     _color_writetoaddr:
 16861                           	callstack 25
 16862                           
 16863                           ;incstack = 0
 16864                           ;color_writetoaddr@address stored from wreg
 16865   008004  6E05               	movwf	color_writetoaddr@address^0,c
 16866   008006                     
 16867                           ;color.c: 39:     I2C_2_Master_Start();
 16868   008006  EC73  F040         	call	_I2C_2_Master_Start	;wreg free
 16869                           
 16870                           ;color.c: 40:     I2C_2_Master_Write(0x52 | 0x00);
 16871   00800A  0E52               	movlw	82
 16872   00800C  EC58  F040         	call	_I2C_2_Master_Write
 16873                           
 16874                           ;color.c: 41:     I2C_2_Master_Write(0x80 | address);
 16875   008010  5005               	movf	color_writetoaddr@address^0,w,c
 16876   008012  0980               	iorlw	128
 16877   008014  EC58  F040         	call	_I2C_2_Master_Write
 16878                           
 16879                           ;color.c: 42:     I2C_2_Master_Write(value);
 16880   008018  5004               	movf	color_writetoaddr@value^0,w,c
 16881   00801A  EC58  F040         	call	_I2C_2_Master_Write
 16882                           
 16883                           ;color.c: 43:     I2C_2_Master_Stop();
 16884   00801E  EC6E  F040         	call	_I2C_2_Master_Stop	;wreg free
 16885   008022  0012               	return		;funcret
 16886   008024                     __end_of_color_writetoaddr:
 16887                           	callstack 0
 16888                           
 16889 ;; *************** function _I2C_2_Master_Write *****************
 16890 ;; Defined at:
 16891 ;;		line 40 in file "i2c.c"
 16892 ;; Parameters:    Size  Location     Type
 16893 ;;  data_byte       1    wreg     unsigned char 
 16894 ;; Auto vars:     Size  Location     Type
 16895 ;;  data_byte       1    2[COMRAM] unsigned char 
 16896 ;; Return value:  Size  Location     Type
 16897 ;;                  1    wreg      void 
 16898 ;; Registers used:
 16899 ;;		wreg, status,2, status,0, cstack
 16900 ;; Tracked objects:
 16901 ;;		On entry : 0/0
 16902 ;;		On exit  : 0/0
 16903 ;;		Unchanged: 0/0
 16904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16908 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16909 ;;Total ram usage:        1 bytes
 16910 ;; Hardware stack levels used: 1
 16911 ;; Hardware stack levels required when called: 3
 16912 ;; This function calls:
 16913 ;;		_I2C_2_Master_Idle
 16914 ;; This function is called by:
 16915 ;;		_color_writetoaddr
 16916 ;;		_color_read_Clear
 16917 ;;		_color_read_Red
 16918 ;;		_color_read_Green
 16919 ;;		_color_read_Blue
 16920 ;; This function uses a non-reentrant model
 16921 ;;
 16922                           
 16923                           	psect	text57
 16924   0080B0                     __ptext57:
 16925                           	callstack 0
 16926   0080B0                     _I2C_2_Master_Write:
 16927                           	callstack 25
 16928                           
 16929                           ;incstack = 0
 16930                           ;I2C_2_Master_Write@data_byte stored from wreg
 16931   0080B0  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
 16932   0080B2                     
 16933                           ;i2c.c: 41:   I2C_2_Master_Idle();
 16934   0080B2  ECDB  F03F         	call	_I2C_2_Master_Idle	;wreg free
 16935   0080B6                     
 16936                           ;i2c.c: 42:   SSP2BUF = data_byte;
 16937   0080B6  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 16938   0080BA  0012               	return		;funcret
 16939   0080BC                     __end_of_I2C_2_Master_Write:
 16940                           	callstack 0
 16941                           
 16942 ;; *************** function _I2C_2_Master_Stop *****************
 16943 ;; Defined at:
 16944 ;;		line 35 in file "i2c.c"
 16945 ;; Parameters:    Size  Location     Type
 16946 ;;		None
 16947 ;; Auto vars:     Size  Location     Type
 16948 ;;		None
 16949 ;; Return value:  Size  Location     Type
 16950 ;;                  1    wreg      void 
 16951 ;; Registers used:
 16952 ;;		wreg, status,2, status,0, cstack
 16953 ;; Tracked objects:
 16954 ;;		On entry : 0/0
 16955 ;;		On exit  : 0/0
 16956 ;;		Unchanged: 0/0
 16957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16962 ;;Total ram usage:        0 bytes
 16963 ;; Hardware stack levels used: 1
 16964 ;; Hardware stack levels required when called: 3
 16965 ;; This function calls:
 16966 ;;		_I2C_2_Master_Idle
 16967 ;; This function is called by:
 16968 ;;		_color_writetoaddr
 16969 ;;		_color_read_Clear
 16970 ;;		_color_read_Red
 16971 ;;		_color_read_Green
 16972 ;;		_color_read_Blue
 16973 ;; This function uses a non-reentrant model
 16974 ;;
 16975                           
 16976                           	psect	text58
 16977   0080DC                     __ptext58:
 16978                           	callstack 0
 16979   0080DC                     _I2C_2_Master_Stop:
 16980                           	callstack 25
 16981   0080DC                     
 16982                           ;i2c.c: 36:   I2C_2_Master_Idle();
 16983   0080DC  ECDB  F03F         	call	_I2C_2_Master_Idle	;wreg free
 16984   0080E0                     
 16985                           ;i2c.c: 37:   SSP2CON2bits.PEN = 1;
 16986   0080E0  010E               	movlb	14	; () banked
 16987   0080E2  85DA               	bsf	218,2,b	;volatile
 16988   0080E4                     
 16989                           ; BSR set to: 14
 16990   0080E4  0012               	return		;funcret
 16991   0080E6                     __end_of_I2C_2_Master_Stop:
 16992                           	callstack 0
 16993                           
 16994 ;; *************** function _I2C_2_Master_Start *****************
 16995 ;; Defined at:
 16996 ;;		line 25 in file "i2c.c"
 16997 ;; Parameters:    Size  Location     Type
 16998 ;;		None
 16999 ;; Auto vars:     Size  Location     Type
 17000 ;;		None
 17001 ;; Return value:  Size  Location     Type
 17002 ;;                  1    wreg      void 
 17003 ;; Registers used:
 17004 ;;		wreg, status,2, status,0, cstack
 17005 ;; Tracked objects:
 17006 ;;		On entry : 0/0
 17007 ;;		On exit  : 0/0
 17008 ;;		Unchanged: 0/0
 17009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17014 ;;Total ram usage:        0 bytes
 17015 ;; Hardware stack levels used: 1
 17016 ;; Hardware stack levels required when called: 3
 17017 ;; This function calls:
 17018 ;;		_I2C_2_Master_Idle
 17019 ;; This function is called by:
 17020 ;;		_color_writetoaddr
 17021 ;;		_color_read_Clear
 17022 ;;		_color_read_Red
 17023 ;;		_color_read_Green
 17024 ;;		_color_read_Blue
 17025 ;; This function uses a non-reentrant model
 17026 ;;
 17027                           
 17028                           	psect	text59
 17029   0080E6                     __ptext59:
 17030                           	callstack 0
 17031   0080E6                     _I2C_2_Master_Start:
 17032                           	callstack 25
 17033   0080E6                     
 17034                           ;i2c.c: 26:   I2C_2_Master_Idle();
 17035   0080E6  ECDB  F03F         	call	_I2C_2_Master_Idle	;wreg free
 17036   0080EA                     
 17037                           ;i2c.c: 27:   SSP2CON2bits.SEN = 1;
 17038   0080EA  010E               	movlb	14	; () banked
 17039   0080EC  81DA               	bsf	218,0,b	;volatile
 17040   0080EE                     
 17041                           ; BSR set to: 14
 17042   0080EE  0012               	return		;funcret
 17043   0080F0                     __end_of_I2C_2_Master_Start:
 17044                           	callstack 0
 17045                           
 17046 ;; *************** function _I2C_2_Master_Idle *****************
 17047 ;; Defined at:
 17048 ;;		line 21 in file "i2c.c"
 17049 ;; Parameters:    Size  Location     Type
 17050 ;;		None
 17051 ;; Auto vars:     Size  Location     Type
 17052 ;;		None
 17053 ;; Return value:  Size  Location     Type
 17054 ;;                  1    wreg      void 
 17055 ;; Registers used:
 17056 ;;		wreg, status,2, status,0
 17057 ;; Tracked objects:
 17058 ;;		On entry : 0/0
 17059 ;;		On exit  : 0/0
 17060 ;;		Unchanged: 0/0
 17061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17065 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17066 ;;Total ram usage:        1 bytes
 17067 ;; Hardware stack levels used: 1
 17068 ;; Hardware stack levels required when called: 2
 17069 ;; This function calls:
 17070 ;;		Nothing
 17071 ;; This function is called by:
 17072 ;;		_I2C_2_Master_Start
 17073 ;;		_I2C_2_Master_RepStart
 17074 ;;		_I2C_2_Master_Stop
 17075 ;;		_I2C_2_Master_Write
 17076 ;;		_I2C_2_Master_Read
 17077 ;; This function uses a non-reentrant model
 17078 ;;
 17079                           
 17080                           	psect	text60
 17081   007FB6                     __ptext60:
 17082                           	callstack 0
 17083   007FB6                     _I2C_2_Master_Idle:
 17084                           	callstack 25
 17085   007FB6                     l123:
 17086   007FB6  010E               	movlb	14	; () banked
 17087   007FB8  B5D8               	btfsc	216,2,b	;volatile
 17088   007FBA  EFE1  F03F         	goto	u5061
 17089   007FBE  EFE3  F03F         	goto	u5060
 17090   007FC2                     u5061:
 17091   007FC2  EFDB  F03F         	goto	l123
 17092   007FC6                     u5060:
 17093   007FC6                     
 17094                           ; BSR set to: 14
 17095   007FC6  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
 17096   007FCA  0E1F               	movlw	31
 17097   007FCC  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
 17098   007FCE  A4D8               	btfss	status,2,c
 17099   007FD0  EFEC  F03F         	goto	u5071
 17100   007FD4  EFEE  F03F         	goto	u5070
 17101   007FD8                     u5071:
 17102   007FD8  EFDB  F03F         	goto	l123
 17103   007FDC                     u5070:
 17104   007FDC                     
 17105                           ; BSR set to: 14
 17106   007FDC  0012               	return		;funcret
 17107   007FDE                     __end_of_I2C_2_Master_Idle:
 17108                           	callstack 0
 17109                           
 17110 ;; *************** function _I2C_2_Master_Init *****************
 17111 ;; Defined at:
 17112 ;;		line 4 in file "i2c.c"
 17113 ;; Parameters:    Size  Location     Type
 17114 ;;		None
 17115 ;; Auto vars:     Size  Location     Type
 17116 ;;		None
 17117 ;; Return value:  Size  Location     Type
 17118 ;;                  1    wreg      void 
 17119 ;; Registers used:
 17120 ;;		wreg, status,2
 17121 ;; Tracked objects:
 17122 ;;		On entry : 0/0
 17123 ;;		On exit  : 0/0
 17124 ;;		Unchanged: 0/0
 17125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17130 ;;Total ram usage:        0 bytes
 17131 ;; Hardware stack levels used: 1
 17132 ;; Hardware stack levels required when called: 2
 17133 ;; This function calls:
 17134 ;;		Nothing
 17135 ;; This function is called by:
 17136 ;;		_color_click_init
 17137 ;;		_main
 17138 ;; This function uses a non-reentrant model
 17139 ;;
 17140                           
 17141                           	psect	text61
 17142   007F8C                     __ptext61:
 17143                           	callstack 0
 17144   007F8C                     _I2C_2_Master_Init:
 17145                           	callstack 27
 17146   007F8C                     
 17147                           ;i2c.c: 6:   SSP2CON1bits.SSPM= 0b1000;
 17148   007F8C  010E               	movlb	14	; () banked
 17149   007F8E  51D9               	movf	217,w,b	;volatile
 17150   007F90  0BF0               	andlw	-16
 17151   007F92  0908               	iorlw	8
 17152   007F94  6FD9               	movwf	217,b	;volatile
 17153   007F96                     
 17154                           ; BSR set to: 14
 17155                           ;i2c.c: 7:   SSP2CON1bits.SSPEN = 1;
 17156   007F96  8BD9               	bsf	217,5,b	;volatile
 17157                           
 17158                           ;i2c.c: 8:   SSP2ADD = (64000000/(4*100000))-1;
 17159   007F98  0E9F               	movlw	159
 17160   007F9A  6FD6               	movwf	214,b	;volatile
 17161   007F9C                     
 17162                           ; BSR set to: 14
 17163                           ;i2c.c: 11:   TRISDbits.TRISD5 = 1;
 17164   007F9C  8A84               	bsf	132,5,c	;volatile
 17165   007F9E                     
 17166                           ; BSR set to: 14
 17167                           ;i2c.c: 12:   TRISDbits.TRISD6 = 1;
 17168   007F9E  8C84               	bsf	132,6,c	;volatile
 17169   007FA0                     
 17170                           ; BSR set to: 14
 17171                           ;i2c.c: 13:   ANSELDbits.ANSELD5=0;
 17172   007FA0  9BA7               	bcf	167,5,b	;volatile
 17173   007FA2                     
 17174                           ; BSR set to: 14
 17175                           ;i2c.c: 14:   ANSELDbits.ANSELD6=0;
 17176   007FA2  9DA7               	bcf	167,6,b	;volatile
 17177                           
 17178                           ;i2c.c: 15:   SSP2DATPPS=0x1D;
 17179   007FA4  0E1D               	movlw	29
 17180   007FA6  6F1D               	movwf	29,b	;volatile
 17181                           
 17182                           ;i2c.c: 16:   SSP2CLKPPS=0x1E;
 17183   007FA8  0E1E               	movlw	30
 17184   007FAA  6F1C               	movwf	28,b	;volatile
 17185                           
 17186                           ;i2c.c: 17:   RD5PPS=0x1C;
 17187   007FAC  0E1C               	movlw	28
 17188   007FAE  6F6F               	movwf	111,b	;volatile
 17189                           
 17190                           ;i2c.c: 18:   RD6PPS=0x1B;
 17191   007FB0  0E1B               	movlw	27
 17192   007FB2  6F70               	movwf	112,b	;volatile
 17193   007FB4                     
 17194                           ; BSR set to: 14
 17195   007FB4  0012               	return		;funcret
 17196   007FB6                     __end_of_I2C_2_Master_Init:
 17197                           	callstack 0
 17198                           
 17199 ;; *************** function _Timer0_init *****************
 17200 ;; Defined at:
 17201 ;;		line 7 in file "timers.c"
 17202 ;; Parameters:    Size  Location     Type
 17203 ;;		None
 17204 ;; Auto vars:     Size  Location     Type
 17205 ;;		None
 17206 ;; Return value:  Size  Location     Type
 17207 ;;                  1    wreg      void 
 17208 ;; Registers used:
 17209 ;;		wreg, status,2
 17210 ;; Tracked objects:
 17211 ;;		On entry : 0/0
 17212 ;;		On exit  : 0/0
 17213 ;;		Unchanged: 0/0
 17214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17219 ;;Total ram usage:        0 bytes
 17220 ;; Hardware stack levels used: 1
 17221 ;; Hardware stack levels required when called: 2
 17222 ;; This function calls:
 17223 ;;		Nothing
 17224 ;; This function is called by:
 17225 ;;		_main
 17226 ;; This function uses a non-reentrant model
 17227 ;;
 17228                           
 17229                           	psect	text62
 17230   008024                     __ptext62:
 17231                           	callstack 0
 17232   008024                     _Timer0_init:
 17233                           	callstack 28
 17234   008024                     
 17235                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 17236   008024  50D6               	movf	214,w,c	;volatile
 17237   008026  0B1F               	andlw	-225
 17238   008028  0940               	iorlw	64
 17239   00802A  6ED6               	movwf	214,c	;volatile
 17240   00802C                     
 17241                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 17242   00802C  88D6               	bsf	214,4,c	;volatile
 17243                           
 17244                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1111;
 17245   00802E  0E0F               	movlw	15
 17246   008030  12D6               	iorwf	214,f,c	;volatile
 17247                           
 17248                           ;timers.c: 12:     T0CON0bits.T0OUTPS=0b000;
 17249   008032  0EF0               	movlw	-16
 17250   008034  16D5               	andwf	213,f,c	;volatile
 17251   008036                     
 17252                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
 17253   008036  88D5               	bsf	213,4,c	;volatile
 17254                           
 17255                           ;timers.c: 17:     TMR0H=0b00001011;
 17256   008038  0E0B               	movlw	11
 17257   00803A  6ED4               	movwf	212,c	;volatile
 17258                           
 17259                           ;timers.c: 18:     TMR0L=0b11011011;
 17260   00803C  0EDB               	movlw	219
 17261   00803E  6ED3               	movwf	211,c	;volatile
 17262   008040                     
 17263                           ;timers.c: 20:     T0CON0bits.T0EN=1;
 17264   008040  8ED5               	bsf	213,7,c	;volatile
 17265   008042  0012               	return		;funcret
 17266   008044                     __end_of_Timer0_init:
 17267                           	callstack 0
 17268                           
 17269 ;; *************** function _Interrupts_init *****************
 17270 ;; Defined at:
 17271 ;;		line 7 in file "interrupts.c"
 17272 ;; Parameters:    Size  Location     Type
 17273 ;;		None
 17274 ;; Auto vars:     Size  Location     Type
 17275 ;;		None
 17276 ;; Return value:  Size  Location     Type
 17277 ;;                  1    wreg      void 
 17278 ;; Registers used:
 17279 ;;		None
 17280 ;; Tracked objects:
 17281 ;;		On entry : 0/0
 17282 ;;		On exit  : 0/0
 17283 ;;		Unchanged: 0/0
 17284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17289 ;;Total ram usage:        0 bytes
 17290 ;; Hardware stack levels used: 1
 17291 ;; Hardware stack levels required when called: 2
 17292 ;; This function calls:
 17293 ;;		Nothing
 17294 ;; This function is called by:
 17295 ;;		_main
 17296 ;; This function uses a non-reentrant model
 17297 ;;
 17298                           
 17299                           	psect	text63
 17300   0080BC                     __ptext63:
 17301                           	callstack 0
 17302   0080BC                     _Interrupts_init:
 17303                           	callstack 28
 17304   0080BC                     
 17305                           ;interrupts.c: 9:     INTCONbits.PEIE=1;
 17306   0080BC  8CF2               	bsf	242,6,c	;volatile
 17307                           
 17308                           ;interrupts.c: 10:     PIE2bits.C1IE=1;
 17309   0080BE  010E               	movlb	14	; () banked
 17310   0080C0  812B               	bsf	43,0,b	;volatile
 17311                           
 17312                           ;interrupts.c: 14:     PIE0bits.IOCIE=1;
 17313   0080C2  8929               	bsf	41,4,b	;volatile
 17314                           
 17315                           ;interrupts.c: 15:     INTCONbits.GIE=1;
 17316   0080C4  8EF2               	bsf	242,7,c	;volatile
 17317   0080C6                     
 17318                           ; BSR set to: 14
 17319   0080C6  0012               	return		;funcret
 17320   0080C8                     __end_of_Interrupts_init:
 17321                           	callstack 0
 17322                           
 17323 ;; *************** function _HighISR *****************
 17324 ;; Defined at:
 17325 ;;		line 23 in file "interrupts.c"
 17326 ;; Parameters:    Size  Location     Type
 17327 ;;		None
 17328 ;; Auto vars:     Size  Location     Type
 17329 ;;		None
 17330 ;; Return value:  Size  Location     Type
 17331 ;;                  1    wreg      void 
 17332 ;; Registers used:
 17333 ;;		wreg, cstack
 17334 ;; Tracked objects:
 17335 ;;		On entry : 0/0
 17336 ;;		On exit  : 0/0
 17337 ;;		Unchanged: 0/0
 17338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17343 ;;Total ram usage:        0 bytes
 17344 ;; Hardware stack levels used: 1
 17345 ;; Hardware stack levels required when called: 1
 17346 ;; This function calls:
 17347 ;;		i2_sendCharSerial4
 17348 ;; This function is called by:
 17349 ;;		Interrupt level 2
 17350 ;; This function uses a non-reentrant model
 17351 ;;
 17352                           
 17353                           	psect	intcode
 17354   000008                     __pintcode:
 17355                           	callstack 0
 17356   000008                     _HighISR:
 17357                           	callstack 20
 17358                           
 17359                           ; BSR set to: 14
 17360                           ;incstack = 0
 17361   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17362   00000A                     
 17363                           ;interrupts.c: 48:     if (PORTBbits.RB0){
 17364   00000A  A08A               	btfss	138,0,c	;volatile
 17365   00000C  EF0A  F000         	goto	i2u665_41
 17366   000010  EF0C  F000         	goto	i2u665_40
 17367   000014                     i2u665_41:
 17368   000014  EF10  F000         	goto	i2l449
 17369   000018                     i2u665_40:
 17370   000018                     
 17371                           ;interrupts.c: 49:         LATHbits.LATH3 = 0;
 17372   000018  9680               	bcf	128,3,c	;volatile
 17373   00001A                     
 17374                           ;interrupts.c: 50:         sendCharSerial4('a');
 17375   00001A  0E61               	movlw	97
 17376   00001C  EC4C  F040         	call	i2_sendCharSerial4
 17377   000020                     i2l449:
 17378   000020  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17379   000022  0011               	retfie		f
 17380   000024                     __end_of_HighISR:
 17381                           	callstack 0
 17382                           
 17383 ;; *************** function i2_sendCharSerial4 *****************
 17384 ;; Defined at:
 17385 ;;		line 31 in file "serial.c"
 17386 ;; Parameters:    Size  Location     Type
 17387 ;;  charToSend      1    wreg     unsigned char 
 17388 ;; Auto vars:     Size  Location     Type
 17389 ;;  charToSend      1    0[COMRAM] unsigned char 
 17390 ;; Return value:  Size  Location     Type
 17391 ;;                  1    wreg      void 
 17392 ;; Registers used:
 17393 ;;		wreg
 17394 ;; Tracked objects:
 17395 ;;		On entry : 0/0
 17396 ;;		On exit  : 0/0
 17397 ;;		Unchanged: 0/0
 17398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17402 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17403 ;;Total ram usage:        1 bytes
 17404 ;; Hardware stack levels used: 1
 17405 ;; This function calls:
 17406 ;;		Nothing
 17407 ;; This function is called by:
 17408 ;;		_HighISR
 17409 ;; This function uses a non-reentrant model
 17410 ;;
 17411                           
 17412                           	psect	text65
 17413   008098                     __ptext65:
 17414                           	callstack 0
 17415   008098                     i2_sendCharSerial4:
 17416                           	callstack 20
 17417                           
 17418                           ;incstack = 0
 17419                           ;i2sendCharSerial4@charToSend stored from wreg
 17420   008098  6E01               	movwf	i2sendCharSerial4@charToSend^0,c
 17421   00809A                     i2l495:
 17422   00809A  010E               	movlb	14	; () banked
 17423   00809C  A537               	btfss	55,2,b	;volatile
 17424   00809E  EF53  F040         	goto	i2u664_41
 17425   0080A2  EF55  F040         	goto	i2u664_40
 17426   0080A6                     i2u664_41:
 17427   0080A6  EF4D  F040         	goto	i2l495
 17428   0080AA                     i2u664_40:
 17429   0080AA                     
 17430                           ; BSR set to: 14
 17431                           ;serial.c: 33:     TX4REG = charToSend;
 17432   0080AA  C001  FEE4         	movff	i2sendCharSerial4@charToSend,3812	;volatile
 17433   0080AE                     
 17434                           ; BSR set to: 14
 17435   0080AE  0012               	return		;funcret
 17436   0080B0                     __end_ofi2_sendCharSerial4:
 17437                           	callstack 0
 17438                           
 17439                           	psect	rparam
 17440   000000                     
 17441                           	psect	temp
 17442   00005E                     btemp:
 17443                           	callstack 0
 17444   00005E                     	ds	1
 17445   000000                     int$flags	set	btemp
 17446   000000                     wtemp8	set	btemp+1
 17447   000000                     ttemp5	set	btemp+1
 17448   000000                     ttemp6	set	btemp+4
 17449   000000                     ttemp7	set	btemp+8
 17450                           
 17451                           	psect	config
 17452                           
 17453                           ;Config register CONFIG1L @ 0x300000
 17454                           ;	External Oscillator mode Selection bits
 17455                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 17456                           ;	Power-up default value for COSC bits
 17457                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 17458   300000                     	org	3145728
 17459   300000  AA                 	db	170
 17460                           
 17461                           ;Config register CONFIG1H @ 0x300001
 17462                           ;	unspecified, using default values
 17463                           ;	Clock Out Enable bit
 17464                           ;	CLKOUTEN = 0x1, unprogrammed default
 17465                           ;	Clock Switch Enable bit
 17466                           ;	CSWEN = 0x1, unprogrammed default
 17467                           ;	Fail-Safe Clock Monitor Enable bit
 17468                           ;	FCMEN = 0x1, unprogrammed default
 17469   300001                     	org	3145729
 17470   300001  FF                 	db	255
 17471                           
 17472                           ;Config register CONFIG3L @ 0x300004
 17473                           ;	WDT Period Select bits
 17474                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17475                           ;	WDT operating mode
 17476                           ;	WDTE = OFF, WDT Disabled
 17477   300004                     	org	3145732
 17478   300004  9F                 	db	159
 17479                           
 17480                           ;Config register CONFIG3H @ 0x300005
 17481                           ;	unspecified, using default values
 17482                           ;	WDT Window Select bits
 17483                           ;	WDTCWS = 0x7, unprogrammed default
 17484                           ;	WDT input clock selector
 17485                           ;	WDTCCS = 0x7, unprogrammed default
 17486   300005                     	org	3145733
 17487   300005  FF                 	db	255
 17488                           tosu	equ	0xFFF
 17489                           tosh	equ	0xFFE
 17490                           tosl	equ	0xFFD
 17491                           stkptr	equ	0xFFC
 17492                           pclatu	equ	0xFFB
 17493                           pclath	equ	0xFFA
 17494                           pcl	equ	0xFF9
 17495                           tblptru	equ	0xFF8
 17496                           tblptrh	equ	0xFF7
 17497                           tblptrl	equ	0xFF6
 17498                           tablat	equ	0xFF5
 17499                           prodh	equ	0xFF4
 17500                           prodl	equ	0xFF3
 17501                           indf0	equ	0xFEF
 17502                           postinc0	equ	0xFEE
 17503                           postdec0	equ	0xFED
 17504                           preinc0	equ	0xFEC
 17505                           plusw0	equ	0xFEB
 17506                           fsr0h	equ	0xFEA
 17507                           fsr0l	equ	0xFE9
 17508                           wreg	equ	0xFE8
 17509                           indf1	equ	0xFE7
 17510                           postinc1	equ	0xFE6
 17511                           postdec1	equ	0xFE5
 17512                           preinc1	equ	0xFE4
 17513                           plusw1	equ	0xFE3
 17514                           fsr1h	equ	0xFE2
 17515                           fsr1l	equ	0xFE1
 17516                           bsr	equ	0xFE0
 17517                           indf2	equ	0xFDF
 17518                           postinc2	equ	0xFDE
 17519                           postdec2	equ	0xFDD
 17520                           preinc2	equ	0xFDC
 17521                           plusw2	equ	0xFDB
 17522                           fsr2h	equ	0xFDA
 17523                           fsr2l	equ	0xFD9
 17524                           status	equ	0xFD8

Data Sizes:
    Strings     105
    Constant    112
    Data        0
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      93
    BANK0           160     91     129
    BANK1           256    184     244
    BANK2           256    180     180
    BANK3           256    185     185
    BANK4           256      0      80
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    decide_action@pblue_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@blue_val(BANK2[20]), 

    decide_action@pclear_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@clear_val(BANK2[20]), 

    decide_action@pgreen_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@green_val(BANK2[20]), 

    decide_action@pred_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@red_val(BANK2[20]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pblue_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@blue_val(BANK3[20]), 

    main@pclear_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK3[20]), 

    main@pgreen_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@green_val(BANK3[20]), 

    main@pmL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    main@pmL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pmR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    main@pmR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pred_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@red_val(BANK3[20]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    reverse_after_read@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    reverse_after_read@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    reverse_after_read@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    reverse_one_square@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    reverse_one_square@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S1083DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    S1083DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S2556$buffer	PTR unsigned char  size(2) Largest target is 0

    S2556$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@blue_val(BANK2[20]), decide_action@green_val(BANK2[20]), decide_action@red_val(BANK2[20]), main@blue_val(BANK3[20]), 
		 -> main@clear_val(BANK3[20]), main@green_val(BANK3[20]), main@red_val(BANK3[20]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), main@motorR(BANK3[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[14]), STR_4(CODE[12]), 
		 -> STR_5(CODE[14]), STR_6(CODE[14]), STR_7(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@blue_val(BANK2[20]), decide_action@green_val(BANK2[20]), decide_action@red_val(BANK2[20]), main@blue_val(BANK3[20]), 
		 -> main@clear_val(BANK3[20]), main@green_val(BANK3[20]), main@red_val(BANK3[20]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_11(CODE[4]), STR_8(CODE[4]), 

    turn_left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_left_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_left_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_left_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_left_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_right_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_right_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_right_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_right_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[14]), STR_4(CODE[12]), 
		 -> STR_5(CODE[14]), STR_6(CODE[14]), STR_7(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[14]), STR_4(CODE[12]), 
		 -> STR_5(CODE[14]), STR_6(CODE[14]), STR_7(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[14]), STR_4(CODE[12]), 
		 -> STR_5(CODE[14]), STR_6(CODE[14]), STR_7(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _turn_right_90->_stop
    _turn_right_135->_stop
    _turn_left_90->_stop
    _turn_left_135->_stop
    _reverse_one_square->_stop
    _reverse_after_read->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _powf->___flge
    _sqrtf->___fladd
    _scalbnf->___flmul
    ___flmul->___fladd
    ___flsub->___fldiv
    ___flge->___flsub
    ___fldiv->___flmul
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_sendCharSerial4

Critical Paths under _main in BANK0

    _main->_decide_action
    _decide_action->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _decide_action->_powf

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_decide_action

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               215   215      0  353272
                                             89 BANK0      2     2      0
                                              0 BANK3    185   185      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
              _color_click_toggleLED
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _color_writetoaddr
                      _decide_action
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                      _invert_action
                        _resetTimer0
                 _reverse_after_read
                 _reverse_one_square
                  _sendStringSerial4
                            _sprintf
                               _stop
                      _turn_left_135
                       _turn_left_90
                     _turn_right_135
                      _turn_right_90
 ---------------------------------------------------------------------------------
 (1) _turn_right_90                                        6     2      4    7898
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_right_135                                       6     2      4    6834
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_90                                         6     2      4    6986
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_135                                        6     2      4    6986
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse_one_square                                   6     2      4    6834
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse_after_read                                   6     2      4    7746
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    3981
                                             20 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _invert_action                                        4     4      0      51
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get16bitTMR0val                                      6     4      2      24
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    2961
                                             20 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          6     4      2    2285
                                             14 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              7 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _decide_action                                      188   182      6  218827
                                             83 BANK0      6     0      6
                                              0 BANK2    180   180      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flsub
                           ___xxtofl
                  _color_writetoaddr
                               _powf
                  _sendStringSerial4
                            _sprintf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    15      7   75976
                                             63 BANK0     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   74398
                                             91 COMRAM     1     1      0
                                             60 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3   73928
                                             89 COMRAM     2     2      0
                                             50 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                                _abs
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   70014
                                             87 COMRAM     2     2      0
                                              0 BANK0     50    44      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     463
                                              1 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    3399
                                             15 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1357
                                              9 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1037
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             67 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              1 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     183
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     613
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     625
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     599
                                              2 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   87339
                                              0 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sqrtf                                               41    37      4    1413
                                             17 COMRAM    37    33      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6   12737
                                             42 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   12053
                                             17 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8   23447
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8   16942
                                              1 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     335
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    2066
                                             75 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4523
                                             42 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              2 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_toggleLED                                1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     978
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     978
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0      22
                  i2_sendCharSerial4
 ---------------------------------------------------------------------------------
 (11) i2_sendCharSerial4                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_click_toggleLED
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_writetoaddr
   _decide_action
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
     ___flge
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
     ___flsub
     ___xxtofl
     _color_writetoaddr
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
         ___fladd (ARG)
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
     _sqrtf
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _invert_action
   _resetTimer0
   _reverse_after_read
     _setMotorPWM
     _stop
       _setMotorPWM
   _reverse_one_square
     _setMotorPWM
     _stop
   _sendStringSerial4
   _sprintf
   _stop
   _turn_left_135
     _setMotorPWM
     _stop
   _turn_left_90
     _setMotorPWM
     _stop
   _turn_right_135
     _setMotorPWM
     _stop
   _turn_right_90
     _setMotorPWM
     _stop

 _HighISR (ROOT)
   i2_sendCharSerial4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100     B9      B9      11       72.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100     B4      B4       9       70.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B8      F4       7       95.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5B      81       5       80.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5D       1       98.9%
BITBIGSFRllhllh     37      0       0      49        0.0%
BITBIGSFRllhhl      31      0       0      47        0.0%
BITBIGSFRlllllh     2A      0       0      61        0.0%
BITBIGSFRllllll     26      0       0      67        0.0%
BITBIGSFRllllhh     20      0       0      52        0.0%
BITBIGSFRhhlllh     1B      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      44        0.0%
BITBIGSFRlllllh     14      0       0      54        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      56        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      53        0.0%
BITBIGSFRlllllh      B      0       0      65        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRlllllh      9      0       0      55        0.0%
BITBIGSFRllhlll      8      0       0      50        0.0%
BITBIGSFRllhhhl      6      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      66        0.0%
BITBIGSFRlllllh      6      0       0      60        0.0%
BITBIGSFRlllllh      5      0       0      59        0.0%
BITBIGSFRllhhhh      3      0       0      45        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllhlh       2      0       0      48        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      64        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRlhlh        1      0       0      42        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      57        0.0%
BITBIGSFRlllh        1      0       0      51        0.0%
BITBIGSFRhlhl        1      0       0      40        0.0%
BITBIGSFRhhllll      1      0       0      39        0.0%
BITBIGSFRlhh         1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     38F      68        0.0%
DATA                 0      0     38F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 11:58:44 2024

               _color_read_Red 7BAA                   ___fldiv@aexp 0043                   ___fldiv@bexp 0042  
                 ___fldiv@sign 003B                _color_read_Blue 7C9A                             _L1 0E5D  
                           _L2 0E59                             _L3 0E55                             _L4 0E51  
                           _L5 0E4D                             _L6 0E49                             l51 7D32  
                           l60 7BF8                             _P1 0E45                             l54 8022  
                           _P2 0E41                             l63 7C48                             _P3 0E3D  
                           _P4 0E39                             l57 7C98                             l81 45DE  
                           l73 3458                             _P5 0E35                             l66 7CE8  
                           l75 34D4                             l69 7B02                             l77 3550  
                           l93 79C2                   ___awdiv@sign 0007                             _bp 0E11  
                           _cp 0E21            ___wmul@multiplicand 0004          __end_of_invert_action 79C4  
             _color_read_Clear 7C4A               _color_read_Green 7BFA              ??_Interrupts_init 0002  
                          l120 7FB4                            l202 75CC                            l123 7FB6  
                          l132 80DA                            l141 7E00                            l126 7FDC  
                          l135 80E4                            l207 75FC                            l215 794C  
                          l223 7398                            l231 72AE                            l129 80EE  
                          l410 8042                            l138 80BA                            l250 6B6E  
                          l234 7168                            l218 733E                            l242 707C  
                          l226 7254                            l413 807E                            l255 6BE2  
                          l263 6EEE                            l239 71C4                            l247 70D8  
                          l504 7F8A                            l192 78B2                            l416 80D0  
                          l258 6E7A                            l443 80C6                            l199 6ADC  
                          l560 8002                            l804 7766                            l830 6DEC  
                          l486 8060                            l495 8082                            l825 6DA6  
                          l834 7EF6                            l498 8096                            l819 7810  
                          l791 7540                            l857 6CE8                            _lg2 0E31  
                          _abs 7EF8                            _pad 7A38                            _ovt 0E25  
                 ___awmod@sign 0007                            prod 0FF3                            wreg 0FE8  
                 ___flmul@aexp 001F                   ___flmul@bexp 0024                   ___flmul@sign 001E  
                 ___flmul@temp 0029                   ___flmul@prod 0025                    main@actions 0300  
                 ___fltol@exp1 000B                           l1105 52D0                           l1114 53A0  
                         l1130 7DBE                           l1115 538E                           l1051 7A2E  
                         ?_abs 0008                           l1142 6028                           l1222 68AC  
                         l1215 6814                           l1144 5E88                           l1153 5ECE  
                         l1090 516A                           l1218 6970                           l1058 7A36  
                         l1155 5F46                           l1147 5E4C                           l1315 4DAE  
                         l1156 5F34                           l1404 7BA8                           l1229 6908  
                         l1181 5742                           l1174 554C                           l1238 7E40  
                         l1191 5872                           l1183 57BA                           l1271 7A9C  
                         l1088 51B6                           l1184 57A8                           l1416 76B6  
                         l1424 7E80                           l1360 7D78                           l1097 5486  
                         l1089 51A4                           l1513 13C8                           l1178 58B0  
                         l1370 6FEC                           l1282 4FC6                           l1338 6376  
                         l1267 7A4E                           l1517 1426                           l1509 1316  
                         l1285 4966                           l1550 331E                           l1375 7F12  
                         l1287 47AC                           l1384 67BC                           l1378 7F2A  
                         l1387 6700                           l1580 5A96                           l1484 335A  
                         l1557 80F0                           l1398 7B58                           l1567 65AA  
                         l1584 5AF4                           l1576 5C8E                           l1489 11BE  
                         l1587 5BB8                           l1499 1254                           l1595 7EBE  
                         l5301 7FC6                           l1589 5C26                           l6101 78D0  
                         l5311 79CC                           l5303 7FDE                           l6111 7914  
                         l6103 78DA                           l6121 7CF8                           l5321 7A02  
                         l5313 79DE                           l5305 7FFA                           l6105 78F2  
                         l6113 791C                           l6131 7D28                           l6123 7D08  
                         l5323 7A18                           l5315 79E6                           l6115 7934  
                         l6107 78FC                           l6133 7D2A                           l6125 7D12  
                         l6117 7CEA                           l6141 7C4A                           l7101 5100  
                         l7021 7644                           l7013 75FE                           l5325 7A20  
                         l5317 79EE                           l5309 79C4                           l6109 7908  
                         ?_pad 0010                           l5431 80B2                           l6135 7D2C  
                         l6127 7D1C                           l6119 7CEE                           l6143 7C90  
                         l7111 5152                           l7103 5104                           l7031 4FE2  
                         l7023 7676                           l7015 760E                           l5327 7A22  
                         l5319 79FC                           l5511 69F6                           l5433 80B6  
                         l6137 7D2E                           l6129 7D26                           l6161 7CE0  
                         l6153 7BFA                           l7201 53CA                           l7121 5196  
                         l7113 5162                           l7105 5108                           l7041 5016  
                         l7033 4FE4                           l5441 58C2                           l5521 8082  
                         l7017 761E                           l8001 606A                           l5329 7A28  
                         l5513 69FA                           l5505 6972                           l6401 78A6  
                         l5427 80E6                           l5435 80DC                           l6139 7D30  
                         l6155 7C40                           l6147 7BAA                           l7211 5446  
                         l7203 5404                           l7123 5198                           l7115 5178  
                         l7107 510C                           l7051 5048                           l7035 4FF4  
                         l7043 501E                           l7027 4FC8                           l5531 6824  
                         l5443 58F6                           l5523 8092                           l7019 7628  
                         l8011 60D6                           l8003 6074                           l5515 6A3C  
                         l5507 698E                           l6411 78B0                           l6403 78A8  
                         l5429 80EA                           l5437 80E0                           l6165 7A9E  
                         l6149 7BF0                           l7301 5E00                           l7221 5466  
                         l7213 544A                           l7205 5406                           l7141 5220  
                         l7133 51E8                           l7125 51A2                           l7117 5184  
                         l7109 5136                           l7061 507E                           l7053 504E  
                         l7045 502E                           l7037 5004                           l7029 4FD4  
                         l5541 6862                           l5533 683A                           l5525 67C0  
                         l8101 6388                           l5461 59B6                           l5445 5924  
                         l5453 5956                           l8021 6162                           l8013 60EE  
                         l8005 6094                           l5517 6A58                           l5509 69E2  
                         l6421 759C                           l6413 7542                           l6405 78AA  
                         l6501 7028                           l5631 7FA0                           l5623 7F8C  
                         l6159 7C9A                           l7311 5E4A                           l7303 5E10  
                         l7223 5474                           l7215 5458                           l7207 5416  
                         l7143 5224                           l7135 51F8                           l7127 51C4  
                         l7151 5244                           l7119 5188                           l7071 50BA  
                         l7063 508E                           l7055 505C                           l7047 5034  
                         l7039 5014                           l5551 68EA                           l5543 6894  
                         l5527 67D0                           l8111 6430                           l8103 63A4  
                         l5471 5A36                           l5463 59C4                           l5455 5974  
                         l5447 5932                           l5439 58B2                           l7231 7E4E  
                         l8023 6172                           l8031 61BA                           l8015 6122  
                         l8007 60B4                           l5519 6A9C                           l6423 75A6  
                         l6415 7562                           l6407 78AC                           l6351 7950  
                         l6431 72B0                           l6511 706C                           l6503 7032  
                         l5633 7FA2                           l5625 7F96                           l5641 7DC2  
                         l7321 5E98                           l7313 5E56                           l7305 5E18  
                         l7241 5CAA                           l7225 5476                           l7217 545E  
                         l7209 5426                           l7153 526A                           l7161 52C0  
                         l7145 5232                           l7137 5206                           l7129 51D4  
                         l7081 50D8                           l7073 50C8                           l7065 5090  
                         l7057 505E                           l7049 5046                           l5561 6940  
                         l5553 68F8                           l5545 6896                           l5537 684E  
                         l5529 67DE                           l7401 5516                           l8121 64B0  
                         l8113 6438                           l8105 63D8                           l5481 5AD6  
                         l5473 5A4A                           l5457 59A2                           l5449 5942  
                         l8201 123E                           l7233 7E5C                           l8041 61FE  
                         l8025 6182                           l8017 613E                           l8009 60CC  
                         l8033 61D0                           l6425 75B2                           l6417 757A  
                         l6409 78AE                           l6361 7964                           l6353 7954  
                         l6097 78B4                           l6521 6B02                           l6441 7316  
                         l6433 72D2                           l6513 7094                           l6505 704A  
                         l5627 7F9C                           l5299 7FB6                           l5635 8006  
                         l5651 7DFE                           l5643 7DC6                           l7323 5EAE  
                         l7331 5EDE                           l7315 5E74                           l7307 5E28  
                         l7251 5CDE                           l7243 5CAC                           l7219 5460  
                         l7171 5314                           l7163 52E6                           l7155 529E  
                         l7147 5234                           l7139 5214                           l7091 50EC  
                         l7083 50DC                           l7075 50CC                           l7059 506E  
                         l7067 5098                           l5563 6950                           l5555 6916  
                         l5547 68A2                           l5539 6856                           l7411 556C  
                         l7403 5526                           l8131 652C                           l8123 64B8  
                         l8115 6454                           l8107 63E0                           l5491 5B80  
                         l5483 5AE4                           l5475 5A54                           l7235 7E60  
                         l8051 6284                           l8035 61DA                           l8027 6198  
                         l8019 6152                           l6427 75BE                           l6419 7584  
                         l6363 7968                           l6355 7958                           l6371 7970  
                         l6099 78B8                           l6531 6B52                           l6523 6B1A  
                         l6451 7384                           l6443 7322                           l6435 72EA  
                         l6515 70AC                           l6507 7054                           l5629 7F9E  
                         l5645 7DCE                           l5637 80D2                           l7333 5EEC  
                         l7325 5EB4                           l7317 5E76                           l7309 5E3C  
                         l7261 5D10                           l7245 5CBC                           l7253 5CE6  
                         l7237 5C90                           l7181 533E                           l7173 5322  
                         l7165 52F6                           l7157 52A0                           l7149 523E  
                         l7093 50F0                           l7085 50E0                           l7077 50D0  
                         l7069 50A8                           l5565 695E                           l5557 6918  
                         l5549 68DE                           l7501 58A0                           l7421 55AC  
                         l7405 5536                           l8125 64D4                           l8109 63FC  
                         l8133 6534                           l8117 6460                           l5493 5BC8  
                         l5485 5B0E                           l5477 5A60                           l5469 59E2  
                         l8221 1342                           l8205 1268                           l8213 12B4  
                         l7229 7E42                           l8037 61F0                           l8045 6206  
                         l8029 61B6                           l8141 7E02                           l6429 75E4  
                         l6381 7860                           l6365 796C                           l6357 795C  
                         l6541 6BCA                           l6533 6B5E                           l6525 6B24  
                         l6445 732E                           l6437 72F4                           l6517 70C4  
                         l6509 7060                           l6461 7222                           l6453 71C6  
                         l5647 7DD6                           l5639 80D6                           l7343 5F56  
                         l7351 5F9E                           l7335 5EF0                           l7327 5EBE  
                         l7319 5E86                           l7271 5D44                           l7263 5D12  
                         l7255 5CF6                           l7247 5CCC                           l7239 5C9C  
                         l7191 5370                           l7183 534E                           l7175 5324  
                         l7159 52B0                           l7095 50F4                           l7087 50E4  
                         l7079 50D4                           l5567 6960                           l5559 691C  
                         l7431 55F6                           l7423 55B8                           l7415 5580  
                         l7407 553C                           l8135 6566                           l8127 6508  
                         l8119 647C                           l5495 5BD2                           l5487 5B2E  
                         l5479 5A6E                           l8311 172A                           l8303 1688  
                         l8215 12D0                           l8207 1276                           l5671 7F6E  
                         l7511 7768                           l8055 62AC                           l8039 61F6  
                         l8047 6238                           l8071 6350                           l8143 7E10  
                         l6391 7882                           l6383 786A                           l9111 7984  
                         l6359 7960                           l6535 6B86                           l6527 6B3C  
                         l6519 6ADE                           l6551 6E48                           l6543 6DEE  
                         l6447 7356                           l6439 730C                           l6471 7284  
                         l6463 722C                           l6455 71E8                           l5649 7DFC  
                         l7361 6008                           l7353 5FB8                           l7345 5F62  
                         l7337 5EFE                           l7329 5ECC                           l7281 5D8A  
                         l7265 5D22                           l7273 5D4C                           l7257 5CFC  
                         l7249 5CDC                           l7193 5386                           l7177 5332  
                         l7169 530A                           l7185 5350                           l7097 50F8  
                         l7089 50E8                           l7505 7D7A                           l7441 5648  
                         l7433 5602                           l7425 55D0                           l7417 558C  
                         l7409 555C                           l8137 659A                           l8129 6510  
                         l5497 5BE8                           l5489 5B42                           l8401 20E2  
                         l8321 18CE                           l8313 175E                           l8241 1444  
                         l8233 13D8                           l8225 137A                           l8217 12DE  
                         l8209 129E                           l8161 0F5A                           l8153 0EDC  
                         l5673 7F72                           l7521 7808                           l7513 7796  
                         l7601 7A38                           l8065 6312                           l8057 62D6  
                         l8049 625C                           l9113 621A                           l8145 7E18  
                         l6393 7884                           l6385 786C                           l6377 7812  
                         l6537 6B9E                           l6529 6B46                           l6561 6EAA  
                         l6553 6E52                           l6545 6E0E                           l6481 711E  
                         l6449 736E                           l6473 729A                           l6465 7238  
                         l6457 7200                           l6571 8036                           l7363 6016  
                         l7355 5FCE                           l7347 5F70                           l7339 5F2C  
                         l7291 5DB2                           l7283 5D8E                           l7275 5D5C  
                         l7267 5D32                           l7259 5D02                           l7531 6D28  
                         l7179 533A                           l7187 535E                           l7099 50FC  
                         l7507 7D8A                           l7451 56C6                           l7443 5658  
                         l7435 5612                           l7427 55DC                           l7419 5596  
                         l5499 5BFE                           l8411 220A                           l8403 213A  
                         l8331 1974                           l8323 18DE                           l8315 17B6  
                         l8307 169E                           l8251 1524                           l8243 1478  
                         l8235 13F4                           l8227 1392                           l8219 132A  
                         l8171 0FD0                           l8163 0F76                           l8155 0EFC  
                         l5667 7F5C                           l7523 780E                           l7515 77A6  
                         l7611 7A8C                           l7603 7A46                           l8059 62E4  
                         l9115 62C0                           l8067 6342                           l8091 7D3C  
                         l8147 7E20                           l6395 788E                           l6387 7876  
                         l6379 783C                           l6539 6BB6                           l6563 6EC2  
                         l6555 6E5E                           l6547 6E26                           l6491 7180  
                         l6483 7136                           l6475 70DA                           l6467 7244  
                         l6459 720A                           l6573 8040                           l7365 601C  
                         l7357 5FE8                           l7349 5F9A                           l7277 5D72  
                         l7269 5D42                           l7541 6D94                           l7533 6D56  
                         l7197 53B0                           l7189 5362                           l7461 5740  
                         l7453 56FC                           l7445 5674                           l7437 561E  
                         l7429 55E8                           l7381 54A4                           l8501 2A2C  
                         l8421 22D0                           l8413 221A                           l8405 216E  
                         l8341 1A4E                           l8333 1990                           l8325 18F8  
                         l8317 17EA                           l8309 16D2                           l8261 157A  
                         l8245 1488                           l8253 1548                           l8237 140A  
                         l8229 13A0                           l8181 1042                           l8157 0F44  
                         l5669 7F60                           l7701 74B6                           l7517 77D4  
                         l7621 6F82                           l7613 6EF0                           l7605 7A5A  
                         l9117 6334                           l8093 7D4E                           l8149 7E30  
                         l6397 78A2                           l6389 7878                           l6581 8050  
                         l6565 6ED6                           l6557 6E6A                           l6549 6E30  
                         l6493 7198                           l6485 7140                           l6477 70FC  
                         l6469 726C                           l6575 80BC                           l6567 8024  
                         l7367 601E                           l7359 6004                           l7295 5DC6  
                         l7279 5D82                           l7287 5DA2                           l7543 6DE4  
                         l7535 6D66                           l7527 6CEA                           l7551 7ED6  
                         l7199 53BC                           l7471 57A0                           l7463 5752  
                         l7455 570A                           l7447 5680                           l7439 562E  
                         l7391 54EA                           l7383 54B4                           l7375 5488  
                         l8511 2AE6                           l8431 23DE                           l8423 2304  
                         l8415 2234                           l8407 21A2                           l8351 1AB6  
                         l8343 1A66                           l8335 19C4                           l8327 192C  
                         l8319 181E                           l8271 15AA                           l8247 14EC  
                         l8239 1436                           l8191 11F8                           l8183 1056  
                         l8175 1008                           l8167 0F8C                           l7711 74EE  
                         l7703 74BE                           l7519 77E4                           l7631 6FE4  
                         l7615 6F10                           l7607 7A6A                           l8095 7D6E  
                         l6591 8062                           l6399 78A4                           l6583 805A  
                         l6559 6E92                           l6495 71B0                           l6487 714C  
                         l6479 7114                           l6569 802C                           l7297 5DE0  
                         l7289 5DB2                           l7545 6DEA                           l7537 6D74  
                         l7529 6D18                           l7553 7EE6                           l7481 580E  
                         l7465 5760                           l7457 5728                           l7449 569C  
                         l7393 54F0                           l7385 54C4                           l7377 5494  
                         l8521 2D22                           l8513 2C9A                           l8505 2A42  
                         l8441 2572                           l8433 2412                           l8425 2380  
                         l8417 2268                           l8409 21D6                           l8361 1B6E  
                         l8353 1ADA                           l8345 1A76                           l8337 19D6  
                         l8329 1964                           l8273 15BA                           l8249 150C  
                         l8257 155C                           l8185 1072                           l8177 1018  
                         l8169 0FAE                           l7721 751A                           l7713 74F4  
                         l7705 74D0                           l7617 6F4E                           l7625 6F8E  
                         l7641 7B12                           l7609 7A6E                           l7801 46C0  
                         l8089 7D34                           l8601 371E                           l6593 8068  
                         l6585 805C                           l6577 8044                           l6489 7158  
                         l6497 6FEE                           l7299 5DF0                           l7539 6D86  
                         l7491 5876                           l7475 57CA                           l7483 5812  
                         l7467 5764                           l7459 5732                           l7395 54F6  
                         l7387 54D4                           l7379 54A2                           l8099 6378  
                         l8531 2E54                           l8523 2D3C                           l8515 2CAA  
                         l8507 2AB4                           l8451 268E                           l8443 25FC  
                         l8435 2446                           l8427 23B4                           l8419 229C  
                         l8371 1C56                           l8363 1BE8                           l8355 1AEE  
                         l8347 1A8E                           l8339 19E6                           l8291 1642  
                         l8275 15DC                           l8259 156C                           l8187 1170  
                         l8179 1026                           l7715 750A                           l7707 74D8  
                         l7723 7520                           l7731 76B8                           l7571 6C4E  
                         l7563 6C0E                           l7627 6FA0                           l7619 6F76  
                         l7651 6622                           l7643 7B26                           l7635 7E82  
                         l7811 4720                           l7803 46D4                           l8611 37AE  
                         l8603 3740                           l6595 8076                           l6587 805E  
                         l6579 804E                           l6499 7010                           l7549 7EC0  
                         l7493 5886                           l7485 582C                           l7477 57D6  
                         l7469 5772                           l7397 5504                           l7389 54DA  
                         l8541 2F7C                           l8533 2E88                           l8525 2D70  
                         l8517 2CDE                           l8509 2AC4                           l8461 27CE  
                         l8453 26E4                           l8445 2630                           l8437 247A  
                         l8429 23C4                           l8381 1E02                           l8373 1CB0  
                         l8365 1C1C                           l8357 1B0A                           l8293 1666  
                         l8277 1600                           l8269 1594                           l8197 120E  
                         l8189 11DC                           l7725 7530                           l7717 7512  
                         l7709 74E0                           l7741 76E4                           l7733 76BC  
                         l7581 6C7E                           l7573 6C5C                           l7565 6C38  
                         l7557 6BE4                           l7661 66F0                           l7653 6636  
                         l7637 7E8A                           l7901 4BEE                           l7813 4732  
                         l7805 46DE                           l8701 4158                           l8621 38B6  
                         l8613 37E2                           l8605 374C                           l6589 80C8  
                         l7495 5894                           l7487 5840                           l7479 57E4  
                         l7399 5506                           l8551 3158                           l8543 2FD4  
                         l8535 2EBC                           l8527 2DA4                           l8519 2D12  
                         l8463 2826                           l8455 2718                           l8447 2640  
                         l8439 254C                           l8391 1F72                           l8383 1E5A  
                         l8375 1D22                           l8367 1C2C                           l8359 1B1A  
                         l8279 160E                           l8287 162C                           l8199 1230  
                         l7727 7538                           l7719 7514                           l7751 771C  
                         l7743 76EC                           l7735 76CA                           l7591 6CA8  
                         l7583 6C88                           l7567 6C3A                           l7559 6BFA  
                         l7671 67AC                           l7655 6644                           l7663 6724  
                         l7647 65AC                           l7639 7B04                           l7911 4CC2  
                         l7903 4BFE                           l7815 4736                           l8711 4274  
                         l8703 418E                           l8631 39D2                           l8623 38EC  
                         l8615 3818                           l8607 376E                           l7497 5896  
                         l7489 585A                           l8561 325C                           l8553 31B0  
                         l8545 302C                           l8537 2EF0                           l8529 2DFC  
                         l8481 28DE                           l8465 285A                           l8449 265A  
                         l8393 1FCA                           l8385 1E8E                           l8377 1D76  
                         l8369 1C3C                           l8457 274C                           l7761 7756  
                         l7753 7732                           l7745 76FE                           l7737 76D2  
                         l7593 6CB8                           l7569 6C4A                           l7665 6760  
                         l7649 65CC                           l7681 7B7E                           l7921 4CF8  
                         l7913 4CD6                           l7905 4C32                           l7841 4866  
                         l7833 47BC                           l7817 473C                           l7809 46FA  
                         l8721 4390                           l8713 42AA                           l8705 41D6  
                         l8641 3AEE                           l8633 3A08                           l8625 3934  
                         l8617 384E                           l8609 377A                           l8801 73FA  
                         l7499 589C                           l8563 329E                           l8555 31E4  
                         l8547 3084                           l8539 2F24                           l8491 29A4  
                         l8467 288E                           l8459 2776                           l8395 2022  
                         l8387 1EC2                           l8379 1DAA                           l7691 7490  
                         l7763 775E                           l7755 773A                           l7747 7706  
                         l7739 76D6                           l7595 6CC8                           l7579 6C74  
                         l7667 6774                           l7659 66B4                           l7683 7B8A  
                         l7675 7B5A                           l7931 4DC0                           l7923 4D00  
                         l7907 4C88                           l7915 4CDA                           l7843 48A4  
                         l7835 47C2                           l7819 4744                           l7827 475C  
                         l7771 45F6                           l8731 4498                           l8723 43C4  
                         l8715 42DE                           l8707 420A                           l8651 3BF6  
                         l8643 3B22                           l8635 3A3C                           l8627 3968  
                         l8619 3882                           l8811 7422                           l8803 7402  
                         l8565 32EE                           l8557 3218                           l8549 30DC  
                         l8469 289E                           l8397 207A                           l8389 1F1A  
                         l7693 7498                           l7757 7740                           l7749 770E  
                         l7597 6CD8                           l7589 6C9C                           l7669 679C  
                         l7677 7B6E                           l7685 7B8E                           l7941 4DF0  
                         l7933 4DCE                           l7925 4D0C                           l7917 4CEA  
                         l7909 4C8E                           l7861 4992                           l7845 48B8  
                         l7853 4934                           l7837 47F6                           l7829 4776  
                         l7781 463E                           l7773 4604                           l8741 4554  
                         l8733 44CC                           l8725 43F8                           l8717 4312  
                         l8709 423E                           l8661 3D10                           l8653 3C2A  
                         l8645 3B56                           l8637 3A70                           l8629 399C  
                         l8581 33BA                           l8821 7426                           l8813 7422  
                         l8805 740A                           l8567 332E                           l8559 324C  
                         l8479 28C6                           l8399 20AE                           l7695 749C  
                         l7687 747E                           l7759 7746                           l7679 7B7A  
                         l7951 4E22                           l7943 4E00                           l7935 4DDE  
                         l7927 4D84                           l7919 4CF2                           l7871 49D6  
                         l7863 499A                           l7855 496E                           l7847 48EC  
                         l7839 4834                           l7783 464E                           l7791 4676  
                         l7775 4608                           l7767 45E0                           l8735 4502  
                         l8727 442E                           l8719 4348                           l8671 3E1A  
                         l8663 3D46                           l8655 3C60                           l8647 3B8C  
                         l8639 3AA6                           l8591 34A0                           l8583 33DC  
                         l8575 335C                           l8823 742E                           l8815 7422  
                         l8807 7412                           l8569 3346                           l8497 29B8  
                         l8489 295C                           l7697 74AA                           l7689 7482  
                         l7961 4ECA                           l7953 4E34                           l7945 4E04  
                         l7937 4DE2                           l7929 4DA4                           l7881 4A1C  
                         l7873 49E8                           l7865 499E                           l7857 497E  
                         l7849 48F4                           l7793 469C                           l7785 465E  
                         l7777 462C                           l7769 45E6                           l8753 45C6  
                         l8745 4568                           l8737 454A                           l8729 4464  
                         l8681 3F36                           l8673 3E62                           l8665 3D7C  
                         l8657 3CA8                           l8649 3BC2                           l8593 3506  
                         l8585 340E                           l8577 3376                           l8825 7448  
                         l8817 7422                           l8809 741A                           l8761 739E  
                         l8499 29D6                           l7699 74B2                           l7971 4F18  
                         l7963 4ED2                           l7955 4E38                           l7947 4E0A  
                         l7939 4DE8                           l7891 4B30                           l7883 4A80  
                         l7867 49B0                           l7875 49F0                           l7859 498A  
                         l7795 46AE                           l7787 466A                           l7779 4636  
                         l8755 45DA                           l8747 45BA                           l8739 4550  
                         l8691 4050                           l8683 3F6A                           l8675 3E96  
                         l8667 3DB0                           l8659 3CDC                           l8595 351C  
                         l8587 3424                           l8579 3398                           l8827 745C  
                         l8819 7422                           l8771 73BA                           l8763 73A2  
                         l7981 4F8C                           l7973 4F26                           l7957 4E3E  
                         l7949 4E10                           l7965 4ED6                           l7893 4B64  
                         l7885 4AD8                           l7877 49F8                           l7869 49BE  
                         l7797 46B2                           l7789 4672                           l8749 45BE  
                         l8693 4084                           l8685 3F9E                           l8677 3ECA  
                         l8669 3DE4                           l8597 36F0                           l8589 348A  
                         l8781 73C8                           l8773 73BE                           l8765 73A6  
                         l7991 7F06                           l7983 4FA2                           l7975 4F56  
                         l7967 4EF4                           l7959 4E96                           l7895 4B96  
                         l7887 4B0C                           l7879 4A08                           l7799 46B8  
                         l8695 40BA                           l8687 3FD4                           l8679 3F00  
                         l8599 3712                           l8791 73DE                           l8783 73C8  
                         l8775 73C0                           l8767 73AA                           l8759 739A  
                         l7985 4FAA                           l7977 4F64                           l7969 4F10  
                         l7897 4BAC                           l7889 4B12                           l7993 602A  
                         l8697 40F0                           l8689 401C                           l8793 73E6  
                         l8785 73CE                           l8777 73C2                           l8769 73B6  
                         l7979 4F7C                           l7899 4BDE                           l7995 6052  
                         l8699 4124                           l8795 73EE                           l8787 73D2  
                         l8779 73C4                           l7989 7EF8                           l7997 605A  
                         l8797 73F2                           l8789 73D6                           l7999 6066  
                         l8799 73F6                           STR_1 0EB9                           STR_2 0E80  
                         STR_3 0EAB                           STR_4 0EC6                           STR_5 0E9D  
                         STR_6 0E8F                           STR_7 0E71                           STR_8 0ED2  
                 _BAUD4CONbits 0EE9                           _T2PR 0FBC                           u5100 7A18  
                         u5101 7A14                           u5060 7FC6                           u5300 5A6E  
                         u5220 58F6                           u5061 7FC2                           u5301 5A6A  
                         u5221 58F2                           u5070 7FDC                           u5310 5AE4  
                         u5230 5924                           u5071 7FD8                           u5311 5AE0  
                         u5231 5920                           u7000 5332                           u5400 67DE  
                         u5320 5B80                           u5240 5932                           u5080 79DE  
                         u6200 7934                           u7001 532E                           u5401 67DA  
                         u5321 5B7C                           u5241 592E                           u5081 79DA  
                         u6201 7930                           u7010 534E                           u5410 683A  
                         u5330 5BE8                           u5250 5974                           u5090 79FC  
                         u6210 794C                           u7011 534A                           u5411 6836  
                         u5331 5BE4                           u5251 5970                           u5091 79F8  
                         u6211 7948                           u6220 7AB0                           u7100 5426  
                         u7020 535E                           u5420 6890                           u5340 5BFE  
                         u5260 59A2                           u6221 7AA8                           u7101 5422  
                         u7021 535A                           u5421 688C                           u5341 5BFA  
                         u5261 599E                           u7110 5446                           u7030 5370  
                         u5430 68DA                           u5270 59C4                           u7111 5442  
                         u7031 536C                           u5431 68D6                           u5271 59C0  
                         u6240 7ACE                           u7200 5D32                           u7120 5458  
                         u7040 5386                           u5440 68F8                           u8000 7530  
                         u5360 698E                           u6400 736E                           u6241 7AC6  
                         u7201 5D2E                           u7121 5454                           u7041 5382  
                         u5441 68F4                           u8001 752C                           u5361 698A  
                         u6401 736A                           u7210 5D72                           u7130 5474  
                         u7050 539C                           u5450 6908                           u5290 5A36  
                         u8010 76CA                           u5370 6A58                           u6330 757A  
                         u6410 7200                           u7211 5D6E                           u7131 5470  
                         u7051 5398                           u5451 6904                           u5355 5C6A  
                         u5291 5A32                           u8011 76C6                           u5371 6A54  
                         u6331 7576                           u6411 71FC                           u6260 7AF2  
                         u7300 5EFE                           u7220 5DB2                           u7060 53B0  
                         u5460 6916                           u5380 8092                           u8020 76E4  
                         u7140 7E80                           u8100 469C                           u6340 759C  
                         u6180 78D0                           u6500 704A                           u6420 7222  
                         u6261 7AEA                           u7301 5EFA                           u7221 5DAE  
                         u7061 53AC                           u5461 6912                           u5285 59F6  
                         u5381 808E                           u8021 76E0                           u7141 7E7C  
                         u8101 4698                           u6341 7598                           u6181 78CC  
                         u6501 7046                           u6421 721E                           u6238 7AB2  
                         u7310 5F2C                           u7230 5E28                           u7150 5CAA  
                         u7070 53CA                           u5470 6950                           u5390 67D0  
                         u5286 5A00                           u8030 76FE                           u8110 46AE  
                         u6350 75E4                           u6190 78F2                           u6510 7094  
                         u6430 726C                           u7311 5F28                           u7231 5E24  
                         u7151 5CA6                           u7071 53C6                           u5471 694C  
                         u5391 67CC                           u5287 5A10                           u8031 76FA  
                         u8111 46AA                           u6351 75E0                           u6191 78EE  
                         u6511 7090                           u6431 7268                           u7320 5F42  
                         u7240 5E4A                           u7160 5CBC                           u7080 5404  
                         u5480 695E                           u7400 54C4                           u9000 28C2  
                         u8040 771C                           u8200 497E                           u8120 4720  
                         u6360 75FC                           u6600 6EAA                           u6520 70AC  
                         u6440 7284                           u7321 5F3E                           u7241 5E46  
                         u7161 5CB8                           u7081 5400                           u5481 695A  
                         u7401 54C0                           u9001 28BE                           u8041 7718  
                         u8201 497A                           u8121 471C                           u6361 75F8  
                         u6601 6EA6                           u6521 70A8                           u6441 7280  
                         u6258 7AD0                           u5570 7DEA                           u7330 5F56  
                         u7250 5E74                           u7170 5CCC                           u7090 5416  
                         u7410 5504                           u9010 28DE                           u8050 7732  
                         u8210 49B0                           u8130 4732                           u6530 6B1A  
                         u6450 7114                           u6370 72EA                           u5571 7DE2  
                         u7331 5F52                           u7251 5E70                           u7171 5CC8  
                         u7091 5412                           u7411 5500                           u9011 28DA  
                         u8051 772E                           u8211 49AC                           u8131 472E  
                         u6531 6B16                           u6451 7110                           u6371 72E6  
                         u7340 5F70                           u7260 5E98                           u7180 5D10  
                         u7500 57A0                           u7420 5516                           u9020 2958  
                         u8060 7756                           u8300 4D84                           u8220 49BE  
                         u8140 47A8                           u6540 6B3C                           u6460 7136  
                         u6380 730C                           u7341 5F6C                           u7261 5E94  
                         u7181 5D0C                           u7501 579C                           u7421 5512  
                         u9021 2954                           u8061 7752                           u8301 4D80  
                         u8221 49BA                           u8141 47A4                           u6541 6B38  
                         u6461 7132                           u6381 7308                           u6278 7AF4  
                         u7350 5FB8                           u7270 5EAE                           u7190 5D22  
                         u7510 57B6                           u7430 5526                           u9030 29A4  
                         u5590 7F8A                           u6710 760E                           u8310 4DC0  
                         u8230 49E8                           u8150 4834                           u8070 4604  
                         u6550 6B86                           u6470 7180                           u6390 7356  
                         u7351 5FB4                           u7271 5EAA                           u7191 5D1E  
                         u7511 57B2                           u7431 5522                           u9031 29A0  
                         u5591 7F86                           u6711 760A                           u8311 4DBC  
                         u8231 49E4                           u8151 4830                           u8071 4600  
                         u6551 6B82                           u6471 717C                           u6391 7352  
                         u7360 5FE8                           u7280 5ECC                           u7600 6D18  
                         u6800 506E                           u7520 57CA                           u7440 555C  
                         u9120 2C9A                           u9040 29D6                           u6720 761E  
                         u8320 4DCE                           u8240 4B30                           u8160 4866  
                         u8080 464E                           u8400 6052                           u9200 4564  
                         u6560 6B9E                           u6480 7198                           u7361 5FE4  
                         u7281 5EC8                           u7601 6D14                           u6801 506A  
                         u7521 57C6                           u7441 5558                           u9121 2C96  
                         u9105 2BC2                           u9041 29D2                           u6721 761A  
                         u8321 4DCA                           u8241 4B2C                           u8161 4862  
                         u8081 464A                           u8401 604E                           u9201 4560  
                         u6561 6B9A                           u6481 7194                           u7370 6016  
                         u7290 5EEC                           u7610 6D56                           u6810 507E  
                         u7530 57E4                           u7450 556C                           u9106 2BCC  
                         u9050 2A2C                           u6730 7644                           u8330 4E22  
                         u8250 4B96                           u8170 48A4                           u8090 465E  
                         u8410 6094                           u9210 45BA                           u6570 6E26  
                         u6490 7028                           u7371 6012                           u7291 5EE8  
                         u7611 6D52                           u6811 507A                           u7531 57E0  
                         u7451 5568                           u9115 2C60                           u9107 2BDC  
                         u9051 2A28                           u6731 7640                           u8331 4E1E  
                         u8251 4B92                           u8171 48A0                           u8091 465A  
                         u8411 6090                           u9211 45B6                           u6571 6E22  
                         u6491 7024                           u5588 7DEC                           u7620 6D74  
                         u6900 51C4                           u6820 50BA                           u7540 582C  
                         u7460 56E6                           u7380 54A2                           u9116 2C6A  
                         u7700 6C98                           u6740 7676                           u8340 4EF4  
                         u8260 4BDE                           u8180 4930                           u8500 6258  
                         u8420 60B4                           u6580 6E48                           u7621 6D70  
                         u6901 51C0                           u6821 50B6                           u7541 5828  
                         u7381 549E                           u9117 2C7A                           u7701 6C94  
                         u6741 7672                           u8341 4EF0                           u8261 4BDA  
                         u8181 492C                           u8501 6254                           u8421 60B0  
                         u6581 6E44                           u7630 6D94                           u6910 51D4  
                         u6830 50C8                           u6750 4FE2                           u7550 585A  
                         u7470 5740                           u7390 54B4                           u9150 32EE  
                         u9070 2AE6                           u7710 6CB8                           u8350 4F10  
                         u8270 4BEE                           u8190 4966                           u8430 60EA  
                         u8510 7D6E                           u6590 6E92                           u7631 6D90  
                         u6911 51D0                           u6831 50C4                           u6751 4FDE  
                         u7551 5856                           u7471 573C                           u7391 54B0  
                         u9151 32EA                           u9135 326E                           u9071 2AE2  
                         u7711 6CB4                           u8351 4F0C                           u8271 4BEA  
                         u8191 4962                           u8431 60E4                           u8511 7D6A  
                         u6591 6E8E                           u7640 6DE4                           u6920 5206  
                         u6840 5136                           u6760 4FF4                           u7560 5894  
                         u7480 5760                           u8520 63A4                           u9160 3346  
                         u8600 0F76                           u7720 6CC8                           u7800 6FDA  
                         u8360 4F76                           u8280 4C88                           u8440 60EC  
                         u7641 6DE0                           u6921 5202                           u6841 5132  
                         u6761 4FF0                           u7561 5890                           u7481 575C  
                         u7465 56DC                           u8521 63A0                           u9161 3342  
                         u9145 32B4                           u9065 2A72                           u8601 0F72  
                         u7721 6CC4                           u7801 6FD4                           u8361 4F70  
                         u8281 4C84                           u7650 7ED6                           u6930 5214  
                         u6850 514E                           u6770 5004                           u7490 5772  
                         u8530 63FC                           u9146 32BE                           u9066 2A7C  
                         u8610 0FAE                           u7570 7796                           u7810 6FDC  
                         u7730 7A46                           u8370 4F78                           u8290 4CD6  
                         u8450 6152                           u9170 340E                           u7651 7ED2  
                         u6931 5210                           u6851 5148                           u6771 5000  
                         u7491 576E                           u8531 63F8                           u9147 32CE  
                         u9067 2A8C                           u8611 0FAA                           u7571 7792  
                         u7731 7A42                           u8291 4CD2                           u8451 614E  
                         u9171 340A                           u9307 715E                           u9227 743A  
                         u6940 5232                           u6860 5150                           u6780 5046  
                         u8540 6454                           u8700 11DC                           u8620 0FD0  
                         u7580 77D4                           u7660 6BFA                           u7900 66F0  
                         u7740 7A8C                           u7820 7EBE                           u8380 4F8C  
                         u8460 6162                           u9180 348A                           u6941 522E  
                         u6781 5042                           u8541 6450                           u9085 2B00  
                         u8701 11D8                           u8621 0FCC                           u7581 77D0  
                         u7661 6BF6                           u7901 66EC                           u7741 7A88  
                         u7821 7EBA                           u8381 4F88                           u8461 615E  
                         u9181 3486                           u9317 71A2                           u9237 7468  
                         u6950 526A                           u6870 5178                           u6790 505C  
                         u8550 647C                           u9086 2B0A                           u8710 11F8  
                         u8630 1026                           u8390 7F06                           u7590 7808  
                         u7670 6C2E                           u7750 6F30                           u7910 6744  
                         u7830 7B12                           u8470 6172                           u9190 3506  
                         u9407 7CFE                           u6951 5266                           u6871 5174  
                         u6791 5058                           u8551 6478                           u9095 2B6A  
                         u9087 2B1A                           u8711 11F4                           u8631 1022  
                         u8391 7F02                           u7591 7804                           u7831 7B0E  
                         u8471 616E                           u9191 3502                           u9327 6E70  
                         u9247 724A                           u6960 52B0                           u6880 5196  
                         u8560 64D4                           u9096 2B74                           u8800 13F4  
                         u8720 1230                           u8640 1042                           u7680 6C5C  
                         u7760 6F4E                           u7920 6760                           u7840 65F4  
                         u8480 6182                           u6961 52AC                           u6881 5192  
                         u8561 64D0                           u9097 2B84                           u8801 13F0  
                         u8721 122C                           u8641 103E                           u7681 6C58  
                         u7761 6F4A                           u7921 675C                           u8481 617E  
                         u9337 6EB4                           u9257 728E                           u6970 52E6  
                         u6890 51B6                           u8570 652C                           u8810 140A  
                         u8730 123E                           u8650 1072                           u7690 6C70  
                         u7770 6F76                           u7930 679C                           u7850 6622  
                         u8490 61CC                           u6971 52E2                           u6891 51B2  
                         u8571 6528                           u8811 1406                           u8731 123A  
                         u8651 106E                           u7691 6C6C                           u7675 6C24  
                         u7771 6F72                           u7755 6F26                           u7931 6798  
                         u7915 673A                           u7851 661E                           u8491 61C8  
                         u9347 6EE0                           u9267 7072                           u6980 52F6  
                         u8900 15DC                           u8820 1426                           u8740 1276  
                         u7780 6FA0                           u7860 6644                           u7940 7BA8  
                         u6981 52F2                           u8901 15D8                           u8821 1422  
                         u8741 1272                           u7781 6F9C                           u7861 6640  
                         u7845 65EA                           u7941 7BA4                           u9357 6B64  
                         u9277 70B6                           u6990 5322                           u8910 1600  
                         u8830 1444                           u8750 12D0                           u8590 0F44  
                         u7950 7490                           u6991 531E                           u8911 15FC  
                         u8831 1440                           u8751 12CC                           u8591 0F40  
                         u7951 748C                           u9367 6BA8                           u9287 7334  
                         u8920 160E                           u8840 1488                           u8760 12DE  
                         u8680 1136                           u7960 74AA                           u7880 66B0  
                         u8585 6546                           u8921 160A                           u8841 1484  
                         u8761 12DA                           u8665 1088                           u7961 74A6  
                         u7881 66AC                           u9377 6BD4                           u9297 7378  
                         u8930 1666                           u8850 14EC                           u8770 1342  
                         u8690 1170                           u8666 1092                           u7970 74D0  
                         u7890 66D4                           u8931 1662                           u8851 14E8  
                         u8771 133E                           u8691 116C                           u8675 10E2  
                         u8667 10A2                           u7971 74CC                           u7795 6FB2  
                         u7875 6658                           u9387 7916                           u8940 1684  
                         u8860 1524                           u8780 1392                           u8676 10EC  
                         u7980 74EE                           u7876 6662                           u8941 1680  
                         u8861 1520                           u8781 138E                           u8685 112C  
                         u8677 10FC                           u7981 74EA                           u7877 6672  
                         u9397 75C4                           u8950 1990                           u8870 157A  
                         u8790 13A0                           u7990 750A                           u8951 198C  
                         u8871 1576                           u8791 139C                           u7991 7506  
                         u7895 66CA                           u8880 1590                           u8881 158C  
                         u8970 1AB2                           u8890 15AA                           u8971 1AAE  
                         u8891 15A6                           u8980 1ADA                           u8981 1AD6  
                         u8965 19FC                           u8966 1A06                           u8967 1A16  
                         u8995 1CC2                    main@red_val 033C                           abs@a 0008  
                         _dbuf 0400                           _cp_h 0E6D                           _cp_l 0E69  
                         _dp_h 0E09                           _dp_l 0E01                           _labs 7B04  
                         _main 739A                           _prec 00DB                           _powf 0EDC  
                         pad@i 0016                           pad@p 0013                           fsr1h 0FE2  
                         fsr2h 0FDA                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005E                           _stop 78B4  
                  main@timings 0378     __end_of_reverse_after_read 6BE4                  ___fpclassifyf 6EF0  
                         prodh 0FF4                           prodl 0FF3                           start 0024  
              ___fldiv@new_exp 003C         __end_of_color_read_Red 7BFA                __end_of_HighISR 0024  
                 ___param_bank 0000      invert_action@input_action 0004                 turn_left_90@mL 0019  
               turn_left_90@mR 001B                          ??_abs 000A                          ??_pad 0015  
                 main@blue_val 0364                  ___fltol@sign1 000A                          ?_labs 0002  
              __end_of___fladd 5488                          ?_main 0001                          _ADPCH 0F5F  
              __end_of___fldiv 602A                __end_of___awdiv 7542                __end_of___flneg 7EF8  
                        STR_11 0ED6                __end_of___awmod 7768                __end_of___flmul 58B2  
                        ?_powf 0060                __end_of___flsub 7DC0                __end_of___fltol 6CEA  
                        ?_stop 0015                ___awdiv@divisor 0004                __end_of___lwdiv 7A38  
                        i2l449 0020                          i2l495 809A                          i2l498 80AE  
              ___awdiv@counter 0006                   vfpfcnvrt@fmt 0093                          _TMR0H 0FD4  
                        _TMR0L 0FD3        __end_of_sendCharSerial4 8098     __end_of_I2C_2_Master_Start 80F0  
   __end_of_I2C_2_Master_Write 80BC                          _lg2_h 0E2D                          _lg2_l 0E29  
                        _flags 00DD  __end_of_color_click_toggleLED 7B04                          _errno 00D7  
                        _ivln2 0E1D                          _fputc 75FE                          _fputs 7E42  
              __end_of_ivln2_h 0E69                __end_of_ivln2_l 0E1D                          _two24 0E61  
              __end_of_scalbnf 65AC                          labs@a 0002                          pad@fp 0010  
                        _width 00D9                          _putch 80F0                          _sqrtf 58B2  
                        tablat 0FF5                          powf@i 0128                          powf@j 01A8  
                        powf@k 01A4                          powf@n 0188                          powf@r 0150  
                        powf@s 0160                          powf@t 01B0                          powf@u 017C  
                        powf@v 0180                          powf@w 0144                          powf@x 0060  
                        powf@y 0064                          powf@z 01B4                          ttemp5 005F  
                        ttemp6 0062                          ttemp7 0066                          status 0FD8  
                        wtemp8 005F                __end_of_sprintf 7E42                 ?___fpclassifyf 0002  
      __end_of_color_read_Blue 7CEA          _I2C_2_Master_RepStart 80D2                ?_color_read_Red 0006  
              __initialization 7F2C                   __end_of_cp_h 0E71                   __end_of_cp_l 0E6D  
                 __end_of_dp_h 0E11                   __end_of_dp_l 0E09                   __end_of_labs 7B5A  
                 __end_of_main 747E                   __end_of_powf 335C                   __end_of_stop 794E  
              turn_left_135@mL 0019                turn_left_135@mR 001B                  main@clear_val 0328  
                       ??_labs 0006                _get16bitTMR0val 8062                         ??_main 00B9  
                       ??_powf 0068                         ??_stop 0019                  __activetblptr 0003  
            decide_action@blue 0288                   ?_setMotorPWM 000F                         ?_fputc 0002  
                       ?_fputs 000A                         _ADRESH 0F64                         _CCPR1H 0FAA  
                       _CCPR2H 0FA6                         _CCPR3H 0F25                         _CCPR4H 0F21  
             ___awdiv@dividend 0002                         ?_putch 0001                         ?_sqrtf 0012  
   __end_of_reverse_one_square 6EF0                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RE4PPS 0E76                         _RD6PPS 0E70                  main@green_val 0350  
                       _RG6PPS 0E88                         i2l6611 809A                         i2l6613 80AA  
                       i2l6891 001A                         i2l6887 000A                         i2l6889 0018  
             ??_turn_right_135 001D                  vfpfcnvrt@done 0095                      ??_HighISR 0002  
     __end_of_color_click_init 7D34                         _RX4PPS 0E15                         _TX4REG 0EE4  
             __end_of___xxtofl 6972                   ?_resetTimer0 0001                   _turn_left_90 72B0  
                ??_Timer0_init 0002                   _CCPTMRS0bits 0FAD                   vfprintf@cfmt 005C  
                       ___flge 6CEA                         ___fleq 7768                      ??___fladd 000A  
                       ___wmul 7FDE                      ??___fldiv 0033                      ??___awdiv 0006  
                    ??___flneg 0006                      ??___awmod 0006                      ??___flmul 001A  
                    ??___flsub 004C                      ??___fltol 0006                         _efgtoa 45E0  
                    ??___lwdiv 000C                         _floorf 65AC                         _memcpy 7B5A  
                       clear_0 7F32                         clear_1 7F3E                         clear_2 7F4A  
             ___awdiv@quotient 0008                ___awmod@divisor 0004                         isa$std 0001  
              ___awmod@counter 0006                         pad@buf 0011                         _strcpy 7E82  
                       fputc@c 0002                         fputs@c 000D                         fputs@i 000E  
                       fputs@s 000A                      ??_scalbnf 0031                ___fpclassifyf@e 000A  
              ___fpclassifyf@u 000C                ___fpclassifyf@x 0002                   __mediumconst 0000  
                       powf@s2 0190                         powf@t1 018C                         powf@t2 011C  
                       tblptrh 0FF7                         tblptrl 0FF6                         powf@y1 012C  
                       tblptru 0FF8                         powf@ax 0178                         powf@is 0198  
                       powf@hx 0168                         powf@hy 0184                         powf@ix 01AC  
                       powf@iy 0194               ?_sendCharSerial4 0001                         powf@sn 0164  
                       putch@c 0001               __end_of_vfprintf 7D7A                         stop@mL 0015  
                       stop@mR 0017                         sqrtf@i 001F                         sqrtf@m 002B  
                       sqrtf@q 0023                         sqrtf@r 002F                         sqrtf@s 001B  
                       sqrtf@t 0027              ??_initDCmotorsPWM 0004                         sqrtf@x 0012  
                    ??_sprintf 005D                     ___flge@ff1 004C                     ___flge@ff2 0050  
              ??___fpclassifyf 0006                   ___xxtofl@arg 000C                   ___xxtofl@exp 000B  
                 ___xxtofl@val 0002                     ___fleq@ff1 0002                     ___fleq@ff2 0006  
                   __accesstop 0060        __end_of__initialization 7F52       __end_of_color_read_Clear 7C9A  
                   ___flneg@f1 0002       __end_of_color_read_Green 7C4A         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 0001                     ___fltol@f1 0002               ?_color_read_Blue 0006  
              _Interrupts_init 80BC                 __pcstackCOMRAM 0001        __end_of_get16bitTMR0val 8080  
                __end_of_lg2_h 0E31                  __end_of_lg2_l 0E2D       get16bitTMR0val@timer_val 0006  
                __end_of_ivln2 0E21                  __end_of_fputc 76B8                  __end_of_fputs 7E82  
                __end_of_two24 0E65                  __end_of_putch 80F2                  __end_of_sqrtf 5C90  
                   __end_of_L1 0E61                     __end_of_L2 0E5D                     __end_of_L3 0E59  
                   __end_of_L4 0E55                     __end_of_L5 0E51                     __end_of_L6 0E4D  
                   __end_of_P1 0E49                     __end_of_P2 0E45                     __end_of_P3 0E41  
                   __end_of_P4 0E3D                     __end_of_P5 0E39            __end_of_Timer0_init 8044  
                   __end_of_bp 0E19                     __end_of_cp 0E25                turn_right_90@mL 0019  
              turn_right_90@mR 001B                        ??_fputc 0005                        ??_fputs 000D  
                      ??_putch 0002                        ??_sqrtf 0016                     __pbssBANK0 00BB  
                   __pbssBANK1 01B8                     __pbssBANK4 0400              _color_writetoaddr 8004  
         reverse_one_square@mL 0019           reverse_one_square@mR 001B                   _T2CLKCONbits 0FBF  
           decide_action@green 0284                        ?___flge 004C                        ?___fleq 0002  
           decide_action@red_r 028C             ?_color_writetoaddr 0004                        ?___wmul 0002  
           decide_action@total 027B                        ?_efgtoa 0060                        ?_floorf 0044  
         decide_action@green_r 0290                        ?_memcpy 0002             _reverse_after_read 6ADE  
         decide_action@red_val 0214         decide_action@clear_val 0200            ??_color_writetoaddr 0005  
                      ?_strcpy 0002                      ?___xxtofl 0002                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5            ?_reverse_after_read 0019           reverse_after_read@mL 0019  
         reverse_after_read@mR 001B                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
      __end_of_Interrupts_init 80C8         color_writetoaddr@value 0004               ??_color_read_Red 0008  
                _turn_left_135 70DA         decide_action@green_val 0228                        _HighISR 0008  
    __end_of_color_writetoaddr 8024                      _ADREFbits 0F58             _I2C_2_Master_Start 80E6  
                   _initUSART4 8044             _I2C_2_Master_Write 80B0                 decide_action@i 027F  
                      __Hparam 0000           ??_reverse_after_read 001D                        __Lparam 0000  
            color_read_Red@tmp 000B                    _Timer0_init 8024         decide_action@pblue_val 0256  
      sendStringSerial4@string 0003                  _turn_right_90 71C6               ?_get16bitTMR0val 0002  
                      ___fladd 4FC8                        ___fldiv 5C90                        ___awdiv 747E  
                      ___flneg 7EC0                        ___awmod 76B8                        ___flmul 5488  
                      ___flsub 7D7A                        ___fltol 6BE4            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 79C4            ?_I2C_2_Master_Write 0001                      ?_vfprintf 009C  
                 __psmallconst 0E00                        __pcinit 7F2C                        __ramtop 0E00  
                      __ptext0 739A                        __ptext1 71C6                        __ptext2 6FEE  
                      __ptext3 72B0                        __ptext4 70DA                        __ptext5 6DEE  
                      __ptext6 6ADE                        __ptext7 78B4                        __ptext8 80C8  
                      __ptext9 794E                      _T2CONbits 0FBD                        _ivln2_h 0E65  
                      _ivln2_l 0E19                     ??___xxtofl 0006                        _scalbnf 6378  
             ___awmod@dividend 0002                      _T2HLTbits 0FBE                        efgtoa@c 0065  
                      efgtoa@d 0071                        efgtoa@e 0075                        efgtoa@f 0061  
                      efgtoa@g 0088                        efgtoa@h 007F                        efgtoa@i 007D  
                      efgtoa@l 0083                        efgtoa@m 0073                        efgtoa@n 008C  
                      efgtoa@p 0068                        efgtoa@t 006A                        efgtoa@u 008E  
                      efgtoa@w 0077                  _RxBufWriteCnt 00E0                        main@pmL 03B5  
                      main@pmR 03B7                        _sprintf 7E02           ??_I2C_2_Master_Start 0003  
         ??_I2C_2_Master_Write 0003           end_of_initialization 7F52                        floorf@e 0052  
                      floorf@m 004E                        floorf@u 0054                        floorf@x 0044  
               ?_turn_left_135 0019          _color_click_toggleLED 7A9E                        memcpy@d 0009  
                      memcpy@n 0006                        memcpy@s 000B                        fputc@fp 0004  
                      fputs@fp 000C              ?_color_click_init 0001             ??_color_click_init 0006  
                _decide_action 335C                 ?_turn_right_90 0019                        powf@p_h 01A0  
                      powf@p_l 016C                        powf@s_h 0174                        powf@t_h 0170  
                      powf@s_l 0130                        powf@t_l 0134                        powf@z_h 0120  
                      powf@z_l 0124              __end_of_vfpfcnvrt 6378                     efgtoa@mode 006F  
                   efgtoa@sign 0087             _reverse_one_square 6DEE                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0096                     ??_vfprintf 005C                        sqrtf@ix 0033  
                      strcpy@d 0006                _initDCmotorsPWM 7812                      _PORTBbits 0F8A  
                _invert_action 794E            ?_reverse_one_square 0019             setMotorPWM@negDuty 0014  
                  ___fladd@grs 0011                  ___xxtofl@sign 000A                      _TRISAbits 0F81  
           setMotorPWM@posDuty 0013                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88                    ___fldiv@grs 003E                    ___fldiv@rem 0037  
             fullSpeedAhead@mL 0015               fullSpeedAhead@mR 0017       color_writetoaddr@address 0005  
      ??_I2C_2_Master_RepStart 0003               ?_Interrupts_init 0001                    ___flmul@grs 0020  
         ??_reverse_one_square 001D                    _CCP1CONbits 0FAB              ?_color_read_Clear 0006  
                 _EUSART4RXbuf 00BB                   _EUSART4TXbuf 01B8                    _CCP2CONbits 0FA7  
            ?_color_read_Green 0006                    _CCP3CONbits 0F26                    ?_initUSART4 0001  
                  _CCP4CONbits 0F22      sendCharSerial4@charToSend 0002                 ?_decide_action 00B3  
                   main@motorL 03A3                     main@motorR 03AC             ??_color_read_Clear 0008  
           ??_color_read_Green 0008                 __end_of___flge 6DEE                 __end_of___fleq 7812  
               _fullSpeedAhead 7542                    vfpfcnvrt@ap 0094                    vfpfcnvrt@cp 009A  
                  vfpfcnvrt@fp 0092                 __end_of___wmul 8004                 __end_of_efgtoa 4FC8  
               ?_invert_action 0001                 __end_of_floorf 67BE                 __end_of_memcpy 7BAA  
                   floorf@F521 00CF                 __end_of_strcpy 7EC0            color_read_Clear@tmp 000B  
          start_initialization 7F2C                    __end_of_lg2 0E35                    __end_of_abs 7F2C  
                  __end_of_pad 7A9E                    __end_of_ovt 0E29                  _TxBufWriteCnt 005D  
              ??_turn_left_135 001D         ?_color_click_toggleLED 0001               decide_action@red 0280  
        __end_of___fpclassifyf 6FEE                ??_turn_right_90 001D            color_read_Green@tmp 000B  
      __end_of_initDCmotorsPWM 78B4                    vfprintf@fmt 009D         __end_of_fullSpeedAhead 75FE  
                     ??___flge 0054                       ??___fleq 000A               turn_right_135@mL 0019  
             turn_right_135@mR 001B                       ??___wmul 0006                       ??_efgtoa 0058  
                     ??_floorf 0048                       ??_memcpy 0008                       ??_strcpy 0005  
                    ___fladd@a 0006                      ___fladd@b 0002                      ___fldiv@a 002F  
                    ___fldiv@b 002B                      ___flmul@a 0016                      ___flmul@b 0012  
                  __pbssCOMRAM 005D     decide_action@blue_unsigned 00B7                      ___flsub@a 0048  
                    ___flsub@b 0044                  __pcstackBANK0 0060                  __pcstackBANK1 0100  
                __pcstackBANK2 0200                  __pcstackBANK3 0300                       ?_HighISR 0001  
              ??_decide_action 005D              i2_sendCharSerial4 8098                    _efgtoa$2687 006C  
           ?i2_sendCharSerial4 0001               ___lwdiv@dividend 0008                   ?_Timer0_init 0001  
          decide_action@action 027A                ?_fullSpeedAhead 0015                      __pintcode 0008  
          decide_action@blue_r 0294                       ?___fladd 0002                       ?___fldiv 002B  
                     ?___awdiv 0002                       ?___flneg 0002                       ?___awmod 0002  
                     ?___flmul 0012                       ?___flsub 0044                       ?___fltol 0002  
              ??_invert_action 0002                       ?___lwdiv 0008            ??i2_sendCharSerial4 0001  
        decide_action@blue_val 023C           I2C_2_Master_Read@ack 0004           I2C_2_Master_Read@tmp 0005  
                  __smallconst 0E00              _I2C_2_Master_Idle 7FB6              _I2C_2_Master_Init 7F8C  
                     ?_scalbnf 002B              _I2C_2_Master_Read 7DC0              _I2C_2_Master_Stop 80DC  
        decide_action@rgb_comp 025A                   _RxBufReadCnt 00DF             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0011  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000C       initDCmotorsPWM@PWMperiod 0002  
                     ?_sprintf 009F          decide_action@pred_val 0254      __end_ofi2_sendCharSerial4 80B0  
                    _powf$3200 0114                      _powf$3201 0118                      _powf$3190 019C  
                    _powf$3191 0138                      _powf$3192 0100                      _powf$3193 0104  
                    _powf$3194 015C                      _powf$3187 0148                      _powf$3195 013C  
                    _powf$3188 0158                      _powf$3196 0140                      _powf$3189 014C  
                    _powf$3197 0108                      _powf$3198 010C                      _powf$3199 0110  
            _sendStringSerial4 7F5C            ??_I2C_2_Master_Idle 0002            ??_I2C_2_Master_Init 0002  
          ??_I2C_2_Master_Read 0003                 ___wmul@product 0006                       _LATAbits 0F79  
                ??_resetTimer0 0002            ??_I2C_2_Master_Stop 0003                       _LATCbits 0F7B  
                     _LATEbits 0F7D                       _LATGbits 0F7F                       _LATHbits 0F80  
                ?_turn_left_90 0019                       _PIE0bits 0E29                       _PIE2bits 0E2B  
           ?_sendStringSerial4 0003                       _PIE4bits 0E2D                       _PIR4bits 0E37  
                     i2u664_40 80AA                       i2u664_41 80A6                       i2u665_40 0018  
                     i2u665_41 0014               ?_initDCmotorsPWM 0002              ??_sendCharSerial4 0002  
                     _SSP2CON2 0EDA            ??_sendStringSerial4 0005                       _SSP2STAT 0ED8  
                   powf@yisint 0154                      _vfpfcnvrt 602A                     _ADCON0bits 0F60  
    __end_of_I2C_2_Master_Idle 7FDE      __end_of_I2C_2_Master_Init 7FB6      __end_of_I2C_2_Master_Read 7E02  
            ___wmul@multiplier 0002      __end_of_I2C_2_Master_Stop 80E6                   setMotorPWM@m 000F  
  I2C_2_Master_Write@data_byte 0003          main@actions_completed 03A0              ??_color_read_Blue 0008  
                 _TxBufReadCnt 00DE                     vfpfcnvrt@c 009B      __end_of_sendStringSerial4 7F8C  
__end_of_I2C_2_Master_RepStart 80DC             color_read_Blue@tmp 000B                 ??_turn_left_90 001D  
          __end_of_setMotorPWM 6ADE                   ??_initUSART4 0002                       __Hrparam 0000  
                    memcpy@tmp 0008                     vfprintf@ap 009E                       __Lrparam 0000  
                   vfprintf@fp 009C                 _turn_right_135 6FEE            __end_of_resetTimer0 80D2  
    decide_action@red_unsigned 00B3                     ?_vfpfcnvrt 0092                     _ANSELAbits 0E92  
                   _ANSELDbits 0EA7        decide_action@pgreen_val 0258             ___fpclassifyf@F465 00D3  
                   _ANSELFbits 0EB4             _decide_action$3180 0298             _decide_action$3181 029C  
           _decide_action$3182 02A0             _decide_action$3183 02A4             _decide_action$3184 02A8  
           _decide_action$3185 02AC             _decide_action$3186 02B0             _decide_action$3179 0250  
                   sprintf@fmt 00A1                       ___xxtofl 67BE                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6        ??_color_click_toggleLED 0002                ___lwdiv@divisor 000A  
           __end_of_initUSART4 8062                ___lwdiv@counter 000E                       __ptext10 8044  
                     __ptext11 7812                       __ptext20 602A                       __ptext12 8062  
                     __ptext21 45E0                       __ptext13 7542                       __ptext30 6EF0  
                     __ptext22 7E82                       __ptext14 6972                       __ptext31 6BE4  
                     __ptext23 7A38                       __ptext15 7FDE                       __ptext40 6378  
                     __ptext32 7768                       __ptext24 7E42                       __ptext16 79C4  
                     __ptext41 5488                       __ptext33 7EF8                       __ptext25 75FE  
                     __ptext17 335C                       __ptext50 7C4A                       __ptext42 67BE  
                     __ptext34 76B8                       __ptext26 80F0                       __ptext18 7E02  
                     __ptext51 7C9A                       __ptext43 7D7A                       __ptext35 747E  
                     __ptext27 7B5A                       __ptext19 7D34                       __ptext60 7FB6  
                     __ptext52 80D2                       __ptext44 4FC8                       __ptext36 7F5C  
                     __ptext28 7B04                       __ptext61 7F8C                       __ptext53 7DC0  
                     __ptext45 7EC0                       __ptext37 8080                       __ptext29 65AC  
                     __ptext62 8024                       __ptext54 7A9E                       __ptext46 6CEA  
                     __ptext38 0EDC                       __ptext63 80BC                       __ptext55 7CEA  
                     __ptext47 5C90                       __ptext39 58B2                       __ptext56 8004  
                     __ptext48 7BAA                       __ptext65 8098                       __ptext57 80B0  
                     __ptext49 7BFA                       __ptext58 80DC                       __ptext59 80E6  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA                     strcpy@dest 0002  
  decide_action@green_unsigned 00B5         __end_of_turn_right_135 70DA                       efgtoa@fp 0060  
                     efgtoa@ne 0066                       efgtoa@pp 006E                       efgtoa@ou 0079  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 005E  
                     _vfprintf 7D34                     _INTCONbits 0FF2                       memcpy@d1 0002  
                     memcpy@s1 0004              main@going_forward 03A2                    _setMotorPWM 6972  
            ??_get16bitTMR0val 0004                       scalbnf@n 002F                       scalbnf@u 0035  
                     scalbnf@x 002B                       scalbnf@y 0039                       intlevel2 0000  
        __end_of_turn_left_135 71C6                      sprintf@ap 00A6               ??_fullSpeedAhead 0019  
                  _resetTimer0 80C8                      strcpy@src 0004                ?_turn_right_135 0019  
        __end_of_turn_right_90 72B0                    efgtoa@nmode 0070                    ??_vfpfcnvrt 005A  
             _color_click_init 7CEA                       sprintf@f 00A7                       sprintf@s 009F  
         __end_of_turn_left_90 739A                     _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C  
                ___fladd@signs 000E                     _TX4STAbits 0EE8                _sendCharSerial4 8080  
                 ___fladd@aexp 000F                   ___fladd@bexp 0010    i2sendCharSerial4@charToSend 0001  
        __end_of_decide_action 45E0  
