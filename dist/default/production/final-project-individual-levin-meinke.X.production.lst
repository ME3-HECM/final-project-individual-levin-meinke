

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 13:29:57 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    86   000000                     
    87                           ; Generated 21/07/2023 GMT
    88                           ; 
    89                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution. Publication is not required when
   103                           ;        this file is used in an embedded application.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F67K40 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121   000000                     
   122                           	psect	smallconst
   123   000E00                     __psmallconst:
   124                           	callstack 0
   125   000E00  00                 	db	0
   126   000E01                     _dp_l:
   127                           	callstack 0
   128   000E01  0000               	dw	0
   129   000E03  0000               	dw	0
   130   000E05  CFDC               	dw	53212
   131   000E07  35D1               	dw	13777
   132   000E09                     __end_of_dp_l:
   133                           	callstack 0
   134   000E09                     _dp_h:
   135                           	callstack 0
   136   000E09  0000               	dw	0
   137   000E0B  0000               	dw	0
   138   000E0D  C000               	dw	49152
   139   000E0F  3F15               	dw	16149
   140   000E11                     __end_of_dp_h:
   141                           	callstack 0
   142   000E11                     _bp:
   143                           	callstack 0
   144   000E11  0000               	dw	0
   145   000E13  3F80               	dw	16256
   146   000E15  0000               	dw	0
   147   000E17  3FC0               	dw	16320
   148   000E19                     __end_of_bp:
   149                           	callstack 0
   150   000E19  A570               	dw	42352
   151   000E1B  36EC               	dw	14060
   152   000E1D                     __end_of_ivln2_l:
   153                           	callstack 0
   154   000E1D  AA3B               	dw	43579
   155   000E1F  3FB8               	dw	16312
   156   000E21                     __end_of_ivln2:
   157                           	callstack 0
   158   000E21  384F               	dw	14415
   159   000E23  3F76               	dw	16246
   160   000E25                     __end_of_cp:
   161                           	callstack 0
   162   000E25  AA3C               	dw	43580
   163   000E27  3338               	dw	13112
   164   000E29                     __end_of_ovt:
   165                           	callstack 0
   166   000E29  BE8C               	dw	48780
   167   000E2B  35BF               	dw	13759
   168   000E2D                     __end_of_lg2_l:
   169                           	callstack 0
   170   000E2D  7200               	dw	29184
   171   000E2F  3F31               	dw	16177
   172   000E31                     __end_of_lg2_h:
   173                           	callstack 0
   174   000E31  7218               	dw	29208
   175   000E33  3F31               	dw	16177
   176   000E35                     __end_of_lg2:
   177                           	callstack 0
   178   000E35  BB4C               	dw	47948
   179   000E37  3331               	dw	13105
   180   000E39                     __end_of_P5:
   181                           	callstack 0
   182   000E39  EA0E               	dw	59918
   183   000E3B  B5DD               	dw	46557
   184   000E3D                     __end_of_P4:
   185                           	callstack 0
   186   000E3D  B355               	dw	45909
   187   000E3F  388A               	dw	14474
   188   000E41                     __end_of_P3:
   189                           	callstack 0
   190   000E41  0B61               	dw	2913
   191   000E43  BB36               	dw	47926
   192   000E45                     __end_of_P2:
   193                           	callstack 0
   194   000E45  AAAB               	dw	43691
   195   000E47  3E2A               	dw	15914
   196   000E49                     __end_of_P1:
   197                           	callstack 0
   198   000E49  F142               	dw	61762
   199   000E4B  3E53               	dw	15955
   200   000E4D                     __end_of_L6:
   201                           	callstack 0
   202   000E4D  3255               	dw	12885
   203   000E4F  3E6C               	dw	15980
   204   000E51                     __end_of_L5:
   205                           	callstack 0
   206   000E51  A305               	dw	41733
   207   000E53  3E8B               	dw	16011
   208   000E55                     __end_of_L4:
   209                           	callstack 0
   210   000E55  AAAB               	dw	43691
   211   000E57  3EAA               	dw	16042
   212   000E59                     __end_of_L3:
   213                           	callstack 0
   214   000E59  6DB7               	dw	28087
   215   000E5B  3EDB               	dw	16091
   216   000E5D                     __end_of_L2:
   217                           	callstack 0
   218   000E5D  999A               	dw	39322
   219   000E5F  3F19               	dw	16153
   220   000E61                     __end_of_L1:
   221                           	callstack 0
   222   000E61  0000               	dw	0
   223   000E63  4B80               	dw	19328
   224   000E65                     __end_of_two24:
   225                           	callstack 0
   226   000E65  AA00               	dw	43520
   227   000E67  3FB8               	dw	16312
   228   000E69                     __end_of_ivln2_h:
   229                           	callstack 0
   230   000E69  23C6               	dw	9158
   231   000E6B  B8F6               	dw	47350
   232   000E6D                     __end_of_cp_l:
   233                           	callstack 0
   234   000E6D  4000               	dw	16384
   235   000E6F  3F76               	dw	16246
   236   000E71                     __end_of_cp_h:
   237                           	callstack 0
   238   000000                     _TX4REG	set	3812
   239   000000                     _RC4STAbits	set	3815
   240   000000                     _SP4BRGH	set	3814
   241   000000                     _TRISFbits	set	3974
   242   000000                     _LATHbits	set	3968
   243   000000                     _TRISAbits	set	3969
   244   000000                     _TRISGbits	set	3975
   245   000000                     _SSP2CON2bits	set	3802
   246   000000                     _RX4PPS	set	3605
   247   000000                     _SSP2CLKPPS	set	3612
   248   000000                     _SSP2DATPPS	set	3613
   249   000000                     _ANSELDbits	set	3751
   250   000000                     _SSP2ADD	set	3798
   251   000000                     _SSP2CON1bits	set	3801
   252   000000                     _LATAbits	set	3961
   253   000000                     _LATGbits	set	3967
   254   000000                     _LATCbits	set	3963
   255   000000                     _LATEbits	set	3965
   256   000000                     _PORTBbits	set	3978
   257   000000                     _TRISHbits	set	3976
   258   000000                     _T2PR	set	4028
   259   000000                     _T2CONbits	set	4029
   260   000000                     _CCPR2H	set	4006
   261   000000                     _CCPR1H	set	4010
   262   000000                     _TRISCbits	set	3971
   263   000000                     _TRISDbits	set	3972
   264   000000                     _TRISEbits	set	3973
   265   000000                     _RC4REG	set	3811
   266   000000                     _SP4BRGL	set	3813
   267   000000                     _TX4STAbits	set	3816
   268   000000                     _BAUD4CONbits	set	3817
   269   000000                     _SSP2CON2	set	3802
   270   000000                     _CCPR4H	set	3873
   271   000000                     _CCPR3H	set	3877
   272   000000                     _SSP2STAT	set	3800
   273   000000                     _ANSELFbits	set	3764
   274   000000                     _SSP2BUF	set	3797
   275   000000                     _PIE0bits	set	3625
   276   000000                     _PIE2bits	set	3627
   277   000000                     _RC7PPS	set	3689
   278   000000                     _RD5PPS	set	3695
   279   000000                     _RE2PPS	set	3700
   280   000000                     _RD6PPS	set	3696
   281   000000                     _RE4PPS	set	3702
   282   000000                     _RG6PPS	set	3720
   283   000000                     _ANSELAbits	set	3730
   284   000000                     _TMR0L	set	4051
   285   000000                     _TMR0H	set	4052
   286   000000                     _T0CON0bits	set	4053
   287   000000                     _T0CON1bits	set	4054
   288   000000                     _T2CLKCONbits	set	4031
   289   000000                     _T2HLTbits	set	4030
   290   000000                     _CCP1CONbits	set	4011
   291   000000                     _CCPTMRS0bits	set	4013
   292   000000                     _CCP2CONbits	set	4007
   293   000000                     _ADREFbits	set	3928
   294   000000                     _CCP3CONbits	set	3878
   295   000000                     _CCP4CONbits	set	3874
   296   000000                     _INTCONbits	set	4082
   297   000000                     _PIE4bits	set	3629
   298   000000                     _PIR4bits	set	3639
   299   000000                     _RC0PPS	set	3682
   300   000000                     _ADPCH	set	3935
   301   000000                     _ADRESH	set	3940
   302   000000                     _ADCON0bits	set	3936
   303   000E71                     STR_7:
   304                           
   305                           ; BSR set to: 14
   306   000E71  62                 	db	98	;'b'
   307   000E72  6C                 	db	108	;'l'
   308   000E73  75                 	db	117	;'u'
   309   000E74  65                 	db	101	;'e'
   310   000E75  20                 	db	32
   311   000E76  3D                 	db	61	;'='
   312   000E77  20                 	db	32
   313   000E78  25                 	db	37
   314   000E79  64                 	db	100	;'d'
   315   000E7A  20                 	db	32
   316   000E7B  0D                 	db	13
   317   000E7C  0A                 	db	10
   318   000E7D  0D                 	db	13
   319   000E7E  0A                 	db	10
   320   000E7F  00                 	db	0
   321   000E80                     STR_2:
   322                           
   323                           ; BSR set to: 14
   324   000E80  67                 	db	103	;'g'
   325   000E81  72                 	db	114	;'r'
   326   000E82  65                 	db	101	;'e'
   327   000E83  65                 	db	101	;'e'
   328   000E84  6E                 	db	110	;'n'
   329   000E85  72                 	db	114	;'r'
   330   000E86  20                 	db	32
   331   000E87  3D                 	db	61	;'='
   332   000E88  20                 	db	32
   333   000E89  25                 	db	37
   334   000E8A  66                 	db	102	;'f'
   335   000E8B  20                 	db	32
   336   000E8C  0D                 	db	13
   337   000E8D  0A                 	db	10
   338   000E8E  00                 	db	0
   339   000E8F                     STR_6:
   340                           
   341                           ; BSR set to: 14
   342   000E8F  67                 	db	103	;'g'
   343   000E90  72                 	db	114	;'r'
   344   000E91  65                 	db	101	;'e'
   345   000E92  65                 	db	101	;'e'
   346   000E93  6E                 	db	110	;'n'
   347   000E94  20                 	db	32
   348   000E95  3D                 	db	61	;'='
   349   000E96  20                 	db	32
   350   000E97  25                 	db	37
   351   000E98  64                 	db	100	;'d'
   352   000E99  20                 	db	32
   353   000E9A  0D                 	db	13
   354   000E9B  0A                 	db	10
   355   000E9C  00                 	db	0
   356   000E9D                     STR_4:
   357                           
   358                           ; BSR set to: 14
   359   000E9D  63                 	db	99	;'c'
   360   000E9E  6C                 	db	108	;'l'
   361   000E9F  65                 	db	101	;'e'
   362   000EA0  61                 	db	97	;'a'
   363   000EA1  72                 	db	114	;'r'
   364   000EA2  20                 	db	32
   365   000EA3  3D                 	db	61	;'='
   366   000EA4  20                 	db	32
   367   000EA5  25                 	db	37
   368   000EA6  64                 	db	100	;'d'
   369   000EA7  20                 	db	32
   370   000EA8  0D                 	db	13
   371   000EA9  0A                 	db	10
   372   000EAA  00                 	db	0
   373   000EAB                     STR_3:
   374                           
   375                           ; BSR set to: 14
   376   000EAB  62                 	db	98	;'b'
   377   000EAC  6C                 	db	108	;'l'
   378   000EAD  75                 	db	117	;'u'
   379   000EAE  65                 	db	101	;'e'
   380   000EAF  72                 	db	114	;'r'
   381   000EB0  20                 	db	32
   382   000EB1  3D                 	db	61	;'='
   383   000EB2  20                 	db	32
   384   000EB3  25                 	db	37
   385   000EB4  66                 	db	102	;'f'
   386   000EB5  20                 	db	32
   387   000EB6  0D                 	db	13
   388   000EB7  0A                 	db	10
   389   000EB8  00                 	db	0
   390   000EB9                     STR_1:
   391                           
   392                           ; BSR set to: 14
   393   000EB9  72                 	db	114	;'r'
   394   000EBA  65                 	db	101	;'e'
   395   000EBB  64                 	db	100	;'d'
   396   000EBC  72                 	db	114	;'r'
   397   000EBD  20                 	db	32
   398   000EBE  3D                 	db	61	;'='
   399   000EBF  20                 	db	32
   400   000EC0  25                 	db	37
   401   000EC1  66                 	db	102	;'f'
   402   000EC2  20                 	db	32
   403   000EC3  0D                 	db	13
   404   000EC4  0A                 	db	10
   405   000EC5  00                 	db	0
   406   000EC6                     STR_5:
   407                           
   408                           ; BSR set to: 14
   409   000EC6  72                 	db	114	;'r'
   410   000EC7  65                 	db	101	;'e'
   411   000EC8  64                 	db	100	;'d'
   412   000EC9  20                 	db	32
   413   000ECA  3D                 	db	61	;'='
   414   000ECB  20                 	db	32
   415   000ECC  25                 	db	37
   416   000ECD  64                 	db	100	;'d'
   417   000ECE  20                 	db	32
   418   000ECF  0D                 	db	13
   419   000ED0  0A                 	db	10
   420   000ED1  00                 	db	0
   421   000ED2                     STR_8:
   422                           
   423                           ; BSR set to: 14
   424   000ED2  69                 	db	105	;'i'
   425   000ED3  6E                 	db	110	;'n'
   426   000ED4  66                 	db	102	;'f'
   427   000ED5  00                 	db	0
   428   000ED6                     STR_11:
   429                           
   430                           ; BSR set to: 14
   431   000ED6  6E                 	db	110	;'n'
   432   000ED7  61                 	db	97	;'a'
   433   000ED8  6E                 	db	110	;'n'
   434   000ED9  00                 	db	0
   435   000EDA  00                 	db	0	; dummy byte at the end
   436   000000                     
   437                           ; #config settings
   438                           
   439                           	psect	cinit
   440   00806A                     __pcinit:
   441                           	callstack 0
   442   00806A                     start_initialization:
   443                           	callstack 0
   444   00806A                     __initialization:
   445                           	callstack 0
   446                           
   447                           ; Clear objects allocated to BANK4 (80 bytes)
   448   00806A  EE04  F000         	lfsr	0,__pbssBANK4
   449   00806E  0E50               	movlw	80
   450   008070                     clear_0:
   451   008070  6AEE               	clrf	postinc0,c
   452   008072  06E8               	decf	wreg,f,c
   453   008074  E1FD               	bnz	clear_0
   454                           
   455                           ; Clear objects allocated to BANK1 (60 bytes)
   456   008076  EE01  F0B8         	lfsr	0,__pbssBANK1
   457   00807A  0E3C               	movlw	60
   458   00807C                     clear_1:
   459   00807C  6AEE               	clrf	postinc0,c
   460   00807E  06E8               	decf	wreg,f,c
   461   008080  E1FD               	bnz	clear_1
   462                           
   463                           ; Clear objects allocated to BANK0 (38 bytes)
   464   008082  EE00  F0BB         	lfsr	0,__pbssBANK0
   465   008086  0E26               	movlw	38
   466   008088                     clear_2:
   467   008088  6AEE               	clrf	postinc0,c
   468   00808A  06E8               	decf	wreg,f,c
   469   00808C  E1FD               	bnz	clear_2
   470                           
   471                           ; Clear objects allocated to COMRAM (1 bytes)
   472   00808E  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   473   008090                     end_of_initialization:
   474                           	callstack 0
   475   008090                     __end_of__initialization:
   476                           	callstack 0
   477   008090  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   478   008092  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   479   008094  0100               	movlb	0
   480   008096  EFD6  F032         	goto	_main	;jump to C main() function
   481                           
   482                           	psect	bssCOMRAM
   483   00005D                     __pbssCOMRAM:
   484                           	callstack 0
   485   00005D                     _TxBufWriteCnt:
   486                           	callstack 0
   487   00005D                     	ds	1
   488                           
   489                           	psect	bssBANK0
   490   0000BB                     __pbssBANK0:
   491                           	callstack 0
   492   0000BB                     _EUSART4RXbuf:
   493                           	callstack 0
   494   0000BB                     	ds	20
   495   0000CF                     floorf@F521:
   496                           	callstack 0
   497   0000CF                     	ds	4
   498   0000D3                     ___fpclassifyf@F465:
   499                           	callstack 0
   500   0000D3                     	ds	4
   501   0000D7                     _errno:
   502                           	callstack 0
   503   0000D7                     	ds	2
   504   0000D9                     _width:
   505                           	callstack 0
   506   0000D9                     	ds	2
   507   0000DB                     _prec:
   508                           	callstack 0
   509   0000DB                     	ds	2
   510   0000DD                     _flags:
   511                           	callstack 0
   512   0000DD                     	ds	1
   513   0000DE                     _TxBufReadCnt:
   514                           	callstack 0
   515   0000DE                     	ds	1
   516   0000DF                     _RxBufReadCnt:
   517                           	callstack 0
   518   0000DF                     	ds	1
   519   0000E0                     _RxBufWriteCnt:
   520                           	callstack 0
   521   0000E0                     	ds	1
   522                           
   523                           	psect	bssBANK1
   524   0001B8                     __pbssBANK1:
   525                           	callstack 0
   526   0001B8                     _EUSART4TXbuf:
   527                           	callstack 0
   528   0001B8                     	ds	60
   529                           
   530                           	psect	bssBANK4
   531   000400                     __pbssBANK4:
   532                           	callstack 0
   533   000400                     _dbuf:
   534                           	callstack 0
   535   000400                     	ds	80
   536                           
   537                           	psect	cstackBANK3
   538   000300                     __pcstackBANK3:
   539                           	callstack 0
   540   000300                     main@actions:
   541                           	callstack 0
   542                           
   543                           ; 40 bytes @ 0x0
   544   000300                     	ds	40
   545   000328                     main@clear_val:
   546                           	callstack 0
   547                           
   548                           ; 20 bytes @ 0x28
   549   000328                     	ds	20
   550   00033C                     main@red_val:
   551                           	callstack 0
   552                           
   553                           ; 20 bytes @ 0x3C
   554   00033C                     	ds	20
   555   000350                     main@green_val:
   556                           	callstack 0
   557                           
   558                           ; 20 bytes @ 0x50
   559   000350                     	ds	20
   560   000364                     main@blue_val:
   561                           	callstack 0
   562                           
   563                           ; 20 bytes @ 0x64
   564   000364                     	ds	20
   565   000378                     main@timings:
   566                           	callstack 0
   567                           
   568                           ; 40 bytes @ 0x78
   569   000378                     	ds	40
   570   0003A0                     main@pclear_val:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0xA0
   574   0003A0                     	ds	2
   575   0003A2                     main@pred_val:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0xA2
   579   0003A2                     	ds	2
   580   0003A4                     main@pblue_val:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0xA4
   584   0003A4                     	ds	2
   585   0003A6                     main@pgreen_val:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0xA6
   589   0003A6                     	ds	2
   590   0003A8                     main@redm:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0xA8
   594   0003A8                     	ds	2
   595   0003AA                     main@greenm:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0xAA
   599   0003AA                     	ds	2
   600   0003AC                     main@bluem:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0xAC
   604   0003AC                     	ds	2
   605   0003AE                     main@actions_completed:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0xAE
   609   0003AE                     	ds	2
   610   0003B0                     main@motorL:
   611                           	callstack 0
   612                           
   613                           ; 9 bytes @ 0xB0
   614   0003B0                     	ds	9
   615   0003B9                     main@motorR:
   616                           	callstack 0
   617                           
   618                           ; 9 bytes @ 0xB9
   619   0003B9                     	ds	9
   620                           
   621                           	psect	cstackBANK2
   622   000200                     __pcstackBANK2:
   623                           	callstack 0
   624   000200                     decide_action@clear_val:
   625                           	callstack 0
   626                           
   627                           ; 20 bytes @ 0x0
   628   000200                     	ds	20
   629   000214                     decide_action@red_val:
   630                           	callstack 0
   631                           
   632                           ; 20 bytes @ 0x14
   633   000214                     	ds	20
   634   000228                     decide_action@green_val:
   635                           	callstack 0
   636                           
   637                           ; 20 bytes @ 0x28
   638   000228                     	ds	20
   639   00023C                     decide_action@blue_val:
   640                           	callstack 0
   641                           
   642                           ; 20 bytes @ 0x3C
   643   00023C                     	ds	20
   644   000250                     _decide_action$3179:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x50
   648   000250                     	ds	4
   649   000254                     decide_action@pred_val:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x54
   653   000254                     	ds	2
   654   000256                     decide_action@pblue_val:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x56
   658   000256                     	ds	2
   659   000258                     decide_action@pgreen_val:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x58
   663   000258                     	ds	2
   664   00025A                     decide_action@rgb_comp:
   665                           	callstack 0
   666                           
   667                           ; 32 bytes @ 0x5A
   668   00025A                     	ds	32
   669   00027A                     decide_action@action:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x7A
   673   00027A                     	ds	1
   674   00027B                     decide_action@total:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0x7B
   678   00027B                     	ds	4
   679   00027F                     decide_action@i:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x7F
   683   00027F                     	ds	1
   684   000280                     decide_action@red:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x80
   688   000280                     	ds	4
   689   000284                     decide_action@green:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x84
   693   000284                     	ds	4
   694   000288                     decide_action@blue:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x88
   698   000288                     	ds	4
   699   00028C                     decide_action@red_r:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x8C
   703   00028C                     	ds	4
   704   000290                     decide_action@green_r:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0x90
   708   000290                     	ds	4
   709   000294                     decide_action@blue_r:
   710                           	callstack 0
   711                           
   712                           ; 4 bytes @ 0x94
   713   000294                     	ds	4
   714   000298                     _decide_action$3180:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x98
   718   000298                     	ds	4
   719   00029C                     _decide_action$3181:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x9C
   723   00029C                     	ds	4
   724   0002A0                     _decide_action$3182:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0xA0
   728   0002A0                     	ds	4
   729   0002A4                     _decide_action$3183:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0xA4
   733   0002A4                     	ds	4
   734   0002A8                     _decide_action$3184:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0xA8
   738   0002A8                     	ds	4
   739   0002AC                     _decide_action$3185:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0xAC
   743   0002AC                     	ds	4
   744   0002B0                     _decide_action$3186:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0xB0
   748   0002B0                     	ds	4
   749                           
   750                           	psect	cstackBANK1
   751   000100                     __pcstackBANK1:
   752                           	callstack 0
   753   000100                     _powf$3192:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x0
   757   000100                     	ds	4
   758   000104                     _powf$3193:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x4
   762   000104                     	ds	4
   763   000108                     _powf$3197:
   764                           	callstack 0
   765                           
   766                           ; 4 bytes @ 0x8
   767   000108                     	ds	4
   768   00010C                     _powf$3198:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0xC
   772   00010C                     	ds	4
   773   000110                     _powf$3199:
   774                           	callstack 0
   775                           
   776                           ; 4 bytes @ 0x10
   777   000110                     	ds	4
   778   000114                     _powf$3200:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x14
   782   000114                     	ds	4
   783   000118                     _powf$3201:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x18
   787   000118                     	ds	4
   788   00011C                     powf@t2:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x1C
   792   00011C                     	ds	4
   793   000120                     powf@z_h:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x20
   797   000120                     	ds	4
   798   000124                     powf@z_l:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x24
   802   000124                     	ds	4
   803   000128                     powf@i:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x28
   807   000128                     	ds	4
   808   00012C                     powf@y1:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x2C
   812   00012C                     	ds	4
   813   000130                     powf@s_l:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x30
   817   000130                     	ds	4
   818   000134                     powf@t_l:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x34
   822   000134                     	ds	4
   823   000138                     _powf$3191:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x38
   827   000138                     	ds	4
   828   00013C                     _powf$3195:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x3C
   832   00013C                     	ds	4
   833   000140                     _powf$3196:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x40
   837   000140                     	ds	4
   838   000144                     powf@w:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x44
   842   000144                     	ds	4
   843   000148                     _powf$3187:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0x48
   847   000148                     	ds	4
   848   00014C                     _powf$3189:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x4C
   852   00014C                     	ds	4
   853   000150                     powf@r:
   854                           	callstack 0
   855                           
   856                           ; 4 bytes @ 0x50
   857   000150                     	ds	4
   858   000154                     powf@yisint:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x54
   862   000154                     	ds	4
   863   000158                     _powf$3188:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x58
   867   000158                     	ds	4
   868   00015C                     _powf$3194:
   869                           	callstack 0
   870                           
   871                           ; 4 bytes @ 0x5C
   872   00015C                     	ds	4
   873   000160                     powf@s:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x60
   877   000160                     	ds	4
   878   000164                     powf@sn:
   879                           	callstack 0
   880                           
   881                           ; 4 bytes @ 0x64
   882   000164                     	ds	4
   883   000168                     powf@hx:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0x68
   887   000168                     	ds	4
   888   00016C                     powf@p_l:
   889                           	callstack 0
   890                           
   891                           ; 4 bytes @ 0x6C
   892   00016C                     	ds	4
   893   000170                     powf@t_h:
   894                           	callstack 0
   895                           
   896                           ; 4 bytes @ 0x70
   897   000170                     	ds	4
   898   000174                     powf@s_h:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x74
   902   000174                     	ds	4
   903   000178                     powf@ax:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x78
   907   000178                     	ds	4
   908   00017C                     powf@u:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x7C
   912   00017C                     	ds	4
   913   000180                     powf@v:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x80
   917   000180                     	ds	4
   918   000184                     powf@hy:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0x84
   922   000184                     	ds	4
   923   000188                     powf@n:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x88
   927   000188                     	ds	4
   928   00018C                     powf@t1:
   929                           	callstack 0
   930                           
   931                           ; 4 bytes @ 0x8C
   932   00018C                     	ds	4
   933   000190                     powf@s2:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x90
   937   000190                     	ds	4
   938   000194                     powf@iy:
   939                           	callstack 0
   940                           
   941                           ; 4 bytes @ 0x94
   942   000194                     	ds	4
   943   000198                     powf@is:
   944                           	callstack 0
   945                           
   946                           ; 4 bytes @ 0x98
   947   000198                     	ds	4
   948   00019C                     _powf$3190:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x9C
   952   00019C                     	ds	4
   953   0001A0                     powf@p_h:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0xA0
   957   0001A0                     	ds	4
   958   0001A4                     powf@k:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0xA4
   962   0001A4                     	ds	4
   963   0001A8                     powf@j:
   964                           	callstack 0
   965                           
   966                           ; 4 bytes @ 0xA8
   967   0001A8                     	ds	4
   968   0001AC                     powf@ix:
   969                           	callstack 0
   970                           
   971                           ; 4 bytes @ 0xAC
   972   0001AC                     	ds	4
   973   0001B0                     powf@t:
   974                           	callstack 0
   975                           
   976                           ; 4 bytes @ 0xB0
   977   0001B0                     	ds	4
   978   0001B4                     powf@z:
   979                           	callstack 0
   980                           
   981                           ; 4 bytes @ 0xB4
   982   0001B4                     	ds	4
   983                           
   984                           	psect	cstackBANK0
   985   000060                     __pcstackBANK0:
   986                           	callstack 0
   987   000060                     ?_powf:
   988                           	callstack 0
   989   000060                     efgtoa@fp:
   990                           	callstack 0
   991   000060                     powf@x:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x0
   995   000060                     	ds	1
   996   000061                     efgtoa@f:
   997                           	callstack 0
   998                           
   999                           ; 4 bytes @ 0x1
  1000   000061                     	ds	3
  1001   000064                     powf@y:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x4
  1005   000064                     	ds	1
  1006   000065                     efgtoa@c:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x5
  1010   000065                     	ds	1
  1011   000066                     efgtoa@ne:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x6
  1015   000066                     	ds	2
  1016   000068                     ??_powf:
  1017   000068                     efgtoa@p:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x8
  1021   000068                     	ds	2
  1022   00006A                     efgtoa@t:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0xA
  1026   00006A                     	ds	2
  1027   00006C                     _efgtoa$2687:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0xC
  1031   00006C                     	ds	2
  1032   00006E                     efgtoa@pp:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0xE
  1036   00006E                     	ds	1
  1037   00006F                     efgtoa@mode:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0xF
  1041   00006F                     	ds	1
  1042   000070                     efgtoa@nmode:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x10
  1046   000070                     	ds	1
  1047   000071                     efgtoa@d:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x11
  1051   000071                     	ds	2
  1052   000073                     efgtoa@m:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x13
  1056   000073                     	ds	2
  1057   000075                     efgtoa@e:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x15
  1061   000075                     	ds	2
  1062   000077                     efgtoa@w:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x17
  1066   000077                     	ds	2
  1067   000079                     efgtoa@ou:
  1068                           	callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x19
  1071   000079                     	ds	4
  1072   00007D                     efgtoa@i:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x1D
  1076   00007D                     	ds	2
  1077   00007F                     efgtoa@h:
  1078                           	callstack 0
  1079                           
  1080                           ; 4 bytes @ 0x1F
  1081   00007F                     	ds	4
  1082   000083                     efgtoa@l:
  1083                           	callstack 0
  1084                           
  1085                           ; 4 bytes @ 0x23
  1086   000083                     	ds	4
  1087   000087                     efgtoa@sign:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x27
  1091   000087                     	ds	1
  1092   000088                     efgtoa@g:
  1093                           	callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x28
  1096   000088                     	ds	4
  1097   00008C                     efgtoa@n:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x2C
  1101   00008C                     	ds	2
  1102   00008E                     efgtoa@u:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x2E
  1106   00008E                     	ds	4
  1107   000092                     vfpfcnvrt@fp:
  1108                           	callstack 0
  1109                           
  1110                           ; 1 bytes @ 0x32
  1111   000092                     	ds	1
  1112   000093                     vfpfcnvrt@fmt:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x33
  1116   000093                     	ds	1
  1117   000094                     vfpfcnvrt@ap:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x34
  1121   000094                     	ds	1
  1122   000095                     vfpfcnvrt@done:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x35
  1126   000095                     	ds	1
  1127   000096                     vfpfcnvrt@convarg:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x36
  1131   000096                     	ds	4
  1132   00009A                     vfpfcnvrt@cp:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x3A
  1136   00009A                     	ds	1
  1137   00009B                     vfpfcnvrt@c:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x3B
  1141   00009B                     	ds	1
  1142   00009C                     ?_vfprintf:
  1143                           	callstack 0
  1144   00009C                     vfprintf@fp:
  1145                           	callstack 0
  1146                           
  1147                           ; 1 bytes @ 0x3C
  1148   00009C                     	ds	1
  1149   00009D                     vfprintf@fmt:
  1150                           	callstack 0
  1151                           
  1152                           ; 1 bytes @ 0x3D
  1153   00009D                     	ds	1
  1154   00009E                     vfprintf@ap:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x3E
  1158   00009E                     	ds	1
  1159   00009F                     ?_sprintf:
  1160                           	callstack 0
  1161   00009F                     sprintf@s:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x3F
  1165   00009F                     	ds	2
  1166   0000A1                     sprintf@fmt:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x41
  1170   0000A1                     	ds	5
  1171   0000A6                     sprintf@ap:
  1172                           	callstack 0
  1173                           
  1174                           ; 1 bytes @ 0x46
  1175   0000A6                     	ds	1
  1176   0000A7                     sprintf@f:
  1177                           	callstack 0
  1178                           
  1179                           ; 12 bytes @ 0x47
  1180   0000A7                     	ds	12
  1181   0000B3                     decide_action@red_unsigned:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x53
  1185   0000B3                     	ds	2
  1186   0000B5                     decide_action@green_unsigned:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x55
  1190   0000B5                     	ds	2
  1191   0000B7                     decide_action@blue_unsigned:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x57
  1195   0000B7                     	ds	2
  1196   0000B9                     ??_main:
  1197                           
  1198                           ; 1 bytes @ 0x59
  1199   0000B9                     	ds	2
  1200                           
  1201                           	psect	cstackCOMRAM
  1202   000001                     __pcstackCOMRAM:
  1203                           	callstack 0
  1204   000001                     i2sendCharSerial4@charToSend:
  1205                           	callstack 0
  1206                           
  1207                           ; 1 bytes @ 0x0
  1208   000001                     	ds	1
  1209   000002                     ??_color_click_toggleLED:
  1210   000002                     ??_invert_action:
  1211   000002                     ??_I2C_2_Master_Idle:
  1212   000002                     ?_get16bitTMR0val:
  1213                           	callstack 0
  1214   000002                     ?___fpclassifyf:
  1215                           	callstack 0
  1216   000002                     ?___wmul:
  1217                           	callstack 0
  1218   000002                     ?___awdiv:
  1219                           	callstack 0
  1220   000002                     ?___awmod:
  1221                           	callstack 0
  1222   000002                     ?___fladd:
  1223                           	callstack 0
  1224   000002                     ?_labs:
  1225                           	callstack 0
  1226   000002                     ?___flneg:
  1227                           	callstack 0
  1228   000002                     ?___fltol:
  1229                           	callstack 0
  1230   000002                     ?___xxtofl:
  1231                           	callstack 0
  1232   000002                     sendCharSerial4@charToSend:
  1233                           	callstack 0
  1234   000002                     initDCmotorsPWM@PWMperiod:
  1235                           	callstack 0
  1236   000002                     ___wmul@multiplier:
  1237                           	callstack 0
  1238   000002                     ___awdiv@dividend:
  1239                           	callstack 0
  1240   000002                     ___awmod@dividend:
  1241                           	callstack 0
  1242   000002                     memcpy@d1:
  1243                           	callstack 0
  1244   000002                     fputc@c:
  1245                           	callstack 0
  1246   000002                     strcpy@dest:
  1247                           	callstack 0
  1248   000002                     ___fleq@ff1:
  1249                           	callstack 0
  1250   000002                     ___flneg@f1:
  1251                           	callstack 0
  1252   000002                     ___fltol@f1:
  1253                           	callstack 0
  1254   000002                     ___fladd@b:
  1255                           	callstack 0
  1256   000002                     ___xxtofl@val:
  1257                           	callstack 0
  1258   000002                     ___fpclassifyf@x:
  1259                           	callstack 0
  1260   000002                     labs@a:
  1261                           	callstack 0
  1262                           
  1263                           ; 4 bytes @ 0x1
  1264   000002                     	ds	1
  1265   000003                     ??_I2C_2_Master_Read:
  1266   000003                     I2C_2_Master_Write@data_byte:
  1267                           	callstack 0
  1268   000003                     sendStringSerial4@string:
  1269                           	callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x2
  1272   000003                     	ds	1
  1273   000004                     ??_get16bitTMR0val:
  1274   000004                     color_writetoaddr@value:
  1275                           	callstack 0
  1276   000004                     invert_action@input_action:
  1277                           	callstack 0
  1278   000004                     I2C_2_Master_Read@ack:
  1279                           	callstack 0
  1280   000004                     fputc@fp:
  1281                           	callstack 0
  1282   000004                     strcpy@src:
  1283                           	callstack 0
  1284   000004                     ___wmul@multiplicand:
  1285                           	callstack 0
  1286   000004                     ___awdiv@divisor:
  1287                           	callstack 0
  1288   000004                     ___awmod@divisor:
  1289                           	callstack 0
  1290   000004                     memcpy@s1:
  1291                           	callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x3
  1294   000004                     	ds	1
  1295   000005                     ??_fputc:
  1296   000005                     ??_strcpy:
  1297   000005                     color_writetoaddr@address:
  1298                           	callstack 0
  1299   000005                     I2C_2_Master_Read@tmp:
  1300                           	callstack 0
  1301                           
  1302                           ; 1 bytes @ 0x4
  1303   000005                     	ds	1
  1304   000006                     ??___fpclassifyf:
  1305   000006                     ??_labs:
  1306   000006                     ??_color_click_init:
  1307   000006                     ??___fltol:
  1308   000006                     ??___xxtofl:
  1309   000006                     ?_color_read_Clear:
  1310                           	callstack 0
  1311   000006                     ?_color_read_Red:
  1312                           	callstack 0
  1313   000006                     ?_color_read_Green:
  1314                           	callstack 0
  1315   000006                     ?_color_read_Blue:
  1316                           	callstack 0
  1317   000006                     ___awdiv@counter:
  1318                           	callstack 0
  1319   000006                     ___awmod@counter:
  1320                           	callstack 0
  1321   000006                     get16bitTMR0val@timer_val:
  1322                           	callstack 0
  1323   000006                     ___wmul@product:
  1324                           	callstack 0
  1325   000006                     memcpy@n:
  1326                           	callstack 0
  1327   000006                     strcpy@d:
  1328                           	callstack 0
  1329   000006                     ___fleq@ff2:
  1330                           	callstack 0
  1331   000006                     ___fladd@a:
  1332                           	callstack 0
  1333                           
  1334                           ; 4 bytes @ 0x5
  1335   000006                     	ds	1
  1336   000007                     ___awdiv@sign:
  1337                           	callstack 0
  1338   000007                     ___awmod@sign:
  1339                           	callstack 0
  1340                           
  1341                           ; 1 bytes @ 0x6
  1342   000007                     	ds	1
  1343   000008                     ??_color_read_Clear:
  1344   000008                     ??_color_read_Red:
  1345   000008                     ??_color_read_Green:
  1346   000008                     ??_color_read_Blue:
  1347   000008                     ?_abs:
  1348                           	callstack 0
  1349   000008                     ?___lwdiv:
  1350                           	callstack 0
  1351   000008                     memcpy@tmp:
  1352                           	callstack 0
  1353   000008                     ___awdiv@quotient:
  1354                           	callstack 0
  1355   000008                     ___lwdiv@dividend:
  1356                           	callstack 0
  1357   000008                     abs@a:
  1358                           	callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x7
  1361   000008                     	ds	1
  1362   000009                     memcpy@d:
  1363                           	callstack 0
  1364                           
  1365                           ; 2 bytes @ 0x8
  1366   000009                     	ds	1
  1367   00000A                     ??___fladd:
  1368   00000A                     ??_abs:
  1369   00000A                     ??___fleq:
  1370   00000A                     ___fltol@sign1:
  1371                           	callstack 0
  1372   00000A                     ___xxtofl@sign:
  1373                           	callstack 0
  1374   00000A                     ___lwdiv@divisor:
  1375                           	callstack 0
  1376   00000A                     ___fpclassifyf@e:
  1377                           	callstack 0
  1378   00000A                     fputs@s:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x9
  1382   00000A                     	ds	1
  1383   00000B                     ___fltol@exp1:
  1384                           	callstack 0
  1385   00000B                     ___xxtofl@exp:
  1386                           	callstack 0
  1387   00000B                     color_read_Clear@tmp:
  1388                           	callstack 0
  1389   00000B                     color_read_Red@tmp:
  1390                           	callstack 0
  1391   00000B                     color_read_Green@tmp:
  1392                           	callstack 0
  1393   00000B                     color_read_Blue@tmp:
  1394                           	callstack 0
  1395   00000B                     memcpy@s:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0xA
  1399   00000B                     	ds	1
  1400   00000C                     fputs@fp:
  1401                           	callstack 0
  1402   00000C                     ___lwdiv@quotient:
  1403                           	callstack 0
  1404   00000C                     ___xxtofl@arg:
  1405                           	callstack 0
  1406   00000C                     ___fpclassifyf@u:
  1407                           	callstack 0
  1408                           
  1409                           ; 4 bytes @ 0xB
  1410   00000C                     	ds	1
  1411   00000D                     fputs@c:
  1412                           	callstack 0
  1413                           
  1414                           ; 1 bytes @ 0xC
  1415   00000D                     	ds	1
  1416   00000E                     ___lwdiv@counter:
  1417                           	callstack 0
  1418   00000E                     ___fladd@signs:
  1419                           	callstack 0
  1420   00000E                     fputs@i:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0xD
  1424   00000E                     	ds	1
  1425   00000F                     ___fladd@aexp:
  1426                           	callstack 0
  1427   00000F                     setMotorPWM@m:
  1428                           	callstack 0
  1429                           
  1430                           ; 2 bytes @ 0xE
  1431   00000F                     	ds	1
  1432   000010                     ___fladd@bexp:
  1433                           	callstack 0
  1434   000010                     pad@fp:
  1435                           	callstack 0
  1436                           
  1437                           ; 1 bytes @ 0xF
  1438   000010                     	ds	1
  1439   000011                     ??_setMotorPWM:
  1440   000011                     ___fladd@grs:
  1441                           	callstack 0
  1442   000011                     pad@buf:
  1443                           	callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x10
  1446   000011                     	ds	1
  1447   000012                     ?_sqrtf:
  1448                           	callstack 0
  1449   000012                     ?___flmul:
  1450                           	callstack 0
  1451   000012                     ___flmul@b:
  1452                           	callstack 0
  1453   000012                     sqrtf@x:
  1454                           	callstack 0
  1455                           
  1456                           ; 4 bytes @ 0x11
  1457   000012                     	ds	1
  1458   000013                     setMotorPWM@posDuty:
  1459                           	callstack 0
  1460   000013                     pad@p:
  1461                           	callstack 0
  1462                           
  1463                           ; 2 bytes @ 0x12
  1464   000013                     	ds	1
  1465   000014                     setMotorPWM@negDuty:
  1466                           	callstack 0
  1467                           
  1468                           ; 1 bytes @ 0x13
  1469   000014                     	ds	1
  1470   000015                     ??_pad:
  1471   000015                     fullSpeedAhead@mL:
  1472                           	callstack 0
  1473   000015                     stop@mL:
  1474                           	callstack 0
  1475                           
  1476                           ; 2 bytes @ 0x14
  1477   000015                     	ds	1
  1478   000016                     ??_sqrtf:
  1479   000016                     pad@i:
  1480                           	callstack 0
  1481   000016                     ___flmul@a:
  1482                           	callstack 0
  1483                           
  1484                           ; 4 bytes @ 0x15
  1485   000016                     	ds	1
  1486   000017                     fullSpeedAhead@mR:
  1487                           	callstack 0
  1488   000017                     stop@mR:
  1489                           	callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x16
  1492   000017                     	ds	2
  1493   000019                     ??_fullSpeedAhead:
  1494   000019                     turn_left_90@mL:
  1495                           	callstack 0
  1496   000019                     turn_right_90@mL:
  1497                           	callstack 0
  1498   000019                     turn_left_135@mL:
  1499                           	callstack 0
  1500   000019                     turn_right_135@mL:
  1501                           	callstack 0
  1502   000019                     reverse_after_read@mL:
  1503                           	callstack 0
  1504   000019                     reverse_one_square@mL:
  1505                           	callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x18
  1508   000019                     	ds	1
  1509   00001A                     ??___flmul:
  1510                           
  1511                           ; 1 bytes @ 0x19
  1512   00001A                     	ds	1
  1513   00001B                     turn_left_90@mR:
  1514                           	callstack 0
  1515   00001B                     turn_right_90@mR:
  1516                           	callstack 0
  1517   00001B                     turn_left_135@mR:
  1518                           	callstack 0
  1519   00001B                     turn_right_135@mR:
  1520                           	callstack 0
  1521   00001B                     reverse_after_read@mR:
  1522                           	callstack 0
  1523   00001B                     reverse_one_square@mR:
  1524                           	callstack 0
  1525   00001B                     sqrtf@s:
  1526                           	callstack 0
  1527                           
  1528                           ; 4 bytes @ 0x1A
  1529   00001B                     	ds	2
  1530   00001D                     ??_turn_left_90:
  1531   00001D                     ??_turn_right_90:
  1532   00001D                     ??_turn_left_135:
  1533   00001D                     ??_turn_right_135:
  1534   00001D                     ??_reverse_after_read:
  1535   00001D                     ??_reverse_one_square:
  1536                           
  1537                           ; 1 bytes @ 0x1C
  1538   00001D                     	ds	1
  1539   00001E                     ___flmul@sign:
  1540                           	callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x1D
  1543   00001E                     	ds	1
  1544   00001F                     ___flmul@aexp:
  1545                           	callstack 0
  1546   00001F                     sqrtf@i:
  1547                           	callstack 0
  1548                           
  1549                           ; 4 bytes @ 0x1E
  1550   00001F                     	ds	1
  1551   000020                     ___flmul@grs:
  1552                           	callstack 0
  1553                           
  1554                           ; 4 bytes @ 0x1F
  1555   000020                     	ds	3
  1556   000023                     sqrtf@q:
  1557                           	callstack 0
  1558                           
  1559                           ; 4 bytes @ 0x22
  1560   000023                     	ds	1
  1561   000024                     ___flmul@bexp:
  1562                           	callstack 0
  1563                           
  1564                           ; 1 bytes @ 0x23
  1565   000024                     	ds	1
  1566   000025                     ___flmul@prod:
  1567                           	callstack 0
  1568                           
  1569                           ; 4 bytes @ 0x24
  1570   000025                     	ds	2
  1571   000027                     sqrtf@t:
  1572                           	callstack 0
  1573                           
  1574                           ; 4 bytes @ 0x26
  1575   000027                     	ds	2
  1576   000029                     ___flmul@temp:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x28
  1580   000029                     	ds	2
  1581   00002B                     ?___fldiv:
  1582                           	callstack 0
  1583   00002B                     ?_scalbnf:
  1584                           	callstack 0
  1585   00002B                     ___fldiv@b:
  1586                           	callstack 0
  1587   00002B                     scalbnf@x:
  1588                           	callstack 0
  1589   00002B                     sqrtf@m:
  1590                           	callstack 0
  1591                           
  1592                           ; 4 bytes @ 0x2A
  1593   00002B                     	ds	4
  1594   00002F                     scalbnf@n:
  1595                           	callstack 0
  1596   00002F                     ___fldiv@a:
  1597                           	callstack 0
  1598   00002F                     sqrtf@r:
  1599                           	callstack 0
  1600                           
  1601                           ; 4 bytes @ 0x2E
  1602   00002F                     	ds	2
  1603   000031                     ??_scalbnf:
  1604                           
  1605                           ; 1 bytes @ 0x30
  1606   000031                     	ds	2
  1607   000033                     ??___fldiv:
  1608   000033                     sqrtf@ix:
  1609                           	callstack 0
  1610                           
  1611                           ; 4 bytes @ 0x32
  1612   000033                     	ds	2
  1613   000035                     scalbnf@u:
  1614                           	callstack 0
  1615                           
  1616                           ; 4 bytes @ 0x34
  1617   000035                     	ds	2
  1618   000037                     ___fldiv@rem:
  1619                           	callstack 0
  1620                           
  1621                           ; 4 bytes @ 0x36
  1622   000037                     	ds	2
  1623   000039                     scalbnf@y:
  1624                           	callstack 0
  1625                           
  1626                           ; 4 bytes @ 0x38
  1627   000039                     	ds	2
  1628   00003B                     ___fldiv@sign:
  1629                           	callstack 0
  1630                           
  1631                           ; 1 bytes @ 0x3A
  1632   00003B                     	ds	1
  1633   00003C                     ___fldiv@new_exp:
  1634                           	callstack 0
  1635                           
  1636                           ; 2 bytes @ 0x3B
  1637   00003C                     	ds	2
  1638   00003E                     ___fldiv@grs:
  1639                           	callstack 0
  1640                           
  1641                           ; 4 bytes @ 0x3D
  1642   00003E                     	ds	4
  1643   000042                     ___fldiv@bexp:
  1644                           	callstack 0
  1645                           
  1646                           ; 1 bytes @ 0x41
  1647   000042                     	ds	1
  1648   000043                     ___fldiv@aexp:
  1649                           	callstack 0
  1650                           
  1651                           ; 1 bytes @ 0x42
  1652   000043                     	ds	1
  1653   000044                     ?___flsub:
  1654                           	callstack 0
  1655   000044                     ?_floorf:
  1656                           	callstack 0
  1657   000044                     ___flsub@b:
  1658                           	callstack 0
  1659   000044                     floorf@x:
  1660                           	callstack 0
  1661                           
  1662                           ; 4 bytes @ 0x43
  1663   000044                     	ds	4
  1664   000048                     ??_floorf:
  1665   000048                     ___flsub@a:
  1666                           	callstack 0
  1667                           
  1668                           ; 4 bytes @ 0x47
  1669   000048                     	ds	4
  1670   00004C                     ___flge@ff1:
  1671                           	callstack 0
  1672                           
  1673                           ; 4 bytes @ 0x4B
  1674   00004C                     	ds	2
  1675   00004E                     floorf@m:
  1676                           	callstack 0
  1677                           
  1678                           ; 4 bytes @ 0x4D
  1679   00004E                     	ds	2
  1680   000050                     ___flge@ff2:
  1681                           	callstack 0
  1682                           
  1683                           ; 4 bytes @ 0x4F
  1684   000050                     	ds	2
  1685   000052                     floorf@e:
  1686                           	callstack 0
  1687                           
  1688                           ; 2 bytes @ 0x51
  1689   000052                     	ds	2
  1690   000054                     ??___flge:
  1691   000054                     floorf@u:
  1692                           	callstack 0
  1693                           
  1694                           ; 4 bytes @ 0x53
  1695   000054                     	ds	4
  1696   000058                     ??_efgtoa:
  1697                           
  1698                           ; 1 bytes @ 0x57
  1699   000058                     	ds	2
  1700   00005A                     ??_vfpfcnvrt:
  1701                           
  1702                           ; 1 bytes @ 0x59
  1703   00005A                     	ds	2
  1704   00005C                     vfprintf@cfmt:
  1705                           	callstack 0
  1706                           
  1707                           ; 1 bytes @ 0x5B
  1708   00005C                     	ds	1
  1709   00005D                     
  1710                           ; 1 bytes @ 0x5C
  1711 ;;
  1712 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1713 ;;
  1714 ;; *************** function _main *****************
  1715 ;; Defined at:
  1716 ;;		line 23 in file "main.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  i               1    0        unsigned char 
  1721 ;;  timings        40  120[BANK3 ] unsigned int [20]
  1722 ;;  actions        40    0[BANK3 ] int [20]
  1723 ;;  blue_val       20  100[BANK3 ] unsigned char [20]
  1724 ;;  green_val      20   80[BANK3 ] unsigned char [20]
  1725 ;;  red_val        20   60[BANK3 ] unsigned char [20]
  1726 ;;  clear_val      20   40[BANK3 ] unsigned char [20]
  1727 ;;  motorR          9  185[BANK3 ] struct DC_motor
  1728 ;;  motorL          9  176[BANK3 ] struct DC_motor
  1729 ;;  pmR             2    0        PTR struct DC_motor
  1730 ;;		 -> main@motorR(9), 
  1731 ;;  pmL             2    0        PTR struct DC_motor
  1732 ;;		 -> main@motorL(9), 
  1733 ;;  action_to_do    2    0        int 
  1734 ;;  upcoming_act    2    0        int 
  1735 ;;  actions_comp    2  174[BANK3 ] int 
  1736 ;;  measured_tim    2    0        unsigned int 
  1737 ;;  bluem           2  172[BANK3 ] unsigned int 
  1738 ;;  greenm          2  170[BANK3 ] unsigned int 
  1739 ;;  redm            2  168[BANK3 ] unsigned int 
  1740 ;;  PWMcycle        2    0        unsigned int 
  1741 ;;  lum             2    0        unsigned int 
  1742 ;;  pgreen_val      2  166[BANK3 ] PTR unsigned char 
  1743 ;;		 -> main@green_val(20), 
  1744 ;;  pblue_val       2  164[BANK3 ] PTR unsigned char 
  1745 ;;		 -> main@blue_val(20), 
  1746 ;;  pred_val        2  162[BANK3 ] PTR unsigned char 
  1747 ;;		 -> main@red_val(20), 
  1748 ;;  pclear_val      2  160[BANK3 ] PTR unsigned char 
  1749 ;;		 -> main@clear_val(20), 
  1750 ;;  previously_m    2    0        unsigned int 
  1751 ;;  going_forwar    1    0        _Bool 
  1752 ;;  action          1    0        unsigned char 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1763 ;;      Locals:         0       0       0       0     194       0       0       0       0       0       0       0       
      +0       0       0
  1764 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1765 ;;      Totals:         0       2       0       0     194       0       0       0       0       0       0       0       
      +0       0       0
  1766 ;;Total ram usage:      196 bytes
  1767 ;; Hardware stack levels required when called: 11
  1768 ;; This function calls:
  1769 ;;		_I2C_2_Master_Init
  1770 ;;		_Interrupts_init
  1771 ;;		_Timer0_init
  1772 ;;		_color_click_init
  1773 ;;		_color_click_toggleLED
  1774 ;;		_color_read_Blue
  1775 ;;		_color_read_Clear
  1776 ;;		_color_read_Green
  1777 ;;		_color_read_Red
  1778 ;;		_color_writetoaddr
  1779 ;;		_decide_action
  1780 ;;		_fullSpeedAhead
  1781 ;;		_get16bitTMR0val
  1782 ;;		_initDCmotorsPWM
  1783 ;;		_initUSART4
  1784 ;;		_invert_action
  1785 ;;		_resetTimer0
  1786 ;;		_reverse_after_read
  1787 ;;		_reverse_one_square
  1788 ;;		_sendStringSerial4
  1789 ;;		_sprintf
  1790 ;;		_stop
  1791 ;;		_turn_left_135
  1792 ;;		_turn_left_90
  1793 ;;		_turn_right_135
  1794 ;;		_turn_right_90
  1795 ;; This function is called by:
  1796 ;;		Startup code after reset
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text0
  1801   0065AC                     __ptext0:
  1802                           	callstack 0
  1803   0065AC                     _main:
  1804                           	callstack 20
  1805   0065AC                     
  1806                           ;main.c: 25:     Timer0_init();
  1807   0065AC  ECB1  F040         	call	_Timer0_init	;wreg free
  1808   0065B0                     
  1809                           ;main.c: 26:     Interrupts_init();
  1810   0065B0  ECFD  F040         	call	_Interrupts_init	;wreg free
  1811   0065B4                     
  1812                           ;main.c: 27:     I2C_2_Master_Init();
  1813   0065B4  EC65  F040         	call	_I2C_2_Master_Init	;wreg free
  1814   0065B8                     
  1815                           ;main.c: 28:     color_click_init();
  1816   0065B8  EC14  F03F         	call	_color_click_init	;wreg free
  1817   0065BC                     
  1818                           ;main.c: 29:     initDCmotorsPWM(99);
  1819   0065BC  0E00               	movlw	0
  1820   0065BE  6E03               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1821   0065C0  0E63               	movlw	99
  1822   0065C2  6E02               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1823   0065C4  ECA8  F03C         	call	_initDCmotorsPWM	;wreg free
  1824   0065C8                     
  1825                           ;main.c: 30:     initUSART4();
  1826   0065C8  ECC1  F040         	call	_initUSART4	;wreg free
  1827   0065CC                     
  1828                           ;main.c: 33:     color_click_toggleLED();
  1829   0065CC  ECEE  F03D         	call	_color_click_toggleLED	;wreg free
  1830   0065D0                     
  1831                           ;main.c: 36:     LATHbits.LATH3=1;
  1832   0065D0  8680               	bsf	128,3,c	;volatile
  1833   0065D2                     
  1834                           ;main.c: 37:     TRISHbits.TRISH3=0;
  1835   0065D2  9688               	bcf	136,3,c	;volatile
  1836   0065D4                     
  1837                           ;main.c: 40:     TRISFbits.TRISF2=1;
  1838   0065D4  8486               	bsf	134,2,c	;volatile
  1839   0065D6                     
  1840                           ;main.c: 41:     ANSELFbits.ANSELF2=0;
  1841   0065D6  010E               	movlb	14	; () banked
  1842   0065D8  95B4               	bcf	180,2,b	;volatile
  1843   0065DA                     
  1844                           ; BSR set to: 14
  1845                           ;main.c: 47:     motorL.power=0;
  1846   0065DA  0E00               	movlw	0
  1847   0065DC  0103               	movlb	3	; () banked
  1848   0065DE  6FB0               	movwf	main@motorL& (0+255),b
  1849   0065E0                     
  1850                           ; BSR set to: 3
  1851                           ;main.c: 48:     motorL.direction=1;
  1852   0065E0  0E01               	movlw	1
  1853   0065E2  6FB1               	movwf	(main@motorL+1)& (0+255),b
  1854   0065E4                     
  1855                           ; BSR set to: 3
  1856                           ;main.c: 49:     motorL.brakemode=1;
  1857   0065E4  0E01               	movlw	1
  1858   0065E6  6FB2               	movwf	(main@motorL+2)& (0+255),b
  1859   0065E8                     
  1860                           ; BSR set to: 3
  1861                           ;main.c: 50:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1862   0065E8  0EAA               	movlw	170
  1863   0065EA  6FB5               	movwf	(main@motorL+5)& (0+255),b
  1864   0065EC  0E0F               	movlw	15
  1865   0065EE  6FB6               	movwf	(main@motorL+6)& (0+255),b
  1866   0065F0                     
  1867                           ; BSR set to: 3
  1868                           ;main.c: 51:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1869   0065F0  0EA6               	movlw	166
  1870   0065F2  6FB7               	movwf	(main@motorL+7)& (0+255),b
  1871   0065F4  0E0F               	movlw	15
  1872   0065F6  6FB8               	movwf	(main@motorL+8)& (0+255),b
  1873   0065F8                     
  1874                           ; BSR set to: 3
  1875                           ;main.c: 52:     motorL.PWMperiod=PWMcycle;
  1876   0065F8  0E00               	movlw	0
  1877   0065FA  6FB4               	movwf	(main@motorL+4)& (0+255),b
  1878   0065FC  0E63               	movlw	99
  1879   0065FE  6FB3               	movwf	(main@motorL+3)& (0+255),b
  1880   006600                     
  1881                           ; BSR set to: 3
  1882                           ;main.c: 54:     motorR.power=0;
  1883   006600  0E00               	movlw	0
  1884   006602  6FB9               	movwf	main@motorR& (0+255),b
  1885   006604                     
  1886                           ; BSR set to: 3
  1887                           ;main.c: 55:     motorR.direction=1;
  1888   006604  0E01               	movlw	1
  1889   006606  6FBA               	movwf	(main@motorR+1)& (0+255),b
  1890   006608                     
  1891                           ; BSR set to: 3
  1892                           ;main.c: 56:     motorR.brakemode=1;
  1893   006608  0E01               	movlw	1
  1894   00660A  6FBB               	movwf	(main@motorR+2)& (0+255),b
  1895   00660C                     
  1896                           ; BSR set to: 3
  1897                           ;main.c: 57:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1898   00660C  0E25               	movlw	37
  1899   00660E  6FBE               	movwf	(main@motorR+5)& (0+255),b
  1900   006610  0E0F               	movlw	15
  1901   006612  6FBF               	movwf	(main@motorR+6)& (0+255),b
  1902   006614                     
  1903                           ; BSR set to: 3
  1904                           ;main.c: 58:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1905   006614  0E21               	movlw	33
  1906   006616  6FC0               	movwf	(main@motorR+7)& (0+255),b
  1907   006618  0E0F               	movlw	15
  1908   00661A  6FC1               	movwf	(main@motorR+8)& (0+255),b
  1909   00661C                     
  1910                           ; BSR set to: 3
  1911                           ;main.c: 59:     motorR.PWMperiod=PWMcycle;
  1912   00661C  0E00               	movlw	0
  1913   00661E  6FBD               	movwf	(main@motorR+4)& (0+255),b
  1914   006620  0E63               	movlw	99
  1915   006622  6FBC               	movwf	(main@motorR+3)& (0+255),b
  1916   006624                     
  1917                           ; BSR set to: 3
  1918                           ;main.c: 66:     char clear_val[20];;main.c: 67:     char red_val[20];;main.c: 68:     c
      +                          har green_val[20];;main.c: 69:     char blue_val[20];;main.c: 70:     char *pclear_val;;
      +                          main.c: 71:     char *pred_val;;main.c: 72:     char *pblue_val;;main.c: 73:     char *p
      +                          green_val;;main.c: 74:     pclear_val = &clear_val[0];
  1919   006624  0E28               	movlw	low main@clear_val
  1920   006626  6FA0               	movwf	main@pclear_val& (0+255),b
  1921   006628  0E03               	movlw	high main@clear_val
  1922   00662A  6FA1               	movwf	(main@pclear_val+1)& (0+255),b
  1923   00662C                     
  1924                           ; BSR set to: 3
  1925                           ;main.c: 75:     pred_val = &red_val[0];
  1926   00662C  0E3C               	movlw	low main@red_val
  1927   00662E  6FA2               	movwf	main@pred_val& (0+255),b
  1928   006630  0E03               	movlw	high main@red_val
  1929   006632  6FA3               	movwf	(main@pred_val+1)& (0+255),b
  1930   006634                     
  1931                           ; BSR set to: 3
  1932                           ;main.c: 76:     pgreen_val = &green_val[0];
  1933   006634  0E50               	movlw	low main@green_val
  1934   006636  6FA6               	movwf	main@pgreen_val& (0+255),b
  1935   006638  0E03               	movlw	high main@green_val
  1936   00663A  6FA7               	movwf	(main@pgreen_val+1)& (0+255),b
  1937   00663C                     
  1938                           ; BSR set to: 3
  1939                           ;main.c: 77:     pblue_val = &blue_val[0];
  1940   00663C  0E64               	movlw	low main@blue_val
  1941   00663E  6FA4               	movwf	main@pblue_val& (0+255),b
  1942   006640  0E03               	movlw	high main@blue_val
  1943   006642  6FA5               	movwf	(main@pblue_val+1)& (0+255),b
  1944   006644                     
  1945                           ; BSR set to: 3
  1946                           ;main.c: 83:     unsigned int previously_measured_time, measured_time;;main.c: 84:     i
      +                          nt action_to_do;;main.c: 85:     unsigned int timings[20];;main.c: 86:     int actions[2
      +                          0];;main.c: 87:     int actions_completed = 0;
  1947   006644  0E00               	movlw	0
  1948   006646  6FAF               	movwf	(main@actions_completed+1)& (0+255),b
  1949   006648  0E00               	movlw	0
  1950   00664A  6FAE               	movwf	main@actions_completed& (0+255),b
  1951   00664C                     
  1952                           ; BSR set to: 3
  1953                           ;main.c: 100:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1954   00664C  0EA3               	movlw	163
  1955   00664E  0100               	movlb	0	; () banked
  1956   006650  6FBA               	movwf	(??_main+1)& (0+255),b
  1957   006652  0E57               	movlw	87
  1958   006654  6FB9               	movwf	??_main& (0+255),b
  1959   006656  0E02               	movlw	2
  1960   006658                     u9227:
  1961   006658  2EE8               	decfsz	wreg,f,c
  1962   00665A  D7FE               	bra	u9227
  1963   00665C  2FB9               	decfsz	??_main& (0+255),f,b
  1964   00665E  D7FC               	bra	u9227
  1965   006660  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  1966   006662  D7FA               	bra	u9227
  1967   006664  0000               	nop	
  1968   006666                     l8772:
  1969                           
  1970                           ;main.c: 105:         color_writetoaddr(0x01, 0xFF);
  1971   006666  0EFF               	movlw	255
  1972   006668  6E04               	movwf	color_writetoaddr@value^0,c
  1973   00666A  0E01               	movlw	1
  1974   00666C  ECA1  F040         	call	_color_writetoaddr
  1975   006670                     
  1976                           ;main.c: 106:         color_writetoaddr(0x03, 0xFF);
  1977   006670  0EFF               	movlw	255
  1978   006672  6E04               	movwf	color_writetoaddr@value^0,c
  1979   006674  0E03               	movlw	3
  1980   006676  ECA1  F040         	call	_color_writetoaddr
  1981   00667A                     
  1982                           ;main.c: 107:         _delay((unsigned long)((200)*(64000000/4000.0)));
  1983   00667A  0E11               	movlw	17
  1984   00667C  0100               	movlb	0	; () banked
  1985   00667E  6FBA               	movwf	(??_main+1)& (0+255),b
  1986   006680  0E3C               	movlw	60
  1987   006682  6FB9               	movwf	??_main& (0+255),b
  1988   006684  0ECB               	movlw	203
  1989   006686                     u9237:
  1990   006686  2EE8               	decfsz	wreg,f,c
  1991   006688  D7FE               	bra	u9237
  1992   00668A  2FB9               	decfsz	??_main& (0+255),f,b
  1993   00668C  D7FC               	bra	u9237
  1994   00668E  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  1995   006690  D7FA               	bra	u9237
  1996   006692                     
  1997                           ;main.c: 109:         sprintf(clear_val,"clear = %d \r\n",color_read_Clear());
  1998   006692  0E28               	movlw	low main@clear_val
  1999   006694  0100               	movlb	0	; () banked
  2000   006696  6F9F               	movwf	sprintf@s& (0+255),b
  2001   006698  0E03               	movlw	high main@clear_val
  2002   00669A  6FA0               	movwf	(sprintf@s+1)& (0+255),b
  2003   00669C  0E9D               	movlw	low STR_4
  2004   00669E  6FA1               	movwf	sprintf@fmt& (0+255),b
  2005   0066A0  ECC4  F03E         	call	_color_read_Clear	;wreg free
  2006   0066A4  C006  F0A2         	movff	?_color_read_Clear,?_sprintf+3
  2007   0066A8  C007  F0A3         	movff	?_color_read_Clear+1,?_sprintf+4
  2008   0066AC  ECA0  F03F         	call	_sprintf	;wreg free
  2009   0066B0                     
  2010                           ;main.c: 110:         sendStringSerial4(pclear_val);
  2011   0066B0  C3A0  F003         	movff	main@pclear_val,sendStringSerial4@string
  2012   0066B4  C3A1  F004         	movff	main@pclear_val+1,sendStringSerial4@string+1
  2013   0066B8  EC4D  F040         	call	_sendStringSerial4	;wreg free
  2014   0066BC                     
  2015                           ;main.c: 112:         color_writetoaddr(0x01, 0xD5);
  2016   0066BC  0ED5               	movlw	213
  2017   0066BE  6E04               	movwf	color_writetoaddr@value^0,c
  2018   0066C0  0E01               	movlw	1
  2019   0066C2  ECA1  F040         	call	_color_writetoaddr
  2020   0066C6                     
  2021                           ;main.c: 113:         color_writetoaddr(0x03, 0xAB);
  2022   0066C6  0EAB               	movlw	171
  2023   0066C8  6E04               	movwf	color_writetoaddr@value^0,c
  2024   0066CA  0E03               	movlw	3
  2025   0066CC  ECA1  F040         	call	_color_writetoaddr
  2026   0066D0                     
  2027                           ;main.c: 114:         _delay((unsigned long)((200)*(64000000/4000.0)));
  2028   0066D0  0E11               	movlw	17
  2029   0066D2  0100               	movlb	0	; () banked
  2030   0066D4  6FBA               	movwf	(??_main+1)& (0+255),b
  2031   0066D6  0E3C               	movlw	60
  2032   0066D8  6FB9               	movwf	??_main& (0+255),b
  2033   0066DA  0ECB               	movlw	203
  2034   0066DC                     u9247:
  2035   0066DC  2EE8               	decfsz	wreg,f,c
  2036   0066DE  D7FE               	bra	u9247
  2037   0066E0  2FB9               	decfsz	??_main& (0+255),f,b
  2038   0066E2  D7FC               	bra	u9247
  2039   0066E4  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  2040   0066E6  D7FA               	bra	u9247
  2041   0066E8                     
  2042                           ;main.c: 116:         redm = color_read_Red();
  2043   0066E8  EC74  F03E         	call	_color_read_Red	;wreg free
  2044   0066EC  C006  F3A8         	movff	?_color_read_Red,main@redm
  2045   0066F0  C007  F3A9         	movff	?_color_read_Red+1,main@redm+1
  2046   0066F4                     
  2047                           ;main.c: 117:         greenm = color_read_Green();
  2048   0066F4  EC9C  F03E         	call	_color_read_Green	;wreg free
  2049   0066F8  C006  F3AA         	movff	?_color_read_Green,main@greenm
  2050   0066FC  C007  F3AB         	movff	?_color_read_Green+1,main@greenm+1
  2051   006700                     
  2052                           ;main.c: 118:         bluem = color_read_Blue();
  2053   006700  ECEC  F03E         	call	_color_read_Blue	;wreg free
  2054   006704  C006  F3AC         	movff	?_color_read_Blue,main@bluem
  2055   006708  C007  F3AD         	movff	?_color_read_Blue+1,main@bluem+1
  2056   00670C                     
  2057                           ;main.c: 120:         sprintf(red_val,"red = %d \r\n",redm);
  2058   00670C  0E3C               	movlw	low main@red_val
  2059   00670E  0100               	movlb	0	; () banked
  2060   006710  6F9F               	movwf	sprintf@s& (0+255),b
  2061   006712  0E03               	movlw	high main@red_val
  2062   006714  6FA0               	movwf	(sprintf@s+1)& (0+255),b
  2063   006716  0EC6               	movlw	low STR_5
  2064   006718  6FA1               	movwf	sprintf@fmt& (0+255),b
  2065   00671A  C3A8  F0A2         	movff	main@redm,?_sprintf+3
  2066   00671E  C3A9  F0A3         	movff	main@redm+1,?_sprintf+4
  2067   006722  ECA0  F03F         	call	_sprintf	;wreg free
  2068   006726                     
  2069                           ;main.c: 121:         sendStringSerial4(pred_val);
  2070   006726  C3A2  F003         	movff	main@pred_val,sendStringSerial4@string
  2071   00672A  C3A3  F004         	movff	main@pred_val+1,sendStringSerial4@string+1
  2072   00672E  EC4D  F040         	call	_sendStringSerial4	;wreg free
  2073   006732                     
  2074                           ;main.c: 122:         sprintf(green_val,"green = %d \r\n",greenm);
  2075   006732  0E50               	movlw	low main@green_val
  2076   006734  0100               	movlb	0	; () banked
  2077   006736  6F9F               	movwf	sprintf@s& (0+255),b
  2078   006738  0E03               	movlw	high main@green_val
  2079   00673A  6FA0               	movwf	(sprintf@s+1)& (0+255),b
  2080   00673C  0E8F               	movlw	low STR_6
  2081   00673E  6FA1               	movwf	sprintf@fmt& (0+255),b
  2082   006740  C3AA  F0A2         	movff	main@greenm,?_sprintf+3
  2083   006744  C3AB  F0A3         	movff	main@greenm+1,?_sprintf+4
  2084   006748  ECA0  F03F         	call	_sprintf	;wreg free
  2085   00674C                     
  2086                           ;main.c: 123:         sendStringSerial4(pgreen_val);
  2087   00674C  C3A6  F003         	movff	main@pgreen_val,sendStringSerial4@string
  2088   006750  C3A7  F004         	movff	main@pgreen_val+1,sendStringSerial4@string+1
  2089   006754  EC4D  F040         	call	_sendStringSerial4	;wreg free
  2090   006758                     
  2091                           ;main.c: 124:         sprintf(blue_val,"blue = %d \r\n\r\n",bluem);
  2092   006758  0E64               	movlw	low main@blue_val
  2093   00675A  0100               	movlb	0	; () banked
  2094   00675C  6F9F               	movwf	sprintf@s& (0+255),b
  2095   00675E  0E03               	movlw	high main@blue_val
  2096   006760  6FA0               	movwf	(sprintf@s+1)& (0+255),b
  2097   006762  0E71               	movlw	low STR_7
  2098   006764  6FA1               	movwf	sprintf@fmt& (0+255),b
  2099   006766  C3AC  F0A2         	movff	main@bluem,?_sprintf+3
  2100   00676A  C3AD  F0A3         	movff	main@bluem+1,?_sprintf+4
  2101   00676E  ECA0  F03F         	call	_sprintf	;wreg free
  2102   006772                     
  2103                           ;main.c: 125:         sendStringSerial4(pblue_val);
  2104   006772  C3A4  F003         	movff	main@pblue_val,sendStringSerial4@string
  2105   006776  C3A5  F004         	movff	main@pblue_val+1,sendStringSerial4@string+1
  2106   00677A  EC4D  F040         	call	_sendStringSerial4	;wreg free
  2107   00677E                     
  2108                           ;main.c: 133:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  2109   00677E  0EF4               	movlw	244
  2110   006780  0100               	movlb	0	; () banked
  2111   006782  6FBA               	movwf	(??_main+1)& (0+255),b
  2112   006784  0E82               	movlw	130
  2113   006786  6FB9               	movwf	??_main& (0+255),b
  2114   006788  0E05               	movlw	5
  2115   00678A                     u9257:
  2116   00678A  2EE8               	decfsz	wreg,f,c
  2117   00678C  D7FE               	bra	u9257
  2118   00678E  2FB9               	decfsz	??_main& (0+255),f,b
  2119   006790  D7FC               	bra	u9257
  2120   006792  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  2121   006794  D7FA               	bra	u9257
  2122   006796                     
  2123                           ;main.c: 134:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  2124   006796  0EF4               	movlw	244
  2125   006798  0100               	movlb	0	; () banked
  2126   00679A  6FBA               	movwf	(??_main+1)& (0+255),b
  2127   00679C  0E82               	movlw	130
  2128   00679E  6FB9               	movwf	??_main& (0+255),b
  2129   0067A0  0E05               	movlw	5
  2130   0067A2                     u9267:
  2131   0067A2  2EE8               	decfsz	wreg,f,c
  2132   0067A4  D7FE               	bra	u9267
  2133   0067A6  2FB9               	decfsz	??_main& (0+255),f,b
  2134   0067A8  D7FC               	bra	u9267
  2135   0067AA  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  2136   0067AC  D7FA               	bra	u9267
  2137   0067AE                     
  2138                           ;main.c: 135:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  2139   0067AE  0EF4               	movlw	244
  2140   0067B0  0100               	movlb	0	; () banked
  2141   0067B2  6FBA               	movwf	(??_main+1)& (0+255),b
  2142   0067B4  0E82               	movlw	130
  2143   0067B6  6FB9               	movwf	??_main& (0+255),b
  2144   0067B8  0E05               	movlw	5
  2145   0067BA                     u9277:
  2146   0067BA  2EE8               	decfsz	wreg,f,c
  2147   0067BC  D7FE               	bra	u9277
  2148   0067BE  2FB9               	decfsz	??_main& (0+255),f,b
  2149   0067C0  D7FC               	bra	u9277
  2150   0067C2  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  2151   0067C4  D7FA               	bra	u9277
  2152   0067C6  EF33  F033         	goto	l8772
  2153   0067CA  EF12  F000         	goto	start
  2154   0067CE                     __end_of_main:
  2155                           	callstack 0
  2156                           
  2157 ;; *************** function _turn_right_90 *****************
  2158 ;; Defined at:
  2159 ;;		line 143 in file "dc_motor.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2162 ;;		 -> main@motorL(9), 
  2163 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2164 ;;		 -> main@motorR(9), 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2179 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2180 ;;Total ram usage:        6 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 5
  2183 ;; This function calls:
  2184 ;;		_setMotorPWM
  2185 ;;		_stop
  2186 ;; This function is called by:
  2187 ;;		_main
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text1
  2192   0073E8                     __ptext1:
  2193                           	callstack 0
  2194   0073E8                     _turn_right_90:
  2195                           	callstack 25
  2196   0073E8                     
  2197                           ;dc_motor.c: 144:     mL->direction = 0;
  2198   0073E8  EE20 F001          	lfsr	2,1
  2199   0073EC  5019               	movf	turn_right_90@mL^0,w,c
  2200   0073EE  26D9               	addwf	fsr2l,f,c
  2201   0073F0  501A               	movf	(turn_right_90@mL+1)^0,w,c
  2202   0073F2  22DA               	addwfc	fsr2h,f,c
  2203   0073F4  6ADF               	clrf	indf2,c
  2204                           
  2205                           ;dc_motor.c: 145:     mR->direction = 1;
  2206   0073F6  EE20 F001          	lfsr	2,1
  2207   0073FA  501B               	movf	turn_right_90@mR^0,w,c
  2208   0073FC  26D9               	addwf	fsr2l,f,c
  2209   0073FE  501C               	movf	(turn_right_90@mR+1)^0,w,c
  2210   007400  22DA               	addwfc	fsr2h,f,c
  2211   007402  0E01               	movlw	1
  2212   007404  6EDF               	movwf	indf2,c
  2213                           
  2214                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2215   007406  EF3B  F03A         	goto	l226
  2216   00740A                     l6426:
  2217                           
  2218                           ;dc_motor.c: 148:         if ((mL->power) < 70) (mL->power) += 1;
  2219   00740A  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2220   00740E  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2221   007412  0E46               	movlw	70
  2222   007414  60DF               	cpfslt	indf2,c
  2223   007416  EF0F  F03A         	goto	u6411
  2224   00741A  EF11  F03A         	goto	u6410
  2225   00741E                     u6411:
  2226   00741E  EF16  F03A         	goto	l6430
  2227   007422                     u6410:
  2228   007422  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2229   007426  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2230   00742A  2ADF               	incf	indf2,f,c
  2231   00742C                     l6430:
  2232                           
  2233                           ;dc_motor.c: 149:         if ((mR->power) < 70) (mR->power) += 1;
  2234   00742C  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2235   007430  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2236   007434  0E46               	movlw	70
  2237   007436  60DF               	cpfslt	indf2,c
  2238   007438  EF20  F03A         	goto	u6421
  2239   00743C  EF22  F03A         	goto	u6420
  2240   007440                     u6421:
  2241   007440  EF27  F03A         	goto	l6434
  2242   007444                     u6420:
  2243   007444  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2244   007448  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2245   00744C  2ADF               	incf	indf2,f,c
  2246   00744E                     l6434:
  2247                           
  2248                           ;dc_motor.c: 151:         setMotorPWM(mL);
  2249   00744E  C019  F00F         	movff	turn_right_90@mL,setMotorPWM@m
  2250   007452  C01A  F010         	movff	turn_right_90@mL+1,setMotorPWM@m+1
  2251   007456  ECCA  F035         	call	_setMotorPWM	;wreg free
  2252   00745A                     
  2253                           ;dc_motor.c: 152:         setMotorPWM(mR);
  2254   00745A  C01B  F00F         	movff	turn_right_90@mR,setMotorPWM@m
  2255   00745E  C01C  F010         	movff	turn_right_90@mR+1,setMotorPWM@m+1
  2256   007462  ECCA  F035         	call	_setMotorPWM	;wreg free
  2257   007466                     
  2258                           ;dc_motor.c: 153:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2259   007466  0E15               	movlw	21
  2260   007468  6E1D               	movwf	??_turn_right_90^0,c
  2261   00746A  0EC6               	movlw	198
  2262   00746C                     u9287:
  2263   00746C  2EE8               	decfsz	wreg,f,c
  2264   00746E  D7FE               	bra	u9287
  2265   007470  2E1D               	decfsz	??_turn_right_90^0,f,c
  2266   007472  D7FC               	bra	u9287
  2267   007474  D000               	nop2	
  2268   007476                     l226:
  2269                           
  2270                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2271   007476  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2272   00747A  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2273   00747E  0E45               	movlw	69
  2274   007480  64DF               	cpfsgt	indf2,c
  2275   007482  EF45  F03A         	goto	u6431
  2276   007486  EF47  F03A         	goto	u6430
  2277   00748A                     u6431:
  2278   00748A  EF05  F03A         	goto	l6426
  2279   00748E                     u6430:
  2280   00748E  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2281   007492  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2282   007496  0E45               	movlw	69
  2283   007498  64DF               	cpfsgt	indf2,c
  2284   00749A  EF51  F03A         	goto	u6441
  2285   00749E  EF53  F03A         	goto	u6440
  2286   0074A2                     u6441:
  2287   0074A2  EF05  F03A         	goto	l6426
  2288   0074A6                     u6440:
  2289   0074A6                     
  2290                           ;dc_motor.c: 155:     _delay((unsigned long)((440)*(64000000/4000.0)));
  2291   0074A6  0E24               	movlw	36
  2292   0074A8  6E1E               	movwf	(??_turn_right_90+1)^0,c
  2293   0074AA  0EB7               	movlw	183
  2294   0074AC  6E1D               	movwf	??_turn_right_90^0,c
  2295   0074AE  0EC2               	movlw	194
  2296   0074B0                     u9297:
  2297   0074B0  2EE8               	decfsz	wreg,f,c
  2298   0074B2  D7FE               	bra	u9297
  2299   0074B4  2E1D               	decfsz	??_turn_right_90^0,f,c
  2300   0074B6  D7FC               	bra	u9297
  2301   0074B8  2E1E               	decfsz	(??_turn_right_90+1)^0,f,c
  2302   0074BA  D7FA               	bra	u9297
  2303   0074BC                     
  2304                           ;dc_motor.c: 156:     stop(mL, mR);
  2305   0074BC  C019  F015         	movff	turn_right_90@mL,stop@mL
  2306   0074C0  C01A  F016         	movff	turn_right_90@mL+1,stop@mL+1
  2307   0074C4  C01B  F017         	movff	turn_right_90@mR,stop@mR
  2308   0074C8  C01C  F018         	movff	turn_right_90@mR+1,stop@mR+1
  2309   0074CC  ECF9  F03C         	call	_stop	;wreg free
  2310   0074D0  0012               	return		;funcret
  2311   0074D2                     __end_of_turn_right_90:
  2312                           	callstack 0
  2313                           
  2314 ;; *************** function _turn_right_135 *****************
  2315 ;; Defined at:
  2316 ;;		line 177 in file "dc_motor.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2319 ;;		 -> main@motorL(9), 
  2320 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2321 ;;		 -> main@motorR(9), 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2336 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2337 ;;Total ram usage:        6 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; Hardware stack levels required when called: 5
  2340 ;; This function calls:
  2341 ;;		_setMotorPWM
  2342 ;;		_stop
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text2
  2349   007210                     __ptext2:
  2350                           	callstack 0
  2351   007210                     _turn_right_135:
  2352                           	callstack 25
  2353   007210                     
  2354                           ;dc_motor.c: 178:     mL->direction = 0;
  2355   007210  EE20 F001          	lfsr	2,1
  2356   007214  5019               	movf	turn_right_135@mL^0,w,c
  2357   007216  26D9               	addwf	fsr2l,f,c
  2358   007218  501A               	movf	(turn_right_135@mL+1)^0,w,c
  2359   00721A  22DA               	addwfc	fsr2h,f,c
  2360   00721C  6ADF               	clrf	indf2,c
  2361                           
  2362                           ;dc_motor.c: 179:     mR->direction = 1;
  2363   00721E  EE20 F001          	lfsr	2,1
  2364   007222  501B               	movf	turn_right_135@mR^0,w,c
  2365   007224  26D9               	addwf	fsr2l,f,c
  2366   007226  501C               	movf	(turn_right_135@mR+1)^0,w,c
  2367   007228  22DA               	addwfc	fsr2h,f,c
  2368   00722A  0E01               	movlw	1
  2369   00722C  6EDF               	movwf	indf2,c
  2370                           
  2371                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2372   00722E  EF4F  F039         	goto	l242
  2373   007232                     l6470:
  2374                           
  2375                           ;dc_motor.c: 182:         if ((mL->power) < 70) (mL->power) += 1;
  2376   007232  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2377   007236  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2378   00723A  0E46               	movlw	70
  2379   00723C  60DF               	cpfslt	indf2,c
  2380   00723E  EF23  F039         	goto	u6491
  2381   007242  EF25  F039         	goto	u6490
  2382   007246                     u6491:
  2383   007246  EF2A  F039         	goto	l6474
  2384   00724A                     u6490:
  2385   00724A  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2386   00724E  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2387   007252  2ADF               	incf	indf2,f,c
  2388   007254                     l6474:
  2389                           
  2390                           ;dc_motor.c: 183:         if ((mR->power) < 70) (mR->power) += 1;
  2391   007254  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2392   007258  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2393   00725C  0E46               	movlw	70
  2394   00725E  60DF               	cpfslt	indf2,c
  2395   007260  EF34  F039         	goto	u6501
  2396   007264  EF36  F039         	goto	u6500
  2397   007268                     u6501:
  2398   007268  EF3B  F039         	goto	l6478
  2399   00726C                     u6500:
  2400   00726C  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2401   007270  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2402   007274  2ADF               	incf	indf2,f,c
  2403   007276                     l6478:
  2404                           
  2405                           ;dc_motor.c: 185:         setMotorPWM(mL);
  2406   007276  C019  F00F         	movff	turn_right_135@mL,setMotorPWM@m
  2407   00727A  C01A  F010         	movff	turn_right_135@mL+1,setMotorPWM@m+1
  2408   00727E  ECCA  F035         	call	_setMotorPWM	;wreg free
  2409   007282                     
  2410                           ;dc_motor.c: 186:         setMotorPWM(mR);
  2411   007282  C01B  F00F         	movff	turn_right_135@mR,setMotorPWM@m
  2412   007286  C01C  F010         	movff	turn_right_135@mR+1,setMotorPWM@m+1
  2413   00728A  ECCA  F035         	call	_setMotorPWM	;wreg free
  2414   00728E                     
  2415                           ;dc_motor.c: 187:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2416   00728E  0E15               	movlw	21
  2417   007290  6E1D               	movwf	??_turn_right_135^0,c
  2418   007292  0EC6               	movlw	198
  2419   007294                     u9307:
  2420   007294  2EE8               	decfsz	wreg,f,c
  2421   007296  D7FE               	bra	u9307
  2422   007298  2E1D               	decfsz	??_turn_right_135^0,f,c
  2423   00729A  D7FC               	bra	u9307
  2424   00729C  D000               	nop2	
  2425   00729E                     l242:
  2426                           
  2427                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2428   00729E  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2429   0072A2  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2430   0072A6  0E45               	movlw	69
  2431   0072A8  64DF               	cpfsgt	indf2,c
  2432   0072AA  EF59  F039         	goto	u6511
  2433   0072AE  EF5B  F039         	goto	u6510
  2434   0072B2                     u6511:
  2435   0072B2  EF19  F039         	goto	l6470
  2436   0072B6                     u6510:
  2437   0072B6  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2438   0072BA  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2439   0072BE  0E45               	movlw	69
  2440   0072C0  64DF               	cpfsgt	indf2,c
  2441   0072C2  EF65  F039         	goto	u6521
  2442   0072C6  EF67  F039         	goto	u6520
  2443   0072CA                     u6521:
  2444   0072CA  EF19  F039         	goto	l6470
  2445   0072CE                     u6520:
  2446   0072CE                     
  2447                           ;dc_motor.c: 189:     _delay((unsigned long)((700)*(64000000/4000.0)));
  2448   0072CE  0E39               	movlw	57
  2449   0072D0  6E1E               	movwf	(??_turn_right_135+1)^0,c
  2450   0072D2  0ED2               	movlw	210
  2451   0072D4  6E1D               	movwf	??_turn_right_135^0,c
  2452   0072D6  0E4C               	movlw	76
  2453   0072D8                     u9317:
  2454   0072D8  2EE8               	decfsz	wreg,f,c
  2455   0072DA  D7FE               	bra	u9317
  2456   0072DC  2E1D               	decfsz	??_turn_right_135^0,f,c
  2457   0072DE  D7FC               	bra	u9317
  2458   0072E0  2E1E               	decfsz	(??_turn_right_135+1)^0,f,c
  2459   0072E2  D7FA               	bra	u9317
  2460   0072E4  D000               	nop2	
  2461   0072E6                     
  2462                           ;dc_motor.c: 190:     stop(mL, mR);
  2463   0072E6  C019  F015         	movff	turn_right_135@mL,stop@mL
  2464   0072EA  C01A  F016         	movff	turn_right_135@mL+1,stop@mL+1
  2465   0072EE  C01B  F017         	movff	turn_right_135@mR,stop@mR
  2466   0072F2  C01C  F018         	movff	turn_right_135@mR+1,stop@mR+1
  2467   0072F6  ECF9  F03C         	call	_stop	;wreg free
  2468   0072FA  0012               	return		;funcret
  2469   0072FC                     __end_of_turn_right_135:
  2470                           	callstack 0
  2471                           
  2472 ;; *************** function _turn_left_90 *****************
  2473 ;; Defined at:
  2474 ;;		line 126 in file "dc_motor.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2477 ;;		 -> main@motorL(9), 
  2478 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2479 ;;		 -> main@motorR(9), 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2491 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2493 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2494 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2495 ;;Total ram usage:        6 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 5
  2498 ;; This function calls:
  2499 ;;		_setMotorPWM
  2500 ;;		_stop
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text3
  2507   0074D2                     __ptext3:
  2508                           	callstack 0
  2509   0074D2                     _turn_left_90:
  2510                           	callstack 25
  2511   0074D2                     
  2512                           ;dc_motor.c: 127:     mL->direction = 1;
  2513   0074D2  EE20 F001          	lfsr	2,1
  2514   0074D6  5019               	movf	turn_left_90@mL^0,w,c
  2515   0074D8  26D9               	addwf	fsr2l,f,c
  2516   0074DA  501A               	movf	(turn_left_90@mL+1)^0,w,c
  2517   0074DC  22DA               	addwfc	fsr2h,f,c
  2518   0074DE  0E01               	movlw	1
  2519   0074E0  6EDF               	movwf	indf2,c
  2520                           
  2521                           ;dc_motor.c: 128:     mR->direction = 0;
  2522   0074E2  EE20 F001          	lfsr	2,1
  2523   0074E6  501B               	movf	turn_left_90@mR^0,w,c
  2524   0074E8  26D9               	addwf	fsr2l,f,c
  2525   0074EA  501C               	movf	(turn_left_90@mR+1)^0,w,c
  2526   0074EC  22DA               	addwfc	fsr2h,f,c
  2527   0074EE  6ADF               	clrf	indf2,c
  2528                           
  2529                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  2530   0074F0  EFB0  F03A         	goto	l218
  2531   0074F4                     l6404:
  2532                           
  2533                           ;dc_motor.c: 131:         if ((mL->power) < 70) (mL->power) += 1;
  2534   0074F4  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2535   0074F8  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2536   0074FC  0E46               	movlw	70
  2537   0074FE  60DF               	cpfslt	indf2,c
  2538   007500  EF84  F03A         	goto	u6371
  2539   007504  EF86  F03A         	goto	u6370
  2540   007508                     u6371:
  2541   007508  EF8B  F03A         	goto	l6408
  2542   00750C                     u6370:
  2543   00750C  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2544   007510  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2545   007514  2ADF               	incf	indf2,f,c
  2546   007516                     l6408:
  2547                           
  2548                           ;dc_motor.c: 132:         if ((mR->power) < 70) (mR->power) += 1;
  2549   007516  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2550   00751A  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2551   00751E  0E46               	movlw	70
  2552   007520  60DF               	cpfslt	indf2,c
  2553   007522  EF95  F03A         	goto	u6381
  2554   007526  EF97  F03A         	goto	u6380
  2555   00752A                     u6381:
  2556   00752A  EF9C  F03A         	goto	l6412
  2557   00752E                     u6380:
  2558   00752E  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2559   007532  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2560   007536  2ADF               	incf	indf2,f,c
  2561   007538                     l6412:
  2562                           
  2563                           ;dc_motor.c: 134:         setMotorPWM(mL);
  2564   007538  C019  F00F         	movff	turn_left_90@mL,setMotorPWM@m
  2565   00753C  C01A  F010         	movff	turn_left_90@mL+1,setMotorPWM@m+1
  2566   007540  ECCA  F035         	call	_setMotorPWM	;wreg free
  2567   007544                     
  2568                           ;dc_motor.c: 135:         setMotorPWM(mR);
  2569   007544  C01B  F00F         	movff	turn_left_90@mR,setMotorPWM@m
  2570   007548  C01C  F010         	movff	turn_left_90@mR+1,setMotorPWM@m+1
  2571   00754C  ECCA  F035         	call	_setMotorPWM	;wreg free
  2572   007550                     
  2573                           ;dc_motor.c: 136:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2574   007550  0E15               	movlw	21
  2575   007552  6E1D               	movwf	??_turn_left_90^0,c
  2576   007554  0EC6               	movlw	198
  2577   007556                     u9327:
  2578   007556  2EE8               	decfsz	wreg,f,c
  2579   007558  D7FE               	bra	u9327
  2580   00755A  2E1D               	decfsz	??_turn_left_90^0,f,c
  2581   00755C  D7FC               	bra	u9327
  2582   00755E  D000               	nop2	
  2583   007560                     l218:
  2584                           
  2585                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  2586   007560  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2587   007564  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2588   007568  0E45               	movlw	69
  2589   00756A  64DF               	cpfsgt	indf2,c
  2590   00756C  EFBA  F03A         	goto	u6391
  2591   007570  EFBC  F03A         	goto	u6390
  2592   007574                     u6391:
  2593   007574  EF7A  F03A         	goto	l6404
  2594   007578                     u6390:
  2595   007578  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2596   00757C  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2597   007580  0E45               	movlw	69
  2598   007582  64DF               	cpfsgt	indf2,c
  2599   007584  EFC6  F03A         	goto	u6401
  2600   007588  EFC8  F03A         	goto	u6400
  2601   00758C                     u6401:
  2602   00758C  EF7A  F03A         	goto	l6404
  2603   007590                     u6400:
  2604   007590                     
  2605                           ;dc_motor.c: 138:     _delay((unsigned long)((440)*(64000000/4000.0)));
  2606   007590  0E24               	movlw	36
  2607   007592  6E1E               	movwf	(??_turn_left_90+1)^0,c
  2608   007594  0EB7               	movlw	183
  2609   007596  6E1D               	movwf	??_turn_left_90^0,c
  2610   007598  0EC2               	movlw	194
  2611   00759A                     u9337:
  2612   00759A  2EE8               	decfsz	wreg,f,c
  2613   00759C  D7FE               	bra	u9337
  2614   00759E  2E1D               	decfsz	??_turn_left_90^0,f,c
  2615   0075A0  D7FC               	bra	u9337
  2616   0075A2  2E1E               	decfsz	(??_turn_left_90+1)^0,f,c
  2617   0075A4  D7FA               	bra	u9337
  2618   0075A6                     
  2619                           ;dc_motor.c: 139:     stop(mL, mR);
  2620   0075A6  C019  F015         	movff	turn_left_90@mL,stop@mL
  2621   0075AA  C01A  F016         	movff	turn_left_90@mL+1,stop@mL+1
  2622   0075AE  C01B  F017         	movff	turn_left_90@mR,stop@mR
  2623   0075B2  C01C  F018         	movff	turn_left_90@mR+1,stop@mR+1
  2624   0075B6  ECF9  F03C         	call	_stop	;wreg free
  2625   0075BA  0012               	return		;funcret
  2626   0075BC                     __end_of_turn_left_90:
  2627                           	callstack 0
  2628                           
  2629 ;; *************** function _turn_left_135 *****************
  2630 ;; Defined at:
  2631 ;;		line 160 in file "dc_motor.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2634 ;;		 -> main@motorL(9), 
  2635 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2636 ;;		 -> main@motorR(9), 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2651 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2652 ;;Total ram usage:        6 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; Hardware stack levels required when called: 5
  2655 ;; This function calls:
  2656 ;;		_setMotorPWM
  2657 ;;		_stop
  2658 ;; This function is called by:
  2659 ;;		_main
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text4
  2664   0072FC                     __ptext4:
  2665                           	callstack 0
  2666   0072FC                     _turn_left_135:
  2667                           	callstack 25
  2668   0072FC                     
  2669                           ;dc_motor.c: 161:     mL->direction = 1;
  2670   0072FC  EE20 F001          	lfsr	2,1
  2671   007300  5019               	movf	turn_left_135@mL^0,w,c
  2672   007302  26D9               	addwf	fsr2l,f,c
  2673   007304  501A               	movf	(turn_left_135@mL+1)^0,w,c
  2674   007306  22DA               	addwfc	fsr2h,f,c
  2675   007308  0E01               	movlw	1
  2676   00730A  6EDF               	movwf	indf2,c
  2677                           
  2678                           ;dc_motor.c: 162:     mR->direction = 0;
  2679   00730C  EE20 F001          	lfsr	2,1
  2680   007310  501B               	movf	turn_left_135@mR^0,w,c
  2681   007312  26D9               	addwf	fsr2l,f,c
  2682   007314  501C               	movf	(turn_left_135@mR+1)^0,w,c
  2683   007316  22DA               	addwfc	fsr2h,f,c
  2684   007318  6ADF               	clrf	indf2,c
  2685                           
  2686                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  2687   00731A  EFC5  F039         	goto	l234
  2688   00731E                     l6448:
  2689                           
  2690                           ;dc_motor.c: 165:         if ((mL->power) < 70) (mL->power) += 1;
  2691   00731E  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  2692   007322  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  2693   007326  0E46               	movlw	70
  2694   007328  60DF               	cpfslt	indf2,c
  2695   00732A  EF99  F039         	goto	u6451
  2696   00732E  EF9B  F039         	goto	u6450
  2697   007332                     u6451:
  2698   007332  EFA0  F039         	goto	l6452
  2699   007336                     u6450:
  2700   007336  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  2701   00733A  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  2702   00733E  2ADF               	incf	indf2,f,c
  2703   007340                     l6452:
  2704                           
  2705                           ;dc_motor.c: 166:         if ((mR->power) < 70) (mR->power) += 1;
  2706   007340  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  2707   007344  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  2708   007348  0E46               	movlw	70
  2709   00734A  60DF               	cpfslt	indf2,c
  2710   00734C  EFAA  F039         	goto	u6461
  2711   007350  EFAC  F039         	goto	u6460
  2712   007354                     u6461:
  2713   007354  EFB1  F039         	goto	l6456
  2714   007358                     u6460:
  2715   007358  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  2716   00735C  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  2717   007360  2ADF               	incf	indf2,f,c
  2718   007362                     l6456:
  2719                           
  2720                           ;dc_motor.c: 168:         setMotorPWM(mL);
  2721   007362  C019  F00F         	movff	turn_left_135@mL,setMotorPWM@m
  2722   007366  C01A  F010         	movff	turn_left_135@mL+1,setMotorPWM@m+1
  2723   00736A  ECCA  F035         	call	_setMotorPWM	;wreg free
  2724   00736E                     
  2725                           ;dc_motor.c: 169:         setMotorPWM(mR);
  2726   00736E  C01B  F00F         	movff	turn_left_135@mR,setMotorPWM@m
  2727   007372  C01C  F010         	movff	turn_left_135@mR+1,setMotorPWM@m+1
  2728   007376  ECCA  F035         	call	_setMotorPWM	;wreg free
  2729   00737A                     
  2730                           ;dc_motor.c: 170:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2731   00737A  0E15               	movlw	21
  2732   00737C  6E1D               	movwf	??_turn_left_135^0,c
  2733   00737E  0EC6               	movlw	198
  2734   007380                     u9347:
  2735   007380  2EE8               	decfsz	wreg,f,c
  2736   007382  D7FE               	bra	u9347
  2737   007384  2E1D               	decfsz	??_turn_left_135^0,f,c
  2738   007386  D7FC               	bra	u9347
  2739   007388  D000               	nop2	
  2740   00738A                     l234:
  2741                           
  2742                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  2743   00738A  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  2744   00738E  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  2745   007392  0E45               	movlw	69
  2746   007394  64DF               	cpfsgt	indf2,c
  2747   007396  EFCF  F039         	goto	u6471
  2748   00739A  EFD1  F039         	goto	u6470
  2749   00739E                     u6471:
  2750   00739E  EF8F  F039         	goto	l6448
  2751   0073A2                     u6470:
  2752   0073A2  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  2753   0073A6  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  2754   0073AA  0E45               	movlw	69
  2755   0073AC  64DF               	cpfsgt	indf2,c
  2756   0073AE  EFDB  F039         	goto	u6481
  2757   0073B2  EFDD  F039         	goto	u6480
  2758   0073B6                     u6481:
  2759   0073B6  EF8F  F039         	goto	l6448
  2760   0073BA                     u6480:
  2761   0073BA                     
  2762                           ;dc_motor.c: 172:     _delay((unsigned long)((700)*(64000000/4000.0)));
  2763   0073BA  0E39               	movlw	57
  2764   0073BC  6E1E               	movwf	(??_turn_left_135+1)^0,c
  2765   0073BE  0ED2               	movlw	210
  2766   0073C0  6E1D               	movwf	??_turn_left_135^0,c
  2767   0073C2  0E4C               	movlw	76
  2768   0073C4                     u9357:
  2769   0073C4  2EE8               	decfsz	wreg,f,c
  2770   0073C6  D7FE               	bra	u9357
  2771   0073C8  2E1D               	decfsz	??_turn_left_135^0,f,c
  2772   0073CA  D7FC               	bra	u9357
  2773   0073CC  2E1E               	decfsz	(??_turn_left_135+1)^0,f,c
  2774   0073CE  D7FA               	bra	u9357
  2775   0073D0  D000               	nop2	
  2776   0073D2                     
  2777                           ;dc_motor.c: 173:     stop(mL, mR);
  2778   0073D2  C019  F015         	movff	turn_left_135@mL,stop@mL
  2779   0073D6  C01A  F016         	movff	turn_left_135@mL+1,stop@mL+1
  2780   0073DA  C01B  F017         	movff	turn_left_135@mR,stop@mR
  2781   0073DE  C01C  F018         	movff	turn_left_135@mR+1,stop@mR+1
  2782   0073E2  ECF9  F03C         	call	_stop	;wreg free
  2783   0073E6  0012               	return		;funcret
  2784   0073E8                     __end_of_turn_left_135:
  2785                           	callstack 0
  2786                           
  2787 ;; *************** function _reverse_one_square *****************
  2788 ;; Defined at:
  2789 ;;		line 210 in file "dc_motor.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2792 ;;		 -> main@motorL(9), 
  2793 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2794 ;;		 -> main@motorR(9), 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;Total ram usage:        6 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; Hardware stack levels required when called: 5
  2813 ;; This function calls:
  2814 ;;		_setMotorPWM
  2815 ;;		_stop
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text5
  2822   007010                     __ptext5:
  2823                           	callstack 0
  2824   007010                     _reverse_one_square:
  2825                           	callstack 25
  2826   007010                     
  2827                           ;dc_motor.c: 211:     mL->direction = 0;
  2828   007010  EE20 F001          	lfsr	2,1
  2829   007014  5019               	movf	reverse_one_square@mL^0,w,c
  2830   007016  26D9               	addwf	fsr2l,f,c
  2831   007018  501A               	movf	(reverse_one_square@mL+1)^0,w,c
  2832   00701A  22DA               	addwfc	fsr2h,f,c
  2833   00701C  6ADF               	clrf	indf2,c
  2834                           
  2835                           ;dc_motor.c: 212:     mR->direction = 0;
  2836   00701E  EE20 F001          	lfsr	2,1
  2837   007022  501B               	movf	reverse_one_square@mR^0,w,c
  2838   007024  26D9               	addwf	fsr2l,f,c
  2839   007026  501C               	movf	(reverse_one_square@mR+1)^0,w,c
  2840   007028  22DA               	addwfc	fsr2h,f,c
  2841   00702A  6ADF               	clrf	indf2,c
  2842                           
  2843                           ;dc_motor.c: 214:     while ((mL->power) < 70 || (mR->power) < 70){
  2844   00702C  EF4E  F038         	goto	l258
  2845   007030                     l6516:
  2846                           
  2847                           ;dc_motor.c: 215:         if ((mL->power) < 70) (mL->power) += 1;
  2848   007030  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  2849   007034  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  2850   007038  0E46               	movlw	70
  2851   00703A  60DF               	cpfslt	indf2,c
  2852   00703C  EF22  F038         	goto	u6571
  2853   007040  EF24  F038         	goto	u6570
  2854   007044                     u6571:
  2855   007044  EF29  F038         	goto	l6520
  2856   007048                     u6570:
  2857   007048  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  2858   00704C  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  2859   007050  2ADF               	incf	indf2,f,c
  2860   007052                     l6520:
  2861                           
  2862                           ;dc_motor.c: 216:         if ((mR->power) < 70) (mR->power) += 1;
  2863   007052  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  2864   007056  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  2865   00705A  0E46               	movlw	70
  2866   00705C  60DF               	cpfslt	indf2,c
  2867   00705E  EF33  F038         	goto	u6581
  2868   007062  EF35  F038         	goto	u6580
  2869   007066                     u6581:
  2870   007066  EF3A  F038         	goto	l6524
  2871   00706A                     u6580:
  2872   00706A  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  2873   00706E  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  2874   007072  2ADF               	incf	indf2,f,c
  2875   007074                     l6524:
  2876                           
  2877                           ;dc_motor.c: 218:         setMotorPWM(mL);
  2878   007074  C019  F00F         	movff	reverse_one_square@mL,setMotorPWM@m
  2879   007078  C01A  F010         	movff	reverse_one_square@mL+1,setMotorPWM@m+1
  2880   00707C  ECCA  F035         	call	_setMotorPWM	;wreg free
  2881   007080                     
  2882                           ;dc_motor.c: 219:         setMotorPWM(mR);
  2883   007080  C01B  F00F         	movff	reverse_one_square@mR,setMotorPWM@m
  2884   007084  C01C  F010         	movff	reverse_one_square@mR+1,setMotorPWM@m+1
  2885   007088  ECCA  F035         	call	_setMotorPWM	;wreg free
  2886   00708C                     
  2887                           ;dc_motor.c: 220:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2888   00708C  0E15               	movlw	21
  2889   00708E  6E1D               	movwf	??_reverse_one_square^0,c
  2890   007090  0EC6               	movlw	198
  2891   007092                     u9367:
  2892   007092  2EE8               	decfsz	wreg,f,c
  2893   007094  D7FE               	bra	u9367
  2894   007096  2E1D               	decfsz	??_reverse_one_square^0,f,c
  2895   007098  D7FC               	bra	u9367
  2896   00709A  D000               	nop2	
  2897   00709C                     l258:
  2898                           
  2899                           ;dc_motor.c: 214:     while ((mL->power) < 70 || (mR->power) < 70){
  2900   00709C  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  2901   0070A0  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  2902   0070A4  0E45               	movlw	69
  2903   0070A6  64DF               	cpfsgt	indf2,c
  2904   0070A8  EF58  F038         	goto	u6591
  2905   0070AC  EF5A  F038         	goto	u6590
  2906   0070B0                     u6591:
  2907   0070B0  EF18  F038         	goto	l6516
  2908   0070B4                     u6590:
  2909   0070B4  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  2910   0070B8  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  2911   0070BC  0E45               	movlw	69
  2912   0070BE  64DF               	cpfsgt	indf2,c
  2913   0070C0  EF64  F038         	goto	u6601
  2914   0070C4  EF66  F038         	goto	u6600
  2915   0070C8                     u6601:
  2916   0070C8  EF18  F038         	goto	l6516
  2917   0070CC                     u6600:
  2918   0070CC                     
  2919                           ;dc_motor.c: 222:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2920   0070CC  0E29               	movlw	41
  2921   0070CE  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  2922   0070D0  0E96               	movlw	150
  2923   0070D2  6E1D               	movwf	??_reverse_one_square^0,c
  2924   0070D4  0E7F               	movlw	127
  2925   0070D6                     u9377:
  2926   0070D6  2EE8               	decfsz	wreg,f,c
  2927   0070D8  D7FE               	bra	u9377
  2928   0070DA  2E1D               	decfsz	??_reverse_one_square^0,f,c
  2929   0070DC  D7FC               	bra	u9377
  2930   0070DE  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  2931   0070E0  D7FA               	bra	u9377
  2932   0070E2  0000               	nop	
  2933   0070E4                     
  2934                           ;dc_motor.c: 223:     stop(mL, mR);
  2935   0070E4  C019  F015         	movff	reverse_one_square@mL,stop@mL
  2936   0070E8  C01A  F016         	movff	reverse_one_square@mL+1,stop@mL+1
  2937   0070EC  C01B  F017         	movff	reverse_one_square@mR,stop@mR
  2938   0070F0  C01C  F018         	movff	reverse_one_square@mR+1,stop@mR+1
  2939   0070F4  ECF9  F03C         	call	_stop	;wreg free
  2940   0070F8                     
  2941                           ;dc_motor.c: 224:     _delay((unsigned long)((250)*(64000000/4000.0)));
  2942   0070F8  0E15               	movlw	21
  2943   0070FA  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  2944   0070FC  0E4B               	movlw	75
  2945   0070FE  6E1D               	movwf	??_reverse_one_square^0,c
  2946   007100  0EBE               	movlw	190
  2947   007102                     u9387:
  2948   007102  2EE8               	decfsz	wreg,f,c
  2949   007104  D7FE               	bra	u9387
  2950   007106  2E1D               	decfsz	??_reverse_one_square^0,f,c
  2951   007108  D7FC               	bra	u9387
  2952   00710A  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  2953   00710C  D7FA               	bra	u9387
  2954   00710E  D000               	nop2	
  2955   007110  0012               	return		;funcret
  2956   007112                     __end_of_reverse_one_square:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _reverse_after_read *****************
  2960 ;; Defined at:
  2961 ;;		line 193 in file "dc_motor.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2964 ;;		 -> main@motorL(9), 
  2965 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2966 ;;		 -> main@motorR(9), 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2978 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2980 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2981 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2982 ;;Total ram usage:        6 bytes
  2983 ;; Hardware stack levels used: 1
  2984 ;; Hardware stack levels required when called: 5
  2985 ;; This function calls:
  2986 ;;		_setMotorPWM
  2987 ;;		_stop
  2988 ;; This function is called by:
  2989 ;;		_main
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text6
  2994   006D00                     __ptext6:
  2995                           	callstack 0
  2996   006D00                     _reverse_after_read:
  2997                           	callstack 25
  2998   006D00                     
  2999                           ;dc_motor.c: 194:     mL->direction = 1;
  3000   006D00  EE20 F001          	lfsr	2,1
  3001   006D04  5019               	movf	reverse_after_read@mL^0,w,c
  3002   006D06  26D9               	addwf	fsr2l,f,c
  3003   006D08  501A               	movf	(reverse_after_read@mL+1)^0,w,c
  3004   006D0A  22DA               	addwfc	fsr2h,f,c
  3005   006D0C  0E01               	movlw	1
  3006   006D0E  6EDF               	movwf	indf2,c
  3007                           
  3008                           ;dc_motor.c: 195:     mR->direction = 1;
  3009   006D10  EE20 F001          	lfsr	2,1
  3010   006D14  501B               	movf	reverse_after_read@mR^0,w,c
  3011   006D16  26D9               	addwf	fsr2l,f,c
  3012   006D18  501C               	movf	(reverse_after_read@mR+1)^0,w,c
  3013   006D1A  22DA               	addwfc	fsr2h,f,c
  3014   006D1C  0E01               	movlw	1
  3015   006D1E  6EDF               	movwf	indf2,c
  3016                           
  3017                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  3018   006D20  EFC8  F036         	goto	l250
  3019   006D24                     l6492:
  3020                           
  3021                           ;dc_motor.c: 198:         if ((mL->power) < 70) (mL->power) += 1;
  3022   006D24  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  3023   006D28  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  3024   006D2C  0E46               	movlw	70
  3025   006D2E  60DF               	cpfslt	indf2,c
  3026   006D30  EF9C  F036         	goto	u6531
  3027   006D34  EF9E  F036         	goto	u6530
  3028   006D38                     u6531:
  3029   006D38  EFA3  F036         	goto	l6496
  3030   006D3C                     u6530:
  3031   006D3C  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  3032   006D40  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  3033   006D44  2ADF               	incf	indf2,f,c
  3034   006D46                     l6496:
  3035                           
  3036                           ;dc_motor.c: 199:         if ((mR->power) < 70) (mR->power) += 1;
  3037   006D46  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  3038   006D4A  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  3039   006D4E  0E46               	movlw	70
  3040   006D50  60DF               	cpfslt	indf2,c
  3041   006D52  EFAD  F036         	goto	u6541
  3042   006D56  EFAF  F036         	goto	u6540
  3043   006D5A                     u6541:
  3044   006D5A  EFB4  F036         	goto	l6500
  3045   006D5E                     u6540:
  3046   006D5E  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  3047   006D62  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  3048   006D66  2ADF               	incf	indf2,f,c
  3049   006D68                     l6500:
  3050                           
  3051                           ;dc_motor.c: 201:         setMotorPWM(mL);
  3052   006D68  C019  F00F         	movff	reverse_after_read@mL,setMotorPWM@m
  3053   006D6C  C01A  F010         	movff	reverse_after_read@mL+1,setMotorPWM@m+1
  3054   006D70  ECCA  F035         	call	_setMotorPWM	;wreg free
  3055   006D74                     
  3056                           ;dc_motor.c: 202:         setMotorPWM(mR);
  3057   006D74  C01B  F00F         	movff	reverse_after_read@mR,setMotorPWM@m
  3058   006D78  C01C  F010         	movff	reverse_after_read@mR+1,setMotorPWM@m+1
  3059   006D7C  ECCA  F035         	call	_setMotorPWM	;wreg free
  3060   006D80                     
  3061                           ;dc_motor.c: 203:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3062   006D80  0E15               	movlw	21
  3063   006D82  6E1D               	movwf	??_reverse_after_read^0,c
  3064   006D84  0EC6               	movlw	198
  3065   006D86                     u9397:
  3066   006D86  2EE8               	decfsz	wreg,f,c
  3067   006D88  D7FE               	bra	u9397
  3068   006D8A  2E1D               	decfsz	??_reverse_after_read^0,f,c
  3069   006D8C  D7FC               	bra	u9397
  3070   006D8E  D000               	nop2	
  3071   006D90                     l250:
  3072                           
  3073                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  3074   006D90  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  3075   006D94  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  3076   006D98  0E45               	movlw	69
  3077   006D9A  64DF               	cpfsgt	indf2,c
  3078   006D9C  EFD2  F036         	goto	u6551
  3079   006DA0  EFD4  F036         	goto	u6550
  3080   006DA4                     u6551:
  3081   006DA4  EF92  F036         	goto	l6492
  3082   006DA8                     u6550:
  3083   006DA8  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  3084   006DAC  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  3085   006DB0  0E45               	movlw	69
  3086   006DB2  64DF               	cpfsgt	indf2,c
  3087   006DB4  EFDE  F036         	goto	u6561
  3088   006DB8  EFE0  F036         	goto	u6560
  3089   006DBC                     u6561:
  3090   006DBC  EF92  F036         	goto	l6492
  3091   006DC0                     u6560:
  3092   006DC0                     
  3093                           ;dc_motor.c: 205:     _delay((unsigned long)((225)*(64000000/4000.0)));
  3094   006DC0  0E13               	movlw	19
  3095   006DC2  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  3096   006DC4  0E44               	movlw	68
  3097   006DC6  6E1D               	movwf	??_reverse_after_read^0,c
  3098   006DC8  0E44               	movlw	68
  3099   006DCA                     u9407:
  3100   006DCA  2EE8               	decfsz	wreg,f,c
  3101   006DCC  D7FE               	bra	u9407
  3102   006DCE  2E1D               	decfsz	??_reverse_after_read^0,f,c
  3103   006DD0  D7FC               	bra	u9407
  3104   006DD2  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  3105   006DD4  D7FA               	bra	u9407
  3106   006DD6  D000               	nop2	
  3107   006DD8                     
  3108                           ;dc_motor.c: 206:     stop(mL, mR);
  3109   006DD8  C019  F015         	movff	reverse_after_read@mL,stop@mL
  3110   006DDC  C01A  F016         	movff	reverse_after_read@mL+1,stop@mL+1
  3111   006DE0  C01B  F017         	movff	reverse_after_read@mR,stop@mR
  3112   006DE4  C01C  F018         	movff	reverse_after_read@mR+1,stop@mR+1
  3113   006DE8  ECF9  F03C         	call	_stop	;wreg free
  3114   006DEC                     
  3115                           ;dc_motor.c: 207:     _delay((unsigned long)((250)*(64000000/4000.0)));
  3116   006DEC  0E15               	movlw	21
  3117   006DEE  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  3118   006DF0  0E4B               	movlw	75
  3119   006DF2  6E1D               	movwf	??_reverse_after_read^0,c
  3120   006DF4  0EBE               	movlw	190
  3121   006DF6                     u9417:
  3122   006DF6  2EE8               	decfsz	wreg,f,c
  3123   006DF8  D7FE               	bra	u9417
  3124   006DFA  2E1D               	decfsz	??_reverse_after_read^0,f,c
  3125   006DFC  D7FC               	bra	u9417
  3126   006DFE  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  3127   006E00  D7FA               	bra	u9417
  3128   006E02  D000               	nop2	
  3129   006E04  0012               	return		;funcret
  3130   006E06                     __end_of_reverse_after_read:
  3131                           	callstack 0
  3132                           
  3133 ;; *************** function _stop *****************
  3134 ;; Defined at:
  3135 ;;		line 114 in file "dc_motor.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  3138 ;;		 -> main@motorL(9), 
  3139 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  3140 ;;		 -> main@motorR(9), 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;		None
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3155 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3156 ;;Total ram usage:        4 bytes
  3157 ;; Hardware stack levels used: 1
  3158 ;; Hardware stack levels required when called: 4
  3159 ;; This function calls:
  3160 ;;		_setMotorPWM
  3161 ;; This function is called by:
  3162 ;;		_turn_left_90
  3163 ;;		_turn_right_90
  3164 ;;		_turn_left_135
  3165 ;;		_turn_right_135
  3166 ;;		_reverse_after_read
  3167 ;;		_reverse_one_square
  3168 ;;		_main
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text7
  3173   0079F2                     __ptext7:
  3174                           	callstack 0
  3175   0079F2                     _stop:
  3176                           	callstack 25
  3177   0079F2                     
  3178                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  3179   0079F2  EF2D  F03D         	goto	l6084
  3180   0079F6                     l6070:
  3181                           
  3182                           ;dc_motor.c: 116:         if ((mL->power) > 0) (mL->power) -= 1;
  3183   0079F6  C015  FFD9         	movff	stop@mL,fsr2l
  3184   0079FA  C016  FFDA         	movff	stop@mL+1,fsr2h
  3185   0079FE  50DF               	movf	indf2,w,c
  3186   007A00  B4D8               	btfsc	status,2,c
  3187   007A02  EF05  F03D         	goto	u6181
  3188   007A06  EF07  F03D         	goto	u6180
  3189   007A0A                     u6181:
  3190   007A0A  EF0C  F03D         	goto	l6074
  3191   007A0E                     u6180:
  3192   007A0E  C015  FFD9         	movff	stop@mL,fsr2l
  3193   007A12  C016  FFDA         	movff	stop@mL+1,fsr2h
  3194   007A16  06DF               	decf	indf2,f,c
  3195   007A18                     l6074:
  3196                           
  3197                           ;dc_motor.c: 117:         if ((mR->power) > 0) (mR->power) -= 1;
  3198   007A18  C017  FFD9         	movff	stop@mR,fsr2l
  3199   007A1C  C018  FFDA         	movff	stop@mR+1,fsr2h
  3200   007A20  50DF               	movf	indf2,w,c
  3201   007A22  B4D8               	btfsc	status,2,c
  3202   007A24  EF16  F03D         	goto	u6191
  3203   007A28  EF18  F03D         	goto	u6190
  3204   007A2C                     u6191:
  3205   007A2C  EF1D  F03D         	goto	l6078
  3206   007A30                     u6190:
  3207   007A30  C017  FFD9         	movff	stop@mR,fsr2l
  3208   007A34  C018  FFDA         	movff	stop@mR+1,fsr2h
  3209   007A38  06DF               	decf	indf2,f,c
  3210   007A3A                     l6078:
  3211                           
  3212                           ;dc_motor.c: 119:         setMotorPWM(mL);
  3213   007A3A  C015  F00F         	movff	stop@mL,setMotorPWM@m
  3214   007A3E  C016  F010         	movff	stop@mL+1,setMotorPWM@m+1
  3215   007A42  ECCA  F035         	call	_setMotorPWM	;wreg free
  3216   007A46                     
  3217                           ;dc_motor.c: 120:         setMotorPWM(mR);
  3218   007A46  C017  F00F         	movff	stop@mR,setMotorPWM@m
  3219   007A4A  C018  F010         	movff	stop@mR+1,setMotorPWM@m+1
  3220   007A4E  ECCA  F035         	call	_setMotorPWM	;wreg free
  3221   007A52                     
  3222                           ;dc_motor.c: 121:         _delay((unsigned long)((25)*(64000000/4000000.0)));
  3223   007A52  0E85               	movlw	133
  3224   007A54                     u9427:
  3225   007A54  2EE8               	decfsz	wreg,f,c
  3226   007A56  D7FE               	bra	u9427
  3227   007A58  0000               	nop	
  3228   007A5A                     l6084:
  3229                           
  3230                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  3231   007A5A  C015  FFD9         	movff	stop@mL,fsr2l
  3232   007A5E  C016  FFDA         	movff	stop@mL+1,fsr2h
  3233   007A62  50DF               	movf	indf2,w,c
  3234   007A64  A4D8               	btfss	status,2,c
  3235   007A66  EF37  F03D         	goto	u6201
  3236   007A6A  EF39  F03D         	goto	u6200
  3237   007A6E                     u6201:
  3238   007A6E  EFFB  F03C         	goto	l6070
  3239   007A72                     u6200:
  3240   007A72  C017  FFD9         	movff	stop@mR,fsr2l
  3241   007A76  C018  FFDA         	movff	stop@mR+1,fsr2h
  3242   007A7A  50DF               	movf	indf2,w,c
  3243   007A7C  A4D8               	btfss	status,2,c
  3244   007A7E  EF43  F03D         	goto	u6211
  3245   007A82  EF45  F03D         	goto	u6210
  3246   007A86                     u6211:
  3247   007A86  EFFB  F03C         	goto	l6070
  3248   007A8A                     u6210:
  3249   007A8A  0012               	return		;funcret
  3250   007A8C                     __end_of_stop:
  3251                           	callstack 0
  3252                           
  3253 ;; *************** function _resetTimer0 *****************
  3254 ;; Defined at:
  3255 ;;		line 34 in file "timers.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;		None
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3273 ;;Total ram usage:        0 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; Hardware stack levels required when called: 2
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text8
  3284   008206                     __ptext8:
  3285                           	callstack 0
  3286   008206                     _resetTimer0:
  3287                           	callstack 28
  3288   008206                     
  3289                           ;timers.c: 35:     TMR0H = 0;
  3290   008206  0E00               	movlw	0
  3291   008208  6ED4               	movwf	212,c	;volatile
  3292                           
  3293                           ;timers.c: 36:     TMR0L = 0;
  3294   00820A  0E00               	movlw	0
  3295   00820C  6ED3               	movwf	211,c	;volatile
  3296   00820E  0012               	return		;funcret
  3297   008210                     __end_of_resetTimer0:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function _invert_action *****************
  3301 ;; Defined at:
  3302 ;;		line 187 in file "color.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  input_action    1    wreg     unsigned char 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  input_action    1    3[COMRAM] unsigned char 
  3307 ;;  output_actio    1    0        unsigned char 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      unsigned char 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3318 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3319 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3320 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;Total ram usage:        3 bytes
  3322 ;; Hardware stack levels used: 1
  3323 ;; Hardware stack levels required when called: 2
  3324 ;; This function calls:
  3325 ;;		Nothing
  3326 ;; This function is called by:
  3327 ;;		_main
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text9
  3332   007A8C                     __ptext9:
  3333                           	callstack 0
  3334   007A8C                     _invert_action:
  3335                           	callstack 28
  3336                           
  3337                           ;incstack = 0
  3338                           ;invert_action@input_action stored from wreg
  3339   007A8C  6E04               	movwf	invert_action@input_action^0,c
  3340   007A8E                     
  3341                           ;color.c: 188:     char output_action;;color.c: 189:     switch(input_action){
  3342   007A8E  EF57  F03D         	goto	l6342
  3343   007A92                     l6324:
  3344                           
  3345                           ;color.c: 192:             break;
  3346   007A92  EF80  F03D         	goto	l93
  3347   007A96                     l6326:
  3348                           
  3349                           ;color.c: 195:             break;
  3350   007A96  EF80  F03D         	goto	l93
  3351   007A9A                     l6328:
  3352                           
  3353                           ;color.c: 198:             break;
  3354   007A9A  EF80  F03D         	goto	l93
  3355   007A9E                     l6330:
  3356                           
  3357                           ;color.c: 201:             break;
  3358   007A9E  EF80  F03D         	goto	l93
  3359   007AA2                     l6332:
  3360                           
  3361                           ;color.c: 204:             break;
  3362   007AA2  EF80  F03D         	goto	l93
  3363   007AA6                     l6334:
  3364                           
  3365                           ;color.c: 207:             break;
  3366   007AA6  EF80  F03D         	goto	l93
  3367   007AAA                     l6336:
  3368                           
  3369                           ;color.c: 210:             break;
  3370   007AAA  EF80  F03D         	goto	l93
  3371   007AAE                     l6342:
  3372   007AAE  5004               	movf	invert_action@input_action^0,w,c
  3373   007AB0  6E02               	movwf	??_invert_action^0,c
  3374   007AB2  6A03               	clrf	(??_invert_action+1)^0,c
  3375                           
  3376                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3377                           ; Switch size 1, requested type "simple"
  3378                           ; Number of cases is 1, Range of values is 0 to 0
  3379                           ; switch strategies available:
  3380                           ; Name         Instructions Cycles
  3381                           ; simple_byte            4     3 (average)
  3382                           ;	Chosen strategy is simple_byte
  3383   007AB4  5003               	movf	(??_invert_action+1)^0,w,c
  3384   007AB6  0A00               	xorlw	0	; case 0
  3385   007AB8  B4D8               	btfsc	status,2,c
  3386   007ABA  EF61  F03D         	goto	l9034
  3387   007ABE  EF80  F03D         	goto	l93
  3388   007AC2                     l9034:
  3389                           
  3390                           ; Switch size 1, requested type "simple"
  3391                           ; Number of cases is 7, Range of values is 0 to 6
  3392                           ; switch strategies available:
  3393                           ; Name         Instructions Cycles
  3394                           ; simple_byte           22    12 (average)
  3395                           ;	Chosen strategy is simple_byte
  3396   007AC2  5002               	movf	??_invert_action^0,w,c
  3397   007AC4  0A00               	xorlw	0	; case 0
  3398   007AC6  B4D8               	btfsc	status,2,c
  3399   007AC8  EF49  F03D         	goto	l6324
  3400   007ACC  0A01               	xorlw	1	; case 1
  3401   007ACE  B4D8               	btfsc	status,2,c
  3402   007AD0  EF4B  F03D         	goto	l6326
  3403   007AD4  0A03               	xorlw	3	; case 2
  3404   007AD6  B4D8               	btfsc	status,2,c
  3405   007AD8  EF4D  F03D         	goto	l6328
  3406   007ADC  0A01               	xorlw	1	; case 3
  3407   007ADE  B4D8               	btfsc	status,2,c
  3408   007AE0  EF4F  F03D         	goto	l6330
  3409   007AE4  0A07               	xorlw	7	; case 4
  3410   007AE6  B4D8               	btfsc	status,2,c
  3411   007AE8  EF51  F03D         	goto	l6332
  3412   007AEC  0A01               	xorlw	1	; case 5
  3413   007AEE  B4D8               	btfsc	status,2,c
  3414   007AF0  EF53  F03D         	goto	l6334
  3415   007AF4  0A03               	xorlw	3	; case 6
  3416   007AF6  B4D8               	btfsc	status,2,c
  3417   007AF8  EF55  F03D         	goto	l6336
  3418   007AFC  EF80  F03D         	goto	l93
  3419   007B00                     l93:
  3420   007B00  0012               	return		;funcret
  3421   007B02                     __end_of_invert_action:
  3422                           	callstack 0
  3423                           
  3424 ;; *************** function _initUSART4 *****************
  3425 ;; Defined at:
  3426 ;;		line 4 in file "serial.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      void 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;Total ram usage:        0 bytes
  3445 ;; Hardware stack levels used: 1
  3446 ;; Hardware stack levels required when called: 2
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text10
  3455   008182                     __ptext10:
  3456                           	callstack 0
  3457   008182                     _initUSART4:
  3458                           	callstack 28
  3459   008182                     
  3460                           ;serial.c: 8:     RC0PPS = 0x12;
  3461   008182  0E12               	movlw	18
  3462   008184  010E               	movlb	14	; () banked
  3463   008186  6F62               	movwf	98,b	;volatile
  3464                           
  3465                           ;serial.c: 9:     RX4PPS = 0x11;
  3466   008188  0E11               	movlw	17
  3467   00818A  6F15               	movwf	21,b	;volatile
  3468   00818C                     
  3469                           ; BSR set to: 14
  3470                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  3471   00818C  97E9               	bcf	233,3,b	;volatile
  3472   00818E                     
  3473                           ; BSR set to: 14
  3474                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  3475   00818E  95E8               	bcf	232,2,b	;volatile
  3476                           
  3477                           ;serial.c: 15:     SP4BRGL = 51;
  3478   008190  0E33               	movlw	51
  3479   008192  6FE5               	movwf	229,b	;volatile
  3480                           
  3481                           ;serial.c: 16:     SP4BRGH = 0;
  3482   008194  0E00               	movlw	0
  3483   008196  6FE6               	movwf	230,b	;volatile
  3484   008198                     
  3485                           ; BSR set to: 14
  3486                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  3487   008198  89E7               	bsf	231,4,b	;volatile
  3488   00819A                     
  3489                           ; BSR set to: 14
  3490                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  3491   00819A  8BE8               	bsf	232,5,b	;volatile
  3492   00819C                     
  3493                           ; BSR set to: 14
  3494                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  3495   00819C  8FE7               	bsf	231,7,b	;volatile
  3496   00819E                     
  3497                           ; BSR set to: 14
  3498   00819E  0012               	return		;funcret
  3499   0081A0                     __end_of_initUSART4:
  3500                           	callstack 0
  3501                           
  3502 ;; *************** function _initDCmotorsPWM *****************
  3503 ;; Defined at:
  3504 ;;		line 6 in file "dc_motor.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  PWMperiod       2    1[COMRAM] int 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;		None
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      void 
  3511 ;; Registers used:
  3512 ;;		wreg, status,2
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3521 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3522 ;;Total ram usage:        2 bytes
  3523 ;; Hardware stack levels used: 1
  3524 ;; Hardware stack levels required when called: 2
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_main
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           	psect	text11
  3533   007950                     __ptext11:
  3534                           	callstack 0
  3535   007950                     _initDCmotorsPWM:
  3536                           	callstack 28
  3537   007950                     
  3538                           ;dc_motor.c: 10:     RE2PPS=0x05;
  3539   007950  0E05               	movlw	5
  3540   007952  010E               	movlb	14	; () banked
  3541   007954  6F74               	movwf	116,b	;volatile
  3542                           
  3543                           ;dc_motor.c: 11:     RE4PPS=0x06;
  3544   007956  0E06               	movlw	6
  3545   007958  6F76               	movwf	118,b	;volatile
  3546                           
  3547                           ;dc_motor.c: 12:     RC7PPS=0x07;
  3548   00795A  0E07               	movlw	7
  3549   00795C  6F69               	movwf	105,b	;volatile
  3550                           
  3551                           ;dc_motor.c: 13:     RG6PPS=0x08;
  3552   00795E  0E08               	movlw	8
  3553   007960  6F88               	movwf	136,b	;volatile
  3554                           
  3555                           ;dc_motor.c: 16:     T2CONbits.CKPS=0b100;
  3556   007962  50BD               	movf	189,w,c	;volatile
  3557   007964  0B8F               	andlw	-113
  3558   007966  0940               	iorlw	64
  3559   007968  6EBD               	movwf	189,c	;volatile
  3560                           
  3561                           ;dc_motor.c: 17:     T2HLTbits.MODE=0b00000;
  3562   00796A  0EE0               	movlw	-32
  3563   00796C  16BE               	andwf	190,f,c	;volatile
  3564                           
  3565                           ;dc_motor.c: 18:     T2CLKCONbits.CS=0b0001;
  3566   00796E  50BF               	movf	191,w,c	;volatile
  3567   007970  0BF0               	andlw	-16
  3568   007972  0901               	iorlw	1
  3569   007974  6EBF               	movwf	191,c	;volatile
  3570                           
  3571                           ;dc_motor.c: 22:     T2PR=99;
  3572   007976  0E63               	movlw	99
  3573   007978  6EBC               	movwf	188,c	;volatile
  3574   00797A                     
  3575                           ; BSR set to: 14
  3576                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  3577   00797A  8EBD               	bsf	189,7,c	;volatile
  3578                           
  3579                           ;dc_motor.c: 27:     CCPR1H=0;
  3580   00797C  0E00               	movlw	0
  3581   00797E  6EAA               	movwf	170,c	;volatile
  3582                           
  3583                           ;dc_motor.c: 28:     CCPR2H=0;
  3584   007980  0E00               	movlw	0
  3585   007982  6EA6               	movwf	166,c	;volatile
  3586                           
  3587                           ;dc_motor.c: 29:     CCPR3H=0;
  3588   007984  0E00               	movlw	0
  3589   007986  010F               	movlb	15	; () banked
  3590   007988  6F25               	movwf	37,b	;volatile
  3591                           
  3592                           ;dc_motor.c: 30:     CCPR4H=0;
  3593   00798A  0E00               	movlw	0
  3594   00798C  6F21               	movwf	33,b	;volatile
  3595                           
  3596                           ;dc_motor.c: 33:     CCPTMRS0bits.C1TSEL=0;
  3597   00798E  0EFC               	movlw	-4
  3598   007990  16AD               	andwf	173,f,c	;volatile
  3599                           
  3600                           ;dc_motor.c: 34:     CCPTMRS0bits.C2TSEL=0;
  3601   007992  0EF3               	movlw	-13
  3602   007994  16AD               	andwf	173,f,c	;volatile
  3603                           
  3604                           ;dc_motor.c: 35:     CCPTMRS0bits.C3TSEL=0;
  3605   007996  0ECF               	movlw	-49
  3606   007998  16AD               	andwf	173,f,c	;volatile
  3607                           
  3608                           ;dc_motor.c: 36:     CCPTMRS0bits.C4TSEL=0;
  3609   00799A  0E3F               	movlw	-193
  3610   00799C  16AD               	andwf	173,f,c	;volatile
  3611   00799E                     
  3612                           ; BSR set to: 15
  3613                           ;dc_motor.c: 39:     CCP1CONbits.FMT=1;
  3614   00799E  88AB               	bsf	171,4,c	;volatile
  3615                           
  3616                           ;dc_motor.c: 40:     CCP1CONbits.CCP1MODE=0b1100;
  3617   0079A0  50AB               	movf	171,w,c	;volatile
  3618   0079A2  0BF0               	andlw	-16
  3619   0079A4  090C               	iorlw	12
  3620   0079A6  6EAB               	movwf	171,c	;volatile
  3621   0079A8                     
  3622                           ; BSR set to: 15
  3623                           ;dc_motor.c: 41:     CCP1CONbits.EN=1;
  3624   0079A8  8EAB               	bsf	171,7,c	;volatile
  3625   0079AA                     
  3626                           ; BSR set to: 15
  3627                           ;dc_motor.c: 43:     CCP2CONbits.FMT=1;
  3628   0079AA  88A7               	bsf	167,4,c	;volatile
  3629                           
  3630                           ;dc_motor.c: 44:     CCP2CONbits.CCP2MODE=0b1100;
  3631   0079AC  50A7               	movf	167,w,c	;volatile
  3632   0079AE  0BF0               	andlw	-16
  3633   0079B0  090C               	iorlw	12
  3634   0079B2  6EA7               	movwf	167,c	;volatile
  3635   0079B4                     
  3636                           ; BSR set to: 15
  3637                           ;dc_motor.c: 45:     CCP2CONbits.EN=1;
  3638   0079B4  8EA7               	bsf	167,7,c	;volatile
  3639   0079B6                     
  3640                           ; BSR set to: 15
  3641                           ;dc_motor.c: 47:     CCP3CONbits.FMT=1;
  3642   0079B6  8926               	bsf	38,4,b	;volatile
  3643                           
  3644                           ;dc_motor.c: 48:     CCP3CONbits.CCP3MODE=0b1100;
  3645   0079B8  5126               	movf	38,w,b	;volatile
  3646   0079BA  0BF0               	andlw	-16
  3647   0079BC  090C               	iorlw	12
  3648   0079BE  6F26               	movwf	38,b	;volatile
  3649   0079C0                     
  3650                           ; BSR set to: 15
  3651                           ;dc_motor.c: 49:     CCP3CONbits.EN=1;
  3652   0079C0  8F26               	bsf	38,7,b	;volatile
  3653   0079C2                     
  3654                           ; BSR set to: 15
  3655                           ;dc_motor.c: 51:     CCP4CONbits.FMT=1;
  3656   0079C2  8922               	bsf	34,4,b	;volatile
  3657                           
  3658                           ;dc_motor.c: 52:     CCP4CONbits.CCP4MODE=0b1100;
  3659   0079C4  5122               	movf	34,w,b	;volatile
  3660   0079C6  0BF0               	andlw	-16
  3661   0079C8  090C               	iorlw	12
  3662   0079CA  6F22               	movwf	34,b	;volatile
  3663   0079CC                     
  3664                           ; BSR set to: 15
  3665                           ;dc_motor.c: 53:     CCP4CONbits.EN=1;
  3666   0079CC  8F22               	bsf	34,7,b	;volatile
  3667                           
  3668                           ;dc_motor.c: 56:     RE2PPS=0x05;
  3669   0079CE  0E05               	movlw	5
  3670   0079D0  010E               	movlb	14	; () banked
  3671   0079D2  6F74               	movwf	116,b	;volatile
  3672                           
  3673                           ;dc_motor.c: 57:     RE4PPS=0x06;
  3674   0079D4  0E06               	movlw	6
  3675   0079D6  6F76               	movwf	118,b	;volatile
  3676                           
  3677                           ;dc_motor.c: 58:     RC7PPS=0x07;
  3678   0079D8  0E07               	movlw	7
  3679   0079DA  6F69               	movwf	105,b	;volatile
  3680                           
  3681                           ;dc_motor.c: 59:     RG6PPS=0x08;
  3682   0079DC  0E08               	movlw	8
  3683   0079DE  6F88               	movwf	136,b	;volatile
  3684   0079E0                     
  3685                           ; BSR set to: 14
  3686                           ;dc_motor.c: 62:     TRISEbits.TRISE2=0;
  3687   0079E0  9485               	bcf	133,2,c	;volatile
  3688   0079E2                     
  3689                           ; BSR set to: 14
  3690                           ;dc_motor.c: 63:     TRISEbits.TRISE4=0;
  3691   0079E2  9885               	bcf	133,4,c	;volatile
  3692   0079E4                     
  3693                           ; BSR set to: 14
  3694                           ;dc_motor.c: 64:     TRISCbits.TRISC7=0;
  3695   0079E4  9E83               	bcf	131,7,c	;volatile
  3696   0079E6                     
  3697                           ; BSR set to: 14
  3698                           ;dc_motor.c: 65:     TRISGbits.TRISG6=0;
  3699   0079E6  9C87               	bcf	135,6,c	;volatile
  3700   0079E8                     
  3701                           ; BSR set to: 14
  3702                           ;dc_motor.c: 68:     LATEbits.LATE2=0;
  3703   0079E8  947D               	bcf	125,2,c	;volatile
  3704   0079EA                     
  3705                           ; BSR set to: 14
  3706                           ;dc_motor.c: 69:     LATCbits.LATC7=0;
  3707   0079EA  9E7B               	bcf	123,7,c	;volatile
  3708   0079EC                     
  3709                           ; BSR set to: 14
  3710                           ;dc_motor.c: 70:     LATEbits.LATE4=0;
  3711   0079EC  987D               	bcf	125,4,c	;volatile
  3712   0079EE                     
  3713                           ; BSR set to: 14
  3714                           ;dc_motor.c: 71:     LATGbits.LATG6=0;
  3715   0079EE  9C7F               	bcf	127,6,c	;volatile
  3716   0079F0                     
  3717                           ; BSR set to: 14
  3718   0079F0  0012               	return		;funcret
  3719   0079F2                     __end_of_initDCmotorsPWM:
  3720                           	callstack 0
  3721                           
  3722 ;; *************** function _get16bitTMR0val *****************
  3723 ;; Defined at:
  3724 ;;		line 27 in file "timers.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  timer_val       2    5[COMRAM] unsigned int 
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  2    1[COMRAM] unsigned int 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3741 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3742 ;;Total ram usage:        6 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; Hardware stack levels required when called: 2
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_main
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text12
  3753   0081A0                     __ptext12:
  3754                           	callstack 0
  3755   0081A0                     _get16bitTMR0val:
  3756                           	callstack 28
  3757   0081A0                     
  3758                           ;timers.c: 29:     unsigned int timer_val = TMR0L;
  3759   0081A0  CFD3 F006          	movff	4051,get16bitTMR0val@timer_val	;volatile
  3760   0081A4  6A07               	clrf	(get16bitTMR0val@timer_val+1)^0,c
  3761   0081A6                     
  3762                           ;timers.c: 30:     timer_val |= (TMR0H << 8);
  3763   0081A6  50D4               	movf	212,w,c	;volatile
  3764   0081A8  6E05               	movwf	(??_get16bitTMR0val+1)^0,c
  3765   0081AA  6A04               	clrf	??_get16bitTMR0val^0,c
  3766   0081AC  5004               	movf	??_get16bitTMR0val^0,w,c
  3767   0081AE  1206               	iorwf	get16bitTMR0val@timer_val^0,f,c
  3768   0081B0  5005               	movf	(??_get16bitTMR0val+1)^0,w,c
  3769   0081B2  1207               	iorwf	(get16bitTMR0val@timer_val+1)^0,f,c
  3770   0081B4                     
  3771                           ;timers.c: 31:     return timer_val;
  3772   0081B4  C006  F002         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  3773   0081B8  C007  F003         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  3774   0081BC  0012               	return		;funcret
  3775   0081BE                     __end_of_get16bitTMR0val:
  3776                           	callstack 0
  3777                           
  3778 ;; *************** function _fullSpeedAhead *****************
  3779 ;; Defined at:
  3780 ;;		line 99 in file "dc_motor.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  3783 ;;		 -> main@motorL(9), 
  3784 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  3785 ;;		 -> main@motorR(9), 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3800 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;Total ram usage:        5 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; Hardware stack levels required when called: 4
  3804 ;; This function calls:
  3805 ;;		_setMotorPWM
  3806 ;; This function is called by:
  3807 ;;		_main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text13
  3812   007680                     __ptext13:
  3813                           	callstack 0
  3814   007680                     _fullSpeedAhead:
  3815                           	callstack 26
  3816   007680                     
  3817                           ;dc_motor.c: 100:     mL->direction = 0;
  3818   007680  EE20 F001          	lfsr	2,1
  3819   007684  5015               	movf	fullSpeedAhead@mL^0,w,c
  3820   007686  26D9               	addwf	fsr2l,f,c
  3821   007688  5016               	movf	(fullSpeedAhead@mL+1)^0,w,c
  3822   00768A  22DA               	addwfc	fsr2h,f,c
  3823   00768C  6ADF               	clrf	indf2,c
  3824                           
  3825                           ;dc_motor.c: 101:     mR->direction = 0;
  3826   00768E  EE20 F001          	lfsr	2,1
  3827   007692  5017               	movf	fullSpeedAhead@mR^0,w,c
  3828   007694  26D9               	addwf	fsr2l,f,c
  3829   007696  5018               	movf	(fullSpeedAhead@mR+1)^0,w,c
  3830   007698  22DA               	addwfc	fsr2h,f,c
  3831   00769A  6ADF               	clrf	indf2,c
  3832                           
  3833                           ;dc_motor.c: 103:     while ((mL->power) < 100 || (mR->power) < 100){
  3834   00769C  EF85  F03B         	goto	l202
  3835   0076A0                     l6386:
  3836                           
  3837                           ;dc_motor.c: 104:         if ((mL->power) < 100) (mL->power) += 1;
  3838   0076A0  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  3839   0076A4  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  3840   0076A8  0E64               	movlw	100
  3841   0076AA  60DF               	cpfslt	indf2,c
  3842   0076AC  EF5A  F03B         	goto	u6331
  3843   0076B0  EF5C  F03B         	goto	u6330
  3844   0076B4                     u6331:
  3845   0076B4  EF61  F03B         	goto	l6390
  3846   0076B8                     u6330:
  3847   0076B8  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  3848   0076BC  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  3849   0076C0  2ADF               	incf	indf2,f,c
  3850   0076C2                     l6390:
  3851                           
  3852                           ;dc_motor.c: 105:         if ((mR->power) < 100) (mR->power) += 1;
  3853   0076C2  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  3854   0076C6  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  3855   0076CA  0E64               	movlw	100
  3856   0076CC  60DF               	cpfslt	indf2,c
  3857   0076CE  EF6B  F03B         	goto	u6341
  3858   0076D2  EF6D  F03B         	goto	u6340
  3859   0076D6                     u6341:
  3860   0076D6  EF72  F03B         	goto	l6394
  3861   0076DA                     u6340:
  3862   0076DA  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  3863   0076DE  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  3864   0076E2  2ADF               	incf	indf2,f,c
  3865   0076E4                     l6394:
  3866                           
  3867                           ;dc_motor.c: 107:         setMotorPWM(mL);
  3868   0076E4  C015  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  3869   0076E8  C016  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  3870   0076EC  ECCA  F035         	call	_setMotorPWM	;wreg free
  3871   0076F0                     
  3872                           ;dc_motor.c: 108:         setMotorPWM(mR);
  3873   0076F0  C017  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  3874   0076F4  C018  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  3875   0076F8  ECCA  F035         	call	_setMotorPWM	;wreg free
  3876   0076FC                     
  3877                           ;dc_motor.c: 109:         _delay((unsigned long)((2)*(64000000/4000.0)));
  3878   0076FC  0E2A               	movlw	42
  3879   0076FE  6E19               	movwf	??_fullSpeedAhead^0,c
  3880   007700  0E8E               	movlw	142
  3881   007702                     u9437:
  3882   007702  2EE8               	decfsz	wreg,f,c
  3883   007704  D7FE               	bra	u9437
  3884   007706  2E19               	decfsz	??_fullSpeedAhead^0,f,c
  3885   007708  D7FC               	bra	u9437
  3886   00770A                     l202:
  3887                           
  3888                           ;dc_motor.c: 103:     while ((mL->power) < 100 || (mR->power) < 100){
  3889   00770A  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  3890   00770E  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  3891   007712  0E63               	movlw	99
  3892   007714  64DF               	cpfsgt	indf2,c
  3893   007716  EF8F  F03B         	goto	u6351
  3894   00771A  EF91  F03B         	goto	u6350
  3895   00771E                     u6351:
  3896   00771E  EF50  F03B         	goto	l6386
  3897   007722                     u6350:
  3898   007722  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  3899   007726  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  3900   00772A  0E63               	movlw	99
  3901   00772C  64DF               	cpfsgt	indf2,c
  3902   00772E  EF9B  F03B         	goto	u6361
  3903   007732  EF9D  F03B         	goto	u6360
  3904   007736                     u6361:
  3905   007736  EF50  F03B         	goto	l6386
  3906   00773A                     u6360:
  3907   00773A  0012               	return		;funcret
  3908   00773C                     __end_of_fullSpeedAhead:
  3909                           	callstack 0
  3910                           
  3911 ;; *************** function _setMotorPWM *****************
  3912 ;; Defined at:
  3913 ;;		line 76 in file "dc_motor.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  m               2   14[COMRAM] PTR struct DC_motor
  3916 ;;		 -> main@motorR(9), main@motorL(9), 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  negDuty         1   19[COMRAM] unsigned char 
  3919 ;;  posDuty         1   18[COMRAM] unsigned char 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3930 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3932 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3933 ;;Total ram usage:        6 bytes
  3934 ;; Hardware stack levels used: 1
  3935 ;; Hardware stack levels required when called: 3
  3936 ;; This function calls:
  3937 ;;		___lwdiv
  3938 ;;		___wmul
  3939 ;; This function is called by:
  3940 ;;		_fullSpeedAhead
  3941 ;;		_stop
  3942 ;;		_turn_left_90
  3943 ;;		_turn_right_90
  3944 ;;		_turn_left_135
  3945 ;;		_turn_right_135
  3946 ;;		_reverse_after_read
  3947 ;;		_reverse_one_square
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text14
  3952   006B94                     __ptext14:
  3953                           	callstack 0
  3954   006B94                     _setMotorPWM:
  3955                           	callstack 25
  3956   006B94                     
  3957                           ;dc_motor.c: 76: void setMotorPWM(struct DC_motor *m);dc_motor.c: 77: {;dc_motor.c: 78: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 80:     if(m->brakemode) {
  3958   006B94  EE20 F002          	lfsr	2,2
  3959   006B98  500F               	movf	setMotorPWM@m^0,w,c
  3960   006B9A  26D9               	addwf	fsr2l,f,c
  3961   006B9C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3962   006B9E  22DA               	addwfc	fsr2h,f,c
  3963   006BA0  50DF               	movf	indf2,w,c
  3964   006BA2  B4D8               	btfsc	status,2,c
  3965   006BA4  EFD6  F035         	goto	u5361
  3966   006BA8  EFD8  F035         	goto	u5360
  3967   006BAC                     u5361:
  3968   006BAC  EF0C  F036         	goto	l5482
  3969   006BB0                     u5360:
  3970   006BB0                     
  3971                           ;dc_motor.c: 81:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  3972   006BB0  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  3973   006BB4  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3974   006BB8  50DF               	movf	indf2,w,c
  3975   006BBA  6E11               	movwf	??_setMotorPWM^0,c
  3976   006BBC  5011               	movf	??_setMotorPWM^0,w,c
  3977   006BBE  6E02               	movwf	___wmul@multiplier^0,c
  3978   006BC0  6A03               	clrf	(___wmul@multiplier+1)^0,c
  3979   006BC2  EE20 F003          	lfsr	2,3
  3980   006BC6  500F               	movf	setMotorPWM@m^0,w,c
  3981   006BC8  26D9               	addwf	fsr2l,f,c
  3982   006BCA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3983   006BCC  22DA               	addwfc	fsr2h,f,c
  3984   006BCE  CFDE F004          	movff	postinc2,___wmul@multiplicand
  3985   006BD2  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  3986   006BD6  EC8E  F040         	call	___wmul	;wreg free
  3987   006BDA  C002  F008         	movff	?___wmul,___lwdiv@dividend
  3988   006BDE  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  3989   006BE2  0E00               	movlw	0
  3990   006BE4  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  3991   006BE6  0E64               	movlw	100
  3992   006BE8  6E0A               	movwf	___lwdiv@divisor^0,c
  3993   006BEA  EC81  F03D         	call	___lwdiv	;wreg free
  3994   006BEE  EE20 F003          	lfsr	2,3
  3995   006BF2  500F               	movf	setMotorPWM@m^0,w,c
  3996   006BF4  26D9               	addwf	fsr2l,f,c
  3997   006BF6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3998   006BF8  22DA               	addwfc	fsr2h,f,c
  3999   006BFA  50DF               	movf	indf2,w,c
  4000   006BFC  6E12               	movwf	(??_setMotorPWM+1)^0,c
  4001   006BFE  5008               	movf	?___lwdiv^0,w,c
  4002   006C00  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  4003   006C02  6E13               	movwf	setMotorPWM@posDuty^0,c
  4004   006C04                     
  4005                           ;dc_motor.c: 82:         negDuty=m->PWMperiod;
  4006   006C04  EE20 F003          	lfsr	2,3
  4007   006C08  500F               	movf	setMotorPWM@m^0,w,c
  4008   006C0A  26D9               	addwf	fsr2l,f,c
  4009   006C0C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4010   006C0E  22DA               	addwfc	fsr2h,f,c
  4011   006C10  50DF               	movf	indf2,w,c
  4012   006C12  6E14               	movwf	setMotorPWM@negDuty^0,c
  4013                           
  4014                           ;dc_motor.c: 83:     }
  4015   006C14  EF2F  F036         	goto	l5486
  4016   006C18                     l5482:
  4017                           
  4018                           ;dc_motor.c: 85:         posDuty=0;
  4019   006C18  0E00               	movlw	0
  4020   006C1A  6E13               	movwf	setMotorPWM@posDuty^0,c
  4021   006C1C                     
  4022                           ;dc_motor.c: 86:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  4023   006C1C  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  4024   006C20  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4025   006C24  50DF               	movf	indf2,w,c
  4026   006C26  6E11               	movwf	??_setMotorPWM^0,c
  4027   006C28  5011               	movf	??_setMotorPWM^0,w,c
  4028   006C2A  6E02               	movwf	___wmul@multiplier^0,c
  4029   006C2C  6A03               	clrf	(___wmul@multiplier+1)^0,c
  4030   006C2E  EE20 F003          	lfsr	2,3
  4031   006C32  500F               	movf	setMotorPWM@m^0,w,c
  4032   006C34  26D9               	addwf	fsr2l,f,c
  4033   006C36  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4034   006C38  22DA               	addwfc	fsr2h,f,c
  4035   006C3A  CFDE F004          	movff	postinc2,___wmul@multiplicand
  4036   006C3E  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  4037   006C42  EC8E  F040         	call	___wmul	;wreg free
  4038   006C46  C002  F008         	movff	?___wmul,___lwdiv@dividend
  4039   006C4A  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  4040   006C4E  0E00               	movlw	0
  4041   006C50  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  4042   006C52  0E64               	movlw	100
  4043   006C54  6E0A               	movwf	___lwdiv@divisor^0,c
  4044   006C56  EC81  F03D         	call	___lwdiv	;wreg free
  4045   006C5A  5008               	movf	?___lwdiv^0,w,c
  4046   006C5C  6E14               	movwf	setMotorPWM@negDuty^0,c
  4047   006C5E                     l5486:
  4048                           
  4049                           ;dc_motor.c: 89:     if (m->direction) {
  4050   006C5E  EE20 F001          	lfsr	2,1
  4051   006C62  500F               	movf	setMotorPWM@m^0,w,c
  4052   006C64  26D9               	addwf	fsr2l,f,c
  4053   006C66  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4054   006C68  22DA               	addwfc	fsr2h,f,c
  4055   006C6A  50DF               	movf	indf2,w,c
  4056   006C6C  B4D8               	btfsc	status,2,c
  4057   006C6E  EF3B  F036         	goto	u5371
  4058   006C72  EF3D  F036         	goto	u5370
  4059   006C76                     u5371:
  4060   006C76  EF5F  F036         	goto	l5490
  4061   006C7A                     u5370:
  4062   006C7A                     
  4063                           ;dc_motor.c: 90:         *(m->posDutyHighByte)=posDuty;
  4064   006C7A  EE20 F005          	lfsr	2,5
  4065   006C7E  500F               	movf	setMotorPWM@m^0,w,c
  4066   006C80  26D9               	addwf	fsr2l,f,c
  4067   006C82  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4068   006C84  22DA               	addwfc	fsr2h,f,c
  4069   006C86  CFDE F011          	movff	postinc2,??_setMotorPWM
  4070   006C8A  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4071   006C8E  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4072   006C92  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4073   006C96  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  4074                           
  4075                           ;dc_motor.c: 91:         *(m->negDutyHighByte)=negDuty;
  4076   006C9A  EE20 F007          	lfsr	2,7
  4077   006C9E  500F               	movf	setMotorPWM@m^0,w,c
  4078   006CA0  26D9               	addwf	fsr2l,f,c
  4079   006CA2  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4080   006CA4  22DA               	addwfc	fsr2h,f,c
  4081   006CA6  CFDE F011          	movff	postinc2,??_setMotorPWM
  4082   006CAA  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4083   006CAE  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4084   006CB2  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4085   006CB6  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  4086                           
  4087                           ;dc_motor.c: 92:     } else {
  4088   006CBA  EF7F  F036         	goto	l199
  4089   006CBE                     l5490:
  4090                           
  4091                           ;dc_motor.c: 93:         *(m->posDutyHighByte)=negDuty;
  4092   006CBE  EE20 F005          	lfsr	2,5
  4093   006CC2  500F               	movf	setMotorPWM@m^0,w,c
  4094   006CC4  26D9               	addwf	fsr2l,f,c
  4095   006CC6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4096   006CC8  22DA               	addwfc	fsr2h,f,c
  4097   006CCA  CFDE F011          	movff	postinc2,??_setMotorPWM
  4098   006CCE  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4099   006CD2  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4100   006CD6  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4101   006CDA  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  4102                           
  4103                           ;dc_motor.c: 94:         *(m->negDutyHighByte)=posDuty;
  4104   006CDE  EE20 F007          	lfsr	2,7
  4105   006CE2  500F               	movf	setMotorPWM@m^0,w,c
  4106   006CE4  26D9               	addwf	fsr2l,f,c
  4107   006CE6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  4108   006CE8  22DA               	addwfc	fsr2h,f,c
  4109   006CEA  CFDE F011          	movff	postinc2,??_setMotorPWM
  4110   006CEE  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  4111   006CF2  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  4112   006CF6  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4113   006CFA  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  4114   006CFE                     l199:
  4115   006CFE  0012               	return		;funcret
  4116   006D00                     __end_of_setMotorPWM:
  4117                           	callstack 0
  4118                           
  4119 ;; *************** function ___wmul *****************
  4120 ;; Defined at:
  4121 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  multiplier      2    1[COMRAM] unsigned int 
  4124 ;;  multiplicand    2    3[COMRAM] unsigned int 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  product         2    5[COMRAM] unsigned int 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  2    1[COMRAM] unsigned int 
  4129 ;; Registers used:
  4130 ;;		wreg, status,2, status,0, prodl, prodh
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4136 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4137 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4139 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4140 ;;Total ram usage:        6 bytes
  4141 ;; Hardware stack levels used: 1
  4142 ;; Hardware stack levels required when called: 2
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		_setMotorPWM
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text15
  4151   00811C                     __ptext15:
  4152                           	callstack 0
  4153   00811C                     ___wmul:
  4154                           	callstack 25
  4155   00811C  5002               	movf	___wmul@multiplier^0,w,c
  4156   00811E  0204               	mulwf	___wmul@multiplicand^0,c
  4157   008120  CFF3 F006          	movff	prodl,___wmul@product
  4158   008124  CFF4 F007          	movff	prodh,___wmul@product+1
  4159   008128  5002               	movf	___wmul@multiplier^0,w,c
  4160   00812A  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  4161   00812C  50F3               	movf	243,w,c
  4162   00812E  2607               	addwf	(___wmul@product+1)^0,f,c
  4163   008130  5003               	movf	(___wmul@multiplier+1)^0,w,c
  4164   008132  0204               	mulwf	___wmul@multiplicand^0,c
  4165   008134  50F3               	movf	243,w,c
  4166   008136  2607               	addwf	(___wmul@product+1)^0,f,c
  4167   008138  C006  F002         	movff	___wmul@product,?___wmul
  4168   00813C  C007  F003         	movff	___wmul@product+1,?___wmul+1
  4169   008140  0012               	return		;funcret
  4170   008142                     __end_of___wmul:
  4171                           	callstack 0
  4172                           
  4173 ;; *************** function ___lwdiv *****************
  4174 ;; Defined at:
  4175 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  dividend        2    7[COMRAM] unsigned int 
  4178 ;;  divisor         2    9[COMRAM] unsigned int 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  quotient        2   11[COMRAM] unsigned int 
  4181 ;;  counter         1   13[COMRAM] unsigned char 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  2    7[COMRAM] unsigned int 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4191 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4192 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4194 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4195 ;;Total ram usage:        7 bytes
  4196 ;; Hardware stack levels used: 1
  4197 ;; Hardware stack levels required when called: 2
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_setMotorPWM
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text16
  4206   007B02                     __ptext16:
  4207                           	callstack 0
  4208   007B02                     ___lwdiv:
  4209                           	callstack 25
  4210   007B02  0E00               	movlw	0
  4211   007B04  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  4212   007B06  0E00               	movlw	0
  4213   007B08  6E0C               	movwf	___lwdiv@quotient^0,c
  4214   007B0A  500A               	movf	___lwdiv@divisor^0,w,c
  4215   007B0C  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4216   007B0E  B4D8               	btfsc	status,2,c
  4217   007B10  EF8C  F03D         	goto	u5081
  4218   007B14  EF8E  F03D         	goto	u5080
  4219   007B18                     u5081:
  4220   007B18  EFB6  F03D         	goto	l1046
  4221   007B1C                     u5080:
  4222   007B1C  0E01               	movlw	1
  4223   007B1E  6E0E               	movwf	___lwdiv@counter^0,c
  4224   007B20  EF96  F03D         	goto	l5288
  4225   007B24                     l5286:
  4226   007B24  90D8               	bcf	status,0,c
  4227   007B26  360A               	rlcf	___lwdiv@divisor^0,f,c
  4228   007B28  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4229   007B2A  2A0E               	incf	___lwdiv@counter^0,f,c
  4230   007B2C                     l5288:
  4231   007B2C  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  4232   007B2E  EF9B  F03D         	goto	u5091
  4233   007B32  EF9D  F03D         	goto	u5090
  4234   007B36                     u5091:
  4235   007B36  EF92  F03D         	goto	l5286
  4236   007B3A                     u5090:
  4237   007B3A                     l5290:
  4238   007B3A  90D8               	bcf	status,0,c
  4239   007B3C  360C               	rlcf	___lwdiv@quotient^0,f,c
  4240   007B3E  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4241   007B40  500A               	movf	___lwdiv@divisor^0,w,c
  4242   007B42  5C08               	subwf	___lwdiv@dividend^0,w,c
  4243   007B44  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  4244   007B46  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4245   007B48  A0D8               	btfss	status,0,c
  4246   007B4A  EFA9  F03D         	goto	u5101
  4247   007B4E  EFAB  F03D         	goto	u5100
  4248   007B52                     u5101:
  4249   007B52  EFB0  F03D         	goto	l5298
  4250   007B56                     u5100:
  4251   007B56  500A               	movf	___lwdiv@divisor^0,w,c
  4252   007B58  5E08               	subwf	___lwdiv@dividend^0,f,c
  4253   007B5A  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  4254   007B5C  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4255   007B5E  800C               	bsf	___lwdiv@quotient^0,0,c
  4256   007B60                     l5298:
  4257   007B60  90D8               	bcf	status,0,c
  4258   007B62  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4259   007B64  320A               	rrcf	___lwdiv@divisor^0,f,c
  4260   007B66  2E0E               	decfsz	___lwdiv@counter^0,f,c
  4261   007B68  EF9D  F03D         	goto	l5290
  4262   007B6C                     l1046:
  4263   007B6C  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  4264   007B70  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4265   007B74  0012               	return		;funcret
  4266   007B76                     __end_of___lwdiv:
  4267                           	callstack 0
  4268                           
  4269 ;; *************** function _decide_action *****************
  4270 ;; Defined at:
  4271 ;;		line 114 in file "color.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;  red_unsigned    2   83[BANK0 ] unsigned int 
  4274 ;;  green_unsign    2   85[BANK0 ] unsigned int 
  4275 ;;  blue_unsigne    2   87[BANK0 ] unsigned int 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  i               1  127[BANK2 ] unsigned char 
  4278 ;;  rgb_comp       32   90[BANK2 ] float [8]
  4279 ;;  blue_val       20   60[BANK2 ] unsigned char [20]
  4280 ;;  green_val      20   40[BANK2 ] unsigned char [20]
  4281 ;;  red_val        20   20[BANK2 ] unsigned char [20]
  4282 ;;  clear_val      20    0[BANK2 ] unsigned char [20]
  4283 ;;  blue_r          4  148[BANK2 ] float 
  4284 ;;  green_r         4  144[BANK2 ] float 
  4285 ;;  red_r           4  140[BANK2 ] float 
  4286 ;;  blue            4  136[BANK2 ] float 
  4287 ;;  green           4  132[BANK2 ] float 
  4288 ;;  red             4  128[BANK2 ] float 
  4289 ;;  total           4  123[BANK2 ] float 
  4290 ;;  pgreen_val      2   88[BANK2 ] PTR unsigned char 
  4291 ;;		 -> decide_action@green_val(20), 
  4292 ;;  pblue_val       2   86[BANK2 ] PTR unsigned char 
  4293 ;;		 -> decide_action@blue_val(20), 
  4294 ;;  pred_val        2   84[BANK2 ] PTR unsigned char 
  4295 ;;		 -> decide_action@red_val(20), 
  4296 ;;  pclear_val      2    0        PTR unsigned char 
  4297 ;;		 -> decide_action@clear_val(20), 
  4298 ;;  action          1  122[BANK2 ] unsigned char 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      unsigned char 
  4301 ;; Registers used:
  4302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4308 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4309 ;;      Locals:         0       0       0     180       0       0       0       0       0       0       0       0       
      +0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4311 ;;      Totals:         0       6       0     180       0       0       0       0       0       0       0       0       
      +0       0       0
  4312 ;;Total ram usage:      186 bytes
  4313 ;; Hardware stack levels used: 1
  4314 ;; Hardware stack levels required when called: 10
  4315 ;; This function calls:
  4316 ;;		___fladd
  4317 ;;		___fldiv
  4318 ;;		___flge
  4319 ;;		___flsub
  4320 ;;		___xxtofl
  4321 ;;		_color_writetoaddr
  4322 ;;		_powf
  4323 ;;		_sendStringSerial4
  4324 ;;		_sprintf
  4325 ;;		_sqrtf
  4326 ;; This function is called by:
  4327 ;;		_main
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text17
  4332   00335C                     __ptext17:
  4333                           	callstack 0
  4334   00335C                     _decide_action:
  4335                           	callstack 20
  4336   00335C                     
  4337                           ;color.c: 126:     pred_val = &red_val[0];
  4338   00335C  0E14               	movlw	low decide_action@red_val
  4339   00335E  0102               	movlb	2	; () banked
  4340   003360  6F54               	movwf	decide_action@pred_val& (0+255),b
  4341   003362  0E02               	movlw	high decide_action@red_val
  4342   003364  6F55               	movwf	(decide_action@pred_val+1)& (0+255),b
  4343                           
  4344                           ;color.c: 127:     pgreen_val = &green_val[0];
  4345   003366  0E28               	movlw	low decide_action@green_val
  4346   003368  6F58               	movwf	decide_action@pgreen_val& (0+255),b
  4347   00336A  0E02               	movlw	high decide_action@green_val
  4348   00336C  6F59               	movwf	(decide_action@pgreen_val+1)& (0+255),b
  4349                           
  4350                           ;color.c: 128:     pblue_val = &blue_val[0];
  4351   00336E  0E3C               	movlw	low decide_action@blue_val
  4352   003370  6F56               	movwf	decide_action@pblue_val& (0+255),b
  4353   003372  0E02               	movlw	high decide_action@blue_val
  4354   003374  6F57               	movwf	(decide_action@pblue_val+1)& (0+255),b
  4355   003376                     
  4356                           ; BSR set to: 2
  4357                           ;color.c: 130:     float red, green, blue;;color.c: 131:     float red_r, green_r, blue_
      +                          r;;color.c: 132:     float rgb_comp[8];;color.c: 133:     char action;;color.c: 135:    
      +                           red = (float)red_unsigned;
  4358   003376  C0B3  F002         	movff	decide_action@red_unsigned,___xxtofl@val
  4359   00337A  C0B4  F003         	movff	decide_action@red_unsigned+1,___xxtofl@val+1
  4360   00337E  6A04               	clrf	(___xxtofl@val+2)^0,c
  4361   003380  6A05               	clrf	(___xxtofl@val+3)^0,c
  4362   003382  0E00               	movlw	0
  4363   003384  ECF0  F034         	call	___xxtofl
  4364   003388  C002  F280         	movff	?___xxtofl,decide_action@red
  4365   00338C  C003  F281         	movff	?___xxtofl+1,decide_action@red+1
  4366   003390  C004  F282         	movff	?___xxtofl+2,decide_action@red+2
  4367   003394  C005  F283         	movff	?___xxtofl+3,decide_action@red+3
  4368   003398                     
  4369                           ;color.c: 136:     green = (float)green_unsigned;
  4370   003398  C0B5  F002         	movff	decide_action@green_unsigned,___xxtofl@val
  4371   00339C  C0B6  F003         	movff	decide_action@green_unsigned+1,___xxtofl@val+1
  4372   0033A0  6A04               	clrf	(___xxtofl@val+2)^0,c
  4373   0033A2  6A05               	clrf	(___xxtofl@val+3)^0,c
  4374   0033A4  0E00               	movlw	0
  4375   0033A6  ECF0  F034         	call	___xxtofl
  4376   0033AA  C002  F284         	movff	?___xxtofl,decide_action@green
  4377   0033AE  C003  F285         	movff	?___xxtofl+1,decide_action@green+1
  4378   0033B2  C004  F286         	movff	?___xxtofl+2,decide_action@green+2
  4379   0033B6  C005  F287         	movff	?___xxtofl+3,decide_action@green+3
  4380   0033BA                     
  4381                           ;color.c: 137:     blue = (float)blue_unsigned;
  4382   0033BA  C0B7  F002         	movff	decide_action@blue_unsigned,___xxtofl@val
  4383   0033BE  C0B8  F003         	movff	decide_action@blue_unsigned+1,___xxtofl@val+1
  4384   0033C2  6A04               	clrf	(___xxtofl@val+2)^0,c
  4385   0033C4  6A05               	clrf	(___xxtofl@val+3)^0,c
  4386   0033C6  0E00               	movlw	0
  4387   0033C8  ECF0  F034         	call	___xxtofl
  4388   0033CC  C002  F288         	movff	?___xxtofl,decide_action@blue
  4389   0033D0  C003  F289         	movff	?___xxtofl+1,decide_action@blue+1
  4390   0033D4  C004  F28A         	movff	?___xxtofl+2,decide_action@blue+2
  4391   0033D8  C005  F28B         	movff	?___xxtofl+3,decide_action@blue+3
  4392   0033DC                     
  4393                           ;color.c: 140:     if(red < 666){red = 0;} else{red -= 666;}
  4394   0033DC  C280  F04C         	movff	decide_action@red,___flge@ff1
  4395   0033E0  C281  F04D         	movff	decide_action@red+1,___flge@ff1+1
  4396   0033E4  C282  F04E         	movff	decide_action@red+2,___flge@ff1+2
  4397   0033E8  C283  F04F         	movff	decide_action@red+3,___flge@ff1+3
  4398   0033EC  0E00               	movlw	0
  4399   0033EE  6E50               	movwf	___flge@ff2^0,c
  4400   0033F0  0E80               	movlw	128
  4401   0033F2  6E51               	movwf	(___flge@ff2+1)^0,c
  4402   0033F4  0E26               	movlw	38
  4403   0033F6  6E52               	movwf	(___flge@ff2+2)^0,c
  4404   0033F8  0E44               	movlw	68
  4405   0033FA  6E53               	movwf	(___flge@ff2+3)^0,c
  4406   0033FC  EC86  F037         	call	___flge	;wreg free
  4407   003400  B0D8               	btfsc	status,0,c
  4408   003402  EF05  F01A         	goto	u9171
  4409   003406  EF07  F01A         	goto	u9170
  4410   00340A                     u9171:
  4411   00340A  EF12  F01A         	goto	l8534
  4412   00340E                     u9170:
  4413   00340E  0E00               	movlw	0
  4414   003410  0102               	movlb	2	; () banked
  4415   003412  6F80               	movwf	decide_action@red& (0+255),b
  4416   003414  0E00               	movlw	0
  4417   003416  6F81               	movwf	(decide_action@red+1)& (0+255),b
  4418   003418  0E00               	movlw	0
  4419   00341A  6F82               	movwf	(decide_action@red+2)& (0+255),b
  4420   00341C  0E00               	movlw	0
  4421   00341E  6F83               	movwf	(decide_action@red+3)& (0+255),b
  4422   003420  EF2C  F01A         	goto	l73
  4423   003424                     l8534:
  4424   003424  C280  F044         	movff	decide_action@red,___flsub@b
  4425   003428  C281  F045         	movff	decide_action@red+1,___flsub@b+1
  4426   00342C  C282  F046         	movff	decide_action@red+2,___flsub@b+2
  4427   003430  C283  F047         	movff	decide_action@red+3,___flsub@b+3
  4428   003434  0E00               	movlw	0
  4429   003436  6E48               	movwf	___flsub@a^0,c
  4430   003438  0E80               	movlw	128
  4431   00343A  6E49               	movwf	(___flsub@a+1)^0,c
  4432   00343C  0E26               	movlw	38
  4433   00343E  6E4A               	movwf	(___flsub@a+2)^0,c
  4434   003440  0E44               	movlw	68
  4435   003442  6E4B               	movwf	(___flsub@a+3)^0,c
  4436   003444  EC5C  F03F         	call	___flsub	;wreg free
  4437   003448  C044  F280         	movff	?___flsub,decide_action@red
  4438   00344C  C045  F281         	movff	?___flsub+1,decide_action@red+1
  4439   003450  C046  F282         	movff	?___flsub+2,decide_action@red+2
  4440   003454  C047  F283         	movff	?___flsub+3,decide_action@red+3
  4441   003458                     l73:
  4442                           
  4443                           ;color.c: 141:     if(green < 446){green = 0;} else{green -= 446;}
  4444   003458  C284  F04C         	movff	decide_action@green,___flge@ff1
  4445   00345C  C285  F04D         	movff	decide_action@green+1,___flge@ff1+1
  4446   003460  C286  F04E         	movff	decide_action@green+2,___flge@ff1+2
  4447   003464  C287  F04F         	movff	decide_action@green+3,___flge@ff1+3
  4448   003468  0E00               	movlw	0
  4449   00346A  6E50               	movwf	___flge@ff2^0,c
  4450   00346C  0E00               	movlw	0
  4451   00346E  6E51               	movwf	(___flge@ff2+1)^0,c
  4452   003470  0EDF               	movlw	223
  4453   003472  6E52               	movwf	(___flge@ff2+2)^0,c
  4454   003474  0E43               	movlw	67
  4455   003476  6E53               	movwf	(___flge@ff2+3)^0,c
  4456   003478  EC86  F037         	call	___flge	;wreg free
  4457   00347C  B0D8               	btfsc	status,0,c
  4458   00347E  EF43  F01A         	goto	u9181
  4459   003482  EF45  F01A         	goto	u9180
  4460   003486                     u9181:
  4461   003486  EF50  F01A         	goto	l8538
  4462   00348A                     u9180:
  4463   00348A  0E00               	movlw	0
  4464   00348C  0102               	movlb	2	; () banked
  4465   00348E  6F84               	movwf	decide_action@green& (0+255),b
  4466   003490  0E00               	movlw	0
  4467   003492  6F85               	movwf	(decide_action@green+1)& (0+255),b
  4468   003494  0E00               	movlw	0
  4469   003496  6F86               	movwf	(decide_action@green+2)& (0+255),b
  4470   003498  0E00               	movlw	0
  4471   00349A  6F87               	movwf	(decide_action@green+3)& (0+255),b
  4472   00349C  EF6A  F01A         	goto	l75
  4473   0034A0                     l8538:
  4474   0034A0  C284  F044         	movff	decide_action@green,___flsub@b
  4475   0034A4  C285  F045         	movff	decide_action@green+1,___flsub@b+1
  4476   0034A8  C286  F046         	movff	decide_action@green+2,___flsub@b+2
  4477   0034AC  C287  F047         	movff	decide_action@green+3,___flsub@b+3
  4478   0034B0  0E00               	movlw	0
  4479   0034B2  6E48               	movwf	___flsub@a^0,c
  4480   0034B4  0E00               	movlw	0
  4481   0034B6  6E49               	movwf	(___flsub@a+1)^0,c
  4482   0034B8  0EDF               	movlw	223
  4483   0034BA  6E4A               	movwf	(___flsub@a+2)^0,c
  4484   0034BC  0E43               	movlw	67
  4485   0034BE  6E4B               	movwf	(___flsub@a+3)^0,c
  4486   0034C0  EC5C  F03F         	call	___flsub	;wreg free
  4487   0034C4  C044  F284         	movff	?___flsub,decide_action@green
  4488   0034C8  C045  F285         	movff	?___flsub+1,decide_action@green+1
  4489   0034CC  C046  F286         	movff	?___flsub+2,decide_action@green+2
  4490   0034D0  C047  F287         	movff	?___flsub+3,decide_action@green+3
  4491   0034D4                     l75:
  4492                           
  4493                           ;color.c: 142:     if(blue < 295){blue = 0;} else{blue -= 295;}
  4494   0034D4  C288  F04C         	movff	decide_action@blue,___flge@ff1
  4495   0034D8  C289  F04D         	movff	decide_action@blue+1,___flge@ff1+1
  4496   0034DC  C28A  F04E         	movff	decide_action@blue+2,___flge@ff1+2
  4497   0034E0  C28B  F04F         	movff	decide_action@blue+3,___flge@ff1+3
  4498   0034E4  0E00               	movlw	0
  4499   0034E6  6E50               	movwf	___flge@ff2^0,c
  4500   0034E8  0E80               	movlw	128
  4501   0034EA  6E51               	movwf	(___flge@ff2+1)^0,c
  4502   0034EC  0E93               	movlw	147
  4503   0034EE  6E52               	movwf	(___flge@ff2+2)^0,c
  4504   0034F0  0E43               	movlw	67
  4505   0034F2  6E53               	movwf	(___flge@ff2+3)^0,c
  4506   0034F4  EC86  F037         	call	___flge	;wreg free
  4507   0034F8  B0D8               	btfsc	status,0,c
  4508   0034FA  EF81  F01A         	goto	u9191
  4509   0034FE  EF83  F01A         	goto	u9190
  4510   003502                     u9191:
  4511   003502  EF8E  F01A         	goto	l8542
  4512   003506                     u9190:
  4513   003506  0E00               	movlw	0
  4514   003508  0102               	movlb	2	; () banked
  4515   00350A  6F88               	movwf	decide_action@blue& (0+255),b
  4516   00350C  0E00               	movlw	0
  4517   00350E  6F89               	movwf	(decide_action@blue+1)& (0+255),b
  4518   003510  0E00               	movlw	0
  4519   003512  6F8A               	movwf	(decide_action@blue+2)& (0+255),b
  4520   003514  0E00               	movlw	0
  4521   003516  6F8B               	movwf	(decide_action@blue+3)& (0+255),b
  4522   003518  EFA8  F01A         	goto	l77
  4523   00351C                     l8542:
  4524   00351C  C288  F044         	movff	decide_action@blue,___flsub@b
  4525   003520  C289  F045         	movff	decide_action@blue+1,___flsub@b+1
  4526   003524  C28A  F046         	movff	decide_action@blue+2,___flsub@b+2
  4527   003528  C28B  F047         	movff	decide_action@blue+3,___flsub@b+3
  4528   00352C  0E00               	movlw	0
  4529   00352E  6E48               	movwf	___flsub@a^0,c
  4530   003530  0E80               	movlw	128
  4531   003532  6E49               	movwf	(___flsub@a+1)^0,c
  4532   003534  0E93               	movlw	147
  4533   003536  6E4A               	movwf	(___flsub@a+2)^0,c
  4534   003538  0E43               	movlw	67
  4535   00353A  6E4B               	movwf	(___flsub@a+3)^0,c
  4536   00353C  EC5C  F03F         	call	___flsub	;wreg free
  4537   003540  C044  F288         	movff	?___flsub,decide_action@blue
  4538   003544  C045  F289         	movff	?___flsub+1,decide_action@blue+1
  4539   003548  C046  F28A         	movff	?___flsub+2,decide_action@blue+2
  4540   00354C  C047  F28B         	movff	?___flsub+3,decide_action@blue+3
  4541   003550                     l77:
  4542                           
  4543                           ;color.c: 144:     red = red/1341;
  4544   003550  C280  F02B         	movff	decide_action@red,___fldiv@b
  4545   003554  C281  F02C         	movff	decide_action@red+1,___fldiv@b+1
  4546   003558  C282  F02D         	movff	decide_action@red+2,___fldiv@b+2
  4547   00355C  C283  F02E         	movff	decide_action@red+3,___fldiv@b+3
  4548   003560  0E00               	movlw	0
  4549   003562  6E2F               	movwf	___fldiv@a^0,c
  4550   003564  0EA0               	movlw	160
  4551   003566  6E30               	movwf	(___fldiv@a+1)^0,c
  4552   003568  0EA7               	movlw	167
  4553   00356A  6E31               	movwf	(___fldiv@a+2)^0,c
  4554   00356C  0E44               	movlw	68
  4555   00356E  6E32               	movwf	(___fldiv@a+3)^0,c
  4556   003570  EC48  F02E         	call	___fldiv	;wreg free
  4557   003574  C02B  F280         	movff	?___fldiv,decide_action@red
  4558   003578  C02C  F281         	movff	?___fldiv+1,decide_action@red+1
  4559   00357C  C02D  F282         	movff	?___fldiv+2,decide_action@red+2
  4560   003580  C02E  F283         	movff	?___fldiv+3,decide_action@red+3
  4561                           
  4562                           ;color.c: 145:     green = green/795;
  4563   003584  C284  F02B         	movff	decide_action@green,___fldiv@b
  4564   003588  C285  F02C         	movff	decide_action@green+1,___fldiv@b+1
  4565   00358C  C286  F02D         	movff	decide_action@green+2,___fldiv@b+2
  4566   003590  C287  F02E         	movff	decide_action@green+3,___fldiv@b+3
  4567   003594  0E00               	movlw	0
  4568   003596  6E2F               	movwf	___fldiv@a^0,c
  4569   003598  0EC0               	movlw	192
  4570   00359A  6E30               	movwf	(___fldiv@a+1)^0,c
  4571   00359C  0E46               	movlw	70
  4572   00359E  6E31               	movwf	(___fldiv@a+2)^0,c
  4573   0035A0  0E44               	movlw	68
  4574   0035A2  6E32               	movwf	(___fldiv@a+3)^0,c
  4575   0035A4  EC48  F02E         	call	___fldiv	;wreg free
  4576   0035A8  C02B  F284         	movff	?___fldiv,decide_action@green
  4577   0035AC  C02C  F285         	movff	?___fldiv+1,decide_action@green+1
  4578   0035B0  C02D  F286         	movff	?___fldiv+2,decide_action@green+2
  4579   0035B4  C02E  F287         	movff	?___fldiv+3,decide_action@green+3
  4580                           
  4581                           ;color.c: 146:     blue = blue/756;
  4582   0035B8  C288  F02B         	movff	decide_action@blue,___fldiv@b
  4583   0035BC  C289  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  4584   0035C0  C28A  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  4585   0035C4  C28B  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  4586   0035C8  0E00               	movlw	0
  4587   0035CA  6E2F               	movwf	___fldiv@a^0,c
  4588   0035CC  0E00               	movlw	0
  4589   0035CE  6E30               	movwf	(___fldiv@a+1)^0,c
  4590   0035D0  0E3D               	movlw	61
  4591   0035D2  6E31               	movwf	(___fldiv@a+2)^0,c
  4592   0035D4  0E44               	movlw	68
  4593   0035D6  6E32               	movwf	(___fldiv@a+3)^0,c
  4594   0035D8  EC48  F02E         	call	___fldiv	;wreg free
  4595   0035DC  C02B  F288         	movff	?___fldiv,decide_action@blue
  4596   0035E0  C02C  F289         	movff	?___fldiv+1,decide_action@blue+1
  4597   0035E4  C02D  F28A         	movff	?___fldiv+2,decide_action@blue+2
  4598   0035E8  C02E  F28B         	movff	?___fldiv+3,decide_action@blue+3
  4599                           
  4600                           ;color.c: 148:     float total = red + green + blue;
  4601   0035EC  C284  F006         	movff	decide_action@green,___fladd@a
  4602   0035F0  C285  F007         	movff	decide_action@green+1,___fladd@a+1
  4603   0035F4  C286  F008         	movff	decide_action@green+2,___fladd@a+2
  4604   0035F8  C287  F009         	movff	decide_action@green+3,___fladd@a+3
  4605   0035FC  C280  F002         	movff	decide_action@red,___fladd@b
  4606   003600  C281  F003         	movff	decide_action@red+1,___fladd@b+1
  4607   003604  C282  F004         	movff	decide_action@red+2,___fladd@b+2
  4608   003608  C283  F005         	movff	decide_action@red+3,___fladd@b+3
  4609   00360C  ECE4  F027         	call	___fladd	;wreg free
  4610   003610  C002  F250         	movff	?___fladd,_decide_action$3179
  4611   003614  C003  F251         	movff	?___fladd+1,_decide_action$3179+1
  4612   003618  C004  F252         	movff	?___fladd+2,_decide_action$3179+2
  4613   00361C  C005  F253         	movff	?___fladd+3,_decide_action$3179+3
  4614                           
  4615                           ;color.c: 148:     float total = red + green + blue;
  4616   003620  C250  F002         	movff	_decide_action$3179,___fladd@b
  4617   003624  C251  F003         	movff	_decide_action$3179+1,___fladd@b+1
  4618   003628  C252  F004         	movff	_decide_action$3179+2,___fladd@b+2
  4619   00362C  C253  F005         	movff	_decide_action$3179+3,___fladd@b+3
  4620   003630  C288  F006         	movff	decide_action@blue,___fladd@a
  4621   003634  C289  F007         	movff	decide_action@blue+1,___fladd@a+1
  4622   003638  C28A  F008         	movff	decide_action@blue+2,___fladd@a+2
  4623   00363C  C28B  F009         	movff	decide_action@blue+3,___fladd@a+3
  4624   003640  ECE4  F027         	call	___fladd	;wreg free
  4625   003644  C002  F27B         	movff	?___fladd,decide_action@total
  4626   003648  C003  F27C         	movff	?___fladd+1,decide_action@total+1
  4627   00364C  C004  F27D         	movff	?___fladd+2,decide_action@total+2
  4628   003650  C005  F27E         	movff	?___fladd+3,decide_action@total+3
  4629                           
  4630                           ;color.c: 150:     red_r = red / total;
  4631   003654  C280  F02B         	movff	decide_action@red,___fldiv@b
  4632   003658  C281  F02C         	movff	decide_action@red+1,___fldiv@b+1
  4633   00365C  C282  F02D         	movff	decide_action@red+2,___fldiv@b+2
  4634   003660  C283  F02E         	movff	decide_action@red+3,___fldiv@b+3
  4635   003664  C27B  F02F         	movff	decide_action@total,___fldiv@a
  4636   003668  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  4637   00366C  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  4638   003670  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  4639   003674  EC48  F02E         	call	___fldiv	;wreg free
  4640   003678  C02B  F28C         	movff	?___fldiv,decide_action@red_r
  4641   00367C  C02C  F28D         	movff	?___fldiv+1,decide_action@red_r+1
  4642   003680  C02D  F28E         	movff	?___fldiv+2,decide_action@red_r+2
  4643   003684  C02E  F28F         	movff	?___fldiv+3,decide_action@red_r+3
  4644                           
  4645                           ;color.c: 151:     green_r = green / total;
  4646   003688  C284  F02B         	movff	decide_action@green,___fldiv@b
  4647   00368C  C285  F02C         	movff	decide_action@green+1,___fldiv@b+1
  4648   003690  C286  F02D         	movff	decide_action@green+2,___fldiv@b+2
  4649   003694  C287  F02E         	movff	decide_action@green+3,___fldiv@b+3
  4650   003698  C27B  F02F         	movff	decide_action@total,___fldiv@a
  4651   00369C  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  4652   0036A0  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  4653   0036A4  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  4654   0036A8  EC48  F02E         	call	___fldiv	;wreg free
  4655   0036AC  C02B  F290         	movff	?___fldiv,decide_action@green_r
  4656   0036B0  C02C  F291         	movff	?___fldiv+1,decide_action@green_r+1
  4657   0036B4  C02D  F292         	movff	?___fldiv+2,decide_action@green_r+2
  4658   0036B8  C02E  F293         	movff	?___fldiv+3,decide_action@green_r+3
  4659                           
  4660                           ;color.c: 152:     blue_r = blue / total;
  4661   0036BC  C288  F02B         	movff	decide_action@blue,___fldiv@b
  4662   0036C0  C289  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  4663   0036C4  C28A  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  4664   0036C8  C28B  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  4665   0036CC  C27B  F02F         	movff	decide_action@total,___fldiv@a
  4666   0036D0  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  4667   0036D4  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  4668   0036D8  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  4669   0036DC  EC48  F02E         	call	___fldiv	;wreg free
  4670   0036E0  C02B  F294         	movff	?___fldiv,decide_action@blue_r
  4671   0036E4  C02C  F295         	movff	?___fldiv+1,decide_action@blue_r+1
  4672   0036E8  C02D  F296         	movff	?___fldiv+2,decide_action@blue_r+2
  4673   0036EC  C02E  F297         	movff	?___fldiv+3,decide_action@blue_r+3
  4674   0036F0                     
  4675                           ;color.c: 154:     sprintf(red_val,"redr = %f \r\n",red_r);
  4676   0036F0  0E14               	movlw	low decide_action@red_val
  4677   0036F2  0100               	movlb	0	; () banked
  4678   0036F4  6F9F               	movwf	sprintf@s& (0+255),b
  4679   0036F6  0E02               	movlw	high decide_action@red_val
  4680   0036F8  6FA0               	movwf	(sprintf@s+1)& (0+255),b
  4681   0036FA  0EB9               	movlw	low STR_1
  4682   0036FC  6FA1               	movwf	sprintf@fmt& (0+255),b
  4683   0036FE  C28C  F0A2         	movff	decide_action@red_r,?_sprintf+3
  4684   003702  C28D  F0A3         	movff	decide_action@red_r+1,?_sprintf+4
  4685   003706  C28E  F0A4         	movff	decide_action@red_r+2,?_sprintf+5
  4686   00370A  C28F  F0A5         	movff	decide_action@red_r+3,?_sprintf+6
  4687   00370E  ECA0  F03F         	call	_sprintf	;wreg free
  4688   003712                     
  4689                           ;color.c: 155:     sendStringSerial4(pred_val);
  4690   003712  C254  F003         	movff	decide_action@pred_val,sendStringSerial4@string
  4691   003716  C255  F004         	movff	decide_action@pred_val+1,sendStringSerial4@string+1
  4692   00371A  EC4D  F040         	call	_sendStringSerial4	;wreg free
  4693   00371E                     
  4694                           ;color.c: 156:     sprintf(green_val,"greenr = %f \r\n",green_r);
  4695   00371E  0E28               	movlw	low decide_action@green_val
  4696   003720  0100               	movlb	0	; () banked
  4697   003722  6F9F               	movwf	sprintf@s& (0+255),b
  4698   003724  0E02               	movlw	high decide_action@green_val
  4699   003726  6FA0               	movwf	(sprintf@s+1)& (0+255),b
  4700   003728  0E80               	movlw	low STR_2
  4701   00372A  6FA1               	movwf	sprintf@fmt& (0+255),b
  4702   00372C  C290  F0A2         	movff	decide_action@green_r,?_sprintf+3
  4703   003730  C291  F0A3         	movff	decide_action@green_r+1,?_sprintf+4
  4704   003734  C292  F0A4         	movff	decide_action@green_r+2,?_sprintf+5
  4705   003738  C293  F0A5         	movff	decide_action@green_r+3,?_sprintf+6
  4706   00373C  ECA0  F03F         	call	_sprintf	;wreg free
  4707   003740                     
  4708                           ;color.c: 157:     sendStringSerial4(pgreen_val);
  4709   003740  C258  F003         	movff	decide_action@pgreen_val,sendStringSerial4@string
  4710   003744  C259  F004         	movff	decide_action@pgreen_val+1,sendStringSerial4@string+1
  4711   003748  EC4D  F040         	call	_sendStringSerial4	;wreg free
  4712   00374C                     
  4713                           ;color.c: 158:     sprintf(blue_val,"bluer = %f \r\n",blue_r);
  4714   00374C  0E3C               	movlw	low decide_action@blue_val
  4715   00374E  0100               	movlb	0	; () banked
  4716   003750  6F9F               	movwf	sprintf@s& (0+255),b
  4717   003752  0E02               	movlw	high decide_action@blue_val
  4718   003754  6FA0               	movwf	(sprintf@s+1)& (0+255),b
  4719   003756  0EAB               	movlw	low STR_3
  4720   003758  6FA1               	movwf	sprintf@fmt& (0+255),b
  4721   00375A  C294  F0A2         	movff	decide_action@blue_r,?_sprintf+3
  4722   00375E  C295  F0A3         	movff	decide_action@blue_r+1,?_sprintf+4
  4723   003762  C296  F0A4         	movff	decide_action@blue_r+2,?_sprintf+5
  4724   003766  C297  F0A5         	movff	decide_action@blue_r+3,?_sprintf+6
  4725   00376A  ECA0  F03F         	call	_sprintf	;wreg free
  4726   00376E                     
  4727                           ;color.c: 159:     sendStringSerial4(pblue_val);
  4728   00376E  C256  F003         	movff	decide_action@pblue_val,sendStringSerial4@string
  4729   003772  C257  F004         	movff	decide_action@pblue_val+1,sendStringSerial4@string+1
  4730   003776  EC4D  F040         	call	_sendStringSerial4	;wreg free
  4731   00377A                     
  4732                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  4733   00377A  0E73               	movlw	115
  4734   00377C  6E06               	movwf	___fladd@a^0,c
  4735   00377E  0E68               	movlw	104
  4736   003780  6E07               	movwf	(___fladd@a+1)^0,c
  4737   003782  0E91               	movlw	145
  4738   003784  6E08               	movwf	(___fladd@a+2)^0,c
  4739   003786  0EBD               	movlw	189
  4740   003788  6E09               	movwf	(___fladd@a+3)^0,c
  4741   00378A  C290  F002         	movff	decide_action@green_r,___fladd@b
  4742   00378E  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  4743   003792  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  4744   003796  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  4745   00379A  ECE4  F027         	call	___fladd	;wreg free
  4746   00379E  C002  F298         	movff	?___fladd,_decide_action$3180
  4747   0037A2  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  4748   0037A6  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  4749   0037AA  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  4750   0037AE                     
  4751                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  4752   0037AE  0E64               	movlw	100
  4753   0037B0  6E06               	movwf	___fladd@a^0,c
  4754   0037B2  0E3B               	movlw	59
  4755   0037B4  6E07               	movwf	(___fladd@a+1)^0,c
  4756   0037B6  0E3F               	movlw	63
  4757   0037B8  6E08               	movwf	(___fladd@a+2)^0,c
  4758   0037BA  0EBF               	movlw	191
  4759   0037BC  6E09               	movwf	(___fladd@a+3)^0,c
  4760   0037BE  C28C  F002         	movff	decide_action@red_r,___fladd@b
  4761   0037C2  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  4762   0037C6  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  4763   0037CA  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  4764   0037CE  ECE4  F027         	call	___fladd	;wreg free
  4765   0037D2  C002  F29C         	movff	?___fladd,_decide_action$3181
  4766   0037D6  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  4767   0037DA  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  4768   0037DE  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  4769   0037E2                     
  4770                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  4771   0037E2  0E00               	movlw	0
  4772   0037E4  0100               	movlb	0	; () banked
  4773   0037E6  6F64               	movwf	powf@y& (0+255),b
  4774   0037E8  0E00               	movlw	0
  4775   0037EA  6F65               	movwf	(powf@y+1)& (0+255),b
  4776   0037EC  0E00               	movlw	0
  4777   0037EE  6F66               	movwf	(powf@y+2)& (0+255),b
  4778   0037F0  0E40               	movlw	64
  4779   0037F2  6F67               	movwf	(powf@y+3)& (0+255),b
  4780   0037F4  C298  F060         	movff	_decide_action$3180,powf@x
  4781   0037F8  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  4782   0037FC  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  4783   003800  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  4784   003804  EC6E  F007         	call	_powf	;wreg free
  4785   003808  C060  F2A0         	movff	?_powf,_decide_action$3182
  4786   00380C  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  4787   003810  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  4788   003814  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  4789   003818                     
  4790                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  4791   003818  0E00               	movlw	0
  4792   00381A  0100               	movlb	0	; () banked
  4793   00381C  6F64               	movwf	powf@y& (0+255),b
  4794   00381E  0E00               	movlw	0
  4795   003820  6F65               	movwf	(powf@y+1)& (0+255),b
  4796   003822  0E00               	movlw	0
  4797   003824  6F66               	movwf	(powf@y+2)& (0+255),b
  4798   003826  0E40               	movlw	64
  4799   003828  6F67               	movwf	(powf@y+3)& (0+255),b
  4800   00382A  C29C  F060         	movff	_decide_action$3181,powf@x
  4801   00382E  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  4802   003832  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  4803   003836  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  4804   00383A  EC6E  F007         	call	_powf	;wreg free
  4805   00383E  C060  F2A4         	movff	?_powf,_decide_action$3183
  4806   003842  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  4807   003846  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  4808   00384A  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  4809   00384E                     
  4810                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  4811   00384E  0E35               	movlw	53
  4812   003850  6E06               	movwf	___fladd@a^0,c
  4813   003852  0E5E               	movlw	94
  4814   003854  6E07               	movwf	(___fladd@a+1)^0,c
  4815   003856  0E3A               	movlw	58
  4816   003858  6E08               	movwf	(___fladd@a+2)^0,c
  4817   00385A  0EBE               	movlw	190
  4818   00385C  6E09               	movwf	(___fladd@a+3)^0,c
  4819   00385E  C294  F002         	movff	decide_action@blue_r,___fladd@b
  4820   003862  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  4821   003866  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  4822   00386A  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  4823   00386E  ECE4  F027         	call	___fladd	;wreg free
  4824   003872  C002  F2A8         	movff	?___fladd,_decide_action$3184
  4825   003876  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  4826   00387A  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  4827   00387E  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  4828   003882                     
  4829                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  4830   003882  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  4831   003886  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  4832   00388A  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  4833   00388E  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  4834   003892  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  4835   003896  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  4836   00389A  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  4837   00389E  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  4838   0038A2  ECE4  F027         	call	___fladd	;wreg free
  4839   0038A6  C002  F2AC         	movff	?___fladd,_decide_action$3185
  4840   0038AA  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  4841   0038AE  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  4842   0038B2  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  4843   0038B6                     
  4844                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  4845   0038B6  0E00               	movlw	0
  4846   0038B8  0100               	movlb	0	; () banked
  4847   0038BA  6F64               	movwf	powf@y& (0+255),b
  4848   0038BC  0E00               	movlw	0
  4849   0038BE  6F65               	movwf	(powf@y+1)& (0+255),b
  4850   0038C0  0E00               	movlw	0
  4851   0038C2  6F66               	movwf	(powf@y+2)& (0+255),b
  4852   0038C4  0E40               	movlw	64
  4853   0038C6  6F67               	movwf	(powf@y+3)& (0+255),b
  4854   0038C8  C2A8  F060         	movff	_decide_action$3184,powf@x
  4855   0038CC  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  4856   0038D0  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  4857   0038D4  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  4858   0038D8  EC6E  F007         	call	_powf	;wreg free
  4859   0038DC  C060  F2B0         	movff	?_powf,_decide_action$3186
  4860   0038E0  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  4861   0038E4  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  4862   0038E8  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  4863   0038EC                     
  4864                           ;color.c: 163:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  4865   0038EC  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  4866   0038F0  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  4867   0038F4  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  4868   0038F8  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  4869   0038FC  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  4870   003900  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  4871   003904  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  4872   003908  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  4873   00390C  ECE4  F027         	call	___fladd	;wreg free
  4874   003910  C002  F012         	movff	?___fladd,sqrtf@x
  4875   003914  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  4876   003918  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  4877   00391C  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  4878   003920  EC59  F02C         	call	_sqrtf	;wreg free
  4879   003924  C012  F25A         	movff	?_sqrtf,decide_action@rgb_comp
  4880   003928  C013  F25B         	movff	?_sqrtf+1,decide_action@rgb_comp+1
  4881   00392C  C014  F25C         	movff	?_sqrtf+2,decide_action@rgb_comp+2
  4882   003930  C015  F25D         	movff	?_sqrtf+3,decide_action@rgb_comp+3
  4883   003934                     
  4884                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  4885   003934  0E35               	movlw	53
  4886   003936  6E06               	movwf	___fladd@a^0,c
  4887   003938  0E5E               	movlw	94
  4888   00393A  6E07               	movwf	(___fladd@a+1)^0,c
  4889   00393C  0EFA               	movlw	250
  4890   00393E  6E08               	movwf	(___fladd@a+2)^0,c
  4891   003940  0EBE               	movlw	190
  4892   003942  6E09               	movwf	(___fladd@a+3)^0,c
  4893   003944  C290  F002         	movff	decide_action@green_r,___fladd@b
  4894   003948  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  4895   00394C  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  4896   003950  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  4897   003954  ECE4  F027         	call	___fladd	;wreg free
  4898   003958  C002  F298         	movff	?___fladd,_decide_action$3180
  4899   00395C  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  4900   003960  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  4901   003964  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  4902   003968                     
  4903                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  4904   003968  0E2B               	movlw	43
  4905   00396A  6E06               	movwf	___fladd@a^0,c
  4906   00396C  0E87               	movlw	135
  4907   00396E  6E07               	movwf	(___fladd@a+1)^0,c
  4908   003970  0E16               	movlw	22
  4909   003972  6E08               	movwf	(___fladd@a+2)^0,c
  4910   003974  0EBE               	movlw	190
  4911   003976  6E09               	movwf	(___fladd@a+3)^0,c
  4912   003978  C28C  F002         	movff	decide_action@red_r,___fladd@b
  4913   00397C  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  4914   003980  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  4915   003984  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  4916   003988  ECE4  F027         	call	___fladd	;wreg free
  4917   00398C  C002  F29C         	movff	?___fladd,_decide_action$3181
  4918   003990  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  4919   003994  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  4920   003998  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  4921   00399C                     
  4922                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  4923   00399C  0E00               	movlw	0
  4924   00399E  0100               	movlb	0	; () banked
  4925   0039A0  6F64               	movwf	powf@y& (0+255),b
  4926   0039A2  0E00               	movlw	0
  4927   0039A4  6F65               	movwf	(powf@y+1)& (0+255),b
  4928   0039A6  0E00               	movlw	0
  4929   0039A8  6F66               	movwf	(powf@y+2)& (0+255),b
  4930   0039AA  0E40               	movlw	64
  4931   0039AC  6F67               	movwf	(powf@y+3)& (0+255),b
  4932   0039AE  C298  F060         	movff	_decide_action$3180,powf@x
  4933   0039B2  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  4934   0039B6  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  4935   0039BA  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  4936   0039BE  EC6E  F007         	call	_powf	;wreg free
  4937   0039C2  C060  F2A0         	movff	?_powf,_decide_action$3182
  4938   0039C6  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  4939   0039CA  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  4940   0039CE  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  4941   0039D2                     
  4942                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  4943   0039D2  0E00               	movlw	0
  4944   0039D4  0100               	movlb	0	; () banked
  4945   0039D6  6F64               	movwf	powf@y& (0+255),b
  4946   0039D8  0E00               	movlw	0
  4947   0039DA  6F65               	movwf	(powf@y+1)& (0+255),b
  4948   0039DC  0E00               	movlw	0
  4949   0039DE  6F66               	movwf	(powf@y+2)& (0+255),b
  4950   0039E0  0E40               	movlw	64
  4951   0039E2  6F67               	movwf	(powf@y+3)& (0+255),b
  4952   0039E4  C29C  F060         	movff	_decide_action$3181,powf@x
  4953   0039E8  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  4954   0039EC  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  4955   0039F0  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  4956   0039F4  EC6E  F007         	call	_powf	;wreg free
  4957   0039F8  C060  F2A4         	movff	?_powf,_decide_action$3183
  4958   0039FC  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  4959   003A00  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  4960   003A04  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  4961   003A08                     
  4962                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  4963   003A08  0E23               	movlw	35
  4964   003A0A  6E06               	movwf	___fladd@a^0,c
  4965   003A0C  0EDB               	movlw	219
  4966   003A0E  6E07               	movwf	(___fladd@a+1)^0,c
  4967   003A10  0EB9               	movlw	185
  4968   003A12  6E08               	movwf	(___fladd@a+2)^0,c
  4969   003A14  0EBE               	movlw	190
  4970   003A16  6E09               	movwf	(___fladd@a+3)^0,c
  4971   003A18  C294  F002         	movff	decide_action@blue_r,___fladd@b
  4972   003A1C  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  4973   003A20  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  4974   003A24  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  4975   003A28  ECE4  F027         	call	___fladd	;wreg free
  4976   003A2C  C002  F2A8         	movff	?___fladd,_decide_action$3184
  4977   003A30  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  4978   003A34  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  4979   003A38  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  4980   003A3C                     
  4981                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  4982   003A3C  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  4983   003A40  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  4984   003A44  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  4985   003A48  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  4986   003A4C  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  4987   003A50  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  4988   003A54  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  4989   003A58  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  4990   003A5C  ECE4  F027         	call	___fladd	;wreg free
  4991   003A60  C002  F2AC         	movff	?___fladd,_decide_action$3185
  4992   003A64  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  4993   003A68  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  4994   003A6C  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  4995   003A70                     
  4996                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  4997   003A70  0E00               	movlw	0
  4998   003A72  0100               	movlb	0	; () banked
  4999   003A74  6F64               	movwf	powf@y& (0+255),b
  5000   003A76  0E00               	movlw	0
  5001   003A78  6F65               	movwf	(powf@y+1)& (0+255),b
  5002   003A7A  0E00               	movlw	0
  5003   003A7C  6F66               	movwf	(powf@y+2)& (0+255),b
  5004   003A7E  0E40               	movlw	64
  5005   003A80  6F67               	movwf	(powf@y+3)& (0+255),b
  5006   003A82  C2A8  F060         	movff	_decide_action$3184,powf@x
  5007   003A86  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  5008   003A8A  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  5009   003A8E  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  5010   003A92  EC6E  F007         	call	_powf	;wreg free
  5011   003A96  C060  F2B0         	movff	?_powf,_decide_action$3186
  5012   003A9A  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  5013   003A9E  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  5014   003AA2  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  5015   003AA6                     
  5016                           ;color.c: 164:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  5017   003AA6  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  5018   003AAA  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  5019   003AAE  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  5020   003AB2  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  5021   003AB6  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  5022   003ABA  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  5023   003ABE  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  5024   003AC2  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  5025   003AC6  ECE4  F027         	call	___fladd	;wreg free
  5026   003ACA  C002  F012         	movff	?___fladd,sqrtf@x
  5027   003ACE  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5028   003AD2  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5029   003AD6  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5030   003ADA  EC59  F02C         	call	_sqrtf	;wreg free
  5031   003ADE  C012  F25E         	movff	?_sqrtf,decide_action@rgb_comp+4
  5032   003AE2  C013  F25F         	movff	?_sqrtf+1,decide_action@rgb_comp+5
  5033   003AE6  C014  F260         	movff	?_sqrtf+2,decide_action@rgb_comp+6
  5034   003AEA  C015  F261         	movff	?_sqrtf+3,decide_action@rgb_comp+7
  5035   003AEE                     
  5036                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5037   003AEE  0E50               	movlw	80
  5038   003AF0  6E06               	movwf	___fladd@a^0,c
  5039   003AF2  0E8D               	movlw	141
  5040   003AF4  6E07               	movwf	(___fladd@a+1)^0,c
  5041   003AF6  0ED7               	movlw	215
  5042   003AF8  6E08               	movwf	(___fladd@a+2)^0,c
  5043   003AFA  0EBE               	movlw	190
  5044   003AFC  6E09               	movwf	(___fladd@a+3)^0,c
  5045   003AFE  C290  F002         	movff	decide_action@green_r,___fladd@b
  5046   003B02  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5047   003B06  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5048   003B0A  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5049   003B0E  ECE4  F027         	call	___fladd	;wreg free
  5050   003B12  C002  F298         	movff	?___fladd,_decide_action$3180
  5051   003B16  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  5052   003B1A  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  5053   003B1E  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  5054   003B22                     
  5055                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5056   003B22  0EAE               	movlw	174
  5057   003B24  6E06               	movwf	___fladd@a^0,c
  5058   003B26  0E47               	movlw	71
  5059   003B28  6E07               	movwf	(___fladd@a+1)^0,c
  5060   003B2A  0EE1               	movlw	225
  5061   003B2C  6E08               	movwf	(___fladd@a+2)^0,c
  5062   003B2E  0EBD               	movlw	189
  5063   003B30  6E09               	movwf	(___fladd@a+3)^0,c
  5064   003B32  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5065   003B36  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5066   003B3A  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5067   003B3E  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5068   003B42  ECE4  F027         	call	___fladd	;wreg free
  5069   003B46  C002  F29C         	movff	?___fladd,_decide_action$3181
  5070   003B4A  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  5071   003B4E  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  5072   003B52  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  5073   003B56                     
  5074                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5075   003B56  0E00               	movlw	0
  5076   003B58  0100               	movlb	0	; () banked
  5077   003B5A  6F64               	movwf	powf@y& (0+255),b
  5078   003B5C  0E00               	movlw	0
  5079   003B5E  6F65               	movwf	(powf@y+1)& (0+255),b
  5080   003B60  0E00               	movlw	0
  5081   003B62  6F66               	movwf	(powf@y+2)& (0+255),b
  5082   003B64  0E40               	movlw	64
  5083   003B66  6F67               	movwf	(powf@y+3)& (0+255),b
  5084   003B68  C298  F060         	movff	_decide_action$3180,powf@x
  5085   003B6C  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  5086   003B70  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  5087   003B74  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  5088   003B78  EC6E  F007         	call	_powf	;wreg free
  5089   003B7C  C060  F2A0         	movff	?_powf,_decide_action$3182
  5090   003B80  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  5091   003B84  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  5092   003B88  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  5093   003B8C                     
  5094                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5095   003B8C  0E00               	movlw	0
  5096   003B8E  0100               	movlb	0	; () banked
  5097   003B90  6F64               	movwf	powf@y& (0+255),b
  5098   003B92  0E00               	movlw	0
  5099   003B94  6F65               	movwf	(powf@y+1)& (0+255),b
  5100   003B96  0E00               	movlw	0
  5101   003B98  6F66               	movwf	(powf@y+2)& (0+255),b
  5102   003B9A  0E40               	movlw	64
  5103   003B9C  6F67               	movwf	(powf@y+3)& (0+255),b
  5104   003B9E  C29C  F060         	movff	_decide_action$3181,powf@x
  5105   003BA2  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  5106   003BA6  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  5107   003BAA  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  5108   003BAE  EC6E  F007         	call	_powf	;wreg free
  5109   003BB2  C060  F2A4         	movff	?_powf,_decide_action$3183
  5110   003BB6  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  5111   003BBA  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  5112   003BBE  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  5113   003BC2                     
  5114                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5115   003BC2  0EC5               	movlw	197
  5116   003BC4  6E06               	movwf	___fladd@a^0,c
  5117   003BC6  0E20               	movlw	32
  5118   003BC8  6E07               	movwf	(___fladd@a+1)^0,c
  5119   003BCA  0EF0               	movlw	240
  5120   003BCC  6E08               	movwf	(___fladd@a+2)^0,c
  5121   003BCE  0EBE               	movlw	190
  5122   003BD0  6E09               	movwf	(___fladd@a+3)^0,c
  5123   003BD2  C294  F002         	movff	decide_action@blue_r,___fladd@b
  5124   003BD6  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5125   003BDA  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5126   003BDE  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5127   003BE2  ECE4  F027         	call	___fladd	;wreg free
  5128   003BE6  C002  F2A8         	movff	?___fladd,_decide_action$3184
  5129   003BEA  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  5130   003BEE  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  5131   003BF2  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  5132   003BF6                     
  5133                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5134   003BF6  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  5135   003BFA  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  5136   003BFE  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  5137   003C02  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  5138   003C06  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  5139   003C0A  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  5140   003C0E  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  5141   003C12  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  5142   003C16  ECE4  F027         	call	___fladd	;wreg free
  5143   003C1A  C002  F2AC         	movff	?___fladd,_decide_action$3185
  5144   003C1E  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  5145   003C22  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  5146   003C26  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  5147   003C2A                     
  5148                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5149   003C2A  0E00               	movlw	0
  5150   003C2C  0100               	movlb	0	; () banked
  5151   003C2E  6F64               	movwf	powf@y& (0+255),b
  5152   003C30  0E00               	movlw	0
  5153   003C32  6F65               	movwf	(powf@y+1)& (0+255),b
  5154   003C34  0E00               	movlw	0
  5155   003C36  6F66               	movwf	(powf@y+2)& (0+255),b
  5156   003C38  0E40               	movlw	64
  5157   003C3A  6F67               	movwf	(powf@y+3)& (0+255),b
  5158   003C3C  C2A8  F060         	movff	_decide_action$3184,powf@x
  5159   003C40  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  5160   003C44  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  5161   003C48  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  5162   003C4C  EC6E  F007         	call	_powf	;wreg free
  5163   003C50  C060  F2B0         	movff	?_powf,_decide_action$3186
  5164   003C54  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  5165   003C58  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  5166   003C5C  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  5167   003C60                     
  5168                           ;color.c: 165:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  5169   003C60  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  5170   003C64  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  5171   003C68  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  5172   003C6C  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  5173   003C70  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  5174   003C74  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  5175   003C78  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  5176   003C7C  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  5177   003C80  ECE4  F027         	call	___fladd	;wreg free
  5178   003C84  C002  F012         	movff	?___fladd,sqrtf@x
  5179   003C88  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5180   003C8C  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5181   003C90  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5182   003C94  EC59  F02C         	call	_sqrtf	;wreg free
  5183   003C98  C012  F262         	movff	?_sqrtf,decide_action@rgb_comp+8
  5184   003C9C  C013  F263         	movff	?_sqrtf+1,decide_action@rgb_comp+9
  5185   003CA0  C014  F264         	movff	?_sqrtf+2,decide_action@rgb_comp+10
  5186   003CA4  C015  F265         	movff	?_sqrtf+3,decide_action@rgb_comp+11
  5187   003CA8                     
  5188                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  5189   003CA8  0E66               	movlw	102
  5190   003CAA  6E06               	movwf	___fladd@a^0,c
  5191   003CAC  0E66               	movlw	102
  5192   003CAE  6E07               	movwf	(___fladd@a+1)^0,c
  5193   003CB0  0EA6               	movlw	166
  5194   003CB2  6E08               	movwf	(___fladd@a+2)^0,c
  5195   003CB4  0EBE               	movlw	190
  5196   003CB6  6E09               	movwf	(___fladd@a+3)^0,c
  5197   003CB8  C290  F002         	movff	decide_action@green_r,___fladd@b
  5198   003CBC  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5199   003CC0  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5200   003CC4  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5201   003CC8  ECE4  F027         	call	___fladd	;wreg free
  5202   003CCC  C002  F298         	movff	?___fladd,_decide_action$3180
  5203   003CD0  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  5204   003CD4  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  5205   003CD8  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  5206   003CDC                     
  5207                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  5208   003CDC  0E75               	movlw	117
  5209   003CDE  6E06               	movwf	___fladd@a^0,c
  5210   003CE0  0E93               	movlw	147
  5211   003CE2  6E07               	movwf	(___fladd@a+1)^0,c
  5212   003CE4  0ED8               	movlw	216
  5213   003CE6  6E08               	movwf	(___fladd@a+2)^0,c
  5214   003CE8  0EBE               	movlw	190
  5215   003CEA  6E09               	movwf	(___fladd@a+3)^0,c
  5216   003CEC  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5217   003CF0  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5218   003CF4  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5219   003CF8  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5220   003CFC  ECE4  F027         	call	___fladd	;wreg free
  5221   003D00  C002  F29C         	movff	?___fladd,_decide_action$3181
  5222   003D04  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  5223   003D08  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  5224   003D0C  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  5225   003D10                     
  5226                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  5227   003D10  0E00               	movlw	0
  5228   003D12  0100               	movlb	0	; () banked
  5229   003D14  6F64               	movwf	powf@y& (0+255),b
  5230   003D16  0E00               	movlw	0
  5231   003D18  6F65               	movwf	(powf@y+1)& (0+255),b
  5232   003D1A  0E00               	movlw	0
  5233   003D1C  6F66               	movwf	(powf@y+2)& (0+255),b
  5234   003D1E  0E40               	movlw	64
  5235   003D20  6F67               	movwf	(powf@y+3)& (0+255),b
  5236   003D22  C298  F060         	movff	_decide_action$3180,powf@x
  5237   003D26  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  5238   003D2A  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  5239   003D2E  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  5240   003D32  EC6E  F007         	call	_powf	;wreg free
  5241   003D36  C060  F2A0         	movff	?_powf,_decide_action$3182
  5242   003D3A  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  5243   003D3E  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  5244   003D42  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  5245   003D46                     
  5246                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  5247   003D46  0E00               	movlw	0
  5248   003D48  0100               	movlb	0	; () banked
  5249   003D4A  6F64               	movwf	powf@y& (0+255),b
  5250   003D4C  0E00               	movlw	0
  5251   003D4E  6F65               	movwf	(powf@y+1)& (0+255),b
  5252   003D50  0E00               	movlw	0
  5253   003D52  6F66               	movwf	(powf@y+2)& (0+255),b
  5254   003D54  0E40               	movlw	64
  5255   003D56  6F67               	movwf	(powf@y+3)& (0+255),b
  5256   003D58  C29C  F060         	movff	_decide_action$3181,powf@x
  5257   003D5C  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  5258   003D60  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  5259   003D64  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  5260   003D68  EC6E  F007         	call	_powf	;wreg free
  5261   003D6C  C060  F2A4         	movff	?_powf,_decide_action$3183
  5262   003D70  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  5263   003D74  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  5264   003D78  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  5265   003D7C                     
  5266                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  5267   003D7C  0E25               	movlw	37
  5268   003D7E  6E06               	movwf	___fladd@a^0,c
  5269   003D80  0E06               	movlw	6
  5270   003D82  6E07               	movwf	(___fladd@a+1)^0,c
  5271   003D84  0E81               	movlw	129
  5272   003D86  6E08               	movwf	(___fladd@a+2)^0,c
  5273   003D88  0EBE               	movlw	190
  5274   003D8A  6E09               	movwf	(___fladd@a+3)^0,c
  5275   003D8C  C294  F002         	movff	decide_action@blue_r,___fladd@b
  5276   003D90  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5277   003D94  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5278   003D98  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5279   003D9C  ECE4  F027         	call	___fladd	;wreg free
  5280   003DA0  C002  F2A8         	movff	?___fladd,_decide_action$3184
  5281   003DA4  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  5282   003DA8  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  5283   003DAC  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  5284   003DB0                     
  5285                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  5286   003DB0  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  5287   003DB4  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  5288   003DB8  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  5289   003DBC  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  5290   003DC0  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  5291   003DC4  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  5292   003DC8  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  5293   003DCC  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  5294   003DD0  ECE4  F027         	call	___fladd	;wreg free
  5295   003DD4  C002  F2AC         	movff	?___fladd,_decide_action$3185
  5296   003DD8  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  5297   003DDC  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  5298   003DE0  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  5299   003DE4                     
  5300                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  5301   003DE4  0E00               	movlw	0
  5302   003DE6  0100               	movlb	0	; () banked
  5303   003DE8  6F64               	movwf	powf@y& (0+255),b
  5304   003DEA  0E00               	movlw	0
  5305   003DEC  6F65               	movwf	(powf@y+1)& (0+255),b
  5306   003DEE  0E00               	movlw	0
  5307   003DF0  6F66               	movwf	(powf@y+2)& (0+255),b
  5308   003DF2  0E40               	movlw	64
  5309   003DF4  6F67               	movwf	(powf@y+3)& (0+255),b
  5310   003DF6  C2A8  F060         	movff	_decide_action$3184,powf@x
  5311   003DFA  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  5312   003DFE  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  5313   003E02  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  5314   003E06  EC6E  F007         	call	_powf	;wreg free
  5315   003E0A  C060  F2B0         	movff	?_powf,_decide_action$3186
  5316   003E0E  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  5317   003E12  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  5318   003E16  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  5319   003E1A                     
  5320                           ;color.c: 166:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  5321   003E1A  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  5322   003E1E  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  5323   003E22  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  5324   003E26  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  5325   003E2A  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  5326   003E2E  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  5327   003E32  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  5328   003E36  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  5329   003E3A  ECE4  F027         	call	___fladd	;wreg free
  5330   003E3E  C002  F012         	movff	?___fladd,sqrtf@x
  5331   003E42  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5332   003E46  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5333   003E4A  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5334   003E4E  EC59  F02C         	call	_sqrtf	;wreg free
  5335   003E52  C012  F266         	movff	?_sqrtf,decide_action@rgb_comp+12
  5336   003E56  C013  F267         	movff	?_sqrtf+1,decide_action@rgb_comp+13
  5337   003E5A  C014  F268         	movff	?_sqrtf+2,decide_action@rgb_comp+14
  5338   003E5E  C015  F269         	movff	?_sqrtf+3,decide_action@rgb_comp+15
  5339   003E62                     
  5340                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  5341   003E62  0EF0               	movlw	240
  5342   003E64  6E06               	movwf	___fladd@a^0,c
  5343   003E66  0EA7               	movlw	167
  5344   003E68  6E07               	movwf	(___fladd@a+1)^0,c
  5345   003E6A  0E86               	movlw	134
  5346   003E6C  6E08               	movwf	(___fladd@a+2)^0,c
  5347   003E6E  0EBE               	movlw	190
  5348   003E70  6E09               	movwf	(___fladd@a+3)^0,c
  5349   003E72  C290  F002         	movff	decide_action@green_r,___fladd@b
  5350   003E76  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5351   003E7A  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5352   003E7E  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5353   003E82  ECE4  F027         	call	___fladd	;wreg free
  5354   003E86  C002  F298         	movff	?___fladd,_decide_action$3180
  5355   003E8A  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  5356   003E8E  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  5357   003E92  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  5358   003E96                     
  5359                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  5360   003E96  0E08               	movlw	8
  5361   003E98  6E06               	movwf	___fladd@a^0,c
  5362   003E9A  0EAC               	movlw	172
  5363   003E9C  6E07               	movwf	(___fladd@a+1)^0,c
  5364   003E9E  0EDC               	movlw	220
  5365   003EA0  6E08               	movwf	(___fladd@a+2)^0,c
  5366   003EA2  0EBE               	movlw	190
  5367   003EA4  6E09               	movwf	(___fladd@a+3)^0,c
  5368   003EA6  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5369   003EAA  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5370   003EAE  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5371   003EB2  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5372   003EB6  ECE4  F027         	call	___fladd	;wreg free
  5373   003EBA  C002  F29C         	movff	?___fladd,_decide_action$3181
  5374   003EBE  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  5375   003EC2  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  5376   003EC6  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  5377   003ECA                     
  5378                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  5379   003ECA  0E00               	movlw	0
  5380   003ECC  0100               	movlb	0	; () banked
  5381   003ECE  6F64               	movwf	powf@y& (0+255),b
  5382   003ED0  0E00               	movlw	0
  5383   003ED2  6F65               	movwf	(powf@y+1)& (0+255),b
  5384   003ED4  0E00               	movlw	0
  5385   003ED6  6F66               	movwf	(powf@y+2)& (0+255),b
  5386   003ED8  0E40               	movlw	64
  5387   003EDA  6F67               	movwf	(powf@y+3)& (0+255),b
  5388   003EDC  C298  F060         	movff	_decide_action$3180,powf@x
  5389   003EE0  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  5390   003EE4  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  5391   003EE8  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  5392   003EEC  EC6E  F007         	call	_powf	;wreg free
  5393   003EF0  C060  F2A0         	movff	?_powf,_decide_action$3182
  5394   003EF4  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  5395   003EF8  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  5396   003EFC  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  5397   003F00                     
  5398                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  5399   003F00  0E00               	movlw	0
  5400   003F02  0100               	movlb	0	; () banked
  5401   003F04  6F64               	movwf	powf@y& (0+255),b
  5402   003F06  0E00               	movlw	0
  5403   003F08  6F65               	movwf	(powf@y+1)& (0+255),b
  5404   003F0A  0E00               	movlw	0
  5405   003F0C  6F66               	movwf	(powf@y+2)& (0+255),b
  5406   003F0E  0E40               	movlw	64
  5407   003F10  6F67               	movwf	(powf@y+3)& (0+255),b
  5408   003F12  C29C  F060         	movff	_decide_action$3181,powf@x
  5409   003F16  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  5410   003F1A  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  5411   003F1E  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  5412   003F22  EC6E  F007         	call	_powf	;wreg free
  5413   003F26  C060  F2A4         	movff	?_powf,_decide_action$3183
  5414   003F2A  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  5415   003F2E  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  5416   003F32  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  5417   003F36                     
  5418                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  5419   003F36  0E08               	movlw	8
  5420   003F38  6E06               	movwf	___fladd@a^0,c
  5421   003F3A  0EAC               	movlw	172
  5422   003F3C  6E07               	movwf	(___fladd@a+1)^0,c
  5423   003F3E  0E9C               	movlw	156
  5424   003F40  6E08               	movwf	(___fladd@a+2)^0,c
  5425   003F42  0EBE               	movlw	190
  5426   003F44  6E09               	movwf	(___fladd@a+3)^0,c
  5427   003F46  C294  F002         	movff	decide_action@blue_r,___fladd@b
  5428   003F4A  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5429   003F4E  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5430   003F52  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5431   003F56  ECE4  F027         	call	___fladd	;wreg free
  5432   003F5A  C002  F2A8         	movff	?___fladd,_decide_action$3184
  5433   003F5E  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  5434   003F62  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  5435   003F66  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  5436   003F6A                     
  5437                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  5438   003F6A  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  5439   003F6E  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  5440   003F72  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  5441   003F76  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  5442   003F7A  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  5443   003F7E  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  5444   003F82  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  5445   003F86  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  5446   003F8A  ECE4  F027         	call	___fladd	;wreg free
  5447   003F8E  C002  F2AC         	movff	?___fladd,_decide_action$3185
  5448   003F92  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  5449   003F96  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  5450   003F9A  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  5451   003F9E                     
  5452                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  5453   003F9E  0E00               	movlw	0
  5454   003FA0  0100               	movlb	0	; () banked
  5455   003FA2  6F64               	movwf	powf@y& (0+255),b
  5456   003FA4  0E00               	movlw	0
  5457   003FA6  6F65               	movwf	(powf@y+1)& (0+255),b
  5458   003FA8  0E00               	movlw	0
  5459   003FAA  6F66               	movwf	(powf@y+2)& (0+255),b
  5460   003FAC  0E40               	movlw	64
  5461   003FAE  6F67               	movwf	(powf@y+3)& (0+255),b
  5462   003FB0  C2A8  F060         	movff	_decide_action$3184,powf@x
  5463   003FB4  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  5464   003FB8  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  5465   003FBC  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  5466   003FC0  EC6E  F007         	call	_powf	;wreg free
  5467   003FC4  C060  F2B0         	movff	?_powf,_decide_action$3186
  5468   003FC8  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  5469   003FCC  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  5470   003FD0  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  5471   003FD4                     
  5472                           ;color.c: 167:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  5473   003FD4  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  5474   003FD8  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  5475   003FDC  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  5476   003FE0  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  5477   003FE4  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  5478   003FE8  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  5479   003FEC  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  5480   003FF0  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  5481   003FF4  ECE4  F027         	call	___fladd	;wreg free
  5482   003FF8  C002  F012         	movff	?___fladd,sqrtf@x
  5483   003FFC  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5484   004000  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5485   004004  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5486   004008  EC59  F02C         	call	_sqrtf	;wreg free
  5487   00400C  C012  F26A         	movff	?_sqrtf,decide_action@rgb_comp+16
  5488   004010  C013  F26B         	movff	?_sqrtf+1,decide_action@rgb_comp+17
  5489   004014  C014  F26C         	movff	?_sqrtf+2,decide_action@rgb_comp+18
  5490   004018  C015  F26D         	movff	?_sqrtf+3,decide_action@rgb_comp+19
  5491   00401C                     
  5492                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  5493   00401C  0EBA               	movlw	186
  5494   00401E  6E06               	movwf	___fladd@a^0,c
  5495   004020  0E49               	movlw	73
  5496   004022  6E07               	movwf	(___fladd@a+1)^0,c
  5497   004024  0E0C               	movlw	12
  5498   004026  6E08               	movwf	(___fladd@a+2)^0,c
  5499   004028  0EBE               	movlw	190
  5500   00402A  6E09               	movwf	(___fladd@a+3)^0,c
  5501   00402C  C290  F002         	movff	decide_action@green_r,___fladd@b
  5502   004030  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5503   004034  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5504   004038  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5505   00403C  ECE4  F027         	call	___fladd	;wreg free
  5506   004040  C002  F298         	movff	?___fladd,_decide_action$3180
  5507   004044  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  5508   004048  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  5509   00404C  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  5510   004050                     
  5511                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  5512   004050  0EE7               	movlw	231
  5513   004052  6E06               	movwf	___fladd@a^0,c
  5514   004054  0EFB               	movlw	251
  5515   004056  6E07               	movwf	(___fladd@a+1)^0,c
  5516   004058  0E29               	movlw	41
  5517   00405A  6E08               	movwf	(___fladd@a+2)^0,c
  5518   00405C  0EBF               	movlw	191
  5519   00405E  6E09               	movwf	(___fladd@a+3)^0,c
  5520   004060  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5521   004064  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5522   004068  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5523   00406C  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5524   004070  ECE4  F027         	call	___fladd	;wreg free
  5525   004074  C002  F29C         	movff	?___fladd,_decide_action$3181
  5526   004078  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  5527   00407C  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  5528   004080  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  5529   004084                     
  5530                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  5531   004084  0E00               	movlw	0
  5532   004086  0100               	movlb	0	; () banked
  5533   004088  6F64               	movwf	powf@y& (0+255),b
  5534   00408A  0E00               	movlw	0
  5535   00408C  6F65               	movwf	(powf@y+1)& (0+255),b
  5536   00408E  0E00               	movlw	0
  5537   004090  6F66               	movwf	(powf@y+2)& (0+255),b
  5538   004092  0E40               	movlw	64
  5539   004094  6F67               	movwf	(powf@y+3)& (0+255),b
  5540   004096  C298  F060         	movff	_decide_action$3180,powf@x
  5541   00409A  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  5542   00409E  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  5543   0040A2  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  5544   0040A6  EC6E  F007         	call	_powf	;wreg free
  5545   0040AA  C060  F2A0         	movff	?_powf,_decide_action$3182
  5546   0040AE  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  5547   0040B2  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  5548   0040B6  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  5549   0040BA                     
  5550                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  5551   0040BA  0E00               	movlw	0
  5552   0040BC  0100               	movlb	0	; () banked
  5553   0040BE  6F64               	movwf	powf@y& (0+255),b
  5554   0040C0  0E00               	movlw	0
  5555   0040C2  6F65               	movwf	(powf@y+1)& (0+255),b
  5556   0040C4  0E00               	movlw	0
  5557   0040C6  6F66               	movwf	(powf@y+2)& (0+255),b
  5558   0040C8  0E40               	movlw	64
  5559   0040CA  6F67               	movwf	(powf@y+3)& (0+255),b
  5560   0040CC  C29C  F060         	movff	_decide_action$3181,powf@x
  5561   0040D0  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  5562   0040D4  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  5563   0040D8  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  5564   0040DC  EC6E  F007         	call	_powf	;wreg free
  5565   0040E0  C060  F2A4         	movff	?_powf,_decide_action$3183
  5566   0040E4  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  5567   0040E8  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  5568   0040EC  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  5569   0040F0                     
  5570                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  5571   0040F0  0E83               	movlw	131
  5572   0040F2  6E06               	movwf	___fladd@a^0,c
  5573   0040F4  0EC0               	movlw	192
  5574   0040F6  6E07               	movwf	(___fladd@a+1)^0,c
  5575   0040F8  0E4A               	movlw	74
  5576   0040FA  6E08               	movwf	(___fladd@a+2)^0,c
  5577   0040FC  0EBE               	movlw	190
  5578   0040FE  6E09               	movwf	(___fladd@a+3)^0,c
  5579   004100  C294  F002         	movff	decide_action@blue_r,___fladd@b
  5580   004104  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5581   004108  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5582   00410C  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5583   004110  ECE4  F027         	call	___fladd	;wreg free
  5584   004114  C002  F2A8         	movff	?___fladd,_decide_action$3184
  5585   004118  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  5586   00411C  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  5587   004120  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  5588   004124                     
  5589                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  5590   004124  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  5591   004128  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  5592   00412C  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  5593   004130  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  5594   004134  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  5595   004138  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  5596   00413C  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  5597   004140  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  5598   004144  ECE4  F027         	call	___fladd	;wreg free
  5599   004148  C002  F2AC         	movff	?___fladd,_decide_action$3185
  5600   00414C  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  5601   004150  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  5602   004154  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  5603   004158                     
  5604                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  5605   004158  0E00               	movlw	0
  5606   00415A  0100               	movlb	0	; () banked
  5607   00415C  6F64               	movwf	powf@y& (0+255),b
  5608   00415E  0E00               	movlw	0
  5609   004160  6F65               	movwf	(powf@y+1)& (0+255),b
  5610   004162  0E00               	movlw	0
  5611   004164  6F66               	movwf	(powf@y+2)& (0+255),b
  5612   004166  0E40               	movlw	64
  5613   004168  6F67               	movwf	(powf@y+3)& (0+255),b
  5614   00416A  C2A8  F060         	movff	_decide_action$3184,powf@x
  5615   00416E  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  5616   004172  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  5617   004176  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  5618   00417A  EC6E  F007         	call	_powf	;wreg free
  5619   00417E  C060  F2B0         	movff	?_powf,_decide_action$3186
  5620   004182  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  5621   004186  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  5622   00418A  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  5623   00418E                     
  5624                           ;color.c: 168:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  5625   00418E  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  5626   004192  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  5627   004196  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  5628   00419A  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  5629   00419E  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  5630   0041A2  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  5631   0041A6  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  5632   0041AA  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  5633   0041AE  ECE4  F027         	call	___fladd	;wreg free
  5634   0041B2  C002  F012         	movff	?___fladd,sqrtf@x
  5635   0041B6  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5636   0041BA  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5637   0041BE  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5638   0041C2  EC59  F02C         	call	_sqrtf	;wreg free
  5639   0041C6  C012  F26E         	movff	?_sqrtf,decide_action@rgb_comp+20
  5640   0041CA  C013  F26F         	movff	?_sqrtf+1,decide_action@rgb_comp+21
  5641   0041CE  C014  F270         	movff	?_sqrtf+2,decide_action@rgb_comp+22
  5642   0041D2  C015  F271         	movff	?_sqrtf+3,decide_action@rgb_comp+23
  5643   0041D6                     
  5644                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  5645   0041D6  0E5A               	movlw	90
  5646   0041D8  6E06               	movwf	___fladd@a^0,c
  5647   0041DA  0E64               	movlw	100
  5648   0041DC  6E07               	movwf	(___fladd@a+1)^0,c
  5649   0041DE  0EBB               	movlw	187
  5650   0041E0  6E08               	movwf	(___fladd@a+2)^0,c
  5651   0041E2  0EBE               	movlw	190
  5652   0041E4  6E09               	movwf	(___fladd@a+3)^0,c
  5653   0041E6  C290  F002         	movff	decide_action@green_r,___fladd@b
  5654   0041EA  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5655   0041EE  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5656   0041F2  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5657   0041F6  ECE4  F027         	call	___fladd	;wreg free
  5658   0041FA  C002  F298         	movff	?___fladd,_decide_action$3180
  5659   0041FE  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  5660   004202  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  5661   004206  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  5662   00420A                     
  5663                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  5664   00420A  0E83               	movlw	131
  5665   00420C  6E06               	movwf	___fladd@a^0,c
  5666   00420E  0EC0               	movlw	192
  5667   004210  6E07               	movwf	(___fladd@a+1)^0,c
  5668   004212  0E8A               	movlw	138
  5669   004214  6E08               	movwf	(___fladd@a+2)^0,c
  5670   004216  0EBE               	movlw	190
  5671   004218  6E09               	movwf	(___fladd@a+3)^0,c
  5672   00421A  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5673   00421E  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5674   004222  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5675   004226  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5676   00422A  ECE4  F027         	call	___fladd	;wreg free
  5677   00422E  C002  F29C         	movff	?___fladd,_decide_action$3181
  5678   004232  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  5679   004236  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  5680   00423A  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  5681   00423E                     
  5682                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  5683   00423E  0E00               	movlw	0
  5684   004240  0100               	movlb	0	; () banked
  5685   004242  6F64               	movwf	powf@y& (0+255),b
  5686   004244  0E00               	movlw	0
  5687   004246  6F65               	movwf	(powf@y+1)& (0+255),b
  5688   004248  0E00               	movlw	0
  5689   00424A  6F66               	movwf	(powf@y+2)& (0+255),b
  5690   00424C  0E40               	movlw	64
  5691   00424E  6F67               	movwf	(powf@y+3)& (0+255),b
  5692   004250  C298  F060         	movff	_decide_action$3180,powf@x
  5693   004254  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  5694   004258  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  5695   00425C  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  5696   004260  EC6E  F007         	call	_powf	;wreg free
  5697   004264  C060  F2A0         	movff	?_powf,_decide_action$3182
  5698   004268  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  5699   00426C  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  5700   004270  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  5701   004274                     
  5702                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  5703   004274  0E00               	movlw	0
  5704   004276  0100               	movlb	0	; () banked
  5705   004278  6F64               	movwf	powf@y& (0+255),b
  5706   00427A  0E00               	movlw	0
  5707   00427C  6F65               	movwf	(powf@y+1)& (0+255),b
  5708   00427E  0E00               	movlw	0
  5709   004280  6F66               	movwf	(powf@y+2)& (0+255),b
  5710   004282  0E40               	movlw	64
  5711   004284  6F67               	movwf	(powf@y+3)& (0+255),b
  5712   004286  C29C  F060         	movff	_decide_action$3181,powf@x
  5713   00428A  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  5714   00428E  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  5715   004292  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  5716   004296  EC6E  F007         	call	_powf	;wreg free
  5717   00429A  C060  F2A4         	movff	?_powf,_decide_action$3183
  5718   00429E  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  5719   0042A2  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  5720   0042A6  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  5721   0042AA                     
  5722                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  5723   0042AA  0E23               	movlw	35
  5724   0042AC  6E06               	movwf	___fladd@a^0,c
  5725   0042AE  0EDB               	movlw	219
  5726   0042B0  6E07               	movwf	(___fladd@a+1)^0,c
  5727   0042B2  0EB9               	movlw	185
  5728   0042B4  6E08               	movwf	(___fladd@a+2)^0,c
  5729   0042B6  0EBE               	movlw	190
  5730   0042B8  6E09               	movwf	(___fladd@a+3)^0,c
  5731   0042BA  C294  F002         	movff	decide_action@blue_r,___fladd@b
  5732   0042BE  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5733   0042C2  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5734   0042C6  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5735   0042CA  ECE4  F027         	call	___fladd	;wreg free
  5736   0042CE  C002  F2A8         	movff	?___fladd,_decide_action$3184
  5737   0042D2  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  5738   0042D6  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  5739   0042DA  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  5740   0042DE                     
  5741                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  5742   0042DE  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  5743   0042E2  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  5744   0042E6  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  5745   0042EA  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  5746   0042EE  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  5747   0042F2  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  5748   0042F6  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  5749   0042FA  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  5750   0042FE  ECE4  F027         	call	___fladd	;wreg free
  5751   004302  C002  F2AC         	movff	?___fladd,_decide_action$3185
  5752   004306  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  5753   00430A  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  5754   00430E  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  5755   004312                     
  5756                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  5757   004312  0E00               	movlw	0
  5758   004314  0100               	movlb	0	; () banked
  5759   004316  6F64               	movwf	powf@y& (0+255),b
  5760   004318  0E00               	movlw	0
  5761   00431A  6F65               	movwf	(powf@y+1)& (0+255),b
  5762   00431C  0E00               	movlw	0
  5763   00431E  6F66               	movwf	(powf@y+2)& (0+255),b
  5764   004320  0E40               	movlw	64
  5765   004322  6F67               	movwf	(powf@y+3)& (0+255),b
  5766   004324  C2A8  F060         	movff	_decide_action$3184,powf@x
  5767   004328  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  5768   00432C  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  5769   004330  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  5770   004334  EC6E  F007         	call	_powf	;wreg free
  5771   004338  C060  F2B0         	movff	?_powf,_decide_action$3186
  5772   00433C  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  5773   004340  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  5774   004344  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  5775   004348                     
  5776                           ;color.c: 169:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  5777   004348  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  5778   00434C  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  5779   004350  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  5780   004354  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  5781   004358  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  5782   00435C  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  5783   004360  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  5784   004364  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  5785   004368  ECE4  F027         	call	___fladd	;wreg free
  5786   00436C  C002  F012         	movff	?___fladd,sqrtf@x
  5787   004370  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5788   004374  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5789   004378  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5790   00437C  EC59  F02C         	call	_sqrtf	;wreg free
  5791   004380  C012  F272         	movff	?_sqrtf,decide_action@rgb_comp+24
  5792   004384  C013  F273         	movff	?_sqrtf+1,decide_action@rgb_comp+25
  5793   004388  C014  F274         	movff	?_sqrtf+2,decide_action@rgb_comp+26
  5794   00438C  C015  F275         	movff	?_sqrtf+3,decide_action@rgb_comp+27
  5795   004390                     
  5796                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  5797   004390  0E1F               	movlw	31
  5798   004392  6E06               	movwf	___fladd@a^0,c
  5799   004394  0E85               	movlw	133
  5800   004396  6E07               	movwf	(___fladd@a+1)^0,c
  5801   004398  0EAB               	movlw	171
  5802   00439A  6E08               	movwf	(___fladd@a+2)^0,c
  5803   00439C  0EBE               	movlw	190
  5804   00439E  6E09               	movwf	(___fladd@a+3)^0,c
  5805   0043A0  C290  F002         	movff	decide_action@green_r,___fladd@b
  5806   0043A4  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5807   0043A8  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5808   0043AC  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5809   0043B0  ECE4  F027         	call	___fladd	;wreg free
  5810   0043B4  C002  F298         	movff	?___fladd,_decide_action$3180
  5811   0043B8  C003  F299         	movff	?___fladd+1,_decide_action$3180+1
  5812   0043BC  C004  F29A         	movff	?___fladd+2,_decide_action$3180+2
  5813   0043C0  C005  F29B         	movff	?___fladd+3,_decide_action$3180+3
  5814   0043C4                     
  5815                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  5816   0043C4  0EB0               	movlw	176
  5817   0043C6  6E06               	movwf	___fladd@a^0,c
  5818   0043C8  0E72               	movlw	114
  5819   0043CA  6E07               	movwf	(___fladd@a+1)^0,c
  5820   0043CC  0EA8               	movlw	168
  5821   0043CE  6E08               	movwf	(___fladd@a+2)^0,c
  5822   0043D0  0EBE               	movlw	190
  5823   0043D2  6E09               	movwf	(___fladd@a+3)^0,c
  5824   0043D4  C28C  F002         	movff	decide_action@red_r,___fladd@b
  5825   0043D8  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5826   0043DC  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5827   0043E0  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5828   0043E4  ECE4  F027         	call	___fladd	;wreg free
  5829   0043E8  C002  F29C         	movff	?___fladd,_decide_action$3181
  5830   0043EC  C003  F29D         	movff	?___fladd+1,_decide_action$3181+1
  5831   0043F0  C004  F29E         	movff	?___fladd+2,_decide_action$3181+2
  5832   0043F4  C005  F29F         	movff	?___fladd+3,_decide_action$3181+3
  5833   0043F8                     
  5834                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  5835   0043F8  0E00               	movlw	0
  5836   0043FA  0100               	movlb	0	; () banked
  5837   0043FC  6F64               	movwf	powf@y& (0+255),b
  5838   0043FE  0E00               	movlw	0
  5839   004400  6F65               	movwf	(powf@y+1)& (0+255),b
  5840   004402  0E00               	movlw	0
  5841   004404  6F66               	movwf	(powf@y+2)& (0+255),b
  5842   004406  0E40               	movlw	64
  5843   004408  6F67               	movwf	(powf@y+3)& (0+255),b
  5844   00440A  C298  F060         	movff	_decide_action$3180,powf@x
  5845   00440E  C299  F061         	movff	_decide_action$3180+1,powf@x+1
  5846   004412  C29A  F062         	movff	_decide_action$3180+2,powf@x+2
  5847   004416  C29B  F063         	movff	_decide_action$3180+3,powf@x+3
  5848   00441A  EC6E  F007         	call	_powf	;wreg free
  5849   00441E  C060  F2A0         	movff	?_powf,_decide_action$3182
  5850   004422  C061  F2A1         	movff	?_powf+1,_decide_action$3182+1
  5851   004426  C062  F2A2         	movff	?_powf+2,_decide_action$3182+2
  5852   00442A  C063  F2A3         	movff	?_powf+3,_decide_action$3182+3
  5853   00442E                     
  5854                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  5855   00442E  0E00               	movlw	0
  5856   004430  0100               	movlb	0	; () banked
  5857   004432  6F64               	movwf	powf@y& (0+255),b
  5858   004434  0E00               	movlw	0
  5859   004436  6F65               	movwf	(powf@y+1)& (0+255),b
  5860   004438  0E00               	movlw	0
  5861   00443A  6F66               	movwf	(powf@y+2)& (0+255),b
  5862   00443C  0E40               	movlw	64
  5863   00443E  6F67               	movwf	(powf@y+3)& (0+255),b
  5864   004440  C29C  F060         	movff	_decide_action$3181,powf@x
  5865   004444  C29D  F061         	movff	_decide_action$3181+1,powf@x+1
  5866   004448  C29E  F062         	movff	_decide_action$3181+2,powf@x+2
  5867   00444C  C29F  F063         	movff	_decide_action$3181+3,powf@x+3
  5868   004450  EC6E  F007         	call	_powf	;wreg free
  5869   004454  C060  F2A4         	movff	?_powf,_decide_action$3183
  5870   004458  C061  F2A5         	movff	?_powf+1,_decide_action$3183+1
  5871   00445C  C062  F2A6         	movff	?_powf+2,_decide_action$3183+2
  5872   004460  C063  F2A7         	movff	?_powf+3,_decide_action$3183+3
  5873   004464                     
  5874                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  5875   004464  0E1F               	movlw	31
  5876   004466  6E06               	movwf	___fladd@a^0,c
  5877   004468  0E85               	movlw	133
  5878   00446A  6E07               	movwf	(___fladd@a+1)^0,c
  5879   00446C  0EAB               	movlw	171
  5880   00446E  6E08               	movwf	(___fladd@a+2)^0,c
  5881   004470  0EBE               	movlw	190
  5882   004472  6E09               	movwf	(___fladd@a+3)^0,c
  5883   004474  C294  F002         	movff	decide_action@blue_r,___fladd@b
  5884   004478  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5885   00447C  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5886   004480  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5887   004484  ECE4  F027         	call	___fladd	;wreg free
  5888   004488  C002  F2A8         	movff	?___fladd,_decide_action$3184
  5889   00448C  C003  F2A9         	movff	?___fladd+1,_decide_action$3184+1
  5890   004490  C004  F2AA         	movff	?___fladd+2,_decide_action$3184+2
  5891   004494  C005  F2AB         	movff	?___fladd+3,_decide_action$3184+3
  5892   004498                     
  5893                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  5894   004498  C2A0  F006         	movff	_decide_action$3182,___fladd@a
  5895   00449C  C2A1  F007         	movff	_decide_action$3182+1,___fladd@a+1
  5896   0044A0  C2A2  F008         	movff	_decide_action$3182+2,___fladd@a+2
  5897   0044A4  C2A3  F009         	movff	_decide_action$3182+3,___fladd@a+3
  5898   0044A8  C2A4  F002         	movff	_decide_action$3183,___fladd@b
  5899   0044AC  C2A5  F003         	movff	_decide_action$3183+1,___fladd@b+1
  5900   0044B0  C2A6  F004         	movff	_decide_action$3183+2,___fladd@b+2
  5901   0044B4  C2A7  F005         	movff	_decide_action$3183+3,___fladd@b+3
  5902   0044B8  ECE4  F027         	call	___fladd	;wreg free
  5903   0044BC  C002  F2AC         	movff	?___fladd,_decide_action$3185
  5904   0044C0  C003  F2AD         	movff	?___fladd+1,_decide_action$3185+1
  5905   0044C4  C004  F2AE         	movff	?___fladd+2,_decide_action$3185+2
  5906   0044C8  C005  F2AF         	movff	?___fladd+3,_decide_action$3185+3
  5907   0044CC                     
  5908                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  5909   0044CC  0E00               	movlw	0
  5910   0044CE  0100               	movlb	0	; () banked
  5911   0044D0  6F64               	movwf	powf@y& (0+255),b
  5912   0044D2  0E00               	movlw	0
  5913   0044D4  6F65               	movwf	(powf@y+1)& (0+255),b
  5914   0044D6  0E00               	movlw	0
  5915   0044D8  6F66               	movwf	(powf@y+2)& (0+255),b
  5916   0044DA  0E40               	movlw	64
  5917   0044DC  6F67               	movwf	(powf@y+3)& (0+255),b
  5918   0044DE  C2A8  F060         	movff	_decide_action$3184,powf@x
  5919   0044E2  C2A9  F061         	movff	_decide_action$3184+1,powf@x+1
  5920   0044E6  C2AA  F062         	movff	_decide_action$3184+2,powf@x+2
  5921   0044EA  C2AB  F063         	movff	_decide_action$3184+3,powf@x+3
  5922   0044EE  EC6E  F007         	call	_powf	;wreg free
  5923   0044F2  C060  F2B0         	movff	?_powf,_decide_action$3186
  5924   0044F6  C061  F2B1         	movff	?_powf+1,_decide_action$3186+1
  5925   0044FA  C062  F2B2         	movff	?_powf+2,_decide_action$3186+2
  5926   0044FE  C063  F2B3         	movff	?_powf+3,_decide_action$3186+3
  5927   004502                     
  5928                           ;color.c: 170:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  5929   004502  C2AC  F002         	movff	_decide_action$3185,___fladd@b
  5930   004506  C2AD  F003         	movff	_decide_action$3185+1,___fladd@b+1
  5931   00450A  C2AE  F004         	movff	_decide_action$3185+2,___fladd@b+2
  5932   00450E  C2AF  F005         	movff	_decide_action$3185+3,___fladd@b+3
  5933   004512  C2B0  F006         	movff	_decide_action$3186,___fladd@a
  5934   004516  C2B1  F007         	movff	_decide_action$3186+1,___fladd@a+1
  5935   00451A  C2B2  F008         	movff	_decide_action$3186+2,___fladd@a+2
  5936   00451E  C2B3  F009         	movff	_decide_action$3186+3,___fladd@a+3
  5937   004522  ECE4  F027         	call	___fladd	;wreg free
  5938   004526  C002  F012         	movff	?___fladd,sqrtf@x
  5939   00452A  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5940   00452E  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5941   004532  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5942   004536  EC59  F02C         	call	_sqrtf	;wreg free
  5943   00453A  C012  F276         	movff	?_sqrtf,decide_action@rgb_comp+28
  5944   00453E  C013  F277         	movff	?_sqrtf+1,decide_action@rgb_comp+29
  5945   004542  C014  F278         	movff	?_sqrtf+2,decide_action@rgb_comp+30
  5946   004546  C015  F279         	movff	?_sqrtf+3,decide_action@rgb_comp+31
  5947   00454A                     
  5948                           ;color.c: 172:     action = 0;
  5949   00454A  0E00               	movlw	0
  5950   00454C  0102               	movlb	2	; () banked
  5951   00454E  6F7A               	movwf	decide_action@action& (0+255),b
  5952   004550                     
  5953                           ; BSR set to: 2
  5954                           ;color.c: 173:     for(char i = 0; i < 8; i +=1){
  5955   004550  0E00               	movlw	0
  5956   004552  6F7F               	movwf	decide_action@i& (0+255),b
  5957   004554                     l8688:
  5958                           
  5959                           ; BSR set to: 2
  5960   004554  0E07               	movlw	7
  5961   004556  657F               	cpfsgt	decide_action@i& (0+255),b
  5962   004558  EFB0  F022         	goto	u9201
  5963   00455C  EFB2  F022         	goto	u9200
  5964   004560                     u9201:
  5965   004560  EFB4  F022         	goto	l8692
  5966   004564                     u9200:
  5967   004564  EFE3  F022         	goto	l8700
  5968   004568                     l8692:
  5969                           
  5970                           ; BSR set to: 2
  5971                           ;color.c: 174:         if(rgb_comp[i] < rgb_comp[action]){
  5972   004568  517F               	movf	decide_action@i& (0+255),w,b
  5973   00456A  0D04               	mullw	4
  5974   00456C  0E5A               	movlw	low decide_action@rgb_comp
  5975   00456E  24F3               	addwf	243,w,c
  5976   004570  6ED9               	movwf	fsr2l,c
  5977   004572  0E02               	movlw	high decide_action@rgb_comp
  5978   004574  20F4               	addwfc	prodh,w,c
  5979   004576  6EDA               	movwf	fsr2h,c
  5980   004578  CFDE F04C          	movff	postinc2,___flge@ff1
  5981   00457C  CFDE F04D          	movff	postinc2,___flge@ff1+1
  5982   004580  CFDE F04E          	movff	postinc2,___flge@ff1+2
  5983   004584  CFDE F04F          	movff	postinc2,___flge@ff1+3
  5984   004588  517A               	movf	decide_action@action& (0+255),w,b
  5985   00458A  0D04               	mullw	4
  5986   00458C  0E5A               	movlw	low decide_action@rgb_comp
  5987   00458E  24F3               	addwf	243,w,c
  5988   004590  6ED9               	movwf	fsr2l,c
  5989   004592  0E02               	movlw	high decide_action@rgb_comp
  5990   004594  20F4               	addwfc	prodh,w,c
  5991   004596  6EDA               	movwf	fsr2h,c
  5992   004598  CFDE F050          	movff	postinc2,___flge@ff2
  5993   00459C  CFDE F051          	movff	postinc2,___flge@ff2+1
  5994   0045A0  CFDE F052          	movff	postinc2,___flge@ff2+2
  5995   0045A4  CFDE F053          	movff	postinc2,___flge@ff2+3
  5996   0045A8  EC86  F037         	call	___flge	;wreg free
  5997   0045AC  B0D8               	btfsc	status,0,c
  5998   0045AE  EFDB  F022         	goto	u9211
  5999   0045B2  EFDD  F022         	goto	u9210
  6000   0045B6                     u9211:
  6001   0045B6  EFDF  F022         	goto	l8696
  6002   0045BA                     u9210:
  6003   0045BA                     
  6004                           ;color.c: 175:             action = i;
  6005   0045BA  C27F  F27A         	movff	decide_action@i,decide_action@action
  6006   0045BE                     l8696:
  6007                           
  6008                           ;color.c: 177:     }
  6009   0045BE  0102               	movlb	2	; () banked
  6010   0045C0  2B7F               	incf	decide_action@i& (0+255),f,b
  6011   0045C2  EFAA  F022         	goto	l8688
  6012   0045C6                     l8700:
  6013                           
  6014                           ; BSR set to: 2
  6015                           ;color.c: 180:     color_writetoaddr(0x01, 0xFF);
  6016   0045C6  0EFF               	movlw	255
  6017   0045C8  6E04               	movwf	color_writetoaddr@value^0,c
  6018   0045CA  0E01               	movlw	1
  6019   0045CC  ECA1  F040         	call	_color_writetoaddr
  6020                           
  6021                           ;color.c: 181:     color_writetoaddr(0x03, 0xFF);
  6022   0045D0  0EFF               	movlw	255
  6023   0045D2  6E04               	movwf	color_writetoaddr@value^0,c
  6024   0045D4  0E03               	movlw	3
  6025   0045D6  ECA1  F040         	call	_color_writetoaddr
  6026   0045DA                     
  6027                           ;color.c: 183:     return action;
  6028   0045DA  0102               	movlb	2	; () banked
  6029   0045DC  517A               	movf	decide_action@action& (0+255),w,b
  6030   0045DE                     
  6031                           ; BSR set to: 2
  6032   0045DE  0012               	return		;funcret
  6033   0045E0                     __end_of_decide_action:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function _sprintf *****************
  6037 ;; Defined at:
  6038 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  s               2   63[BANK0 ] PTR unsigned char 
  6041 ;;		 -> main@blue_val(20), main@green_val(20), main@red_val(20), main@clear_val(20), 
  6042 ;;		 -> decide_action@blue_val(20), decide_action@green_val(20), decide_action@red_val(20), 
  6043 ;;  fmt             1   65[BANK0 ] PTR const unsigned char 
  6044 ;;		 -> STR_7(15), STR_6(14), STR_5(12), STR_4(14), 
  6045 ;;		 -> STR_3(14), STR_2(15), STR_1(13), 
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;  f              12   71[BANK0 ] struct _IO_FILE
  6048 ;;  ret             2    0        int 
  6049 ;;  ap              1   70[BANK0 ] PTR void [1]
  6050 ;;		 -> ?_sprintf(2), 
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  2   63[BANK0 ] int 
  6053 ;; Registers used:
  6054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6060 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6061 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6063 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6064 ;;Total ram usage:       20 bytes
  6065 ;; Hardware stack levels used: 1
  6066 ;; Hardware stack levels required when called: 9
  6067 ;; This function calls:
  6068 ;;		_vfprintf
  6069 ;; This function is called by:
  6070 ;;		_decide_action
  6071 ;;		_main
  6072 ;; This function uses a non-reentrant model
  6073 ;;
  6074                           
  6075                           	psect	text18
  6076   007F40                     __ptext18:
  6077                           	callstack 0
  6078   007F40                     _sprintf:
  6079                           	callstack 21
  6080   007F40  0EA2               	movlw	low (?_sprintf+3)
  6081   007F42  0100               	movlb	0	; () banked
  6082   007F44  6FA6               	movwf	sprintf@ap& (0+255),b
  6083   007F46  C09F  F0A7         	movff	sprintf@s,sprintf@f
  6084   007F4A  C0A0  F0A8         	movff	sprintf@s+1,sprintf@f+1
  6085   007F4E                     
  6086                           ; BSR set to: 0
  6087   007F4E  0E00               	movlw	0
  6088   007F50  6FAB               	movwf	(sprintf@f+4)& (0+255),b
  6089   007F52  0E00               	movlw	0
  6090   007F54  6FAA               	movwf	(sprintf@f+3)& (0+255),b
  6091   007F56                     
  6092                           ; BSR set to: 0
  6093   007F56  0E00               	movlw	0
  6094   007F58  6FB2               	movwf	(sprintf@f+11)& (0+255),b
  6095   007F5A  0E00               	movlw	0
  6096   007F5C  6FB1               	movwf	(sprintf@f+10)& (0+255),b
  6097   007F5E                     
  6098                           ; BSR set to: 0
  6099   007F5E  0EA7               	movlw	low sprintf@f
  6100   007F60  6F9C               	movwf	vfprintf@fp& (0+255),b
  6101   007F62  C0A1  F09D         	movff	sprintf@fmt,vfprintf@fmt
  6102   007F66  0EA6               	movlw	low sprintf@ap
  6103   007F68  6F9E               	movwf	vfprintf@ap& (0+255),b
  6104   007F6A  EC39  F03F         	call	_vfprintf	;wreg free
  6105   007F6E  0100               	movlb	0	; () banked
  6106   007F70  51AA               	movf	(sprintf@f+3)& (0+255),w,b
  6107   007F72  259F               	addwf	sprintf@s& (0+255),w,b
  6108   007F74  6ED9               	movwf	fsr2l,c
  6109   007F76  51AB               	movf	(sprintf@f+4)& (0+255),w,b
  6110   007F78  21A0               	addwfc	(sprintf@s+1)& (0+255),w,b
  6111   007F7A  6EDA               	movwf	fsr2h,c
  6112   007F7C  6ADF               	clrf	indf2,c
  6113   007F7E                     
  6114                           ; BSR set to: 0
  6115   007F7E  0012               	return		;funcret
  6116   007F80                     __end_of_sprintf:
  6117                           	callstack 0
  6118                           
  6119 ;; *************** function _vfprintf *****************
  6120 ;; Defined at:
  6121 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  fp              1   60[BANK0 ] PTR struct _IO_FILE
  6124 ;;		 -> sprintf@f(12), 
  6125 ;;  fmt             1   61[BANK0 ] PTR const unsigned char 
  6126 ;;		 -> STR_7(15), STR_6(14), STR_5(12), STR_4(14), 
  6127 ;;		 -> STR_3(14), STR_2(15), STR_1(13), 
  6128 ;;  ap              1   62[BANK0 ] PTR PTR void 
  6129 ;;		 -> sprintf@ap(1), 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  cfmt            1   91[COMRAM] PTR unsigned char 
  6132 ;;		 -> STR_7(15), STR_6(14), STR_5(12), STR_4(14), 
  6133 ;;		 -> STR_3(14), STR_2(15), STR_1(13), 
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  2   60[BANK0 ] int 
  6136 ;; Registers used:
  6137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6143 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6146 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6147 ;;Total ram usage:        4 bytes
  6148 ;; Hardware stack levels used: 1
  6149 ;; Hardware stack levels required when called: 8
  6150 ;; This function calls:
  6151 ;;		_vfpfcnvrt
  6152 ;; This function is called by:
  6153 ;;		_sprintf
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text19
  6158   007E72                     __ptext19:
  6159                           	callstack 0
  6160   007E72                     _vfprintf:
  6161                           	callstack 21
  6162   007E72                     
  6163                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6164   007E72  C09D  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  6165                           
  6166                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6167   007E76  EF46  F03F         	goto	l8040
  6168   007E7A                     l8038:
  6169                           
  6170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6171   007E7A  C09C  F092         	movff	vfprintf@fp,vfpfcnvrt@fp
  6172   007E7E  0E5C               	movlw	low vfprintf@cfmt
  6173   007E80  0100               	movlb	0	; () banked
  6174   007E82  6F93               	movwf	vfpfcnvrt@fmt& (0+255),b
  6175   007E84  C09E  F094         	movff	vfprintf@ap,vfpfcnvrt@ap
  6176   007E88  EC15  F030         	call	_vfpfcnvrt	;wreg free
  6177   007E8C                     l8040:
  6178                           
  6179                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6180   007E8C  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  6181   007E90                     	if	1	;There is more than 1 active tblptr byte
  6182   007E90  0E0E               	movlw	high __smallconst
  6183   007E92  6EF7               	movwf	tblptrh,c
  6184   007E94                     	endif
  6185   007E94                     	if	0	;tblptru may be non-zero
  6186   007E94                     	endif
  6187   007E94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6188   007E94  0E00               	movlw	low (__smallconst shr (0+16))
  6189   007E96  6EF8               	movwf	tblptru,c
  6190   007E98                     	endif
  6191   007E98  0008               	tblrd		*
  6192   007E9A  50F5               	movf	tablat,w,c
  6193   007E9C  0900               	iorlw	0
  6194   007E9E  A4D8               	btfss	status,2,c
  6195   007EA0  EF54  F03F         	goto	u8511
  6196   007EA4  EF56  F03F         	goto	u8510
  6197   007EA8                     u8511:
  6198   007EA8  EF3D  F03F         	goto	l8038
  6199   007EAC                     u8510:
  6200   007EAC                     
  6201                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6202   007EAC  0E00               	movlw	0
  6203   007EAE  0100               	movlb	0	; () banked
  6204   007EB0  6F9D               	movwf	(?_vfprintf+1)& (0+255),b
  6205   007EB2  0E00               	movlw	0
  6206   007EB4  6F9C               	movwf	?_vfprintf& (0+255),b
  6207   007EB6                     
  6208                           ; BSR set to: 0
  6209   007EB6  0012               	return		;funcret
  6210   007EB8                     __end_of_vfprintf:
  6211                           	callstack 0
  6212                           
  6213 ;; *************** function _vfpfcnvrt *****************
  6214 ;; Defined at:
  6215 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  fp              1   50[BANK0 ] PTR struct _IO_FILE
  6218 ;;		 -> sprintf@f(12), 
  6219 ;;  fmt             1   51[BANK0 ] PTR PTR unsigned char 
  6220 ;;		 -> vfprintf@cfmt(1), 
  6221 ;;  ap              1   52[BANK0 ] PTR PTR void 
  6222 ;;		 -> sprintf@ap(1), 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  convarg         4   54[BANK0 ] struct .
  6225 ;;  c               1   59[BANK0 ] unsigned char 
  6226 ;;  cp              1   58[BANK0 ] PTR unsigned char 
  6227 ;;		 -> STR_7(15), STR_6(14), STR_5(12), STR_4(14), 
  6228 ;;		 -> STR_3(14), STR_2(15), STR_1(13), 
  6229 ;;  done            1   53[BANK0 ] _Bool 
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6239 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6240 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6241 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6242 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6243 ;;Total ram usage:       12 bytes
  6244 ;; Hardware stack levels used: 1
  6245 ;; Hardware stack levels required when called: 7
  6246 ;; This function calls:
  6247 ;;		___awdiv
  6248 ;;		___awmod
  6249 ;;		_abs
  6250 ;;		_efgtoa
  6251 ;;		_fputc
  6252 ;; This function is called by:
  6253 ;;		_vfprintf
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text20
  6258   00602A                     __ptext20:
  6259                           	callstack 0
  6260   00602A                     _vfpfcnvrt:
  6261                           	callstack 21
  6262   00602A                     
  6263                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6264   00602A  0100               	movlb	0	; () banked
  6265   00602C  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6266   00602E  6ED9               	movwf	fsr2l,c
  6267   006030  6ADA               	clrf	fsr2h,c
  6268   006032  CFDF FFF6          	movff	indf2,tblptrl
  6269   006036                     	if	1	;There is more than 1 active tblptr byte
  6270   006036  0E0E               	movlw	high __smallconst
  6271   006038  6EF7               	movwf	tblptrh,c
  6272   00603A                     	endif
  6273   00603A                     	if	0	;tblptru may be non-zero
  6274   00603A                     	endif
  6275   00603A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6276   00603A  0E00               	movlw	low (__smallconst shr (0+16))
  6277   00603C  6EF8               	movwf	tblptru,c
  6278   00603E                     	endif
  6279   00603E  0008               	tblrd		*
  6280   006040  50F5               	movf	tablat,w,c
  6281   006042  0A25               	xorlw	37
  6282   006044  A4D8               	btfss	status,2,c
  6283   006046  EF27  F030         	goto	u8401
  6284   00604A  EF29  F030         	goto	u8400
  6285   00604E                     u8401:
  6286   00604E  EFA8  F031         	goto	l8018
  6287   006052                     u8400:
  6288   006052                     
  6289                           ; BSR set to: 0
  6290                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6291   006052  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6292   006054  6ED9               	movwf	fsr2l,c
  6293   006056  6ADA               	clrf	fsr2h,c
  6294   006058  2ADF               	incf	indf2,f,c
  6295   00605A                     
  6296                           ; BSR set to: 0
  6297                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6298   00605A  0E00               	movlw	0
  6299   00605C  6FDA               	movwf	(_width+1)& (0+255),b
  6300   00605E  0E00               	movlw	0
  6301   006060  6FD9               	movwf	_width& (0+255),b
  6302   006062  C0D9  F0DD         	movff	_width,_flags
  6303   006066                     
  6304                           ; BSR set to: 0
  6305                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6306   006066  69DB               	setf	_prec& (0+255),b
  6307   006068  69DC               	setf	(_prec+1)& (0+255),b
  6308   00606A                     
  6309                           ; BSR set to: 0
  6310                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6311   00606A  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6312   00606C  6ED9               	movwf	fsr2l,c
  6313   00606E  6ADA               	clrf	fsr2h,c
  6314   006070  50DF               	movf	indf2,w,c
  6315   006072  6F9A               	movwf	vfpfcnvrt@cp& (0+255),b
  6316   006074                     
  6317                           ; BSR set to: 0
  6318                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6319   006074  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6320   006078                     	if	1	;There is more than 1 active tblptr byte
  6321   006078  0E0E               	movlw	high __smallconst
  6322   00607A  6EF7               	movwf	tblptrh,c
  6323   00607C                     	endif
  6324   00607C                     	if	0	;tblptru may be non-zero
  6325   00607C                     	endif
  6326   00607C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6327   00607C  0E00               	movlw	low (__smallconst shr (0+16))
  6328   00607E  6EF8               	movwf	tblptru,c
  6329   006080                     	endif
  6330   006080  0008               	tblrd		*
  6331   006082  50F5               	movf	tablat,w,c
  6332   006084  0A64               	xorlw	100
  6333   006086  B4D8               	btfsc	status,2,c
  6334   006088  EF48  F030         	goto	u8411
  6335   00608C  EF4A  F030         	goto	u8410
  6336   006090                     u8411:
  6337   006090  EF5A  F030         	goto	l7954
  6338   006094                     u8410:
  6339   006094                     
  6340                           ; BSR set to: 0
  6341   006094  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6342   006098                     	if	1	;There is more than 1 active tblptr byte
  6343   006098  0E0E               	movlw	high __smallconst
  6344   00609A  6EF7               	movwf	tblptrh,c
  6345   00609C                     	endif
  6346   00609C                     	if	0	;tblptru may be non-zero
  6347   00609C                     	endif
  6348   00609C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6349   00609C  0E00               	movlw	low (__smallconst shr (0+16))
  6350   00609E  6EF8               	movwf	tblptru,c
  6351   0060A0                     	endif
  6352   0060A0  0008               	tblrd		*
  6353   0060A2  50F5               	movf	tablat,w,c
  6354   0060A4  0A69               	xorlw	105
  6355   0060A6  A4D8               	btfss	status,2,c
  6356   0060A8  EF58  F030         	goto	u8421
  6357   0060AC  EF5A  F030         	goto	u8420
  6358   0060B0                     u8421:
  6359   0060B0  EFE8  F030         	goto	l7980
  6360   0060B4                     u8420:
  6361   0060B4                     l7954:
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6365   0060B4  5194               	movf	vfpfcnvrt@ap& (0+255),w,b
  6366   0060B6  6ED9               	movwf	fsr2l,c
  6367   0060B8  6ADA               	clrf	fsr2h,c
  6368   0060BA  0E02               	movlw	2
  6369   0060BC  26DF               	addwf	indf2,f,c
  6370   0060BE  5CDF               	subwf	indf2,w,c
  6371   0060C0  6ED9               	movwf	fsr2l,c
  6372   0060C2  6ADA               	clrf	fsr2h,c
  6373   0060C4  CFDE F096          	movff	postinc2,vfpfcnvrt@convarg
  6374   0060C8  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg+1
  6375   0060CC                     
  6376                           ; BSR set to: 0
  6377                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6378   0060CC  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6379   0060CE  6ED9               	movwf	fsr2l,c
  6380   0060D0  6ADA               	clrf	fsr2h,c
  6381   0060D2  299A               	incf	vfpfcnvrt@cp& (0+255),w,b
  6382   0060D4  6EDF               	movwf	indf2,c
  6383   0060D6                     
  6384                           ; BSR set to: 0
  6385                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  6386   0060D6  0E50               	movlw	80
  6387   0060D8  6F9B               	movwf	vfpfcnvrt@c& (0+255),b
  6388                           
  6389                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  6390   0060DA  BF97               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  6391   0060DC  EF72  F030         	goto	u8431
  6392   0060E0  EF75  F030         	goto	u8430
  6393   0060E4                     u8431:
  6394   0060E4  0E01               	movlw	1
  6395   0060E6  EF76  F030         	goto	u8440
  6396   0060EA                     u8430:
  6397   0060EA  0E00               	movlw	0
  6398   0060EC                     u8440:
  6399   0060EC  6F95               	movwf	vfpfcnvrt@done& (0+255),b
  6400   0060EE                     l7960:
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  6404   0060EE  079B               	decf	vfpfcnvrt@c& (0+255),f,b
  6405   0060F0  0E00               	movlw	low _dbuf
  6406   0060F2  259B               	addwf	vfpfcnvrt@c& (0+255),w,b
  6407   0060F4  6ED9               	movwf	fsr2l,c
  6408   0060F6  6ADA               	clrf	fsr2h,c
  6409   0060F8  0E04               	movlw	high _dbuf
  6410   0060FA  22DA               	addwfc	fsr2h,f,c
  6411   0060FC  C096  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
  6412   006100  C097  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  6413   006104  0E00               	movlw	0
  6414   006106  6E05               	movwf	(___awmod@divisor+1)^0,c
  6415   006108  0E0A               	movlw	10
  6416   00610A  6E04               	movwf	___awmod@divisor^0,c
  6417   00610C  ECFB  F03B         	call	___awmod	;wreg free
  6418   006110  C002  F008         	movff	?___awmod,abs@a
  6419   006114  C003  F009         	movff	?___awmod+1,abs@a+1
  6420   006118  EC1B  F040         	call	_abs	;wreg free
  6421   00611C  5008               	movf	?_abs^0,w,c
  6422   00611E  0F30               	addlw	48
  6423   006120  6EDF               	movwf	indf2,c
  6424   006122                     
  6425                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  6426   006122  C096  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  6427   006126  C097  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  6428   00612A  0E00               	movlw	0
  6429   00612C  6E05               	movwf	(___awdiv@divisor+1)^0,c
  6430   00612E  0E0A               	movlw	10
  6431   006130  6E04               	movwf	___awdiv@divisor^0,c
  6432   006132  ECDE  F03A         	call	___awdiv	;wreg free
  6433   006136  C002  F096         	movff	?___awdiv,vfpfcnvrt@convarg
  6434   00613A  C003  F097         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  6435   00613E                     
  6436                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  6437   00613E  0100               	movlb	0	; () banked
  6438   006140  5196               	movf	vfpfcnvrt@convarg& (0+255),w,b
  6439   006142  1197               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  6440   006144  B4D8               	btfsc	status,2,c
  6441   006146  EFA7  F030         	goto	u8451
  6442   00614A  EFA9  F030         	goto	u8450
  6443   00614E                     u8451:
  6444   00614E  EFB1  F030         	goto	l7968
  6445   006152                     u8450:
  6446   006152                     
  6447                           ; BSR set to: 0
  6448   006152  519B               	movf	vfpfcnvrt@c& (0+255),w,b
  6449   006154  A4D8               	btfss	status,2,c
  6450   006156  EFAF  F030         	goto	u8461
  6451   00615A  EFB1  F030         	goto	u8460
  6452   00615E                     u8461:
  6453   00615E  EF77  F030         	goto	l7960
  6454   006162                     u8460:
  6455   006162                     l7968:
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  6459   006162  519B               	movf	vfpfcnvrt@c& (0+255),w,b
  6460   006164  B4D8               	btfsc	status,2,c
  6461   006166  EFB7  F030         	goto	u8471
  6462   00616A  EFB9  F030         	goto	u8470
  6463   00616E                     u8471:
  6464   00616E  EFDD  F030         	goto	l7978
  6465   006172                     u8470:
  6466   006172                     
  6467                           ; BSR set to: 0
  6468   006172  5195               	movf	vfpfcnvrt@done& (0+255),w,b
  6469   006174  B4D8               	btfsc	status,2,c
  6470   006176  EFBF  F030         	goto	u8481
  6471   00617A  EFC1  F030         	goto	u8480
  6472   00617E                     u8481:
  6473   00617E  EFDD  F030         	goto	l7978
  6474   006182                     u8480:
  6475   006182                     
  6476                           ; BSR set to: 0
  6477                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  6478   006182  079B               	decf	vfpfcnvrt@c& (0+255),f,b
  6479   006184  0E00               	movlw	low _dbuf
  6480   006186  259B               	addwf	vfpfcnvrt@c& (0+255),w,b
  6481   006188  6ED9               	movwf	fsr2l,c
  6482   00618A  6ADA               	clrf	fsr2h,c
  6483   00618C  0E04               	movlw	high _dbuf
  6484   00618E  22DA               	addwfc	fsr2h,f,c
  6485   006190  0E2D               	movlw	45
  6486   006192  6EDF               	movwf	indf2,c
  6487   006194  EFDD  F030         	goto	l7978
  6488   006198                     l7974:
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  6492   006198  0E00               	movlw	low _dbuf
  6493   00619A  259B               	addwf	vfpfcnvrt@c& (0+255),w,b
  6494   00619C  6ED9               	movwf	fsr2l,c
  6495   00619E  6ADA               	clrf	fsr2h,c
  6496   0061A0  0E04               	movlw	high _dbuf
  6497   0061A2  22DA               	addwfc	fsr2h,f,c
  6498   0061A4  50DF               	movf	indf2,w,c
  6499   0061A6  6E5A               	movwf	??_vfpfcnvrt^0,c
  6500   0061A8  505A               	movf	??_vfpfcnvrt^0,w,c
  6501   0061AA  6E02               	movwf	fputc@c^0,c
  6502   0061AC  6A03               	clrf	(fputc@c+1)^0,c
  6503   0061AE  C092  F004         	movff	vfpfcnvrt@fp,fputc@fp
  6504   0061B2  EC9E  F03B         	call	_fputc	;wreg free
  6505   0061B6  0100               	movlb	0	; () banked
  6506   0061B8  2B9B               	incf	vfpfcnvrt@c& (0+255),f,b
  6507   0061BA                     l7978:
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  6511   0061BA  0E50               	movlw	80
  6512   0061BC  199B               	xorwf	vfpfcnvrt@c& (0+255),w,b
  6513   0061BE  A4D8               	btfss	status,2,c
  6514   0061C0  EFE4  F030         	goto	u8491
  6515   0061C4  EFE6  F030         	goto	u8490
  6516   0061C8                     u8491:
  6517   0061C8  EFCC  F030         	goto	l7974
  6518   0061CC                     u8490:
  6519   0061CC  EFBB  F031         	goto	l1333
  6520   0061D0                     l7980:
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  6524   0061D0  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6525   0061D2  6ED9               	movwf	fsr2l,c
  6526   0061D4  6ADA               	clrf	fsr2h,c
  6527   0061D6  50DF               	movf	indf2,w,c
  6528   0061D8  6F9A               	movwf	vfpfcnvrt@cp& (0+255),b
  6529   0061DA                     
  6530                           ; BSR set to: 0
  6531                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  6532   0061DA  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6533   0061DE                     	if	1	;There is more than 1 active tblptr byte
  6534   0061DE  0E0E               	movlw	high __smallconst
  6535   0061E0  6EF7               	movwf	tblptrh,c
  6536   0061E2                     	endif
  6537   0061E2                     	if	0	;tblptru may be non-zero
  6538   0061E2                     	endif
  6539   0061E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6540   0061E2  0E00               	movlw	low (__smallconst shr (0+16))
  6541   0061E4  6EF8               	movwf	tblptru,c
  6542   0061E6                     	endif
  6543   0061E6  0008               	tblrd		*
  6544   0061E8  CFF5 F09B          	movff	tablat,vfpfcnvrt@c
  6545                           
  6546                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  6547   0061EC  EF03  F031         	goto	l7992
  6548   0061F0                     l7984:
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  6552   0061F0  2B9A               	incf	vfpfcnvrt@cp& (0+255),f,b
  6553                           
  6554                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  6555   0061F2  EF1C  F031         	goto	l7994
  6556   0061F6                     l7986:
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  6560   0061F6  0E6C               	movlw	108
  6561   0061F8  6F9B               	movwf	vfpfcnvrt@c& (0+255),b
  6562                           
  6563                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  6564   0061FA  EF1C  F031         	goto	l7994
  6565   0061FE                     l7988:
  6566                           
  6567                           ; BSR set to: 0
  6568                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  6569   0061FE  0E00               	movlw	0
  6570   006200  6F9B               	movwf	vfpfcnvrt@c& (0+255),b
  6571                           
  6572                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  6573   006202  EF1C  F031         	goto	l7994
  6574   006206                     l7992:
  6575                           
  6576                           ; BSR set to: 0
  6577   006206  519B               	movf	vfpfcnvrt@c& (0+255),w,b
  6578   006208  6E5A               	movwf	??_vfpfcnvrt^0,c
  6579   00620A  6A5B               	clrf	(??_vfpfcnvrt+1)^0,c
  6580                           
  6581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6582                           ; Switch size 1, requested type "simple"
  6583                           ; Number of cases is 1, Range of values is 0 to 0
  6584                           ; switch strategies available:
  6585                           ; Name         Instructions Cycles
  6586                           ; simple_byte            4     3 (average)
  6587                           ;	Chosen strategy is simple_byte
  6588   00620C  505B               	movf	(??_vfpfcnvrt+1)^0,w,c
  6589   00620E  0A00               	xorlw	0	; case 0
  6590   006210  B4D8               	btfsc	status,2,c
  6591   006212  EF0D  F031         	goto	l9036
  6592   006216  EFFF  F030         	goto	l7988
  6593   00621A                     l9036:
  6594                           
  6595                           ; BSR set to: 0
  6596                           ; Switch size 1, requested type "simple"
  6597                           ; Number of cases is 3, Range of values is 76 to 108
  6598                           ; switch strategies available:
  6599                           ; Name         Instructions Cycles
  6600                           ; simple_byte           10     6 (average)
  6601                           ;	Chosen strategy is simple_byte
  6602   00621A  505A               	movf	??_vfpfcnvrt^0,w,c
  6603   00621C  0A4C               	xorlw	76	; case 76
  6604   00621E  B4D8               	btfsc	status,2,c
  6605   006220  EFF8  F030         	goto	l7984
  6606   006224  0A2A               	xorlw	42	; case 102
  6607   006226  B4D8               	btfsc	status,2,c
  6608   006228  EFFB  F030         	goto	l7986
  6609   00622C  0A0A               	xorlw	10	; case 108
  6610   00622E  B4D8               	btfsc	status,2,c
  6611   006230  EFF8  F030         	goto	l7984
  6612   006234  EFFF  F030         	goto	l7988
  6613   006238                     l7994:
  6614                           
  6615                           ; BSR set to: 0
  6616   006238  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6617   00623C                     	if	1	;There is more than 1 active tblptr byte
  6618   00623C  0E0E               	movlw	high __smallconst
  6619   00623E  6EF7               	movwf	tblptrh,c
  6620   006240                     	endif
  6621   006240                     	if	0	;tblptru may be non-zero
  6622   006240                     	endif
  6623   006240                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6624   006240  0E00               	movlw	low (__smallconst shr (0+16))
  6625   006242  6EF8               	movwf	tblptru,c
  6626   006244                     	endif
  6627   006244  0008               	tblrd		*
  6628   006246  50F5               	movf	tablat,w,c
  6629   006248  0A66               	xorlw	102
  6630   00624A  A4D8               	btfss	status,2,c
  6631   00624C  EF2A  F031         	goto	u8501
  6632   006250  EF2C  F031         	goto	u8500
  6633   006254                     u8501:
  6634   006254  EFA1  F031         	goto	l8014
  6635   006258                     u8500:
  6636   006258  EF56  F031         	goto	l8002
  6637   00625C                     l7996:
  6638                           
  6639                           ; BSR set to: 0
  6640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6641   00625C  5194               	movf	vfpfcnvrt@ap& (0+255),w,b
  6642   00625E  6ED9               	movwf	fsr2l,c
  6643   006260  6ADA               	clrf	fsr2h,c
  6644   006262  CFDF F05A          	movff	indf2,??_vfpfcnvrt
  6645   006266  0E04               	movlw	4
  6646   006268  26DF               	addwf	indf2,f,c
  6647   00626A  505A               	movf	??_vfpfcnvrt^0,w,c
  6648   00626C  6ED9               	movwf	fsr2l,c
  6649   00626E  6ADA               	clrf	fsr2h,c
  6650   006270  CFDE F096          	movff	postinc2,vfpfcnvrt@convarg
  6651   006274  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg+1
  6652   006278  CFDE F098          	movff	postinc2,vfpfcnvrt@convarg+2
  6653   00627C  CFDE F099          	movff	postinc2,vfpfcnvrt@convarg+3
  6654                           
  6655                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  6656   006280  EF6B  F031         	goto	l8004
  6657   006284                     l7998:
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6661   006284  5194               	movf	vfpfcnvrt@ap& (0+255),w,b
  6662   006286  6ED9               	movwf	fsr2l,c
  6663   006288  6ADA               	clrf	fsr2h,c
  6664   00628A  CFDF F05A          	movff	indf2,??_vfpfcnvrt
  6665   00628E  0E04               	movlw	4
  6666   006290  26DF               	addwf	indf2,f,c
  6667   006292  505A               	movf	??_vfpfcnvrt^0,w,c
  6668   006294  6ED9               	movwf	fsr2l,c
  6669   006296  6ADA               	clrf	fsr2h,c
  6670   006298  CFDE F096          	movff	postinc2,vfpfcnvrt@convarg
  6671   00629C  CFDE F097          	movff	postinc2,vfpfcnvrt@convarg+1
  6672   0062A0  CFDE F098          	movff	postinc2,vfpfcnvrt@convarg+2
  6673   0062A4  CFDE F099          	movff	postinc2,vfpfcnvrt@convarg+3
  6674                           
  6675                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  6676   0062A8  EF6B  F031         	goto	l8004
  6677   0062AC                     l8002:
  6678                           
  6679                           ; BSR set to: 0
  6680   0062AC  519B               	movf	vfpfcnvrt@c& (0+255),w,b
  6681   0062AE  6E5A               	movwf	??_vfpfcnvrt^0,c
  6682   0062B0  6A5B               	clrf	(??_vfpfcnvrt+1)^0,c
  6683                           
  6684                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6685                           ; Switch size 1, requested type "simple"
  6686                           ; Number of cases is 1, Range of values is 0 to 0
  6687                           ; switch strategies available:
  6688                           ; Name         Instructions Cycles
  6689                           ; simple_byte            4     3 (average)
  6690                           ;	Chosen strategy is simple_byte
  6691   0062B2  505B               	movf	(??_vfpfcnvrt+1)^0,w,c
  6692   0062B4  0A00               	xorlw	0	; case 0
  6693   0062B6  B4D8               	btfsc	status,2,c
  6694   0062B8  EF60  F031         	goto	l9038
  6695   0062BC  EF6B  F031         	goto	l8004
  6696   0062C0                     l9038:
  6697                           
  6698                           ; BSR set to: 0
  6699                           ; Switch size 1, requested type "simple"
  6700                           ; Number of cases is 2, Range of values is 76 to 108
  6701                           ; switch strategies available:
  6702                           ; Name         Instructions Cycles
  6703                           ; simple_byte            7     4 (average)
  6704                           ;	Chosen strategy is simple_byte
  6705   0062C0  505A               	movf	??_vfpfcnvrt^0,w,c
  6706   0062C2  0A4C               	xorlw	76	; case 76
  6707   0062C4  B4D8               	btfsc	status,2,c
  6708   0062C6  EF42  F031         	goto	l7998
  6709   0062CA  0A20               	xorlw	32	; case 108
  6710   0062CC  B4D8               	btfsc	status,2,c
  6711   0062CE  EF2E  F031         	goto	l7996
  6712   0062D2  EF6B  F031         	goto	l8004
  6713   0062D6                     l8004:
  6714                           
  6715                           ; BSR set to: 0
  6716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  6717   0062D6  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6718   0062D8  6ED9               	movwf	fsr2l,c
  6719   0062DA  6ADA               	clrf	fsr2h,c
  6720   0062DC  299A               	incf	vfpfcnvrt@cp& (0+255),w,b
  6721   0062DE  6EDF               	movwf	indf2,c
  6722                           
  6723                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  6724   0062E0  EF89  F031         	goto	l8012
  6725   0062E4                     l8006:
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  6729   0062E4  C092  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  6730   0062E8  C096  F061         	movff	vfpfcnvrt@convarg,efgtoa@f
  6731   0062EC  C097  F062         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  6732   0062F0  C098  F063         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  6733   0062F4  C099  F064         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  6734   0062F8  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6735   0062FC                     	if	1	;There is more than 1 active tblptr byte
  6736   0062FC  0E0E               	movlw	high __smallconst
  6737   0062FE  6EF7               	movwf	tblptrh,c
  6738   006300                     	endif
  6739   006300                     	if	0	;tblptru may be non-zero
  6740   006300                     	endif
  6741   006300                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6742   006300  0E00               	movlw	low (__smallconst shr (0+16))
  6743   006302  6EF8               	movwf	tblptru,c
  6744   006304                     	endif
  6745   006304  0008               	tblrd		*
  6746   006306  CFF5 F065          	movff	tablat,efgtoa@c
  6747   00630A  ECF0  F022         	call	_efgtoa	;wreg free
  6748   00630E  EFBB  F031         	goto	l1333
  6749   006312                     l8012:
  6750                           
  6751                           ; BSR set to: 0
  6752   006312  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6753   006316                     	if	1	;There is more than 1 active tblptr byte
  6754   006316  0E0E               	movlw	high __smallconst
  6755   006318  6EF7               	movwf	tblptrh,c
  6756   00631A                     	endif
  6757   00631A                     	if	0	;tblptru may be non-zero
  6758   00631A                     	endif
  6759   00631A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6760   00631A  0E00               	movlw	low (__smallconst shr (0+16))
  6761   00631C  6EF8               	movwf	tblptru,c
  6762   00631E                     	endif
  6763   00631E  0008               	tblrd		*
  6764   006320  50F5               	movf	tablat,w,c
  6765   006322  6E5A               	movwf	??_vfpfcnvrt^0,c
  6766   006324  6A5B               	clrf	(??_vfpfcnvrt+1)^0,c
  6767                           
  6768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6769                           ; Switch size 1, requested type "simple"
  6770                           ; Number of cases is 1, Range of values is 0 to 0
  6771                           ; switch strategies available:
  6772                           ; Name         Instructions Cycles
  6773                           ; simple_byte            4     3 (average)
  6774                           ;	Chosen strategy is simple_byte
  6775   006326  505B               	movf	(??_vfpfcnvrt+1)^0,w,c
  6776   006328  0A00               	xorlw	0	; case 0
  6777   00632A  B4D8               	btfsc	status,2,c
  6778   00632C  EF9A  F031         	goto	l9040
  6779   006330  EFA1  F031         	goto	l8014
  6780   006334                     l9040:
  6781                           
  6782                           ; BSR set to: 0
  6783                           ; Switch size 1, requested type "simple"
  6784                           ; Number of cases is 1, Range of values is 102 to 102
  6785                           ; switch strategies available:
  6786                           ; Name         Instructions Cycles
  6787                           ; simple_byte            4     3 (average)
  6788                           ;	Chosen strategy is simple_byte
  6789   006334  505A               	movf	??_vfpfcnvrt^0,w,c
  6790   006336  0A66               	xorlw	102	; case 102
  6791   006338  B4D8               	btfsc	status,2,c
  6792   00633A  EF72  F031         	goto	l8006
  6793   00633E  EFA1  F031         	goto	l8014
  6794   006342                     l8014:
  6795                           
  6796                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6797   006342  0100               	movlb	0	; () banked
  6798   006344  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6799   006346  6ED9               	movwf	fsr2l,c
  6800   006348  6ADA               	clrf	fsr2h,c
  6801   00634A  2ADF               	incf	indf2,f,c
  6802   00634C  EFBB  F031         	goto	l1333
  6803   006350                     l8018:
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6807   006350  5193               	movf	vfpfcnvrt@fmt& (0+255),w,b
  6808   006352  6ED9               	movwf	fsr2l,c
  6809   006354  6ADA               	clrf	fsr2h,c
  6810   006356  CFDF FFF6          	movff	indf2,tblptrl
  6811   00635A                     	if	1	;There is more than 1 active tblptr byte
  6812   00635A  0E0E               	movlw	high __smallconst
  6813   00635C  6EF7               	movwf	tblptrh,c
  6814   00635E                     	endif
  6815   00635E                     	if	0	;tblptru may be non-zero
  6816   00635E                     	endif
  6817   00635E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6818   00635E  0E00               	movlw	low (__smallconst shr (0+16))
  6819   006360  6EF8               	movwf	tblptru,c
  6820   006362                     	endif
  6821   006362  0008               	tblrd		*
  6822   006364  50F5               	movf	tablat,w,c
  6823   006366  6E02               	movwf	fputc@c^0,c
  6824   006368  6A03               	clrf	(fputc@c+1)^0,c
  6825   00636A  C092  F004         	movff	vfpfcnvrt@fp,fputc@fp
  6826   00636E  EC9E  F03B         	call	_fputc	;wreg free
  6827   006372  EFA1  F031         	goto	l8014
  6828   006376                     l1333:
  6829   006376  0012               	return		;funcret
  6830   006378                     __end_of_vfpfcnvrt:
  6831                           	callstack 0
  6832                           
  6833 ;; *************** function _efgtoa *****************
  6834 ;; Defined at:
  6835 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  6838 ;;		 -> sprintf@f(12), 
  6839 ;;  f               4    1[BANK0 ] PTR struct _IO_FILE
  6840 ;;  c               1    5[BANK0 ] unsigned char 
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;  u               4   46[BANK0 ] struct flui
  6843 ;;  g               4   40[BANK0 ] struct flui
  6844 ;;  l               4   35[BANK0 ] struct flui
  6845 ;;  h               4   31[BANK0 ] struct flui
  6846 ;;  ou              4   25[BANK0 ] struct flui
  6847 ;;  n               2   44[BANK0 ] int 
  6848 ;;  i               2   29[BANK0 ] int 
  6849 ;;  w               2   23[BANK0 ] int 
  6850 ;;  e               2   21[BANK0 ] int 
  6851 ;;  m               2   19[BANK0 ] int 
  6852 ;;  d               2   17[BANK0 ] int 
  6853 ;;  t               2   10[BANK0 ] int 
  6854 ;;  p               2    8[BANK0 ] int 
  6855 ;;  ne              2    6[BANK0 ] int 
  6856 ;;  sign            1   39[BANK0 ] unsigned char 
  6857 ;;  nmode           1   16[BANK0 ] unsigned char 
  6858 ;;  mode            1   15[BANK0 ] unsigned char 
  6859 ;;  pp              1   14[BANK0 ] unsigned char 
  6860 ;;  esign           1    0        unsigned char 
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  1    wreg      void 
  6863 ;; Registers used:
  6864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6870 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6871 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6872 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6873 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6874 ;;Total ram usage:       52 bytes
  6875 ;; Hardware stack levels used: 1
  6876 ;; Hardware stack levels required when called: 6
  6877 ;; This function calls:
  6878 ;;		___fladd
  6879 ;;		___fldiv
  6880 ;;		___fleq
  6881 ;;		___flge
  6882 ;;		___flmul
  6883 ;;		___flneg
  6884 ;;		___flsub
  6885 ;;		___fltol
  6886 ;;		___fpclassifyf
  6887 ;;		_floorf
  6888 ;;		_labs
  6889 ;;		_memcpy
  6890 ;;		_pad
  6891 ;;		_strcpy
  6892 ;; This function is called by:
  6893 ;;		_vfpfcnvrt
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	text21
  6898   0045E0                     __ptext21:
  6899                           	callstack 0
  6900   0045E0                     _efgtoa:
  6901                           	callstack 21
  6902   0045E0                     
  6903                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  6904   0045E0  0E00               	movlw	0
  6905   0045E2  0100               	movlb	0	; () banked
  6906   0045E4  6F87               	movwf	efgtoa@sign& (0+255),b
  6907   0045E6                     
  6908                           ; BSR set to: 0
  6909                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  6910   0045E6  C061  F088         	movff	efgtoa@f,efgtoa@g
  6911   0045EA  C062  F089         	movff	efgtoa@f+1,efgtoa@g+1
  6912   0045EE  C063  F08A         	movff	efgtoa@f+2,efgtoa@g+2
  6913   0045F2  C064  F08B         	movff	efgtoa@f+3,efgtoa@g+3
  6914   0045F6                     
  6915                           ; BSR set to: 0
  6916                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  6917   0045F6  BF8B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  6918   0045F8  EF02  F023         	goto	u8070
  6919   0045FC  EF00  F023         	goto	u8071
  6920   004600                     u8071:
  6921   004600  EF16  F023         	goto	l7724
  6922   004604                     u8070:
  6923   004604                     
  6924                           ; BSR set to: 0
  6925                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  6926   004604  0E01               	movlw	1
  6927   004606  6F87               	movwf	efgtoa@sign& (0+255),b
  6928   004608                     
  6929                           ; BSR set to: 0
  6930                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  6931   004608  C088  F002         	movff	efgtoa@g,___flneg@f1
  6932   00460C  C089  F003         	movff	efgtoa@g+1,___flneg@f1+1
  6933   004610  C08A  F004         	movff	efgtoa@g+2,___flneg@f1+2
  6934   004614  C08B  F005         	movff	efgtoa@g+3,___flneg@f1+3
  6935   004618  ECFF  F03F         	call	___flneg	;wreg free
  6936   00461C  C002  F088         	movff	?___flneg,efgtoa@g
  6937   004620  C003  F089         	movff	?___flneg+1,efgtoa@g+1
  6938   004624  C004  F08A         	movff	?___flneg+2,efgtoa@g+2
  6939   004628  C005  F08B         	movff	?___flneg+3,efgtoa@g+3
  6940   00462C                     l7724:
  6941                           
  6942                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  6943   00462C  0E00               	movlw	0
  6944   00462E  0100               	movlb	0	; () banked
  6945   004630  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  6946   004632  0E00               	movlw	0
  6947   004634  6F8C               	movwf	efgtoa@n& (0+255),b
  6948   004636                     
  6949                           ; BSR set to: 0
  6950                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  6951   004636  C0D9  F077         	movff	_width,efgtoa@w
  6952   00463A  C0DA  F078         	movff	_width+1,efgtoa@w+1
  6953   00463E                     
  6954                           ; BSR set to: 0
  6955                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  6956   00463E  5187               	movf	efgtoa@sign& (0+255),w,b
  6957   004640  B4D8               	btfsc	status,2,c
  6958   004642  EF25  F023         	goto	u8081
  6959   004646  EF27  F023         	goto	u8080
  6960   00464A                     u8081:
  6961   00464A  EF3B  F023         	goto	l7738
  6962   00464E                     u8080:
  6963   00464E                     
  6964                           ; BSR set to: 0
  6965                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  6966   00464E  5187               	movf	efgtoa@sign& (0+255),w,b
  6967   004650  A4D8               	btfss	status,2,c
  6968   004652  EF2D  F023         	goto	u8091
  6969   004656  EF2F  F023         	goto	u8090
  6970   00465A                     u8091:
  6971   00465A  EF35  F023         	goto	l7734
  6972   00465E                     u8090:
  6973   00465E                     
  6974                           ; BSR set to: 0
  6975   00465E  0E00               	movlw	0
  6976   004660  6F6D               	movwf	(_efgtoa$2687+1)& (0+255),b
  6977   004662  0E2B               	movlw	43
  6978   004664  6F6C               	movwf	_efgtoa$2687& (0+255),b
  6979   004666  EF39  F023         	goto	l7736
  6980   00466A                     l7734:
  6981                           
  6982                           ; BSR set to: 0
  6983   00466A  0E00               	movlw	0
  6984   00466C  6F6D               	movwf	(_efgtoa$2687+1)& (0+255),b
  6985   00466E  0E2D               	movlw	45
  6986   004670  6F6C               	movwf	_efgtoa$2687& (0+255),b
  6987   004672                     l7736:
  6988                           
  6989                           ; BSR set to: 0
  6990   004672  C06C  F087         	movff	_efgtoa$2687,efgtoa@sign
  6991   004676                     l7738:
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  6995   004676  C088  F002         	movff	efgtoa@g,___fpclassifyf@x
  6996   00467A  C089  F003         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6997   00467E  C08A  F004         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6998   004682  C08B  F005         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6999   004686  EC89  F038         	call	___fpclassifyf	;wreg free
  7000   00468A  0402               	decf	?___fpclassifyf^0,w,c
  7001   00468C  1003               	iorwf	(?___fpclassifyf+1)^0,w,c
  7002   00468E  A4D8               	btfss	status,2,c
  7003   004690  EF4C  F023         	goto	u8101
  7004   004694  EF4E  F023         	goto	u8100
  7005   004698                     u8101:
  7006   004698  EF7D  F023         	goto	l7756
  7007   00469C                     u8100:
  7008   00469C                     
  7009                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  7010   00469C  0100               	movlb	0	; () banked
  7011   00469E  5187               	movf	efgtoa@sign& (0+255),w,b
  7012   0046A0  B4D8               	btfsc	status,2,c
  7013   0046A2  EF55  F023         	goto	u8111
  7014   0046A6  EF57  F023         	goto	u8110
  7015   0046AA                     u8111:
  7016   0046AA  EF60  F023         	goto	l7748
  7017   0046AE                     u8110:
  7018   0046AE                     
  7019                           ; BSR set to: 0
  7020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  7021   0046AE  C087  F400         	movff	efgtoa@sign,_dbuf
  7022   0046B2                     
  7023                           ; BSR set to: 0
  7024                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  7025   0046B2  0777               	decf	efgtoa@w& (0+255),f,b
  7026   0046B4  A0D8               	btfss	status,0,c
  7027   0046B6  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  7028   0046B8                     
  7029                           ; BSR set to: 0
  7030                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  7031   0046B8  0E00               	movlw	0
  7032   0046BA  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  7033   0046BC  0E01               	movlw	1
  7034   0046BE  6F8C               	movwf	efgtoa@n& (0+255),b
  7035   0046C0                     l7748:
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  7039   0046C0  0E00               	movlw	low _dbuf
  7040   0046C2  258C               	addwf	efgtoa@n& (0+255),w,b
  7041   0046C4  6E02               	movwf	strcpy@dest^0,c
  7042   0046C6  0E04               	movlw	high _dbuf
  7043   0046C8  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7044   0046CA  6E03               	movwf	(strcpy@dest+1)^0,c
  7045   0046CC  0ED2               	movlw	low STR_8
  7046   0046CE  6E04               	movwf	strcpy@src^0,c
  7047   0046D0  ECE0  F03F         	call	_strcpy	;wreg free
  7048   0046D4                     l7750:
  7049                           
  7050                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  7051   0046D4  0100               	movlb	0	; () banked
  7052   0046D6  0EFD               	movlw	253
  7053   0046D8  2777               	addwf	efgtoa@w& (0+255),f,b
  7054   0046DA  0EFF               	movlw	255
  7055   0046DC  2378               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7056   0046DE                     
  7057                           ; BSR set to: 0
  7058                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  7059   0046DE  C060  F010         	movff	efgtoa@fp,pad@fp
  7060   0046E2  0E00               	movlw	low _dbuf
  7061   0046E4  6E11               	movwf	pad@buf^0,c
  7062   0046E6  0E04               	movlw	high _dbuf
  7063   0046E8  6E12               	movwf	(pad@buf+1)^0,c
  7064   0046EA  C077  F013         	movff	efgtoa@w,pad@p
  7065   0046EE  C078  F014         	movff	efgtoa@w+1,pad@p+1
  7066   0046F2  ECBB  F03D         	call	_pad	;wreg free
  7067   0046F6  EFE3  F027         	goto	l1277
  7068   0046FA                     l7756:
  7069                           
  7070                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  7071   0046FA  C088  F002         	movff	efgtoa@g,___fpclassifyf@x
  7072   0046FE  C089  F003         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7073   004702  C08A  F004         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7074   004706  C08B  F005         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7075   00470A  EC89  F038         	call	___fpclassifyf	;wreg free
  7076   00470E  5002               	movf	?___fpclassifyf^0,w,c
  7077   004710  1003               	iorwf	(?___fpclassifyf+1)^0,w,c
  7078   004712  A4D8               	btfss	status,2,c
  7079   004714  EF8E  F023         	goto	u8121
  7080   004718  EF90  F023         	goto	u8120
  7081   00471C                     u8121:
  7082   00471C  EFAE  F023         	goto	l7774
  7083   004720                     u8120:
  7084   004720                     
  7085                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  7086   004720  0100               	movlb	0	; () banked
  7087   004722  5187               	movf	efgtoa@sign& (0+255),w,b
  7088   004724  B4D8               	btfsc	status,2,c
  7089   004726  EF97  F023         	goto	u8131
  7090   00472A  EF99  F023         	goto	u8130
  7091   00472E                     u8131:
  7092   00472E  EFA2  F023         	goto	l7766
  7093   004732                     u8130:
  7094   004732                     
  7095                           ; BSR set to: 0
  7096                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  7097   004732  C087  F400         	movff	efgtoa@sign,_dbuf
  7098   004736                     
  7099                           ; BSR set to: 0
  7100                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  7101   004736  0777               	decf	efgtoa@w& (0+255),f,b
  7102   004738  A0D8               	btfss	status,0,c
  7103   00473A  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  7104   00473C                     
  7105                           ; BSR set to: 0
  7106                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  7107   00473C  0E00               	movlw	0
  7108   00473E  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  7109   004740  0E01               	movlw	1
  7110   004742  6F8C               	movwf	efgtoa@n& (0+255),b
  7111   004744                     l7766:
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  7115   004744  0E00               	movlw	low _dbuf
  7116   004746  258C               	addwf	efgtoa@n& (0+255),w,b
  7117   004748  6E02               	movwf	strcpy@dest^0,c
  7118   00474A  0E04               	movlw	high _dbuf
  7119   00474C  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7120   00474E  6E03               	movwf	(strcpy@dest+1)^0,c
  7121   004750  0ED6               	movlw	low STR_11
  7122   004752  6E04               	movwf	strcpy@src^0,c
  7123   004754  ECE0  F03F         	call	_strcpy	;wreg free
  7124   004758  EF6A  F023         	goto	l7750
  7125   00475C                     l7774:
  7126                           
  7127                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  7128   00475C  0E00               	movlw	0
  7129   00475E  0100               	movlb	0	; () banked
  7130   004760  6F8E               	movwf	efgtoa@u& (0+255),b
  7131   004762  0E00               	movlw	0
  7132   004764  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  7133   004766  0E80               	movlw	128
  7134   004768  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  7135   00476A  0E3F               	movlw	63
  7136   00476C  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  7137                           
  7138                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  7139   00476E  0E00               	movlw	0
  7140   004770  6F76               	movwf	(efgtoa@e+1)& (0+255),b
  7141   004772  0E00               	movlw	0
  7142   004774  6F75               	movwf	efgtoa@e& (0+255),b
  7143   004776                     
  7144                           ; BSR set to: 0
  7145                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  7146   004776  C088  F002         	movff	efgtoa@g,___fleq@ff1
  7147   00477A  C089  F003         	movff	efgtoa@g+1,___fleq@ff1+1
  7148   00477E  C08A  F004         	movff	efgtoa@g+2,___fleq@ff1+2
  7149   004782  C08B  F005         	movff	efgtoa@g+3,___fleq@ff1+3
  7150   004786  0E00               	movlw	0
  7151   004788  6E06               	movwf	___fleq@ff2^0,c
  7152   00478A  0E00               	movlw	0
  7153   00478C  6E07               	movwf	(___fleq@ff2+1)^0,c
  7154   00478E  0E00               	movlw	0
  7155   004790  6E08               	movwf	(___fleq@ff2+2)^0,c
  7156   004792  0E00               	movlw	0
  7157   004794  6E09               	movwf	(___fleq@ff2+3)^0,c
  7158   004796  EC53  F03C         	call	___fleq	;wreg free
  7159   00479A  B0D8               	btfsc	status,0,c
  7160   00479C  EFD2  F023         	goto	u8141
  7161   0047A0  EFD4  F023         	goto	u8140
  7162   0047A4                     u8141:
  7163   0047A4  EFB3  F024         	goto	l1280
  7164   0047A8                     u8140:
  7165   0047A8  EFE1  F023         	goto	l7782
  7166   0047AC                     l1282:
  7167                           
  7168                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  7169   0047AC  C079  F08E         	movff	efgtoa@ou,efgtoa@u
  7170   0047B0  C07A  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  7171   0047B4  C07B  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  7172   0047B8  C07C  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  7173   0047BC                     
  7174                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  7175   0047BC  0100               	movlb	0	; () banked
  7176   0047BE  4B75               	infsnz	efgtoa@e& (0+255),f,b
  7177   0047C0  2B76               	incf	(efgtoa@e+1)& (0+255),f,b
  7178   0047C2                     l7782:
  7179                           
  7180                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  7181   0047C2  C08E  F012         	movff	efgtoa@u,___flmul@b
  7182   0047C6  C08F  F013         	movff	efgtoa@u+1,___flmul@b+1
  7183   0047CA  C090  F014         	movff	efgtoa@u+2,___flmul@b+2
  7184   0047CE  C091  F015         	movff	efgtoa@u+3,___flmul@b+3
  7185   0047D2  0E00               	movlw	0
  7186   0047D4  6E16               	movwf	___flmul@a^0,c
  7187   0047D6  0E00               	movlw	0
  7188   0047D8  6E17               	movwf	(___flmul@a+1)^0,c
  7189   0047DA  0E20               	movlw	32
  7190   0047DC  6E18               	movwf	(___flmul@a+2)^0,c
  7191   0047DE  0E41               	movlw	65
  7192   0047E0  6E19               	movwf	(___flmul@a+3)^0,c
  7193   0047E2  EC44  F02A         	call	___flmul	;wreg free
  7194   0047E6  C012  F079         	movff	?___flmul,efgtoa@ou
  7195   0047EA  C013  F07A         	movff	?___flmul+1,efgtoa@ou+1
  7196   0047EE  C014  F07B         	movff	?___flmul+2,efgtoa@ou+2
  7197   0047F2  C015  F07C         	movff	?___flmul+3,efgtoa@ou+3
  7198   0047F6  0100               	movlb	0	; () banked
  7199   0047F8  5179               	movf	efgtoa@ou& (0+255),w,b
  7200   0047FA  5D88               	subwf	efgtoa@g& (0+255),w,b
  7201   0047FC  6E02               	movwf	labs@a^0,c
  7202   0047FE  517A               	movf	(efgtoa@ou+1)& (0+255),w,b
  7203   004800  5989               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7204   004802  6E03               	movwf	(labs@a+1)^0,c
  7205   004804  517B               	movf	(efgtoa@ou+2)& (0+255),w,b
  7206   004806  598A               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7207   004808  6E04               	movwf	(labs@a+2)^0,c
  7208   00480A  517C               	movf	(efgtoa@ou+3)& (0+255),w,b
  7209   00480C  598B               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7210   00480E  6E05               	movwf	(labs@a+3)^0,c
  7211   004810  EC21  F03E         	call	_labs	;wreg free
  7212   004814  BE05               	btfsc	(?_labs+3)^0,7,c
  7213   004816  EF18  F024         	goto	u8151
  7214   00481A  5005               	movf	(?_labs+3)^0,w,c
  7215   00481C  1004               	iorwf	(?_labs+2)^0,w,c
  7216   00481E  1003               	iorwf	(?_labs+1)^0,w,c
  7217   004820  E109               	bnz	u8150
  7218   004822  0E02               	movlw	2
  7219   004824  5C02               	subwf	?_labs^0,w,c
  7220   004826  A0D8               	btfss	status,0,c
  7221   004828  EF18  F024         	goto	u8151
  7222   00482C  EF1A  F024         	goto	u8150
  7223   004830                     u8151:
  7224   004830  EFD6  F023         	goto	l1282
  7225   004834                     u8150:
  7226   004834  C079  F04C         	movff	efgtoa@ou,___flge@ff1
  7227   004838  C07A  F04D         	movff	efgtoa@ou+1,___flge@ff1+1
  7228   00483C  C07B  F04E         	movff	efgtoa@ou+2,___flge@ff1+2
  7229   004840  C07C  F04F         	movff	efgtoa@ou+3,___flge@ff1+3
  7230   004844  C088  F050         	movff	efgtoa@g,___flge@ff2
  7231   004848  C089  F051         	movff	efgtoa@g+1,___flge@ff2+1
  7232   00484C  C08A  F052         	movff	efgtoa@g+2,___flge@ff2+2
  7233   004850  C08B  F053         	movff	efgtoa@g+3,___flge@ff2+3
  7234   004854  EC86  F037         	call	___flge	;wreg free
  7235   004858  A0D8               	btfss	status,0,c
  7236   00485A  EF31  F024         	goto	u8161
  7237   00485E  EF33  F024         	goto	u8160
  7238   004862                     u8161:
  7239   004862  EFD6  F023         	goto	l1282
  7240   004866                     u8160:
  7241   004866                     
  7242                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  7243   004866  0100               	movlb	0	; () banked
  7244   004868  518E               	movf	efgtoa@u& (0+255),w,b
  7245   00486A  5D88               	subwf	efgtoa@g& (0+255),w,b
  7246   00486C  6E02               	movwf	labs@a^0,c
  7247   00486E  518F               	movf	(efgtoa@u+1)& (0+255),w,b
  7248   004870  5989               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7249   004872  6E03               	movwf	(labs@a+1)^0,c
  7250   004874  5190               	movf	(efgtoa@u+2)& (0+255),w,b
  7251   004876  598A               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7252   004878  6E04               	movwf	(labs@a+2)^0,c
  7253   00487A  5191               	movf	(efgtoa@u+3)& (0+255),w,b
  7254   00487C  598B               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7255   00487E  6E05               	movwf	(labs@a+3)^0,c
  7256   004880  EC21  F03E         	call	_labs	;wreg free
  7257   004884  BE05               	btfsc	(?_labs+3)^0,7,c
  7258   004886  EF52  F024         	goto	u8170
  7259   00488A  5005               	movf	(?_labs+3)^0,w,c
  7260   00488C  1004               	iorwf	(?_labs+2)^0,w,c
  7261   00488E  1003               	iorwf	(?_labs+1)^0,w,c
  7262   004890  E107               	bnz	u8171
  7263   004892  0E02               	movlw	2
  7264   004894  5C02               	subwf	?_labs^0,w,c
  7265   004896  B0D8               	btfsc	status,0,c
  7266   004898  EF50  F024         	goto	u8171
  7267   00489C  EF52  F024         	goto	u8170
  7268   0048A0                     u8171:
  7269   0048A0  EF9A  F024         	goto	l7800
  7270   0048A4                     u8170:
  7271   0048A4                     l7790:
  7272                           
  7273                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  7274   0048A4  C08E  F088         	movff	efgtoa@u,efgtoa@g
  7275   0048A8  C08F  F089         	movff	efgtoa@u+1,efgtoa@g+1
  7276   0048AC  C090  F08A         	movff	efgtoa@u+2,efgtoa@g+2
  7277   0048B0  C091  F08B         	movff	efgtoa@u+3,efgtoa@g+3
  7278                           
  7279                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  7280   0048B4  EFB3  F024         	goto	l1280
  7281   0048B8                     l7792:
  7282                           
  7283                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  7284   0048B8  C08E  F02B         	movff	efgtoa@u,___fldiv@b
  7285   0048BC  C08F  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  7286   0048C0  C090  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  7287   0048C4  C091  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  7288   0048C8  0E00               	movlw	0
  7289   0048CA  6E2F               	movwf	___fldiv@a^0,c
  7290   0048CC  0E00               	movlw	0
  7291   0048CE  6E30               	movwf	(___fldiv@a+1)^0,c
  7292   0048D0  0E20               	movlw	32
  7293   0048D2  6E31               	movwf	(___fldiv@a+2)^0,c
  7294   0048D4  0E41               	movlw	65
  7295   0048D6  6E32               	movwf	(___fldiv@a+3)^0,c
  7296   0048D8  EC48  F02E         	call	___fldiv	;wreg free
  7297   0048DC  C02B  F08E         	movff	?___fldiv,efgtoa@u
  7298   0048E0  C02C  F08F         	movff	?___fldiv+1,efgtoa@u+1
  7299   0048E4  C02D  F090         	movff	?___fldiv+2,efgtoa@u+2
  7300   0048E8  C02E  F091         	movff	?___fldiv+3,efgtoa@u+3
  7301   0048EC                     
  7302                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  7303   0048EC  0100               	movlb	0	; () banked
  7304   0048EE  0775               	decf	efgtoa@e& (0+255),f,b
  7305   0048F0  A0D8               	btfss	status,0,c
  7306   0048F2  0776               	decf	(efgtoa@e+1)& (0+255),f,b
  7307   0048F4                     
  7308                           ; BSR set to: 0
  7309                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  7310   0048F4  518E               	movf	efgtoa@u& (0+255),w,b
  7311   0048F6  5D88               	subwf	efgtoa@g& (0+255),w,b
  7312   0048F8  6E02               	movwf	labs@a^0,c
  7313   0048FA  518F               	movf	(efgtoa@u+1)& (0+255),w,b
  7314   0048FC  5989               	subwfb	(efgtoa@g+1)& (0+255),w,b
  7315   0048FE  6E03               	movwf	(labs@a+1)^0,c
  7316   004900  5190               	movf	(efgtoa@u+2)& (0+255),w,b
  7317   004902  598A               	subwfb	(efgtoa@g+2)& (0+255),w,b
  7318   004904  6E04               	movwf	(labs@a+2)^0,c
  7319   004906  5191               	movf	(efgtoa@u+3)& (0+255),w,b
  7320   004908  598B               	subwfb	(efgtoa@g+3)& (0+255),w,b
  7321   00490A  6E05               	movwf	(labs@a+3)^0,c
  7322   00490C  EC21  F03E         	call	_labs	;wreg free
  7323   004910  BE05               	btfsc	(?_labs+3)^0,7,c
  7324   004912  EF98  F024         	goto	u8180
  7325   004916  5005               	movf	(?_labs+3)^0,w,c
  7326   004918  1004               	iorwf	(?_labs+2)^0,w,c
  7327   00491A  1003               	iorwf	(?_labs+1)^0,w,c
  7328   00491C  E107               	bnz	u8181
  7329   00491E  0E02               	movlw	2
  7330   004920  5C02               	subwf	?_labs^0,w,c
  7331   004922  B0D8               	btfsc	status,0,c
  7332   004924  EF96  F024         	goto	u8181
  7333   004928  EF98  F024         	goto	u8180
  7334   00492C                     u8181:
  7335   00492C  EF9A  F024         	goto	l7800
  7336   004930                     u8180:
  7337   004930  EF52  F024         	goto	l7790
  7338   004934                     l7800:
  7339                           
  7340                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  7341   004934  C088  F04C         	movff	efgtoa@g,___flge@ff1
  7342   004938  C089  F04D         	movff	efgtoa@g+1,___flge@ff1+1
  7343   00493C  C08A  F04E         	movff	efgtoa@g+2,___flge@ff1+2
  7344   004940  C08B  F04F         	movff	efgtoa@g+3,___flge@ff1+3
  7345   004944  C08E  F050         	movff	efgtoa@u,___flge@ff2
  7346   004948  C08F  F051         	movff	efgtoa@u+1,___flge@ff2+1
  7347   00494C  C090  F052         	movff	efgtoa@u+2,___flge@ff2+2
  7348   004950  C091  F053         	movff	efgtoa@u+3,___flge@ff2+3
  7349   004954  EC86  F037         	call	___flge	;wreg free
  7350   004958  A0D8               	btfss	status,0,c
  7351   00495A  EFB1  F024         	goto	u8191
  7352   00495E  EFB3  F024         	goto	u8190
  7353   004962                     u8191:
  7354   004962  EF5C  F024         	goto	l7792
  7355   004966                     u8190:
  7356   004966                     l1280:
  7357                           
  7358                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  7359   004966  C065  F06F         	movff	efgtoa@c,efgtoa@mode
  7360                           
  7361                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  7362   00496A  C06F  F070         	movff	efgtoa@mode,efgtoa@nmode
  7363   00496E                     
  7364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  7365   00496E  0100               	movlb	0	; () banked
  7366   004970  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  7367   004972  EFBD  F024         	goto	u8201
  7368   004976  EFBF  F024         	goto	u8200
  7369   00497A                     u8201:
  7370   00497A  EFC5  F024         	goto	l7806
  7371   00497E                     u8200:
  7372   00497E                     
  7373                           ; BSR set to: 0
  7374   00497E  C0DB  F068         	movff	_prec,efgtoa@p
  7375   004982  C0DC  F069         	movff	_prec+1,efgtoa@p+1
  7376   004986  EFC9  F024         	goto	l7808
  7377   00498A                     l7806:
  7378                           
  7379                           ; BSR set to: 0
  7380   00498A  0E00               	movlw	0
  7381   00498C  6F69               	movwf	(efgtoa@p+1)& (0+255),b
  7382   00498E  0E06               	movlw	6
  7383   004990  6F68               	movwf	efgtoa@p& (0+255),b
  7384   004992                     l7808:
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  7388   004992  C068  F073         	movff	efgtoa@p,efgtoa@m
  7389   004996  C069  F074         	movff	efgtoa@p+1,efgtoa@m+1
  7390   00499A                     
  7391                           ; BSR set to: 0
  7392                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  7393   00499A  4B73               	infsnz	efgtoa@m& (0+255),f,b
  7394   00499C  2B74               	incf	(efgtoa@m+1)& (0+255),f,b
  7395   00499E                     
  7396                           ; BSR set to: 0
  7397                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  7398   00499E  0E66               	movlw	102
  7399   0049A0  1970               	xorwf	efgtoa@nmode& (0+255),w,b
  7400   0049A2  A4D8               	btfss	status,2,c
  7401   0049A4  EFD6  F024         	goto	u8211
  7402   0049A8  EFD8  F024         	goto	u8210
  7403   0049AC                     u8211:
  7404   0049AC  EFF8  F024         	goto	l7822
  7405   0049B0                     u8210:
  7406   0049B0                     
  7407                           ; BSR set to: 0
  7408                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  7409   0049B0  BF76               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7410   0049B2  EFDF  F024         	goto	u8220
  7411   0049B6  EFDD  F024         	goto	u8221
  7412   0049BA                     u8221:
  7413   0049BA  EFEB  F024         	goto	l7818
  7414   0049BE                     u8220:
  7415   0049BE                     
  7416                           ; BSR set to: 0
  7417                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  7418   0049BE  0E00               	movlw	0
  7419   0049C0  6F8E               	movwf	efgtoa@u& (0+255),b
  7420   0049C2  0E00               	movlw	0
  7421   0049C4  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  7422   0049C6  0E80               	movlw	128
  7423   0049C8  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  7424   0049CA  0E3F               	movlw	63
  7425   0049CC  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  7426                           
  7427                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  7428   0049CE  0E00               	movlw	0
  7429   0049D0  6F76               	movwf	(efgtoa@e+1)& (0+255),b
  7430   0049D2  0E00               	movlw	0
  7431   0049D4  6F75               	movwf	efgtoa@e& (0+255),b
  7432   0049D6                     l7818:
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  7436   0049D6  0E67               	movlw	103
  7437   0049D8  196F               	xorwf	efgtoa@mode& (0+255),w,b
  7438   0049DA  B4D8               	btfsc	status,2,c
  7439   0049DC  EFF2  F024         	goto	u8231
  7440   0049E0  EFF4  F024         	goto	u8230
  7441   0049E4                     u8231:
  7442   0049E4  EFF8  F024         	goto	l7822
  7443   0049E8                     u8230:
  7444   0049E8                     
  7445                           ; BSR set to: 0
  7446                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  7447   0049E8  5175               	movf	efgtoa@e& (0+255),w,b
  7448   0049EA  2773               	addwf	efgtoa@m& (0+255),f,b
  7449   0049EC  5176               	movf	(efgtoa@e+1)& (0+255),w,b
  7450   0049EE  2374               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7451   0049F0                     l7822:
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  7455   0049F0  0E00               	movlw	0
  7456   0049F2  6F7E               	movwf	(efgtoa@i+1)& (0+255),b
  7457   0049F4  0E00               	movlw	0
  7458   0049F6  6F7D               	movwf	efgtoa@i& (0+255),b
  7459   0049F8                     
  7460                           ; BSR set to: 0
  7461                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  7462   0049F8  C088  F07F         	movff	efgtoa@g,efgtoa@h
  7463   0049FC  C089  F080         	movff	efgtoa@g+1,efgtoa@h+1
  7464   004A00  C08A  F081         	movff	efgtoa@g+2,efgtoa@h+2
  7465   004A04  C08B  F082         	movff	efgtoa@g+3,efgtoa@h+3
  7466   004A08                     
  7467                           ; BSR set to: 0
  7468                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  7469   004A08  C08E  F079         	movff	efgtoa@u,efgtoa@ou
  7470   004A0C  C08F  F07A         	movff	efgtoa@u+1,efgtoa@ou+1
  7471   004A10  C090  F07B         	movff	efgtoa@u+2,efgtoa@ou+2
  7472   004A14  C091  F07C         	movff	efgtoa@u+3,efgtoa@ou+3
  7473                           
  7474                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  7475   004A18  EF89  F025         	goto	l7836
  7476   004A1C                     l7828:
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  7480   004A1C  C07F  F02B         	movff	efgtoa@h,___fldiv@b
  7481   004A20  C080  F02C         	movff	efgtoa@h+1,___fldiv@b+1
  7482   004A24  C081  F02D         	movff	efgtoa@h+2,___fldiv@b+2
  7483   004A28  C082  F02E         	movff	efgtoa@h+3,___fldiv@b+3
  7484   004A2C  C08E  F02F         	movff	efgtoa@u,___fldiv@a
  7485   004A30  C08F  F030         	movff	efgtoa@u+1,___fldiv@a+1
  7486   004A34  C090  F031         	movff	efgtoa@u+2,___fldiv@a+2
  7487   004A38  C091  F032         	movff	efgtoa@u+3,___fldiv@a+3
  7488   004A3C  EC48  F02E         	call	___fldiv	;wreg free
  7489   004A40  C02B  F044         	movff	?___fldiv,floorf@x
  7490   004A44  C02C  F045         	movff	?___fldiv+1,floorf@x+1
  7491   004A48  C02D  F046         	movff	?___fldiv+2,floorf@x+2
  7492   004A4C  C02E  F047         	movff	?___fldiv+3,floorf@x+3
  7493   004A50  ECE7  F033         	call	_floorf	;wreg free
  7494   004A54  C044  F083         	movff	?_floorf,efgtoa@l
  7495   004A58  C045  F084         	movff	?_floorf+1,efgtoa@l+1
  7496   004A5C  C046  F085         	movff	?_floorf+2,efgtoa@l+2
  7497   004A60  C047  F086         	movff	?_floorf+3,efgtoa@l+3
  7498                           
  7499                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  7500   004A64  C083  F002         	movff	efgtoa@l,___fltol@f1
  7501   004A68  C084  F003         	movff	efgtoa@l+1,___fltol@f1+1
  7502   004A6C  C085  F004         	movff	efgtoa@l+2,___fltol@f1+2
  7503   004A70  C086  F005         	movff	efgtoa@l+3,___fltol@f1+3
  7504   004A74  EC03  F037         	call	___fltol	;wreg free
  7505   004A78  C002  F071         	movff	?___fltol,efgtoa@d
  7506   004A7C  C003  F072         	movff	?___fltol+1,efgtoa@d+1
  7507   004A80                     
  7508                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  7509   004A80  C07F  F044         	movff	efgtoa@h,___flsub@b
  7510   004A84  C080  F045         	movff	efgtoa@h+1,___flsub@b+1
  7511   004A88  C081  F046         	movff	efgtoa@h+2,___flsub@b+2
  7512   004A8C  C082  F047         	movff	efgtoa@h+3,___flsub@b+3
  7513   004A90  C083  F016         	movff	efgtoa@l,___flmul@a
  7514   004A94  C084  F017         	movff	efgtoa@l+1,___flmul@a+1
  7515   004A98  C085  F018         	movff	efgtoa@l+2,___flmul@a+2
  7516   004A9C  C086  F019         	movff	efgtoa@l+3,___flmul@a+3
  7517   004AA0  C08E  F012         	movff	efgtoa@u,___flmul@b
  7518   004AA4  C08F  F013         	movff	efgtoa@u+1,___flmul@b+1
  7519   004AA8  C090  F014         	movff	efgtoa@u+2,___flmul@b+2
  7520   004AAC  C091  F015         	movff	efgtoa@u+3,___flmul@b+3
  7521   004AB0  EC44  F02A         	call	___flmul	;wreg free
  7522   004AB4  C012  F048         	movff	?___flmul,___flsub@a
  7523   004AB8  C013  F049         	movff	?___flmul+1,___flsub@a+1
  7524   004ABC  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  7525   004AC0  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  7526   004AC4  EC5C  F03F         	call	___flsub	;wreg free
  7527   004AC8  C044  F07F         	movff	?___flsub,efgtoa@h
  7528   004ACC  C045  F080         	movff	?___flsub+1,efgtoa@h+1
  7529   004AD0  C046  F081         	movff	?___flsub+2,efgtoa@h+2
  7530   004AD4  C047  F082         	movff	?___flsub+3,efgtoa@h+3
  7531   004AD8                     
  7532                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  7533   004AD8  C08E  F02B         	movff	efgtoa@u,___fldiv@b
  7534   004ADC  C08F  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  7535   004AE0  C090  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  7536   004AE4  C091  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  7537   004AE8  0E00               	movlw	0
  7538   004AEA  6E2F               	movwf	___fldiv@a^0,c
  7539   004AEC  0E00               	movlw	0
  7540   004AEE  6E30               	movwf	(___fldiv@a+1)^0,c
  7541   004AF0  0E20               	movlw	32
  7542   004AF2  6E31               	movwf	(___fldiv@a+2)^0,c
  7543   004AF4  0E41               	movlw	65
  7544   004AF6  6E32               	movwf	(___fldiv@a+3)^0,c
  7545   004AF8  EC48  F02E         	call	___fldiv	;wreg free
  7546   004AFC  C02B  F08E         	movff	?___fldiv,efgtoa@u
  7547   004B00  C02C  F08F         	movff	?___fldiv+1,efgtoa@u+1
  7548   004B04  C02D  F090         	movff	?___fldiv+2,efgtoa@u+2
  7549   004B08  C02E  F091         	movff	?___fldiv+3,efgtoa@u+3
  7550   004B0C                     
  7551                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  7552   004B0C  0100               	movlb	0	; () banked
  7553   004B0E  4B7D               	infsnz	efgtoa@i& (0+255),f,b
  7554   004B10  2B7E               	incf	(efgtoa@i+1)& (0+255),f,b
  7555   004B12                     l7836:
  7556                           
  7557                           ; BSR set to: 0
  7558                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  7559   004B12  5173               	movf	efgtoa@m& (0+255),w,b
  7560   004B14  5D7D               	subwf	efgtoa@i& (0+255),w,b
  7561   004B16  517E               	movf	(efgtoa@i+1)& (0+255),w,b
  7562   004B18  0A80               	xorlw	128
  7563   004B1A  6E58               	movwf	??_efgtoa^0,c
  7564   004B1C  5174               	movf	(efgtoa@m+1)& (0+255),w,b
  7565   004B1E  0A80               	xorlw	128
  7566   004B20  5858               	subwfb	??_efgtoa^0,w,c
  7567   004B22  A0D8               	btfss	status,0,c
  7568   004B24  EF96  F025         	goto	u8241
  7569   004B28  EF98  F025         	goto	u8240
  7570   004B2C                     u8241:
  7571   004B2C  EF0E  F025         	goto	l7828
  7572   004B30                     u8240:
  7573   004B30                     
  7574                           ; BSR set to: 0
  7575                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  7576   004B30  C08E  F012         	movff	efgtoa@u,___flmul@b
  7577   004B34  C08F  F013         	movff	efgtoa@u+1,___flmul@b+1
  7578   004B38  C090  F014         	movff	efgtoa@u+2,___flmul@b+2
  7579   004B3C  C091  F015         	movff	efgtoa@u+3,___flmul@b+3
  7580   004B40  0E00               	movlw	0
  7581   004B42  6E16               	movwf	___flmul@a^0,c
  7582   004B44  0E00               	movlw	0
  7583   004B46  6E17               	movwf	(___flmul@a+1)^0,c
  7584   004B48  0EA0               	movlw	160
  7585   004B4A  6E18               	movwf	(___flmul@a+2)^0,c
  7586   004B4C  0E40               	movlw	64
  7587   004B4E  6E19               	movwf	(___flmul@a+3)^0,c
  7588   004B50  EC44  F02A         	call	___flmul	;wreg free
  7589   004B54  C012  F083         	movff	?___flmul,efgtoa@l
  7590   004B58  C013  F084         	movff	?___flmul+1,efgtoa@l+1
  7591   004B5C  C014  F085         	movff	?___flmul+2,efgtoa@l+2
  7592   004B60  C015  F086         	movff	?___flmul+3,efgtoa@l+3
  7593   004B64                     
  7594                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  7595   004B64  C07F  F04C         	movff	efgtoa@h,___flge@ff1
  7596   004B68  C080  F04D         	movff	efgtoa@h+1,___flge@ff1+1
  7597   004B6C  C081  F04E         	movff	efgtoa@h+2,___flge@ff1+2
  7598   004B70  C082  F04F         	movff	efgtoa@h+3,___flge@ff1+3
  7599   004B74  C083  F050         	movff	efgtoa@l,___flge@ff2
  7600   004B78  C084  F051         	movff	efgtoa@l+1,___flge@ff2+1
  7601   004B7C  C085  F052         	movff	efgtoa@l+2,___flge@ff2+2
  7602   004B80  C086  F053         	movff	efgtoa@l+3,___flge@ff2+3
  7603   004B84  EC86  F037         	call	___flge	;wreg free
  7604   004B88  B0D8               	btfsc	status,0,c
  7605   004B8A  EFC9  F025         	goto	u8251
  7606   004B8E  EFCB  F025         	goto	u8250
  7607   004B92                     u8251:
  7608   004B92  EFD6  F025         	goto	l7844
  7609   004B96                     u8250:
  7610   004B96                     
  7611                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  7612   004B96  0E00               	movlw	0
  7613   004B98  0100               	movlb	0	; () banked
  7614   004B9A  6F83               	movwf	efgtoa@l& (0+255),b
  7615   004B9C  0E00               	movlw	0
  7616   004B9E  6F84               	movwf	(efgtoa@l+1)& (0+255),b
  7617   004BA0  0E00               	movlw	0
  7618   004BA2  6F85               	movwf	(efgtoa@l+2)& (0+255),b
  7619   004BA4  0E00               	movlw	0
  7620   004BA6  6F86               	movwf	(efgtoa@l+3)& (0+255),b
  7621                           
  7622                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  7623   004BA8  EFFF  F025         	goto	l7850
  7624   004BAC                     l7844:
  7625                           
  7626                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  7627   004BAC  C07F  F002         	movff	efgtoa@h,___fleq@ff1
  7628   004BB0  C080  F003         	movff	efgtoa@h+1,___fleq@ff1+1
  7629   004BB4  C081  F004         	movff	efgtoa@h+2,___fleq@ff1+2
  7630   004BB8  C082  F005         	movff	efgtoa@h+3,___fleq@ff1+3
  7631   004BBC  C083  F006         	movff	efgtoa@l,___fleq@ff2
  7632   004BC0  C084  F007         	movff	efgtoa@l+1,___fleq@ff2+1
  7633   004BC4  C085  F008         	movff	efgtoa@l+2,___fleq@ff2+2
  7634   004BC8  C086  F009         	movff	efgtoa@l+3,___fleq@ff2+3
  7635   004BCC  EC53  F03C         	call	___fleq	;wreg free
  7636   004BD0  A0D8               	btfss	status,0,c
  7637   004BD2  EFED  F025         	goto	u8261
  7638   004BD6  EFEF  F025         	goto	u8260
  7639   004BDA                     u8261:
  7640   004BDA  EFFF  F025         	goto	l7850
  7641   004BDE                     u8260:
  7642   004BDE  0100               	movlb	0	; () banked
  7643   004BE0  B171               	btfsc	efgtoa@d& (0+255),0,b
  7644   004BE2  EFF5  F025         	goto	u8271
  7645   004BE6  EFF7  F025         	goto	u8270
  7646   004BEA                     u8271:
  7647   004BEA  EFFF  F025         	goto	l7850
  7648   004BEE                     u8270:
  7649   004BEE                     
  7650                           ; BSR set to: 0
  7651                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  7652   004BEE  0E00               	movlw	0
  7653   004BF0  6F83               	movwf	efgtoa@l& (0+255),b
  7654   004BF2  0E00               	movlw	0
  7655   004BF4  6F84               	movwf	(efgtoa@l+1)& (0+255),b
  7656   004BF6  0E00               	movlw	0
  7657   004BF8  6F85               	movwf	(efgtoa@l+2)& (0+255),b
  7658   004BFA  0E00               	movlw	0
  7659   004BFC  6F86               	movwf	(efgtoa@l+3)& (0+255),b
  7660   004BFE                     l7850:
  7661                           
  7662                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  7663   004BFE  C088  F002         	movff	efgtoa@g,___fladd@b
  7664   004C02  C089  F003         	movff	efgtoa@g+1,___fladd@b+1
  7665   004C06  C08A  F004         	movff	efgtoa@g+2,___fladd@b+2
  7666   004C0A  C08B  F005         	movff	efgtoa@g+3,___fladd@b+3
  7667   004C0E  C083  F006         	movff	efgtoa@l,___fladd@a
  7668   004C12  C084  F007         	movff	efgtoa@l+1,___fladd@a+1
  7669   004C16  C085  F008         	movff	efgtoa@l+2,___fladd@a+2
  7670   004C1A  C086  F009         	movff	efgtoa@l+3,___fladd@a+3
  7671   004C1E  ECE4  F027         	call	___fladd	;wreg free
  7672   004C22  C002  F07F         	movff	?___fladd,efgtoa@h
  7673   004C26  C003  F080         	movff	?___fladd+1,efgtoa@h+1
  7674   004C2A  C004  F081         	movff	?___fladd+2,efgtoa@h+2
  7675   004C2E  C005  F082         	movff	?___fladd+3,efgtoa@h+3
  7676   004C32                     
  7677                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  7678   004C32  C07F  F04C         	movff	efgtoa@h,___flge@ff1
  7679   004C36  C080  F04D         	movff	efgtoa@h+1,___flge@ff1+1
  7680   004C3A  C081  F04E         	movff	efgtoa@h+2,___flge@ff1+2
  7681   004C3E  C082  F04F         	movff	efgtoa@h+3,___flge@ff1+3
  7682   004C42  0E00               	movlw	0
  7683   004C44  6E16               	movwf	___flmul@a^0,c
  7684   004C46  0E00               	movlw	0
  7685   004C48  6E17               	movwf	(___flmul@a+1)^0,c
  7686   004C4A  0E20               	movlw	32
  7687   004C4C  6E18               	movwf	(___flmul@a+2)^0,c
  7688   004C4E  0E41               	movlw	65
  7689   004C50  6E19               	movwf	(___flmul@a+3)^0,c
  7690   004C52  C079  F012         	movff	efgtoa@ou,___flmul@b
  7691   004C56  C07A  F013         	movff	efgtoa@ou+1,___flmul@b+1
  7692   004C5A  C07B  F014         	movff	efgtoa@ou+2,___flmul@b+2
  7693   004C5E  C07C  F015         	movff	efgtoa@ou+3,___flmul@b+3
  7694   004C62  EC44  F02A         	call	___flmul	;wreg free
  7695   004C66  C012  F050         	movff	?___flmul,___flge@ff2
  7696   004C6A  C013  F051         	movff	?___flmul+1,___flge@ff2+1
  7697   004C6E  C014  F052         	movff	?___flmul+2,___flge@ff2+2
  7698   004C72  C015  F053         	movff	?___flmul+3,___flge@ff2+3
  7699   004C76  EC86  F037         	call	___flge	;wreg free
  7700   004C7A  A0D8               	btfss	status,0,c
  7701   004C7C  EF42  F026         	goto	u8281
  7702   004C80  EF44  F026         	goto	u8280
  7703   004C84                     u8281:
  7704   004C84  EF6D  F026         	goto	l7862
  7705   004C88                     u8280:
  7706   004C88                     
  7707                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  7708   004C88  0100               	movlb	0	; () banked
  7709   004C8A  4B75               	infsnz	efgtoa@e& (0+255),f,b
  7710   004C8C  2B76               	incf	(efgtoa@e+1)& (0+255),f,b
  7711   004C8E                     
  7712                           ; BSR set to: 0
  7713                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  7714   004C8E  C079  F012         	movff	efgtoa@ou,___flmul@b
  7715   004C92  C07A  F013         	movff	efgtoa@ou+1,___flmul@b+1
  7716   004C96  C07B  F014         	movff	efgtoa@ou+2,___flmul@b+2
  7717   004C9A  C07C  F015         	movff	efgtoa@ou+3,___flmul@b+3
  7718   004C9E  0E00               	movlw	0
  7719   004CA0  6E16               	movwf	___flmul@a^0,c
  7720   004CA2  0E00               	movlw	0
  7721   004CA4  6E17               	movwf	(___flmul@a+1)^0,c
  7722   004CA6  0E20               	movlw	32
  7723   004CA8  6E18               	movwf	(___flmul@a+2)^0,c
  7724   004CAA  0E41               	movlw	65
  7725   004CAC  6E19               	movwf	(___flmul@a+3)^0,c
  7726   004CAE  EC44  F02A         	call	___flmul	;wreg free
  7727   004CB2  C012  F079         	movff	?___flmul,efgtoa@ou
  7728   004CB6  C013  F07A         	movff	?___flmul+1,efgtoa@ou+1
  7729   004CBA  C014  F07B         	movff	?___flmul+2,efgtoa@ou+2
  7730   004CBE  C015  F07C         	movff	?___flmul+3,efgtoa@ou+3
  7731   004CC2                     
  7732                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  7733   004CC2  0E66               	movlw	102
  7734   004CC4  0100               	movlb	0	; () banked
  7735   004CC6  1970               	xorwf	efgtoa@nmode& (0+255),w,b
  7736   004CC8  A4D8               	btfss	status,2,c
  7737   004CCA  EF69  F026         	goto	u8291
  7738   004CCE  EF6B  F026         	goto	u8290
  7739   004CD2                     u8291:
  7740   004CD2  EF6D  F026         	goto	l7862
  7741   004CD6                     u8290:
  7742   004CD6                     
  7743                           ; BSR set to: 0
  7744                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  7745   004CD6  4B73               	infsnz	efgtoa@m& (0+255),f,b
  7746   004CD8  2B74               	incf	(efgtoa@m+1)& (0+255),f,b
  7747   004CDA                     l7862:
  7748                           
  7749                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  7750   004CDA  C079  F08E         	movff	efgtoa@ou,efgtoa@u
  7751   004CDE  C07A  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  7752   004CE2  C07B  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  7753   004CE6  C07C  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  7754   004CEA                     
  7755                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  7756   004CEA  C075  F066         	movff	efgtoa@e,efgtoa@ne
  7757   004CEE  C076  F067         	movff	efgtoa@e+1,efgtoa@ne+1
  7758   004CF2                     
  7759                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  7760   004CF2  0E00               	movlw	0
  7761   004CF4  0100               	movlb	0	; () banked
  7762   004CF6  6F6E               	movwf	efgtoa@pp& (0+255),b
  7763   004CF8                     
  7764                           ; BSR set to: 0
  7765                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  7766   004CF8  0E00               	movlw	0
  7767   004CFA  6F6B               	movwf	(efgtoa@t+1)& (0+255),b
  7768   004CFC  0E00               	movlw	0
  7769   004CFE  6F6A               	movwf	efgtoa@t& (0+255),b
  7770   004D00                     
  7771                           ; BSR set to: 0
  7772                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  7773   004D00  0E00               	movlw	0
  7774   004D02  6F7E               	movwf	(efgtoa@i+1)& (0+255),b
  7775   004D04  0E00               	movlw	0
  7776   004D06  6F7D               	movwf	efgtoa@i& (0+255),b
  7777                           
  7778                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7779   004D08  EF6B  F027         	goto	l7912
  7780   004D0C                     l7872:
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  7784   004D0C  C07F  F02B         	movff	efgtoa@h,___fldiv@b
  7785   004D10  C080  F02C         	movff	efgtoa@h+1,___fldiv@b+1
  7786   004D14  C081  F02D         	movff	efgtoa@h+2,___fldiv@b+2
  7787   004D18  C082  F02E         	movff	efgtoa@h+3,___fldiv@b+3
  7788   004D1C  C08E  F02F         	movff	efgtoa@u,___fldiv@a
  7789   004D20  C08F  F030         	movff	efgtoa@u+1,___fldiv@a+1
  7790   004D24  C090  F031         	movff	efgtoa@u+2,___fldiv@a+2
  7791   004D28  C091  F032         	movff	efgtoa@u+3,___fldiv@a+3
  7792   004D2C  EC48  F02E         	call	___fldiv	;wreg free
  7793   004D30  C02B  F044         	movff	?___fldiv,floorf@x
  7794   004D34  C02C  F045         	movff	?___fldiv+1,floorf@x+1
  7795   004D38  C02D  F046         	movff	?___fldiv+2,floorf@x+2
  7796   004D3C  C02E  F047         	movff	?___fldiv+3,floorf@x+3
  7797   004D40  ECE7  F033         	call	_floorf	;wreg free
  7798   004D44  C044  F083         	movff	?_floorf,efgtoa@l
  7799   004D48  C045  F084         	movff	?_floorf+1,efgtoa@l+1
  7800   004D4C  C046  F085         	movff	?_floorf+2,efgtoa@l+2
  7801   004D50  C047  F086         	movff	?_floorf+3,efgtoa@l+3
  7802                           
  7803                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  7804   004D54  C083  F002         	movff	efgtoa@l,___fltol@f1
  7805   004D58  C084  F003         	movff	efgtoa@l+1,___fltol@f1+1
  7806   004D5C  C085  F004         	movff	efgtoa@l+2,___fltol@f1+2
  7807   004D60  C086  F005         	movff	efgtoa@l+3,___fltol@f1+3
  7808   004D64  EC03  F037         	call	___fltol	;wreg free
  7809   004D68  BE03               	btfsc	(?___fltol+1)^0,7,c
  7810   004D6A  EFC2  F026         	goto	u8300
  7811   004D6E  5003               	movf	(?___fltol+1)^0,w,c
  7812   004D70  E107               	bnz	u8301
  7813   004D72  0E0A               	movlw	10
  7814   004D74  5C02               	subwf	?___fltol^0,w,c
  7815   004D76  B0D8               	btfsc	status,0,c
  7816   004D78  EFC0  F026         	goto	u8301
  7817   004D7C  EFC2  F026         	goto	u8300
  7818   004D80                     u8301:
  7819   004D80  EFD2  F026         	goto	l7876
  7820   004D84                     u8300:
  7821   004D84  C083  F002         	movff	efgtoa@l,___fltol@f1
  7822   004D88  C084  F003         	movff	efgtoa@l+1,___fltol@f1+1
  7823   004D8C  C085  F004         	movff	efgtoa@l+2,___fltol@f1+2
  7824   004D90  C086  F005         	movff	efgtoa@l+3,___fltol@f1+3
  7825   004D94  EC03  F037         	call	___fltol	;wreg free
  7826   004D98  C002  F071         	movff	?___fltol,efgtoa@d
  7827   004D9C  C003  F072         	movff	?___fltol+1,efgtoa@d+1
  7828   004DA0  EFD7  F026         	goto	l1310
  7829   004DA4                     l7876:
  7830   004DA4  0E00               	movlw	0
  7831   004DA6  0100               	movlb	0	; () banked
  7832   004DA8  6F72               	movwf	(efgtoa@d+1)& (0+255),b
  7833   004DAA  0E09               	movlw	9
  7834   004DAC  6F71               	movwf	efgtoa@d& (0+255),b
  7835   004DAE                     l1310:
  7836                           
  7837                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  7838   004DAE  0100               	movlb	0	; () banked
  7839   004DB0  516E               	movf	efgtoa@pp& (0+255),w,b
  7840   004DB2  A4D8               	btfss	status,2,c
  7841   004DB4  EFDE  F026         	goto	u8311
  7842   004DB8  EFE0  F026         	goto	u8310
  7843   004DBC                     u8311:
  7844   004DBC  EF08  F027         	goto	l7896
  7845   004DC0                     u8310:
  7846   004DC0                     
  7847                           ; BSR set to: 0
  7848   004DC0  BF67               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7849   004DC2  EFE7  F026         	goto	u8320
  7850   004DC6  EFE5  F026         	goto	u8321
  7851   004DCA                     u8321:
  7852   004DCA  EF08  F027         	goto	l7896
  7853   004DCE                     u8320:
  7854   004DCE                     
  7855                           ; BSR set to: 0
  7856                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  7857   004DCE  0E00               	movlw	low _dbuf
  7858   004DD0  258C               	addwf	efgtoa@n& (0+255),w,b
  7859   004DD2  6ED9               	movwf	fsr2l,c
  7860   004DD4  0E04               	movlw	high _dbuf
  7861   004DD6  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7862   004DD8  6EDA               	movwf	fsr2h,c
  7863   004DDA  0E2E               	movlw	46
  7864   004DDC  6EDF               	movwf	indf2,c
  7865   004DDE                     
  7866                           ; BSR set to: 0
  7867   004DDE  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  7868   004DE0  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  7869   004DE2                     
  7870                           ; BSR set to: 0
  7871                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  7872   004DE2  0777               	decf	efgtoa@w& (0+255),f,b
  7873   004DE4  A0D8               	btfss	status,0,c
  7874   004DE6  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  7875   004DE8                     
  7876                           ; BSR set to: 0
  7877                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  7878   004DE8  0E01               	movlw	1
  7879   004DEA  6F6E               	movwf	efgtoa@pp& (0+255),b
  7880   004DEC  EF08  F027         	goto	l7896
  7881   004DF0                     l7888:
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  7885   004DF0  0E00               	movlw	low _dbuf
  7886   004DF2  258C               	addwf	efgtoa@n& (0+255),w,b
  7887   004DF4  6ED9               	movwf	fsr2l,c
  7888   004DF6  0E04               	movlw	high _dbuf
  7889   004DF8  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7890   004DFA  6EDA               	movwf	fsr2h,c
  7891   004DFC  0E30               	movlw	48
  7892   004DFE  6EDF               	movwf	indf2,c
  7893   004E00                     
  7894                           ; BSR set to: 0
  7895   004E00  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  7896   004E02  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  7897   004E04                     
  7898                           ; BSR set to: 0
  7899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  7900   004E04  0777               	decf	efgtoa@w& (0+255),f,b
  7901   004E06  A0D8               	btfss	status,0,c
  7902   004E08  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  7903   004E0A                     
  7904                           ; BSR set to: 0
  7905                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  7906   004E0A  076A               	decf	efgtoa@t& (0+255),f,b
  7907   004E0C  A0D8               	btfss	status,0,c
  7908   004E0E  076B               	decf	(efgtoa@t+1)& (0+255),f,b
  7909   004E10                     l7896:
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  7913   004E10  516A               	movf	efgtoa@t& (0+255),w,b
  7914   004E12  116B               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7915   004E14  A4D8               	btfss	status,2,c
  7916   004E16  EF0F  F027         	goto	u8331
  7917   004E1A  EF11  F027         	goto	u8330
  7918   004E1E                     u8331:
  7919   004E1E  EFF8  F026         	goto	l7888
  7920   004E22                     u8330:
  7921   004E22                     
  7922                           ; BSR set to: 0
  7923                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  7924   004E22  0E00               	movlw	low _dbuf
  7925   004E24  258C               	addwf	efgtoa@n& (0+255),w,b
  7926   004E26  6ED9               	movwf	fsr2l,c
  7927   004E28  0E04               	movlw	high _dbuf
  7928   004E2A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7929   004E2C  6EDA               	movwf	fsr2h,c
  7930   004E2E  5171               	movf	efgtoa@d& (0+255),w,b
  7931   004E30  0F30               	addlw	48
  7932   004E32  6EDF               	movwf	indf2,c
  7933   004E34                     
  7934                           ; BSR set to: 0
  7935   004E34  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  7936   004E36  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  7937   004E38                     
  7938                           ; BSR set to: 0
  7939                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  7940   004E38  0777               	decf	efgtoa@w& (0+255),f,b
  7941   004E3A  A0D8               	btfss	status,0,c
  7942   004E3C  0778               	decf	(efgtoa@w+1)& (0+255),f,b
  7943   004E3E                     
  7944                           ; BSR set to: 0
  7945                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  7946   004E3E  C07F  F044         	movff	efgtoa@h,___flsub@b
  7947   004E42  C080  F045         	movff	efgtoa@h+1,___flsub@b+1
  7948   004E46  C081  F046         	movff	efgtoa@h+2,___flsub@b+2
  7949   004E4A  C082  F047         	movff	efgtoa@h+3,___flsub@b+3
  7950   004E4E  C083  F016         	movff	efgtoa@l,___flmul@a
  7951   004E52  C084  F017         	movff	efgtoa@l+1,___flmul@a+1
  7952   004E56  C085  F018         	movff	efgtoa@l+2,___flmul@a+2
  7953   004E5A  C086  F019         	movff	efgtoa@l+3,___flmul@a+3
  7954   004E5E  C08E  F012         	movff	efgtoa@u,___flmul@b
  7955   004E62  C08F  F013         	movff	efgtoa@u+1,___flmul@b+1
  7956   004E66  C090  F014         	movff	efgtoa@u+2,___flmul@b+2
  7957   004E6A  C091  F015         	movff	efgtoa@u+3,___flmul@b+3
  7958   004E6E  EC44  F02A         	call	___flmul	;wreg free
  7959   004E72  C012  F048         	movff	?___flmul,___flsub@a
  7960   004E76  C013  F049         	movff	?___flmul+1,___flsub@a+1
  7961   004E7A  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  7962   004E7E  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  7963   004E82  EC5C  F03F         	call	___flsub	;wreg free
  7964   004E86  C044  F07F         	movff	?___flsub,efgtoa@h
  7965   004E8A  C045  F080         	movff	?___flsub+1,efgtoa@h+1
  7966   004E8E  C046  F081         	movff	?___flsub+2,efgtoa@h+2
  7967   004E92  C047  F082         	movff	?___flsub+3,efgtoa@h+3
  7968   004E96                     
  7969                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  7970   004E96  C08E  F02B         	movff	efgtoa@u,___fldiv@b
  7971   004E9A  C08F  F02C         	movff	efgtoa@u+1,___fldiv@b+1
  7972   004E9E  C090  F02D         	movff	efgtoa@u+2,___fldiv@b+2
  7973   004EA2  C091  F02E         	movff	efgtoa@u+3,___fldiv@b+3
  7974   004EA6  0E00               	movlw	0
  7975   004EA8  6E2F               	movwf	___fldiv@a^0,c
  7976   004EAA  0E00               	movlw	0
  7977   004EAC  6E30               	movwf	(___fldiv@a+1)^0,c
  7978   004EAE  0E20               	movlw	32
  7979   004EB0  6E31               	movwf	(___fldiv@a+2)^0,c
  7980   004EB2  0E41               	movlw	65
  7981   004EB4  6E32               	movwf	(___fldiv@a+3)^0,c
  7982   004EB6  EC48  F02E         	call	___fldiv	;wreg free
  7983   004EBA  C02B  F08E         	movff	?___fldiv,efgtoa@u
  7984   004EBE  C02C  F08F         	movff	?___fldiv+1,efgtoa@u+1
  7985   004EC2  C02D  F090         	movff	?___fldiv+2,efgtoa@u+2
  7986   004EC6  C02E  F091         	movff	?___fldiv+3,efgtoa@u+3
  7987   004ECA                     
  7988                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  7989   004ECA  0100               	movlb	0	; () banked
  7990   004ECC  0766               	decf	efgtoa@ne& (0+255),f,b
  7991   004ECE  A0D8               	btfss	status,0,c
  7992   004ED0  0767               	decf	(efgtoa@ne+1)& (0+255),f,b
  7993   004ED2                     
  7994                           ; BSR set to: 0
  7995                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  7996   004ED2  4B7D               	infsnz	efgtoa@i& (0+255),f,b
  7997   004ED4  2B7E               	incf	(efgtoa@i+1)& (0+255),f,b
  7998   004ED6                     l7912:
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8002   004ED6  5173               	movf	efgtoa@m& (0+255),w,b
  8003   004ED8  5D7D               	subwf	efgtoa@i& (0+255),w,b
  8004   004EDA  517E               	movf	(efgtoa@i+1)& (0+255),w,b
  8005   004EDC  0A80               	xorlw	128
  8006   004EDE  6E58               	movwf	??_efgtoa^0,c
  8007   004EE0  5174               	movf	(efgtoa@m+1)& (0+255),w,b
  8008   004EE2  0A80               	xorlw	128
  8009   004EE4  5858               	subwfb	??_efgtoa^0,w,c
  8010   004EE6  B0D8               	btfsc	status,0,c
  8011   004EE8  EF78  F027         	goto	u8341
  8012   004EEC  EF7A  F027         	goto	u8340
  8013   004EF0                     u8341:
  8014   004EF0  EF88  F027         	goto	l7916
  8015   004EF4                     u8340:
  8016   004EF4                     
  8017                           ; BSR set to: 0
  8018   004EF4  BF8D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8019   004EF6  EF86  F027         	goto	u8351
  8020   004EFA  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  8021   004EFC  E109               	bnz	u8350
  8022   004EFE  0E4B               	movlw	75
  8023   004F00  5D8C               	subwf	efgtoa@n& (0+255),w,b
  8024   004F02  A0D8               	btfss	status,0,c
  8025   004F04  EF86  F027         	goto	u8351
  8026   004F08  EF88  F027         	goto	u8350
  8027   004F0C                     u8351:
  8028   004F0C  EF86  F026         	goto	l7872
  8029   004F10                     u8350:
  8030   004F10                     l7916:
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  8034   004F10  0E00               	movlw	0
  8035   004F12  6F7E               	movwf	(efgtoa@i+1)& (0+255),b
  8036   004F14  0E4F               	movlw	79
  8037   004F16  6F7D               	movwf	efgtoa@i& (0+255),b
  8038   004F18                     
  8039                           ; BSR set to: 0
  8040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  8041   004F18  0E00               	movlw	low _dbuf
  8042   004F1A  257D               	addwf	efgtoa@i& (0+255),w,b
  8043   004F1C  6ED9               	movwf	fsr2l,c
  8044   004F1E  0E04               	movlw	high _dbuf
  8045   004F20  217E               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8046   004F22  6EDA               	movwf	fsr2h,c
  8047   004F24  6ADF               	clrf	indf2,c
  8048   004F26                     
  8049                           ; BSR set to: 0
  8050                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  8051   004F26  0E00               	movlw	low _dbuf
  8052   004F28  6E58               	movwf	??_efgtoa^0,c
  8053   004F2A  0E04               	movlw	high _dbuf
  8054   004F2C  6E59               	movwf	(??_efgtoa+1)^0,c
  8055   004F2E  518C               	movf	efgtoa@n& (0+255),w,b
  8056   004F30  5E58               	subwf	??_efgtoa^0,f,c
  8057   004F32  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  8058   004F34  5A59               	subwfb	(??_efgtoa+1)^0,f,c
  8059   004F36  517D               	movf	efgtoa@i& (0+255),w,b
  8060   004F38  2458               	addwf	??_efgtoa^0,w,c
  8061   004F3A  6E02               	movwf	memcpy@d1^0,c
  8062   004F3C  517E               	movf	(efgtoa@i+1)& (0+255),w,b
  8063   004F3E  2059               	addwfc	(??_efgtoa+1)^0,w,c
  8064   004F40  6E03               	movwf	(memcpy@d1+1)^0,c
  8065   004F42  0E00               	movlw	low _dbuf
  8066   004F44  6E04               	movwf	memcpy@s1^0,c
  8067   004F46  0E04               	movlw	high _dbuf
  8068   004F48  6E05               	movwf	(memcpy@s1+1)^0,c
  8069   004F4A  C08C  F006         	movff	efgtoa@n,memcpy@n
  8070   004F4E  C08D  F007         	movff	efgtoa@n+1,memcpy@n+1
  8071   004F52  EC4C  F03E         	call	_memcpy	;wreg free
  8072   004F56                     
  8073                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  8074   004F56  0100               	movlb	0	; () banked
  8075   004F58  518C               	movf	efgtoa@n& (0+255),w,b
  8076   004F5A  5D7D               	subwf	efgtoa@i& (0+255),w,b
  8077   004F5C  6F8C               	movwf	efgtoa@n& (0+255),b
  8078   004F5E  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  8079   004F60  597E               	subwfb	(efgtoa@i+1)& (0+255),w,b
  8080   004F62  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  8081   004F64                     
  8082                           ; BSR set to: 0
  8083                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  8084   004F64  5187               	movf	efgtoa@sign& (0+255),w,b
  8085   004F66  A4D8               	btfss	status,2,c
  8086   004F68  EFB8  F027         	goto	u8361
  8087   004F6C  EFBB  F027         	goto	u8360
  8088   004F70                     u8361:
  8089   004F70  0E01               	movlw	1
  8090   004F72  EFBC  F027         	goto	u8370
  8091   004F76                     u8360:
  8092   004F76  0E00               	movlw	0
  8093   004F78                     u8370:
  8094   004F78  6F7D               	movwf	efgtoa@i& (0+255),b
  8095   004F7A  6B7E               	clrf	(efgtoa@i+1)& (0+255),b
  8096   004F7C                     
  8097                           ; BSR set to: 0
  8098                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  8099   004F7C  5187               	movf	efgtoa@sign& (0+255),w,b
  8100   004F7E  B4D8               	btfsc	status,2,c
  8101   004F80  EFC4  F027         	goto	u8381
  8102   004F84  EFC6  F027         	goto	u8380
  8103   004F88                     u8381:
  8104   004F88  EFD1  F027         	goto	l7930
  8105   004F8C                     u8380:
  8106   004F8C                     
  8107                           ; BSR set to: 0
  8108                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  8109   004F8C  078C               	decf	efgtoa@n& (0+255),f,b
  8110   004F8E  A0D8               	btfss	status,0,c
  8111   004F90  078D               	decf	(efgtoa@n+1)& (0+255),f,b
  8112   004F92  0E00               	movlw	low _dbuf
  8113   004F94  258C               	addwf	efgtoa@n& (0+255),w,b
  8114   004F96  6ED9               	movwf	fsr2l,c
  8115   004F98  0E04               	movlw	high _dbuf
  8116   004F9A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8117   004F9C  6EDA               	movwf	fsr2h,c
  8118   004F9E  C087  FFDF         	movff	efgtoa@sign,indf2
  8119   004FA2                     l7930:
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  8123   004FA2  517D               	movf	efgtoa@i& (0+255),w,b
  8124   004FA4  5F77               	subwf	efgtoa@w& (0+255),f,b
  8125   004FA6  517E               	movf	(efgtoa@i+1)& (0+255),w,b
  8126   004FA8  5B78               	subwfb	(efgtoa@w+1)& (0+255),f,b
  8127   004FAA                     
  8128                           ; BSR set to: 0
  8129                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  8130   004FAA  C060  F010         	movff	efgtoa@fp,pad@fp
  8131   004FAE  0E00               	movlw	low _dbuf
  8132   004FB0  258C               	addwf	efgtoa@n& (0+255),w,b
  8133   004FB2  6E11               	movwf	pad@buf^0,c
  8134   004FB4  0E04               	movlw	high _dbuf
  8135   004FB6  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8136   004FB8  6E12               	movwf	(pad@buf+1)^0,c
  8137   004FBA  C077  F013         	movff	efgtoa@w,pad@p
  8138   004FBE  C078  F014         	movff	efgtoa@w+1,pad@p+1
  8139   004FC2  ECBB  F03D         	call	_pad	;wreg free
  8140   004FC6                     l1277:
  8141   004FC6  0012               	return		;funcret
  8142   004FC8                     __end_of_efgtoa:
  8143                           	callstack 0
  8144                           
  8145 ;; *************** function _strcpy *****************
  8146 ;; Defined at:
  8147 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;  dest            2    1[COMRAM] PTR unsigned char 
  8150 ;;		 -> dbuf(80), 
  8151 ;;  src             1    3[COMRAM] PTR const unsigned char 
  8152 ;;		 -> STR_11(4), STR_8(4), 
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;  d               2    5[COMRAM] PTR unsigned char 
  8155 ;;		 -> dbuf(80), 
  8156 ;; Return value:  Size  Location     Type
  8157 ;;                  2    1[COMRAM] PTR unsigned char 
  8158 ;; Registers used:
  8159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8165 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8167 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8168 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8169 ;;Total ram usage:        6 bytes
  8170 ;; Hardware stack levels used: 1
  8171 ;; Hardware stack levels required when called: 2
  8172 ;; This function calls:
  8173 ;;		Nothing
  8174 ;; This function is called by:
  8175 ;;		_efgtoa
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           	psect	text22
  8180   007FC0                     __ptext22:
  8181                           	callstack 0
  8182   007FC0                     _strcpy:
  8183                           	callstack 24
  8184   007FC0  C002  F006         	movff	strcpy@dest,strcpy@d
  8185   007FC4  C003  F007         	movff	strcpy@dest+1,strcpy@d+1
  8186   007FC8                     l7584:
  8187   007FC8  2A04               	incf	strcpy@src^0,f,c
  8188   007FCA  0404               	decf	strcpy@src^0,w,c
  8189   007FCC  6E05               	movwf	??_strcpy^0,c
  8190   007FCE  C005  FFF6         	movff	??_strcpy,tblptrl
  8191   007FD2                     	if	1	;There is more than 1 active tblptr byte
  8192   007FD2  0E0E               	movlw	high __smallconst
  8193   007FD4  6EF7               	movwf	tblptrh,c
  8194   007FD6                     	endif
  8195   007FD6                     	if	0	;tblptru may be non-zero
  8196   007FD6                     	endif
  8197   007FD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8198   007FD6  0E00               	movlw	low (__smallconst shr (0+16))
  8199   007FD8  6EF8               	movwf	tblptru,c
  8200   007FDA                     	endif
  8201   007FDA  C006  FFD9         	movff	strcpy@d,fsr2l
  8202   007FDE  C007  FFDA         	movff	strcpy@d+1,fsr2h
  8203   007FE2  4A06               	infsnz	strcpy@d^0,f,c
  8204   007FE4  2A07               	incf	(strcpy@d+1)^0,f,c
  8205   007FE6  0008               	tblrd		*
  8206   007FE8  CFF5 FFDF          	movff	tablat,indf2
  8207   007FEC  50DF               	movf	indf2,w,c
  8208   007FEE  A4D8               	btfss	status,2,c
  8209   007FF0  EFFC  F03F         	goto	u7821
  8210   007FF4  EFFE  F03F         	goto	u7820
  8211   007FF8                     u7821:
  8212   007FF8  EFE4  F03F         	goto	l7584
  8213   007FFC                     u7820:
  8214   007FFC  0012               	return		;funcret
  8215   007FFE                     __end_of_strcpy:
  8216                           	callstack 0
  8217                           
  8218 ;; *************** function _pad *****************
  8219 ;; Defined at:
  8220 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  fp              1   15[COMRAM] PTR struct _IO_FILE
  8223 ;;		 -> sprintf@f(12), 
  8224 ;;  buf             2   16[COMRAM] PTR unsigned char 
  8225 ;;		 -> dbuf(80), 
  8226 ;;  p               2   18[COMRAM] int 
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;  i               2   21[COMRAM] int 
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  1    wreg      void 
  8231 ;; Registers used:
  8232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8238 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8240 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8241 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8242 ;;Total ram usage:        8 bytes
  8243 ;; Hardware stack levels used: 1
  8244 ;; Hardware stack levels required when called: 5
  8245 ;; This function calls:
  8246 ;;		_fputc
  8247 ;;		_fputs
  8248 ;; This function is called by:
  8249 ;;		_efgtoa
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text23
  8254   007B76                     __ptext23:
  8255                           	callstack 0
  8256   007B76                     _pad:
  8257                           	callstack 21
  8258   007B76                     
  8259                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  8260   007B76  BE14               	btfsc	(pad@p+1)^0,7,c
  8261   007B78  EFC2  F03D         	goto	u7730
  8262   007B7C  EFC0  F03D         	goto	u7731
  8263   007B80                     u7731:
  8264   007B80  EFC6  F03D         	goto	l1262
  8265   007B84                     u7730:
  8266   007B84                     
  8267                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  8268   007B84  0E00               	movlw	0
  8269   007B86  6E14               	movwf	(pad@p+1)^0,c
  8270   007B88  0E00               	movlw	0
  8271   007B8A  6E13               	movwf	pad@p^0,c
  8272   007B8C                     l1262:
  8273                           
  8274                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  8275   007B8C  0E00               	movlw	0
  8276   007B8E  6E17               	movwf	(pad@i+1)^0,c
  8277   007B90  0E00               	movlw	0
  8278   007B92  6E16               	movwf	pad@i^0,c
  8279                           
  8280                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  8281   007B94  EFD6  F03D         	goto	l7556
  8282   007B98                     l7552:
  8283                           
  8284                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  8285   007B98  0E00               	movlw	0
  8286   007B9A  6E03               	movwf	(fputc@c+1)^0,c
  8287   007B9C  0E20               	movlw	32
  8288   007B9E  6E02               	movwf	fputc@c^0,c
  8289   007BA0  C010  F004         	movff	pad@fp,fputc@fp
  8290   007BA4  EC9E  F03B         	call	_fputc	;wreg free
  8291   007BA8                     
  8292                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  8293   007BA8  4A16               	infsnz	pad@i^0,f,c
  8294   007BAA  2A17               	incf	(pad@i+1)^0,f,c
  8295   007BAC                     l7556:
  8296                           
  8297                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  8298   007BAC  5013               	movf	pad@p^0,w,c
  8299   007BAE  5C16               	subwf	pad@i^0,w,c
  8300   007BB0  5017               	movf	(pad@i+1)^0,w,c
  8301   007BB2  0A80               	xorlw	128
  8302   007BB4  6E15               	movwf	??_pad^0,c
  8303   007BB6  5014               	movf	(pad@p+1)^0,w,c
  8304   007BB8  0A80               	xorlw	128
  8305   007BBA  5815               	subwfb	??_pad^0,w,c
  8306   007BBC  A0D8               	btfss	status,0,c
  8307   007BBE  EFE3  F03D         	goto	u7741
  8308   007BC2  EFE5  F03D         	goto	u7740
  8309   007BC6                     u7741:
  8310   007BC6  EFCC  F03D         	goto	l7552
  8311   007BCA                     u7740:
  8312   007BCA                     
  8313                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  8314   007BCA  C011  F00A         	movff	pad@buf,fputs@s
  8315   007BCE  C012  F00B         	movff	pad@buf+1,fputs@s+1
  8316   007BD2  C010  F00C         	movff	pad@fp,fputs@fp
  8317   007BD6  ECC0  F03F         	call	_fputs	;wreg free
  8318   007BDA  0012               	return		;funcret
  8319   007BDC                     __end_of_pad:
  8320                           	callstack 0
  8321                           
  8322 ;; *************** function _fputs *****************
  8323 ;; Defined at:
  8324 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  8325 ;; Parameters:    Size  Location     Type
  8326 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8327 ;;		 -> dbuf(80), 
  8328 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  8329 ;;		 -> sprintf@f(12), 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  i               2   13[COMRAM] int 
  8332 ;;  c               1   12[COMRAM] unsigned char 
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  2    9[COMRAM] int 
  8335 ;; Registers used:
  8336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8342 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8343 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8345 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8346 ;;Total ram usage:        6 bytes
  8347 ;; Hardware stack levels used: 1
  8348 ;; Hardware stack levels required when called: 4
  8349 ;; This function calls:
  8350 ;;		_fputc
  8351 ;; This function is called by:
  8352 ;;		_pad
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text24
  8357   007F80                     __ptext24:
  8358                           	callstack 0
  8359   007F80                     _fputs:
  8360                           	callstack 21
  8361   007F80  0E00               	movlw	0
  8362   007F82  6E0F               	movwf	(fputs@i+1)^0,c
  8363   007F84  0E00               	movlw	0
  8364   007F86  6E0E               	movwf	fputs@i^0,c
  8365   007F88  EFCF  F03F         	goto	l7182
  8366   007F8C                     l7178:
  8367   007F8C  C00D  F002         	movff	fputs@c,fputc@c
  8368   007F90  6A03               	clrf	(fputc@c+1)^0,c
  8369   007F92  C00C  F004         	movff	fputs@fp,fputc@fp
  8370   007F96  EC9E  F03B         	call	_fputc	;wreg free
  8371   007F9A  4A0E               	infsnz	fputs@i^0,f,c
  8372   007F9C  2A0F               	incf	(fputs@i+1)^0,f,c
  8373   007F9E                     l7182:
  8374   007F9E  500E               	movf	fputs@i^0,w,c
  8375   007FA0  240A               	addwf	fputs@s^0,w,c
  8376   007FA2  6ED9               	movwf	fsr2l,c
  8377   007FA4  500F               	movf	(fputs@i+1)^0,w,c
  8378   007FA6  200B               	addwfc	(fputs@s+1)^0,w,c
  8379   007FA8  6EDA               	movwf	fsr2h,c
  8380   007FAA  50DF               	movf	indf2,w,c
  8381   007FAC  6E0D               	movwf	fputs@c^0,c
  8382   007FAE  500D               	movf	fputs@c^0,w,c
  8383   007FB0  A4D8               	btfss	status,2,c
  8384   007FB2  EFDD  F03F         	goto	u7141
  8385   007FB6  EFDF  F03F         	goto	u7140
  8386   007FBA                     u7141:
  8387   007FBA  EFC6  F03F         	goto	l7178
  8388   007FBE                     u7140:
  8389   007FBE  0012               	return		;funcret
  8390   007FC0                     __end_of_fputs:
  8391                           	callstack 0
  8392                           
  8393 ;; *************** function _fputc *****************
  8394 ;; Defined at:
  8395 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  8396 ;; Parameters:    Size  Location     Type
  8397 ;;  c               2    1[COMRAM] int 
  8398 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  8399 ;;		 -> sprintf@f(12), 
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;		None
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  2    1[COMRAM] int 
  8404 ;; Registers used:
  8405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8411 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8413 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8414 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8415 ;;Total ram usage:        8 bytes
  8416 ;; Hardware stack levels used: 1
  8417 ;; Hardware stack levels required when called: 3
  8418 ;; This function calls:
  8419 ;;		_putch
  8420 ;; This function is called by:
  8421 ;;		_pad
  8422 ;;		_vfpfcnvrt
  8423 ;;		_fputs
  8424 ;; This function uses a non-reentrant model
  8425 ;;
  8426                           
  8427                           	psect	text25
  8428   00773C                     __ptext25:
  8429                           	callstack 0
  8430   00773C                     _fputc:
  8431                           	callstack 24
  8432   00773C  5004               	movf	fputc@fp^0,w,c
  8433   00773E  B4D8               	btfsc	status,2,c
  8434   007740  EFA4  F03B         	goto	u6711
  8435   007744  EFA6  F03B         	goto	u6710
  8436   007748                     u6711:
  8437   007748  EFAE  F03B         	goto	l6964
  8438   00774C                     u6710:
  8439   00774C  5004               	movf	fputc@fp^0,w,c
  8440   00774E  A4D8               	btfss	status,2,c
  8441   007750  EFAC  F03B         	goto	u6721
  8442   007754  EFAE  F03B         	goto	u6720
  8443   007758                     u6721:
  8444   007758  EFB3  F03B         	goto	l6966
  8445   00775C                     u6720:
  8446   00775C                     l6964:
  8447   00775C  5002               	movf	fputc@c^0,w,c
  8448   00775E  EC17  F041         	call	_putch
  8449   007762  EFFA  F03B         	goto	l1411
  8450   007766                     l6966:
  8451   007766  5004               	movf	fputc@fp^0,w,c
  8452   007768  6ED9               	movwf	fsr2l,c
  8453   00776A  6ADA               	clrf	fsr2h,c
  8454   00776C  0E0A               	movlw	10
  8455   00776E  26D9               	addwf	fsr2l,f,c
  8456   007770  50DE               	movf	postinc2,w,c
  8457   007772  10DE               	iorwf	postinc2,w,c
  8458   007774  B4D8               	btfsc	status,2,c
  8459   007776  EFBF  F03B         	goto	u6731
  8460   00777A  EFC1  F03B         	goto	u6730
  8461   00777E                     u6731:
  8462   00777E  EFDA  F03B         	goto	l6970
  8463   007782                     u6730:
  8464   007782  5004               	movf	fputc@fp^0,w,c
  8465   007784  6ED9               	movwf	fsr2l,c
  8466   007786  6ADA               	clrf	fsr2h,c
  8467   007788  0E0A               	movlw	10
  8468   00778A  26D9               	addwf	fsr2l,f,c
  8469   00778C  5004               	movf	fputc@fp^0,w,c
  8470   00778E  6EE1               	movwf	fsr1l,c
  8471   007790  6AE2               	clrf	fsr1h,c
  8472   007792  0E03               	movlw	3
  8473   007794  26E1               	addwf	fsr1l,f,c
  8474   007796  50DE               	movf	postinc2,w,c
  8475   007798  5CE6               	subwf	postinc1,w,c
  8476   00779A  50E6               	movf	postinc1,w,c
  8477   00779C  0A80               	xorlw	128
  8478   00779E  6E09               	movwf	(??_fputc+4)^0,c
  8479   0077A0  50DE               	movf	postinc2,w,c
  8480   0077A2  0A80               	xorlw	128
  8481   0077A4  5809               	subwfb	(??_fputc+4)^0,w,c
  8482   0077A6  B0D8               	btfsc	status,0,c
  8483   0077A8  EFD8  F03B         	goto	u6741
  8484   0077AC  EFDA  F03B         	goto	u6740
  8485   0077B0                     u6741:
  8486   0077B0  EFFA  F03B         	goto	l1411
  8487   0077B4                     u6740:
  8488   0077B4                     l6970:
  8489   0077B4  5004               	movf	fputc@fp^0,w,c
  8490   0077B6  6ED9               	movwf	fsr2l,c
  8491   0077B8  6ADA               	clrf	fsr2h,c
  8492   0077BA  0E03               	movlw	3
  8493   0077BC  26D9               	addwf	fsr2l,f,c
  8494   0077BE  CFDE F005          	movff	postinc2,??_fputc
  8495   0077C2  CFDD F006          	movff	postdec2,??_fputc+1
  8496   0077C6  5004               	movf	fputc@fp^0,w,c
  8497   0077C8  6ED9               	movwf	fsr2l,c
  8498   0077CA  6ADA               	clrf	fsr2h,c
  8499   0077CC  CFDE F007          	movff	postinc2,??_fputc+2
  8500   0077D0  CFDD F008          	movff	postdec2,??_fputc+3
  8501   0077D4  5005               	movf	??_fputc^0,w,c
  8502   0077D6  2407               	addwf	(??_fputc+2)^0,w,c
  8503   0077D8  6ED9               	movwf	fsr2l,c
  8504   0077DA  5006               	movf	(??_fputc+1)^0,w,c
  8505   0077DC  2008               	addwfc	(??_fputc+3)^0,w,c
  8506   0077DE  6EDA               	movwf	fsr2h,c
  8507   0077E0  C002  FFDF         	movff	fputc@c,indf2
  8508   0077E4  5004               	movf	fputc@fp^0,w,c
  8509   0077E6  6ED9               	movwf	fsr2l,c
  8510   0077E8  6ADA               	clrf	fsr2h,c
  8511   0077EA  0E03               	movlw	3
  8512   0077EC  26D9               	addwf	fsr2l,f,c
  8513   0077EE  2ADE               	incf	postinc2,f,c
  8514   0077F0  0E00               	movlw	0
  8515   0077F2  22DD               	addwfc	postdec2,f,c
  8516   0077F4                     l1411:
  8517   0077F4  0012               	return		;funcret
  8518   0077F6                     __end_of_fputc:
  8519                           	callstack 0
  8520                           
  8521 ;; *************** function _putch *****************
  8522 ;; Defined at:
  8523 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  c               1    wreg     unsigned char 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;  c               1    0[COMRAM] unsigned char 
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  1    wreg      void 
  8530 ;; Registers used:
  8531 ;;		wreg
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8541 ;;Total ram usage:        0 bytes
  8542 ;; Hardware stack levels used: 1
  8543 ;; Hardware stack levels required when called: 2
  8544 ;; This function calls:
  8545 ;;		Nothing
  8546 ;; This function is called by:
  8547 ;;		_fputc
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           	psect	text26
  8552   00822E                     __ptext26:
  8553                           	callstack 0
  8554   00822E                     _putch:
  8555                           	callstack 24
  8556   00822E  0012               	return		;funcret
  8557   008230                     __end_of_putch:
  8558                           	callstack 0
  8559                           
  8560 ;; *************** function _memcpy *****************
  8561 ;; Defined at:
  8562 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  8563 ;; Parameters:    Size  Location     Type
  8564 ;;  d1              2    1[COMRAM] PTR void 
  8565 ;;		 -> dbuf(80), 
  8566 ;;  s1              2    3[COMRAM] PTR const void 
  8567 ;;		 -> dbuf(80), 
  8568 ;;  n               2    5[COMRAM] unsigned int 
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;  s               2   10[COMRAM] PTR const unsigned char 
  8571 ;;		 -> dbuf(80), 
  8572 ;;  d               2    8[COMRAM] PTR unsigned char 
  8573 ;;		 -> dbuf(80), 
  8574 ;;  tmp             1    7[COMRAM] unsigned char 
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  2    1[COMRAM] PTR void 
  8577 ;; Registers used:
  8578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/0
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8584 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8585 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8587 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8588 ;;Total ram usage:       11 bytes
  8589 ;; Hardware stack levels used: 1
  8590 ;; Hardware stack levels required when called: 2
  8591 ;; This function calls:
  8592 ;;		Nothing
  8593 ;; This function is called by:
  8594 ;;		_efgtoa
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           
  8598                           	psect	text27
  8599   007C98                     __ptext27:
  8600                           	callstack 0
  8601   007C98                     _memcpy:
  8602                           	callstack 24
  8603   007C98  C004  F00B         	movff	memcpy@s1,memcpy@s
  8604   007C9C  C005  F00C         	movff	memcpy@s1+1,memcpy@s+1
  8605   007CA0  C002  F009         	movff	memcpy@d1,memcpy@d
  8606   007CA4  C003  F00A         	movff	memcpy@d1+1,memcpy@d+1
  8607   007CA8  EF66  F03E         	goto	l7632
  8608   007CAC                     l7624:
  8609   007CAC  C00B  FFD9         	movff	memcpy@s,fsr2l
  8610   007CB0  C00C  FFDA         	movff	memcpy@s+1,fsr2h
  8611   007CB4  50DF               	movf	indf2,w,c
  8612   007CB6  6E08               	movwf	memcpy@tmp^0,c
  8613   007CB8  4A0B               	infsnz	memcpy@s^0,f,c
  8614   007CBA  2A0C               	incf	(memcpy@s+1)^0,f,c
  8615   007CBC  C009  FFD9         	movff	memcpy@d,fsr2l
  8616   007CC0  C00A  FFDA         	movff	memcpy@d+1,fsr2h
  8617   007CC4  C008  FFDF         	movff	memcpy@tmp,indf2
  8618   007CC8  4A09               	infsnz	memcpy@d^0,f,c
  8619   007CCA  2A0A               	incf	(memcpy@d+1)^0,f,c
  8620   007CCC                     l7632:
  8621   007CCC  0606               	decf	memcpy@n^0,f,c
  8622   007CCE  A0D8               	btfss	status,0,c
  8623   007CD0  0607               	decf	(memcpy@n+1)^0,f,c
  8624   007CD2  2806               	incf	memcpy@n^0,w,c
  8625   007CD4  E106               	bnz	u7941
  8626   007CD6  2807               	incf	(memcpy@n+1)^0,w,c
  8627   007CD8  A4D8               	btfss	status,2,c
  8628   007CDA  EF71  F03E         	goto	u7941
  8629   007CDE  EF73  F03E         	goto	u7940
  8630   007CE2                     u7941:
  8631   007CE2  EF56  F03E         	goto	l7624
  8632   007CE6                     u7940:
  8633   007CE6  0012               	return		;funcret
  8634   007CE8                     __end_of_memcpy:
  8635                           	callstack 0
  8636                           
  8637 ;; *************** function _labs *****************
  8638 ;; Defined at:
  8639 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  a               4    1[COMRAM] long 
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;		None
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  4    1[COMRAM] long 
  8646 ;; Registers used:
  8647 ;;		wreg, status,2, status,0
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8655 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8656 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8657 ;;Total ram usage:        8 bytes
  8658 ;; Hardware stack levels used: 1
  8659 ;; Hardware stack levels required when called: 2
  8660 ;; This function calls:
  8661 ;;		Nothing
  8662 ;; This function is called by:
  8663 ;;		_efgtoa
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667                           	psect	text28
  8668   007C42                     __ptext28:
  8669                           	callstack 0
  8670   007C42                     _labs:
  8671                           	callstack 24
  8672   007C42  BE05               	btfsc	(labs@a+3)^0,7,c
  8673   007C44  EF26  F03E         	goto	u7831
  8674   007C48  EF28  F03E         	goto	u7830
  8675   007C4C                     u7831:
  8676   007C4C  EF32  F03E         	goto	l7590
  8677   007C50                     u7830:
  8678   007C50  C002  F002         	movff	labs@a,?_labs
  8679   007C54  C003  F003         	movff	labs@a+1,?_labs+1
  8680   007C58  C004  F004         	movff	labs@a+2,?_labs+2
  8681   007C5C  C005  F005         	movff	labs@a+3,?_labs+3
  8682   007C60  EF4B  F03E         	goto	l1393
  8683   007C64                     l7590:
  8684   007C64  C002  F006         	movff	labs@a,??_labs
  8685   007C68  C003  F007         	movff	labs@a+1,??_labs+1
  8686   007C6C  C004  F008         	movff	labs@a+2,??_labs+2
  8687   007C70  C005  F009         	movff	labs@a+3,??_labs+3
  8688   007C74  1E06               	comf	??_labs^0,f,c
  8689   007C76  1E07               	comf	(??_labs+1)^0,f,c
  8690   007C78  1E08               	comf	(??_labs+2)^0,f,c
  8691   007C7A  1E09               	comf	(??_labs+3)^0,f,c
  8692   007C7C  2A06               	incf	??_labs^0,f,c
  8693   007C7E  0E00               	movlw	0
  8694   007C80  2207               	addwfc	(??_labs+1)^0,f,c
  8695   007C82  2208               	addwfc	(??_labs+2)^0,f,c
  8696   007C84  2209               	addwfc	(??_labs+3)^0,f,c
  8697   007C86  C006  F002         	movff	??_labs,?_labs
  8698   007C8A  C007  F003         	movff	??_labs+1,?_labs+1
  8699   007C8E  C008  F004         	movff	??_labs+2,?_labs+2
  8700   007C92  C009  F005         	movff	??_labs+3,?_labs+3
  8701   007C96                     l1393:
  8702   007C96  0012               	return		;funcret
  8703   007C98                     __end_of_labs:
  8704                           	callstack 0
  8705                           
  8706 ;; *************** function _floorf *****************
  8707 ;; Defined at:
  8708 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;  x               4   67[COMRAM] float 
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;  u               4   83[COMRAM] struct .
  8713 ;;  m               4   77[COMRAM] unsigned long 
  8714 ;;  e               2   81[COMRAM] int 
  8715 ;; Return value:  Size  Location     Type
  8716 ;;                  4   67[COMRAM] float 
  8717 ;; Registers used:
  8718 ;;		wreg, status,2, status,0
  8719 ;; Tracked objects:
  8720 ;;		On entry : 0/0
  8721 ;;		On exit  : 0/0
  8722 ;;		Unchanged: 0/0
  8723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8724 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8725 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8726 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8727 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8728 ;;Total ram usage:       20 bytes
  8729 ;; Hardware stack levels used: 1
  8730 ;; Hardware stack levels required when called: 2
  8731 ;; This function calls:
  8732 ;;		Nothing
  8733 ;; This function is called by:
  8734 ;;		_efgtoa
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738                           	psect	text29
  8739   0067CE                     __ptext29:
  8740                           	callstack 0
  8741   0067CE                     _floorf:
  8742                           	callstack 24
  8743   0067CE  C0CF  F054         	movff	floorf@F521,floorf@u
  8744   0067D2  C0D0  F055         	movff	floorf@F521+1,floorf@u+1
  8745   0067D6  C0D1  F056         	movff	floorf@F521+2,floorf@u+2
  8746   0067DA  C0D2  F057         	movff	floorf@F521+3,floorf@u+3
  8747   0067DE  C044  F054         	movff	floorf@x,floorf@u
  8748   0067E2  C045  F055         	movff	floorf@x+1,floorf@u+1
  8749   0067E6  C046  F056         	movff	floorf@x+2,floorf@u+2
  8750   0067EA  C047  F057         	movff	floorf@x+3,floorf@u+3
  8751   0067EE  0E81               	movlw	129
  8752   0067F0  6E48               	movwf	??_floorf^0,c
  8753   0067F2  0EFF               	movlw	255
  8754   0067F4  6E49               	movwf	(??_floorf+1)^0,c
  8755   0067F6  C054  F04A         	movff	floorf@u,??_floorf+2
  8756   0067FA  C055  F04B         	movff	floorf@u+1,??_floorf+3
  8757   0067FE  C056  F04C         	movff	floorf@u+2,??_floorf+4
  8758   006802  C057  F04D         	movff	floorf@u+3,??_floorf+5
  8759   006806  0E18               	movlw	24
  8760   006808  EF0B  F034         	goto	u7840
  8761   00680C                     u7845:
  8762   00680C  90D8               	bcf	status,0,c
  8763   00680E  324D               	rrcf	(??_floorf+5)^0,f,c
  8764   006810  324C               	rrcf	(??_floorf+4)^0,f,c
  8765   006812  324B               	rrcf	(??_floorf+3)^0,f,c
  8766   006814  324A               	rrcf	(??_floorf+2)^0,f,c
  8767   006816                     u7840:
  8768   006816  2EE8               	decfsz	wreg,f,c
  8769   006818  EF06  F034         	goto	u7845
  8770   00681C  504A               	movf	(??_floorf+2)^0,w,c
  8771   00681E  2448               	addwf	??_floorf^0,w,c
  8772   006820  6E52               	movwf	floorf@e^0,c
  8773   006822  0E00               	movlw	0
  8774   006824  2049               	addwfc	(??_floorf+1)^0,w,c
  8775   006826  6E53               	movwf	(floorf@e+1)^0,c
  8776   006828  BE53               	btfsc	(floorf@e+1)^0,7,c
  8777   00682A  EF20  F034         	goto	u7851
  8778   00682E  5053               	movf	(floorf@e+1)^0,w,c
  8779   006830  E109               	bnz	u7850
  8780   006832  0E17               	movlw	23
  8781   006834  5C52               	subwf	floorf@e^0,w,c
  8782   006836  A0D8               	btfss	status,0,c
  8783   006838  EF20  F034         	goto	u7851
  8784   00683C  EF22  F034         	goto	u7850
  8785   006840                     u7851:
  8786   006840  EF2C  F034         	goto	l7600
  8787   006844                     u7850:
  8788   006844                     l7598:
  8789   006844  C044  F044         	movff	floorf@x,?_floorf
  8790   006848  C045  F045         	movff	floorf@x+1,?_floorf+1
  8791   00684C  C046  F046         	movff	floorf@x+2,?_floorf+2
  8792   006850  C047  F047         	movff	floorf@x+3,?_floorf+3
  8793   006854  EFEF  F034         	goto	l1379
  8794   006858                     l7600:
  8795   006858  BE53               	btfsc	(floorf@e+1)^0,7,c
  8796   00685A  EF31  F034         	goto	u7861
  8797   00685E  EF33  F034         	goto	u7860
  8798   006862                     u7861:
  8799   006862  EFA3  F034         	goto	l7610
  8800   006866                     u7860:
  8801   006866  C052  F048         	movff	floorf@e,??_floorf
  8802   00686A  0EFF               	movlw	255
  8803   00686C  6E49               	movwf	(??_floorf+1)^0,c
  8804   00686E  0EFF               	movlw	255
  8805   006870  6E4A               	movwf	(??_floorf+2)^0,c
  8806   006872  0E7F               	movlw	127
  8807   006874  6E4B               	movwf	(??_floorf+3)^0,c
  8808   006876  0E00               	movlw	0
  8809   006878  6E4C               	movwf	(??_floorf+4)^0,c
  8810   00687A                     u7875:
  8811   00687A  6648               	tstfsz	??_floorf^0,c
  8812   00687C  EF42  F034         	goto	u7876
  8813   006880  EF4A  F034         	goto	u7877
  8814   006884                     u7876:
  8815   006884  344C               	rlcf	(??_floorf+4)^0,w,c
  8816   006886  324C               	rrcf	(??_floorf+4)^0,f,c
  8817   006888  324B               	rrcf	(??_floorf+3)^0,f,c
  8818   00688A  324A               	rrcf	(??_floorf+2)^0,f,c
  8819   00688C  3249               	rrcf	(??_floorf+1)^0,f,c
  8820   00688E  2E48               	decfsz	??_floorf^0,f,c
  8821   006890  EF3D  F034         	goto	u7875
  8822   006894                     u7877:
  8823   006894  C049  F04E         	movff	??_floorf+1,floorf@m
  8824   006898  C04A  F04F         	movff	??_floorf+2,floorf@m+1
  8825   00689C  C04B  F050         	movff	??_floorf+3,floorf@m+2
  8826   0068A0  C04C  F051         	movff	??_floorf+4,floorf@m+3
  8827   0068A4  504E               	movf	floorf@m^0,w,c
  8828   0068A6  1454               	andwf	floorf@u^0,w,c
  8829   0068A8  6E48               	movwf	??_floorf^0,c
  8830   0068AA  504F               	movf	(floorf@m+1)^0,w,c
  8831   0068AC  1455               	andwf	(floorf@u+1)^0,w,c
  8832   0068AE  6E49               	movwf	(??_floorf+1)^0,c
  8833   0068B0  5050               	movf	(floorf@m+2)^0,w,c
  8834   0068B2  1456               	andwf	(floorf@u+2)^0,w,c
  8835   0068B4  6E4A               	movwf	(??_floorf+2)^0,c
  8836   0068B6  5051               	movf	(floorf@m+3)^0,w,c
  8837   0068B8  1457               	andwf	(floorf@u+3)^0,w,c
  8838   0068BA  6E4B               	movwf	(??_floorf+3)^0,c
  8839   0068BC  5048               	movf	??_floorf^0,w,c
  8840   0068BE  1049               	iorwf	(??_floorf+1)^0,w,c
  8841   0068C0  104A               	iorwf	(??_floorf+2)^0,w,c
  8842   0068C2  104B               	iorwf	(??_floorf+3)^0,w,c
  8843   0068C4  A4D8               	btfss	status,2,c
  8844   0068C6  EF67  F034         	goto	u7881
  8845   0068CA  EF69  F034         	goto	u7880
  8846   0068CE                     u7881:
  8847   0068CE  EF6B  F034         	goto	l7606
  8848   0068D2                     u7880:
  8849   0068D2  EF22  F034         	goto	l7598
  8850   0068D6                     l7606:
  8851   0068D6  C054  F048         	movff	floorf@u,??_floorf
  8852   0068DA  C055  F049         	movff	floorf@u+1,??_floorf+1
  8853   0068DE  C056  F04A         	movff	floorf@u+2,??_floorf+2
  8854   0068E2  C057  F04B         	movff	floorf@u+3,??_floorf+3
  8855   0068E6  0E20               	movlw	32
  8856   0068E8  EF7B  F034         	goto	u7890
  8857   0068EC                     u7895:
  8858   0068EC  90D8               	bcf	status,0,c
  8859   0068EE  324B               	rrcf	(??_floorf+3)^0,f,c
  8860   0068F0  324A               	rrcf	(??_floorf+2)^0,f,c
  8861   0068F2  3249               	rrcf	(??_floorf+1)^0,f,c
  8862   0068F4  3248               	rrcf	??_floorf^0,f,c
  8863   0068F6                     u7890:
  8864   0068F6  2EE8               	decfsz	wreg,f,c
  8865   0068F8  EF76  F034         	goto	u7895
  8866   0068FC  5048               	movf	??_floorf^0,w,c
  8867   0068FE  1049               	iorwf	(??_floorf+1)^0,w,c
  8868   006900  104A               	iorwf	(??_floorf+2)^0,w,c
  8869   006902  104B               	iorwf	(??_floorf+3)^0,w,c
  8870   006904  B4D8               	btfsc	status,2,c
  8871   006906  EF87  F034         	goto	u7901
  8872   00690A  EF89  F034         	goto	u7900
  8873   00690E                     u7901:
  8874   00690E  EF91  F034         	goto	l1382
  8875   006912                     u7900:
  8876   006912  504E               	movf	floorf@m^0,w,c
  8877   006914  2654               	addwf	floorf@u^0,f,c
  8878   006916  504F               	movf	(floorf@m+1)^0,w,c
  8879   006918  2255               	addwfc	(floorf@u+1)^0,f,c
  8880   00691A  5050               	movf	(floorf@m+2)^0,w,c
  8881   00691C  2256               	addwfc	(floorf@u+2)^0,f,c
  8882   00691E  5051               	movf	(floorf@m+3)^0,w,c
  8883   006920  2257               	addwfc	(floorf@u+3)^0,f,c
  8884   006922                     l1382:
  8885   006922  1C4E               	comf	floorf@m^0,w,c
  8886   006924  6E48               	movwf	??_floorf^0,c
  8887   006926  1C4F               	comf	(floorf@m+1)^0,w,c
  8888   006928  6E49               	movwf	(??_floorf+1)^0,c
  8889   00692A  1C50               	comf	(floorf@m+2)^0,w,c
  8890   00692C  6E4A               	movwf	(??_floorf+2)^0,c
  8891   00692E  1C51               	comf	(floorf@m+3)^0,w,c
  8892   006930  6E4B               	movwf	(??_floorf+3)^0,c
  8893   006932  5048               	movf	??_floorf^0,w,c
  8894   006934  1654               	andwf	floorf@u^0,f,c
  8895   006936  5049               	movf	(??_floorf+1)^0,w,c
  8896   006938  1655               	andwf	(floorf@u+1)^0,f,c
  8897   00693A  504A               	movf	(??_floorf+2)^0,w,c
  8898   00693C  1656               	andwf	(floorf@u+2)^0,f,c
  8899   00693E  504B               	movf	(??_floorf+3)^0,w,c
  8900   006940  1657               	andwf	(floorf@u+3)^0,f,c
  8901   006942  EFE7  F034         	goto	l7618
  8902   006946                     l7610:
  8903   006946  C054  F048         	movff	floorf@u,??_floorf
  8904   00694A  C055  F049         	movff	floorf@u+1,??_floorf+1
  8905   00694E  C056  F04A         	movff	floorf@u+2,??_floorf+2
  8906   006952  C057  F04B         	movff	floorf@u+3,??_floorf+3
  8907   006956  0E20               	movlw	32
  8908   006958  EFB3  F034         	goto	u7910
  8909   00695C                     u7915:
  8910   00695C  90D8               	bcf	status,0,c
  8911   00695E  324B               	rrcf	(??_floorf+3)^0,f,c
  8912   006960  324A               	rrcf	(??_floorf+2)^0,f,c
  8913   006962  3249               	rrcf	(??_floorf+1)^0,f,c
  8914   006964  3248               	rrcf	??_floorf^0,f,c
  8915   006966                     u7910:
  8916   006966  2EE8               	decfsz	wreg,f,c
  8917   006968  EFAE  F034         	goto	u7915
  8918   00696C  5048               	movf	??_floorf^0,w,c
  8919   00696E  1049               	iorwf	(??_floorf+1)^0,w,c
  8920   006970  104A               	iorwf	(??_floorf+2)^0,w,c
  8921   006972  104B               	iorwf	(??_floorf+3)^0,w,c
  8922   006974  A4D8               	btfss	status,2,c
  8923   006976  EFBF  F034         	goto	u7921
  8924   00697A  EFC1  F034         	goto	u7920
  8925   00697E                     u7921:
  8926   00697E  EFCB  F034         	goto	l7614
  8927   006982                     u7920:
  8928   006982  0E00               	movlw	0
  8929   006984  6E54               	movwf	floorf@u^0,c
  8930   006986  0E00               	movlw	0
  8931   006988  6E55               	movwf	(floorf@u+1)^0,c
  8932   00698A  0E00               	movlw	0
  8933   00698C  6E56               	movwf	(floorf@u+2)^0,c
  8934   00698E  0E00               	movlw	0
  8935   006990  6E57               	movwf	(floorf@u+3)^0,c
  8936   006992  EFE7  F034         	goto	l7618
  8937   006996                     l7614:
  8938   006996  90D8               	bcf	status,0,c
  8939   006998  3454               	rlcf	floorf@u^0,w,c
  8940   00699A  6E48               	movwf	??_floorf^0,c
  8941   00699C  3455               	rlcf	(floorf@u+1)^0,w,c
  8942   00699E  6E49               	movwf	(??_floorf+1)^0,c
  8943   0069A0  3456               	rlcf	(floorf@u+2)^0,w,c
  8944   0069A2  6E4A               	movwf	(??_floorf+2)^0,c
  8945   0069A4  3457               	rlcf	(floorf@u+3)^0,w,c
  8946   0069A6  6E4B               	movwf	(??_floorf+3)^0,c
  8947   0069A8  5048               	movf	??_floorf^0,w,c
  8948   0069AA  1049               	iorwf	(??_floorf+1)^0,w,c
  8949   0069AC  104A               	iorwf	(??_floorf+2)^0,w,c
  8950   0069AE  104B               	iorwf	(??_floorf+3)^0,w,c
  8951   0069B0  B4D8               	btfsc	status,2,c
  8952   0069B2  EFDD  F034         	goto	u7931
  8953   0069B6  EFDF  F034         	goto	u7930
  8954   0069BA                     u7931:
  8955   0069BA  EFE7  F034         	goto	l7618
  8956   0069BE                     u7930:
  8957   0069BE  0E00               	movlw	0
  8958   0069C0  6E54               	movwf	floorf@u^0,c
  8959   0069C2  0E00               	movlw	0
  8960   0069C4  6E55               	movwf	(floorf@u+1)^0,c
  8961   0069C6  0E80               	movlw	128
  8962   0069C8  6E56               	movwf	(floorf@u+2)^0,c
  8963   0069CA  0EBF               	movlw	191
  8964   0069CC  6E57               	movwf	(floorf@u+3)^0,c
  8965   0069CE                     l7618:
  8966   0069CE  C054  F044         	movff	floorf@u,?_floorf
  8967   0069D2  C055  F045         	movff	floorf@u+1,?_floorf+1
  8968   0069D6  C056  F046         	movff	floorf@u+2,?_floorf+2
  8969   0069DA  C057  F047         	movff	floorf@u+3,?_floorf+3
  8970   0069DE                     l1379:
  8971   0069DE  0012               	return		;funcret
  8972   0069E0                     __end_of_floorf:
  8973                           	callstack 0
  8974                           
  8975 ;; *************** function ___fpclassifyf *****************
  8976 ;; Defined at:
  8977 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;  x               4    1[COMRAM] float 
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;  u               4   11[COMRAM] struct .
  8982 ;;  e               2    9[COMRAM] int 
  8983 ;; Return value:  Size  Location     Type
  8984 ;;                  2    1[COMRAM] int 
  8985 ;; Registers used:
  8986 ;;		wreg, status,2, status,0
  8987 ;; Tracked objects:
  8988 ;;		On entry : 0/0
  8989 ;;		On exit  : 0/0
  8990 ;;		Unchanged: 0/0
  8991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8992 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8993 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8994 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8995 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8996 ;;Total ram usage:       14 bytes
  8997 ;; Hardware stack levels used: 1
  8998 ;; Hardware stack levels required when called: 2
  8999 ;; This function calls:
  9000 ;;		Nothing
  9001 ;; This function is called by:
  9002 ;;		_efgtoa
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006                           	psect	text30
  9007   007112                     __ptext30:
  9008                           	callstack 0
  9009   007112                     ___fpclassifyf:
  9010                           	callstack 24
  9011   007112  C0D3  F00C         	movff	___fpclassifyf@F465,___fpclassifyf@u
  9012   007116  C0D4  F00D         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  9013   00711A  C0D5  F00E         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  9014   00711E  C0D6  F00F         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  9015   007122  C002  F00C         	movff	___fpclassifyf@x,___fpclassifyf@u
  9016   007126  C003  F00D         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9017   00712A  C004  F00E         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9018   00712E  C005  F00F         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9019   007132  C00C  F006         	movff	___fpclassifyf@u,??___fpclassifyf
  9020   007136  C00D  F007         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9021   00713A  C00E  F008         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9022   00713E  C00F  F009         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9023   007142  0E18               	movlw	24
  9024   007144  EFA9  F038         	goto	u7750
  9025   007148                     u7755:
  9026   007148  90D8               	bcf	status,0,c
  9027   00714A  3209               	rrcf	(??___fpclassifyf+3)^0,f,c
  9028   00714C  3208               	rrcf	(??___fpclassifyf+2)^0,f,c
  9029   00714E  3207               	rrcf	(??___fpclassifyf+1)^0,f,c
  9030   007150  3206               	rrcf	??___fpclassifyf^0,f,c
  9031   007152                     u7750:
  9032   007152  2EE8               	decfsz	wreg,f,c
  9033   007154  EFA4  F038         	goto	u7755
  9034   007158  5006               	movf	??___fpclassifyf^0,w,c
  9035   00715A  6E0A               	movwf	___fpclassifyf@e^0,c
  9036   00715C  6A0B               	clrf	(___fpclassifyf@e+1)^0,c
  9037   00715E  500A               	movf	___fpclassifyf@e^0,w,c
  9038   007160  100B               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9039   007162  A4D8               	btfss	status,2,c
  9040   007164  EFB6  F038         	goto	u7761
  9041   007168  EFB8  F038         	goto	u7760
  9042   00716C                     u7761:
  9043   00716C  EFD8  F038         	goto	l7572
  9044   007170                     u7760:
  9045   007170  90D8               	bcf	status,0,c
  9046   007172  340C               	rlcf	___fpclassifyf@u^0,w,c
  9047   007174  6E06               	movwf	??___fpclassifyf^0,c
  9048   007176  340D               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9049   007178  6E07               	movwf	(??___fpclassifyf+1)^0,c
  9050   00717A  340E               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9051   00717C  6E08               	movwf	(??___fpclassifyf+2)^0,c
  9052   00717E  340F               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9053   007180  6E09               	movwf	(??___fpclassifyf+3)^0,c
  9054   007182  5006               	movf	??___fpclassifyf^0,w,c
  9055   007184  1007               	iorwf	(??___fpclassifyf+1)^0,w,c
  9056   007186  1008               	iorwf	(??___fpclassifyf+2)^0,w,c
  9057   007188  1009               	iorwf	(??___fpclassifyf+3)^0,w,c
  9058   00718A  A4D8               	btfss	status,2,c
  9059   00718C  EFCA  F038         	goto	u7771
  9060   007190  EFCC  F038         	goto	u7770
  9061   007194                     u7771:
  9062   007194  EFD2  F038         	goto	l7568
  9063   007198                     u7770:
  9064   007198  0E00               	movlw	0
  9065   00719A  6E03               	movwf	(?___fpclassifyf+1)^0,c
  9066   00719C  0E02               	movlw	2
  9067   00719E  6E02               	movwf	?___fpclassifyf^0,c
  9068   0071A0  EF07  F039         	goto	l1365
  9069   0071A4                     l7568:
  9070   0071A4  0E00               	movlw	0
  9071   0071A6  6E03               	movwf	(?___fpclassifyf+1)^0,c
  9072   0071A8  0E03               	movlw	3
  9073   0071AA  6E02               	movwf	?___fpclassifyf^0,c
  9074   0071AC  EF07  F039         	goto	l1365
  9075   0071B0                     l7572:
  9076   0071B0  280A               	incf	___fpclassifyf@e^0,w,c
  9077   0071B2  100B               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9078   0071B4  A4D8               	btfss	status,2,c
  9079   0071B6  EFDF  F038         	goto	u7781
  9080   0071BA  EFE1  F038         	goto	u7780
  9081   0071BE                     u7781:
  9082   0071BE  EF03  F039         	goto	l7578
  9083   0071C2                     u7780:
  9084   0071C2  C00C  F006         	movff	___fpclassifyf@u,??___fpclassifyf
  9085   0071C6  C00D  F007         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9086   0071CA  C00E  F008         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9087   0071CE  C00F  F009         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9088   0071D2  0E09               	movlw	9
  9089   0071D4                     u7795:
  9090   0071D4  90D8               	bcf	status,0,c
  9091   0071D6  3606               	rlcf	??___fpclassifyf^0,f,c
  9092   0071D8  3607               	rlcf	(??___fpclassifyf+1)^0,f,c
  9093   0071DA  3608               	rlcf	(??___fpclassifyf+2)^0,f,c
  9094   0071DC  3609               	rlcf	(??___fpclassifyf+3)^0,f,c
  9095   0071DE  2EE8               	decfsz	wreg,f,c
  9096   0071E0  EFEA  F038         	goto	u7795
  9097   0071E4  5006               	movf	??___fpclassifyf^0,w,c
  9098   0071E6  1007               	iorwf	(??___fpclassifyf+1)^0,w,c
  9099   0071E8  1008               	iorwf	(??___fpclassifyf+2)^0,w,c
  9100   0071EA  1009               	iorwf	(??___fpclassifyf+3)^0,w,c
  9101   0071EC  B4D8               	btfsc	status,2,c
  9102   0071EE  EFFB  F038         	goto	u7801
  9103   0071F2  EFFE  F038         	goto	u7800
  9104   0071F6                     u7801:
  9105   0071F6  0E01               	movlw	1
  9106   0071F8  EFFF  F038         	goto	u7810
  9107   0071FC                     u7800:
  9108   0071FC  0E00               	movlw	0
  9109   0071FE                     u7810:
  9110   0071FE  6E02               	movwf	?___fpclassifyf^0,c
  9111   007200  6A03               	clrf	(?___fpclassifyf+1)^0,c
  9112   007202  EF07  F039         	goto	l1365
  9113   007206                     l7578:
  9114   007206  0E00               	movlw	0
  9115   007208  6E03               	movwf	(?___fpclassifyf+1)^0,c
  9116   00720A  0E04               	movlw	4
  9117   00720C  6E02               	movwf	?___fpclassifyf^0,c
  9118   00720E                     l1365:
  9119   00720E  0012               	return		;funcret
  9120   007210                     __end_of___fpclassifyf:
  9121                           	callstack 0
  9122                           
  9123 ;; *************** function ___fltol *****************
  9124 ;; Defined at:
  9125 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  9126 ;; Parameters:    Size  Location     Type
  9127 ;;  f1              4    1[COMRAM] int 
  9128 ;; Auto vars:     Size  Location     Type
  9129 ;;  exp1            1   10[COMRAM] unsigned char 
  9130 ;;  sign1           1    9[COMRAM] unsigned char 
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  4    1[COMRAM] long 
  9133 ;; Registers used:
  9134 ;;		wreg, status,2, status,0
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9141 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9142 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9143 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9144 ;;Total ram usage:       10 bytes
  9145 ;; Hardware stack levels used: 1
  9146 ;; Hardware stack levels required when called: 2
  9147 ;; This function calls:
  9148 ;;		Nothing
  9149 ;; This function is called by:
  9150 ;;		_efgtoa
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           	psect	text31
  9155   006E06                     __ptext31:
  9156                           	callstack 0
  9157   006E06                     ___fltol:
  9158                           	callstack 24
  9159   006E06  3404               	rlcf	(___fltol@f1+2)^0,w,c
  9160   006E08  3405               	rlcf	(___fltol@f1+3)^0,w,c
  9161   006E0A  6E0B               	movwf	___fltol@exp1^0,c
  9162   006E0C  500B               	movf	___fltol@exp1^0,w,c
  9163   006E0E  A4D8               	btfss	status,2,c
  9164   006E10  EF0C  F037         	goto	u7661
  9165   006E14  EF0E  F037         	goto	u7660
  9166   006E18                     u7661:
  9167   006E18  EF18  F037         	goto	l7510
  9168   006E1C                     u7660:
  9169   006E1C                     l7506:
  9170   006E1C  0E00               	movlw	0
  9171   006E1E  6E02               	movwf	?___fltol^0,c
  9172   006E20  0E00               	movlw	0
  9173   006E22  6E03               	movwf	(?___fltol+1)^0,c
  9174   006E24  0E00               	movlw	0
  9175   006E26  6E04               	movwf	(?___fltol+2)^0,c
  9176   006E28  0E00               	movlw	0
  9177   006E2A  6E05               	movwf	(?___fltol+3)^0,c
  9178   006E2C  EF85  F037         	goto	l852
  9179   006E30                     l7510:
  9180   006E30  C002  F006         	movff	___fltol@f1,??___fltol
  9181   006E34  C003  F007         	movff	___fltol@f1+1,??___fltol+1
  9182   006E38  C004  F008         	movff	___fltol@f1+2,??___fltol+2
  9183   006E3C  C005  F009         	movff	___fltol@f1+3,??___fltol+3
  9184   006E40  0E20               	movlw	32
  9185   006E42  EF28  F037         	goto	u7670
  9186   006E46                     u7675:
  9187   006E46  90D8               	bcf	status,0,c
  9188   006E48  3209               	rrcf	(??___fltol+3)^0,f,c
  9189   006E4A  3208               	rrcf	(??___fltol+2)^0,f,c
  9190   006E4C  3207               	rrcf	(??___fltol+1)^0,f,c
  9191   006E4E  3206               	rrcf	??___fltol^0,f,c
  9192   006E50                     u7670:
  9193   006E50  2EE8               	decfsz	wreg,f,c
  9194   006E52  EF23  F037         	goto	u7675
  9195   006E56  5006               	movf	??___fltol^0,w,c
  9196   006E58  6E0A               	movwf	___fltol@sign1^0,c
  9197   006E5A  8E04               	bsf	(___fltol@f1+2)^0,7,c
  9198   006E5C  0EFF               	movlw	255
  9199   006E5E  1602               	andwf	___fltol@f1^0,f,c
  9200   006E60  0EFF               	movlw	255
  9201   006E62  1603               	andwf	(___fltol@f1+1)^0,f,c
  9202   006E64  0EFF               	movlw	255
  9203   006E66  1604               	andwf	(___fltol@f1+2)^0,f,c
  9204   006E68  0E00               	movlw	0
  9205   006E6A  1605               	andwf	(___fltol@f1+3)^0,f,c
  9206   006E6C  0E96               	movlw	150
  9207   006E6E  5E0B               	subwf	___fltol@exp1^0,f,c
  9208   006E70  BE0B               	btfsc	___fltol@exp1^0,7,c
  9209   006E72  EF3F  F037         	goto	u7680
  9210   006E76  EF3D  F037         	goto	u7681
  9211   006E7A                     u7681:
  9212   006E7A  EF55  F037         	goto	l7530
  9213   006E7E                     u7680:
  9214   006E7E  500B               	movf	___fltol@exp1^0,w,c
  9215   006E80  0A80               	xorlw	128
  9216   006E82  0F97               	addlw	151
  9217   006E84  B0D8               	btfsc	status,0,c
  9218   006E86  EF47  F037         	goto	u7691
  9219   006E8A  EF49  F037         	goto	u7690
  9220   006E8E                     u7691:
  9221   006E8E  EF4B  F037         	goto	l7526
  9222   006E92                     u7690:
  9223   006E92  EF0E  F037         	goto	l7506
  9224   006E96                     l7526:
  9225   006E96  90D8               	bcf	status,0,c
  9226   006E98  3205               	rrcf	(___fltol@f1+3)^0,f,c
  9227   006E9A  3204               	rrcf	(___fltol@f1+2)^0,f,c
  9228   006E9C  3203               	rrcf	(___fltol@f1+1)^0,f,c
  9229   006E9E  3202               	rrcf	___fltol@f1^0,f,c
  9230   006EA0  3E0B               	incfsz	___fltol@exp1^0,f,c
  9231   006EA2  EF4B  F037         	goto	l7526
  9232   006EA6  EF6D  F037         	goto	l7540
  9233   006EAA                     l7530:
  9234   006EAA  0E1F               	movlw	31
  9235   006EAC  640B               	cpfsgt	___fltol@exp1^0,c
  9236   006EAE  EF5B  F037         	goto	u7701
  9237   006EB2  EF5D  F037         	goto	u7700
  9238   006EB6                     u7701:
  9239   006EB6  EF65  F037         	goto	l7538
  9240   006EBA                     u7700:
  9241   006EBA  EF0E  F037         	goto	l7506
  9242   006EBE                     l7536:
  9243   006EBE  90D8               	bcf	status,0,c
  9244   006EC0  3602               	rlcf	___fltol@f1^0,f,c
  9245   006EC2  3603               	rlcf	(___fltol@f1+1)^0,f,c
  9246   006EC4  3604               	rlcf	(___fltol@f1+2)^0,f,c
  9247   006EC6  3605               	rlcf	(___fltol@f1+3)^0,f,c
  9248   006EC8  060B               	decf	___fltol@exp1^0,f,c
  9249   006ECA                     l7538:
  9250   006ECA  500B               	movf	___fltol@exp1^0,w,c
  9251   006ECC  A4D8               	btfss	status,2,c
  9252   006ECE  EF6B  F037         	goto	u7711
  9253   006ED2  EF6D  F037         	goto	u7710
  9254   006ED6                     u7711:
  9255   006ED6  EF5F  F037         	goto	l7536
  9256   006EDA                     u7710:
  9257   006EDA                     l7540:
  9258   006EDA  500A               	movf	___fltol@sign1^0,w,c
  9259   006EDC  B4D8               	btfsc	status,2,c
  9260   006EDE  EF73  F037         	goto	u7721
  9261   006EE2  EF75  F037         	goto	u7720
  9262   006EE6                     u7721:
  9263   006EE6  EF7D  F037         	goto	l7544
  9264   006EEA                     u7720:
  9265   006EEA  1E05               	comf	(___fltol@f1+3)^0,f,c
  9266   006EEC  1E04               	comf	(___fltol@f1+2)^0,f,c
  9267   006EEE  1E03               	comf	(___fltol@f1+1)^0,f,c
  9268   006EF0  6C02               	negf	___fltol@f1^0,c
  9269   006EF2  0E00               	movlw	0
  9270   006EF4  2203               	addwfc	(___fltol@f1+1)^0,f,c
  9271   006EF6  2204               	addwfc	(___fltol@f1+2)^0,f,c
  9272   006EF8  2205               	addwfc	(___fltol@f1+3)^0,f,c
  9273   006EFA                     l7544:
  9274   006EFA  C002  F002         	movff	___fltol@f1,?___fltol
  9275   006EFE  C003  F003         	movff	___fltol@f1+1,?___fltol+1
  9276   006F02  C004  F004         	movff	___fltol@f1+2,?___fltol+2
  9277   006F06  C005  F005         	movff	___fltol@f1+3,?___fltol+3
  9278   006F0A                     l852:
  9279   006F0A  0012               	return		;funcret
  9280   006F0C                     __end_of___fltol:
  9281                           	callstack 0
  9282                           
  9283 ;; *************** function ___fleq *****************
  9284 ;; Defined at:
  9285 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  9286 ;; Parameters:    Size  Location     Type
  9287 ;;  ff1             4    1[COMRAM] long 
  9288 ;;  ff2             4    5[COMRAM] long 
  9289 ;; Auto vars:     Size  Location     Type
  9290 ;;		None
  9291 ;; Return value:  Size  Location     Type
  9292 ;;		None               void
  9293 ;; Registers used:
  9294 ;;		wreg, status,2, status,0
  9295 ;; Tracked objects:
  9296 ;;		On entry : 0/0
  9297 ;;		On exit  : 0/0
  9298 ;;		Unchanged: 0/0
  9299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9300 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9302 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9303 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9304 ;;Total ram usage:       12 bytes
  9305 ;; Hardware stack levels used: 1
  9306 ;; Hardware stack levels required when called: 2
  9307 ;; This function calls:
  9308 ;;		Nothing
  9309 ;; This function is called by:
  9310 ;;		_efgtoa
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           	psect	text32
  9315   0078A6                     __ptext32:
  9316                           	callstack 0
  9317   0078A6                     ___fleq:
  9318                           	callstack 24
  9319   0078A6  0E00               	movlw	0
  9320   0078A8  1402               	andwf	___fleq@ff1^0,w,c
  9321   0078AA  6E0A               	movwf	??___fleq^0,c
  9322   0078AC  0E00               	movlw	0
  9323   0078AE  1403               	andwf	(___fleq@ff1+1)^0,w,c
  9324   0078B0  6E0B               	movwf	(??___fleq+1)^0,c
  9325   0078B2  0E80               	movlw	128
  9326   0078B4  1404               	andwf	(___fleq@ff1+2)^0,w,c
  9327   0078B6  6E0C               	movwf	(??___fleq+2)^0,c
  9328   0078B8  0E7F               	movlw	127
  9329   0078BA  1405               	andwf	(___fleq@ff1+3)^0,w,c
  9330   0078BC  6E0D               	movwf	(??___fleq+3)^0,c
  9331   0078BE  500A               	movf	??___fleq^0,w,c
  9332   0078C0  100B               	iorwf	(??___fleq+1)^0,w,c
  9333   0078C2  100C               	iorwf	(??___fleq+2)^0,w,c
  9334   0078C4  100D               	iorwf	(??___fleq+3)^0,w,c
  9335   0078C6  A4D8               	btfss	status,2,c
  9336   0078C8  EF68  F03C         	goto	u7571
  9337   0078CC  EF6A  F03C         	goto	u7570
  9338   0078D0                     u7571:
  9339   0078D0  EF72  F03C         	goto	l7462
  9340   0078D4                     u7570:
  9341   0078D4  0E00               	movlw	0
  9342   0078D6  6E02               	movwf	___fleq@ff1^0,c
  9343   0078D8  0E00               	movlw	0
  9344   0078DA  6E03               	movwf	(___fleq@ff1+1)^0,c
  9345   0078DC  0E00               	movlw	0
  9346   0078DE  6E04               	movwf	(___fleq@ff1+2)^0,c
  9347   0078E0  0E00               	movlw	0
  9348   0078E2  6E05               	movwf	(___fleq@ff1+3)^0,c
  9349   0078E4                     l7462:
  9350   0078E4  0E00               	movlw	0
  9351   0078E6  1406               	andwf	___fleq@ff2^0,w,c
  9352   0078E8  6E0A               	movwf	??___fleq^0,c
  9353   0078EA  0E00               	movlw	0
  9354   0078EC  1407               	andwf	(___fleq@ff2+1)^0,w,c
  9355   0078EE  6E0B               	movwf	(??___fleq+1)^0,c
  9356   0078F0  0E80               	movlw	128
  9357   0078F2  1408               	andwf	(___fleq@ff2+2)^0,w,c
  9358   0078F4  6E0C               	movwf	(??___fleq+2)^0,c
  9359   0078F6  0E7F               	movlw	127
  9360   0078F8  1409               	andwf	(___fleq@ff2+3)^0,w,c
  9361   0078FA  6E0D               	movwf	(??___fleq+3)^0,c
  9362   0078FC  500A               	movf	??___fleq^0,w,c
  9363   0078FE  100B               	iorwf	(??___fleq+1)^0,w,c
  9364   007900  100C               	iorwf	(??___fleq+2)^0,w,c
  9365   007902  100D               	iorwf	(??___fleq+3)^0,w,c
  9366   007904  A4D8               	btfss	status,2,c
  9367   007906  EF87  F03C         	goto	u7581
  9368   00790A  EF89  F03C         	goto	u7580
  9369   00790E                     u7581:
  9370   00790E  EF91  F03C         	goto	l7466
  9371   007912                     u7580:
  9372   007912  0E00               	movlw	0
  9373   007914  6E06               	movwf	___fleq@ff2^0,c
  9374   007916  0E00               	movlw	0
  9375   007918  6E07               	movwf	(___fleq@ff2+1)^0,c
  9376   00791A  0E00               	movlw	0
  9377   00791C  6E08               	movwf	(___fleq@ff2+2)^0,c
  9378   00791E  0E00               	movlw	0
  9379   007920  6E09               	movwf	(___fleq@ff2+3)^0,c
  9380   007922                     l7466:
  9381   007922  5006               	movf	___fleq@ff2^0,w,c
  9382   007924  1802               	xorwf	___fleq@ff1^0,w,c
  9383   007926  E10F               	bnz	u7590
  9384   007928  5007               	movf	(___fleq@ff2+1)^0,w,c
  9385   00792A  1803               	xorwf	(___fleq@ff1+1)^0,w,c
  9386   00792C  E10C               	bnz	u7590
  9387   00792E  5008               	movf	(___fleq@ff2+2)^0,w,c
  9388   007930  1804               	xorwf	(___fleq@ff1+2)^0,w,c
  9389   007932  E109               	bnz	u7590
  9390   007934  5009               	movf	(___fleq@ff2+3)^0,w,c
  9391   007936  1805               	xorwf	(___fleq@ff1+3)^0,w,c
  9392   007938  B4D8               	btfsc	status,2,c
  9393   00793A  EFA1  F03C         	goto	u7591
  9394   00793E  EFA3  F03C         	goto	u7590
  9395   007942                     u7591:
  9396   007942  EFA6  F03C         	goto	l7470
  9397   007946                     u7590:
  9398   007946  90D8               	bcf	status,0,c
  9399   007948  EFA7  F03C         	goto	l814
  9400   00794C                     l7470:
  9401   00794C  80D8               	bsf	status,0,c
  9402   00794E                     l814:
  9403   00794E  0012               	return		;funcret
  9404   007950                     __end_of___fleq:
  9405                           	callstack 0
  9406                           
  9407 ;; *************** function _abs *****************
  9408 ;; Defined at:
  9409 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  9410 ;; Parameters:    Size  Location     Type
  9411 ;;  a               2    7[COMRAM] int 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;		None
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  2    7[COMRAM] int 
  9416 ;; Registers used:
  9417 ;;		wreg, status,2, status,0
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/0
  9420 ;;		On exit  : 0/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9425 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9426 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9427 ;;Total ram usage:        4 bytes
  9428 ;; Hardware stack levels used: 1
  9429 ;; Hardware stack levels required when called: 2
  9430 ;; This function calls:
  9431 ;;		Nothing
  9432 ;; This function is called by:
  9433 ;;		_vfpfcnvrt
  9434 ;; This function uses a non-reentrant model
  9435 ;;
  9436                           
  9437                           	psect	text33
  9438   008036                     __ptext33:
  9439                           	callstack 0
  9440   008036                     _abs:
  9441                           	callstack 25
  9442   008036  BE09               	btfsc	(abs@a+1)^0,7,c
  9443   008038  EF20  F040         	goto	u8391
  9444   00803C  EF22  F040         	goto	u8390
  9445   008040                     u8391:
  9446   008040  EF28  F040         	goto	l1370
  9447   008044                     u8390:
  9448   008044  C008  F008         	movff	abs@a,?_abs
  9449   008048  C009  F009         	movff	abs@a+1,?_abs+1
  9450   00804C  EF34  F040         	goto	l1373
  9451   008050                     l1370:
  9452   008050  C008  F00A         	movff	abs@a,??_abs
  9453   008054  C009  F00B         	movff	abs@a+1,??_abs+1
  9454   008058  1E0A               	comf	??_abs^0,f,c
  9455   00805A  1E0B               	comf	(??_abs+1)^0,f,c
  9456   00805C  4A0A               	infsnz	??_abs^0,f,c
  9457   00805E  2A0B               	incf	(??_abs+1)^0,f,c
  9458   008060  C00A  F008         	movff	??_abs,?_abs
  9459   008064  C00B  F009         	movff	??_abs+1,?_abs+1
  9460   008068                     l1373:
  9461   008068  0012               	return		;funcret
  9462   00806A                     __end_of_abs:
  9463                           	callstack 0
  9464                           
  9465 ;; *************** function ___awmod *****************
  9466 ;; Defined at:
  9467 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;  dividend        2    1[COMRAM] int 
  9470 ;;  divisor         2    3[COMRAM] int 
  9471 ;; Auto vars:     Size  Location     Type
  9472 ;;  sign            1    6[COMRAM] unsigned char 
  9473 ;;  counter         1    5[COMRAM] unsigned char 
  9474 ;; Return value:  Size  Location     Type
  9475 ;;                  2    1[COMRAM] int 
  9476 ;; Registers used:
  9477 ;;		wreg, status,2, status,0
  9478 ;; Tracked objects:
  9479 ;;		On entry : 0/0
  9480 ;;		On exit  : 0/0
  9481 ;;		Unchanged: 0/0
  9482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9483 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9486 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9487 ;;Total ram usage:        6 bytes
  9488 ;; Hardware stack levels used: 1
  9489 ;; Hardware stack levels required when called: 2
  9490 ;; This function calls:
  9491 ;;		Nothing
  9492 ;; This function is called by:
  9493 ;;		_vfpfcnvrt
  9494 ;; This function uses a non-reentrant model
  9495 ;;
  9496                           
  9497                           	psect	text34
  9498   0077F6                     __ptext34:
  9499                           	callstack 0
  9500   0077F6                     ___awmod:
  9501                           	callstack 25
  9502   0077F6  0E00               	movlw	0
  9503   0077F8  6E07               	movwf	___awmod@sign^0,c
  9504   0077FA  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  9505   0077FC  EF04  F03C         	goto	u8010
  9506   007800  EF02  F03C         	goto	u8011
  9507   007804                     u8011:
  9508   007804  EF0A  F03C         	goto	l7686
  9509   007808                     u8010:
  9510   007808  6C02               	negf	___awmod@dividend^0,c
  9511   00780A  1E03               	comf	(___awmod@dividend+1)^0,f,c
  9512   00780C  B0D8               	btfsc	status,0,c
  9513   00780E  2A03               	incf	(___awmod@dividend+1)^0,f,c
  9514   007810  0E01               	movlw	1
  9515   007812  6E07               	movwf	___awmod@sign^0,c
  9516   007814                     l7686:
  9517   007814  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  9518   007816  EF11  F03C         	goto	u8020
  9519   00781A  EF0F  F03C         	goto	u8021
  9520   00781E                     u8021:
  9521   00781E  EF15  F03C         	goto	l7690
  9522   007822                     u8020:
  9523   007822  6C04               	negf	___awmod@divisor^0,c
  9524   007824  1E05               	comf	(___awmod@divisor+1)^0,f,c
  9525   007826  B0D8               	btfsc	status,0,c
  9526   007828  2A05               	incf	(___awmod@divisor+1)^0,f,c
  9527   00782A                     l7690:
  9528   00782A  5004               	movf	___awmod@divisor^0,w,c
  9529   00782C  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  9530   00782E  B4D8               	btfsc	status,2,c
  9531   007830  EF1C  F03C         	goto	u8031
  9532   007834  EF1E  F03C         	goto	u8030
  9533   007838                     u8031:
  9534   007838  EF42  F03C         	goto	l7706
  9535   00783C                     u8030:
  9536   00783C  0E01               	movlw	1
  9537   00783E  6E06               	movwf	___awmod@counter^0,c
  9538   007840  EF26  F03C         	goto	l7696
  9539   007844                     l7694:
  9540   007844  90D8               	bcf	status,0,c
  9541   007846  3604               	rlcf	___awmod@divisor^0,f,c
  9542   007848  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  9543   00784A  2A06               	incf	___awmod@counter^0,f,c
  9544   00784C                     l7696:
  9545   00784C  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  9546   00784E  EF2B  F03C         	goto	u8041
  9547   007852  EF2D  F03C         	goto	u8040
  9548   007856                     u8041:
  9549   007856  EF22  F03C         	goto	l7694
  9550   00785A                     u8040:
  9551   00785A                     l7698:
  9552   00785A  5004               	movf	___awmod@divisor^0,w,c
  9553   00785C  5C02               	subwf	___awmod@dividend^0,w,c
  9554   00785E  5005               	movf	(___awmod@divisor+1)^0,w,c
  9555   007860  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  9556   007862  A0D8               	btfss	status,0,c
  9557   007864  EF36  F03C         	goto	u8051
  9558   007868  EF38  F03C         	goto	u8050
  9559   00786C                     u8051:
  9560   00786C  EF3C  F03C         	goto	l7702
  9561   007870                     u8050:
  9562   007870  5004               	movf	___awmod@divisor^0,w,c
  9563   007872  5E02               	subwf	___awmod@dividend^0,f,c
  9564   007874  5005               	movf	(___awmod@divisor+1)^0,w,c
  9565   007876  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  9566   007878                     l7702:
  9567   007878  90D8               	bcf	status,0,c
  9568   00787A  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  9569   00787C  3204               	rrcf	___awmod@divisor^0,f,c
  9570   00787E  2E06               	decfsz	___awmod@counter^0,f,c
  9571   007880  EF2D  F03C         	goto	l7698
  9572   007884                     l7706:
  9573   007884  5007               	movf	___awmod@sign^0,w,c
  9574   007886  B4D8               	btfsc	status,2,c
  9575   007888  EF48  F03C         	goto	u8061
  9576   00788C  EF4A  F03C         	goto	u8060
  9577   007890                     u8061:
  9578   007890  EF4E  F03C         	goto	l7710
  9579   007894                     u8060:
  9580   007894  6C02               	negf	___awmod@dividend^0,c
  9581   007896  1E03               	comf	(___awmod@dividend+1)^0,f,c
  9582   007898  B0D8               	btfsc	status,0,c
  9583   00789A  2A03               	incf	(___awmod@dividend+1)^0,f,c
  9584   00789C                     l7710:
  9585   00789C  C002  F002         	movff	___awmod@dividend,?___awmod
  9586   0078A0  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  9587   0078A4  0012               	return		;funcret
  9588   0078A6                     __end_of___awmod:
  9589                           	callstack 0
  9590                           
  9591 ;; *************** function ___awdiv *****************
  9592 ;; Defined at:
  9593 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  dividend        2    1[COMRAM] int 
  9596 ;;  divisor         2    3[COMRAM] int 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  quotient        2    7[COMRAM] int 
  9599 ;;  sign            1    6[COMRAM] unsigned char 
  9600 ;;  counter         1    5[COMRAM] unsigned char 
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  2    1[COMRAM] int 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9611 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9613 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9614 ;;Total ram usage:        8 bytes
  9615 ;; Hardware stack levels used: 1
  9616 ;; Hardware stack levels required when called: 2
  9617 ;; This function calls:
  9618 ;;		Nothing
  9619 ;; This function is called by:
  9620 ;;		_vfpfcnvrt
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text35
  9625   0075BC                     __ptext35:
  9626                           	callstack 0
  9627   0075BC                     ___awdiv:
  9628                           	callstack 25
  9629   0075BC  0E00               	movlw	0
  9630   0075BE  6E07               	movwf	___awdiv@sign^0,c
  9631   0075C0  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  9632   0075C2  EFE7  F03A         	goto	u7950
  9633   0075C6  EFE5  F03A         	goto	u7951
  9634   0075CA                     u7951:
  9635   0075CA  EFED  F03A         	goto	l7642
  9636   0075CE                     u7950:
  9637   0075CE  6C04               	negf	___awdiv@divisor^0,c
  9638   0075D0  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  9639   0075D2  B0D8               	btfsc	status,0,c
  9640   0075D4  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  9641   0075D6  0E01               	movlw	1
  9642   0075D8  6E07               	movwf	___awdiv@sign^0,c
  9643   0075DA                     l7642:
  9644   0075DA  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  9645   0075DC  EFF4  F03A         	goto	u7960
  9646   0075E0  EFF2  F03A         	goto	u7961
  9647   0075E4                     u7961:
  9648   0075E4  EFFA  F03A         	goto	l7648
  9649   0075E8                     u7960:
  9650   0075E8  6C02               	negf	___awdiv@dividend^0,c
  9651   0075EA  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  9652   0075EC  B0D8               	btfsc	status,0,c
  9653   0075EE  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  9654   0075F0  0E01               	movlw	1
  9655   0075F2  1A07               	xorwf	___awdiv@sign^0,f,c
  9656   0075F4                     l7648:
  9657   0075F4  0E00               	movlw	0
  9658   0075F6  6E09               	movwf	(___awdiv@quotient+1)^0,c
  9659   0075F8  0E00               	movlw	0
  9660   0075FA  6E08               	movwf	___awdiv@quotient^0,c
  9661   0075FC  5004               	movf	___awdiv@divisor^0,w,c
  9662   0075FE  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  9663   007600  B4D8               	btfsc	status,2,c
  9664   007602  EF05  F03B         	goto	u7971
  9665   007606  EF07  F03B         	goto	u7970
  9666   00760A                     u7971:
  9667   00760A  EF2F  F03B         	goto	l7670
  9668   00760E                     u7970:
  9669   00760E  0E01               	movlw	1
  9670   007610  6E06               	movwf	___awdiv@counter^0,c
  9671   007612  EF0F  F03B         	goto	l7656
  9672   007616                     l7654:
  9673   007616  90D8               	bcf	status,0,c
  9674   007618  3604               	rlcf	___awdiv@divisor^0,f,c
  9675   00761A  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  9676   00761C  2A06               	incf	___awdiv@counter^0,f,c
  9677   00761E                     l7656:
  9678   00761E  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  9679   007620  EF14  F03B         	goto	u7981
  9680   007624  EF16  F03B         	goto	u7980
  9681   007628                     u7981:
  9682   007628  EF0B  F03B         	goto	l7654
  9683   00762C                     u7980:
  9684   00762C                     l7658:
  9685   00762C  90D8               	bcf	status,0,c
  9686   00762E  3608               	rlcf	___awdiv@quotient^0,f,c
  9687   007630  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  9688   007632  5004               	movf	___awdiv@divisor^0,w,c
  9689   007634  5C02               	subwf	___awdiv@dividend^0,w,c
  9690   007636  5005               	movf	(___awdiv@divisor+1)^0,w,c
  9691   007638  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  9692   00763A  A0D8               	btfss	status,0,c
  9693   00763C  EF22  F03B         	goto	u7991
  9694   007640  EF24  F03B         	goto	u7990
  9695   007644                     u7991:
  9696   007644  EF29  F03B         	goto	l7666
  9697   007648                     u7990:
  9698   007648  5004               	movf	___awdiv@divisor^0,w,c
  9699   00764A  5E02               	subwf	___awdiv@dividend^0,f,c
  9700   00764C  5005               	movf	(___awdiv@divisor+1)^0,w,c
  9701   00764E  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  9702   007650  8008               	bsf	___awdiv@quotient^0,0,c
  9703   007652                     l7666:
  9704   007652  90D8               	bcf	status,0,c
  9705   007654  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  9706   007656  3204               	rrcf	___awdiv@divisor^0,f,c
  9707   007658  2E06               	decfsz	___awdiv@counter^0,f,c
  9708   00765A  EF16  F03B         	goto	l7658
  9709   00765E                     l7670:
  9710   00765E  5007               	movf	___awdiv@sign^0,w,c
  9711   007660  B4D8               	btfsc	status,2,c
  9712   007662  EF35  F03B         	goto	u8001
  9713   007666  EF37  F03B         	goto	u8000
  9714   00766A                     u8001:
  9715   00766A  EF3B  F03B         	goto	l7674
  9716   00766E                     u8000:
  9717   00766E  6C08               	negf	___awdiv@quotient^0,c
  9718   007670  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  9719   007672  B0D8               	btfsc	status,0,c
  9720   007674  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  9721   007676                     l7674:
  9722   007676  C008  F002         	movff	___awdiv@quotient,?___awdiv
  9723   00767A  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  9724   00767E  0012               	return		;funcret
  9725   007680                     __end_of___awdiv:
  9726                           	callstack 0
  9727                           
  9728 ;; *************** function _sendStringSerial4 *****************
  9729 ;; Defined at:
  9730 ;;		line 38 in file "serial.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;  string          2    2[COMRAM] PTR unsigned char 
  9733 ;;		 -> main@blue_val(20), main@green_val(20), main@red_val(20), main@clear_val(20), 
  9734 ;;		 -> decide_action@blue_val(20), decide_action@green_val(20), decide_action@red_val(20), 
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;		None
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      void 
  9739 ;; Registers used:
  9740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/0
  9743 ;;		On exit  : 0/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9749 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9750 ;;Total ram usage:        2 bytes
  9751 ;; Hardware stack levels used: 1
  9752 ;; Hardware stack levels required when called: 3
  9753 ;; This function calls:
  9754 ;;		_sendCharSerial4
  9755 ;; This function is called by:
  9756 ;;		_decide_action
  9757 ;;		_main
  9758 ;; This function uses a non-reentrant model
  9759 ;;
  9760                           
  9761                           	psect	text36
  9762   00809A                     __ptext36:
  9763                           	callstack 0
  9764   00809A                     _sendStringSerial4:
  9765                           	callstack 27
  9766   00809A                     
  9767                           ;serial.c: 40:     while(*string != 0){
  9768   00809A  EF58  F040         	goto	l5644
  9769   00809E                     l5640:
  9770                           
  9771                           ;serial.c: 41:   sendCharSerial4(*string++);
  9772   00809E  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  9773   0080A2  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9774   0080A6  50DF               	movf	indf2,w,c
  9775   0080A8  ECDF  F040         	call	_sendCharSerial4
  9776   0080AC  4A03               	infsnz	sendStringSerial4@string^0,f,c
  9777   0080AE  2A04               	incf	(sendStringSerial4@string+1)^0,f,c
  9778   0080B0                     l5644:
  9779                           
  9780                           ;serial.c: 40:     while(*string != 0){
  9781   0080B0  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  9782   0080B4  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9783   0080B8  50DF               	movf	indf2,w,c
  9784   0080BA  A4D8               	btfss	status,2,c
  9785   0080BC  EF62  F040         	goto	u5591
  9786   0080C0  EF64  F040         	goto	u5590
  9787   0080C4                     u5591:
  9788   0080C4  EF4F  F040         	goto	l5640
  9789   0080C8                     u5590:
  9790   0080C8  0012               	return		;funcret
  9791   0080CA                     __end_of_sendStringSerial4:
  9792                           	callstack 0
  9793                           
  9794 ;; *************** function _sendCharSerial4 *****************
  9795 ;; Defined at:
  9796 ;;		line 31 in file "serial.c"
  9797 ;; Parameters:    Size  Location     Type
  9798 ;;  charToSend      1    wreg     unsigned char 
  9799 ;; Auto vars:     Size  Location     Type
  9800 ;;  charToSend      1    1[COMRAM] unsigned char 
  9801 ;; Return value:  Size  Location     Type
  9802 ;;                  1    wreg      void 
  9803 ;; Registers used:
  9804 ;;		wreg
  9805 ;; Tracked objects:
  9806 ;;		On entry : 0/0
  9807 ;;		On exit  : 0/0
  9808 ;;		Unchanged: 0/0
  9809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9814 ;;Total ram usage:        1 bytes
  9815 ;; Hardware stack levels used: 1
  9816 ;; Hardware stack levels required when called: 2
  9817 ;; This function calls:
  9818 ;;		Nothing
  9819 ;; This function is called by:
  9820 ;;		_sendStringSerial4
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           
  9824                           	psect	text37
  9825   0081BE                     __ptext37:
  9826                           	callstack 0
  9827   0081BE                     _sendCharSerial4:
  9828                           	callstack 27
  9829                           
  9830                           ;incstack = 0
  9831                           ;sendCharSerial4@charToSend stored from wreg
  9832   0081BE  6E02               	movwf	sendCharSerial4@charToSend^0,c
  9833   0081C0                     l490:
  9834   0081C0  010E               	movlb	14	; () banked
  9835   0081C2  A537               	btfss	55,2,b	;volatile
  9836   0081C4  EFE6  F040         	goto	u5381
  9837   0081C8  EFE8  F040         	goto	u5380
  9838   0081CC                     u5381:
  9839   0081CC  EFE0  F040         	goto	l490
  9840   0081D0                     u5380:
  9841   0081D0                     
  9842                           ; BSR set to: 14
  9843                           ;serial.c: 33:     TX4REG = charToSend;
  9844   0081D0  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  9845   0081D4                     
  9846                           ; BSR set to: 14
  9847   0081D4  0012               	return		;funcret
  9848   0081D6                     __end_of_sendCharSerial4:
  9849                           	callstack 0
  9850                           
  9851 ;; *************** function _powf *****************
  9852 ;; Defined at:
  9853 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\powf.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;  x               4    0[BANK0 ] float 
  9856 ;;  y               4    4[BANK0 ] float 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;  s2              4  144[BANK1 ] float 
  9859 ;;  s_h             4  116[BANK1 ] struct fui
  9860 ;;  t_h             4  112[BANK1 ] struct fui
  9861 ;;  t_l             4   52[BANK1 ] float 
  9862 ;;  s_l             4   48[BANK1 ] float 
  9863 ;;  z               4  180[BANK1 ] struct fui
  9864 ;;  t               4  176[BANK1 ] struct fui
  9865 ;;  ix              4  172[BANK1 ] struct fui
  9866 ;;  j               4  168[BANK1 ] long 
  9867 ;;  k               4  164[BANK1 ] long 
  9868 ;;  p_h             4  160[BANK1 ] struct fui
  9869 ;;  is              4  152[BANK1 ] struct fui
  9870 ;;  iy              4  148[BANK1 ] long 
  9871 ;;  t1              4  140[BANK1 ] struct fui
  9872 ;;  n               4  136[BANK1 ] long 
  9873 ;;  hy              4  132[BANK1 ] struct fui
  9874 ;;  v               4  128[BANK1 ] float 
  9875 ;;  u               4  124[BANK1 ] float 
  9876 ;;  ax              4  120[BANK1 ] struct fui
  9877 ;;  p_l             4  108[BANK1 ] float 
  9878 ;;  hx              4  104[BANK1 ] struct fui
  9879 ;;  sn              4  100[BANK1 ] unsigned long 
  9880 ;;  s               4   96[BANK1 ] float 
  9881 ;;  yisint          4   84[BANK1 ] long 
  9882 ;;  r               4   80[BANK1 ] float 
  9883 ;;  w               4   68[BANK1 ] float 
  9884 ;;  y1              4   44[BANK1 ] struct fui
  9885 ;;  i               4   40[BANK1 ] long 
  9886 ;;  z_l             4   36[BANK1 ] float 
  9887 ;;  z_h             4   32[BANK1 ] float 
  9888 ;;  t2              4   28[BANK1 ] float 
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  4    0[BANK0 ] float 
  9891 ;; Registers used:
  9892 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9893 ;; Tracked objects:
  9894 ;;		On entry : 0/0
  9895 ;;		On exit  : 0/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9898 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9899 ;;      Locals:         0       0     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9900 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9901 ;;      Totals:         0      17     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9902 ;;Total ram usage:      201 bytes
  9903 ;; Hardware stack levels used: 1
  9904 ;; Hardware stack levels required when called: 4
  9905 ;; This function calls:
  9906 ;;		___fladd
  9907 ;;		___fldiv
  9908 ;;		___flge
  9909 ;;		___flmul
  9910 ;;		___flneg
  9911 ;;		___flsub
  9912 ;;		___xxtofl
  9913 ;;		_scalbnf
  9914 ;;		_sqrtf
  9915 ;; This function is called by:
  9916 ;;		_decide_action
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920                           	psect	text38
  9921   000EDC                     __ptext38:
  9922                           	callstack 0
  9923   000EDC                     _powf:
  9924                           	callstack 25
  9925   000EDC  C060  F168         	movff	powf@x,powf@hx
  9926   000EE0  C061  F169         	movff	powf@x+1,powf@hx+1
  9927   000EE4  C062  F16A         	movff	powf@x+2,powf@hx+2
  9928   000EE8  C063  F16B         	movff	powf@x+3,powf@hx+3
  9929   000EEC  C064  F184         	movff	powf@y,powf@hy
  9930   000EF0  C065  F185         	movff	powf@y+1,powf@hy+1
  9931   000EF4  C066  F186         	movff	powf@y+2,powf@hy+2
  9932   000EF8  C067  F187         	movff	powf@y+3,powf@hy+3
  9933   000EFC  0EFF               	movlw	255
  9934   000EFE  0101               	movlb	1	; () banked
  9935   000F00  1568               	andwf	powf@hx& (0+255),w,b
  9936   000F02  6FAC               	movwf	powf@ix& (0+255),b
  9937   000F04  0EFF               	movlw	255
  9938   000F06  1569               	andwf	(powf@hx+1)& (0+255),w,b
  9939   000F08  6FAD               	movwf	(powf@ix+1)& (0+255),b
  9940   000F0A  0EFF               	movlw	255
  9941   000F0C  156A               	andwf	(powf@hx+2)& (0+255),w,b
  9942   000F0E  6FAE               	movwf	(powf@ix+2)& (0+255),b
  9943   000F10  0E7F               	movlw	127
  9944   000F12  156B               	andwf	(powf@hx+3)& (0+255),w,b
  9945   000F14  6FAF               	movwf	(powf@ix+3)& (0+255),b
  9946   000F16  0EFF               	movlw	255
  9947   000F18  1584               	andwf	powf@hy& (0+255),w,b
  9948   000F1A  6F94               	movwf	powf@iy& (0+255),b
  9949   000F1C  0EFF               	movlw	255
  9950   000F1E  1585               	andwf	(powf@hy+1)& (0+255),w,b
  9951   000F20  6F95               	movwf	(powf@iy+1)& (0+255),b
  9952   000F22  0EFF               	movlw	255
  9953   000F24  1586               	andwf	(powf@hy+2)& (0+255),w,b
  9954   000F26  6F96               	movwf	(powf@iy+2)& (0+255),b
  9955   000F28  0E7F               	movlw	127
  9956   000F2A  1587               	andwf	(powf@hy+3)& (0+255),w,b
  9957   000F2C  6F97               	movwf	(powf@iy+3)& (0+255),b
  9958   000F2E  5194               	movf	powf@iy& (0+255),w,b
  9959   000F30  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  9960   000F32  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  9961   000F34  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  9962   000F36  A4D8               	btfss	status,2,c
  9963   000F38  EFA0  F007         	goto	u8591
  9964   000F3C  EFA2  F007         	goto	u8590
  9965   000F40                     u8591:
  9966   000F40  EFAD  F007         	goto	l8108
  9967   000F44                     u8590:
  9968   000F44                     
  9969                           ; BSR set to: 1
  9970   000F44  0E00               	movlw	0
  9971   000F46  0100               	movlb	0	; () banked
  9972   000F48  6F60               	movwf	?_powf& (0+255),b
  9973   000F4A  0E00               	movlw	0
  9974   000F4C  6F61               	movwf	(?_powf+1)& (0+255),b
  9975   000F4E  0E80               	movlw	128
  9976   000F50  6F62               	movwf	(?_powf+2)& (0+255),b
  9977   000F52  0E3F               	movlw	63
  9978   000F54  6F63               	movwf	(?_powf+3)& (0+255),b
  9979   000F56  EFAD  F019         	goto	l1479
  9980   000F5A                     l8108:
  9981                           
  9982                           ; BSR set to: 1
  9983   000F5A  0E80               	movlw	128
  9984   000F5C  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  9985   000F5E  E109               	bnz	u8601
  9986   000F60  0E3F               	movlw	63
  9987   000F62  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  9988   000F64  1168               	iorwf	powf@hx& (0+255),w,b
  9989   000F66  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  9990   000F68  A4D8               	btfss	status,2,c
  9991   000F6A  EFB9  F007         	goto	u8601
  9992   000F6E  EFBB  F007         	goto	u8600
  9993   000F72                     u8601:
  9994   000F72  EFC6  F007         	goto	l8114
  9995   000F76                     u8600:
  9996   000F76                     
  9997                           ; BSR set to: 1
  9998   000F76  0E00               	movlw	0
  9999   000F78  0100               	movlb	0	; () banked
 10000   000F7A  6F60               	movwf	?_powf& (0+255),b
 10001   000F7C  0E00               	movlw	0
 10002   000F7E  6F61               	movwf	(?_powf+1)& (0+255),b
 10003   000F80  0E80               	movlw	128
 10004   000F82  6F62               	movwf	(?_powf+2)& (0+255),b
 10005   000F84  0E3F               	movlw	63
 10006   000F86  6F63               	movwf	(?_powf+3)& (0+255),b
 10007   000F88  EFAD  F019         	goto	l1479
 10008   000F8C                     l8114:
 10009                           
 10010                           ; BSR set to: 1
 10011   000F8C  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10012   000F8E  EFD7  F007         	goto	u8610
 10013   000F92  05AC               	decf	powf@ix& (0+255),w,b
 10014   000F94  0E00               	movlw	0
 10015   000F96  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
 10016   000F98  0E80               	movlw	128
 10017   000F9A  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
 10018   000F9C  0E7F               	movlw	127
 10019   000F9E  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
 10020   000FA0  B0D8               	btfsc	status,0,c
 10021   000FA2  EFD5  F007         	goto	u8611
 10022   000FA6  EFD7  F007         	goto	u8610
 10023   000FAA                     u8611:
 10024   000FAA  EFE8  F007         	goto	l8118
 10025   000FAE                     u8610:
 10026   000FAE                     
 10027                           ; BSR set to: 1
 10028   000FAE  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
 10029   000FB0  EFE6  F007         	goto	u8621
 10030   000FB4  0594               	decf	powf@iy& (0+255),w,b
 10031   000FB6  0E00               	movlw	0
 10032   000FB8  5995               	subwfb	(powf@iy+1)& (0+255),w,b
 10033   000FBA  0E80               	movlw	128
 10034   000FBC  5996               	subwfb	(powf@iy+2)& (0+255),w,b
 10035   000FBE  0E7F               	movlw	127
 10036   000FC0  5997               	subwfb	(powf@iy+3)& (0+255),w,b
 10037   000FC2  A0D8               	btfss	status,0,c
 10038   000FC4  EFE6  F007         	goto	u8621
 10039   000FC8  EFE8  F007         	goto	u8620
 10040   000FCC                     u8621:
 10041   000FCC  EF04  F008         	goto	l8122
 10042   000FD0                     u8620:
 10043   000FD0                     l8118:
 10044                           
 10045                           ; BSR set to: 1
 10046   000FD0  C060  F002         	movff	powf@x,___fladd@b
 10047   000FD4  C061  F003         	movff	powf@x+1,___fladd@b+1
 10048   000FD8  C062  F004         	movff	powf@x+2,___fladd@b+2
 10049   000FDC  C063  F005         	movff	powf@x+3,___fladd@b+3
 10050   000FE0  C064  F006         	movff	powf@y,___fladd@a
 10051   000FE4  C065  F007         	movff	powf@y+1,___fladd@a+1
 10052   000FE8  C066  F008         	movff	powf@y+2,___fladd@a+2
 10053   000FEC  C067  F009         	movff	powf@y+3,___fladd@a+3
 10054   000FF0  ECE4  F027         	call	___fladd	;wreg free
 10055   000FF4  C002  F060         	movff	?___fladd,?_powf
 10056   000FF8  C003  F061         	movff	?___fladd+1,?_powf+1
 10057   000FFC  C004  F062         	movff	?___fladd+2,?_powf+2
 10058   001000  C005  F063         	movff	?___fladd+3,?_powf+3
 10059   001004  EFAD  F019         	goto	l1479
 10060   001008                     l8122:
 10061                           
 10062                           ; BSR set to: 1
 10063   001008  0E00               	movlw	0
 10064   00100A  6F54               	movwf	powf@yisint& (0+255),b
 10065   00100C  0E00               	movlw	0
 10066   00100E  6F55               	movwf	(powf@yisint+1)& (0+255),b
 10067   001010  0E00               	movlw	0
 10068   001012  6F56               	movwf	(powf@yisint+2)& (0+255),b
 10069   001014  0E00               	movlw	0
 10070   001016  6F57               	movwf	(powf@yisint+3)& (0+255),b
 10071   001018                     
 10072                           ; BSR set to: 1
 10073   001018  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
 10074   00101A  EF13  F008         	goto	u8630
 10075   00101E  EF11  F008         	goto	u8631
 10076   001022                     u8631:
 10077   001022  EFDF  F008         	goto	l1484
 10078   001026                     u8630:
 10079   001026                     
 10080                           ; BSR set to: 1
 10081   001026  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
 10082   001028  EF1F  F008         	goto	u8641
 10083   00102C  0E80               	movlw	128
 10084   00102E  5D96               	subwf	(powf@iy+2)& (0+255),w,b
 10085   001030  0E4B               	movlw	75
 10086   001032  5997               	subwfb	(powf@iy+3)& (0+255),w,b
 10087   001034  A0D8               	btfss	status,0,c
 10088   001036  EF1F  F008         	goto	u8641
 10089   00103A  EF21  F008         	goto	u8640
 10090   00103E                     u8641:
 10091   00103E  EF2B  F008         	goto	l8130
 10092   001042                     u8640:
 10093   001042                     
 10094                           ; BSR set to: 1
 10095   001042  0E02               	movlw	2
 10096   001044  6F54               	movwf	powf@yisint& (0+255),b
 10097   001046  0E00               	movlw	0
 10098   001048  6F55               	movwf	(powf@yisint+1)& (0+255),b
 10099   00104A  0E00               	movlw	0
 10100   00104C  6F56               	movwf	(powf@yisint+2)& (0+255),b
 10101   00104E  0E00               	movlw	0
 10102   001050  6F57               	movwf	(powf@yisint+3)& (0+255),b
 10103   001052  EFDF  F008         	goto	l1484
 10104   001056                     l8130:
 10105                           
 10106                           ; BSR set to: 1
 10107   001056  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
 10108   001058  EF37  F008         	goto	u8651
 10109   00105C  0E80               	movlw	128
 10110   00105E  5D96               	subwf	(powf@iy+2)& (0+255),w,b
 10111   001060  0E3F               	movlw	63
 10112   001062  5997               	subwfb	(powf@iy+3)& (0+255),w,b
 10113   001064  A0D8               	btfss	status,0,c
 10114   001066  EF37  F008         	goto	u8651
 10115   00106A  EF39  F008         	goto	u8650
 10116   00106E                     u8651:
 10117   00106E  EFDF  F008         	goto	l1484
 10118   001072                     u8650:
 10119   001072                     
 10120                           ; BSR set to: 1
 10121   001072  0E17               	movlw	23
 10122   001074  0100               	movlb	0	; () banked
 10123   001076  6F68               	movwf	??_powf& (0+255),b
 10124   001078  C194  F069         	movff	powf@iy,??_powf+1
 10125   00107C  C195  F06A         	movff	powf@iy+1,??_powf+2
 10126   001080  C196  F06B         	movff	powf@iy+2,??_powf+3
 10127   001084  C197  F06C         	movff	powf@iy+3,??_powf+4
 10128   001088                     u8665:
 10129   001088  6768               	tstfsz	??_powf& (0+255),b
 10130   00108A  EF49  F008         	goto	u8666
 10131   00108E  EF51  F008         	goto	u8667
 10132   001092                     u8666:
 10133   001092  356C               	rlcf	(??_powf+4)& (0+255),w,b
 10134   001094  336C               	rrcf	(??_powf+4)& (0+255),f,b
 10135   001096  336B               	rrcf	(??_powf+3)& (0+255),f,b
 10136   001098  336A               	rrcf	(??_powf+2)& (0+255),f,b
 10137   00109A  3369               	rrcf	(??_powf+1)& (0+255),f,b
 10138   00109C  2F68               	decfsz	??_powf& (0+255),f,b
 10139   00109E  EF44  F008         	goto	u8665
 10140   0010A2                     u8667:
 10141   0010A2  0E81               	movlw	129
 10142   0010A4  0100               	movlb	0	; () banked
 10143   0010A6  2569               	addwf	(??_powf+1)& (0+255),w,b
 10144   0010A8  0101               	movlb	1	; () banked
 10145   0010AA  6FA4               	movwf	powf@k& (0+255),b
 10146   0010AC  0EFF               	movlw	255
 10147   0010AE  0100               	movlb	0	; () banked
 10148   0010B0  216A               	addwfc	(??_powf+2)& (0+255),w,b
 10149   0010B2  0101               	movlb	1	; () banked
 10150   0010B4  6FA5               	movwf	(powf@k+1)& (0+255),b
 10151   0010B6  0EFF               	movlw	255
 10152   0010B8  0100               	movlb	0	; () banked
 10153   0010BA  216B               	addwfc	(??_powf+3)& (0+255),w,b
 10154   0010BC  0101               	movlb	1	; () banked
 10155   0010BE  6FA6               	movwf	(powf@k+2)& (0+255),b
 10156   0010C0  0EFF               	movlw	255
 10157   0010C2  0100               	movlb	0	; () banked
 10158   0010C4  216C               	addwfc	(??_powf+4)& (0+255),w,b
 10159   0010C6  0101               	movlb	1	; () banked
 10160   0010C8  6FA7               	movwf	(powf@k+3)& (0+255),b
 10161   0010CA  51A4               	movf	powf@k& (0+255),w,b
 10162   0010CC  0817               	sublw	23
 10163   0010CE  0100               	movlb	0	; () banked
 10164   0010D0  6F68               	movwf	??_powf& (0+255),b
 10165   0010D2  C194  F069         	movff	powf@iy,??_powf+1
 10166   0010D6  C195  F06A         	movff	powf@iy+1,??_powf+2
 10167   0010DA  C196  F06B         	movff	powf@iy+2,??_powf+3
 10168   0010DE  C197  F06C         	movff	powf@iy+3,??_powf+4
 10169   0010E2                     u8675:
 10170   0010E2  6768               	tstfsz	??_powf& (0+255),b
 10171   0010E4  EF76  F008         	goto	u8676
 10172   0010E8  EF7E  F008         	goto	u8677
 10173   0010EC                     u8676:
 10174   0010EC  356C               	rlcf	(??_powf+4)& (0+255),w,b
 10175   0010EE  336C               	rrcf	(??_powf+4)& (0+255),f,b
 10176   0010F0  336B               	rrcf	(??_powf+3)& (0+255),f,b
 10177   0010F2  336A               	rrcf	(??_powf+2)& (0+255),f,b
 10178   0010F4  3369               	rrcf	(??_powf+1)& (0+255),f,b
 10179   0010F6  2F68               	decfsz	??_powf& (0+255),f,b
 10180   0010F8  EF71  F008         	goto	u8675
 10181   0010FC                     u8677:
 10182   0010FC  C069  F1A8         	movff	??_powf+1,powf@j
 10183   001100  C06A  F1A9         	movff	??_powf+2,powf@j+1
 10184   001104  C06B  F1AA         	movff	??_powf+3,powf@j+2
 10185   001108  C06C  F1AB         	movff	??_powf+4,powf@j+3
 10186   00110C  0101               	movlb	1	; () banked
 10187   00110E  51A4               	movf	powf@k& (0+255),w,b
 10188   001110  0817               	sublw	23
 10189   001112  0100               	movlb	0	; () banked
 10190   001114  6F68               	movwf	??_powf& (0+255),b
 10191   001116  C1A8  F069         	movff	powf@j,??_powf+1
 10192   00111A  C1A9  F06A         	movff	powf@j+1,??_powf+2
 10193   00111E  C1AA  F06B         	movff	powf@j+2,??_powf+3
 10194   001122  C1AB  F06C         	movff	powf@j+3,??_powf+4
 10195   001126  2B68               	incf	??_powf& (0+255),f,b
 10196   001128  EF9B  F008         	goto	u8680
 10197   00112C                     u8685:
 10198   00112C  90D8               	bcf	status,0,c
 10199   00112E  3769               	rlcf	(??_powf+1)& (0+255),f,b
 10200   001130  376A               	rlcf	(??_powf+2)& (0+255),f,b
 10201   001132  376B               	rlcf	(??_powf+3)& (0+255),f,b
 10202   001134  376C               	rlcf	(??_powf+4)& (0+255),f,b
 10203   001136                     u8680:
 10204   001136  2F68               	decfsz	??_powf& (0+255),f,b
 10205   001138  EF96  F008         	goto	u8685
 10206   00113C  0101               	movlb	1	; () banked
 10207   00113E  5194               	movf	powf@iy& (0+255),w,b
 10208   001140  0100               	movlb	0	; () banked
 10209   001142  1969               	xorwf	(??_powf+1)& (0+255),w,b
 10210   001144  E113               	bnz	u8691
 10211   001146  0101               	movlb	1	; () banked
 10212   001148  5195               	movf	(powf@iy+1)& (0+255),w,b
 10213   00114A  0100               	movlb	0	; () banked
 10214   00114C  196A               	xorwf	(??_powf+2)& (0+255),w,b
 10215   00114E  E10E               	bnz	u8691
 10216   001150  0101               	movlb	1	; () banked
 10217   001152  5196               	movf	(powf@iy+2)& (0+255),w,b
 10218   001154  0100               	movlb	0	; () banked
 10219   001156  196B               	xorwf	(??_powf+3)& (0+255),w,b
 10220   001158  E109               	bnz	u8691
 10221   00115A  0101               	movlb	1	; () banked
 10222   00115C  5197               	movf	(powf@iy+3)& (0+255),w,b
 10223   00115E  0100               	movlb	0	; () banked
 10224   001160  196C               	xorwf	(??_powf+4)& (0+255),w,b
 10225   001162  A4D8               	btfss	status,2,c
 10226   001164  EFB6  F008         	goto	u8691
 10227   001168  EFB8  F008         	goto	u8690
 10228   00116C                     u8691:
 10229   00116C  EFDF  F008         	goto	l1484
 10230   001170                     u8690:
 10231   001170                     
 10232                           ; BSR set to: 0
 10233   001170  0E01               	movlw	1
 10234   001172  0101               	movlb	1	; () banked
 10235   001174  15A8               	andwf	powf@j& (0+255),w,b
 10236   001176  0100               	movlb	0	; () banked
 10237   001178  6F68               	movwf	??_powf& (0+255),b
 10238   00117A  0E00               	movlw	0
 10239   00117C  0101               	movlb	1	; () banked
 10240   00117E  15A9               	andwf	(powf@j+1)& (0+255),w,b
 10241   001180  0100               	movlb	0	; () banked
 10242   001182  6F69               	movwf	(??_powf+1)& (0+255),b
 10243   001184  0E00               	movlw	0
 10244   001186  0101               	movlb	1	; () banked
 10245   001188  15AA               	andwf	(powf@j+2)& (0+255),w,b
 10246   00118A  0100               	movlb	0	; () banked
 10247   00118C  6F6A               	movwf	(??_powf+2)& (0+255),b
 10248   00118E  0E00               	movlw	0
 10249   001190  0101               	movlb	1	; () banked
 10250   001192  15AB               	andwf	(powf@j+3)& (0+255),w,b
 10251   001194  0100               	movlb	0	; () banked
 10252   001196  6F6B               	movwf	(??_powf+3)& (0+255),b
 10253   001198  5168               	movf	??_powf& (0+255),w,b
 10254   00119A  0802               	sublw	2
 10255   00119C  0101               	movlb	1	; () banked
 10256   00119E  6F54               	movwf	powf@yisint& (0+255),b
 10257   0011A0  0E00               	movlw	0
 10258   0011A2  0100               	movlb	0	; () banked
 10259   0011A4  5569               	subfwb	(??_powf+1)& (0+255),w,b
 10260   0011A6  0101               	movlb	1	; () banked
 10261   0011A8  6F55               	movwf	(powf@yisint+1)& (0+255),b
 10262   0011AA  0E00               	movlw	0
 10263   0011AC  0100               	movlb	0	; () banked
 10264   0011AE  556A               	subfwb	(??_powf+2)& (0+255),w,b
 10265   0011B0  0101               	movlb	1	; () banked
 10266   0011B2  6F56               	movwf	(powf@yisint+2)& (0+255),b
 10267   0011B4  0E00               	movlw	0
 10268   0011B6  0100               	movlb	0	; () banked
 10269   0011B8  556B               	subfwb	(??_powf+3)& (0+255),w,b
 10270   0011BA  0101               	movlb	1	; () banked
 10271   0011BC  6F57               	movwf	(powf@yisint+3)& (0+255),b
 10272   0011BE                     l1484:
 10273   0011BE  0E80               	movlw	128
 10274   0011C0  0101               	movlb	1	; () banked
 10275   0011C2  1996               	xorwf	(powf@iy+2)& (0+255),w,b
 10276   0011C4  E109               	bnz	u8701
 10277   0011C6  0E7F               	movlw	127
 10278   0011C8  1997               	xorwf	(powf@iy+3)& (0+255),w,b
 10279   0011CA  1194               	iorwf	powf@iy& (0+255),w,b
 10280   0011CC  1195               	iorwf	(powf@iy+1)& (0+255),w,b
 10281   0011CE  A4D8               	btfss	status,2,c
 10282   0011D0  EFEC  F008         	goto	u8701
 10283   0011D4  EFEE  F008         	goto	u8700
 10284   0011D8                     u8701:
 10285   0011D8  EF5A  F009         	goto	l8160
 10286   0011DC                     u8700:
 10287   0011DC                     
 10288                           ; BSR set to: 1
 10289   0011DC  0E80               	movlw	128
 10290   0011DE  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
 10291   0011E0  E109               	bnz	u8711
 10292   0011E2  0E3F               	movlw	63
 10293   0011E4  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
 10294   0011E6  11AC               	iorwf	powf@ix& (0+255),w,b
 10295   0011E8  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
 10296   0011EA  A4D8               	btfss	status,2,c
 10297   0011EC  EFFA  F008         	goto	u8711
 10298   0011F0  EFFC  F008         	goto	u8710
 10299   0011F4                     u8711:
 10300   0011F4  EF07  F009         	goto	l8144
 10301   0011F8                     u8710:
 10302   0011F8                     
 10303                           ; BSR set to: 1
 10304   0011F8  0E00               	movlw	0
 10305   0011FA  0100               	movlb	0	; () banked
 10306   0011FC  6F60               	movwf	?_powf& (0+255),b
 10307   0011FE  0E00               	movlw	0
 10308   001200  6F61               	movwf	(?_powf+1)& (0+255),b
 10309   001202  0E80               	movlw	128
 10310   001204  6F62               	movwf	(?_powf+2)& (0+255),b
 10311   001206  0E3F               	movlw	63
 10312   001208  6F63               	movwf	(?_powf+3)& (0+255),b
 10313   00120A  EFAD  F019         	goto	l1479
 10314   00120E                     l8144:
 10315                           
 10316                           ; BSR set to: 1
 10317   00120E  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10318   001210  EF16  F009         	goto	u8721
 10319   001214  05AC               	decf	powf@ix& (0+255),w,b
 10320   001216  0E00               	movlw	0
 10321   001218  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
 10322   00121A  0E80               	movlw	128
 10323   00121C  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
 10324   00121E  0E3F               	movlw	63
 10325   001220  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
 10326   001222  A0D8               	btfss	status,0,c
 10327   001224  EF16  F009         	goto	u8721
 10328   001228  EF18  F009         	goto	u8720
 10329   00122C                     u8721:
 10330   00122C  EF34  F009         	goto	l8152
 10331   001230                     u8720:
 10332   001230                     
 10333                           ; BSR set to: 1
 10334   001230  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10335   001232  EF1F  F009         	goto	u8730
 10336   001236  EF1D  F009         	goto	u8731
 10337   00123A                     u8731:
 10338   00123A  EF2A  F009         	goto	l1494
 10339   00123E                     u8730:
 10340   00123E                     
 10341                           ; BSR set to: 1
 10342   00123E  0E00               	movlw	0
 10343   001240  0100               	movlb	0	; () banked
 10344   001242  6F60               	movwf	?_powf& (0+255),b
 10345   001244  0E00               	movlw	0
 10346   001246  6F61               	movwf	(?_powf+1)& (0+255),b
 10347   001248  0E00               	movlw	0
 10348   00124A  6F62               	movwf	(?_powf+2)& (0+255),b
 10349   00124C  0E00               	movlw	0
 10350   00124E  6F63               	movwf	(?_powf+3)& (0+255),b
 10351   001250  EFAD  F019         	goto	l1479
 10352   001254                     l1494:
 10353                           
 10354                           ; BSR set to: 1
 10355   001254  C064  F060         	movff	powf@y,?_powf
 10356   001258  C065  F061         	movff	powf@y+1,?_powf+1
 10357   00125C  C066  F062         	movff	powf@y+2,?_powf+2
 10358   001260  C067  F063         	movff	powf@y+3,?_powf+3
 10359   001264  EFAD  F019         	goto	l1479
 10360   001268                     l8152:
 10361                           
 10362                           ; BSR set to: 1
 10363   001268  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10364   00126A  EF3B  F009         	goto	u8740
 10365   00126E  EF39  F009         	goto	u8741
 10366   001272                     u8741:
 10367   001272  EF4F  F009         	goto	l8156
 10368   001276                     u8740:
 10369   001276                     
 10370                           ; BSR set to: 1
 10371   001276  C064  F002         	movff	powf@y,___flneg@f1
 10372   00127A  C065  F003         	movff	powf@y+1,___flneg@f1+1
 10373   00127E  C066  F004         	movff	powf@y+2,___flneg@f1+2
 10374   001282  C067  F005         	movff	powf@y+3,___flneg@f1+3
 10375   001286  ECFF  F03F         	call	___flneg	;wreg free
 10376   00128A  C002  F060         	movff	?___flneg,?_powf
 10377   00128E  C003  F061         	movff	?___flneg+1,?_powf+1
 10378   001292  C004  F062         	movff	?___flneg+2,?_powf+2
 10379   001296  C005  F063         	movff	?___flneg+3,?_powf+3
 10380   00129A  EFAD  F019         	goto	l1479
 10381   00129E                     l8156:
 10382                           
 10383                           ; BSR set to: 1
 10384   00129E  0E00               	movlw	0
 10385   0012A0  0100               	movlb	0	; () banked
 10386   0012A2  6F60               	movwf	?_powf& (0+255),b
 10387   0012A4  0E00               	movlw	0
 10388   0012A6  6F61               	movwf	(?_powf+1)& (0+255),b
 10389   0012A8  0E00               	movlw	0
 10390   0012AA  6F62               	movwf	(?_powf+2)& (0+255),b
 10391   0012AC  0E00               	movlw	0
 10392   0012AE  6F63               	movwf	(?_powf+3)& (0+255),b
 10393   0012B0  EFAD  F019         	goto	l1479
 10394   0012B4                     l8160:
 10395                           
 10396                           ; BSR set to: 1
 10397   0012B4  0E80               	movlw	128
 10398   0012B6  1996               	xorwf	(powf@iy+2)& (0+255),w,b
 10399   0012B8  E109               	bnz	u8751
 10400   0012BA  0E3F               	movlw	63
 10401   0012BC  1997               	xorwf	(powf@iy+3)& (0+255),w,b
 10402   0012BE  1194               	iorwf	powf@iy& (0+255),w,b
 10403   0012C0  1195               	iorwf	(powf@iy+1)& (0+255),w,b
 10404   0012C2  A4D8               	btfss	status,2,c
 10405   0012C4  EF66  F009         	goto	u8751
 10406   0012C8  EF68  F009         	goto	u8750
 10407   0012CC                     u8751:
 10408   0012CC  EF95  F009         	goto	l8166
 10409   0012D0                     u8750:
 10410   0012D0                     
 10411                           ; BSR set to: 1
 10412   0012D0  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10413   0012D2  EF6F  F009         	goto	u8760
 10414   0012D6  EF6D  F009         	goto	u8761
 10415   0012DA                     u8761:
 10416   0012DA  EF8B  F009         	goto	l1504
 10417   0012DE                     u8760:
 10418   0012DE                     
 10419                           ; BSR set to: 1
 10420   0012DE  0E00               	movlw	0
 10421   0012E0  6E2B               	movwf	___fldiv@b^0,c
 10422   0012E2  0E00               	movlw	0
 10423   0012E4  6E2C               	movwf	(___fldiv@b+1)^0,c
 10424   0012E6  0E80               	movlw	128
 10425   0012E8  6E2D               	movwf	(___fldiv@b+2)^0,c
 10426   0012EA  0E3F               	movlw	63
 10427   0012EC  6E2E               	movwf	(___fldiv@b+3)^0,c
 10428   0012EE  C060  F02F         	movff	powf@x,___fldiv@a
 10429   0012F2  C061  F030         	movff	powf@x+1,___fldiv@a+1
 10430   0012F6  C062  F031         	movff	powf@x+2,___fldiv@a+2
 10431   0012FA  C063  F032         	movff	powf@x+3,___fldiv@a+3
 10432   0012FE  EC48  F02E         	call	___fldiv	;wreg free
 10433   001302  C02B  F060         	movff	?___fldiv,?_powf
 10434   001306  C02C  F061         	movff	?___fldiv+1,?_powf+1
 10435   00130A  C02D  F062         	movff	?___fldiv+2,?_powf+2
 10436   00130E  C02E  F063         	movff	?___fldiv+3,?_powf+3
 10437   001312  EFAD  F019         	goto	l1479
 10438   001316                     l1504:
 10439                           
 10440                           ; BSR set to: 1
 10441   001316  C060  F060         	movff	powf@x,?_powf
 10442   00131A  C061  F061         	movff	powf@x+1,?_powf+1
 10443   00131E  C062  F062         	movff	powf@x+2,?_powf+2
 10444   001322  C063  F063         	movff	powf@x+3,?_powf+3
 10445   001326  EFAD  F019         	goto	l1479
 10446   00132A                     l8166:
 10447                           
 10448                           ; BSR set to: 1
 10449   00132A  0E40               	movlw	64
 10450   00132C  1987               	xorwf	(powf@hy+3)& (0+255),w,b
 10451   00132E  1184               	iorwf	powf@hy& (0+255),w,b
 10452   001330  1185               	iorwf	(powf@hy+1)& (0+255),w,b
 10453   001332  1186               	iorwf	(powf@hy+2)& (0+255),w,b
 10454   001334  A4D8               	btfss	status,2,c
 10455   001336  EF9F  F009         	goto	u8771
 10456   00133A  EFA1  F009         	goto	u8770
 10457   00133E                     u8771:
 10458   00133E  EFBD  F009         	goto	l8172
 10459   001342                     u8770:
 10460   001342                     
 10461                           ; BSR set to: 1
 10462   001342  C060  F012         	movff	powf@x,___flmul@b
 10463   001346  C061  F013         	movff	powf@x+1,___flmul@b+1
 10464   00134A  C062  F014         	movff	powf@x+2,___flmul@b+2
 10465   00134E  C063  F015         	movff	powf@x+3,___flmul@b+3
 10466   001352  C060  F016         	movff	powf@x,___flmul@a
 10467   001356  C061  F017         	movff	powf@x+1,___flmul@a+1
 10468   00135A  C062  F018         	movff	powf@x+2,___flmul@a+2
 10469   00135E  C063  F019         	movff	powf@x+3,___flmul@a+3
 10470   001362  EC44  F02A         	call	___flmul	;wreg free
 10471   001366  C012  F060         	movff	?___flmul,?_powf
 10472   00136A  C013  F061         	movff	?___flmul+1,?_powf+1
 10473   00136E  C014  F062         	movff	?___flmul+2,?_powf+2
 10474   001372  C015  F063         	movff	?___flmul+3,?_powf+3
 10475   001376  EFAD  F019         	goto	l1479
 10476   00137A                     l8172:
 10477                           
 10478                           ; BSR set to: 1
 10479   00137A  0E3F               	movlw	63
 10480   00137C  1987               	xorwf	(powf@hy+3)& (0+255),w,b
 10481   00137E  1184               	iorwf	powf@hy& (0+255),w,b
 10482   001380  1185               	iorwf	(powf@hy+1)& (0+255),w,b
 10483   001382  1186               	iorwf	(powf@hy+2)& (0+255),w,b
 10484   001384  A4D8               	btfss	status,2,c
 10485   001386  EFC7  F009         	goto	u8781
 10486   00138A  EFC9  F009         	goto	u8780
 10487   00138E                     u8781:
 10488   00138E  EFE4  F009         	goto	l1508
 10489   001392                     u8780:
 10490   001392                     
 10491                           ; BSR set to: 1
 10492   001392  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
 10493   001394  EFCE  F009         	goto	u8791
 10494   001398  EFD0  F009         	goto	u8790
 10495   00139C                     u8791:
 10496   00139C  EFE4  F009         	goto	l1508
 10497   0013A0                     u8790:
 10498   0013A0                     
 10499                           ; BSR set to: 1
 10500   0013A0  C060  F012         	movff	powf@x,sqrtf@x
 10501   0013A4  C061  F013         	movff	powf@x+1,sqrtf@x+1
 10502   0013A8  C062  F014         	movff	powf@x+2,sqrtf@x+2
 10503   0013AC  C063  F015         	movff	powf@x+3,sqrtf@x+3
 10504   0013B0  EC59  F02C         	call	_sqrtf	;wreg free
 10505   0013B4  C012  F060         	movff	?_sqrtf,?_powf
 10506   0013B8  C013  F061         	movff	?_sqrtf+1,?_powf+1
 10507   0013BC  C014  F062         	movff	?_sqrtf+2,?_powf+2
 10508   0013C0  C015  F063         	movff	?_sqrtf+3,?_powf+3
 10509   0013C4  EFAD  F019         	goto	l1479
 10510   0013C8                     l1508:
 10511                           
 10512                           ; BSR set to: 1
 10513   0013C8  C1AC  F178         	movff	powf@ix,powf@ax
 10514   0013CC  C1AD  F179         	movff	powf@ix+1,powf@ax+1
 10515   0013D0  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
 10516   0013D4  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
 10517   0013D8                     
 10518                           ; BSR set to: 1
 10519   0013D8  0E80               	movlw	128
 10520   0013DA  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
 10521   0013DC  E10B               	bnz	u8800
 10522   0013DE  0E7F               	movlw	127
 10523   0013E0  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
 10524   0013E2  11AC               	iorwf	powf@ix& (0+255),w,b
 10525   0013E4  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
 10526   0013E6  B4D8               	btfsc	status,2,c
 10527   0013E8  EFF8  F009         	goto	u8801
 10528   0013EC  EFFA  F009         	goto	u8800
 10529   0013F0                     u8801:
 10530   0013F0  EF13  F00A         	goto	l1512
 10531   0013F4                     u8800:
 10532   0013F4                     
 10533                           ; BSR set to: 1
 10534   0013F4  51AC               	movf	powf@ix& (0+255),w,b
 10535   0013F6  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
 10536   0013F8  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
 10537   0013FA  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
 10538   0013FC  B4D8               	btfsc	status,2,c
 10539   0013FE  EF03  F00A         	goto	u8811
 10540   001402  EF05  F00A         	goto	u8810
 10541   001406                     u8811:
 10542   001406  EF13  F00A         	goto	l1512
 10543   00140A                     u8810:
 10544   00140A                     
 10545                           ; BSR set to: 1
 10546   00140A  0E80               	movlw	128
 10547   00140C  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
 10548   00140E  E109               	bnz	u8821
 10549   001410  0E3F               	movlw	63
 10550   001412  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
 10551   001414  11AC               	iorwf	powf@ix& (0+255),w,b
 10552   001416  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
 10553   001418  A4D8               	btfss	status,2,c
 10554   00141A  EF11  F00A         	goto	u8821
 10555   00141E  EF13  F00A         	goto	u8820
 10556   001422                     u8821:
 10557   001422  EFAE  F00A         	goto	l8204
 10558   001426                     u8820:
 10559   001426                     l1512:
 10560                           
 10561                           ; BSR set to: 1
 10562   001426  C178  F1B4         	movff	powf@ax,powf@z
 10563   00142A  C179  F1B5         	movff	powf@ax+1,powf@z+1
 10564   00142E  C17A  F1B6         	movff	powf@ax+2,powf@z+2
 10565   001432  C17B  F1B7         	movff	powf@ax+3,powf@z+3
 10566   001436                     
 10567                           ; BSR set to: 1
 10568   001436  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10569   001438  EF22  F00A         	goto	u8830
 10570   00143C  EF20  F00A         	goto	u8831
 10571   001440                     u8831:
 10572   001440  EF3C  F00A         	goto	l8190
 10573   001444                     u8830:
 10574   001444                     
 10575                           ; BSR set to: 1
 10576   001444  0E00               	movlw	0
 10577   001446  6E2B               	movwf	___fldiv@b^0,c
 10578   001448  0E00               	movlw	0
 10579   00144A  6E2C               	movwf	(___fldiv@b+1)^0,c
 10580   00144C  0E80               	movlw	128
 10581   00144E  6E2D               	movwf	(___fldiv@b+2)^0,c
 10582   001450  0E3F               	movlw	63
 10583   001452  6E2E               	movwf	(___fldiv@b+3)^0,c
 10584   001454  C1B4  F02F         	movff	powf@z,___fldiv@a
 10585   001458  C1B5  F030         	movff	powf@z+1,___fldiv@a+1
 10586   00145C  C1B6  F031         	movff	powf@z+2,___fldiv@a+2
 10587   001460  C1B7  F032         	movff	powf@z+3,___fldiv@a+3
 10588   001464  EC48  F02E         	call	___fldiv	;wreg free
 10589   001468  C02B  F1B4         	movff	?___fldiv,powf@z
 10590   00146C  C02C  F1B5         	movff	?___fldiv+1,powf@z+1
 10591   001470  C02D  F1B6         	movff	?___fldiv+2,powf@z+2
 10592   001474  C02E  F1B7         	movff	?___fldiv+3,powf@z+3
 10593   001478                     l8190:
 10594   001478  0101               	movlb	1	; () banked
 10595   00147A  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
 10596   00147C  EF44  F00A         	goto	u8840
 10597   001480  EF42  F00A         	goto	u8841
 10598   001484                     u8841:
 10599   001484  EFA4  F00A         	goto	l8200
 10600   001488                     u8840:
 10601   001488                     
 10602                           ; BSR set to: 1
 10603   001488  0E00               	movlw	0
 10604   00148A  25AC               	addwf	powf@ix& (0+255),w,b
 10605   00148C  0100               	movlb	0	; () banked
 10606   00148E  6F68               	movwf	??_powf& (0+255),b
 10607   001490  0E00               	movlw	0
 10608   001492  0101               	movlb	1	; () banked
 10609   001494  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
 10610   001496  0100               	movlb	0	; () banked
 10611   001498  6F69               	movwf	(??_powf+1)& (0+255),b
 10612   00149A  0E80               	movlw	128
 10613   00149C  0101               	movlb	1	; () banked
 10614   00149E  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
 10615   0014A0  0100               	movlb	0	; () banked
 10616   0014A2  6F6A               	movwf	(??_powf+2)& (0+255),b
 10617   0014A4  0EC0               	movlw	192
 10618   0014A6  0101               	movlb	1	; () banked
 10619   0014A8  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
 10620   0014AA  0100               	movlb	0	; () banked
 10621   0014AC  6F6B               	movwf	(??_powf+3)& (0+255),b
 10622   0014AE  0101               	movlb	1	; () banked
 10623   0014B0  5154               	movf	powf@yisint& (0+255),w,b
 10624   0014B2  0100               	movlb	0	; () banked
 10625   0014B4  1168               	iorwf	??_powf& (0+255),w,b
 10626   0014B6  6F6C               	movwf	(??_powf+4)& (0+255),b
 10627   0014B8  0101               	movlb	1	; () banked
 10628   0014BA  5155               	movf	(powf@yisint+1)& (0+255),w,b
 10629   0014BC  0100               	movlb	0	; () banked
 10630   0014BE  1169               	iorwf	(??_powf+1)& (0+255),w,b
 10631   0014C0  6F6D               	movwf	(??_powf+5)& (0+255),b
 10632   0014C2  0101               	movlb	1	; () banked
 10633   0014C4  5156               	movf	(powf@yisint+2)& (0+255),w,b
 10634   0014C6  0100               	movlb	0	; () banked
 10635   0014C8  116A               	iorwf	(??_powf+2)& (0+255),w,b
 10636   0014CA  6F6E               	movwf	(??_powf+6)& (0+255),b
 10637   0014CC  0101               	movlb	1	; () banked
 10638   0014CE  5157               	movf	(powf@yisint+3)& (0+255),w,b
 10639   0014D0  0100               	movlb	0	; () banked
 10640   0014D2  116B               	iorwf	(??_powf+3)& (0+255),w,b
 10641   0014D4  6F6F               	movwf	(??_powf+7)& (0+255),b
 10642   0014D6  516C               	movf	(??_powf+4)& (0+255),w,b
 10643   0014D8  116D               	iorwf	(??_powf+5)& (0+255),w,b
 10644   0014DA  116E               	iorwf	(??_powf+6)& (0+255),w,b
 10645   0014DC  116F               	iorwf	(??_powf+7)& (0+255),w,b
 10646   0014DE  A4D8               	btfss	status,2,c
 10647   0014E0  EF74  F00A         	goto	u8851
 10648   0014E4  EF76  F00A         	goto	u8850
 10649   0014E8                     u8851:
 10650   0014E8  EF86  F00A         	goto	l8196
 10651   0014EC                     u8850:
 10652   0014EC                     l8194:
 10653   0014EC  0E00               	movlw	0
 10654   0014EE  0100               	movlb	0	; () banked
 10655   0014F0  6FD8               	movwf	(_errno+1)& (0+255),b
 10656   0014F2  0E21               	movlw	33
 10657   0014F4  6FD7               	movwf	_errno& (0+255),b
 10658   0014F6  0EFF               	movlw	255
 10659   0014F8  0101               	movlb	1	; () banked
 10660   0014FA  6FB4               	movwf	powf@z& (0+255),b
 10661   0014FC  0EFF               	movlw	255
 10662   0014FE  6FB5               	movwf	(powf@z+1)& (0+255),b
 10663   001500  0EFF               	movlw	255
 10664   001502  6FB6               	movwf	(powf@z+2)& (0+255),b
 10665   001504  0E7F               	movlw	127
 10666   001506  6FB7               	movwf	(powf@z+3)& (0+255),b
 10667   001508  EFA4  F00A         	goto	l8200
 10668   00150C                     l8196:
 10669                           
 10670                           ; BSR set to: 0
 10671   00150C  0101               	movlb	1	; () banked
 10672   00150E  0554               	decf	powf@yisint& (0+255),w,b
 10673   001510  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
 10674   001512  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
 10675   001514  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
 10676   001516  A4D8               	btfss	status,2,c
 10677   001518  EF90  F00A         	goto	u8861
 10678   00151C  EF92  F00A         	goto	u8860
 10679   001520                     u8861:
 10680   001520  EFA4  F00A         	goto	l8200
 10681   001524                     u8860:
 10682   001524                     
 10683                           ; BSR set to: 1
 10684   001524  C1B4  F002         	movff	powf@z,___flneg@f1
 10685   001528  C1B5  F003         	movff	powf@z+1,___flneg@f1+1
 10686   00152C  C1B6  F004         	movff	powf@z+2,___flneg@f1+2
 10687   001530  C1B7  F005         	movff	powf@z+3,___flneg@f1+3
 10688   001534  ECFF  F03F         	call	___flneg	;wreg free
 10689   001538  C002  F1B4         	movff	?___flneg,powf@z
 10690   00153C  C003  F1B5         	movff	?___flneg+1,powf@z+1
 10691   001540  C004  F1B6         	movff	?___flneg+2,powf@z+2
 10692   001544  C005  F1B7         	movff	?___flneg+3,powf@z+3
 10693   001548                     l8200:
 10694   001548  C1B4  F060         	movff	powf@z,?_powf
 10695   00154C  C1B5  F061         	movff	powf@z+1,?_powf+1
 10696   001550  C1B6  F062         	movff	powf@z+2,?_powf+2
 10697   001554  C1B7  F063         	movff	powf@z+3,?_powf+3
 10698   001558  EFAD  F019         	goto	l1479
 10699   00155C                     l8204:
 10700                           
 10701                           ; BSR set to: 1
 10702   00155C  0E00               	movlw	0
 10703   00155E  6F64               	movwf	powf@sn& (0+255),b
 10704   001560  0E00               	movlw	0
 10705   001562  6F65               	movwf	(powf@sn+1)& (0+255),b
 10706   001564  0E00               	movlw	0
 10707   001566  6F66               	movwf	(powf@sn+2)& (0+255),b
 10708   001568  0E00               	movlw	0
 10709   00156A  6F67               	movwf	(powf@sn+3)& (0+255),b
 10710   00156C                     
 10711                           ; BSR set to: 1
 10712   00156C  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
 10713   00156E  EFBD  F00A         	goto	u8870
 10714   001572  EFBB  F00A         	goto	u8871
 10715   001576                     u8871:
 10716   001576  EFDD  F00A         	goto	l8220
 10717   00157A                     u8870:
 10718   00157A                     
 10719                           ; BSR set to: 1
 10720   00157A  5154               	movf	powf@yisint& (0+255),w,b
 10721   00157C  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
 10722   00157E  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
 10723   001580  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
 10724   001582  A4D8               	btfss	status,2,c
 10725   001584  EFC6  F00A         	goto	u8881
 10726   001588  EFC8  F00A         	goto	u8880
 10727   00158C                     u8881:
 10728   00158C  EFCA  F00A         	goto	l8216
 10729   001590                     u8880:
 10730   001590  EF76  F00A         	goto	l8194
 10731   001594                     l8216:
 10732                           
 10733                           ; BSR set to: 1
 10734   001594  0554               	decf	powf@yisint& (0+255),w,b
 10735   001596  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
 10736   001598  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
 10737   00159A  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
 10738   00159C  A4D8               	btfss	status,2,c
 10739   00159E  EFD3  F00A         	goto	u8891
 10740   0015A2  EFD5  F00A         	goto	u8890
 10741   0015A6                     u8891:
 10742   0015A6  EFDD  F00A         	goto	l8220
 10743   0015AA                     u8890:
 10744   0015AA                     
 10745                           ; BSR set to: 1
 10746   0015AA  0E00               	movlw	0
 10747   0015AC  6F64               	movwf	powf@sn& (0+255),b
 10748   0015AE  0E00               	movlw	0
 10749   0015B0  6F65               	movwf	(powf@sn+1)& (0+255),b
 10750   0015B2  0E00               	movlw	0
 10751   0015B4  6F66               	movwf	(powf@sn+2)& (0+255),b
 10752   0015B6  0E80               	movlw	128
 10753   0015B8  6F67               	movwf	(powf@sn+3)& (0+255),b
 10754   0015BA                     l8220:
 10755                           
 10756                           ; BSR set to: 1
 10757   0015BA  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
 10758   0015BC  EFEC  F00A         	goto	u8901
 10759   0015C0  0594               	decf	powf@iy& (0+255),w,b
 10760   0015C2  0E00               	movlw	0
 10761   0015C4  5995               	subwfb	(powf@iy+1)& (0+255),w,b
 10762   0015C6  0E00               	movlw	0
 10763   0015C8  5996               	subwfb	(powf@iy+2)& (0+255),w,b
 10764   0015CA  0E4D               	movlw	77
 10765   0015CC  5997               	subwfb	(powf@iy+3)& (0+255),w,b
 10766   0015CE  A0D8               	btfss	status,0,c
 10767   0015D0  EFEC  F00A         	goto	u8901
 10768   0015D4  EFEE  F00A         	goto	u8900
 10769   0015D8                     u8901:
 10770   0015D8  EFB2  F00C         	goto	l8276
 10771   0015DC                     u8900:
 10772   0015DC                     
 10773                           ; BSR set to: 1
 10774   0015DC  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10775   0015DE  EF00  F00B         	goto	u8910
 10776   0015E2  0EF8               	movlw	248
 10777   0015E4  5DAC               	subwf	powf@ix& (0+255),w,b
 10778   0015E6  0EFF               	movlw	255
 10779   0015E8  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
 10780   0015EA  0E7F               	movlw	127
 10781   0015EC  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
 10782   0015EE  0E3F               	movlw	63
 10783   0015F0  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
 10784   0015F2  B0D8               	btfsc	status,0,c
 10785   0015F4  EFFE  F00A         	goto	u8911
 10786   0015F8  EF00  F00B         	goto	u8910
 10787   0015FC                     u8911:
 10788   0015FC  EF21  F00B         	goto	l8238
 10789   001600                     u8910:
 10790   001600                     
 10791                           ; BSR set to: 1
 10792   001600  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10793   001602  EF07  F00B         	goto	u8920
 10794   001606  EF05  F00B         	goto	u8921
 10795   00160A                     u8921:
 10796   00160A  EF16  F00B         	goto	l8234
 10797   00160E                     u8920:
 10798   00160E                     l8226:
 10799   00160E  0E00               	movlw	0
 10800   001610  0101               	movlb	1	; () banked
 10801   001612  1164               	iorwf	powf@sn& (0+255),w,b
 10802   001614  6FB4               	movwf	powf@z& (0+255),b
 10803   001616  0E00               	movlw	0
 10804   001618  1165               	iorwf	(powf@sn+1)& (0+255),w,b
 10805   00161A  6FB5               	movwf	(powf@z+1)& (0+255),b
 10806   00161C  0E80               	movlw	128
 10807   00161E  1166               	iorwf	(powf@sn+2)& (0+255),w,b
 10808   001620  6FB6               	movwf	(powf@z+2)& (0+255),b
 10809   001622  0E7F               	movlw	127
 10810   001624  1167               	iorwf	(powf@sn+3)& (0+255),w,b
 10811   001626  6FB7               	movwf	(powf@z+3)& (0+255),b
 10812   001628  EFA4  F00A         	goto	l8200
 10813   00162C                     l8234:
 10814                           
 10815                           ; BSR set to: 1
 10816   00162C  0E00               	movlw	0
 10817   00162E  0100               	movlb	0	; () banked
 10818   001630  6F60               	movwf	?_powf& (0+255),b
 10819   001632  0E00               	movlw	0
 10820   001634  6F61               	movwf	(?_powf+1)& (0+255),b
 10821   001636  0E00               	movlw	0
 10822   001638  6F62               	movwf	(?_powf+2)& (0+255),b
 10823   00163A  0E00               	movlw	0
 10824   00163C  6F63               	movwf	(?_powf+3)& (0+255),b
 10825   00163E  EFAD  F019         	goto	l1479
 10826   001642                     l8238:
 10827                           
 10828                           ; BSR set to: 1
 10829   001642  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10830   001644  EF31  F00B         	goto	u8931
 10831   001648  0E08               	movlw	8
 10832   00164A  5DAC               	subwf	powf@ix& (0+255),w,b
 10833   00164C  0E00               	movlw	0
 10834   00164E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
 10835   001650  0E80               	movlw	128
 10836   001652  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
 10837   001654  0E3F               	movlw	63
 10838   001656  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
 10839   001658  A0D8               	btfss	status,0,c
 10840   00165A  EF31  F00B         	goto	u8931
 10841   00165E  EF33  F00B         	goto	u8930
 10842   001662                     u8931:
 10843   001662  EF4F  F00B         	goto	l8254
 10844   001666                     u8930:
 10845   001666                     
 10846                           ; BSR set to: 1
 10847   001666  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10848   001668  EF40  F00B         	goto	u8941
 10849   00166C  5187               	movf	(powf@hy+3)& (0+255),w,b
 10850   00166E  1186               	iorwf	(powf@hy+2)& (0+255),w,b
 10851   001670  1185               	iorwf	(powf@hy+1)& (0+255),w,b
 10852   001672  E108               	bnz	u8940
 10853   001674  0584               	decf	powf@hy& (0+255),w,b
 10854   001676  A0D8               	btfss	status,0,c
 10855   001678  EF40  F00B         	goto	u8941
 10856   00167C  EF42  F00B         	goto	u8940
 10857   001680                     u8941:
 10858   001680  EF44  F00B         	goto	l8250
 10859   001684                     u8940:
 10860   001684  EF07  F00B         	goto	l8226
 10861   001688                     l8250:
 10862                           
 10863                           ; BSR set to: 1
 10864   001688  0E00               	movlw	0
 10865   00168A  0100               	movlb	0	; () banked
 10866   00168C  6F60               	movwf	?_powf& (0+255),b
 10867   00168E  0E00               	movlw	0
 10868   001690  6F61               	movwf	(?_powf+1)& (0+255),b
 10869   001692  0E00               	movlw	0
 10870   001694  6F62               	movwf	(?_powf+2)& (0+255),b
 10871   001696  0E00               	movlw	0
 10872   001698  6F63               	movwf	(?_powf+3)& (0+255),b
 10873   00169A  EFAD  F019         	goto	l1479
 10874   00169E                     l8254:
 10875                           
 10876                           ; BSR set to: 1
 10877   00169E  C178  F002         	movff	powf@ax,___fladd@b
 10878   0016A2  C179  F003         	movff	powf@ax+1,___fladd@b+1
 10879   0016A6  C17A  F004         	movff	powf@ax+2,___fladd@b+2
 10880   0016AA  C17B  F005         	movff	powf@ax+3,___fladd@b+3
 10881   0016AE  0E00               	movlw	0
 10882   0016B0  6E06               	movwf	___fladd@a^0,c
 10883   0016B2  0E00               	movlw	0
 10884   0016B4  6E07               	movwf	(___fladd@a+1)^0,c
 10885   0016B6  0E80               	movlw	128
 10886   0016B8  6E08               	movwf	(___fladd@a+2)^0,c
 10887   0016BA  0EBF               	movlw	191
 10888   0016BC  6E09               	movwf	(___fladd@a+3)^0,c
 10889   0016BE  ECE4  F027         	call	___fladd	;wreg free
 10890   0016C2  C002  F1B0         	movff	?___fladd,powf@t
 10891   0016C6  C003  F1B1         	movff	?___fladd+1,powf@t+1
 10892   0016CA  C004  F1B2         	movff	?___fladd+2,powf@t+2
 10893   0016CE  C005  F1B3         	movff	?___fladd+3,powf@t+3
 10894   0016D2  0E00               	movlw	0
 10895   0016D4  6E16               	movwf	___flmul@a^0,c
 10896   0016D6  0E00               	movlw	0
 10897   0016D8  6E17               	movwf	(___flmul@a+1)^0,c
 10898   0016DA  0E80               	movlw	128
 10899   0016DC  6E18               	movwf	(___flmul@a+2)^0,c
 10900   0016DE  0E3E               	movlw	62
 10901   0016E0  6E19               	movwf	(___flmul@a+3)^0,c
 10902   0016E2  C1B0  F012         	movff	powf@t,___flmul@b
 10903   0016E6  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10904   0016EA  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10905   0016EE  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10906   0016F2  EC44  F02A         	call	___flmul	;wreg free
 10907   0016F6  C012  F048         	movff	?___flmul,___flsub@a
 10908   0016FA  C013  F049         	movff	?___flmul+1,___flsub@a+1
 10909   0016FE  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 10910   001702  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 10911   001706  0EAB               	movlw	171
 10912   001708  6E44               	movwf	___flsub@b^0,c
 10913   00170A  0EAA               	movlw	170
 10914   00170C  6E45               	movwf	(___flsub@b+1)^0,c
 10915   00170E  0EAA               	movlw	170
 10916   001710  6E46               	movwf	(___flsub@b+2)^0,c
 10917   001712  0E3E               	movlw	62
 10918   001714  6E47               	movwf	(___flsub@b+3)^0,c
 10919   001716  EC5C  F03F         	call	___flsub	;wreg free
 10920   00171A  C044  F148         	movff	?___flsub,_powf$3187
 10921   00171E  C045  F149         	movff	?___flsub+1,_powf$3187+1
 10922   001722  C046  F14A         	movff	?___flsub+2,_powf$3187+2
 10923   001726  C047  F14B         	movff	?___flsub+3,_powf$3187+3
 10924   00172A  C1B0  F016         	movff	powf@t,___flmul@a
 10925   00172E  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10926   001732  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10927   001736  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10928   00173A  C1B0  F012         	movff	powf@t,___flmul@b
 10929   00173E  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10930   001742  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10931   001746  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10932   00174A  EC44  F02A         	call	___flmul	;wreg free
 10933   00174E  C012  F158         	movff	?___flmul,_powf$3188
 10934   001752  C013  F159         	movff	?___flmul+1,_powf$3188+1
 10935   001756  C014  F15A         	movff	?___flmul+2,_powf$3188+2
 10936   00175A  C015  F15B         	movff	?___flmul+3,_powf$3188+3
 10937   00175E  C1B0  F016         	movff	powf@t,___flmul@a
 10938   001762  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10939   001766  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10940   00176A  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10941   00176E  C148  F012         	movff	_powf$3187,___flmul@b
 10942   001772  C149  F013         	movff	_powf$3187+1,___flmul@b+1
 10943   001776  C14A  F014         	movff	_powf$3187+2,___flmul@b+2
 10944   00177A  C14B  F015         	movff	_powf$3187+3,___flmul@b+3
 10945   00177E  EC44  F02A         	call	___flmul	;wreg free
 10946   001782  C012  F048         	movff	?___flmul,___flsub@a
 10947   001786  C013  F049         	movff	?___flmul+1,___flsub@a+1
 10948   00178A  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 10949   00178E  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 10950   001792  0E00               	movlw	0
 10951   001794  6E44               	movwf	___flsub@b^0,c
 10952   001796  0E00               	movlw	0
 10953   001798  6E45               	movwf	(___flsub@b+1)^0,c
 10954   00179A  0E00               	movlw	0
 10955   00179C  6E46               	movwf	(___flsub@b+2)^0,c
 10956   00179E  0E3F               	movlw	63
 10957   0017A0  6E47               	movwf	(___flsub@b+3)^0,c
 10958   0017A2  EC5C  F03F         	call	___flsub	;wreg free
 10959   0017A6  C044  F14C         	movff	?___flsub,_powf$3189
 10960   0017AA  C045  F14D         	movff	?___flsub+1,_powf$3189+1
 10961   0017AE  C046  F14E         	movff	?___flsub+2,_powf$3189+2
 10962   0017B2  C047  F14F         	movff	?___flsub+3,_powf$3189+3
 10963   0017B6  C158  F012         	movff	_powf$3188,___flmul@b
 10964   0017BA  C159  F013         	movff	_powf$3188+1,___flmul@b+1
 10965   0017BE  C15A  F014         	movff	_powf$3188+2,___flmul@b+2
 10966   0017C2  C15B  F015         	movff	_powf$3188+3,___flmul@b+3
 10967   0017C6  C14C  F016         	movff	_powf$3189,___flmul@a
 10968   0017CA  C14D  F017         	movff	_powf$3189+1,___flmul@a+1
 10969   0017CE  C14E  F018         	movff	_powf$3189+2,___flmul@a+2
 10970   0017D2  C14F  F019         	movff	_powf$3189+3,___flmul@a+3
 10971   0017D6  EC44  F02A         	call	___flmul	;wreg free
 10972   0017DA  C012  F144         	movff	?___flmul,powf@w
 10973   0017DE  C013  F145         	movff	?___flmul+1,powf@w+1
 10974   0017E2  C014  F146         	movff	?___flmul+2,powf@w+2
 10975   0017E6  C015  F147         	movff	?___flmul+3,powf@w+3
 10976   0017EA  C1B0  F012         	movff	powf@t,___flmul@b
 10977   0017EE  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10978   0017F2  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10979   0017F6  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10980   0017FA  0E00               	movlw	0
 10981   0017FC  6E16               	movwf	___flmul@a^0,c
 10982   0017FE  0EAA               	movlw	170
 10983   001800  6E17               	movwf	(___flmul@a+1)^0,c
 10984   001802  0EB8               	movlw	184
 10985   001804  6E18               	movwf	(___flmul@a+2)^0,c
 10986   001806  0E3F               	movlw	63
 10987   001808  6E19               	movwf	(___flmul@a+3)^0,c
 10988   00180A  EC44  F02A         	call	___flmul	;wreg free
 10989   00180E  C012  F17C         	movff	?___flmul,powf@u
 10990   001812  C013  F17D         	movff	?___flmul+1,powf@u+1
 10991   001816  C014  F17E         	movff	?___flmul+2,powf@u+2
 10992   00181A  C015  F17F         	movff	?___flmul+3,powf@u+3
 10993   00181E  0E70               	movlw	112
 10994   001820  6E16               	movwf	___flmul@a^0,c
 10995   001822  0EA5               	movlw	165
 10996   001824  6E17               	movwf	(___flmul@a+1)^0,c
 10997   001826  0EEC               	movlw	236
 10998   001828  6E18               	movwf	(___flmul@a+2)^0,c
 10999   00182A  0E36               	movlw	54
 11000   00182C  6E19               	movwf	(___flmul@a+3)^0,c
 11001   00182E  C1B0  F012         	movff	powf@t,___flmul@b
 11002   001832  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 11003   001836  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 11004   00183A  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 11005   00183E  EC44  F02A         	call	___flmul	;wreg free
 11006   001842  C012  F044         	movff	?___flmul,___flsub@b
 11007   001846  C013  F045         	movff	?___flmul+1,___flsub@b+1
 11008   00184A  C014  F046         	movff	?___flmul+2,___flsub@b+2
 11009   00184E  C015  F047         	movff	?___flmul+3,___flsub@b+3
 11010   001852  0E3B               	movlw	59
 11011   001854  6E16               	movwf	___flmul@a^0,c
 11012   001856  0EAA               	movlw	170
 11013   001858  6E17               	movwf	(___flmul@a+1)^0,c
 11014   00185A  0EB8               	movlw	184
 11015   00185C  6E18               	movwf	(___flmul@a+2)^0,c
 11016   00185E  0E3F               	movlw	63
 11017   001860  6E19               	movwf	(___flmul@a+3)^0,c
 11018   001862  C144  F012         	movff	powf@w,___flmul@b
 11019   001866  C145  F013         	movff	powf@w+1,___flmul@b+1
 11020   00186A  C146  F014         	movff	powf@w+2,___flmul@b+2
 11021   00186E  C147  F015         	movff	powf@w+3,___flmul@b+3
 11022   001872  EC44  F02A         	call	___flmul	;wreg free
 11023   001876  C012  F048         	movff	?___flmul,___flsub@a
 11024   00187A  C013  F049         	movff	?___flmul+1,___flsub@a+1
 11025   00187E  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 11026   001882  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 11027   001886  EC5C  F03F         	call	___flsub	;wreg free
 11028   00188A  C044  F180         	movff	?___flsub,powf@v
 11029   00188E  C045  F181         	movff	?___flsub+1,powf@v+1
 11030   001892  C046  F182         	movff	?___flsub+2,powf@v+2
 11031   001896  C047  F183         	movff	?___flsub+3,powf@v+3
 11032   00189A  C17C  F002         	movff	powf@u,___fladd@b
 11033   00189E  C17D  F003         	movff	powf@u+1,___fladd@b+1
 11034   0018A2  C17E  F004         	movff	powf@u+2,___fladd@b+2
 11035   0018A6  C17F  F005         	movff	powf@u+3,___fladd@b+3
 11036   0018AA  C180  F006         	movff	powf@v,___fladd@a
 11037   0018AE  C181  F007         	movff	powf@v+1,___fladd@a+1
 11038   0018B2  C182  F008         	movff	powf@v+2,___fladd@a+2
 11039   0018B6  C183  F009         	movff	powf@v+3,___fladd@a+3
 11040   0018BA  ECE4  F027         	call	___fladd	;wreg free
 11041   0018BE  C002  F18C         	movff	?___fladd,powf@t1
 11042   0018C2  C003  F18D         	movff	?___fladd+1,powf@t1+1
 11043   0018C6  C004  F18E         	movff	?___fladd+2,powf@t1+2
 11044   0018CA  C005  F18F         	movff	?___fladd+3,powf@t1+3
 11045   0018CE  C18C  F198         	movff	powf@t1,powf@is
 11046   0018D2  C18D  F199         	movff	powf@t1+1,powf@is+1
 11047   0018D6  C18E  F19A         	movff	powf@t1+2,powf@is+2
 11048   0018DA  C18F  F19B         	movff	powf@t1+3,powf@is+3
 11049   0018DE  0E00               	movlw	0
 11050   0018E0  0101               	movlb	1	; () banked
 11051   0018E2  1598               	andwf	powf@is& (0+255),w,b
 11052   0018E4  6F8C               	movwf	powf@t1& (0+255),b
 11053   0018E6  0EF0               	movlw	240
 11054   0018E8  1599               	andwf	(powf@is+1)& (0+255),w,b
 11055   0018EA  6F8D               	movwf	(powf@t1+1)& (0+255),b
 11056   0018EC  0EFF               	movlw	255
 11057   0018EE  159A               	andwf	(powf@is+2)& (0+255),w,b
 11058   0018F0  6F8E               	movwf	(powf@t1+2)& (0+255),b
 11059   0018F2  0EFF               	movlw	255
 11060   0018F4  159B               	andwf	(powf@is+3)& (0+255),w,b
 11061   0018F6  6F8F               	movwf	(powf@t1+3)& (0+255),b
 11062   0018F8                     
 11063                           ; BSR set to: 1
 11064   0018F8  C17C  F048         	movff	powf@u,___flsub@a
 11065   0018FC  C17D  F049         	movff	powf@u+1,___flsub@a+1
 11066   001900  C17E  F04A         	movff	powf@u+2,___flsub@a+2
 11067   001904  C17F  F04B         	movff	powf@u+3,___flsub@a+3
 11068   001908  C18C  F044         	movff	powf@t1,___flsub@b
 11069   00190C  C18D  F045         	movff	powf@t1+1,___flsub@b+1
 11070   001910  C18E  F046         	movff	powf@t1+2,___flsub@b+2
 11071   001914  C18F  F047         	movff	powf@t1+3,___flsub@b+3
 11072   001918  EC5C  F03F         	call	___flsub	;wreg free
 11073   00191C  C044  F19C         	movff	?___flsub,_powf$3190
 11074   001920  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 11075   001924  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 11076   001928  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 11077   00192C  C180  F044         	movff	powf@v,___flsub@b
 11078   001930  C181  F045         	movff	powf@v+1,___flsub@b+1
 11079   001934  C182  F046         	movff	powf@v+2,___flsub@b+2
 11080   001938  C183  F047         	movff	powf@v+3,___flsub@b+3
 11081   00193C  C19C  F048         	movff	_powf$3190,___flsub@a
 11082   001940  C19D  F049         	movff	_powf$3190+1,___flsub@a+1
 11083   001944  C19E  F04A         	movff	_powf$3190+2,___flsub@a+2
 11084   001948  C19F  F04B         	movff	_powf$3190+3,___flsub@a+3
 11085   00194C  EC5C  F03F         	call	___flsub	;wreg free
 11086   001950  C044  F11C         	movff	?___flsub,powf@t2
 11087   001954  C045  F11D         	movff	?___flsub+1,powf@t2+1
 11088   001958  C046  F11E         	movff	?___flsub+2,powf@t2+2
 11089   00195C  C047  F11F         	movff	?___flsub+3,powf@t2+3
 11090   001960  EFA6  F013         	goto	l8404
 11091   001964                     l8276:
 11092                           
 11093                           ; BSR set to: 1
 11094   001964  0E00               	movlw	0
 11095   001966  6F88               	movwf	powf@n& (0+255),b
 11096   001968  0E00               	movlw	0
 11097   00196A  6F89               	movwf	(powf@n+1)& (0+255),b
 11098   00196C  0E00               	movlw	0
 11099   00196E  6F8A               	movwf	(powf@n+2)& (0+255),b
 11100   001970  0E00               	movlw	0
 11101   001972  6F8B               	movwf	(powf@n+3)& (0+255),b
 11102   001974                     
 11103                           ; BSR set to: 1
 11104   001974  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 11105   001976  EFC8  F00C         	goto	u8950
 11106   00197A  51AF               	movf	(powf@ix+3)& (0+255),w,b
 11107   00197C  E107               	bnz	u8951
 11108   00197E  0E80               	movlw	128
 11109   001980  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
 11110   001982  B0D8               	btfsc	status,0,c
 11111   001984  EFC6  F00C         	goto	u8951
 11112   001988  EFC8  F00C         	goto	u8950
 11113   00198C                     u8951:
 11114   00198C  EFF3  F00C         	goto	l8286
 11115   001990                     u8950:
 11116   001990                     
 11117                           ; BSR set to: 1
 11118   001990  C178  F012         	movff	powf@ax,___flmul@b
 11119   001994  C179  F013         	movff	powf@ax+1,___flmul@b+1
 11120   001998  C17A  F014         	movff	powf@ax+2,___flmul@b+2
 11121   00199C  C17B  F015         	movff	powf@ax+3,___flmul@b+3
 11122   0019A0  0E00               	movlw	0
 11123   0019A2  6E16               	movwf	___flmul@a^0,c
 11124   0019A4  0E00               	movlw	0
 11125   0019A6  6E17               	movwf	(___flmul@a+1)^0,c
 11126   0019A8  0E80               	movlw	128
 11127   0019AA  6E18               	movwf	(___flmul@a+2)^0,c
 11128   0019AC  0E4B               	movlw	75
 11129   0019AE  6E19               	movwf	(___flmul@a+3)^0,c
 11130   0019B0  EC44  F02A         	call	___flmul	;wreg free
 11131   0019B4  C012  F178         	movff	?___flmul,powf@ax
 11132   0019B8  C013  F179         	movff	?___flmul+1,powf@ax+1
 11133   0019BC  C014  F17A         	movff	?___flmul+2,powf@ax+2
 11134   0019C0  C015  F17B         	movff	?___flmul+3,powf@ax+3
 11135   0019C4  0EE8               	movlw	232
 11136   0019C6  0101               	movlb	1	; () banked
 11137   0019C8  2788               	addwf	powf@n& (0+255),f,b
 11138   0019CA  0EFF               	movlw	255
 11139   0019CC  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11140   0019CE  0EFF               	movlw	255
 11141   0019D0  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11142   0019D2  0EFF               	movlw	255
 11143   0019D4  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11144   0019D6                     
 11145                           ; BSR set to: 1
 11146   0019D6  C178  F1AC         	movff	powf@ax,powf@ix
 11147   0019DA  C179  F1AD         	movff	powf@ax+1,powf@ix+1
 11148   0019DE  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
 11149   0019E2  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
 11150   0019E6                     l8286:
 11151                           
 11152                           ; BSR set to: 1
 11153   0019E6  0E17               	movlw	23
 11154   0019E8  0100               	movlb	0	; () banked
 11155   0019EA  6F68               	movwf	??_powf& (0+255),b
 11156   0019EC  C1AC  F069         	movff	powf@ix,??_powf+1
 11157   0019F0  C1AD  F06A         	movff	powf@ix+1,??_powf+2
 11158   0019F4  C1AE  F06B         	movff	powf@ix+2,??_powf+3
 11159   0019F8  C1AF  F06C         	movff	powf@ix+3,??_powf+4
 11160   0019FC                     u8965:
 11161   0019FC  6768               	tstfsz	??_powf& (0+255),b
 11162   0019FE  EF03  F00D         	goto	u8966
 11163   001A02  EF0B  F00D         	goto	u8967
 11164   001A06                     u8966:
 11165   001A06  356C               	rlcf	(??_powf+4)& (0+255),w,b
 11166   001A08  336C               	rrcf	(??_powf+4)& (0+255),f,b
 11167   001A0A  336B               	rrcf	(??_powf+3)& (0+255),f,b
 11168   001A0C  336A               	rrcf	(??_powf+2)& (0+255),f,b
 11169   001A0E  3369               	rrcf	(??_powf+1)& (0+255),f,b
 11170   001A10  2F68               	decfsz	??_powf& (0+255),f,b
 11171   001A12  EFFE  F00C         	goto	u8965
 11172   001A16                     u8967:
 11173   001A16  0E81               	movlw	129
 11174   001A18  0100               	movlb	0	; () banked
 11175   001A1A  2569               	addwf	(??_powf+1)& (0+255),w,b
 11176   001A1C  6F6D               	movwf	(??_powf+5)& (0+255),b
 11177   001A1E  0EFF               	movlw	255
 11178   001A20  216A               	addwfc	(??_powf+2)& (0+255),w,b
 11179   001A22  6F6E               	movwf	(??_powf+6)& (0+255),b
 11180   001A24  0EFF               	movlw	255
 11181   001A26  216B               	addwfc	(??_powf+3)& (0+255),w,b
 11182   001A28  6F6F               	movwf	(??_powf+7)& (0+255),b
 11183   001A2A  0EFF               	movlw	255
 11184   001A2C  216C               	addwfc	(??_powf+4)& (0+255),w,b
 11185   001A2E  6F70               	movwf	(??_powf+8)& (0+255),b
 11186   001A30  516D               	movf	(??_powf+5)& (0+255),w,b
 11187   001A32  0101               	movlb	1	; () banked
 11188   001A34  2788               	addwf	powf@n& (0+255),f,b
 11189   001A36  0100               	movlb	0	; () banked
 11190   001A38  516E               	movf	(??_powf+6)& (0+255),w,b
 11191   001A3A  0101               	movlb	1	; () banked
 11192   001A3C  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11193   001A3E  0100               	movlb	0	; () banked
 11194   001A40  516F               	movf	(??_powf+7)& (0+255),w,b
 11195   001A42  0101               	movlb	1	; () banked
 11196   001A44  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11197   001A46  0100               	movlb	0	; () banked
 11198   001A48  5170               	movf	(??_powf+8)& (0+255),w,b
 11199   001A4A  0101               	movlb	1	; () banked
 11200   001A4C  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11201   001A4E                     
 11202                           ; BSR set to: 1
 11203   001A4E  0EFF               	movlw	255
 11204   001A50  15AC               	andwf	powf@ix& (0+255),w,b
 11205   001A52  6FA8               	movwf	powf@j& (0+255),b
 11206   001A54  0EFF               	movlw	255
 11207   001A56  15AD               	andwf	(powf@ix+1)& (0+255),w,b
 11208   001A58  6FA9               	movwf	(powf@j+1)& (0+255),b
 11209   001A5A  0E7F               	movlw	127
 11210   001A5C  15AE               	andwf	(powf@ix+2)& (0+255),w,b
 11211   001A5E  6FAA               	movwf	(powf@j+2)& (0+255),b
 11212   001A60  0E00               	movlw	0
 11213   001A62  15AF               	andwf	(powf@ix+3)& (0+255),w,b
 11214   001A64  6FAB               	movwf	(powf@j+3)& (0+255),b
 11215   001A66                     
 11216                           ; BSR set to: 1
 11217   001A66  0E00               	movlw	0
 11218   001A68  6FA4               	movwf	powf@k& (0+255),b
 11219   001A6A  0E00               	movlw	0
 11220   001A6C  6FA5               	movwf	(powf@k+1)& (0+255),b
 11221   001A6E  0E00               	movlw	0
 11222   001A70  6FA6               	movwf	(powf@k+2)& (0+255),b
 11223   001A72  0E00               	movlw	0
 11224   001A74  6FA7               	movwf	(powf@k+3)& (0+255),b
 11225   001A76                     
 11226                           ; BSR set to: 1
 11227   001A76  0E00               	movlw	0
 11228   001A78  11A8               	iorwf	powf@j& (0+255),w,b
 11229   001A7A  6FAC               	movwf	powf@ix& (0+255),b
 11230   001A7C  0E00               	movlw	0
 11231   001A7E  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 11232   001A80  6FAD               	movwf	(powf@ix+1)& (0+255),b
 11233   001A82  0E80               	movlw	128
 11234   001A84  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 11235   001A86  6FAE               	movwf	(powf@ix+2)& (0+255),b
 11236   001A88  0E3F               	movlw	63
 11237   001A8A  11AB               	iorwf	(powf@j+3)& (0+255),w,b
 11238   001A8C  6FAF               	movwf	(powf@ix+3)& (0+255),b
 11239   001A8E                     
 11240                           ; BSR set to: 1
 11241   001A8E  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 11242   001A90  EF59  F00D         	goto	u8970
 11243   001A94  51AB               	movf	(powf@j+3)& (0+255),w,b
 11244   001A96  E10B               	bnz	u8971
 11245   001A98  0E72               	movlw	114
 11246   001A9A  5DA8               	subwf	powf@j& (0+255),w,b
 11247   001A9C  0EC4               	movlw	196
 11248   001A9E  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 11249   001AA0  0E1C               	movlw	28
 11250   001AA2  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 11251   001AA4  B0D8               	btfsc	status,0,c
 11252   001AA6  EF57  F00D         	goto	u8971
 11253   001AAA  EF59  F00D         	goto	u8970
 11254   001AAE                     u8971:
 11255   001AAE  EF5B  F00D         	goto	l8298
 11256   001AB2                     u8970:
 11257   001AB2  EF85  F00D         	goto	l8304
 11258   001AB6                     l8298:
 11259                           
 11260                           ; BSR set to: 1
 11261   001AB6  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 11262   001AB8  EF6D  F00D         	goto	u8980
 11263   001ABC  51AB               	movf	(powf@j+3)& (0+255),w,b
 11264   001ABE  E10B               	bnz	u8981
 11265   001AC0  0ED7               	movlw	215
 11266   001AC2  5DA8               	subwf	powf@j& (0+255),w,b
 11267   001AC4  0EB3               	movlw	179
 11268   001AC6  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 11269   001AC8  0E5D               	movlw	93
 11270   001ACA  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 11271   001ACC  B0D8               	btfsc	status,0,c
 11272   001ACE  EF6B  F00D         	goto	u8981
 11273   001AD2  EF6D  F00D         	goto	u8980
 11274   001AD6                     u8981:
 11275   001AD6  EF77  F00D         	goto	l8302
 11276   001ADA                     u8980:
 11277   001ADA                     
 11278                           ; BSR set to: 1
 11279   001ADA  0E01               	movlw	1
 11280   001ADC  6FA4               	movwf	powf@k& (0+255),b
 11281   001ADE  0E00               	movlw	0
 11282   001AE0  6FA5               	movwf	(powf@k+1)& (0+255),b
 11283   001AE2  0E00               	movlw	0
 11284   001AE4  6FA6               	movwf	(powf@k+2)& (0+255),b
 11285   001AE6  0E00               	movlw	0
 11286   001AE8  6FA7               	movwf	(powf@k+3)& (0+255),b
 11287   001AEA  EF85  F00D         	goto	l8304
 11288   001AEE                     l8302:
 11289                           
 11290                           ; BSR set to: 1
 11291   001AEE  0E01               	movlw	1
 11292   001AF0  2788               	addwf	powf@n& (0+255),f,b
 11293   001AF2  0E00               	movlw	0
 11294   001AF4  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11295   001AF6  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11296   001AF8  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11297   001AFA  0E00               	movlw	0
 11298   001AFC  27AC               	addwf	powf@ix& (0+255),f,b
 11299   001AFE  0E00               	movlw	0
 11300   001B00  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
 11301   001B02  0E80               	movlw	128
 11302   001B04  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
 11303   001B06  0EFF               	movlw	255
 11304   001B08  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
 11305   001B0A                     l8304:
 11306                           
 11307                           ; BSR set to: 1
 11308   001B0A  C1AC  F178         	movff	powf@ix,powf@ax
 11309   001B0E  C1AD  F179         	movff	powf@ix+1,powf@ax+1
 11310   001B12  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
 11311   001B16  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
 11312   001B1A                     
 11313                           ; BSR set to: 1
 11314   001B1A  C178  F044         	movff	powf@ax,___flsub@b
 11315   001B1E  C179  F045         	movff	powf@ax+1,___flsub@b+1
 11316   001B22  C17A  F046         	movff	powf@ax+2,___flsub@b+2
 11317   001B26  C17B  F047         	movff	powf@ax+3,___flsub@b+3
 11318   001B2A  51A4               	movf	powf@k& (0+255),w,b
 11319   001B2C  0D04               	mullw	4
 11320   001B2E  50F3               	movf	243,w,c
 11321   001B30  0F11               	addlw	low _bp
 11322   001B32  0100               	movlb	0	; () banked
 11323   001B34  6F68               	movwf	??_powf& (0+255),b
 11324   001B36  C068  FFF6         	movff	??_powf,tblptrl
 11325   001B3A                     	if	1	;There is more than 1 active tblptr byte
 11326   001B3A  0E0E               	movlw	high __smallconst
 11327   001B3C  6EF7               	movwf	tblptrh,c
 11328   001B3E                     	endif
 11329   001B3E                     	if	0	;tblptru may be non-zero
 11330   001B3E                     	endif
 11331   001B3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11332   001B3E  0E00               	movlw	low (__smallconst shr (0+16))
 11333   001B40  6EF8               	movwf	tblptru,c
 11334   001B42                     	endif
 11335   001B42  0009               	tblrd		*+
 11336   001B44  CFF5 F048          	movff	tablat,___flsub@a
 11337   001B48  0009               	tblrd		*+
 11338   001B4A  CFF5 F049          	movff	tablat,___flsub@a+1
 11339   001B4E  0009               	tblrd		*+
 11340   001B50  CFF5 F04A          	movff	tablat,___flsub@a+2
 11341   001B54  000A               	tblrd		*-
 11342   001B56  CFF5 F04B          	movff	tablat,___flsub@a+3
 11343   001B5A  EC5C  F03F         	call	___flsub	;wreg free
 11344   001B5E  C044  F17C         	movff	?___flsub,powf@u
 11345   001B62  C045  F17D         	movff	?___flsub+1,powf@u+1
 11346   001B66  C046  F17E         	movff	?___flsub+2,powf@u+2
 11347   001B6A  C047  F17F         	movff	?___flsub+3,powf@u+3
 11348   001B6E  0E00               	movlw	0
 11349   001B70  6E2B               	movwf	___fldiv@b^0,c
 11350   001B72  0E00               	movlw	0
 11351   001B74  6E2C               	movwf	(___fldiv@b+1)^0,c
 11352   001B76  0E80               	movlw	128
 11353   001B78  6E2D               	movwf	(___fldiv@b+2)^0,c
 11354   001B7A  0E3F               	movlw	63
 11355   001B7C  6E2E               	movwf	(___fldiv@b+3)^0,c
 11356   001B7E  C178  F006         	movff	powf@ax,___fladd@a
 11357   001B82  C179  F007         	movff	powf@ax+1,___fladd@a+1
 11358   001B86  C17A  F008         	movff	powf@ax+2,___fladd@a+2
 11359   001B8A  C17B  F009         	movff	powf@ax+3,___fladd@a+3
 11360   001B8E  0101               	movlb	1	; () banked
 11361   001B90  51A4               	movf	powf@k& (0+255),w,b
 11362   001B92  0D04               	mullw	4
 11363   001B94  50F3               	movf	243,w,c
 11364   001B96  0F11               	addlw	low _bp
 11365   001B98  0100               	movlb	0	; () banked
 11366   001B9A  6F68               	movwf	??_powf& (0+255),b
 11367   001B9C  C068  FFF6         	movff	??_powf,tblptrl
 11368   001BA0                     	if	1	;There is more than 1 active tblptr byte
 11369   001BA0  0E0E               	movlw	high __smallconst
 11370   001BA2  6EF7               	movwf	tblptrh,c
 11371   001BA4                     	endif
 11372   001BA4                     	if	0	;tblptru may be non-zero
 11373   001BA4                     	endif
 11374   001BA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11375   001BA4  0E00               	movlw	low (__smallconst shr (0+16))
 11376   001BA6  6EF8               	movwf	tblptru,c
 11377   001BA8                     	endif
 11378   001BA8  0009               	tblrd		*+
 11379   001BAA  CFF5 F002          	movff	tablat,___fladd@b
 11380   001BAE  0009               	tblrd		*+
 11381   001BB0  CFF5 F003          	movff	tablat,___fladd@b+1
 11382   001BB4  0009               	tblrd		*+
 11383   001BB6  CFF5 F004          	movff	tablat,___fladd@b+2
 11384   001BBA  000A               	tblrd		*-
 11385   001BBC  CFF5 F005          	movff	tablat,___fladd@b+3
 11386   001BC0  ECE4  F027         	call	___fladd	;wreg free
 11387   001BC4  C002  F02F         	movff	?___fladd,___fldiv@a
 11388   001BC8  C003  F030         	movff	?___fladd+1,___fldiv@a+1
 11389   001BCC  C004  F031         	movff	?___fladd+2,___fldiv@a+2
 11390   001BD0  C005  F032         	movff	?___fladd+3,___fldiv@a+3
 11391   001BD4  EC48  F02E         	call	___fldiv	;wreg free
 11392   001BD8  C02B  F180         	movff	?___fldiv,powf@v
 11393   001BDC  C02C  F181         	movff	?___fldiv+1,powf@v+1
 11394   001BE0  C02D  F182         	movff	?___fldiv+2,powf@v+2
 11395   001BE4  C02E  F183         	movff	?___fldiv+3,powf@v+3
 11396   001BE8  C17C  F012         	movff	powf@u,___flmul@b
 11397   001BEC  C17D  F013         	movff	powf@u+1,___flmul@b+1
 11398   001BF0  C17E  F014         	movff	powf@u+2,___flmul@b+2
 11399   001BF4  C17F  F015         	movff	powf@u+3,___flmul@b+3
 11400   001BF8  C180  F016         	movff	powf@v,___flmul@a
 11401   001BFC  C181  F017         	movff	powf@v+1,___flmul@a+1
 11402   001C00  C182  F018         	movff	powf@v+2,___flmul@a+2
 11403   001C04  C183  F019         	movff	powf@v+3,___flmul@a+3
 11404   001C08  EC44  F02A         	call	___flmul	;wreg free
 11405   001C0C  C012  F160         	movff	?___flmul,powf@s
 11406   001C10  C013  F161         	movff	?___flmul+1,powf@s+1
 11407   001C14  C014  F162         	movff	?___flmul+2,powf@s+2
 11408   001C18  C015  F163         	movff	?___flmul+3,powf@s+3
 11409   001C1C  C160  F174         	movff	powf@s,powf@s_h
 11410   001C20  C161  F175         	movff	powf@s+1,powf@s_h+1
 11411   001C24  C162  F176         	movff	powf@s+2,powf@s_h+2
 11412   001C28  C163  F177         	movff	powf@s+3,powf@s_h+3
 11413   001C2C  C174  F198         	movff	powf@s_h,powf@is
 11414   001C30  C175  F199         	movff	powf@s_h+1,powf@is+1
 11415   001C34  C176  F19A         	movff	powf@s_h+2,powf@is+2
 11416   001C38  C177  F19B         	movff	powf@s_h+3,powf@is+3
 11417   001C3C  0E00               	movlw	0
 11418   001C3E  0101               	movlb	1	; () banked
 11419   001C40  1598               	andwf	powf@is& (0+255),w,b
 11420   001C42  6F74               	movwf	powf@s_h& (0+255),b
 11421   001C44  0EF0               	movlw	240
 11422   001C46  1599               	andwf	(powf@is+1)& (0+255),w,b
 11423   001C48  6F75               	movwf	(powf@s_h+1)& (0+255),b
 11424   001C4A  0EFF               	movlw	255
 11425   001C4C  159A               	andwf	(powf@is+2)& (0+255),w,b
 11426   001C4E  6F76               	movwf	(powf@s_h+2)& (0+255),b
 11427   001C50  0EFF               	movlw	255
 11428   001C52  159B               	andwf	(powf@is+3)& (0+255),w,b
 11429   001C54  6F77               	movwf	(powf@s_h+3)& (0+255),b
 11430   001C56                     
 11431                           ; BSR set to: 1
 11432   001C56  C1AC  F068         	movff	powf@ix,??_powf
 11433   001C5A  C1AD  F069         	movff	powf@ix+1,??_powf+1
 11434   001C5E  C1AE  F06A         	movff	powf@ix+2,??_powf+2
 11435   001C62  C1AF  F06B         	movff	powf@ix+3,??_powf+3
 11436   001C66  0100               	movlb	0	; () banked
 11437   001C68  356B               	rlcf	(??_powf+3)& (0+255),w,b
 11438   001C6A  336B               	rrcf	(??_powf+3)& (0+255),f,b
 11439   001C6C  336A               	rrcf	(??_powf+2)& (0+255),f,b
 11440   001C6E  3369               	rrcf	(??_powf+1)& (0+255),f,b
 11441   001C70  3368               	rrcf	??_powf& (0+255),f,b
 11442   001C72  0E00               	movlw	0
 11443   001C74  1568               	andwf	??_powf& (0+255),w,b
 11444   001C76  6F6C               	movwf	(??_powf+4)& (0+255),b
 11445   001C78  0EF0               	movlw	240
 11446   001C7A  1569               	andwf	(??_powf+1)& (0+255),w,b
 11447   001C7C  6F6D               	movwf	(??_powf+5)& (0+255),b
 11448   001C7E  0EFF               	movlw	255
 11449   001C80  156A               	andwf	(??_powf+2)& (0+255),w,b
 11450   001C82  6F6E               	movwf	(??_powf+6)& (0+255),b
 11451   001C84  0EFF               	movlw	255
 11452   001C86  156B               	andwf	(??_powf+3)& (0+255),w,b
 11453   001C88  6F6F               	movwf	(??_powf+7)& (0+255),b
 11454   001C8A  0E00               	movlw	0
 11455   001C8C  116C               	iorwf	(??_powf+4)& (0+255),w,b
 11456   001C8E  0101               	movlb	1	; () banked
 11457   001C90  6F98               	movwf	powf@is& (0+255),b
 11458   001C92  0E00               	movlw	0
 11459   001C94  0100               	movlb	0	; () banked
 11460   001C96  116D               	iorwf	(??_powf+5)& (0+255),w,b
 11461   001C98  0101               	movlb	1	; () banked
 11462   001C9A  6F99               	movwf	(powf@is+1)& (0+255),b
 11463   001C9C  0E00               	movlw	0
 11464   001C9E  0100               	movlb	0	; () banked
 11465   001CA0  116E               	iorwf	(??_powf+6)& (0+255),w,b
 11466   001CA2  0101               	movlb	1	; () banked
 11467   001CA4  6F9A               	movwf	(powf@is+2)& (0+255),b
 11468   001CA6  0E20               	movlw	32
 11469   001CA8  0100               	movlb	0	; () banked
 11470   001CAA  116F               	iorwf	(??_powf+7)& (0+255),w,b
 11471   001CAC  0101               	movlb	1	; () banked
 11472   001CAE  6F9B               	movwf	(powf@is+3)& (0+255),b
 11473   001CB0                     
 11474                           ; BSR set to: 1
 11475   001CB0  C1A4  F068         	movff	powf@k,??_powf
 11476   001CB4  C1A5  F069         	movff	powf@k+1,??_powf+1
 11477   001CB8  C1A6  F06A         	movff	powf@k+2,??_powf+2
 11478   001CBC  C1A7  F06B         	movff	powf@k+3,??_powf+3
 11479   001CC0  0E15               	movlw	21
 11480   001CC2                     u8995:
 11481   001CC2  90D8               	bcf	status,0,c
 11482   001CC4  0100               	movlb	0	; () banked
 11483   001CC6  3768               	rlcf	??_powf& (0+255),f,b
 11484   001CC8  3769               	rlcf	(??_powf+1)& (0+255),f,b
 11485   001CCA  376A               	rlcf	(??_powf+2)& (0+255),f,b
 11486   001CCC  376B               	rlcf	(??_powf+3)& (0+255),f,b
 11487   001CCE  2EE8               	decfsz	wreg,f,c
 11488   001CD0  EF61  F00E         	goto	u8995
 11489   001CD4  0101               	movlb	1	; () banked
 11490   001CD6  5198               	movf	powf@is& (0+255),w,b
 11491   001CD8  0100               	movlb	0	; () banked
 11492   001CDA  2568               	addwf	??_powf& (0+255),w,b
 11493   001CDC  6F6C               	movwf	(??_powf+4)& (0+255),b
 11494   001CDE  0101               	movlb	1	; () banked
 11495   001CE0  5199               	movf	(powf@is+1)& (0+255),w,b
 11496   001CE2  0100               	movlb	0	; () banked
 11497   001CE4  2169               	addwfc	(??_powf+1)& (0+255),w,b
 11498   001CE6  6F6D               	movwf	(??_powf+5)& (0+255),b
 11499   001CE8  0101               	movlb	1	; () banked
 11500   001CEA  519A               	movf	(powf@is+2)& (0+255),w,b
 11501   001CEC  0100               	movlb	0	; () banked
 11502   001CEE  216A               	addwfc	(??_powf+2)& (0+255),w,b
 11503   001CF0  6F6E               	movwf	(??_powf+6)& (0+255),b
 11504   001CF2  0101               	movlb	1	; () banked
 11505   001CF4  519B               	movf	(powf@is+3)& (0+255),w,b
 11506   001CF6  0100               	movlb	0	; () banked
 11507   001CF8  216B               	addwfc	(??_powf+3)& (0+255),w,b
 11508   001CFA  6F6F               	movwf	(??_powf+7)& (0+255),b
 11509   001CFC  0E00               	movlw	0
 11510   001CFE  256C               	addwf	(??_powf+4)& (0+255),w,b
 11511   001D00  0101               	movlb	1	; () banked
 11512   001D02  6F70               	movwf	powf@t_h& (0+255),b
 11513   001D04  0E00               	movlw	0
 11514   001D06  0100               	movlb	0	; () banked
 11515   001D08  216D               	addwfc	(??_powf+5)& (0+255),w,b
 11516   001D0A  0101               	movlb	1	; () banked
 11517   001D0C  6F71               	movwf	(powf@t_h+1)& (0+255),b
 11518   001D0E  0E40               	movlw	64
 11519   001D10  0100               	movlb	0	; () banked
 11520   001D12  216E               	addwfc	(??_powf+6)& (0+255),w,b
 11521   001D14  0101               	movlb	1	; () banked
 11522   001D16  6F72               	movwf	(powf@t_h+2)& (0+255),b
 11523   001D18  0E00               	movlw	0
 11524   001D1A  0100               	movlb	0	; () banked
 11525   001D1C  216F               	addwfc	(??_powf+7)& (0+255),w,b
 11526   001D1E  0101               	movlb	1	; () banked
 11527   001D20  6F73               	movwf	(powf@t_h+3)& (0+255),b
 11528   001D22                     
 11529                           ; BSR set to: 1
 11530   001D22  51A4               	movf	powf@k& (0+255),w,b
 11531   001D24  0D04               	mullw	4
 11532   001D26  50F3               	movf	243,w,c
 11533   001D28  0F11               	addlw	low _bp
 11534   001D2A  0100               	movlb	0	; () banked
 11535   001D2C  6F68               	movwf	??_powf& (0+255),b
 11536   001D2E  C068  FFF6         	movff	??_powf,tblptrl
 11537   001D32                     	if	1	;There is more than 1 active tblptr byte
 11538   001D32  0E0E               	movlw	high __smallconst
 11539   001D34  6EF7               	movwf	tblptrh,c
 11540   001D36                     	endif
 11541   001D36                     	if	0	;tblptru may be non-zero
 11542   001D36                     	endif
 11543   001D36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11544   001D36  0E00               	movlw	low (__smallconst shr (0+16))
 11545   001D38  6EF8               	movwf	tblptru,c
 11546   001D3A                     	endif
 11547   001D3A  0009               	tblrd		*+
 11548   001D3C  CFF5 F048          	movff	tablat,___flsub@a
 11549   001D40  0009               	tblrd		*+
 11550   001D42  CFF5 F049          	movff	tablat,___flsub@a+1
 11551   001D46  0009               	tblrd		*+
 11552   001D48  CFF5 F04A          	movff	tablat,___flsub@a+2
 11553   001D4C  000A               	tblrd		*-
 11554   001D4E  CFF5 F04B          	movff	tablat,___flsub@a+3
 11555   001D52  C170  F044         	movff	powf@t_h,___flsub@b
 11556   001D56  C171  F045         	movff	powf@t_h+1,___flsub@b+1
 11557   001D5A  C172  F046         	movff	powf@t_h+2,___flsub@b+2
 11558   001D5E  C173  F047         	movff	powf@t_h+3,___flsub@b+3
 11559   001D62  EC5C  F03F         	call	___flsub	;wreg free
 11560   001D66  C044  F19C         	movff	?___flsub,_powf$3190
 11561   001D6A  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 11562   001D6E  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 11563   001D72  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 11564   001D76  C178  F044         	movff	powf@ax,___flsub@b
 11565   001D7A  C179  F045         	movff	powf@ax+1,___flsub@b+1
 11566   001D7E  C17A  F046         	movff	powf@ax+2,___flsub@b+2
 11567   001D82  C17B  F047         	movff	powf@ax+3,___flsub@b+3
 11568   001D86  C19C  F048         	movff	_powf$3190,___flsub@a
 11569   001D8A  C19D  F049         	movff	_powf$3190+1,___flsub@a+1
 11570   001D8E  C19E  F04A         	movff	_powf$3190+2,___flsub@a+2
 11571   001D92  C19F  F04B         	movff	_powf$3190+3,___flsub@a+3
 11572   001D96  EC5C  F03F         	call	___flsub	;wreg free
 11573   001D9A  C044  F134         	movff	?___flsub,powf@t_l
 11574   001D9E  C045  F135         	movff	?___flsub+1,powf@t_l+1
 11575   001DA2  C046  F136         	movff	?___flsub+2,powf@t_l+2
 11576   001DA6  C047  F137         	movff	?___flsub+3,powf@t_l+3
 11577   001DAA  C170  F016         	movff	powf@t_h,___flmul@a
 11578   001DAE  C171  F017         	movff	powf@t_h+1,___flmul@a+1
 11579   001DB2  C172  F018         	movff	powf@t_h+2,___flmul@a+2
 11580   001DB6  C173  F019         	movff	powf@t_h+3,___flmul@a+3
 11581   001DBA  C174  F012         	movff	powf@s_h,___flmul@b
 11582   001DBE  C175  F013         	movff	powf@s_h+1,___flmul@b+1
 11583   001DC2  C176  F014         	movff	powf@s_h+2,___flmul@b+2
 11584   001DC6  C177  F015         	movff	powf@s_h+3,___flmul@b+3
 11585   001DCA  EC44  F02A         	call	___flmul	;wreg free
 11586   001DCE  C012  F048         	movff	?___flmul,___flsub@a
 11587   001DD2  C013  F049         	movff	?___flmul+1,___flsub@a+1
 11588   001DD6  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 11589   001DDA  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 11590   001DDE  C17C  F044         	movff	powf@u,___flsub@b
 11591   001DE2  C17D  F045         	movff	powf@u+1,___flsub@b+1
 11592   001DE6  C17E  F046         	movff	powf@u+2,___flsub@b+2
 11593   001DEA  C17F  F047         	movff	powf@u+3,___flsub@b+3
 11594   001DEE  EC5C  F03F         	call	___flsub	;wreg free
 11595   001DF2  C044  F19C         	movff	?___flsub,_powf$3190
 11596   001DF6  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 11597   001DFA  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 11598   001DFE  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 11599   001E02  C134  F016         	movff	powf@t_l,___flmul@a
 11600   001E06  C135  F017         	movff	powf@t_l+1,___flmul@a+1
 11601   001E0A  C136  F018         	movff	powf@t_l+2,___flmul@a+2
 11602   001E0E  C137  F019         	movff	powf@t_l+3,___flmul@a+3
 11603   001E12  C174  F012         	movff	powf@s_h,___flmul@b
 11604   001E16  C175  F013         	movff	powf@s_h+1,___flmul@b+1
 11605   001E1A  C176  F014         	movff	powf@s_h+2,___flmul@b+2
 11606   001E1E  C177  F015         	movff	powf@s_h+3,___flmul@b+3
 11607   001E22  EC44  F02A         	call	___flmul	;wreg free
 11608   001E26  C012  F048         	movff	?___flmul,___flsub@a
 11609   001E2A  C013  F049         	movff	?___flmul+1,___flsub@a+1
 11610   001E2E  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 11611   001E32  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 11612   001E36  C19C  F044         	movff	_powf$3190,___flsub@b
 11613   001E3A  C19D  F045         	movff	_powf$3190+1,___flsub@b+1
 11614   001E3E  C19E  F046         	movff	_powf$3190+2,___flsub@b+2
 11615   001E42  C19F  F047         	movff	_powf$3190+3,___flsub@b+3
 11616   001E46  EC5C  F03F         	call	___flsub	;wreg free
 11617   001E4A  C044  F158         	movff	?___flsub,_powf$3188
 11618   001E4E  C045  F159         	movff	?___flsub+1,_powf$3188+1
 11619   001E52  C046  F15A         	movff	?___flsub+2,_powf$3188+2
 11620   001E56  C047  F15B         	movff	?___flsub+3,_powf$3188+3
 11621   001E5A  C158  F012         	movff	_powf$3188,___flmul@b
 11622   001E5E  C159  F013         	movff	_powf$3188+1,___flmul@b+1
 11623   001E62  C15A  F014         	movff	_powf$3188+2,___flmul@b+2
 11624   001E66  C15B  F015         	movff	_powf$3188+3,___flmul@b+3
 11625   001E6A  C180  F016         	movff	powf@v,___flmul@a
 11626   001E6E  C181  F017         	movff	powf@v+1,___flmul@a+1
 11627   001E72  C182  F018         	movff	powf@v+2,___flmul@a+2
 11628   001E76  C183  F019         	movff	powf@v+3,___flmul@a+3
 11629   001E7A  EC44  F02A         	call	___flmul	;wreg free
 11630   001E7E  C012  F130         	movff	?___flmul,powf@s_l
 11631   001E82  C013  F131         	movff	?___flmul+1,powf@s_l+1
 11632   001E86  C014  F132         	movff	?___flmul+2,powf@s_l+2
 11633   001E8A  C015  F133         	movff	?___flmul+3,powf@s_l+3
 11634   001E8E  C160  F012         	movff	powf@s,___flmul@b
 11635   001E92  C161  F013         	movff	powf@s+1,___flmul@b+1
 11636   001E96  C162  F014         	movff	powf@s+2,___flmul@b+2
 11637   001E9A  C163  F015         	movff	powf@s+3,___flmul@b+3
 11638   001E9E  C160  F016         	movff	powf@s,___flmul@a
 11639   001EA2  C161  F017         	movff	powf@s+1,___flmul@a+1
 11640   001EA6  C162  F018         	movff	powf@s+2,___flmul@a+2
 11641   001EAA  C163  F019         	movff	powf@s+3,___flmul@a+3
 11642   001EAE  EC44  F02A         	call	___flmul	;wreg free
 11643   001EB2  C012  F190         	movff	?___flmul,powf@s2
 11644   001EB6  C013  F191         	movff	?___flmul+1,powf@s2+1
 11645   001EBA  C014  F192         	movff	?___flmul+2,powf@s2+2
 11646   001EBE  C015  F193         	movff	?___flmul+3,powf@s2+3
 11647   001EC2  0E55               	movlw	85
 11648   001EC4  6E06               	movwf	___fladd@a^0,c
 11649   001EC6  0E32               	movlw	50
 11650   001EC8  6E07               	movwf	(___fladd@a+1)^0,c
 11651   001ECA  0E6C               	movlw	108
 11652   001ECC  6E08               	movwf	(___fladd@a+2)^0,c
 11653   001ECE  0E3E               	movlw	62
 11654   001ED0  6E09               	movwf	(___fladd@a+3)^0,c
 11655   001ED2  0E42               	movlw	66
 11656   001ED4  6E16               	movwf	___flmul@a^0,c
 11657   001ED6  0EF1               	movlw	241
 11658   001ED8  6E17               	movwf	(___flmul@a+1)^0,c
 11659   001EDA  0E53               	movlw	83
 11660   001EDC  6E18               	movwf	(___flmul@a+2)^0,c
 11661   001EDE  0E3E               	movlw	62
 11662   001EE0  6E19               	movwf	(___flmul@a+3)^0,c
 11663   001EE2  C190  F012         	movff	powf@s2,___flmul@b
 11664   001EE6  C191  F013         	movff	powf@s2+1,___flmul@b+1
 11665   001EEA  C192  F014         	movff	powf@s2+2,___flmul@b+2
 11666   001EEE  C193  F015         	movff	powf@s2+3,___flmul@b+3
 11667   001EF2  EC44  F02A         	call	___flmul	;wreg free
 11668   001EF6  C012  F002         	movff	?___flmul,___fladd@b
 11669   001EFA  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11670   001EFE  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11671   001F02  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11672   001F06  ECE4  F027         	call	___fladd	;wreg free
 11673   001F0A  C002  F148         	movff	?___fladd,_powf$3187
 11674   001F0E  C003  F149         	movff	?___fladd+1,_powf$3187+1
 11675   001F12  C004  F14A         	movff	?___fladd+2,_powf$3187+2
 11676   001F16  C005  F14B         	movff	?___fladd+3,_powf$3187+3
 11677   001F1A  0E05               	movlw	5
 11678   001F1C  6E06               	movwf	___fladd@a^0,c
 11679   001F1E  0EA3               	movlw	163
 11680   001F20  6E07               	movwf	(___fladd@a+1)^0,c
 11681   001F22  0E8B               	movlw	139
 11682   001F24  6E08               	movwf	(___fladd@a+2)^0,c
 11683   001F26  0E3E               	movlw	62
 11684   001F28  6E09               	movwf	(___fladd@a+3)^0,c
 11685   001F2A  C190  F016         	movff	powf@s2,___flmul@a
 11686   001F2E  C191  F017         	movff	powf@s2+1,___flmul@a+1
 11687   001F32  C192  F018         	movff	powf@s2+2,___flmul@a+2
 11688   001F36  C193  F019         	movff	powf@s2+3,___flmul@a+3
 11689   001F3A  C148  F012         	movff	_powf$3187,___flmul@b
 11690   001F3E  C149  F013         	movff	_powf$3187+1,___flmul@b+1
 11691   001F42  C14A  F014         	movff	_powf$3187+2,___flmul@b+2
 11692   001F46  C14B  F015         	movff	_powf$3187+3,___flmul@b+3
 11693   001F4A  EC44  F02A         	call	___flmul	;wreg free
 11694   001F4E  C012  F002         	movff	?___flmul,___fladd@b
 11695   001F52  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11696   001F56  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11697   001F5A  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11698   001F5E  ECE4  F027         	call	___fladd	;wreg free
 11699   001F62  C002  F158         	movff	?___fladd,_powf$3188
 11700   001F66  C003  F159         	movff	?___fladd+1,_powf$3188+1
 11701   001F6A  C004  F15A         	movff	?___fladd+2,_powf$3188+2
 11702   001F6E  C005  F15B         	movff	?___fladd+3,_powf$3188+3
 11703   001F72  0EAB               	movlw	171
 11704   001F74  6E06               	movwf	___fladd@a^0,c
 11705   001F76  0EAA               	movlw	170
 11706   001F78  6E07               	movwf	(___fladd@a+1)^0,c
 11707   001F7A  0EAA               	movlw	170
 11708   001F7C  6E08               	movwf	(___fladd@a+2)^0,c
 11709   001F7E  0E3E               	movlw	62
 11710   001F80  6E09               	movwf	(___fladd@a+3)^0,c
 11711   001F82  C190  F016         	movff	powf@s2,___flmul@a
 11712   001F86  C191  F017         	movff	powf@s2+1,___flmul@a+1
 11713   001F8A  C192  F018         	movff	powf@s2+2,___flmul@a+2
 11714   001F8E  C193  F019         	movff	powf@s2+3,___flmul@a+3
 11715   001F92  C158  F012         	movff	_powf$3188,___flmul@b
 11716   001F96  C159  F013         	movff	_powf$3188+1,___flmul@b+1
 11717   001F9A  C15A  F014         	movff	_powf$3188+2,___flmul@b+2
 11718   001F9E  C15B  F015         	movff	_powf$3188+3,___flmul@b+3
 11719   001FA2  EC44  F02A         	call	___flmul	;wreg free
 11720   001FA6  C012  F002         	movff	?___flmul,___fladd@b
 11721   001FAA  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11722   001FAE  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11723   001FB2  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11724   001FB6  ECE4  F027         	call	___fladd	;wreg free
 11725   001FBA  C002  F14C         	movff	?___fladd,_powf$3189
 11726   001FBE  C003  F14D         	movff	?___fladd+1,_powf$3189+1
 11727   001FC2  C004  F14E         	movff	?___fladd+2,_powf$3189+2
 11728   001FC6  C005  F14F         	movff	?___fladd+3,_powf$3189+3
 11729   001FCA  0EB7               	movlw	183
 11730   001FCC  6E06               	movwf	___fladd@a^0,c
 11731   001FCE  0E6D               	movlw	109
 11732   001FD0  6E07               	movwf	(___fladd@a+1)^0,c
 11733   001FD2  0EDB               	movlw	219
 11734   001FD4  6E08               	movwf	(___fladd@a+2)^0,c
 11735   001FD6  0E3E               	movlw	62
 11736   001FD8  6E09               	movwf	(___fladd@a+3)^0,c
 11737   001FDA  C190  F016         	movff	powf@s2,___flmul@a
 11738   001FDE  C191  F017         	movff	powf@s2+1,___flmul@a+1
 11739   001FE2  C192  F018         	movff	powf@s2+2,___flmul@a+2
 11740   001FE6  C193  F019         	movff	powf@s2+3,___flmul@a+3
 11741   001FEA  C14C  F012         	movff	_powf$3189,___flmul@b
 11742   001FEE  C14D  F013         	movff	_powf$3189+1,___flmul@b+1
 11743   001FF2  C14E  F014         	movff	_powf$3189+2,___flmul@b+2
 11744   001FF6  C14F  F015         	movff	_powf$3189+3,___flmul@b+3
 11745   001FFA  EC44  F02A         	call	___flmul	;wreg free
 11746   001FFE  C012  F002         	movff	?___flmul,___fladd@b
 11747   002002  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11748   002006  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11749   00200A  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11750   00200E  ECE4  F027         	call	___fladd	;wreg free
 11751   002012  C002  F138         	movff	?___fladd,_powf$3191
 11752   002016  C003  F139         	movff	?___fladd+1,_powf$3191+1
 11753   00201A  C004  F13A         	movff	?___fladd+2,_powf$3191+2
 11754   00201E  C005  F13B         	movff	?___fladd+3,_powf$3191+3
 11755   002022  0E9A               	movlw	154
 11756   002024  6E06               	movwf	___fladd@a^0,c
 11757   002026  0E99               	movlw	153
 11758   002028  6E07               	movwf	(___fladd@a+1)^0,c
 11759   00202A  0E19               	movlw	25
 11760   00202C  6E08               	movwf	(___fladd@a+2)^0,c
 11761   00202E  0E3F               	movlw	63
 11762   002030  6E09               	movwf	(___fladd@a+3)^0,c
 11763   002032  C190  F016         	movff	powf@s2,___flmul@a
 11764   002036  C191  F017         	movff	powf@s2+1,___flmul@a+1
 11765   00203A  C192  F018         	movff	powf@s2+2,___flmul@a+2
 11766   00203E  C193  F019         	movff	powf@s2+3,___flmul@a+3
 11767   002042  C138  F012         	movff	_powf$3191,___flmul@b
 11768   002046  C139  F013         	movff	_powf$3191+1,___flmul@b+1
 11769   00204A  C13A  F014         	movff	_powf$3191+2,___flmul@b+2
 11770   00204E  C13B  F015         	movff	_powf$3191+3,___flmul@b+3
 11771   002052  EC44  F02A         	call	___flmul	;wreg free
 11772   002056  C012  F002         	movff	?___flmul,___fladd@b
 11773   00205A  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11774   00205E  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11775   002062  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11776   002066  ECE4  F027         	call	___fladd	;wreg free
 11777   00206A  C002  F100         	movff	?___fladd,_powf$3192
 11778   00206E  C003  F101         	movff	?___fladd+1,_powf$3192+1
 11779   002072  C004  F102         	movff	?___fladd+2,_powf$3192+2
 11780   002076  C005  F103         	movff	?___fladd+3,_powf$3192+3
 11781   00207A  C190  F016         	movff	powf@s2,___flmul@a
 11782   00207E  C191  F017         	movff	powf@s2+1,___flmul@a+1
 11783   002082  C192  F018         	movff	powf@s2+2,___flmul@a+2
 11784   002086  C193  F019         	movff	powf@s2+3,___flmul@a+3
 11785   00208A  C190  F012         	movff	powf@s2,___flmul@b
 11786   00208E  C191  F013         	movff	powf@s2+1,___flmul@b+1
 11787   002092  C192  F014         	movff	powf@s2+2,___flmul@b+2
 11788   002096  C193  F015         	movff	powf@s2+3,___flmul@b+3
 11789   00209A  EC44  F02A         	call	___flmul	;wreg free
 11790   00209E  C012  F104         	movff	?___flmul,_powf$3193
 11791   0020A2  C013  F105         	movff	?___flmul+1,_powf$3193+1
 11792   0020A6  C014  F106         	movff	?___flmul+2,_powf$3193+2
 11793   0020AA  C015  F107         	movff	?___flmul+3,_powf$3193+3
 11794   0020AE  C100  F012         	movff	_powf$3192,___flmul@b
 11795   0020B2  C101  F013         	movff	_powf$3192+1,___flmul@b+1
 11796   0020B6  C102  F014         	movff	_powf$3192+2,___flmul@b+2
 11797   0020BA  C103  F015         	movff	_powf$3192+3,___flmul@b+3
 11798   0020BE  C104  F016         	movff	_powf$3193,___flmul@a
 11799   0020C2  C105  F017         	movff	_powf$3193+1,___flmul@a+1
 11800   0020C6  C106  F018         	movff	_powf$3193+2,___flmul@a+2
 11801   0020CA  C107  F019         	movff	_powf$3193+3,___flmul@a+3
 11802   0020CE  EC44  F02A         	call	___flmul	;wreg free
 11803   0020D2  C012  F150         	movff	?___flmul,powf@r
 11804   0020D6  C013  F151         	movff	?___flmul+1,powf@r+1
 11805   0020DA  C014  F152         	movff	?___flmul+2,powf@r+2
 11806   0020DE  C015  F153         	movff	?___flmul+3,powf@r+3
 11807   0020E2  C130  F016         	movff	powf@s_l,___flmul@a
 11808   0020E6  C131  F017         	movff	powf@s_l+1,___flmul@a+1
 11809   0020EA  C132  F018         	movff	powf@s_l+2,___flmul@a+2
 11810   0020EE  C133  F019         	movff	powf@s_l+3,___flmul@a+3
 11811   0020F2  C160  F006         	movff	powf@s,___fladd@a
 11812   0020F6  C161  F007         	movff	powf@s+1,___fladd@a+1
 11813   0020FA  C162  F008         	movff	powf@s+2,___fladd@a+2
 11814   0020FE  C163  F009         	movff	powf@s+3,___fladd@a+3
 11815   002102  C174  F002         	movff	powf@s_h,___fladd@b
 11816   002106  C175  F003         	movff	powf@s_h+1,___fladd@b+1
 11817   00210A  C176  F004         	movff	powf@s_h+2,___fladd@b+2
 11818   00210E  C177  F005         	movff	powf@s_h+3,___fladd@b+3
 11819   002112  ECE4  F027         	call	___fladd	;wreg free
 11820   002116  C002  F012         	movff	?___fladd,___flmul@b
 11821   00211A  C003  F013         	movff	?___fladd+1,___flmul@b+1
 11822   00211E  C004  F014         	movff	?___fladd+2,___flmul@b+2
 11823   002122  C005  F015         	movff	?___fladd+3,___flmul@b+3
 11824   002126  EC44  F02A         	call	___flmul	;wreg free
 11825   00212A  C012  F15C         	movff	?___flmul,_powf$3194
 11826   00212E  C013  F15D         	movff	?___flmul+1,_powf$3194+1
 11827   002132  C014  F15E         	movff	?___flmul+2,_powf$3194+2
 11828   002136  C015  F15F         	movff	?___flmul+3,_powf$3194+3
 11829   00213A  C150  F002         	movff	powf@r,___fladd@b
 11830   00213E  C151  F003         	movff	powf@r+1,___fladd@b+1
 11831   002142  C152  F004         	movff	powf@r+2,___fladd@b+2
 11832   002146  C153  F005         	movff	powf@r+3,___fladd@b+3
 11833   00214A  C15C  F006         	movff	_powf$3194,___fladd@a
 11834   00214E  C15D  F007         	movff	_powf$3194+1,___fladd@a+1
 11835   002152  C15E  F008         	movff	_powf$3194+2,___fladd@a+2
 11836   002156  C15F  F009         	movff	_powf$3194+3,___fladd@a+3
 11837   00215A  ECE4  F027         	call	___fladd	;wreg free
 11838   00215E  C002  F150         	movff	?___fladd,powf@r
 11839   002162  C003  F151         	movff	?___fladd+1,powf@r+1
 11840   002166  C004  F152         	movff	?___fladd+2,powf@r+2
 11841   00216A  C005  F153         	movff	?___fladd+3,powf@r+3
 11842   00216E  C174  F012         	movff	powf@s_h,___flmul@b
 11843   002172  C175  F013         	movff	powf@s_h+1,___flmul@b+1
 11844   002176  C176  F014         	movff	powf@s_h+2,___flmul@b+2
 11845   00217A  C177  F015         	movff	powf@s_h+3,___flmul@b+3
 11846   00217E  C174  F016         	movff	powf@s_h,___flmul@a
 11847   002182  C175  F017         	movff	powf@s_h+1,___flmul@a+1
 11848   002186  C176  F018         	movff	powf@s_h+2,___flmul@a+2
 11849   00218A  C177  F019         	movff	powf@s_h+3,___flmul@a+3
 11850   00218E  EC44  F02A         	call	___flmul	;wreg free
 11851   002192  C012  F190         	movff	?___flmul,powf@s2
 11852   002196  C013  F191         	movff	?___flmul+1,powf@s2+1
 11853   00219A  C014  F192         	movff	?___flmul+2,powf@s2+2
 11854   00219E  C015  F193         	movff	?___flmul+3,powf@s2+3
 11855   0021A2  0E00               	movlw	0
 11856   0021A4  6E06               	movwf	___fladd@a^0,c
 11857   0021A6  0E00               	movlw	0
 11858   0021A8  6E07               	movwf	(___fladd@a+1)^0,c
 11859   0021AA  0E40               	movlw	64
 11860   0021AC  6E08               	movwf	(___fladd@a+2)^0,c
 11861   0021AE  0E40               	movlw	64
 11862   0021B0  6E09               	movwf	(___fladd@a+3)^0,c
 11863   0021B2  C190  F002         	movff	powf@s2,___fladd@b
 11864   0021B6  C191  F003         	movff	powf@s2+1,___fladd@b+1
 11865   0021BA  C192  F004         	movff	powf@s2+2,___fladd@b+2
 11866   0021BE  C193  F005         	movff	powf@s2+3,___fladd@b+3
 11867   0021C2  ECE4  F027         	call	___fladd	;wreg free
 11868   0021C6  C002  F15C         	movff	?___fladd,_powf$3194
 11869   0021CA  C003  F15D         	movff	?___fladd+1,_powf$3194+1
 11870   0021CE  C004  F15E         	movff	?___fladd+2,_powf$3194+2
 11871   0021D2  C005  F15F         	movff	?___fladd+3,_powf$3194+3
 11872   0021D6  C15C  F002         	movff	_powf$3194,___fladd@b
 11873   0021DA  C15D  F003         	movff	_powf$3194+1,___fladd@b+1
 11874   0021DE  C15E  F004         	movff	_powf$3194+2,___fladd@b+2
 11875   0021E2  C15F  F005         	movff	_powf$3194+3,___fladd@b+3
 11876   0021E6  C150  F006         	movff	powf@r,___fladd@a
 11877   0021EA  C151  F007         	movff	powf@r+1,___fladd@a+1
 11878   0021EE  C152  F008         	movff	powf@r+2,___fladd@a+2
 11879   0021F2  C153  F009         	movff	powf@r+3,___fladd@a+3
 11880   0021F6  ECE4  F027         	call	___fladd	;wreg free
 11881   0021FA  C002  F170         	movff	?___fladd,powf@t_h
 11882   0021FE  C003  F171         	movff	?___fladd+1,powf@t_h+1
 11883   002202  C004  F172         	movff	?___fladd+2,powf@t_h+2
 11884   002206  C005  F173         	movff	?___fladd+3,powf@t_h+3
 11885   00220A  C170  F198         	movff	powf@t_h,powf@is
 11886   00220E  C171  F199         	movff	powf@t_h+1,powf@is+1
 11887   002212  C172  F19A         	movff	powf@t_h+2,powf@is+2
 11888   002216  C173  F19B         	movff	powf@t_h+3,powf@is+3
 11889   00221A  0E00               	movlw	0
 11890   00221C  0101               	movlb	1	; () banked
 11891   00221E  1598               	andwf	powf@is& (0+255),w,b
 11892   002220  6F70               	movwf	powf@t_h& (0+255),b
 11893   002222  0EF0               	movlw	240
 11894   002224  1599               	andwf	(powf@is+1)& (0+255),w,b
 11895   002226  6F71               	movwf	(powf@t_h+1)& (0+255),b
 11896   002228  0EFF               	movlw	255
 11897   00222A  159A               	andwf	(powf@is+2)& (0+255),w,b
 11898   00222C  6F72               	movwf	(powf@t_h+2)& (0+255),b
 11899   00222E  0EFF               	movlw	255
 11900   002230  159B               	andwf	(powf@is+3)& (0+255),w,b
 11901   002232  6F73               	movwf	(powf@t_h+3)& (0+255),b
 11902   002234                     
 11903                           ; BSR set to: 1
 11904   002234  0E00               	movlw	0
 11905   002236  6E06               	movwf	___fladd@a^0,c
 11906   002238  0E00               	movlw	0
 11907   00223A  6E07               	movwf	(___fladd@a+1)^0,c
 11908   00223C  0E40               	movlw	64
 11909   00223E  6E08               	movwf	(___fladd@a+2)^0,c
 11910   002240  0EC0               	movlw	192
 11911   002242  6E09               	movwf	(___fladd@a+3)^0,c
 11912   002244  C170  F002         	movff	powf@t_h,___fladd@b
 11913   002248  C171  F003         	movff	powf@t_h+1,___fladd@b+1
 11914   00224C  C172  F004         	movff	powf@t_h+2,___fladd@b+2
 11915   002250  C173  F005         	movff	powf@t_h+3,___fladd@b+3
 11916   002254  ECE4  F027         	call	___fladd	;wreg free
 11917   002258  C002  F13C         	movff	?___fladd,_powf$3195
 11918   00225C  C003  F13D         	movff	?___fladd+1,_powf$3195+1
 11919   002260  C004  F13E         	movff	?___fladd+2,_powf$3195+2
 11920   002264  C005  F13F         	movff	?___fladd+3,_powf$3195+3
 11921   002268  C190  F048         	movff	powf@s2,___flsub@a
 11922   00226C  C191  F049         	movff	powf@s2+1,___flsub@a+1
 11923   002270  C192  F04A         	movff	powf@s2+2,___flsub@a+2
 11924   002274  C193  F04B         	movff	powf@s2+3,___flsub@a+3
 11925   002278  C13C  F044         	movff	_powf$3195,___flsub@b
 11926   00227C  C13D  F045         	movff	_powf$3195+1,___flsub@b+1
 11927   002280  C13E  F046         	movff	_powf$3195+2,___flsub@b+2
 11928   002284  C13F  F047         	movff	_powf$3195+3,___flsub@b+3
 11929   002288  EC5C  F03F         	call	___flsub	;wreg free
 11930   00228C  C044  F140         	movff	?___flsub,_powf$3196
 11931   002290  C045  F141         	movff	?___flsub+1,_powf$3196+1
 11932   002294  C046  F142         	movff	?___flsub+2,_powf$3196+2
 11933   002298  C047  F143         	movff	?___flsub+3,_powf$3196+3
 11934   00229C  C150  F044         	movff	powf@r,___flsub@b
 11935   0022A0  C151  F045         	movff	powf@r+1,___flsub@b+1
 11936   0022A4  C152  F046         	movff	powf@r+2,___flsub@b+2
 11937   0022A8  C153  F047         	movff	powf@r+3,___flsub@b+3
 11938   0022AC  C140  F048         	movff	_powf$3196,___flsub@a
 11939   0022B0  C141  F049         	movff	_powf$3196+1,___flsub@a+1
 11940   0022B4  C142  F04A         	movff	_powf$3196+2,___flsub@a+2
 11941   0022B8  C143  F04B         	movff	_powf$3196+3,___flsub@a+3
 11942   0022BC  EC5C  F03F         	call	___flsub	;wreg free
 11943   0022C0  C044  F134         	movff	?___flsub,powf@t_l
 11944   0022C4  C045  F135         	movff	?___flsub+1,powf@t_l+1
 11945   0022C8  C046  F136         	movff	?___flsub+2,powf@t_l+2
 11946   0022CC  C047  F137         	movff	?___flsub+3,powf@t_l+3
 11947   0022D0  C174  F012         	movff	powf@s_h,___flmul@b
 11948   0022D4  C175  F013         	movff	powf@s_h+1,___flmul@b+1
 11949   0022D8  C176  F014         	movff	powf@s_h+2,___flmul@b+2
 11950   0022DC  C177  F015         	movff	powf@s_h+3,___flmul@b+3
 11951   0022E0  C170  F016         	movff	powf@t_h,___flmul@a
 11952   0022E4  C171  F017         	movff	powf@t_h+1,___flmul@a+1
 11953   0022E8  C172  F018         	movff	powf@t_h+2,___flmul@a+2
 11954   0022EC  C173  F019         	movff	powf@t_h+3,___flmul@a+3
 11955   0022F0  EC44  F02A         	call	___flmul	;wreg free
 11956   0022F4  C012  F17C         	movff	?___flmul,powf@u
 11957   0022F8  C013  F17D         	movff	?___flmul+1,powf@u+1
 11958   0022FC  C014  F17E         	movff	?___flmul+2,powf@u+2
 11959   002300  C015  F17F         	movff	?___flmul+3,powf@u+3
 11960   002304  C130  F016         	movff	powf@s_l,___flmul@a
 11961   002308  C131  F017         	movff	powf@s_l+1,___flmul@a+1
 11962   00230C  C132  F018         	movff	powf@s_l+2,___flmul@a+2
 11963   002310  C133  F019         	movff	powf@s_l+3,___flmul@a+3
 11964   002314  C170  F012         	movff	powf@t_h,___flmul@b
 11965   002318  C171  F013         	movff	powf@t_h+1,___flmul@b+1
 11966   00231C  C172  F014         	movff	powf@t_h+2,___flmul@b+2
 11967   002320  C173  F015         	movff	powf@t_h+3,___flmul@b+3
 11968   002324  EC44  F02A         	call	___flmul	;wreg free
 11969   002328  C012  F002         	movff	?___flmul,___fladd@b
 11970   00232C  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11971   002330  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11972   002334  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11973   002338  C160  F016         	movff	powf@s,___flmul@a
 11974   00233C  C161  F017         	movff	powf@s+1,___flmul@a+1
 11975   002340  C162  F018         	movff	powf@s+2,___flmul@a+2
 11976   002344  C163  F019         	movff	powf@s+3,___flmul@a+3
 11977   002348  C134  F012         	movff	powf@t_l,___flmul@b
 11978   00234C  C135  F013         	movff	powf@t_l+1,___flmul@b+1
 11979   002350  C136  F014         	movff	powf@t_l+2,___flmul@b+2
 11980   002354  C137  F015         	movff	powf@t_l+3,___flmul@b+3
 11981   002358  EC44  F02A         	call	___flmul	;wreg free
 11982   00235C  C012  F006         	movff	?___flmul,___fladd@a
 11983   002360  C013  F007         	movff	?___flmul+1,___fladd@a+1
 11984   002364  C014  F008         	movff	?___flmul+2,___fladd@a+2
 11985   002368  C015  F009         	movff	?___flmul+3,___fladd@a+3
 11986   00236C  ECE4  F027         	call	___fladd	;wreg free
 11987   002370  C002  F180         	movff	?___fladd,powf@v
 11988   002374  C003  F181         	movff	?___fladd+1,powf@v+1
 11989   002378  C004  F182         	movff	?___fladd+2,powf@v+2
 11990   00237C  C005  F183         	movff	?___fladd+3,powf@v+3
 11991   002380  C17C  F002         	movff	powf@u,___fladd@b
 11992   002384  C17D  F003         	movff	powf@u+1,___fladd@b+1
 11993   002388  C17E  F004         	movff	powf@u+2,___fladd@b+2
 11994   00238C  C17F  F005         	movff	powf@u+3,___fladd@b+3
 11995   002390  C180  F006         	movff	powf@v,___fladd@a
 11996   002394  C181  F007         	movff	powf@v+1,___fladd@a+1
 11997   002398  C182  F008         	movff	powf@v+2,___fladd@a+2
 11998   00239C  C183  F009         	movff	powf@v+3,___fladd@a+3
 11999   0023A0  ECE4  F027         	call	___fladd	;wreg free
 12000   0023A4  C002  F1A0         	movff	?___fladd,powf@p_h
 12001   0023A8  C003  F1A1         	movff	?___fladd+1,powf@p_h+1
 12002   0023AC  C004  F1A2         	movff	?___fladd+2,powf@p_h+2
 12003   0023B0  C005  F1A3         	movff	?___fladd+3,powf@p_h+3
 12004   0023B4  C1A0  F198         	movff	powf@p_h,powf@is
 12005   0023B8  C1A1  F199         	movff	powf@p_h+1,powf@is+1
 12006   0023BC  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
 12007   0023C0  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
 12008   0023C4  0E00               	movlw	0
 12009   0023C6  0101               	movlb	1	; () banked
 12010   0023C8  1598               	andwf	powf@is& (0+255),w,b
 12011   0023CA  6FA0               	movwf	powf@p_h& (0+255),b
 12012   0023CC  0EF0               	movlw	240
 12013   0023CE  1599               	andwf	(powf@is+1)& (0+255),w,b
 12014   0023D0  6FA1               	movwf	(powf@p_h+1)& (0+255),b
 12015   0023D2  0EFF               	movlw	255
 12016   0023D4  159A               	andwf	(powf@is+2)& (0+255),w,b
 12017   0023D6  6FA2               	movwf	(powf@p_h+2)& (0+255),b
 12018   0023D8  0EFF               	movlw	255
 12019   0023DA  159B               	andwf	(powf@is+3)& (0+255),w,b
 12020   0023DC  6FA3               	movwf	(powf@p_h+3)& (0+255),b
 12021   0023DE                     
 12022                           ; BSR set to: 1
 12023   0023DE  C17C  F048         	movff	powf@u,___flsub@a
 12024   0023E2  C17D  F049         	movff	powf@u+1,___flsub@a+1
 12025   0023E6  C17E  F04A         	movff	powf@u+2,___flsub@a+2
 12026   0023EA  C17F  F04B         	movff	powf@u+3,___flsub@a+3
 12027   0023EE  C1A0  F044         	movff	powf@p_h,___flsub@b
 12028   0023F2  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
 12029   0023F6  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
 12030   0023FA  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
 12031   0023FE  EC5C  F03F         	call	___flsub	;wreg free
 12032   002402  C044  F19C         	movff	?___flsub,_powf$3190
 12033   002406  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 12034   00240A  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 12035   00240E  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 12036   002412  C180  F044         	movff	powf@v,___flsub@b
 12037   002416  C181  F045         	movff	powf@v+1,___flsub@b+1
 12038   00241A  C182  F046         	movff	powf@v+2,___flsub@b+2
 12039   00241E  C183  F047         	movff	powf@v+3,___flsub@b+3
 12040   002422  C19C  F048         	movff	_powf$3190,___flsub@a
 12041   002426  C19D  F049         	movff	_powf$3190+1,___flsub@a+1
 12042   00242A  C19E  F04A         	movff	_powf$3190+2,___flsub@a+2
 12043   00242E  C19F  F04B         	movff	_powf$3190+3,___flsub@a+3
 12044   002432  EC5C  F03F         	call	___flsub	;wreg free
 12045   002436  C044  F16C         	movff	?___flsub,powf@p_l
 12046   00243A  C045  F16D         	movff	?___flsub+1,powf@p_l+1
 12047   00243E  C046  F16E         	movff	?___flsub+2,powf@p_l+2
 12048   002442  C047  F16F         	movff	?___flsub+3,powf@p_l+3
 12049   002446  C1A0  F012         	movff	powf@p_h,___flmul@b
 12050   00244A  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
 12051   00244E  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
 12052   002452  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
 12053   002456  0E00               	movlw	0
 12054   002458  6E16               	movwf	___flmul@a^0,c
 12055   00245A  0E40               	movlw	64
 12056   00245C  6E17               	movwf	(___flmul@a+1)^0,c
 12057   00245E  0E76               	movlw	118
 12058   002460  6E18               	movwf	(___flmul@a+2)^0,c
 12059   002462  0E3F               	movlw	63
 12060   002464  6E19               	movwf	(___flmul@a+3)^0,c
 12061   002466  EC44  F02A         	call	___flmul	;wreg free
 12062   00246A  C012  F120         	movff	?___flmul,powf@z_h
 12063   00246E  C013  F121         	movff	?___flmul+1,powf@z_h+1
 12064   002472  C014  F122         	movff	?___flmul+2,powf@z_h+2
 12065   002476  C015  F123         	movff	?___flmul+3,powf@z_h+3
 12066   00247A  0E4F               	movlw	79
 12067   00247C  6E16               	movwf	___flmul@a^0,c
 12068   00247E  0E38               	movlw	56
 12069   002480  6E17               	movwf	(___flmul@a+1)^0,c
 12070   002482  0E76               	movlw	118
 12071   002484  6E18               	movwf	(___flmul@a+2)^0,c
 12072   002486  0E3F               	movlw	63
 12073   002488  6E19               	movwf	(___flmul@a+3)^0,c
 12074   00248A  C16C  F012         	movff	powf@p_l,___flmul@b
 12075   00248E  C16D  F013         	movff	powf@p_l+1,___flmul@b+1
 12076   002492  C16E  F014         	movff	powf@p_l+2,___flmul@b+2
 12077   002496  C16F  F015         	movff	powf@p_l+3,___flmul@b+3
 12078   00249A  EC44  F02A         	call	___flmul	;wreg free
 12079   00249E  C012  F006         	movff	?___flmul,___fladd@a
 12080   0024A2  C013  F007         	movff	?___flmul+1,___fladd@a+1
 12081   0024A6  C014  F008         	movff	?___flmul+2,___fladd@a+2
 12082   0024AA  C015  F009         	movff	?___flmul+3,___fladd@a+3
 12083   0024AE  0EC6               	movlw	198
 12084   0024B0  6E16               	movwf	___flmul@a^0,c
 12085   0024B2  0E23               	movlw	35
 12086   0024B4  6E17               	movwf	(___flmul@a+1)^0,c
 12087   0024B6  0EF6               	movlw	246
 12088   0024B8  6E18               	movwf	(___flmul@a+2)^0,c
 12089   0024BA  0EB8               	movlw	184
 12090   0024BC  6E19               	movwf	(___flmul@a+3)^0,c
 12091   0024BE  C1A0  F012         	movff	powf@p_h,___flmul@b
 12092   0024C2  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
 12093   0024C6  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
 12094   0024CA  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
 12095   0024CE  EC44  F02A         	call	___flmul	;wreg free
 12096   0024D2  C012  F002         	movff	?___flmul,___fladd@b
 12097   0024D6  C013  F003         	movff	?___flmul+1,___fladd@b+1
 12098   0024DA  C014  F004         	movff	?___flmul+2,___fladd@b+2
 12099   0024DE  C015  F005         	movff	?___flmul+3,___fladd@b+3
 12100   0024E2  ECE4  F027         	call	___fladd	;wreg free
 12101   0024E6  C002  F15C         	movff	?___fladd,_powf$3194
 12102   0024EA  C003  F15D         	movff	?___fladd+1,_powf$3194+1
 12103   0024EE  C004  F15E         	movff	?___fladd+2,_powf$3194+2
 12104   0024F2  C005  F15F         	movff	?___fladd+3,_powf$3194+3
 12105   0024F6  C15C  F002         	movff	_powf$3194,___fladd@b
 12106   0024FA  C15D  F003         	movff	_powf$3194+1,___fladd@b+1
 12107   0024FE  C15E  F004         	movff	_powf$3194+2,___fladd@b+2
 12108   002502  C15F  F005         	movff	_powf$3194+3,___fladd@b+3
 12109   002506  0101               	movlb	1	; () banked
 12110   002508  51A4               	movf	powf@k& (0+255),w,b
 12111   00250A  0D04               	mullw	4
 12112   00250C  50F3               	movf	243,w,c
 12113   00250E  0F01               	addlw	low _dp_l
 12114   002510  0100               	movlb	0	; () banked
 12115   002512  6F68               	movwf	??_powf& (0+255),b
 12116   002514  C068  FFF6         	movff	??_powf,tblptrl
 12117   002518                     	if	1	;There is more than 1 active tblptr byte
 12118   002518  0E0E               	movlw	high __smallconst
 12119   00251A  6EF7               	movwf	tblptrh,c
 12120   00251C                     	endif
 12121   00251C                     	if	0	;tblptru may be non-zero
 12122   00251C                     	endif
 12123   00251C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12124   00251C  0E00               	movlw	low (__smallconst shr (0+16))
 12125   00251E  6EF8               	movwf	tblptru,c
 12126   002520                     	endif
 12127   002520  0009               	tblrd		*+
 12128   002522  CFF5 F006          	movff	tablat,___fladd@a
 12129   002526  0009               	tblrd		*+
 12130   002528  CFF5 F007          	movff	tablat,___fladd@a+1
 12131   00252C  0009               	tblrd		*+
 12132   00252E  CFF5 F008          	movff	tablat,___fladd@a+2
 12133   002532  000A               	tblrd		*-
 12134   002534  CFF5 F009          	movff	tablat,___fladd@a+3
 12135   002538  ECE4  F027         	call	___fladd	;wreg free
 12136   00253C  C002  F124         	movff	?___fladd,powf@z_l
 12137   002540  C003  F125         	movff	?___fladd+1,powf@z_l+1
 12138   002544  C004  F126         	movff	?___fladd+2,powf@z_l+2
 12139   002548  C005  F127         	movff	?___fladd+3,powf@z_l+3
 12140   00254C  C188  F002         	movff	powf@n,___xxtofl@val
 12141   002550  C189  F003         	movff	powf@n+1,___xxtofl@val+1
 12142   002554  C18A  F004         	movff	powf@n+2,___xxtofl@val+2
 12143   002558  C18B  F005         	movff	powf@n+3,___xxtofl@val+3
 12144   00255C  0E01               	movlw	1
 12145   00255E  ECF0  F034         	call	___xxtofl
 12146   002562  C002  F1B0         	movff	?___xxtofl,powf@t
 12147   002566  C003  F1B1         	movff	?___xxtofl+1,powf@t+1
 12148   00256A  C004  F1B2         	movff	?___xxtofl+2,powf@t+2
 12149   00256E  C005  F1B3         	movff	?___xxtofl+3,powf@t+3
 12150   002572  C124  F006         	movff	powf@z_l,___fladd@a
 12151   002576  C125  F007         	movff	powf@z_l+1,___fladd@a+1
 12152   00257A  C126  F008         	movff	powf@z_l+2,___fladd@a+2
 12153   00257E  C127  F009         	movff	powf@z_l+3,___fladd@a+3
 12154   002582  C120  F002         	movff	powf@z_h,___fladd@b
 12155   002586  C121  F003         	movff	powf@z_h+1,___fladd@b+1
 12156   00258A  C122  F004         	movff	powf@z_h+2,___fladd@b+2
 12157   00258E  C123  F005         	movff	powf@z_h+3,___fladd@b+3
 12158   002592  ECE4  F027         	call	___fladd	;wreg free
 12159   002596  C002  F15C         	movff	?___fladd,_powf$3194
 12160   00259A  C003  F15D         	movff	?___fladd+1,_powf$3194+1
 12161   00259E  C004  F15E         	movff	?___fladd+2,_powf$3194+2
 12162   0025A2  C005  F15F         	movff	?___fladd+3,_powf$3194+3
 12163   0025A6  0101               	movlb	1	; () banked
 12164   0025A8  51A4               	movf	powf@k& (0+255),w,b
 12165   0025AA  0D04               	mullw	4
 12166   0025AC  50F3               	movf	243,w,c
 12167   0025AE  0F09               	addlw	low _dp_h
 12168   0025B0  0100               	movlb	0	; () banked
 12169   0025B2  6F68               	movwf	??_powf& (0+255),b
 12170   0025B4  C068  FFF6         	movff	??_powf,tblptrl
 12171   0025B8                     	if	1	;There is more than 1 active tblptr byte
 12172   0025B8  0E0E               	movlw	high __smallconst
 12173   0025BA  6EF7               	movwf	tblptrh,c
 12174   0025BC                     	endif
 12175   0025BC                     	if	0	;tblptru may be non-zero
 12176   0025BC                     	endif
 12177   0025BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12178   0025BC  0E00               	movlw	low (__smallconst shr (0+16))
 12179   0025BE  6EF8               	movwf	tblptru,c
 12180   0025C0                     	endif
 12181   0025C0  0009               	tblrd		*+
 12182   0025C2  CFF5 F006          	movff	tablat,___fladd@a
 12183   0025C6  0009               	tblrd		*+
 12184   0025C8  CFF5 F007          	movff	tablat,___fladd@a+1
 12185   0025CC  0009               	tblrd		*+
 12186   0025CE  CFF5 F008          	movff	tablat,___fladd@a+2
 12187   0025D2  000A               	tblrd		*-
 12188   0025D4  CFF5 F009          	movff	tablat,___fladd@a+3
 12189   0025D8  C15C  F002         	movff	_powf$3194,___fladd@b
 12190   0025DC  C15D  F003         	movff	_powf$3194+1,___fladd@b+1
 12191   0025E0  C15E  F004         	movff	_powf$3194+2,___fladd@b+2
 12192   0025E4  C15F  F005         	movff	_powf$3194+3,___fladd@b+3
 12193   0025E8  ECE4  F027         	call	___fladd	;wreg free
 12194   0025EC  C002  F108         	movff	?___fladd,_powf$3197
 12195   0025F0  C003  F109         	movff	?___fladd+1,_powf$3197+1
 12196   0025F4  C004  F10A         	movff	?___fladd+2,_powf$3197+2
 12197   0025F8  C005  F10B         	movff	?___fladd+3,_powf$3197+3
 12198   0025FC  C108  F002         	movff	_powf$3197,___fladd@b
 12199   002600  C109  F003         	movff	_powf$3197+1,___fladd@b+1
 12200   002604  C10A  F004         	movff	_powf$3197+2,___fladd@b+2
 12201   002608  C10B  F005         	movff	_powf$3197+3,___fladd@b+3
 12202   00260C  C1B0  F006         	movff	powf@t,___fladd@a
 12203   002610  C1B1  F007         	movff	powf@t+1,___fladd@a+1
 12204   002614  C1B2  F008         	movff	powf@t+2,___fladd@a+2
 12205   002618  C1B3  F009         	movff	powf@t+3,___fladd@a+3
 12206   00261C  ECE4  F027         	call	___fladd	;wreg free
 12207   002620  C002  F18C         	movff	?___fladd,powf@t1
 12208   002624  C003  F18D         	movff	?___fladd+1,powf@t1+1
 12209   002628  C004  F18E         	movff	?___fladd+2,powf@t1+2
 12210   00262C  C005  F18F         	movff	?___fladd+3,powf@t1+3
 12211   002630  C18C  F198         	movff	powf@t1,powf@is
 12212   002634  C18D  F199         	movff	powf@t1+1,powf@is+1
 12213   002638  C18E  F19A         	movff	powf@t1+2,powf@is+2
 12214   00263C  C18F  F19B         	movff	powf@t1+3,powf@is+3
 12215   002640  0E00               	movlw	0
 12216   002642  0101               	movlb	1	; () banked
 12217   002644  1598               	andwf	powf@is& (0+255),w,b
 12218   002646  6F8C               	movwf	powf@t1& (0+255),b
 12219   002648  0EF0               	movlw	240
 12220   00264A  1599               	andwf	(powf@is+1)& (0+255),w,b
 12221   00264C  6F8D               	movwf	(powf@t1+1)& (0+255),b
 12222   00264E  0EFF               	movlw	255
 12223   002650  159A               	andwf	(powf@is+2)& (0+255),w,b
 12224   002652  6F8E               	movwf	(powf@t1+2)& (0+255),b
 12225   002654  0EFF               	movlw	255
 12226   002656  159B               	andwf	(powf@is+3)& (0+255),w,b
 12227   002658  6F8F               	movwf	(powf@t1+3)& (0+255),b
 12228   00265A                     
 12229                           ; BSR set to: 1
 12230   00265A  C1B0  F048         	movff	powf@t,___flsub@a
 12231   00265E  C1B1  F049         	movff	powf@t+1,___flsub@a+1
 12232   002662  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
 12233   002666  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
 12234   00266A  C18C  F044         	movff	powf@t1,___flsub@b
 12235   00266E  C18D  F045         	movff	powf@t1+1,___flsub@b+1
 12236   002672  C18E  F046         	movff	powf@t1+2,___flsub@b+2
 12237   002676  C18F  F047         	movff	powf@t1+3,___flsub@b+3
 12238   00267A  EC5C  F03F         	call	___flsub	;wreg free
 12239   00267E  C044  F19C         	movff	?___flsub,_powf$3190
 12240   002682  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 12241   002686  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 12242   00268A  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 12243   00268E  0101               	movlb	1	; () banked
 12244   002690  51A4               	movf	powf@k& (0+255),w,b
 12245   002692  0D04               	mullw	4
 12246   002694  50F3               	movf	243,w,c
 12247   002696  0F09               	addlw	low _dp_h
 12248   002698  0100               	movlb	0	; () banked
 12249   00269A  6F68               	movwf	??_powf& (0+255),b
 12250   00269C  C068  FFF6         	movff	??_powf,tblptrl
 12251   0026A0                     	if	1	;There is more than 1 active tblptr byte
 12252   0026A0  0E0E               	movlw	high __smallconst
 12253   0026A2  6EF7               	movwf	tblptrh,c
 12254   0026A4                     	endif
 12255   0026A4                     	if	0	;tblptru may be non-zero
 12256   0026A4                     	endif
 12257   0026A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12258   0026A4  0E00               	movlw	low (__smallconst shr (0+16))
 12259   0026A6  6EF8               	movwf	tblptru,c
 12260   0026A8                     	endif
 12261   0026A8  0009               	tblrd		*+
 12262   0026AA  CFF5 F048          	movff	tablat,___flsub@a
 12263   0026AE  0009               	tblrd		*+
 12264   0026B0  CFF5 F049          	movff	tablat,___flsub@a+1
 12265   0026B4  0009               	tblrd		*+
 12266   0026B6  CFF5 F04A          	movff	tablat,___flsub@a+2
 12267   0026BA  000A               	tblrd		*-
 12268   0026BC  CFF5 F04B          	movff	tablat,___flsub@a+3
 12269   0026C0  C19C  F044         	movff	_powf$3190,___flsub@b
 12270   0026C4  C19D  F045         	movff	_powf$3190+1,___flsub@b+1
 12271   0026C8  C19E  F046         	movff	_powf$3190+2,___flsub@b+2
 12272   0026CC  C19F  F047         	movff	_powf$3190+3,___flsub@b+3
 12273   0026D0  EC5C  F03F         	call	___flsub	;wreg free
 12274   0026D4  C044  F140         	movff	?___flsub,_powf$3196
 12275   0026D8  C045  F141         	movff	?___flsub+1,_powf$3196+1
 12276   0026DC  C046  F142         	movff	?___flsub+2,_powf$3196+2
 12277   0026E0  C047  F143         	movff	?___flsub+3,_powf$3196+3
 12278   0026E4  C120  F048         	movff	powf@z_h,___flsub@a
 12279   0026E8  C121  F049         	movff	powf@z_h+1,___flsub@a+1
 12280   0026EC  C122  F04A         	movff	powf@z_h+2,___flsub@a+2
 12281   0026F0  C123  F04B         	movff	powf@z_h+3,___flsub@a+3
 12282   0026F4  C140  F044         	movff	_powf$3196,___flsub@b
 12283   0026F8  C141  F045         	movff	_powf$3196+1,___flsub@b+1
 12284   0026FC  C142  F046         	movff	_powf$3196+2,___flsub@b+2
 12285   002700  C143  F047         	movff	_powf$3196+3,___flsub@b+3
 12286   002704  EC5C  F03F         	call	___flsub	;wreg free
 12287   002708  C044  F10C         	movff	?___flsub,_powf$3198
 12288   00270C  C045  F10D         	movff	?___flsub+1,_powf$3198+1
 12289   002710  C046  F10E         	movff	?___flsub+2,_powf$3198+2
 12290   002714  C047  F10F         	movff	?___flsub+3,_powf$3198+3
 12291   002718  C124  F044         	movff	powf@z_l,___flsub@b
 12292   00271C  C125  F045         	movff	powf@z_l+1,___flsub@b+1
 12293   002720  C126  F046         	movff	powf@z_l+2,___flsub@b+2
 12294   002724  C127  F047         	movff	powf@z_l+3,___flsub@b+3
 12295   002728  C10C  F048         	movff	_powf$3198,___flsub@a
 12296   00272C  C10D  F049         	movff	_powf$3198+1,___flsub@a+1
 12297   002730  C10E  F04A         	movff	_powf$3198+2,___flsub@a+2
 12298   002734  C10F  F04B         	movff	_powf$3198+3,___flsub@a+3
 12299   002738  EC5C  F03F         	call	___flsub	;wreg free
 12300   00273C  C044  F11C         	movff	?___flsub,powf@t2
 12301   002740  C045  F11D         	movff	?___flsub+1,powf@t2+1
 12302   002744  C046  F11E         	movff	?___flsub+2,powf@t2+2
 12303   002748  C047  F11F         	movff	?___flsub+3,powf@t2+3
 12304   00274C                     l8404:
 12305   00274C  C064  F198         	movff	powf@y,powf@is
 12306   002750  C065  F199         	movff	powf@y+1,powf@is+1
 12307   002754  C066  F19A         	movff	powf@y+2,powf@is+2
 12308   002758  C067  F19B         	movff	powf@y+3,powf@is+3
 12309   00275C  0E00               	movlw	0
 12310   00275E  0101               	movlb	1	; () banked
 12311   002760  1598               	andwf	powf@is& (0+255),w,b
 12312   002762  6F2C               	movwf	powf@y1& (0+255),b
 12313   002764  0EF0               	movlw	240
 12314   002766  1599               	andwf	(powf@is+1)& (0+255),w,b
 12315   002768  6F2D               	movwf	(powf@y1+1)& (0+255),b
 12316   00276A  0EFF               	movlw	255
 12317   00276C  159A               	andwf	(powf@is+2)& (0+255),w,b
 12318   00276E  6F2E               	movwf	(powf@y1+2)& (0+255),b
 12319   002770  0EFF               	movlw	255
 12320   002772  159B               	andwf	(powf@is+3)& (0+255),w,b
 12321   002774  6F2F               	movwf	(powf@y1+3)& (0+255),b
 12322   002776                     
 12323                           ; BSR set to: 1
 12324   002776  C18C  F016         	movff	powf@t1,___flmul@a
 12325   00277A  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 12326   00277E  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 12327   002782  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 12328   002786  C12C  F048         	movff	powf@y1,___flsub@a
 12329   00278A  C12D  F049         	movff	powf@y1+1,___flsub@a+1
 12330   00278E  C12E  F04A         	movff	powf@y1+2,___flsub@a+2
 12331   002792  C12F  F04B         	movff	powf@y1+3,___flsub@a+3
 12332   002796  C064  F044         	movff	powf@y,___flsub@b
 12333   00279A  C065  F045         	movff	powf@y+1,___flsub@b+1
 12334   00279E  C066  F046         	movff	powf@y+2,___flsub@b+2
 12335   0027A2  C067  F047         	movff	powf@y+3,___flsub@b+3
 12336   0027A6  EC5C  F03F         	call	___flsub	;wreg free
 12337   0027AA  C044  F012         	movff	?___flsub,___flmul@b
 12338   0027AE  C045  F013         	movff	?___flsub+1,___flmul@b+1
 12339   0027B2  C046  F014         	movff	?___flsub+2,___flmul@b+2
 12340   0027B6  C047  F015         	movff	?___flsub+3,___flmul@b+3
 12341   0027BA  EC44  F02A         	call	___flmul	;wreg free
 12342   0027BE  C012  F110         	movff	?___flmul,_powf$3199
 12343   0027C2  C013  F111         	movff	?___flmul+1,_powf$3199+1
 12344   0027C6  C014  F112         	movff	?___flmul+2,_powf$3199+2
 12345   0027CA  C015  F113         	movff	?___flmul+3,_powf$3199+3
 12346   0027CE  C110  F002         	movff	_powf$3199,___fladd@b
 12347   0027D2  C111  F003         	movff	_powf$3199+1,___fladd@b+1
 12348   0027D6  C112  F004         	movff	_powf$3199+2,___fladd@b+2
 12349   0027DA  C113  F005         	movff	_powf$3199+3,___fladd@b+3
 12350   0027DE  C11C  F016         	movff	powf@t2,___flmul@a
 12351   0027E2  C11D  F017         	movff	powf@t2+1,___flmul@a+1
 12352   0027E6  C11E  F018         	movff	powf@t2+2,___flmul@a+2
 12353   0027EA  C11F  F019         	movff	powf@t2+3,___flmul@a+3
 12354   0027EE  C064  F012         	movff	powf@y,___flmul@b
 12355   0027F2  C065  F013         	movff	powf@y+1,___flmul@b+1
 12356   0027F6  C066  F014         	movff	powf@y+2,___flmul@b+2
 12357   0027FA  C067  F015         	movff	powf@y+3,___flmul@b+3
 12358   0027FE  EC44  F02A         	call	___flmul	;wreg free
 12359   002802  C012  F006         	movff	?___flmul,___fladd@a
 12360   002806  C013  F007         	movff	?___flmul+1,___fladd@a+1
 12361   00280A  C014  F008         	movff	?___flmul+2,___fladd@a+2
 12362   00280E  C015  F009         	movff	?___flmul+3,___fladd@a+3
 12363   002812  ECE4  F027         	call	___fladd	;wreg free
 12364   002816  C002  F16C         	movff	?___fladd,powf@p_l
 12365   00281A  C003  F16D         	movff	?___fladd+1,powf@p_l+1
 12366   00281E  C004  F16E         	movff	?___fladd+2,powf@p_l+2
 12367   002822  C005  F16F         	movff	?___fladd+3,powf@p_l+3
 12368   002826  C12C  F012         	movff	powf@y1,___flmul@b
 12369   00282A  C12D  F013         	movff	powf@y1+1,___flmul@b+1
 12370   00282E  C12E  F014         	movff	powf@y1+2,___flmul@b+2
 12371   002832  C12F  F015         	movff	powf@y1+3,___flmul@b+3
 12372   002836  C18C  F016         	movff	powf@t1,___flmul@a
 12373   00283A  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 12374   00283E  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 12375   002842  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 12376   002846  EC44  F02A         	call	___flmul	;wreg free
 12377   00284A  C012  F1A0         	movff	?___flmul,powf@p_h
 12378   00284E  C013  F1A1         	movff	?___flmul+1,powf@p_h+1
 12379   002852  C014  F1A2         	movff	?___flmul+2,powf@p_h+2
 12380   002856  C015  F1A3         	movff	?___flmul+3,powf@p_h+3
 12381   00285A  C1A0  F002         	movff	powf@p_h,___fladd@b
 12382   00285E  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
 12383   002862  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
 12384   002866  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
 12385   00286A  C16C  F006         	movff	powf@p_l,___fladd@a
 12386   00286E  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
 12387   002872  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
 12388   002876  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
 12389   00287A  ECE4  F027         	call	___fladd	;wreg free
 12390   00287E  C002  F1B4         	movff	?___fladd,powf@z
 12391   002882  C003  F1B5         	movff	?___fladd+1,powf@z+1
 12392   002886  C004  F1B6         	movff	?___fladd+2,powf@z+2
 12393   00288A  C005  F1B7         	movff	?___fladd+3,powf@z+3
 12394   00288E  C1B4  F1A8         	movff	powf@z,powf@j
 12395   002892  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 12396   002896  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 12397   00289A  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 12398   00289E  0101               	movlb	1	; () banked
 12399   0028A0  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 12400   0028A2  EF5F  F014         	goto	u9001
 12401   0028A6  05A8               	decf	powf@j& (0+255),w,b
 12402   0028A8  0E00               	movlw	0
 12403   0028AA  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 12404   0028AC  0E00               	movlw	0
 12405   0028AE  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 12406   0028B0  0E43               	movlw	67
 12407   0028B2  59AB               	subwfb	(powf@j+3)& (0+255),w,b
 12408   0028B4  A0D8               	btfss	status,0,c
 12409   0028B6  EF5F  F014         	goto	u9001
 12410   0028BA  EF61  F014         	goto	u9000
 12411   0028BE                     u9001:
 12412   0028BE  EF63  F014         	goto	l8426
 12413   0028C2                     u9000:
 12414   0028C2  EF07  F00B         	goto	l8226
 12415   0028C6                     l8426:
 12416                           
 12417                           ; BSR set to: 1
 12418   0028C6  0E43               	movlw	67
 12419   0028C8  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 12420   0028CA  11A8               	iorwf	powf@j& (0+255),w,b
 12421   0028CC  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 12422   0028CE  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 12423   0028D0  A4D8               	btfss	status,2,c
 12424   0028D2  EF6D  F014         	goto	u9011
 12425   0028D6  EF6F  F014         	goto	u9010
 12426   0028DA                     u9011:
 12427   0028DA  EFAE  F014         	goto	l8436
 12428   0028DE                     u9010:
 12429   0028DE                     
 12430                           ; BSR set to: 1
 12431   0028DE  C1A0  F048         	movff	powf@p_h,___flsub@a
 12432   0028E2  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 12433   0028E6  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 12434   0028EA  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 12435   0028EE  C1B4  F044         	movff	powf@z,___flsub@b
 12436   0028F2  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 12437   0028F6  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 12438   0028FA  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 12439   0028FE  EC5C  F03F         	call	___flsub	;wreg free
 12440   002902  C044  F04C         	movff	?___flsub,___flge@ff1
 12441   002906  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
 12442   00290A  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
 12443   00290E  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
 12444   002912  0E3C               	movlw	60
 12445   002914  6E06               	movwf	___fladd@a^0,c
 12446   002916  0EAA               	movlw	170
 12447   002918  6E07               	movwf	(___fladd@a+1)^0,c
 12448   00291A  0E38               	movlw	56
 12449   00291C  6E08               	movwf	(___fladd@a+2)^0,c
 12450   00291E  0E33               	movlw	51
 12451   002920  6E09               	movwf	(___fladd@a+3)^0,c
 12452   002922  C16C  F002         	movff	powf@p_l,___fladd@b
 12453   002926  C16D  F003         	movff	powf@p_l+1,___fladd@b+1
 12454   00292A  C16E  F004         	movff	powf@p_l+2,___fladd@b+2
 12455   00292E  C16F  F005         	movff	powf@p_l+3,___fladd@b+3
 12456   002932  ECE4  F027         	call	___fladd	;wreg free
 12457   002936  C002  F050         	movff	?___fladd,___flge@ff2
 12458   00293A  C003  F051         	movff	?___fladd+1,___flge@ff2+1
 12459   00293E  C004  F052         	movff	?___fladd+2,___flge@ff2+2
 12460   002942  C005  F053         	movff	?___fladd+3,___flge@ff2+3
 12461   002946  EC86  F037         	call	___flge	;wreg free
 12462   00294A  B0D8               	btfsc	status,0,c
 12463   00294C  EFAA  F014         	goto	u9021
 12464   002950  EFAC  F014         	goto	u9020
 12465   002954                     u9021:
 12466   002954  EF21  F015         	goto	l8452
 12467   002958                     u9020:
 12468   002958  EF07  F00B         	goto	l8226
 12469   00295C                     l8436:
 12470                           
 12471                           ; BSR set to: 1
 12472   00295C  0EFF               	movlw	255
 12473   00295E  15A8               	andwf	powf@j& (0+255),w,b
 12474   002960  0100               	movlb	0	; () banked
 12475   002962  6F68               	movwf	??_powf& (0+255),b
 12476   002964  0EFF               	movlw	255
 12477   002966  0101               	movlb	1	; () banked
 12478   002968  15A9               	andwf	(powf@j+1)& (0+255),w,b
 12479   00296A  0100               	movlb	0	; () banked
 12480   00296C  6F69               	movwf	(??_powf+1)& (0+255),b
 12481   00296E  0EFF               	movlw	255
 12482   002970  0101               	movlb	1	; () banked
 12483   002972  15AA               	andwf	(powf@j+2)& (0+255),w,b
 12484   002974  0100               	movlb	0	; () banked
 12485   002976  6F6A               	movwf	(??_powf+2)& (0+255),b
 12486   002978  0E7F               	movlw	127
 12487   00297A  0101               	movlb	1	; () banked
 12488   00297C  15AB               	andwf	(powf@j+3)& (0+255),w,b
 12489   00297E  0100               	movlb	0	; () banked
 12490   002980  6F6B               	movwf	(??_powf+3)& (0+255),b
 12491   002982  BF6B               	btfsc	(??_powf+3)& (0+255),7,b
 12492   002984  EFD0  F014         	goto	u9031
 12493   002988  0568               	decf	??_powf& (0+255),w,b
 12494   00298A  0E00               	movlw	0
 12495   00298C  5969               	subwfb	(??_powf+1)& (0+255),w,b
 12496   00298E  0E16               	movlw	22
 12497   002990  596A               	subwfb	(??_powf+2)& (0+255),w,b
 12498   002992  0E43               	movlw	67
 12499   002994  596B               	subwfb	(??_powf+3)& (0+255),w,b
 12500   002996  A0D8               	btfss	status,0,c
 12501   002998  EFD0  F014         	goto	u9031
 12502   00299C  EFD2  F014         	goto	u9030
 12503   0029A0                     u9031:
 12504   0029A0  EFDC  F014         	goto	l8444
 12505   0029A4                     u9030:
 12506   0029A4                     
 12507                           ; BSR set to: 0
 12508   0029A4  0E00               	movlw	0
 12509   0029A6  6F60               	movwf	?_powf& (0+255),b
 12510   0029A8  0E00               	movlw	0
 12511   0029AA  6F61               	movwf	(?_powf+1)& (0+255),b
 12512   0029AC  0E00               	movlw	0
 12513   0029AE  6F62               	movwf	(?_powf+2)& (0+255),b
 12514   0029B0  0E00               	movlw	0
 12515   0029B2  6F63               	movwf	(?_powf+3)& (0+255),b
 12516   0029B4  EFAD  F019         	goto	l1479
 12517   0029B8                     l8444:
 12518                           
 12519                           ; BSR set to: 0
 12520   0029B8  0E16               	movlw	22
 12521   0029BA  0101               	movlb	1	; () banked
 12522   0029BC  19AA               	xorwf	(powf@j+2)& (0+255),w,b
 12523   0029BE  E109               	bnz	u9041
 12524   0029C0  0EC3               	movlw	195
 12525   0029C2  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 12526   0029C4  11A8               	iorwf	powf@j& (0+255),w,b
 12527   0029C6  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 12528   0029C8  A4D8               	btfss	status,2,c
 12529   0029CA  EFE9  F014         	goto	u9041
 12530   0029CE  EFEB  F014         	goto	u9040
 12531   0029D2                     u9041:
 12532   0029D2  EF21  F015         	goto	l8452
 12533   0029D6                     u9040:
 12534   0029D6                     
 12535                           ; BSR set to: 1
 12536   0029D6  C1A0  F048         	movff	powf@p_h,___flsub@a
 12537   0029DA  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 12538   0029DE  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 12539   0029E2  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 12540   0029E6  C1B4  F044         	movff	powf@z,___flsub@b
 12541   0029EA  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 12542   0029EE  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 12543   0029F2  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 12544   0029F6  EC5C  F03F         	call	___flsub	;wreg free
 12545   0029FA  C044  F04C         	movff	?___flsub,___flge@ff1
 12546   0029FE  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
 12547   002A02  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
 12548   002A06  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
 12549   002A0A  C16C  F050         	movff	powf@p_l,___flge@ff2
 12550   002A0E  C16D  F051         	movff	powf@p_l+1,___flge@ff2+1
 12551   002A12  C16E  F052         	movff	powf@p_l+2,___flge@ff2+2
 12552   002A16  C16F  F053         	movff	powf@p_l+3,___flge@ff2+3
 12553   002A1A  EC86  F037         	call	___flge	;wreg free
 12554   002A1E  A0D8               	btfss	status,0,c
 12555   002A20  EF14  F015         	goto	u9051
 12556   002A24  EF16  F015         	goto	u9050
 12557   002A28                     u9051:
 12558   002A28  EF21  F015         	goto	l8452
 12559   002A2C                     u9050:
 12560   002A2C  0E00               	movlw	0
 12561   002A2E  0100               	movlb	0	; () banked
 12562   002A30  6F60               	movwf	?_powf& (0+255),b
 12563   002A32  0E00               	movlw	0
 12564   002A34  6F61               	movwf	(?_powf+1)& (0+255),b
 12565   002A36  0E00               	movlw	0
 12566   002A38  6F62               	movwf	(?_powf+2)& (0+255),b
 12567   002A3A  0E00               	movlw	0
 12568   002A3C  6F63               	movwf	(?_powf+3)& (0+255),b
 12569   002A3E  EFAD  F019         	goto	l1479
 12570   002A42                     l8452:
 12571   002A42  0EFF               	movlw	255
 12572   002A44  0101               	movlb	1	; () banked
 12573   002A46  15A8               	andwf	powf@j& (0+255),w,b
 12574   002A48  6F28               	movwf	powf@i& (0+255),b
 12575   002A4A  0EFF               	movlw	255
 12576   002A4C  15A9               	andwf	(powf@j+1)& (0+255),w,b
 12577   002A4E  6F29               	movwf	(powf@i+1)& (0+255),b
 12578   002A50  0EFF               	movlw	255
 12579   002A52  15AA               	andwf	(powf@j+2)& (0+255),w,b
 12580   002A54  6F2A               	movwf	(powf@i+2)& (0+255),b
 12581   002A56  0E7F               	movlw	127
 12582   002A58  15AB               	andwf	(powf@j+3)& (0+255),w,b
 12583   002A5A  6F2B               	movwf	(powf@i+3)& (0+255),b
 12584   002A5C  0E17               	movlw	23
 12585   002A5E  0100               	movlb	0	; () banked
 12586   002A60  6F68               	movwf	??_powf& (0+255),b
 12587   002A62  C128  F069         	movff	powf@i,??_powf+1
 12588   002A66  C129  F06A         	movff	powf@i+1,??_powf+2
 12589   002A6A  C12A  F06B         	movff	powf@i+2,??_powf+3
 12590   002A6E  C12B  F06C         	movff	powf@i+3,??_powf+4
 12591   002A72                     u9065:
 12592   002A72  6768               	tstfsz	??_powf& (0+255),b
 12593   002A74  EF3E  F015         	goto	u9066
 12594   002A78  EF46  F015         	goto	u9067
 12595   002A7C                     u9066:
 12596   002A7C  356C               	rlcf	(??_powf+4)& (0+255),w,b
 12597   002A7E  336C               	rrcf	(??_powf+4)& (0+255),f,b
 12598   002A80  336B               	rrcf	(??_powf+3)& (0+255),f,b
 12599   002A82  336A               	rrcf	(??_powf+2)& (0+255),f,b
 12600   002A84  3369               	rrcf	(??_powf+1)& (0+255),f,b
 12601   002A86  2F68               	decfsz	??_powf& (0+255),f,b
 12602   002A88  EF39  F015         	goto	u9065
 12603   002A8C                     u9067:
 12604   002A8C  0E81               	movlw	129
 12605   002A8E  0100               	movlb	0	; () banked
 12606   002A90  2569               	addwf	(??_powf+1)& (0+255),w,b
 12607   002A92  0101               	movlb	1	; () banked
 12608   002A94  6FA4               	movwf	powf@k& (0+255),b
 12609   002A96  0EFF               	movlw	255
 12610   002A98  0100               	movlb	0	; () banked
 12611   002A9A  216A               	addwfc	(??_powf+2)& (0+255),w,b
 12612   002A9C  0101               	movlb	1	; () banked
 12613   002A9E  6FA5               	movwf	(powf@k+1)& (0+255),b
 12614   002AA0  0EFF               	movlw	255
 12615   002AA2  0100               	movlb	0	; () banked
 12616   002AA4  216B               	addwfc	(??_powf+3)& (0+255),w,b
 12617   002AA6  0101               	movlb	1	; () banked
 12618   002AA8  6FA6               	movwf	(powf@k+2)& (0+255),b
 12619   002AAA  0EFF               	movlw	255
 12620   002AAC  0100               	movlb	0	; () banked
 12621   002AAE  216C               	addwfc	(??_powf+4)& (0+255),w,b
 12622   002AB0  0101               	movlb	1	; () banked
 12623   002AB2  6FA7               	movwf	(powf@k+3)& (0+255),b
 12624   002AB4                     
 12625                           ; BSR set to: 1
 12626   002AB4  0E00               	movlw	0
 12627   002AB6  6F88               	movwf	powf@n& (0+255),b
 12628   002AB8  0E00               	movlw	0
 12629   002ABA  6F89               	movwf	(powf@n+1)& (0+255),b
 12630   002ABC  0E00               	movlw	0
 12631   002ABE  6F8A               	movwf	(powf@n+2)& (0+255),b
 12632   002AC0  0E00               	movlw	0
 12633   002AC2  6F8B               	movwf	(powf@n+3)& (0+255),b
 12634   002AC4                     
 12635                           ; BSR set to: 1
 12636   002AC4  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
 12637   002AC6  EF71  F015         	goto	u9071
 12638   002ACA  0528               	decf	powf@i& (0+255),w,b
 12639   002ACC  0E00               	movlw	0
 12640   002ACE  5929               	subwfb	(powf@i+1)& (0+255),w,b
 12641   002AD0  0E00               	movlw	0
 12642   002AD2  592A               	subwfb	(powf@i+2)& (0+255),w,b
 12643   002AD4  0E3F               	movlw	63
 12644   002AD6  592B               	subwfb	(powf@i+3)& (0+255),w,b
 12645   002AD8  A0D8               	btfss	status,0,c
 12646   002ADA  EF71  F015         	goto	u9071
 12647   002ADE  EF73  F015         	goto	u9070
 12648   002AE2                     u9071:
 12649   002AE2  EF6F  F016         	goto	l8464
 12650   002AE6                     u9070:
 12651   002AE6                     
 12652                           ; BSR set to: 1
 12653   002AE6  C1A4  F068         	movff	powf@k,??_powf
 12654   002AEA  0E01               	movlw	1
 12655   002AEC  0100               	movlb	0	; () banked
 12656   002AEE  2768               	addwf	??_powf& (0+255),f,b
 12657   002AF0  0E00               	movlw	0
 12658   002AF2  6F69               	movwf	(??_powf+1)& (0+255),b
 12659   002AF4  0E00               	movlw	0
 12660   002AF6  6F6A               	movwf	(??_powf+2)& (0+255),b
 12661   002AF8  0E80               	movlw	128
 12662   002AFA  6F6B               	movwf	(??_powf+3)& (0+255),b
 12663   002AFC  0E00               	movlw	0
 12664   002AFE  6F6C               	movwf	(??_powf+4)& (0+255),b
 12665   002B00                     u9085:
 12666   002B00  6768               	tstfsz	??_powf& (0+255),b
 12667   002B02  EF85  F015         	goto	u9086
 12668   002B06  EF8D  F015         	goto	u9087
 12669   002B0A                     u9086:
 12670   002B0A  356C               	rlcf	(??_powf+4)& (0+255),w,b
 12671   002B0C  336C               	rrcf	(??_powf+4)& (0+255),f,b
 12672   002B0E  336B               	rrcf	(??_powf+3)& (0+255),f,b
 12673   002B10  336A               	rrcf	(??_powf+2)& (0+255),f,b
 12674   002B12  3369               	rrcf	(??_powf+1)& (0+255),f,b
 12675   002B14  2F68               	decfsz	??_powf& (0+255),f,b
 12676   002B16  EF80  F015         	goto	u9085
 12677   002B1A                     u9087:
 12678   002B1A  0101               	movlb	1	; () banked
 12679   002B1C  51A8               	movf	powf@j& (0+255),w,b
 12680   002B1E  0100               	movlb	0	; () banked
 12681   002B20  2569               	addwf	(??_powf+1)& (0+255),w,b
 12682   002B22  0101               	movlb	1	; () banked
 12683   002B24  6F88               	movwf	powf@n& (0+255),b
 12684   002B26  51A9               	movf	(powf@j+1)& (0+255),w,b
 12685   002B28  0100               	movlb	0	; () banked
 12686   002B2A  216A               	addwfc	(??_powf+2)& (0+255),w,b
 12687   002B2C  0101               	movlb	1	; () banked
 12688   002B2E  6F89               	movwf	(powf@n+1)& (0+255),b
 12689   002B30  51AA               	movf	(powf@j+2)& (0+255),w,b
 12690   002B32  0100               	movlb	0	; () banked
 12691   002B34  216B               	addwfc	(??_powf+3)& (0+255),w,b
 12692   002B36  0101               	movlb	1	; () banked
 12693   002B38  6F8A               	movwf	(powf@n+2)& (0+255),b
 12694   002B3A  51AB               	movf	(powf@j+3)& (0+255),w,b
 12695   002B3C  0100               	movlb	0	; () banked
 12696   002B3E  216C               	addwfc	(??_powf+4)& (0+255),w,b
 12697   002B40  0101               	movlb	1	; () banked
 12698   002B42  6F8B               	movwf	(powf@n+3)& (0+255),b
 12699   002B44  0E81               	movlw	129
 12700   002B46  0100               	movlb	0	; () banked
 12701   002B48  6F68               	movwf	??_powf& (0+255),b
 12702   002B4A  0EFF               	movlw	255
 12703   002B4C  6F69               	movwf	(??_powf+1)& (0+255),b
 12704   002B4E  0EFF               	movlw	255
 12705   002B50  6F6A               	movwf	(??_powf+2)& (0+255),b
 12706   002B52  0EFF               	movlw	255
 12707   002B54  6F6B               	movwf	(??_powf+3)& (0+255),b
 12708   002B56  0E17               	movlw	23
 12709   002B58  6F6C               	movwf	(??_powf+4)& (0+255),b
 12710   002B5A  C188  F06D         	movff	powf@n,??_powf+5
 12711   002B5E  C189  F06E         	movff	powf@n+1,??_powf+6
 12712   002B62  C18A  F06F         	movff	powf@n+2,??_powf+7
 12713   002B66  C18B  F070         	movff	powf@n+3,??_powf+8
 12714   002B6A                     u9095:
 12715   002B6A  676C               	tstfsz	(??_powf+4)& (0+255),b
 12716   002B6C  EFBA  F015         	goto	u9096
 12717   002B70  EFC2  F015         	goto	u9097
 12718   002B74                     u9096:
 12719   002B74  3570               	rlcf	(??_powf+8)& (0+255),w,b
 12720   002B76  3370               	rrcf	(??_powf+8)& (0+255),f,b
 12721   002B78  336F               	rrcf	(??_powf+7)& (0+255),f,b
 12722   002B7A  336E               	rrcf	(??_powf+6)& (0+255),f,b
 12723   002B7C  336D               	rrcf	(??_powf+5)& (0+255),f,b
 12724   002B7E  2F6C               	decfsz	(??_powf+4)& (0+255),f,b
 12725   002B80  EFB5  F015         	goto	u9095
 12726   002B84                     u9097:
 12727   002B84  0100               	movlb	0	; () banked
 12728   002B86  516D               	movf	(??_powf+5)& (0+255),w,b
 12729   002B88  2568               	addwf	??_powf& (0+255),w,b
 12730   002B8A  0101               	movlb	1	; () banked
 12731   002B8C  6FA4               	movwf	powf@k& (0+255),b
 12732   002B8E  0E00               	movlw	0
 12733   002B90  0100               	movlb	0	; () banked
 12734   002B92  2169               	addwfc	(??_powf+1)& (0+255),w,b
 12735   002B94  0101               	movlb	1	; () banked
 12736   002B96  6FA5               	movwf	(powf@k+1)& (0+255),b
 12737   002B98  0E00               	movlw	0
 12738   002B9A  0100               	movlb	0	; () banked
 12739   002B9C  216A               	addwfc	(??_powf+2)& (0+255),w,b
 12740   002B9E  0101               	movlb	1	; () banked
 12741   002BA0  6FA6               	movwf	(powf@k+2)& (0+255),b
 12742   002BA2  0E00               	movlw	0
 12743   002BA4  0100               	movlb	0	; () banked
 12744   002BA6  216B               	addwfc	(??_powf+3)& (0+255),w,b
 12745   002BA8  0101               	movlb	1	; () banked
 12746   002BAA  6FA7               	movwf	(powf@k+3)& (0+255),b
 12747   002BAC  C1A4  F068         	movff	powf@k,??_powf
 12748   002BB0  0EFF               	movlw	255
 12749   002BB2  0100               	movlb	0	; () banked
 12750   002BB4  6F69               	movwf	(??_powf+1)& (0+255),b
 12751   002BB6  0EFF               	movlw	255
 12752   002BB8  6F6A               	movwf	(??_powf+2)& (0+255),b
 12753   002BBA  0E7F               	movlw	127
 12754   002BBC  6F6B               	movwf	(??_powf+3)& (0+255),b
 12755   002BBE  0E00               	movlw	0
 12756   002BC0  6F6C               	movwf	(??_powf+4)& (0+255),b
 12757   002BC2                     u9105:
 12758   002BC2  6768               	tstfsz	??_powf& (0+255),b
 12759   002BC4  EFE6  F015         	goto	u9106
 12760   002BC8  EFEE  F015         	goto	u9107
 12761   002BCC                     u9106:
 12762   002BCC  356C               	rlcf	(??_powf+4)& (0+255),w,b
 12763   002BCE  336C               	rrcf	(??_powf+4)& (0+255),f,b
 12764   002BD0  336B               	rrcf	(??_powf+3)& (0+255),f,b
 12765   002BD2  336A               	rrcf	(??_powf+2)& (0+255),f,b
 12766   002BD4  3369               	rrcf	(??_powf+1)& (0+255),f,b
 12767   002BD6  2F68               	decfsz	??_powf& (0+255),f,b
 12768   002BD8  EFE1  F015         	goto	u9105
 12769   002BDC                     u9107:
 12770   002BDC  0100               	movlb	0	; () banked
 12771   002BDE  1D69               	comf	(??_powf+1)& (0+255),w,b
 12772   002BE0  6F6D               	movwf	(??_powf+5)& (0+255),b
 12773   002BE2  1D6A               	comf	(??_powf+2)& (0+255),w,b
 12774   002BE4  6F6E               	movwf	(??_powf+6)& (0+255),b
 12775   002BE6  1D6B               	comf	(??_powf+3)& (0+255),w,b
 12776   002BE8  6F6F               	movwf	(??_powf+7)& (0+255),b
 12777   002BEA  1D6C               	comf	(??_powf+4)& (0+255),w,b
 12778   002BEC  6F70               	movwf	(??_powf+8)& (0+255),b
 12779   002BEE  0101               	movlb	1	; () banked
 12780   002BF0  5188               	movf	powf@n& (0+255),w,b
 12781   002BF2  0100               	movlb	0	; () banked
 12782   002BF4  156D               	andwf	(??_powf+5)& (0+255),w,b
 12783   002BF6  0101               	movlb	1	; () banked
 12784   002BF8  6FB0               	movwf	powf@t& (0+255),b
 12785   002BFA  5189               	movf	(powf@n+1)& (0+255),w,b
 12786   002BFC  0100               	movlb	0	; () banked
 12787   002BFE  156E               	andwf	(??_powf+6)& (0+255),w,b
 12788   002C00  0101               	movlb	1	; () banked
 12789   002C02  6FB1               	movwf	(powf@t+1)& (0+255),b
 12790   002C04  518A               	movf	(powf@n+2)& (0+255),w,b
 12791   002C06  0100               	movlb	0	; () banked
 12792   002C08  156F               	andwf	(??_powf+7)& (0+255),w,b
 12793   002C0A  0101               	movlb	1	; () banked
 12794   002C0C  6FB2               	movwf	(powf@t+2)& (0+255),b
 12795   002C0E  518B               	movf	(powf@n+3)& (0+255),w,b
 12796   002C10  0100               	movlb	0	; () banked
 12797   002C12  1570               	andwf	(??_powf+8)& (0+255),w,b
 12798   002C14  0101               	movlb	1	; () banked
 12799   002C16  6FB3               	movwf	(powf@t+3)& (0+255),b
 12800   002C18  51A4               	movf	powf@k& (0+255),w,b
 12801   002C1A  0817               	sublw	23
 12802   002C1C  0100               	movlb	0	; () banked
 12803   002C1E  6F68               	movwf	??_powf& (0+255),b
 12804   002C20  0EFF               	movlw	255
 12805   002C22  0101               	movlb	1	; () banked
 12806   002C24  1588               	andwf	powf@n& (0+255),w,b
 12807   002C26  0100               	movlb	0	; () banked
 12808   002C28  6F69               	movwf	(??_powf+1)& (0+255),b
 12809   002C2A  0EFF               	movlw	255
 12810   002C2C  0101               	movlb	1	; () banked
 12811   002C2E  1589               	andwf	(powf@n+1)& (0+255),w,b
 12812   002C30  0100               	movlb	0	; () banked
 12813   002C32  6F6A               	movwf	(??_powf+2)& (0+255),b
 12814   002C34  0E7F               	movlw	127
 12815   002C36  0101               	movlb	1	; () banked
 12816   002C38  158A               	andwf	(powf@n+2)& (0+255),w,b
 12817   002C3A  0100               	movlb	0	; () banked
 12818   002C3C  6F6B               	movwf	(??_powf+3)& (0+255),b
 12819   002C3E  0E00               	movlw	0
 12820   002C40  0101               	movlb	1	; () banked
 12821   002C42  158B               	andwf	(powf@n+3)& (0+255),w,b
 12822   002C44  0100               	movlb	0	; () banked
 12823   002C46  6F6C               	movwf	(??_powf+4)& (0+255),b
 12824   002C48  0E00               	movlw	0
 12825   002C4A  1169               	iorwf	(??_powf+1)& (0+255),w,b
 12826   002C4C  6F6D               	movwf	(??_powf+5)& (0+255),b
 12827   002C4E  0E00               	movlw	0
 12828   002C50  116A               	iorwf	(??_powf+2)& (0+255),w,b
 12829   002C52  6F6E               	movwf	(??_powf+6)& (0+255),b
 12830   002C54  0E80               	movlw	128
 12831   002C56  116B               	iorwf	(??_powf+3)& (0+255),w,b
 12832   002C58  6F6F               	movwf	(??_powf+7)& (0+255),b
 12833   002C5A  0E00               	movlw	0
 12834   002C5C  116C               	iorwf	(??_powf+4)& (0+255),w,b
 12835   002C5E  6F70               	movwf	(??_powf+8)& (0+255),b
 12836   002C60                     u9115:
 12837   002C60  6768               	tstfsz	??_powf& (0+255),b
 12838   002C62  EF35  F016         	goto	u9116
 12839   002C66  EF3D  F016         	goto	u9117
 12840   002C6A                     u9116:
 12841   002C6A  3570               	rlcf	(??_powf+8)& (0+255),w,b
 12842   002C6C  3370               	rrcf	(??_powf+8)& (0+255),f,b
 12843   002C6E  336F               	rrcf	(??_powf+7)& (0+255),f,b
 12844   002C70  336E               	rrcf	(??_powf+6)& (0+255),f,b
 12845   002C72  336D               	rrcf	(??_powf+5)& (0+255),f,b
 12846   002C74  2F68               	decfsz	??_powf& (0+255),f,b
 12847   002C76  EF30  F016         	goto	u9115
 12848   002C7A                     u9117:
 12849   002C7A  C06D  F188         	movff	??_powf+5,powf@n
 12850   002C7E  C06E  F189         	movff	??_powf+6,powf@n+1
 12851   002C82  C06F  F18A         	movff	??_powf+7,powf@n+2
 12852   002C86  C070  F18B         	movff	??_powf+8,powf@n+3
 12853   002C8A  0101               	movlb	1	; () banked
 12854   002C8C  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 12855   002C8E  EF4D  F016         	goto	u9120
 12856   002C92  EF4B  F016         	goto	u9121
 12857   002C96                     u9121:
 12858   002C96  EF55  F016         	goto	l8462
 12859   002C9A                     u9120:
 12860   002C9A                     
 12861                           ; BSR set to: 1
 12862   002C9A  1F8B               	comf	(powf@n+3)& (0+255),f,b
 12863   002C9C  1F8A               	comf	(powf@n+2)& (0+255),f,b
 12864   002C9E  1F89               	comf	(powf@n+1)& (0+255),f,b
 12865   002CA0  6D88               	negf	powf@n& (0+255),b
 12866   002CA2  0E00               	movlw	0
 12867   002CA4  2389               	addwfc	(powf@n+1)& (0+255),f,b
 12868   002CA6  238A               	addwfc	(powf@n+2)& (0+255),f,b
 12869   002CA8  238B               	addwfc	(powf@n+3)& (0+255),f,b
 12870   002CAA                     l8462:
 12871                           
 12872                           ; BSR set to: 1
 12873   002CAA  C1A0  F044         	movff	powf@p_h,___flsub@b
 12874   002CAE  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
 12875   002CB2  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
 12876   002CB6  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
 12877   002CBA  C1B0  F048         	movff	powf@t,___flsub@a
 12878   002CBE  C1B1  F049         	movff	powf@t+1,___flsub@a+1
 12879   002CC2  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
 12880   002CC6  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
 12881   002CCA  EC5C  F03F         	call	___flsub	;wreg free
 12882   002CCE  C044  F1A0         	movff	?___flsub,powf@p_h
 12883   002CD2  C045  F1A1         	movff	?___flsub+1,powf@p_h+1
 12884   002CD6  C046  F1A2         	movff	?___flsub+2,powf@p_h+2
 12885   002CDA  C047  F1A3         	movff	?___flsub+3,powf@p_h+3
 12886   002CDE                     l8464:
 12887   002CDE  C1A0  F002         	movff	powf@p_h,___fladd@b
 12888   002CE2  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
 12889   002CE6  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
 12890   002CEA  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
 12891   002CEE  C16C  F006         	movff	powf@p_l,___fladd@a
 12892   002CF2  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
 12893   002CF6  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
 12894   002CFA  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
 12895   002CFE  ECE4  F027         	call	___fladd	;wreg free
 12896   002D02  C002  F1B0         	movff	?___fladd,powf@t
 12897   002D06  C003  F1B1         	movff	?___fladd+1,powf@t+1
 12898   002D0A  C004  F1B2         	movff	?___fladd+2,powf@t+2
 12899   002D0E  C005  F1B3         	movff	?___fladd+3,powf@t+3
 12900   002D12  C1B0  F198         	movff	powf@t,powf@is
 12901   002D16  C1B1  F199         	movff	powf@t+1,powf@is+1
 12902   002D1A  C1B2  F19A         	movff	powf@t+2,powf@is+2
 12903   002D1E  C1B3  F19B         	movff	powf@t+3,powf@is+3
 12904   002D22  0E00               	movlw	0
 12905   002D24  0101               	movlb	1	; () banked
 12906   002D26  1598               	andwf	powf@is& (0+255),w,b
 12907   002D28  6FB0               	movwf	powf@t& (0+255),b
 12908   002D2A  0E80               	movlw	128
 12909   002D2C  1599               	andwf	(powf@is+1)& (0+255),w,b
 12910   002D2E  6FB1               	movwf	(powf@t+1)& (0+255),b
 12911   002D30  0EFF               	movlw	255
 12912   002D32  159A               	andwf	(powf@is+2)& (0+255),w,b
 12913   002D34  6FB2               	movwf	(powf@t+2)& (0+255),b
 12914   002D36  0EFF               	movlw	255
 12915   002D38  159B               	andwf	(powf@is+3)& (0+255),w,b
 12916   002D3A  6FB3               	movwf	(powf@t+3)& (0+255),b
 12917   002D3C                     
 12918                           ; BSR set to: 1
 12919   002D3C  C1B0  F012         	movff	powf@t,___flmul@b
 12920   002D40  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 12921   002D44  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 12922   002D48  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 12923   002D4C  0E00               	movlw	0
 12924   002D4E  6E16               	movwf	___flmul@a^0,c
 12925   002D50  0E72               	movlw	114
 12926   002D52  6E17               	movwf	(___flmul@a+1)^0,c
 12927   002D54  0E31               	movlw	49
 12928   002D56  6E18               	movwf	(___flmul@a+2)^0,c
 12929   002D58  0E3F               	movlw	63
 12930   002D5A  6E19               	movwf	(___flmul@a+3)^0,c
 12931   002D5C  EC44  F02A         	call	___flmul	;wreg free
 12932   002D60  C012  F17C         	movff	?___flmul,powf@u
 12933   002D64  C013  F17D         	movff	?___flmul+1,powf@u+1
 12934   002D68  C014  F17E         	movff	?___flmul+2,powf@u+2
 12935   002D6C  C015  F17F         	movff	?___flmul+3,powf@u+3
 12936   002D70  C1A0  F048         	movff	powf@p_h,___flsub@a
 12937   002D74  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 12938   002D78  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 12939   002D7C  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 12940   002D80  C1B0  F044         	movff	powf@t,___flsub@b
 12941   002D84  C1B1  F045         	movff	powf@t+1,___flsub@b+1
 12942   002D88  C1B2  F046         	movff	powf@t+2,___flsub@b+2
 12943   002D8C  C1B3  F047         	movff	powf@t+3,___flsub@b+3
 12944   002D90  EC5C  F03F         	call	___flsub	;wreg free
 12945   002D94  C044  F19C         	movff	?___flsub,_powf$3190
 12946   002D98  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 12947   002D9C  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 12948   002DA0  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 12949   002DA4  0E18               	movlw	24
 12950   002DA6  6E16               	movwf	___flmul@a^0,c
 12951   002DA8  0E72               	movlw	114
 12952   002DAA  6E17               	movwf	(___flmul@a+1)^0,c
 12953   002DAC  0E31               	movlw	49
 12954   002DAE  6E18               	movwf	(___flmul@a+2)^0,c
 12955   002DB0  0E3F               	movlw	63
 12956   002DB2  6E19               	movwf	(___flmul@a+3)^0,c
 12957   002DB4  C19C  F048         	movff	_powf$3190,___flsub@a
 12958   002DB8  C19D  F049         	movff	_powf$3190+1,___flsub@a+1
 12959   002DBC  C19E  F04A         	movff	_powf$3190+2,___flsub@a+2
 12960   002DC0  C19F  F04B         	movff	_powf$3190+3,___flsub@a+3
 12961   002DC4  C16C  F044         	movff	powf@p_l,___flsub@b
 12962   002DC8  C16D  F045         	movff	powf@p_l+1,___flsub@b+1
 12963   002DCC  C16E  F046         	movff	powf@p_l+2,___flsub@b+2
 12964   002DD0  C16F  F047         	movff	powf@p_l+3,___flsub@b+3
 12965   002DD4  EC5C  F03F         	call	___flsub	;wreg free
 12966   002DD8  C044  F012         	movff	?___flsub,___flmul@b
 12967   002DDC  C045  F013         	movff	?___flsub+1,___flmul@b+1
 12968   002DE0  C046  F014         	movff	?___flsub+2,___flmul@b+2
 12969   002DE4  C047  F015         	movff	?___flsub+3,___flmul@b+3
 12970   002DE8  EC44  F02A         	call	___flmul	;wreg free
 12971   002DEC  C012  F114         	movff	?___flmul,_powf$3200
 12972   002DF0  C013  F115         	movff	?___flmul+1,_powf$3200+1
 12973   002DF4  C014  F116         	movff	?___flmul+2,_powf$3200+2
 12974   002DF8  C015  F117         	movff	?___flmul+3,_powf$3200+3
 12975   002DFC  C114  F002         	movff	_powf$3200,___fladd@b
 12976   002E00  C115  F003         	movff	_powf$3200+1,___fladd@b+1
 12977   002E04  C116  F004         	movff	_powf$3200+2,___fladd@b+2
 12978   002E08  C117  F005         	movff	_powf$3200+3,___fladd@b+3
 12979   002E0C  0E8C               	movlw	140
 12980   002E0E  6E16               	movwf	___flmul@a^0,c
 12981   002E10  0EBE               	movlw	190
 12982   002E12  6E17               	movwf	(___flmul@a+1)^0,c
 12983   002E14  0EBF               	movlw	191
 12984   002E16  6E18               	movwf	(___flmul@a+2)^0,c
 12985   002E18  0E35               	movlw	53
 12986   002E1A  6E19               	movwf	(___flmul@a+3)^0,c
 12987   002E1C  C1B0  F012         	movff	powf@t,___flmul@b
 12988   002E20  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 12989   002E24  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 12990   002E28  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 12991   002E2C  EC44  F02A         	call	___flmul	;wreg free
 12992   002E30  C012  F006         	movff	?___flmul,___fladd@a
 12993   002E34  C013  F007         	movff	?___flmul+1,___fladd@a+1
 12994   002E38  C014  F008         	movff	?___flmul+2,___fladd@a+2
 12995   002E3C  C015  F009         	movff	?___flmul+3,___fladd@a+3
 12996   002E40  ECE4  F027         	call	___fladd	;wreg free
 12997   002E44  C002  F180         	movff	?___fladd,powf@v
 12998   002E48  C003  F181         	movff	?___fladd+1,powf@v+1
 12999   002E4C  C004  F182         	movff	?___fladd+2,powf@v+2
 13000   002E50  C005  F183         	movff	?___fladd+3,powf@v+3
 13001   002E54  C17C  F002         	movff	powf@u,___fladd@b
 13002   002E58  C17D  F003         	movff	powf@u+1,___fladd@b+1
 13003   002E5C  C17E  F004         	movff	powf@u+2,___fladd@b+2
 13004   002E60  C17F  F005         	movff	powf@u+3,___fladd@b+3
 13005   002E64  C180  F006         	movff	powf@v,___fladd@a
 13006   002E68  C181  F007         	movff	powf@v+1,___fladd@a+1
 13007   002E6C  C182  F008         	movff	powf@v+2,___fladd@a+2
 13008   002E70  C183  F009         	movff	powf@v+3,___fladd@a+3
 13009   002E74  ECE4  F027         	call	___fladd	;wreg free
 13010   002E78  C002  F1B4         	movff	?___fladd,powf@z
 13011   002E7C  C003  F1B5         	movff	?___fladd+1,powf@z+1
 13012   002E80  C004  F1B6         	movff	?___fladd+2,powf@z+2
 13013   002E84  C005  F1B7         	movff	?___fladd+3,powf@z+3
 13014   002E88  C17C  F048         	movff	powf@u,___flsub@a
 13015   002E8C  C17D  F049         	movff	powf@u+1,___flsub@a+1
 13016   002E90  C17E  F04A         	movff	powf@u+2,___flsub@a+2
 13017   002E94  C17F  F04B         	movff	powf@u+3,___flsub@a+3
 13018   002E98  C1B4  F044         	movff	powf@z,___flsub@b
 13019   002E9C  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 13020   002EA0  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 13021   002EA4  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 13022   002EA8  EC5C  F03F         	call	___flsub	;wreg free
 13023   002EAC  C044  F19C         	movff	?___flsub,_powf$3190
 13024   002EB0  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 13025   002EB4  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 13026   002EB8  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 13027   002EBC  C180  F044         	movff	powf@v,___flsub@b
 13028   002EC0  C181  F045         	movff	powf@v+1,___flsub@b+1
 13029   002EC4  C182  F046         	movff	powf@v+2,___flsub@b+2
 13030   002EC8  C183  F047         	movff	powf@v+3,___flsub@b+3
 13031   002ECC  C19C  F048         	movff	_powf$3190,___flsub@a
 13032   002ED0  C19D  F049         	movff	_powf$3190+1,___flsub@a+1
 13033   002ED4  C19E  F04A         	movff	_powf$3190+2,___flsub@a+2
 13034   002ED8  C19F  F04B         	movff	_powf$3190+3,___flsub@a+3
 13035   002EDC  EC5C  F03F         	call	___flsub	;wreg free
 13036   002EE0  C044  F144         	movff	?___flsub,powf@w
 13037   002EE4  C045  F145         	movff	?___flsub+1,powf@w+1
 13038   002EE8  C046  F146         	movff	?___flsub+2,powf@w+2
 13039   002EEC  C047  F147         	movff	?___flsub+3,powf@w+3
 13040   002EF0  C1B4  F012         	movff	powf@z,___flmul@b
 13041   002EF4  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 13042   002EF8  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 13043   002EFC  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 13044   002F00  C1B4  F016         	movff	powf@z,___flmul@a
 13045   002F04  C1B5  F017         	movff	powf@z+1,___flmul@a+1
 13046   002F08  C1B6  F018         	movff	powf@z+2,___flmul@a+2
 13047   002F0C  C1B7  F019         	movff	powf@z+3,___flmul@a+3
 13048   002F10  EC44  F02A         	call	___flmul	;wreg free
 13049   002F14  C012  F1B0         	movff	?___flmul,powf@t
 13050   002F18  C013  F1B1         	movff	?___flmul+1,powf@t+1
 13051   002F1C  C014  F1B2         	movff	?___flmul+2,powf@t+2
 13052   002F20  C015  F1B3         	movff	?___flmul+3,powf@t+3
 13053   002F24  0E0E               	movlw	14
 13054   002F26  6E06               	movwf	___fladd@a^0,c
 13055   002F28  0EEA               	movlw	234
 13056   002F2A  6E07               	movwf	(___fladd@a+1)^0,c
 13057   002F2C  0EDD               	movlw	221
 13058   002F2E  6E08               	movwf	(___fladd@a+2)^0,c
 13059   002F30  0EB5               	movlw	181
 13060   002F32  6E09               	movwf	(___fladd@a+3)^0,c
 13061   002F34  0E4C               	movlw	76
 13062   002F36  6E16               	movwf	___flmul@a^0,c
 13063   002F38  0EBB               	movlw	187
 13064   002F3A  6E17               	movwf	(___flmul@a+1)^0,c
 13065   002F3C  0E31               	movlw	49
 13066   002F3E  6E18               	movwf	(___flmul@a+2)^0,c
 13067   002F40  0E33               	movlw	51
 13068   002F42  6E19               	movwf	(___flmul@a+3)^0,c
 13069   002F44  C1B0  F012         	movff	powf@t,___flmul@b
 13070   002F48  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 13071   002F4C  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 13072   002F50  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 13073   002F54  EC44  F02A         	call	___flmul	;wreg free
 13074   002F58  C012  F002         	movff	?___flmul,___fladd@b
 13075   002F5C  C013  F003         	movff	?___flmul+1,___fladd@b+1
 13076   002F60  C014  F004         	movff	?___flmul+2,___fladd@b+2
 13077   002F64  C015  F005         	movff	?___flmul+3,___fladd@b+3
 13078   002F68  ECE4  F027         	call	___fladd	;wreg free
 13079   002F6C  C002  F148         	movff	?___fladd,_powf$3187
 13080   002F70  C003  F149         	movff	?___fladd+1,_powf$3187+1
 13081   002F74  C004  F14A         	movff	?___fladd+2,_powf$3187+2
 13082   002F78  C005  F14B         	movff	?___fladd+3,_powf$3187+3
 13083   002F7C  0E55               	movlw	85
 13084   002F7E  6E06               	movwf	___fladd@a^0,c
 13085   002F80  0EB3               	movlw	179
 13086   002F82  6E07               	movwf	(___fladd@a+1)^0,c
 13087   002F84  0E8A               	movlw	138
 13088   002F86  6E08               	movwf	(___fladd@a+2)^0,c
 13089   002F88  0E38               	movlw	56
 13090   002F8A  6E09               	movwf	(___fladd@a+3)^0,c
 13091   002F8C  C1B0  F016         	movff	powf@t,___flmul@a
 13092   002F90  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 13093   002F94  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 13094   002F98  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 13095   002F9C  C148  F012         	movff	_powf$3187,___flmul@b
 13096   002FA0  C149  F013         	movff	_powf$3187+1,___flmul@b+1
 13097   002FA4  C14A  F014         	movff	_powf$3187+2,___flmul@b+2
 13098   002FA8  C14B  F015         	movff	_powf$3187+3,___flmul@b+3
 13099   002FAC  EC44  F02A         	call	___flmul	;wreg free
 13100   002FB0  C012  F002         	movff	?___flmul,___fladd@b
 13101   002FB4  C013  F003         	movff	?___flmul+1,___fladd@b+1
 13102   002FB8  C014  F004         	movff	?___flmul+2,___fladd@b+2
 13103   002FBC  C015  F005         	movff	?___flmul+3,___fladd@b+3
 13104   002FC0  ECE4  F027         	call	___fladd	;wreg free
 13105   002FC4  C002  F158         	movff	?___fladd,_powf$3188
 13106   002FC8  C003  F159         	movff	?___fladd+1,_powf$3188+1
 13107   002FCC  C004  F15A         	movff	?___fladd+2,_powf$3188+2
 13108   002FD0  C005  F15B         	movff	?___fladd+3,_powf$3188+3
 13109   002FD4  0E61               	movlw	97
 13110   002FD6  6E06               	movwf	___fladd@a^0,c
 13111   002FD8  0E0B               	movlw	11
 13112   002FDA  6E07               	movwf	(___fladd@a+1)^0,c
 13113   002FDC  0E36               	movlw	54
 13114   002FDE  6E08               	movwf	(___fladd@a+2)^0,c
 13115   002FE0  0EBB               	movlw	187
 13116   002FE2  6E09               	movwf	(___fladd@a+3)^0,c
 13117   002FE4  C1B0  F016         	movff	powf@t,___flmul@a
 13118   002FE8  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 13119   002FEC  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 13120   002FF0  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 13121   002FF4  C158  F012         	movff	_powf$3188,___flmul@b
 13122   002FF8  C159  F013         	movff	_powf$3188+1,___flmul@b+1
 13123   002FFC  C15A  F014         	movff	_powf$3188+2,___flmul@b+2
 13124   003000  C15B  F015         	movff	_powf$3188+3,___flmul@b+3
 13125   003004  EC44  F02A         	call	___flmul	;wreg free
 13126   003008  C012  F002         	movff	?___flmul,___fladd@b
 13127   00300C  C013  F003         	movff	?___flmul+1,___fladd@b+1
 13128   003010  C014  F004         	movff	?___flmul+2,___fladd@b+2
 13129   003014  C015  F005         	movff	?___flmul+3,___fladd@b+3
 13130   003018  ECE4  F027         	call	___fladd	;wreg free
 13131   00301C  C002  F14C         	movff	?___fladd,_powf$3189
 13132   003020  C003  F14D         	movff	?___fladd+1,_powf$3189+1
 13133   003024  C004  F14E         	movff	?___fladd+2,_powf$3189+2
 13134   003028  C005  F14F         	movff	?___fladd+3,_powf$3189+3
 13135   00302C  0EAB               	movlw	171
 13136   00302E  6E06               	movwf	___fladd@a^0,c
 13137   003030  0EAA               	movlw	170
 13138   003032  6E07               	movwf	(___fladd@a+1)^0,c
 13139   003034  0E2A               	movlw	42
 13140   003036  6E08               	movwf	(___fladd@a+2)^0,c
 13141   003038  0E3E               	movlw	62
 13142   00303A  6E09               	movwf	(___fladd@a+3)^0,c
 13143   00303C  C1B0  F016         	movff	powf@t,___flmul@a
 13144   003040  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 13145   003044  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 13146   003048  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 13147   00304C  C14C  F012         	movff	_powf$3189,___flmul@b
 13148   003050  C14D  F013         	movff	_powf$3189+1,___flmul@b+1
 13149   003054  C14E  F014         	movff	_powf$3189+2,___flmul@b+2
 13150   003058  C14F  F015         	movff	_powf$3189+3,___flmul@b+3
 13151   00305C  EC44  F02A         	call	___flmul	;wreg free
 13152   003060  C012  F002         	movff	?___flmul,___fladd@b
 13153   003064  C013  F003         	movff	?___flmul+1,___fladd@b+1
 13154   003068  C014  F004         	movff	?___flmul+2,___fladd@b+2
 13155   00306C  C015  F005         	movff	?___flmul+3,___fladd@b+3
 13156   003070  ECE4  F027         	call	___fladd	;wreg free
 13157   003074  C002  F138         	movff	?___fladd,_powf$3191
 13158   003078  C003  F139         	movff	?___fladd+1,_powf$3191+1
 13159   00307C  C004  F13A         	movff	?___fladd+2,_powf$3191+2
 13160   003080  C005  F13B         	movff	?___fladd+3,_powf$3191+3
 13161   003084  C1B4  F044         	movff	powf@z,___flsub@b
 13162   003088  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 13163   00308C  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 13164   003090  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 13165   003094  C1B0  F016         	movff	powf@t,___flmul@a
 13166   003098  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 13167   00309C  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 13168   0030A0  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 13169   0030A4  C138  F012         	movff	_powf$3191,___flmul@b
 13170   0030A8  C139  F013         	movff	_powf$3191+1,___flmul@b+1
 13171   0030AC  C13A  F014         	movff	_powf$3191+2,___flmul@b+2
 13172   0030B0  C13B  F015         	movff	_powf$3191+3,___flmul@b+3
 13173   0030B4  EC44  F02A         	call	___flmul	;wreg free
 13174   0030B8  C012  F048         	movff	?___flmul,___flsub@a
 13175   0030BC  C013  F049         	movff	?___flmul+1,___flsub@a+1
 13176   0030C0  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 13177   0030C4  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 13178   0030C8  EC5C  F03F         	call	___flsub	;wreg free
 13179   0030CC  C044  F18C         	movff	?___flsub,powf@t1
 13180   0030D0  C045  F18D         	movff	?___flsub+1,powf@t1+1
 13181   0030D4  C046  F18E         	movff	?___flsub+2,powf@t1+2
 13182   0030D8  C047  F18F         	movff	?___flsub+3,powf@t1+3
 13183   0030DC  0E00               	movlw	0
 13184   0030DE  6E06               	movwf	___fladd@a^0,c
 13185   0030E0  0E00               	movlw	0
 13186   0030E2  6E07               	movwf	(___fladd@a+1)^0,c
 13187   0030E4  0E00               	movlw	0
 13188   0030E6  6E08               	movwf	(___fladd@a+2)^0,c
 13189   0030E8  0EC0               	movlw	192
 13190   0030EA  6E09               	movwf	(___fladd@a+3)^0,c
 13191   0030EC  C18C  F002         	movff	powf@t1,___fladd@b
 13192   0030F0  C18D  F003         	movff	powf@t1+1,___fladd@b+1
 13193   0030F4  C18E  F004         	movff	powf@t1+2,___fladd@b+2
 13194   0030F8  C18F  F005         	movff	powf@t1+3,___fladd@b+3
 13195   0030FC  ECE4  F027         	call	___fladd	;wreg free
 13196   003100  C002  F02F         	movff	?___fladd,___fldiv@a
 13197   003104  C003  F030         	movff	?___fladd+1,___fldiv@a+1
 13198   003108  C004  F031         	movff	?___fladd+2,___fldiv@a+2
 13199   00310C  C005  F032         	movff	?___fladd+3,___fldiv@a+3
 13200   003110  C18C  F016         	movff	powf@t1,___flmul@a
 13201   003114  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 13202   003118  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 13203   00311C  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 13204   003120  C1B4  F012         	movff	powf@z,___flmul@b
 13205   003124  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 13206   003128  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 13207   00312C  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 13208   003130  EC44  F02A         	call	___flmul	;wreg free
 13209   003134  C012  F02B         	movff	?___flmul,___fldiv@b
 13210   003138  C013  F02C         	movff	?___flmul+1,___fldiv@b+1
 13211   00313C  C014  F02D         	movff	?___flmul+2,___fldiv@b+2
 13212   003140  C015  F02E         	movff	?___flmul+3,___fldiv@b+3
 13213   003144  EC48  F02E         	call	___fldiv	;wreg free
 13214   003148  C02B  F13C         	movff	?___fldiv,_powf$3195
 13215   00314C  C02C  F13D         	movff	?___fldiv+1,_powf$3195+1
 13216   003150  C02D  F13E         	movff	?___fldiv+2,_powf$3195+2
 13217   003154  C02E  F13F         	movff	?___fldiv+3,_powf$3195+3
 13218   003158  C144  F006         	movff	powf@w,___fladd@a
 13219   00315C  C145  F007         	movff	powf@w+1,___fladd@a+1
 13220   003160  C146  F008         	movff	powf@w+2,___fladd@a+2
 13221   003164  C147  F009         	movff	powf@w+3,___fladd@a+3
 13222   003168  C144  F016         	movff	powf@w,___flmul@a
 13223   00316C  C145  F017         	movff	powf@w+1,___flmul@a+1
 13224   003170  C146  F018         	movff	powf@w+2,___flmul@a+2
 13225   003174  C147  F019         	movff	powf@w+3,___flmul@a+3
 13226   003178  C1B4  F012         	movff	powf@z,___flmul@b
 13227   00317C  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 13228   003180  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 13229   003184  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 13230   003188  EC44  F02A         	call	___flmul	;wreg free
 13231   00318C  C012  F002         	movff	?___flmul,___fladd@b
 13232   003190  C013  F003         	movff	?___flmul+1,___fladd@b+1
 13233   003194  C014  F004         	movff	?___flmul+2,___fladd@b+2
 13234   003198  C015  F005         	movff	?___flmul+3,___fladd@b+3
 13235   00319C  ECE4  F027         	call	___fladd	;wreg free
 13236   0031A0  C002  F118         	movff	?___fladd,_powf$3201
 13237   0031A4  C003  F119         	movff	?___fladd+1,_powf$3201+1
 13238   0031A8  C004  F11A         	movff	?___fladd+2,_powf$3201+2
 13239   0031AC  C005  F11B         	movff	?___fladd+3,_powf$3201+3
 13240   0031B0  C13C  F044         	movff	_powf$3195,___flsub@b
 13241   0031B4  C13D  F045         	movff	_powf$3195+1,___flsub@b+1
 13242   0031B8  C13E  F046         	movff	_powf$3195+2,___flsub@b+2
 13243   0031BC  C13F  F047         	movff	_powf$3195+3,___flsub@b+3
 13244   0031C0  C118  F048         	movff	_powf$3201,___flsub@a
 13245   0031C4  C119  F049         	movff	_powf$3201+1,___flsub@a+1
 13246   0031C8  C11A  F04A         	movff	_powf$3201+2,___flsub@a+2
 13247   0031CC  C11B  F04B         	movff	_powf$3201+3,___flsub@a+3
 13248   0031D0  EC5C  F03F         	call	___flsub	;wreg free
 13249   0031D4  C044  F150         	movff	?___flsub,powf@r
 13250   0031D8  C045  F151         	movff	?___flsub+1,powf@r+1
 13251   0031DC  C046  F152         	movff	?___flsub+2,powf@r+2
 13252   0031E0  C047  F153         	movff	?___flsub+3,powf@r+3
 13253   0031E4  C1B4  F048         	movff	powf@z,___flsub@a
 13254   0031E8  C1B5  F049         	movff	powf@z+1,___flsub@a+1
 13255   0031EC  C1B6  F04A         	movff	powf@z+2,___flsub@a+2
 13256   0031F0  C1B7  F04B         	movff	powf@z+3,___flsub@a+3
 13257   0031F4  C150  F044         	movff	powf@r,___flsub@b
 13258   0031F8  C151  F045         	movff	powf@r+1,___flsub@b+1
 13259   0031FC  C152  F046         	movff	powf@r+2,___flsub@b+2
 13260   003200  C153  F047         	movff	powf@r+3,___flsub@b+3
 13261   003204  EC5C  F03F         	call	___flsub	;wreg free
 13262   003208  C044  F19C         	movff	?___flsub,_powf$3190
 13263   00320C  C045  F19D         	movff	?___flsub+1,_powf$3190+1
 13264   003210  C046  F19E         	movff	?___flsub+2,_powf$3190+2
 13265   003214  C047  F19F         	movff	?___flsub+3,_powf$3190+3
 13266   003218  0E00               	movlw	0
 13267   00321A  6E44               	movwf	___flsub@b^0,c
 13268   00321C  0E00               	movlw	0
 13269   00321E  6E45               	movwf	(___flsub@b+1)^0,c
 13270   003220  0E80               	movlw	128
 13271   003222  6E46               	movwf	(___flsub@b+2)^0,c
 13272   003224  0E3F               	movlw	63
 13273   003226  6E47               	movwf	(___flsub@b+3)^0,c
 13274   003228  C19C  F048         	movff	_powf$3190,___flsub@a
 13275   00322C  C19D  F049         	movff	_powf$3190+1,___flsub@a+1
 13276   003230  C19E  F04A         	movff	_powf$3190+2,___flsub@a+2
 13277   003234  C19F  F04B         	movff	_powf$3190+3,___flsub@a+3
 13278   003238  EC5C  F03F         	call	___flsub	;wreg free
 13279   00323C  C044  F1B4         	movff	?___flsub,powf@z
 13280   003240  C045  F1B5         	movff	?___flsub+1,powf@z+1
 13281   003244  C046  F1B6         	movff	?___flsub+2,powf@z+2
 13282   003248  C047  F1B7         	movff	?___flsub+3,powf@z+3
 13283   00324C  C1B4  F1A8         	movff	powf@z,powf@j
 13284   003250  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 13285   003254  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 13286   003258  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 13287   00325C  C188  F068         	movff	powf@n,??_powf
 13288   003260  C189  F069         	movff	powf@n+1,??_powf+1
 13289   003264  C18A  F06A         	movff	powf@n+2,??_powf+2
 13290   003268  C18B  F06B         	movff	powf@n+3,??_powf+3
 13291   00326C  0E17               	movlw	23
 13292   00326E                     u9135:
 13293   00326E  90D8               	bcf	status,0,c
 13294   003270  0100               	movlb	0	; () banked
 13295   003272  3768               	rlcf	??_powf& (0+255),f,b
 13296   003274  3769               	rlcf	(??_powf+1)& (0+255),f,b
 13297   003276  376A               	rlcf	(??_powf+2)& (0+255),f,b
 13298   003278  376B               	rlcf	(??_powf+3)& (0+255),f,b
 13299   00327A  2EE8               	decfsz	wreg,f,c
 13300   00327C  EF37  F019         	goto	u9135
 13301   003280  5168               	movf	??_powf& (0+255),w,b
 13302   003282  0101               	movlb	1	; () banked
 13303   003284  27A8               	addwf	powf@j& (0+255),f,b
 13304   003286  0100               	movlb	0	; () banked
 13305   003288  5169               	movf	(??_powf+1)& (0+255),w,b
 13306   00328A  0101               	movlb	1	; () banked
 13307   00328C  23A9               	addwfc	(powf@j+1)& (0+255),f,b
 13308   00328E  0100               	movlb	0	; () banked
 13309   003290  516A               	movf	(??_powf+2)& (0+255),w,b
 13310   003292  0101               	movlb	1	; () banked
 13311   003294  23AA               	addwfc	(powf@j+2)& (0+255),f,b
 13312   003296  0100               	movlb	0	; () banked
 13313   003298  516B               	movf	(??_powf+3)& (0+255),w,b
 13314   00329A  0101               	movlb	1	; () banked
 13315   00329C  23AB               	addwfc	(powf@j+3)& (0+255),f,b
 13316   00329E                     
 13317                           ; BSR set to: 1
 13318   00329E  0E17               	movlw	23
 13319   0032A0  0100               	movlb	0	; () banked
 13320   0032A2  6F68               	movwf	??_powf& (0+255),b
 13321   0032A4  C1A8  F069         	movff	powf@j,??_powf+1
 13322   0032A8  C1A9  F06A         	movff	powf@j+1,??_powf+2
 13323   0032AC  C1AA  F06B         	movff	powf@j+2,??_powf+3
 13324   0032B0  C1AB  F06C         	movff	powf@j+3,??_powf+4
 13325   0032B4                     u9145:
 13326   0032B4  6768               	tstfsz	??_powf& (0+255),b
 13327   0032B6  EF5F  F019         	goto	u9146
 13328   0032BA  EF67  F019         	goto	u9147
 13329   0032BE                     u9146:
 13330   0032BE  356C               	rlcf	(??_powf+4)& (0+255),w,b
 13331   0032C0  336C               	rrcf	(??_powf+4)& (0+255),f,b
 13332   0032C2  336B               	rrcf	(??_powf+3)& (0+255),f,b
 13333   0032C4  336A               	rrcf	(??_powf+2)& (0+255),f,b
 13334   0032C6  3369               	rrcf	(??_powf+1)& (0+255),f,b
 13335   0032C8  2F68               	decfsz	??_powf& (0+255),f,b
 13336   0032CA  EF5A  F019         	goto	u9145
 13337   0032CE                     u9147:
 13338   0032CE  0100               	movlb	0	; () banked
 13339   0032D0  BF6C               	btfsc	(??_powf+4)& (0+255),7,b
 13340   0032D2  EF77  F019         	goto	u9150
 13341   0032D6  516C               	movf	(??_powf+4)& (0+255),w,b
 13342   0032D8  116B               	iorwf	(??_powf+3)& (0+255),w,b
 13343   0032DA  116A               	iorwf	(??_powf+2)& (0+255),w,b
 13344   0032DC  E106               	bnz	u9151
 13345   0032DE  0569               	decf	(??_powf+1)& (0+255),w,b
 13346   0032E0  B0D8               	btfsc	status,0,c
 13347   0032E2  EF75  F019         	goto	u9151
 13348   0032E6  EF77  F019         	goto	u9150
 13349   0032EA                     u9151:
 13350   0032EA  EF8F  F019         	goto	l1545
 13351   0032EE                     u9150:
 13352   0032EE                     
 13353                           ; BSR set to: 0
 13354   0032EE  C1B4  F02B         	movff	powf@z,scalbnf@x
 13355   0032F2  C1B5  F02C         	movff	powf@z+1,scalbnf@x+1
 13356   0032F6  C1B6  F02D         	movff	powf@z+2,scalbnf@x+2
 13357   0032FA  C1B7  F02E         	movff	powf@z+3,scalbnf@x+3
 13358   0032FE  C188  F02F         	movff	powf@n,scalbnf@n
 13359   003302  C189  F030         	movff	powf@n+1,scalbnf@n+1
 13360   003306  ECBC  F031         	call	_scalbnf	;wreg free
 13361   00330A  C02B  F1B4         	movff	?_scalbnf,powf@z
 13362   00330E  C02C  F1B5         	movff	?_scalbnf+1,powf@z+1
 13363   003312  C02D  F1B6         	movff	?_scalbnf+2,powf@z+2
 13364   003316  C02E  F1B7         	movff	?_scalbnf+3,powf@z+3
 13365   00331A  EF97  F019         	goto	l8514
 13366   00331E                     l1545:
 13367                           
 13368                           ; BSR set to: 0
 13369   00331E  C1A8  F1B4         	movff	powf@j,powf@z
 13370   003322  C1A9  F1B5         	movff	powf@j+1,powf@z+1
 13371   003326  C1AA  F1B6         	movff	powf@j+2,powf@z+2
 13372   00332A  C1AB  F1B7         	movff	powf@j+3,powf@z+3
 13373   00332E                     l8514:
 13374   00332E  0101               	movlb	1	; () banked
 13375   003330  51B4               	movf	powf@z& (0+255),w,b
 13376   003332  11B5               	iorwf	(powf@z+1)& (0+255),w,b
 13377   003334  11B6               	iorwf	(powf@z+2)& (0+255),w,b
 13378   003336  11B7               	iorwf	(powf@z+3)& (0+255),w,b
 13379   003338  B4D8               	btfsc	status,2,c
 13380   00333A  EFA1  F019         	goto	u9161
 13381   00333E  EFA3  F019         	goto	u9160
 13382   003342                     u9161:
 13383   003342  EFA4  F00A         	goto	l8200
 13384   003346                     u9160:
 13385   003346                     
 13386                           ; BSR set to: 1
 13387   003346  5164               	movf	powf@sn& (0+255),w,b
 13388   003348  1BB4               	xorwf	powf@z& (0+255),f,b
 13389   00334A  5165               	movf	(powf@sn+1)& (0+255),w,b
 13390   00334C  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
 13391   00334E  5166               	movf	(powf@sn+2)& (0+255),w,b
 13392   003350  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
 13393   003352  5167               	movf	(powf@sn+3)& (0+255),w,b
 13394   003354  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
 13395   003356  EFA4  F00A         	goto	l8200
 13396   00335A                     l1479:
 13397   00335A  0012               	return		;funcret
 13398   00335C                     __end_of_powf:
 13399                           	callstack 0
 13400                           
 13401 ;; *************** function _sqrtf *****************
 13402 ;; Defined at:
 13403 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sqrtf.c"
 13404 ;; Parameters:    Size  Location     Type
 13405 ;;  x               4   17[COMRAM] float 
 13406 ;; Auto vars:     Size  Location     Type
 13407 ;;  ix              4   50[COMRAM] struct .
 13408 ;;  r               4   46[COMRAM] unsigned long 
 13409 ;;  m               4   42[COMRAM] long 
 13410 ;;  t               4   38[COMRAM] long 
 13411 ;;  q               4   34[COMRAM] long 
 13412 ;;  i               4   30[COMRAM] long 
 13413 ;;  s               4   26[COMRAM] long 
 13414 ;;  z               4    0        float 
 13415 ;; Return value:  Size  Location     Type
 13416 ;;                  4   17[COMRAM] float 
 13417 ;; Registers used:
 13418 ;;		wreg, status,2, status,0
 13419 ;; Tracked objects:
 13420 ;;		On entry : 0/0
 13421 ;;		On exit  : 0/0
 13422 ;;		Unchanged: 0/0
 13423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13425 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13426 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13427 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13428 ;;Total ram usage:       37 bytes
 13429 ;; Hardware stack levels used: 1
 13430 ;; Hardware stack levels required when called: 2
 13431 ;; This function calls:
 13432 ;;		Nothing
 13433 ;; This function is called by:
 13434 ;;		_decide_action
 13435 ;;		_powf
 13436 ;; This function uses a non-reentrant model
 13437 ;;
 13438                           
 13439                           	psect	text39
 13440   0058B2                     __ptext39:
 13441                           	callstack 0
 13442   0058B2                     _sqrtf:
 13443                           	callstack 27
 13444   0058B2  C012  F033         	movff	sqrtf@x,sqrtf@ix
 13445   0058B6  C013  F034         	movff	sqrtf@x+1,sqrtf@ix+1
 13446   0058BA  C014  F035         	movff	sqrtf@x+2,sqrtf@ix+2
 13447   0058BE  C015  F036         	movff	sqrtf@x+3,sqrtf@ix+3
 13448   0058C2  0E00               	movlw	0
 13449   0058C4  1433               	andwf	sqrtf@ix^0,w,c
 13450   0058C6  6E16               	movwf	??_sqrtf^0,c
 13451   0058C8  0E00               	movlw	0
 13452   0058CA  1434               	andwf	(sqrtf@ix+1)^0,w,c
 13453   0058CC  6E17               	movwf	(??_sqrtf+1)^0,c
 13454   0058CE  0E80               	movlw	128
 13455   0058D0  1435               	andwf	(sqrtf@ix+2)^0,w,c
 13456   0058D2  6E18               	movwf	(??_sqrtf+2)^0,c
 13457   0058D4  0E7F               	movlw	127
 13458   0058D6  1436               	andwf	(sqrtf@ix+3)^0,w,c
 13459   0058D8  6E19               	movwf	(??_sqrtf+3)^0,c
 13460   0058DA  0E80               	movlw	128
 13461   0058DC  1818               	xorwf	(??_sqrtf+2)^0,w,c
 13462   0058DE  E109               	bnz	u5221
 13463   0058E0  0E7F               	movlw	127
 13464   0058E2  1819               	xorwf	(??_sqrtf+3)^0,w,c
 13465   0058E4  1016               	iorwf	??_sqrtf^0,w,c
 13466   0058E6  1017               	iorwf	(??_sqrtf+1)^0,w,c
 13467   0058E8  A4D8               	btfss	status,2,c
 13468   0058EA  EF79  F02C         	goto	u5221
 13469   0058EE  EF7B  F02C         	goto	u5220
 13470   0058F2                     u5221:
 13471   0058F2  EFAB  F02C         	goto	l5424
 13472   0058F6                     u5220:
 13473   0058F6  0EFF               	movlw	255
 13474   0058F8  1433               	andwf	sqrtf@ix^0,w,c
 13475   0058FA  6E16               	movwf	??_sqrtf^0,c
 13476   0058FC  0EFF               	movlw	255
 13477   0058FE  1434               	andwf	(sqrtf@ix+1)^0,w,c
 13478   005900  6E17               	movwf	(??_sqrtf+1)^0,c
 13479   005902  0E7F               	movlw	127
 13480   005904  1435               	andwf	(sqrtf@ix+2)^0,w,c
 13481   005906  6E18               	movwf	(??_sqrtf+2)^0,c
 13482   005908  0E00               	movlw	0
 13483   00590A  1436               	andwf	(sqrtf@ix+3)^0,w,c
 13484   00590C  6E19               	movwf	(??_sqrtf+3)^0,c
 13485   00590E  5016               	movf	??_sqrtf^0,w,c
 13486   005910  1017               	iorwf	(??_sqrtf+1)^0,w,c
 13487   005912  1018               	iorwf	(??_sqrtf+2)^0,w,c
 13488   005914  1019               	iorwf	(??_sqrtf+3)^0,w,c
 13489   005916  A4D8               	btfss	status,2,c
 13490   005918  EF90  F02C         	goto	u5231
 13491   00591C  EF92  F02C         	goto	u5230
 13492   005920                     u5231:
 13493   005920  EF99  F02C         	goto	l5418
 13494   005924                     u5230:
 13495   005924  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 13496   005926  EF99  F02C         	goto	u5240
 13497   00592A  EF97  F02C         	goto	u5241
 13498   00592E                     u5241:
 13499   00592E  EFA1  F02C         	goto	l5420
 13500   005932                     u5240:
 13501   005932                     l5418:
 13502   005932  0EFF               	movlw	255
 13503   005934  1233               	iorwf	sqrtf@ix^0,f,c
 13504   005936  0EFF               	movlw	255
 13505   005938  1234               	iorwf	(sqrtf@ix+1)^0,f,c
 13506   00593A  0E7F               	movlw	127
 13507   00593C  1235               	iorwf	(sqrtf@ix+2)^0,f,c
 13508   00593E  0E00               	movlw	0
 13509   005940  1236               	iorwf	(sqrtf@ix+3)^0,f,c
 13510   005942                     l5420:
 13511   005942  C033  F012         	movff	sqrtf@ix,?_sqrtf
 13512   005946  C034  F013         	movff	sqrtf@ix+1,?_sqrtf+1
 13513   00594A  C035  F014         	movff	sqrtf@ix+2,?_sqrtf+2
 13514   00594E  C036  F015         	movff	sqrtf@ix+3,?_sqrtf+3
 13515   005952  EF47  F02E         	goto	l1571
 13516   005956                     l5424:
 13517   005956  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 13518   005958  EFBA  F02C         	goto	u5250
 13519   00595C  5036               	movf	(sqrtf@ix+3)^0,w,c
 13520   00595E  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 13521   005960  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 13522   005962  E106               	bnz	u5251
 13523   005964  0433               	decf	sqrtf@ix^0,w,c
 13524   005966  B0D8               	btfsc	status,0,c
 13525   005968  EFB8  F02C         	goto	u5251
 13526   00596C  EFBA  F02C         	goto	u5250
 13527   005970                     u5251:
 13528   005970  EFF1  F02C         	goto	l5440
 13529   005974                     u5250:
 13530   005974  0EFF               	movlw	255
 13531   005976  1433               	andwf	sqrtf@ix^0,w,c
 13532   005978  6E16               	movwf	??_sqrtf^0,c
 13533   00597A  0EFF               	movlw	255
 13534   00597C  1434               	andwf	(sqrtf@ix+1)^0,w,c
 13535   00597E  6E17               	movwf	(??_sqrtf+1)^0,c
 13536   005980  0EFF               	movlw	255
 13537   005982  1435               	andwf	(sqrtf@ix+2)^0,w,c
 13538   005984  6E18               	movwf	(??_sqrtf+2)^0,c
 13539   005986  0E7F               	movlw	127
 13540   005988  1436               	andwf	(sqrtf@ix+3)^0,w,c
 13541   00598A  6E19               	movwf	(??_sqrtf+3)^0,c
 13542   00598C  5016               	movf	??_sqrtf^0,w,c
 13543   00598E  1017               	iorwf	(??_sqrtf+1)^0,w,c
 13544   005990  1018               	iorwf	(??_sqrtf+2)^0,w,c
 13545   005992  1019               	iorwf	(??_sqrtf+3)^0,w,c
 13546   005994  A4D8               	btfss	status,2,c
 13547   005996  EFCF  F02C         	goto	u5261
 13548   00599A  EFD1  F02C         	goto	u5260
 13549   00599E                     u5261:
 13550   00599E  EFDB  F02C         	goto	l5432
 13551   0059A2                     u5260:
 13552   0059A2  0E00               	movlw	0
 13553   0059A4  6E12               	movwf	?_sqrtf^0,c
 13554   0059A6  0E00               	movlw	0
 13555   0059A8  6E13               	movwf	(?_sqrtf+1)^0,c
 13556   0059AA  0E00               	movlw	0
 13557   0059AC  6E14               	movwf	(?_sqrtf+2)^0,c
 13558   0059AE  0E00               	movlw	0
 13559   0059B0  6E15               	movwf	(?_sqrtf+3)^0,c
 13560   0059B2  EF47  F02E         	goto	l1571
 13561   0059B6                     l5432:
 13562   0059B6  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 13563   0059B8  EFE2  F02C         	goto	u5270
 13564   0059BC  EFE0  F02C         	goto	u5271
 13565   0059C0                     u5271:
 13566   0059C0  EFF1  F02C         	goto	l5440
 13567   0059C4                     u5270:
 13568   0059C4  0E00               	movlw	0
 13569   0059C6  0100               	movlb	0	; () banked
 13570   0059C8  6FD8               	movwf	(_errno+1)& (0+255),b
 13571   0059CA  0E21               	movlw	33
 13572   0059CC  6FD7               	movwf	_errno& (0+255),b
 13573   0059CE  0EFF               	movlw	255
 13574   0059D0  6E33               	movwf	sqrtf@ix^0,c
 13575   0059D2  0EFF               	movlw	255
 13576   0059D4  6E34               	movwf	(sqrtf@ix+1)^0,c
 13577   0059D6  0EFF               	movlw	255
 13578   0059D8  6E35               	movwf	(sqrtf@ix+2)^0,c
 13579   0059DA  0E7F               	movlw	127
 13580   0059DC  6E36               	movwf	(sqrtf@ix+3)^0,c
 13581   0059DE  EFA1  F02C         	goto	l5420
 13582   0059E2                     l5440:
 13583   0059E2  0E17               	movlw	23
 13584   0059E4  6E16               	movwf	??_sqrtf^0,c
 13585   0059E6  C033  F017         	movff	sqrtf@ix,??_sqrtf+1
 13586   0059EA  C034  F018         	movff	sqrtf@ix+1,??_sqrtf+2
 13587   0059EE  C035  F019         	movff	sqrtf@ix+2,??_sqrtf+3
 13588   0059F2  C036  F01A         	movff	sqrtf@ix+3,??_sqrtf+4
 13589   0059F6                     u5285:
 13590   0059F6  6616               	tstfsz	??_sqrtf^0,c
 13591   0059F8  EF00  F02D         	goto	u5286
 13592   0059FC  EF08  F02D         	goto	u5287
 13593   005A00                     u5286:
 13594   005A00  341A               	rlcf	(??_sqrtf+4)^0,w,c
 13595   005A02  321A               	rrcf	(??_sqrtf+4)^0,f,c
 13596   005A04  3219               	rrcf	(??_sqrtf+3)^0,f,c
 13597   005A06  3218               	rrcf	(??_sqrtf+2)^0,f,c
 13598   005A08  3217               	rrcf	(??_sqrtf+1)^0,f,c
 13599   005A0A  2E16               	decfsz	??_sqrtf^0,f,c
 13600   005A0C  EFFB  F02C         	goto	u5285
 13601   005A10                     u5287:
 13602   005A10  C017  F02B         	movff	??_sqrtf+1,sqrtf@m
 13603   005A14  C018  F02C         	movff	??_sqrtf+2,sqrtf@m+1
 13604   005A18  C019  F02D         	movff	??_sqrtf+3,sqrtf@m+2
 13605   005A1C  C01A  F02E         	movff	??_sqrtf+4,sqrtf@m+3
 13606   005A20  502B               	movf	sqrtf@m^0,w,c
 13607   005A22  102C               	iorwf	(sqrtf@m+1)^0,w,c
 13608   005A24  102D               	iorwf	(sqrtf@m+2)^0,w,c
 13609   005A26  102E               	iorwf	(sqrtf@m+3)^0,w,c
 13610   005A28  A4D8               	btfss	status,2,c
 13611   005A2A  EF19  F02D         	goto	u5291
 13612   005A2E  EF1B  F02D         	goto	u5290
 13613   005A32                     u5291:
 13614   005A32  EF4B  F02D         	goto	l1575
 13615   005A36                     u5290:
 13616   005A36  0E00               	movlw	0
 13617   005A38  6E1F               	movwf	sqrtf@i^0,c
 13618   005A3A  0E00               	movlw	0
 13619   005A3C  6E20               	movwf	(sqrtf@i+1)^0,c
 13620   005A3E  0E00               	movlw	0
 13621   005A40  6E21               	movwf	(sqrtf@i+2)^0,c
 13622   005A42  0E00               	movlw	0
 13623   005A44  6E22               	movwf	(sqrtf@i+3)^0,c
 13624   005A46  EF30  F02D         	goto	l5448
 13625   005A4A                     l5444:
 13626   005A4A  90D8               	bcf	status,0,c
 13627   005A4C  3633               	rlcf	sqrtf@ix^0,f,c
 13628   005A4E  3634               	rlcf	(sqrtf@ix+1)^0,f,c
 13629   005A50  3635               	rlcf	(sqrtf@ix+2)^0,f,c
 13630   005A52  3636               	rlcf	(sqrtf@ix+3)^0,f,c
 13631   005A54  0E01               	movlw	1
 13632   005A56  261F               	addwf	sqrtf@i^0,f,c
 13633   005A58  0E00               	movlw	0
 13634   005A5A  2220               	addwfc	(sqrtf@i+1)^0,f,c
 13635   005A5C  2221               	addwfc	(sqrtf@i+2)^0,f,c
 13636   005A5E  2222               	addwfc	(sqrtf@i+3)^0,f,c
 13637   005A60                     l5448:
 13638   005A60  AE35               	btfss	(sqrtf@ix+2)^0,7,c
 13639   005A62  EF35  F02D         	goto	u5301
 13640   005A66  EF37  F02D         	goto	u5300
 13641   005A6A                     u5301:
 13642   005A6A  EF25  F02D         	goto	l5444
 13643   005A6E                     u5300:
 13644   005A6E  0EFF               	movlw	255
 13645   005A70  241F               	addwf	sqrtf@i^0,w,c
 13646   005A72  6E16               	movwf	??_sqrtf^0,c
 13647   005A74  0EFF               	movlw	255
 13648   005A76  2020               	addwfc	(sqrtf@i+1)^0,w,c
 13649   005A78  6E17               	movwf	(??_sqrtf+1)^0,c
 13650   005A7A  0EFF               	movlw	255
 13651   005A7C  2021               	addwfc	(sqrtf@i+2)^0,w,c
 13652   005A7E  6E18               	movwf	(??_sqrtf+2)^0,c
 13653   005A80  0EFF               	movlw	255
 13654   005A82  2022               	addwfc	(sqrtf@i+3)^0,w,c
 13655   005A84  6E19               	movwf	(??_sqrtf+3)^0,c
 13656   005A86  5016               	movf	??_sqrtf^0,w,c
 13657   005A88  5E2B               	subwf	sqrtf@m^0,f,c
 13658   005A8A  5017               	movf	(??_sqrtf+1)^0,w,c
 13659   005A8C  5A2C               	subwfb	(sqrtf@m+1)^0,f,c
 13660   005A8E  5018               	movf	(??_sqrtf+2)^0,w,c
 13661   005A90  5A2D               	subwfb	(sqrtf@m+2)^0,f,c
 13662   005A92  5019               	movf	(??_sqrtf+3)^0,w,c
 13663   005A94  5A2E               	subwfb	(sqrtf@m+3)^0,f,c
 13664   005A96                     l1575:
 13665   005A96  0E81               	movlw	129
 13666   005A98  262B               	addwf	sqrtf@m^0,f,c
 13667   005A9A  0EFF               	movlw	255
 13668   005A9C  222C               	addwfc	(sqrtf@m+1)^0,f,c
 13669   005A9E  0EFF               	movlw	255
 13670   005AA0  222D               	addwfc	(sqrtf@m+2)^0,f,c
 13671   005AA2  0EFF               	movlw	255
 13672   005AA4  222E               	addwfc	(sqrtf@m+3)^0,f,c
 13673   005AA6  0EFF               	movlw	255
 13674   005AA8  1433               	andwf	sqrtf@ix^0,w,c
 13675   005AAA  6E16               	movwf	??_sqrtf^0,c
 13676   005AAC  0EFF               	movlw	255
 13677   005AAE  1434               	andwf	(sqrtf@ix+1)^0,w,c
 13678   005AB0  6E17               	movwf	(??_sqrtf+1)^0,c
 13679   005AB2  0E7F               	movlw	127
 13680   005AB4  1435               	andwf	(sqrtf@ix+2)^0,w,c
 13681   005AB6  6E18               	movwf	(??_sqrtf+2)^0,c
 13682   005AB8  0E00               	movlw	0
 13683   005ABA  1436               	andwf	(sqrtf@ix+3)^0,w,c
 13684   005ABC  6E19               	movwf	(??_sqrtf+3)^0,c
 13685   005ABE  0E00               	movlw	0
 13686   005AC0  1016               	iorwf	??_sqrtf^0,w,c
 13687   005AC2  6E33               	movwf	sqrtf@ix^0,c
 13688   005AC4  0E00               	movlw	0
 13689   005AC6  1017               	iorwf	(??_sqrtf+1)^0,w,c
 13690   005AC8  6E34               	movwf	(sqrtf@ix+1)^0,c
 13691   005ACA  0E80               	movlw	128
 13692   005ACC  1018               	iorwf	(??_sqrtf+2)^0,w,c
 13693   005ACE  6E35               	movwf	(sqrtf@ix+2)^0,c
 13694   005AD0  0E00               	movlw	0
 13695   005AD2  1019               	iorwf	(??_sqrtf+3)^0,w,c
 13696   005AD4  6E36               	movwf	(sqrtf@ix+3)^0,c
 13697   005AD6  A02B               	btfss	sqrtf@m^0,0,c
 13698   005AD8  EF70  F02D         	goto	u5311
 13699   005ADC  EF72  F02D         	goto	u5310
 13700   005AE0                     u5311:
 13701   005AE0  EF7A  F02D         	goto	l1579
 13702   005AE4                     u5310:
 13703   005AE4  5033               	movf	sqrtf@ix^0,w,c
 13704   005AE6  2633               	addwf	sqrtf@ix^0,f,c
 13705   005AE8  5034               	movf	(sqrtf@ix+1)^0,w,c
 13706   005AEA  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 13707   005AEC  5035               	movf	(sqrtf@ix+2)^0,w,c
 13708   005AEE  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 13709   005AF0  5036               	movf	(sqrtf@ix+3)^0,w,c
 13710   005AF2  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 13711   005AF4                     l1579:
 13712   005AF4  342E               	rlcf	(sqrtf@m+3)^0,w,c
 13713   005AF6  322E               	rrcf	(sqrtf@m+3)^0,f,c
 13714   005AF8  322D               	rrcf	(sqrtf@m+2)^0,f,c
 13715   005AFA  322C               	rrcf	(sqrtf@m+1)^0,f,c
 13716   005AFC  322B               	rrcf	sqrtf@m^0,f,c
 13717   005AFE  5033               	movf	sqrtf@ix^0,w,c
 13718   005B00  2633               	addwf	sqrtf@ix^0,f,c
 13719   005B02  5034               	movf	(sqrtf@ix+1)^0,w,c
 13720   005B04  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 13721   005B06  5035               	movf	(sqrtf@ix+2)^0,w,c
 13722   005B08  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 13723   005B0A  5036               	movf	(sqrtf@ix+3)^0,w,c
 13724   005B0C  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 13725   005B0E  0E00               	movlw	0
 13726   005B10  6E1B               	movwf	sqrtf@s^0,c
 13727   005B12  0E00               	movlw	0
 13728   005B14  6E1C               	movwf	(sqrtf@s+1)^0,c
 13729   005B16  0E00               	movlw	0
 13730   005B18  6E1D               	movwf	(sqrtf@s+2)^0,c
 13731   005B1A  0E00               	movlw	0
 13732   005B1C  6E1E               	movwf	(sqrtf@s+3)^0,c
 13733   005B1E  C01B  F023         	movff	sqrtf@s,sqrtf@q
 13734   005B22  C01C  F024         	movff	sqrtf@s+1,sqrtf@q+1
 13735   005B26  C01D  F025         	movff	sqrtf@s+2,sqrtf@q+2
 13736   005B2A  C01E  F026         	movff	sqrtf@s+3,sqrtf@q+3
 13737   005B2E  0E00               	movlw	0
 13738   005B30  6E2F               	movwf	sqrtf@r^0,c
 13739   005B32  0E00               	movlw	0
 13740   005B34  6E30               	movwf	(sqrtf@r+1)^0,c
 13741   005B36  0E00               	movlw	0
 13742   005B38  6E31               	movwf	(sqrtf@r+2)^0,c
 13743   005B3A  0E01               	movlw	1
 13744   005B3C  6E32               	movwf	(sqrtf@r+3)^0,c
 13745   005B3E  EFE9  F02D         	goto	l5466
 13746   005B42                     l5460:
 13747   005B42  501B               	movf	sqrtf@s^0,w,c
 13748   005B44  242F               	addwf	sqrtf@r^0,w,c
 13749   005B46  6E27               	movwf	sqrtf@t^0,c
 13750   005B48  501C               	movf	(sqrtf@s+1)^0,w,c
 13751   005B4A  2030               	addwfc	(sqrtf@r+1)^0,w,c
 13752   005B4C  6E28               	movwf	(sqrtf@t+1)^0,c
 13753   005B4E  501D               	movf	(sqrtf@s+2)^0,w,c
 13754   005B50  2031               	addwfc	(sqrtf@r+2)^0,w,c
 13755   005B52  6E29               	movwf	(sqrtf@t+2)^0,c
 13756   005B54  501E               	movf	(sqrtf@s+3)^0,w,c
 13757   005B56  2032               	addwfc	(sqrtf@r+3)^0,w,c
 13758   005B58  6E2A               	movwf	(sqrtf@t+3)^0,c
 13759   005B5A  5027               	movf	sqrtf@t^0,w,c
 13760   005B5C  5C33               	subwf	sqrtf@ix^0,w,c
 13761   005B5E  5028               	movf	(sqrtf@t+1)^0,w,c
 13762   005B60  5834               	subwfb	(sqrtf@ix+1)^0,w,c
 13763   005B62  5029               	movf	(sqrtf@t+2)^0,w,c
 13764   005B64  5835               	subwfb	(sqrtf@ix+2)^0,w,c
 13765   005B66  5036               	movf	(sqrtf@ix+3)^0,w,c
 13766   005B68  0A80               	xorlw	128
 13767   005B6A  6E16               	movwf	??_sqrtf^0,c
 13768   005B6C  502A               	movf	(sqrtf@t+3)^0,w,c
 13769   005B6E  0A80               	xorlw	128
 13770   005B70  5816               	subwfb	??_sqrtf^0,w,c
 13771   005B72  A0D8               	btfss	status,0,c
 13772   005B74  EFBE  F02D         	goto	u5321
 13773   005B78  EFC0  F02D         	goto	u5320
 13774   005B7C                     u5321:
 13775   005B7C  EFDC  F02D         	goto	l1582
 13776   005B80                     u5320:
 13777   005B80  5027               	movf	sqrtf@t^0,w,c
 13778   005B82  242F               	addwf	sqrtf@r^0,w,c
 13779   005B84  6E1B               	movwf	sqrtf@s^0,c
 13780   005B86  5028               	movf	(sqrtf@t+1)^0,w,c
 13781   005B88  2030               	addwfc	(sqrtf@r+1)^0,w,c
 13782   005B8A  6E1C               	movwf	(sqrtf@s+1)^0,c
 13783   005B8C  5029               	movf	(sqrtf@t+2)^0,w,c
 13784   005B8E  2031               	addwfc	(sqrtf@r+2)^0,w,c
 13785   005B90  6E1D               	movwf	(sqrtf@s+2)^0,c
 13786   005B92  502A               	movf	(sqrtf@t+3)^0,w,c
 13787   005B94  2032               	addwfc	(sqrtf@r+3)^0,w,c
 13788   005B96  6E1E               	movwf	(sqrtf@s+3)^0,c
 13789   005B98  5027               	movf	sqrtf@t^0,w,c
 13790   005B9A  5E33               	subwf	sqrtf@ix^0,f,c
 13791   005B9C  5028               	movf	(sqrtf@t+1)^0,w,c
 13792   005B9E  5A34               	subwfb	(sqrtf@ix+1)^0,f,c
 13793   005BA0  5029               	movf	(sqrtf@t+2)^0,w,c
 13794   005BA2  5A35               	subwfb	(sqrtf@ix+2)^0,f,c
 13795   005BA4  502A               	movf	(sqrtf@t+3)^0,w,c
 13796   005BA6  5A36               	subwfb	(sqrtf@ix+3)^0,f,c
 13797   005BA8  502F               	movf	sqrtf@r^0,w,c
 13798   005BAA  2623               	addwf	sqrtf@q^0,f,c
 13799   005BAC  5030               	movf	(sqrtf@r+1)^0,w,c
 13800   005BAE  2224               	addwfc	(sqrtf@q+1)^0,f,c
 13801   005BB0  5031               	movf	(sqrtf@r+2)^0,w,c
 13802   005BB2  2225               	addwfc	(sqrtf@q+2)^0,f,c
 13803   005BB4  5032               	movf	(sqrtf@r+3)^0,w,c
 13804   005BB6  2226               	addwfc	(sqrtf@q+3)^0,f,c
 13805   005BB8                     l1582:
 13806   005BB8  5033               	movf	sqrtf@ix^0,w,c
 13807   005BBA  2633               	addwf	sqrtf@ix^0,f,c
 13808   005BBC  5034               	movf	(sqrtf@ix+1)^0,w,c
 13809   005BBE  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 13810   005BC0  5035               	movf	(sqrtf@ix+2)^0,w,c
 13811   005BC2  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 13812   005BC4  5036               	movf	(sqrtf@ix+3)^0,w,c
 13813   005BC6  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 13814   005BC8  90D8               	bcf	status,0,c
 13815   005BCA  3232               	rrcf	(sqrtf@r+3)^0,f,c
 13816   005BCC  3231               	rrcf	(sqrtf@r+2)^0,f,c
 13817   005BCE  3230               	rrcf	(sqrtf@r+1)^0,f,c
 13818   005BD0  322F               	rrcf	sqrtf@r^0,f,c
 13819   005BD2                     l5466:
 13820   005BD2  502F               	movf	sqrtf@r^0,w,c
 13821   005BD4  1030               	iorwf	(sqrtf@r+1)^0,w,c
 13822   005BD6  1031               	iorwf	(sqrtf@r+2)^0,w,c
 13823   005BD8  1032               	iorwf	(sqrtf@r+3)^0,w,c
 13824   005BDA  A4D8               	btfss	status,2,c
 13825   005BDC  EFF2  F02D         	goto	u5331
 13826   005BE0  EFF4  F02D         	goto	u5330
 13827   005BE4                     u5331:
 13828   005BE4  EFA1  F02D         	goto	l5460
 13829   005BE8                     u5330:
 13830   005BE8  5033               	movf	sqrtf@ix^0,w,c
 13831   005BEA  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 13832   005BEC  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 13833   005BEE  1036               	iorwf	(sqrtf@ix+3)^0,w,c
 13834   005BF0  B4D8               	btfsc	status,2,c
 13835   005BF2  EFFD  F02D         	goto	u5341
 13836   005BF6  EFFF  F02D         	goto	u5340
 13837   005BFA                     u5341:
 13838   005BFA  EF13  F02E         	goto	l1584
 13839   005BFE                     u5340:
 13840   005BFE  0E01               	movlw	1
 13841   005C00  1423               	andwf	sqrtf@q^0,w,c
 13842   005C02  6E16               	movwf	??_sqrtf^0,c
 13843   005C04  0E00               	movlw	0
 13844   005C06  1424               	andwf	(sqrtf@q+1)^0,w,c
 13845   005C08  6E17               	movwf	(??_sqrtf+1)^0,c
 13846   005C0A  0E00               	movlw	0
 13847   005C0C  1425               	andwf	(sqrtf@q+2)^0,w,c
 13848   005C0E  6E18               	movwf	(??_sqrtf+2)^0,c
 13849   005C10  0E00               	movlw	0
 13850   005C12  1426               	andwf	(sqrtf@q+3)^0,w,c
 13851   005C14  6E19               	movwf	(??_sqrtf+3)^0,c
 13852   005C16  5016               	movf	??_sqrtf^0,w,c
 13853   005C18  2623               	addwf	sqrtf@q^0,f,c
 13854   005C1A  5017               	movf	(??_sqrtf+1)^0,w,c
 13855   005C1C  2224               	addwfc	(sqrtf@q+1)^0,f,c
 13856   005C1E  5018               	movf	(??_sqrtf+2)^0,w,c
 13857   005C20  2225               	addwfc	(sqrtf@q+2)^0,f,c
 13858   005C22  5019               	movf	(??_sqrtf+3)^0,w,c
 13859   005C24  2226               	addwfc	(sqrtf@q+3)^0,f,c
 13860   005C26                     l1584:
 13861   005C26  C023  F016         	movff	sqrtf@q,??_sqrtf
 13862   005C2A  C024  F017         	movff	sqrtf@q+1,??_sqrtf+1
 13863   005C2E  C025  F018         	movff	sqrtf@q+2,??_sqrtf+2
 13864   005C32  C026  F019         	movff	sqrtf@q+3,??_sqrtf+3
 13865   005C36  3419               	rlcf	(??_sqrtf+3)^0,w,c
 13866   005C38  3219               	rrcf	(??_sqrtf+3)^0,f,c
 13867   005C3A  3218               	rrcf	(??_sqrtf+2)^0,f,c
 13868   005C3C  3217               	rrcf	(??_sqrtf+1)^0,f,c
 13869   005C3E  3216               	rrcf	??_sqrtf^0,f,c
 13870   005C40  0E00               	movlw	0
 13871   005C42  2416               	addwf	??_sqrtf^0,w,c
 13872   005C44  6E33               	movwf	sqrtf@ix^0,c
 13873   005C46  0E00               	movlw	0
 13874   005C48  2017               	addwfc	(??_sqrtf+1)^0,w,c
 13875   005C4A  6E34               	movwf	(sqrtf@ix+1)^0,c
 13876   005C4C  0E00               	movlw	0
 13877   005C4E  2018               	addwfc	(??_sqrtf+2)^0,w,c
 13878   005C50  6E35               	movwf	(sqrtf@ix+2)^0,c
 13879   005C52  0E3F               	movlw	63
 13880   005C54  2019               	addwfc	(??_sqrtf+3)^0,w,c
 13881   005C56  6E36               	movwf	(sqrtf@ix+3)^0,c
 13882   005C58  C02B  F016         	movff	sqrtf@m,??_sqrtf
 13883   005C5C  C02C  F017         	movff	sqrtf@m+1,??_sqrtf+1
 13884   005C60  C02D  F018         	movff	sqrtf@m+2,??_sqrtf+2
 13885   005C64  C02E  F019         	movff	sqrtf@m+3,??_sqrtf+3
 13886   005C68  0E17               	movlw	23
 13887   005C6A                     u5355:
 13888   005C6A  90D8               	bcf	status,0,c
 13889   005C6C  3616               	rlcf	??_sqrtf^0,f,c
 13890   005C6E  3617               	rlcf	(??_sqrtf+1)^0,f,c
 13891   005C70  3618               	rlcf	(??_sqrtf+2)^0,f,c
 13892   005C72  3619               	rlcf	(??_sqrtf+3)^0,f,c
 13893   005C74  2EE8               	decfsz	wreg,f,c
 13894   005C76  EF35  F02E         	goto	u5355
 13895   005C7A  5016               	movf	??_sqrtf^0,w,c
 13896   005C7C  2633               	addwf	sqrtf@ix^0,f,c
 13897   005C7E  5017               	movf	(??_sqrtf+1)^0,w,c
 13898   005C80  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 13899   005C82  5018               	movf	(??_sqrtf+2)^0,w,c
 13900   005C84  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 13901   005C86  5019               	movf	(??_sqrtf+3)^0,w,c
 13902   005C88  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 13903   005C8A  EFA1  F02C         	goto	l5420
 13904   005C8E                     l1571:
 13905   005C8E  0012               	return		;funcret
 13906   005C90                     __end_of_sqrtf:
 13907                           	callstack 0
 13908                           
 13909 ;; *************** function _scalbnf *****************
 13910 ;; Defined at:
 13911 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\scalbnf.c"
 13912 ;; Parameters:    Size  Location     Type
 13913 ;;  x               4   42[COMRAM] float 
 13914 ;;  n               2   46[COMRAM] int 
 13915 ;; Auto vars:     Size  Location     Type
 13916 ;;  y               4   56[COMRAM] float 
 13917 ;;  u               4   52[COMRAM] struct .
 13918 ;; Return value:  Size  Location     Type
 13919 ;;                  4   42[COMRAM] float 
 13920 ;; Registers used:
 13921 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13922 ;; Tracked objects:
 13923 ;;		On entry : 0/0
 13924 ;;		On exit  : 0/0
 13925 ;;		Unchanged: 0/0
 13926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13927 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13928 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13929 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13930 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13931 ;;Total ram usage:       18 bytes
 13932 ;; Hardware stack levels used: 1
 13933 ;; Hardware stack levels required when called: 3
 13934 ;; This function calls:
 13935 ;;		___flmul
 13936 ;; This function is called by:
 13937 ;;		_powf
 13938 ;; This function uses a non-reentrant model
 13939 ;;
 13940                           
 13941                           	psect	text40
 13942   006378                     __ptext40:
 13943                           	callstack 0
 13944   006378                     _scalbnf:
 13945                           	callstack 25
 13946   006378  C02B  F039         	movff	scalbnf@x,scalbnf@y
 13947   00637C  C02C  F03A         	movff	scalbnf@x+1,scalbnf@y+1
 13948   006380  C02D  F03B         	movff	scalbnf@x+2,scalbnf@y+2
 13949   006384  C02E  F03C         	movff	scalbnf@x+3,scalbnf@y+3
 13950   006388  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 13951   00638A  EFD0  F031         	goto	u8521
 13952   00638E  5030               	movf	(scalbnf@n+1)^0,w,c
 13953   006390  E109               	bnz	u8520
 13954   006392  0E80               	movlw	128
 13955   006394  5C2F               	subwf	scalbnf@n^0,w,c
 13956   006396  A0D8               	btfss	status,0,c
 13957   006398  EFD0  F031         	goto	u8521
 13958   00639C  EFD2  F031         	goto	u8520
 13959   0063A0                     u8521:
 13960   0063A0  EF30  F032         	goto	l8064
 13961   0063A4                     u8520:
 13962   0063A4  C039  F012         	movff	scalbnf@y,___flmul@b
 13963   0063A8  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 13964   0063AC  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 13965   0063B0  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 13966   0063B4  0E00               	movlw	0
 13967   0063B6  6E16               	movwf	___flmul@a^0,c
 13968   0063B8  0E00               	movlw	0
 13969   0063BA  6E17               	movwf	(___flmul@a+1)^0,c
 13970   0063BC  0E00               	movlw	0
 13971   0063BE  6E18               	movwf	(___flmul@a+2)^0,c
 13972   0063C0  0E7F               	movlw	127
 13973   0063C2  6E19               	movwf	(___flmul@a+3)^0,c
 13974   0063C4  EC44  F02A         	call	___flmul	;wreg free
 13975   0063C8  C012  F039         	movff	?___flmul,scalbnf@y
 13976   0063CC  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 13977   0063D0  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 13978   0063D4  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 13979   0063D8  0E81               	movlw	129
 13980   0063DA  262F               	addwf	scalbnf@n^0,f,c
 13981   0063DC  0EFF               	movlw	255
 13982   0063DE  2230               	addwfc	(scalbnf@n+1)^0,f,c
 13983   0063E0  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 13984   0063E2  EFFC  F031         	goto	u8531
 13985   0063E6  5030               	movf	(scalbnf@n+1)^0,w,c
 13986   0063E8  E109               	bnz	u8530
 13987   0063EA  0E80               	movlw	128
 13988   0063EC  5C2F               	subwf	scalbnf@n^0,w,c
 13989   0063EE  A0D8               	btfss	status,0,c
 13990   0063F0  EFFC  F031         	goto	u8531
 13991   0063F4  EFFE  F031         	goto	u8530
 13992   0063F8                     u8531:
 13993   0063F8  EF9A  F032         	goto	l8080
 13994   0063FC                     u8530:
 13995   0063FC  C039  F012         	movff	scalbnf@y,___flmul@b
 13996   006400  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 13997   006404  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 13998   006408  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 13999   00640C  0E00               	movlw	0
 14000   00640E  6E16               	movwf	___flmul@a^0,c
 14001   006410  0E00               	movlw	0
 14002   006412  6E17               	movwf	(___flmul@a+1)^0,c
 14003   006414  0E00               	movlw	0
 14004   006416  6E18               	movwf	(___flmul@a+2)^0,c
 14005   006418  0E7F               	movlw	127
 14006   00641A  6E19               	movwf	(___flmul@a+3)^0,c
 14007   00641C  EC44  F02A         	call	___flmul	;wreg free
 14008   006420  C012  F039         	movff	?___flmul,scalbnf@y
 14009   006424  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 14010   006428  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 14011   00642C  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 14012   006430  0E81               	movlw	129
 14013   006432  262F               	addwf	scalbnf@n^0,f,c
 14014   006434  0EFF               	movlw	255
 14015   006436  2230               	addwfc	(scalbnf@n+1)^0,f,c
 14016   006438  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 14017   00643A  EF28  F032         	goto	u8541
 14018   00643E  5030               	movf	(scalbnf@n+1)^0,w,c
 14019   006440  E109               	bnz	u8540
 14020   006442  0E80               	movlw	128
 14021   006444  5C2F               	subwf	scalbnf@n^0,w,c
 14022   006446  A0D8               	btfss	status,0,c
 14023   006448  EF28  F032         	goto	u8541
 14024   00644C  EF2A  F032         	goto	u8540
 14025   006450                     u8541:
 14026   006450  EF9A  F032         	goto	l8080
 14027   006454                     u8540:
 14028   006454  0E00               	movlw	0
 14029   006456  6E30               	movwf	(scalbnf@n+1)^0,c
 14030   006458  0E7F               	movlw	127
 14031   00645A  6E2F               	movwf	scalbnf@n^0,c
 14032   00645C  EF9A  F032         	goto	l8080
 14033   006460                     l8064:
 14034   006460  AE30               	btfss	(scalbnf@n+1)^0,7,c
 14035   006462  EF3C  F032         	goto	u8551
 14036   006466  0E82               	movlw	130
 14037   006468  5C2F               	subwf	scalbnf@n^0,w,c
 14038   00646A  0EFF               	movlw	255
 14039   00646C  5830               	subwfb	(scalbnf@n+1)^0,w,c
 14040   00646E  B0D8               	btfsc	status,0,c
 14041   006470  EF3C  F032         	goto	u8551
 14042   006474  EF3E  F032         	goto	u8550
 14043   006478                     u8551:
 14044   006478  EF9A  F032         	goto	l8080
 14045   00647C                     u8550:
 14046   00647C  C039  F012         	movff	scalbnf@y,___flmul@b
 14047   006480  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 14048   006484  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 14049   006488  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 14050   00648C  0E00               	movlw	0
 14051   00648E  6E16               	movwf	___flmul@a^0,c
 14052   006490  0E00               	movlw	0
 14053   006492  6E17               	movwf	(___flmul@a+1)^0,c
 14054   006494  0E80               	movlw	128
 14055   006496  6E18               	movwf	(___flmul@a+2)^0,c
 14056   006498  0E0C               	movlw	12
 14057   00649A  6E19               	movwf	(___flmul@a+3)^0,c
 14058   00649C  EC44  F02A         	call	___flmul	;wreg free
 14059   0064A0  C012  F039         	movff	?___flmul,scalbnf@y
 14060   0064A4  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 14061   0064A8  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 14062   0064AC  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 14063   0064B0  0E66               	movlw	102
 14064   0064B2  262F               	addwf	scalbnf@n^0,f,c
 14065   0064B4  0E00               	movlw	0
 14066   0064B6  2230               	addwfc	(scalbnf@n+1)^0,f,c
 14067   0064B8  AE30               	btfss	(scalbnf@n+1)^0,7,c
 14068   0064BA  EF68  F032         	goto	u8561
 14069   0064BE  0E82               	movlw	130
 14070   0064C0  5C2F               	subwf	scalbnf@n^0,w,c
 14071   0064C2  0EFF               	movlw	255
 14072   0064C4  5830               	subwfb	(scalbnf@n+1)^0,w,c
 14073   0064C6  B0D8               	btfsc	status,0,c
 14074   0064C8  EF68  F032         	goto	u8561
 14075   0064CC  EF6A  F032         	goto	u8560
 14076   0064D0                     u8561:
 14077   0064D0  EF9A  F032         	goto	l8080
 14078   0064D4                     u8560:
 14079   0064D4  C039  F012         	movff	scalbnf@y,___flmul@b
 14080   0064D8  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 14081   0064DC  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 14082   0064E0  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 14083   0064E4  0E00               	movlw	0
 14084   0064E6  6E16               	movwf	___flmul@a^0,c
 14085   0064E8  0E00               	movlw	0
 14086   0064EA  6E17               	movwf	(___flmul@a+1)^0,c
 14087   0064EC  0E80               	movlw	128
 14088   0064EE  6E18               	movwf	(___flmul@a+2)^0,c
 14089   0064F0  0E0C               	movlw	12
 14090   0064F2  6E19               	movwf	(___flmul@a+3)^0,c
 14091   0064F4  EC44  F02A         	call	___flmul	;wreg free
 14092   0064F8  C012  F039         	movff	?___flmul,scalbnf@y
 14093   0064FC  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 14094   006500  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 14095   006504  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 14096   006508  0E66               	movlw	102
 14097   00650A  262F               	addwf	scalbnf@n^0,f,c
 14098   00650C  0E00               	movlw	0
 14099   00650E  2230               	addwfc	(scalbnf@n+1)^0,f,c
 14100   006510  AE30               	btfss	(scalbnf@n+1)^0,7,c
 14101   006512  EF94  F032         	goto	u8571
 14102   006516  0E82               	movlw	130
 14103   006518  5C2F               	subwf	scalbnf@n^0,w,c
 14104   00651A  0EFF               	movlw	255
 14105   00651C  5830               	subwfb	(scalbnf@n+1)^0,w,c
 14106   00651E  B0D8               	btfsc	status,0,c
 14107   006520  EF94  F032         	goto	u8571
 14108   006524  EF96  F032         	goto	u8570
 14109   006528                     u8571:
 14110   006528  EF9A  F032         	goto	l8080
 14111   00652C                     u8570:
 14112   00652C  0EFF               	movlw	255
 14113   00652E  6E30               	movwf	(scalbnf@n+1)^0,c
 14114   006530  0E82               	movlw	130
 14115   006532  6E2F               	movwf	scalbnf@n^0,c
 14116   006534                     l8080:
 14117   006534  0E7F               	movlw	127
 14118   006536  242F               	addwf	scalbnf@n^0,w,c
 14119   006538  6E31               	movwf	??_scalbnf^0,c
 14120   00653A  0E00               	movlw	0
 14121   00653C  2030               	addwfc	(scalbnf@n+1)^0,w,c
 14122   00653E  6E32               	movwf	(??_scalbnf+1)^0,c
 14123   006540  6A33               	clrf	(??_scalbnf+2)^0,c
 14124   006542  6A34               	clrf	(??_scalbnf+3)^0,c
 14125   006544  0E17               	movlw	23
 14126   006546                     u8585:
 14127   006546  90D8               	bcf	status,0,c
 14128   006548  3631               	rlcf	??_scalbnf^0,f,c
 14129   00654A  3632               	rlcf	(??_scalbnf+1)^0,f,c
 14130   00654C  3633               	rlcf	(??_scalbnf+2)^0,f,c
 14131   00654E  3634               	rlcf	(??_scalbnf+3)^0,f,c
 14132   006550  2EE8               	decfsz	wreg,f,c
 14133   006552  EFA3  F032         	goto	u8585
 14134   006556  C031  F035         	movff	??_scalbnf,scalbnf@u
 14135   00655A  C032  F036         	movff	??_scalbnf+1,scalbnf@u+1
 14136   00655E  C033  F037         	movff	??_scalbnf+2,scalbnf@u+2
 14137   006562  C034  F038         	movff	??_scalbnf+3,scalbnf@u+3
 14138   006566  C035  F012         	movff	scalbnf@u,___flmul@b
 14139   00656A  C036  F013         	movff	scalbnf@u+1,___flmul@b+1
 14140   00656E  C037  F014         	movff	scalbnf@u+2,___flmul@b+2
 14141   006572  C038  F015         	movff	scalbnf@u+3,___flmul@b+3
 14142   006576  C039  F016         	movff	scalbnf@y,___flmul@a
 14143   00657A  C03A  F017         	movff	scalbnf@y+1,___flmul@a+1
 14144   00657E  C03B  F018         	movff	scalbnf@y+2,___flmul@a+2
 14145   006582  C03C  F019         	movff	scalbnf@y+3,___flmul@a+3
 14146   006586  EC44  F02A         	call	___flmul	;wreg free
 14147   00658A  C012  F02B         	movff	?___flmul,scalbnf@x
 14148   00658E  C013  F02C         	movff	?___flmul+1,scalbnf@x+1
 14149   006592  C014  F02D         	movff	?___flmul+2,scalbnf@x+2
 14150   006596  C015  F02E         	movff	?___flmul+3,scalbnf@x+3
 14151   00659A  C02B  F02B         	movff	scalbnf@x,?_scalbnf
 14152   00659E  C02C  F02C         	movff	scalbnf@x+1,?_scalbnf+1
 14153   0065A2  C02D  F02D         	movff	scalbnf@x+2,?_scalbnf+2
 14154   0065A6  C02E  F02E         	movff	scalbnf@x+3,?_scalbnf+3
 14155   0065AA  0012               	return		;funcret
 14156   0065AC                     __end_of_scalbnf:
 14157                           	callstack 0
 14158                           
 14159 ;; *************** function ___flmul *****************
 14160 ;; Defined at:
 14161 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 14162 ;; Parameters:    Size  Location     Type
 14163 ;;  b               4   17[COMRAM] float 
 14164 ;;  a               4   21[COMRAM] float 
 14165 ;; Auto vars:     Size  Location     Type
 14166 ;;  prod            4   36[COMRAM] struct .
 14167 ;;  grs             4   31[COMRAM] unsigned long 
 14168 ;;  temp            2   40[COMRAM] struct .
 14169 ;;  bexp            1   35[COMRAM] unsigned char 
 14170 ;;  aexp            1   30[COMRAM] unsigned char 
 14171 ;;  sign            1   29[COMRAM] unsigned char 
 14172 ;; Return value:  Size  Location     Type
 14173 ;;                  4   17[COMRAM] unsigned char 
 14174 ;; Registers used:
 14175 ;;		wreg, status,2, status,0, prodl, prodh
 14176 ;; Tracked objects:
 14177 ;;		On entry : 0/0
 14178 ;;		On exit  : 0/0
 14179 ;;		Unchanged: 0/0
 14180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14181 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14182 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14183 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14184 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14185 ;;Total ram usage:       25 bytes
 14186 ;; Hardware stack levels used: 1
 14187 ;; Hardware stack levels required when called: 2
 14188 ;; This function calls:
 14189 ;;		Nothing
 14190 ;; This function is called by:
 14191 ;;		_efgtoa
 14192 ;;		_powf
 14193 ;;		_scalbnf
 14194 ;; This function uses a non-reentrant model
 14195 ;;
 14196                           
 14197                           	psect	text41
 14198   005488                     __ptext41:
 14199                           	callstack 0
 14200   005488                     ___flmul:
 14201                           	callstack 24
 14202   005488  5015               	movf	(___flmul@b+3)^0,w,c
 14203   00548A  0B80               	andlw	128
 14204   00548C  6E1E               	movwf	___flmul@sign^0,c
 14205   00548E  5015               	movf	(___flmul@b+3)^0,w,c
 14206   005490  2415               	addwf	(___flmul@b+3)^0,w,c
 14207   005492  6E24               	movwf	___flmul@bexp^0,c
 14208   005494  AE14               	btfss	(___flmul@b+2)^0,7,c
 14209   005496  EF4F  F02A         	goto	u7381
 14210   00549A  EF51  F02A         	goto	u7380
 14211   00549E                     u7381:
 14212   00549E  EF52  F02A         	goto	l7328
 14213   0054A2                     u7380:
 14214   0054A2  8024               	bsf	___flmul@bexp^0,0,c
 14215   0054A4                     l7328:
 14216   0054A4  5024               	movf	___flmul@bexp^0,w,c
 14217   0054A6  B4D8               	btfsc	status,2,c
 14218   0054A8  EF58  F02A         	goto	u7391
 14219   0054AC  EF5A  F02A         	goto	u7390
 14220   0054B0                     u7391:
 14221   0054B0  EF6D  F02A         	goto	l7336
 14222   0054B4                     u7390:
 14223   0054B4  2824               	incf	___flmul@bexp^0,w,c
 14224   0054B6  A4D8               	btfss	status,2,c
 14225   0054B8  EF60  F02A         	goto	u7401
 14226   0054BC  EF62  F02A         	goto	u7400
 14227   0054C0                     u7401:
 14228   0054C0  EF6A  F02A         	goto	l7334
 14229   0054C4                     u7400:
 14230   0054C4  0E00               	movlw	0
 14231   0054C6  6E12               	movwf	___flmul@b^0,c
 14232   0054C8  0E00               	movlw	0
 14233   0054CA  6E13               	movwf	(___flmul@b+1)^0,c
 14234   0054CC  0E00               	movlw	0
 14235   0054CE  6E14               	movwf	(___flmul@b+2)^0,c
 14236   0054D0  0E00               	movlw	0
 14237   0054D2  6E15               	movwf	(___flmul@b+3)^0,c
 14238   0054D4                     l7334:
 14239   0054D4  8E14               	bsf	(___flmul@b+2)^0,7,c
 14240   0054D6  EF75  F02A         	goto	l7338
 14241   0054DA                     l7336:
 14242   0054DA  0E00               	movlw	0
 14243   0054DC  6E12               	movwf	___flmul@b^0,c
 14244   0054DE  0E00               	movlw	0
 14245   0054E0  6E13               	movwf	(___flmul@b+1)^0,c
 14246   0054E2  0E00               	movlw	0
 14247   0054E4  6E14               	movwf	(___flmul@b+2)^0,c
 14248   0054E6  0E00               	movlw	0
 14249   0054E8  6E15               	movwf	(___flmul@b+3)^0,c
 14250   0054EA                     l7338:
 14251   0054EA  5019               	movf	(___flmul@a+3)^0,w,c
 14252   0054EC  0B80               	andlw	128
 14253   0054EE  1A1E               	xorwf	___flmul@sign^0,f,c
 14254   0054F0  5019               	movf	(___flmul@a+3)^0,w,c
 14255   0054F2  2419               	addwf	(___flmul@a+3)^0,w,c
 14256   0054F4  6E1F               	movwf	___flmul@aexp^0,c
 14257   0054F6  AE18               	btfss	(___flmul@a+2)^0,7,c
 14258   0054F8  EF80  F02A         	goto	u7411
 14259   0054FC  EF82  F02A         	goto	u7410
 14260   005500                     u7411:
 14261   005500  EF83  F02A         	goto	l7346
 14262   005504                     u7410:
 14263   005504  801F               	bsf	___flmul@aexp^0,0,c
 14264   005506                     l7346:
 14265   005506  501F               	movf	___flmul@aexp^0,w,c
 14266   005508  B4D8               	btfsc	status,2,c
 14267   00550A  EF89  F02A         	goto	u7421
 14268   00550E  EF8B  F02A         	goto	u7420
 14269   005512                     u7421:
 14270   005512  EF9E  F02A         	goto	l7354
 14271   005516                     u7420:
 14272   005516  281F               	incf	___flmul@aexp^0,w,c
 14273   005518  A4D8               	btfss	status,2,c
 14274   00551A  EF91  F02A         	goto	u7431
 14275   00551E  EF93  F02A         	goto	u7430
 14276   005522                     u7431:
 14277   005522  EF9B  F02A         	goto	l7352
 14278   005526                     u7430:
 14279   005526  0E00               	movlw	0
 14280   005528  6E16               	movwf	___flmul@a^0,c
 14281   00552A  0E00               	movlw	0
 14282   00552C  6E17               	movwf	(___flmul@a+1)^0,c
 14283   00552E  0E00               	movlw	0
 14284   005530  6E18               	movwf	(___flmul@a+2)^0,c
 14285   005532  0E00               	movlw	0
 14286   005534  6E19               	movwf	(___flmul@a+3)^0,c
 14287   005536                     l7352:
 14288   005536  8E18               	bsf	(___flmul@a+2)^0,7,c
 14289   005538  EFA6  F02A         	goto	l1169
 14290   00553C                     l7354:
 14291   00553C  0E00               	movlw	0
 14292   00553E  6E16               	movwf	___flmul@a^0,c
 14293   005540  0E00               	movlw	0
 14294   005542  6E17               	movwf	(___flmul@a+1)^0,c
 14295   005544  0E00               	movlw	0
 14296   005546  6E18               	movwf	(___flmul@a+2)^0,c
 14297   005548  0E00               	movlw	0
 14298   00554A  6E19               	movwf	(___flmul@a+3)^0,c
 14299   00554C                     l1169:
 14300   00554C  501F               	movf	___flmul@aexp^0,w,c
 14301   00554E  B4D8               	btfsc	status,2,c
 14302   005550  EFAC  F02A         	goto	u7441
 14303   005554  EFAE  F02A         	goto	u7440
 14304   005558                     u7441:
 14305   005558  EFB6  F02A         	goto	l7358
 14306   00555C                     u7440:
 14307   00555C  5024               	movf	___flmul@bexp^0,w,c
 14308   00555E  A4D8               	btfss	status,2,c
 14309   005560  EFB4  F02A         	goto	u7451
 14310   005564  EFB6  F02A         	goto	u7450
 14311   005568                     u7451:
 14312   005568  EFC0  F02A         	goto	l7362
 14313   00556C                     u7450:
 14314   00556C                     l7358:
 14315   00556C  0E00               	movlw	0
 14316   00556E  6E12               	movwf	?___flmul^0,c
 14317   005570  0E00               	movlw	0
 14318   005572  6E13               	movwf	(?___flmul+1)^0,c
 14319   005574  0E00               	movlw	0
 14320   005576  6E14               	movwf	(?___flmul+2)^0,c
 14321   005578  0E00               	movlw	0
 14322   00557A  6E15               	movwf	(?___flmul+3)^0,c
 14323   00557C  EF58  F02C         	goto	l1173
 14324   005580                     l7362:
 14325   005580  5018               	movf	(___flmul@a+2)^0,w,c
 14326   005582  0212               	mulwf	___flmul@b^0,c
 14327   005584  CFF3 F029          	movff	prodl,___flmul@temp
 14328   005588  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14329   00558C  5029               	movf	___flmul@temp^0,w,c
 14330   00558E  6E20               	movwf	___flmul@grs^0,c
 14331   005590  6A21               	clrf	(___flmul@grs+1)^0,c
 14332   005592  6A22               	clrf	(___flmul@grs+2)^0,c
 14333   005594  6A23               	clrf	(___flmul@grs+3)^0,c
 14334   005596  502A               	movf	(___flmul@temp+1)^0,w,c
 14335   005598  6E25               	movwf	___flmul@prod^0,c
 14336   00559A  6A26               	clrf	(___flmul@prod+1)^0,c
 14337   00559C  6A27               	clrf	(___flmul@prod+2)^0,c
 14338   00559E  6A28               	clrf	(___flmul@prod+3)^0,c
 14339   0055A0  5017               	movf	(___flmul@a+1)^0,w,c
 14340   0055A2  0213               	mulwf	(___flmul@b+1)^0,c
 14341   0055A4  CFF3 F029          	movff	prodl,___flmul@temp
 14342   0055A8  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14343   0055AC  5029               	movf	___flmul@temp^0,w,c
 14344   0055AE  2620               	addwf	___flmul@grs^0,f,c
 14345   0055B0  0E00               	movlw	0
 14346   0055B2  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14347   0055B4  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14348   0055B6  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14349   0055B8  502A               	movf	(___flmul@temp+1)^0,w,c
 14350   0055BA  2625               	addwf	___flmul@prod^0,f,c
 14351   0055BC  0E00               	movlw	0
 14352   0055BE  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14353   0055C0  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14354   0055C2  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14355   0055C4  5016               	movf	___flmul@a^0,w,c
 14356   0055C6  0214               	mulwf	(___flmul@b+2)^0,c
 14357   0055C8  CFF3 F029          	movff	prodl,___flmul@temp
 14358   0055CC  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14359   0055D0  5029               	movf	___flmul@temp^0,w,c
 14360   0055D2  2620               	addwf	___flmul@grs^0,f,c
 14361   0055D4  0E00               	movlw	0
 14362   0055D6  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14363   0055D8  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14364   0055DA  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14365   0055DC  502A               	movf	(___flmul@temp+1)^0,w,c
 14366   0055DE  2625               	addwf	___flmul@prod^0,f,c
 14367   0055E0  0E00               	movlw	0
 14368   0055E2  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14369   0055E4  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14370   0055E6  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14371   0055E8  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 14372   0055EC  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 14373   0055F0  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 14374   0055F4  6A20               	clrf	___flmul@grs^0,c
 14375   0055F6  5016               	movf	___flmul@a^0,w,c
 14376   0055F8  0213               	mulwf	(___flmul@b+1)^0,c
 14377   0055FA  CFF3 F029          	movff	prodl,___flmul@temp
 14378   0055FE  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14379   005602  5029               	movf	___flmul@temp^0,w,c
 14380   005604  2620               	addwf	___flmul@grs^0,f,c
 14381   005606  502A               	movf	(___flmul@temp+1)^0,w,c
 14382   005608  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14383   00560A  0E00               	movlw	0
 14384   00560C  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14385   00560E  0E00               	movlw	0
 14386   005610  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14387   005612  5017               	movf	(___flmul@a+1)^0,w,c
 14388   005614  0212               	mulwf	___flmul@b^0,c
 14389   005616  CFF3 F029          	movff	prodl,___flmul@temp
 14390   00561A  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14391   00561E  5029               	movf	___flmul@temp^0,w,c
 14392   005620  2620               	addwf	___flmul@grs^0,f,c
 14393   005622  502A               	movf	(___flmul@temp+1)^0,w,c
 14394   005624  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14395   005626  0E00               	movlw	0
 14396   005628  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14397   00562A  0E00               	movlw	0
 14398   00562C  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14399   00562E  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 14400   005632  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 14401   005636  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 14402   00563A  6A20               	clrf	___flmul@grs^0,c
 14403   00563C  5016               	movf	___flmul@a^0,w,c
 14404   00563E  0212               	mulwf	___flmul@b^0,c
 14405   005640  CFF3 F029          	movff	prodl,___flmul@temp
 14406   005644  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14407   005648  5029               	movf	___flmul@temp^0,w,c
 14408   00564A  2620               	addwf	___flmul@grs^0,f,c
 14409   00564C  502A               	movf	(___flmul@temp+1)^0,w,c
 14410   00564E  2221               	addwfc	(___flmul@grs+1)^0,f,c
 14411   005650  0E00               	movlw	0
 14412   005652  2222               	addwfc	(___flmul@grs+2)^0,f,c
 14413   005654  0E00               	movlw	0
 14414   005656  2223               	addwfc	(___flmul@grs+3)^0,f,c
 14415   005658  5018               	movf	(___flmul@a+2)^0,w,c
 14416   00565A  0213               	mulwf	(___flmul@b+1)^0,c
 14417   00565C  CFF3 F029          	movff	prodl,___flmul@temp
 14418   005660  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14419   005664  5029               	movf	___flmul@temp^0,w,c
 14420   005666  2625               	addwf	___flmul@prod^0,f,c
 14421   005668  502A               	movf	(___flmul@temp+1)^0,w,c
 14422   00566A  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14423   00566C  0E00               	movlw	0
 14424   00566E  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14425   005670  0E00               	movlw	0
 14426   005672  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14427   005674  5017               	movf	(___flmul@a+1)^0,w,c
 14428   005676  0214               	mulwf	(___flmul@b+2)^0,c
 14429   005678  CFF3 F029          	movff	prodl,___flmul@temp
 14430   00567C  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14431   005680  5029               	movf	___flmul@temp^0,w,c
 14432   005682  2625               	addwf	___flmul@prod^0,f,c
 14433   005684  502A               	movf	(___flmul@temp+1)^0,w,c
 14434   005686  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14435   005688  0E00               	movlw	0
 14436   00568A  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14437   00568C  0E00               	movlw	0
 14438   00568E  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14439   005690  5018               	movf	(___flmul@a+2)^0,w,c
 14440   005692  0214               	mulwf	(___flmul@b+2)^0,c
 14441   005694  CFF3 F029          	movff	prodl,___flmul@temp
 14442   005698  CFF4 F02A          	movff	prodh,___flmul@temp+1
 14443   00569C  5029               	movf	___flmul@temp^0,w,c
 14444   00569E  6E1A               	movwf	??___flmul^0,c
 14445   0056A0  502A               	movf	(___flmul@temp+1)^0,w,c
 14446   0056A2  6E1B               	movwf	(??___flmul+1)^0,c
 14447   0056A4  6A1C               	clrf	(??___flmul+2)^0,c
 14448   0056A6  6A1D               	clrf	(??___flmul+3)^0,c
 14449   0056A8  C01C  F01D         	movff	??___flmul+2,??___flmul+3
 14450   0056AC  C01B  F01C         	movff	??___flmul+1,??___flmul+2
 14451   0056B0  C01A  F01B         	movff	??___flmul,??___flmul+1
 14452   0056B4  6A1A               	clrf	??___flmul^0,c
 14453   0056B6  501A               	movf	??___flmul^0,w,c
 14454   0056B8  2625               	addwf	___flmul@prod^0,f,c
 14455   0056BA  501B               	movf	(??___flmul+1)^0,w,c
 14456   0056BC  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14457   0056BE  501C               	movf	(??___flmul+2)^0,w,c
 14458   0056C0  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14459   0056C2  501D               	movf	(??___flmul+3)^0,w,c
 14460   0056C4  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14461   0056C6  C020  F01A         	movff	___flmul@grs,??___flmul
 14462   0056CA  C021  F01B         	movff	___flmul@grs+1,??___flmul+1
 14463   0056CE  C022  F01C         	movff	___flmul@grs+2,??___flmul+2
 14464   0056D2  C023  F01D         	movff	___flmul@grs+3,??___flmul+3
 14465   0056D6  0E19               	movlw	25
 14466   0056D8  EF73  F02B         	goto	u7460
 14467   0056DC                     u7465:
 14468   0056DC  90D8               	bcf	status,0,c
 14469   0056DE  321D               	rrcf	(??___flmul+3)^0,f,c
 14470   0056E0  321C               	rrcf	(??___flmul+2)^0,f,c
 14471   0056E2  321B               	rrcf	(??___flmul+1)^0,f,c
 14472   0056E4  321A               	rrcf	??___flmul^0,f,c
 14473   0056E6                     u7460:
 14474   0056E6  2EE8               	decfsz	wreg,f,c
 14475   0056E8  EF6E  F02B         	goto	u7465
 14476   0056EC  501A               	movf	??___flmul^0,w,c
 14477   0056EE  2625               	addwf	___flmul@prod^0,f,c
 14478   0056F0  501B               	movf	(??___flmul+1)^0,w,c
 14479   0056F2  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14480   0056F4  501C               	movf	(??___flmul+2)^0,w,c
 14481   0056F6  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14482   0056F8  501D               	movf	(??___flmul+3)^0,w,c
 14483   0056FA  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14484   0056FC  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
 14485   005700  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
 14486   005704  C020  F021         	movff	___flmul@grs,___flmul@grs+1
 14487   005708  6A20               	clrf	___flmul@grs^0,c
 14488   00570A  501F               	movf	___flmul@aexp^0,w,c
 14489   00570C  C024  F01A         	movff	___flmul@bexp,??___flmul
 14490   005710  6A1B               	clrf	(??___flmul+1)^0,c
 14491   005712  261A               	addwf	??___flmul^0,f,c
 14492   005714  0E00               	movlw	0
 14493   005716  221B               	addwfc	(??___flmul+1)^0,f,c
 14494   005718  0E82               	movlw	130
 14495   00571A  241A               	addwf	??___flmul^0,w,c
 14496   00571C  6E29               	movwf	___flmul@temp^0,c
 14497   00571E  0EFF               	movlw	255
 14498   005720  201B               	addwfc	(??___flmul+1)^0,w,c
 14499   005722  6E2A               	movwf	(___flmul@temp+1)^0,c
 14500   005724  EFA9  F02B         	goto	l7410
 14501   005728                     l7404:
 14502   005728  90D8               	bcf	status,0,c
 14503   00572A  3625               	rlcf	___flmul@prod^0,f,c
 14504   00572C  3626               	rlcf	(___flmul@prod+1)^0,f,c
 14505   00572E  3627               	rlcf	(___flmul@prod+2)^0,f,c
 14506   005730  3628               	rlcf	(___flmul@prod+3)^0,f,c
 14507   005732  AE23               	btfss	(___flmul@grs+3)^0,7,c
 14508   005734  EF9E  F02B         	goto	u7471
 14509   005738  EFA0  F02B         	goto	u7470
 14510   00573C                     u7471:
 14511   00573C  EFA1  F02B         	goto	l1176
 14512   005740                     u7470:
 14513   005740  8025               	bsf	___flmul@prod^0,0,c
 14514   005742                     l1176:
 14515   005742  90D8               	bcf	status,0,c
 14516   005744  3620               	rlcf	___flmul@grs^0,f,c
 14517   005746  3621               	rlcf	(___flmul@grs+1)^0,f,c
 14518   005748  3622               	rlcf	(___flmul@grs+2)^0,f,c
 14519   00574A  3623               	rlcf	(___flmul@grs+3)^0,f,c
 14520   00574C  0629               	decf	___flmul@temp^0,f,c
 14521   00574E  A0D8               	btfss	status,0,c
 14522   005750  062A               	decf	(___flmul@temp+1)^0,f,c
 14523   005752                     l7410:
 14524   005752  AE27               	btfss	(___flmul@prod+2)^0,7,c
 14525   005754  EFAE  F02B         	goto	u7481
 14526   005758  EFB0  F02B         	goto	u7480
 14527   00575C                     u7481:
 14528   00575C  EF94  F02B         	goto	l7404
 14529   005760                     u7480:
 14530   005760  0E00               	movlw	0
 14531   005762  6E1F               	movwf	___flmul@aexp^0,c
 14532   005764  AE23               	btfss	(___flmul@grs+3)^0,7,c
 14533   005766  EFB7  F02B         	goto	u7491
 14534   00576A  EFB9  F02B         	goto	u7490
 14535   00576E                     u7491:
 14536   00576E  EFDD  F02B         	goto	l1178
 14537   005772                     u7490:
 14538   005772  0EFF               	movlw	255
 14539   005774  1420               	andwf	___flmul@grs^0,w,c
 14540   005776  6E1A               	movwf	??___flmul^0,c
 14541   005778  0EFF               	movlw	255
 14542   00577A  1421               	andwf	(___flmul@grs+1)^0,w,c
 14543   00577C  6E1B               	movwf	(??___flmul+1)^0,c
 14544   00577E  0EFF               	movlw	255
 14545   005780  1422               	andwf	(___flmul@grs+2)^0,w,c
 14546   005782  6E1C               	movwf	(??___flmul+2)^0,c
 14547   005784  0E7F               	movlw	127
 14548   005786  1423               	andwf	(___flmul@grs+3)^0,w,c
 14549   005788  6E1D               	movwf	(??___flmul+3)^0,c
 14550   00578A  501A               	movf	??___flmul^0,w,c
 14551   00578C  101B               	iorwf	(??___flmul+1)^0,w,c
 14552   00578E  101C               	iorwf	(??___flmul+2)^0,w,c
 14553   005790  101D               	iorwf	(??___flmul+3)^0,w,c
 14554   005792  B4D8               	btfsc	status,2,c
 14555   005794  EFCE  F02B         	goto	u7501
 14556   005798  EFD0  F02B         	goto	u7500
 14557   00579C                     u7501:
 14558   00579C  EFD4  F02B         	goto	l1179
 14559   0057A0                     u7500:
 14560   0057A0                     l7418:
 14561   0057A0  0E01               	movlw	1
 14562   0057A2  6E1F               	movwf	___flmul@aexp^0,c
 14563   0057A4  EFDD  F02B         	goto	l1178
 14564   0057A8                     l1179:
 14565   0057A8  A025               	btfss	___flmul@prod^0,0,c
 14566   0057AA  EFD9  F02B         	goto	u7511
 14567   0057AE  EFDB  F02B         	goto	u7510
 14568   0057B2                     u7511:
 14569   0057B2  EFDD  F02B         	goto	l1178
 14570   0057B6                     u7510:
 14571   0057B6  EFD0  F02B         	goto	l7418
 14572   0057BA                     l1178:
 14573   0057BA  501F               	movf	___flmul@aexp^0,w,c
 14574   0057BC  B4D8               	btfsc	status,2,c
 14575   0057BE  EFE3  F02B         	goto	u7521
 14576   0057C2  EFE5  F02B         	goto	u7520
 14577   0057C6                     u7521:
 14578   0057C6  EF09  F02C         	goto	l7430
 14579   0057CA                     u7520:
 14580   0057CA  0E01               	movlw	1
 14581   0057CC  2625               	addwf	___flmul@prod^0,f,c
 14582   0057CE  0E00               	movlw	0
 14583   0057D0  2226               	addwfc	(___flmul@prod+1)^0,f,c
 14584   0057D2  2227               	addwfc	(___flmul@prod+2)^0,f,c
 14585   0057D4  2228               	addwfc	(___flmul@prod+3)^0,f,c
 14586   0057D6  A028               	btfss	(___flmul@prod+3)^0,0,c
 14587   0057D8  EFF0  F02B         	goto	u7531
 14588   0057DC  EFF2  F02B         	goto	u7530
 14589   0057E0                     u7531:
 14590   0057E0  EF09  F02C         	goto	l7430
 14591   0057E4                     u7530:
 14592   0057E4  C025  F01A         	movff	___flmul@prod,??___flmul
 14593   0057E8  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
 14594   0057EC  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
 14595   0057F0  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
 14596   0057F4  341D               	rlcf	(??___flmul+3)^0,w,c
 14597   0057F6  321D               	rrcf	(??___flmul+3)^0,f,c
 14598   0057F8  321C               	rrcf	(??___flmul+2)^0,f,c
 14599   0057FA  321B               	rrcf	(??___flmul+1)^0,f,c
 14600   0057FC  321A               	rrcf	??___flmul^0,f,c
 14601   0057FE  C01A  F025         	movff	??___flmul,___flmul@prod
 14602   005802  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
 14603   005806  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
 14604   00580A  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
 14605   00580E  4A29               	infsnz	___flmul@temp^0,f,c
 14606   005810  2A2A               	incf	(___flmul@temp+1)^0,f,c
 14607   005812                     l7430:
 14608   005812  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 14609   005814  EF14  F02C         	goto	u7541
 14610   005818  502A               	movf	(___flmul@temp+1)^0,w,c
 14611   00581A  E108               	bnz	u7540
 14612   00581C  2829               	incf	___flmul@temp^0,w,c
 14613   00581E  A0D8               	btfss	status,0,c
 14614   005820  EF14  F02C         	goto	u7541
 14615   005824  EF16  F02C         	goto	u7540
 14616   005828                     u7541:
 14617   005828  EF20  F02C         	goto	l7434
 14618   00582C                     u7540:
 14619   00582C  0E00               	movlw	0
 14620   00582E  6E25               	movwf	___flmul@prod^0,c
 14621   005830  0E00               	movlw	0
 14622   005832  6E26               	movwf	(___flmul@prod+1)^0,c
 14623   005834  0E80               	movlw	128
 14624   005836  6E27               	movwf	(___flmul@prod+2)^0,c
 14625   005838  0E7F               	movlw	127
 14626   00583A  6E28               	movwf	(___flmul@prod+3)^0,c
 14627   00583C  EF4E  F02C         	goto	l7446
 14628   005840                     l7434:
 14629   005840  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 14630   005842  EF2D  F02C         	goto	u7550
 14631   005846  502A               	movf	(___flmul@temp+1)^0,w,c
 14632   005848  E106               	bnz	u7551
 14633   00584A  0429               	decf	___flmul@temp^0,w,c
 14634   00584C  B0D8               	btfsc	status,0,c
 14635   00584E  EF2B  F02C         	goto	u7551
 14636   005852  EF2D  F02C         	goto	u7550
 14637   005856                     u7551:
 14638   005856  EF39  F02C         	goto	l1186
 14639   00585A                     u7550:
 14640   00585A  0E00               	movlw	0
 14641   00585C  6E25               	movwf	___flmul@prod^0,c
 14642   00585E  0E00               	movlw	0
 14643   005860  6E26               	movwf	(___flmul@prod+1)^0,c
 14644   005862  0E00               	movlw	0
 14645   005864  6E27               	movwf	(___flmul@prod+2)^0,c
 14646   005866  0E00               	movlw	0
 14647   005868  6E28               	movwf	(___flmul@prod+3)^0,c
 14648   00586A  0E00               	movlw	0
 14649   00586C  6E1E               	movwf	___flmul@sign^0,c
 14650   00586E  EF4E  F02C         	goto	l7446
 14651   005872                     l1186:
 14652   005872  C029  F024         	movff	___flmul@temp,___flmul@bexp
 14653   005876  0EFF               	movlw	255
 14654   005878  1625               	andwf	___flmul@prod^0,f,c
 14655   00587A  0EFF               	movlw	255
 14656   00587C  1626               	andwf	(___flmul@prod+1)^0,f,c
 14657   00587E  0E7F               	movlw	127
 14658   005880  1627               	andwf	(___flmul@prod+2)^0,f,c
 14659   005882  0E00               	movlw	0
 14660   005884  1628               	andwf	(___flmul@prod+3)^0,f,c
 14661   005886  A024               	btfss	___flmul@bexp^0,0,c
 14662   005888  EF48  F02C         	goto	u7561
 14663   00588C  EF4A  F02C         	goto	u7560
 14664   005890                     u7561:
 14665   005890  EF4B  F02C         	goto	l7444
 14666   005894                     u7560:
 14667   005894  8E27               	bsf	(___flmul@prod+2)^0,7,c
 14668   005896                     l7444:
 14669   005896  90D8               	bcf	status,0,c
 14670   005898  3024               	rrcf	___flmul@bexp^0,w,c
 14671   00589A  6E28               	movwf	(___flmul@prod+3)^0,c
 14672   00589C                     l7446:
 14673   00589C  501E               	movf	___flmul@sign^0,w,c
 14674   00589E  1228               	iorwf	(___flmul@prod+3)^0,f,c
 14675   0058A0  C025  F012         	movff	___flmul@prod,?___flmul
 14676   0058A4  C026  F013         	movff	___flmul@prod+1,?___flmul+1
 14677   0058A8  C027  F014         	movff	___flmul@prod+2,?___flmul+2
 14678   0058AC  C028  F015         	movff	___flmul@prod+3,?___flmul+3
 14679   0058B0                     l1173:
 14680   0058B0  0012               	return		;funcret
 14681   0058B2                     __end_of___flmul:
 14682                           	callstack 0
 14683                           
 14684 ;; *************** function ___xxtofl *****************
 14685 ;; Defined at:
 14686 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 14687 ;; Parameters:    Size  Location     Type
 14688 ;;  sign            1    wreg     unsigned char 
 14689 ;;  val             4    1[COMRAM] long 
 14690 ;; Auto vars:     Size  Location     Type
 14691 ;;  sign            1    9[COMRAM] unsigned char 
 14692 ;;  arg             4   11[COMRAM] unsigned long 
 14693 ;;  exp             1   10[COMRAM] unsigned char 
 14694 ;; Return value:  Size  Location     Type
 14695 ;;                  4    1[COMRAM] unsigned char 
 14696 ;; Registers used:
 14697 ;;		wreg, status,2, status,0
 14698 ;; Tracked objects:
 14699 ;;		On entry : 0/0
 14700 ;;		On exit  : 0/0
 14701 ;;		Unchanged: 0/0
 14702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14703 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14704 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14705 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14706 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14707 ;;Total ram usage:       14 bytes
 14708 ;; Hardware stack levels used: 1
 14709 ;; Hardware stack levels required when called: 2
 14710 ;; This function calls:
 14711 ;;		Nothing
 14712 ;; This function is called by:
 14713 ;;		_decide_action
 14714 ;;		_powf
 14715 ;; This function uses a non-reentrant model
 14716 ;;
 14717                           
 14718                           	psect	text42
 14719   0069E0                     __ptext42:
 14720                           	callstack 0
 14721   0069E0                     ___xxtofl:
 14722                           	callstack 26
 14723                           
 14724                           ;incstack = 0
 14725                           ;___xxtofl@sign stored from wreg
 14726   0069E0  6E0A               	movwf	___xxtofl@sign^0,c
 14727   0069E2  500A               	movf	___xxtofl@sign^0,w,c
 14728   0069E4  B4D8               	btfsc	status,2,c
 14729   0069E6  EFF7  F034         	goto	u5391
 14730   0069EA  EFF9  F034         	goto	u5390
 14731   0069EE                     u5391:
 14732   0069EE  EF1B  F035         	goto	l1210
 14733   0069F2                     u5390:
 14734   0069F2  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 14735   0069F4  EF00  F035         	goto	u5400
 14736   0069F8  EFFE  F034         	goto	u5401
 14737   0069FC                     u5401:
 14738   0069FC  EF1B  F035         	goto	l1210
 14739   006A00                     u5400:
 14740   006A00  C002  F006         	movff	___xxtofl@val,??___xxtofl
 14741   006A04  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
 14742   006A08  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
 14743   006A0C  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
 14744   006A10  1E06               	comf	??___xxtofl^0,f,c
 14745   006A12  1E07               	comf	(??___xxtofl+1)^0,f,c
 14746   006A14  1E08               	comf	(??___xxtofl+2)^0,f,c
 14747   006A16  1E09               	comf	(??___xxtofl+3)^0,f,c
 14748   006A18  2A06               	incf	??___xxtofl^0,f,c
 14749   006A1A  0E00               	movlw	0
 14750   006A1C  2207               	addwfc	(??___xxtofl+1)^0,f,c
 14751   006A1E  2208               	addwfc	(??___xxtofl+2)^0,f,c
 14752   006A20  2209               	addwfc	(??___xxtofl+3)^0,f,c
 14753   006A22  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
 14754   006A26  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
 14755   006A2A  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
 14756   006A2E  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
 14757   006A32  EF23  F035         	goto	l5502
 14758   006A36                     l1210:
 14759   006A36  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
 14760   006A3A  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14761   006A3E  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14762   006A42  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14763   006A46                     l5502:
 14764   006A46  5002               	movf	___xxtofl@val^0,w,c
 14765   006A48  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 14766   006A4A  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 14767   006A4C  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 14768   006A4E  A4D8               	btfss	status,2,c
 14769   006A50  EF2C  F035         	goto	u5411
 14770   006A54  EF2E  F035         	goto	u5410
 14771   006A58                     u5411:
 14772   006A58  EF38  F035         	goto	l5508
 14773   006A5C                     u5410:
 14774   006A5C  0E00               	movlw	0
 14775   006A5E  6E02               	movwf	?___xxtofl^0,c
 14776   006A60  0E00               	movlw	0
 14777   006A62  6E03               	movwf	(?___xxtofl+1)^0,c
 14778   006A64  0E00               	movlw	0
 14779   006A66  6E04               	movwf	(?___xxtofl+2)^0,c
 14780   006A68  0E00               	movlw	0
 14781   006A6A  6E05               	movwf	(?___xxtofl+3)^0,c
 14782   006A6C  EFC9  F035         	goto	l1213
 14783   006A70                     l5508:
 14784   006A70  0E96               	movlw	150
 14785   006A72  6E0B               	movwf	___xxtofl@exp^0,c
 14786   006A74  EF42  F035         	goto	l5512
 14787   006A78                     l5510:
 14788   006A78  2A0B               	incf	___xxtofl@exp^0,f,c
 14789   006A7A  90D8               	bcf	status,0,c
 14790   006A7C  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 14791   006A7E  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 14792   006A80  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 14793   006A82  320C               	rrcf	___xxtofl@arg^0,f,c
 14794   006A84                     l5512:
 14795   006A84  0E00               	movlw	0
 14796   006A86  140C               	andwf	___xxtofl@arg^0,w,c
 14797   006A88  6E06               	movwf	??___xxtofl^0,c
 14798   006A8A  0E00               	movlw	0
 14799   006A8C  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 14800   006A8E  6E07               	movwf	(??___xxtofl+1)^0,c
 14801   006A90  0E00               	movlw	0
 14802   006A92  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 14803   006A94  6E08               	movwf	(??___xxtofl+2)^0,c
 14804   006A96  0EFE               	movlw	254
 14805   006A98  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 14806   006A9A  6E09               	movwf	(??___xxtofl+3)^0,c
 14807   006A9C  5006               	movf	??___xxtofl^0,w,c
 14808   006A9E  1007               	iorwf	(??___xxtofl+1)^0,w,c
 14809   006AA0  1008               	iorwf	(??___xxtofl+2)^0,w,c
 14810   006AA2  1009               	iorwf	(??___xxtofl+3)^0,w,c
 14811   006AA4  A4D8               	btfss	status,2,c
 14812   006AA6  EF57  F035         	goto	u5421
 14813   006AAA  EF59  F035         	goto	u5420
 14814   006AAE                     u5421:
 14815   006AAE  EF3C  F035         	goto	l5510
 14816   006AB2                     u5420:
 14817   006AB2  EF67  F035         	goto	l1217
 14818   006AB6                     l5514:
 14819   006AB6  2A0B               	incf	___xxtofl@exp^0,f,c
 14820   006AB8  0E01               	movlw	1
 14821   006ABA  260C               	addwf	___xxtofl@arg^0,f,c
 14822   006ABC  0E00               	movlw	0
 14823   006ABE  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 14824   006AC0  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 14825   006AC2  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 14826   006AC4  90D8               	bcf	status,0,c
 14827   006AC6  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 14828   006AC8  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 14829   006ACA  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 14830   006ACC  320C               	rrcf	___xxtofl@arg^0,f,c
 14831   006ACE                     l1217:
 14832   006ACE  0E00               	movlw	0
 14833   006AD0  140C               	andwf	___xxtofl@arg^0,w,c
 14834   006AD2  6E06               	movwf	??___xxtofl^0,c
 14835   006AD4  0E00               	movlw	0
 14836   006AD6  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 14837   006AD8  6E07               	movwf	(??___xxtofl+1)^0,c
 14838   006ADA  0E00               	movlw	0
 14839   006ADC  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 14840   006ADE  6E08               	movwf	(??___xxtofl+2)^0,c
 14841   006AE0  0EFF               	movlw	255
 14842   006AE2  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 14843   006AE4  6E09               	movwf	(??___xxtofl+3)^0,c
 14844   006AE6  5006               	movf	??___xxtofl^0,w,c
 14845   006AE8  1007               	iorwf	(??___xxtofl+1)^0,w,c
 14846   006AEA  1008               	iorwf	(??___xxtofl+2)^0,w,c
 14847   006AEC  1009               	iorwf	(??___xxtofl+3)^0,w,c
 14848   006AEE  A4D8               	btfss	status,2,c
 14849   006AF0  EF7C  F035         	goto	u5431
 14850   006AF4  EF7E  F035         	goto	u5430
 14851   006AF8                     u5431:
 14852   006AF8  EF5B  F035         	goto	l5514
 14853   006AFC                     u5430:
 14854   006AFC  EF86  F035         	goto	l5522
 14855   006B00                     l5520:
 14856   006B00  060B               	decf	___xxtofl@exp^0,f,c
 14857   006B02  90D8               	bcf	status,0,c
 14858   006B04  360C               	rlcf	___xxtofl@arg^0,f,c
 14859   006B06  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 14860   006B08  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 14861   006B0A  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 14862   006B0C                     l5522:
 14863   006B0C  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 14864   006B0E  EF8B  F035         	goto	u5441
 14865   006B12  EF8D  F035         	goto	u5440
 14866   006B16                     u5441:
 14867   006B16  EF95  F035         	goto	l1224
 14868   006B1A                     u5440:
 14869   006B1A  0E02               	movlw	2
 14870   006B1C  600B               	cpfslt	___xxtofl@exp^0,c
 14871   006B1E  EF93  F035         	goto	u5451
 14872   006B22  EF95  F035         	goto	u5450
 14873   006B26                     u5451:
 14874   006B26  EF80  F035         	goto	l5520
 14875   006B2A                     u5450:
 14876   006B2A                     l1224:
 14877   006B2A  B00B               	btfsc	___xxtofl@exp^0,0,c
 14878   006B2C  EF9A  F035         	goto	u5461
 14879   006B30  EF9C  F035         	goto	u5460
 14880   006B34                     u5461:
 14881   006B34  EF9D  F035         	goto	l5528
 14882   006B38                     u5460:
 14883   006B38  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 14884   006B3A                     l5528:
 14885   006B3A  90D8               	bcf	status,0,c
 14886   006B3C  320B               	rrcf	___xxtofl@exp^0,f,c
 14887   006B3E  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
 14888   006B42  6A07               	clrf	(??___xxtofl+1)^0,c
 14889   006B44  6A08               	clrf	(??___xxtofl+2)^0,c
 14890   006B46  6A09               	clrf	(??___xxtofl+3)^0,c
 14891   006B48  C006  F009         	movff	??___xxtofl,??___xxtofl+3
 14892   006B4C  6A08               	clrf	(??___xxtofl+2)^0,c
 14893   006B4E  6A07               	clrf	(??___xxtofl+1)^0,c
 14894   006B50  6A06               	clrf	??___xxtofl^0,c
 14895   006B52  5006               	movf	??___xxtofl^0,w,c
 14896   006B54  120C               	iorwf	___xxtofl@arg^0,f,c
 14897   006B56  5007               	movf	(??___xxtofl+1)^0,w,c
 14898   006B58  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 14899   006B5A  5008               	movf	(??___xxtofl+2)^0,w,c
 14900   006B5C  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 14901   006B5E  5009               	movf	(??___xxtofl+3)^0,w,c
 14902   006B60  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 14903   006B62  500A               	movf	___xxtofl@sign^0,w,c
 14904   006B64  B4D8               	btfsc	status,2,c
 14905   006B66  EFB7  F035         	goto	u5471
 14906   006B6A  EFB9  F035         	goto	u5470
 14907   006B6E                     u5471:
 14908   006B6E  EFC1  F035         	goto	l5538
 14909   006B72                     u5470:
 14910   006B72  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 14911   006B74  EFC0  F035         	goto	u5480
 14912   006B78  EFBE  F035         	goto	u5481
 14913   006B7C                     u5481:
 14914   006B7C  EFC1  F035         	goto	l5538
 14915   006B80                     u5480:
 14916   006B80  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 14917   006B82                     l5538:
 14918   006B82  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
 14919   006B86  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
 14920   006B8A  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
 14921   006B8E  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
 14922   006B92                     l1213:
 14923   006B92  0012               	return		;funcret
 14924   006B94                     __end_of___xxtofl:
 14925                           	callstack 0
 14926                           
 14927 ;; *************** function ___flsub *****************
 14928 ;; Defined at:
 14929 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 14930 ;; Parameters:    Size  Location     Type
 14931 ;;  b               4   67[COMRAM] unsigned char 
 14932 ;;  a               4   71[COMRAM] unsigned char 
 14933 ;; Auto vars:     Size  Location     Type
 14934 ;;		None
 14935 ;; Return value:  Size  Location     Type
 14936 ;;                  4   67[COMRAM] unsigned char 
 14937 ;; Registers used:
 14938 ;;		wreg, status,2, status,0, cstack
 14939 ;; Tracked objects:
 14940 ;;		On entry : 0/0
 14941 ;;		On exit  : 0/0
 14942 ;;		Unchanged: 0/0
 14943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14944 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14947 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14948 ;;Total ram usage:        8 bytes
 14949 ;; Hardware stack levels used: 1
 14950 ;; Hardware stack levels required when called: 3
 14951 ;; This function calls:
 14952 ;;		___fladd
 14953 ;; This function is called by:
 14954 ;;		_decide_action
 14955 ;;		_efgtoa
 14956 ;;		_powf
 14957 ;; This function uses a non-reentrant model
 14958 ;;
 14959                           
 14960                           	psect	text43
 14961   007EB8                     __ptext43:
 14962                           	callstack 0
 14963   007EB8                     ___flsub:
 14964                           	callstack 23
 14965   007EB8  0E00               	movlw	0
 14966   007EBA  1A48               	xorwf	___flsub@a^0,f,c
 14967   007EBC  0E00               	movlw	0
 14968   007EBE  1A49               	xorwf	(___flsub@a+1)^0,f,c
 14969   007EC0  0E00               	movlw	0
 14970   007EC2  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 14971   007EC4  0E80               	movlw	128
 14972   007EC6  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 14973   007EC8  C044  F002         	movff	___flsub@b,___fladd@b
 14974   007ECC  C045  F003         	movff	___flsub@b+1,___fladd@b+1
 14975   007ED0  C046  F004         	movff	___flsub@b+2,___fladd@b+2
 14976   007ED4  C047  F005         	movff	___flsub@b+3,___fladd@b+3
 14977   007ED8  C048  F006         	movff	___flsub@a,___fladd@a
 14978   007EDC  C049  F007         	movff	___flsub@a+1,___fladd@a+1
 14979   007EE0  C04A  F008         	movff	___flsub@a+2,___fladd@a+2
 14980   007EE4  C04B  F009         	movff	___flsub@a+3,___fladd@a+3
 14981   007EE8  ECE4  F027         	call	___fladd	;wreg free
 14982   007EEC  C002  F044         	movff	?___fladd,?___flsub
 14983   007EF0  C003  F045         	movff	?___fladd+1,?___flsub+1
 14984   007EF4  C004  F046         	movff	?___fladd+2,?___flsub+2
 14985   007EF8  C005  F047         	movff	?___fladd+3,?___flsub+3
 14986   007EFC  0012               	return		;funcret
 14987   007EFE                     __end_of___flsub:
 14988                           	callstack 0
 14989                           
 14990 ;; *************** function ___fladd *****************
 14991 ;; Defined at:
 14992 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 14993 ;; Parameters:    Size  Location     Type
 14994 ;;  b               4    1[COMRAM] unsigned char 
 14995 ;;  a               4    5[COMRAM] unsigned char 
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;  grs             1   16[COMRAM] unsigned char 
 14998 ;;  bexp            1   15[COMRAM] unsigned char 
 14999 ;;  aexp            1   14[COMRAM] unsigned char 
 15000 ;;  signs           1   13[COMRAM] unsigned char 
 15001 ;; Return value:  Size  Location     Type
 15002 ;;                  4    1[COMRAM] unsigned char 
 15003 ;; Registers used:
 15004 ;;		wreg, status,2, status,0
 15005 ;; Tracked objects:
 15006 ;;		On entry : 0/0
 15007 ;;		On exit  : 0/0
 15008 ;;		Unchanged: 0/0
 15009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15010 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15011 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15012 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15013 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15014 ;;Total ram usage:       16 bytes
 15015 ;; Hardware stack levels used: 1
 15016 ;; Hardware stack levels required when called: 2
 15017 ;; This function calls:
 15018 ;;		Nothing
 15019 ;; This function is called by:
 15020 ;;		_decide_action
 15021 ;;		___flsub
 15022 ;;		_efgtoa
 15023 ;;		_powf
 15024 ;; This function uses a non-reentrant model
 15025 ;;
 15026                           
 15027                           	psect	text44
 15028   004FC8                     __ptext44:
 15029                           	callstack 0
 15030   004FC8                     ___fladd:
 15031                           	callstack 23
 15032   004FC8  5005               	movf	(___fladd@b+3)^0,w,c
 15033   004FCA  0B80               	andlw	128
 15034   004FCC  6E0E               	movwf	___fladd@signs^0,c
 15035   004FCE  5005               	movf	(___fladd@b+3)^0,w,c
 15036   004FD0  2405               	addwf	(___fladd@b+3)^0,w,c
 15037   004FD2  6E10               	movwf	___fladd@bexp^0,c
 15038   004FD4  AE04               	btfss	(___fladd@b+2)^0,7,c
 15039   004FD6  EFEF  F027         	goto	u6751
 15040   004FDA  EFF1  F027         	goto	u6750
 15041   004FDE                     u6751:
 15042   004FDE  EFF2  F027         	goto	l6980
 15043   004FE2                     u6750:
 15044   004FE2  8010               	bsf	___fladd@bexp^0,0,c
 15045   004FE4                     l6980:
 15046   004FE4  5010               	movf	___fladd@bexp^0,w,c
 15047   004FE6  B4D8               	btfsc	status,2,c
 15048   004FE8  EFF8  F027         	goto	u6761
 15049   004FEC  EFFA  F027         	goto	u6760
 15050   004FF0                     u6761:
 15051   004FF0  EF0F  F028         	goto	l6990
 15052   004FF4                     u6760:
 15053   004FF4  2810               	incf	___fladd@bexp^0,w,c
 15054   004FF6  A4D8               	btfss	status,2,c
 15055   004FF8  EF00  F028         	goto	u6771
 15056   004FFC  EF02  F028         	goto	u6770
 15057   005000                     u6771:
 15058   005000  EF0A  F028         	goto	l6986
 15059   005004                     u6770:
 15060   005004  0E00               	movlw	0
 15061   005006  6E02               	movwf	___fladd@b^0,c
 15062   005008  0E00               	movlw	0
 15063   00500A  6E03               	movwf	(___fladd@b+1)^0,c
 15064   00500C  0E00               	movlw	0
 15065   00500E  6E04               	movwf	(___fladd@b+2)^0,c
 15066   005010  0E00               	movlw	0
 15067   005012  6E05               	movwf	(___fladd@b+3)^0,c
 15068   005014                     l6986:
 15069   005014  8E04               	bsf	(___fladd@b+2)^0,7,c
 15070   005016  0E00               	movlw	0
 15071   005018  6E05               	movwf	(___fladd@b+3)^0,c
 15072   00501A  EF17  F028         	goto	l6992
 15073   00501E                     l6990:
 15074   00501E  0E00               	movlw	0
 15075   005020  6E02               	movwf	___fladd@b^0,c
 15076   005022  0E00               	movlw	0
 15077   005024  6E03               	movwf	(___fladd@b+1)^0,c
 15078   005026  0E00               	movlw	0
 15079   005028  6E04               	movwf	(___fladd@b+2)^0,c
 15080   00502A  0E00               	movlw	0
 15081   00502C  6E05               	movwf	(___fladd@b+3)^0,c
 15082   00502E                     l6992:
 15083   00502E  5009               	movf	(___fladd@a+3)^0,w,c
 15084   005030  0B80               	andlw	128
 15085   005032  6E0F               	movwf	___fladd@aexp^0,c
 15086   005034  500E               	movf	___fladd@signs^0,w,c
 15087   005036  180F               	xorwf	___fladd@aexp^0,w,c
 15088   005038  B4D8               	btfsc	status,2,c
 15089   00503A  EF21  F028         	goto	u6781
 15090   00503E  EF23  F028         	goto	u6780
 15091   005042                     u6781:
 15092   005042  EF24  F028         	goto	l6998
 15093   005046                     u6780:
 15094   005046  8C0E               	bsf	___fladd@signs^0,6,c
 15095   005048                     l6998:
 15096   005048  5009               	movf	(___fladd@a+3)^0,w,c
 15097   00504A  2409               	addwf	(___fladd@a+3)^0,w,c
 15098   00504C  6E0F               	movwf	___fladd@aexp^0,c
 15099   00504E  AE08               	btfss	(___fladd@a+2)^0,7,c
 15100   005050  EF2C  F028         	goto	u6791
 15101   005054  EF2E  F028         	goto	u6790
 15102   005058                     u6791:
 15103   005058  EF2F  F028         	goto	l7004
 15104   00505C                     u6790:
 15105   00505C  800F               	bsf	___fladd@aexp^0,0,c
 15106   00505E                     l7004:
 15107   00505E  500F               	movf	___fladd@aexp^0,w,c
 15108   005060  B4D8               	btfsc	status,2,c
 15109   005062  EF35  F028         	goto	u6801
 15110   005066  EF37  F028         	goto	u6800
 15111   00506A                     u6801:
 15112   00506A  EF4C  F028         	goto	l7014
 15113   00506E                     u6800:
 15114   00506E  280F               	incf	___fladd@aexp^0,w,c
 15115   005070  A4D8               	btfss	status,2,c
 15116   005072  EF3D  F028         	goto	u6811
 15117   005076  EF3F  F028         	goto	u6810
 15118   00507A                     u6811:
 15119   00507A  EF47  F028         	goto	l7010
 15120   00507E                     u6810:
 15121   00507E  0E00               	movlw	0
 15122   005080  6E06               	movwf	___fladd@a^0,c
 15123   005082  0E00               	movlw	0
 15124   005084  6E07               	movwf	(___fladd@a+1)^0,c
 15125   005086  0E00               	movlw	0
 15126   005088  6E08               	movwf	(___fladd@a+2)^0,c
 15127   00508A  0E00               	movlw	0
 15128   00508C  6E09               	movwf	(___fladd@a+3)^0,c
 15129   00508E                     l7010:
 15130   00508E  8E08               	bsf	(___fladd@a+2)^0,7,c
 15131   005090  0E00               	movlw	0
 15132   005092  6E09               	movwf	(___fladd@a+3)^0,c
 15133   005094  EF54  F028         	goto	l7016
 15134   005098                     l7014:
 15135   005098  0E00               	movlw	0
 15136   00509A  6E06               	movwf	___fladd@a^0,c
 15137   00509C  0E00               	movlw	0
 15138   00509E  6E07               	movwf	(___fladd@a+1)^0,c
 15139   0050A0  0E00               	movlw	0
 15140   0050A2  6E08               	movwf	(___fladd@a+2)^0,c
 15141   0050A4  0E00               	movlw	0
 15142   0050A6  6E09               	movwf	(___fladd@a+3)^0,c
 15143   0050A8                     l7016:
 15144   0050A8  5010               	movf	___fladd@bexp^0,w,c
 15145   0050AA  5C0F               	subwf	___fladd@aexp^0,w,c
 15146   0050AC  B0D8               	btfsc	status,0,c
 15147   0050AE  EF5B  F028         	goto	u6821
 15148   0050B2  EF5D  F028         	goto	u6820
 15149   0050B6                     u6821:
 15150   0050B6  EF84  F028         	goto	l7052
 15151   0050BA                     u6820:
 15152   0050BA  AC0E               	btfss	___fladd@signs^0,6,c
 15153   0050BC  EF62  F028         	goto	u6831
 15154   0050C0  EF64  F028         	goto	u6830
 15155   0050C4                     u6831:
 15156   0050C4  EF66  F028         	goto	l7022
 15157   0050C8                     u6830:
 15158   0050C8  0E80               	movlw	128
 15159   0050CA  1A0E               	xorwf	___fladd@signs^0,f,c
 15160   0050CC                     l7022:
 15161   0050CC  C010  F011         	movff	___fladd@bexp,___fladd@grs
 15162   0050D0  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 15163   0050D4  C011  F00F         	movff	___fladd@grs,___fladd@aexp
 15164   0050D8  C002  F011         	movff	___fladd@b,___fladd@grs
 15165   0050DC  C006  F002         	movff	___fladd@a,___fladd@b
 15166   0050E0  C011  F006         	movff	___fladd@grs,___fladd@a
 15167   0050E4  C003  F011         	movff	___fladd@b+1,___fladd@grs
 15168   0050E8  C007  F003         	movff	___fladd@a+1,___fladd@b+1
 15169   0050EC  C011  F007         	movff	___fladd@grs,___fladd@a+1
 15170   0050F0  C004  F011         	movff	___fladd@b+2,___fladd@grs
 15171   0050F4  C008  F004         	movff	___fladd@a+2,___fladd@b+2
 15172   0050F8  C011  F008         	movff	___fladd@grs,___fladd@a+2
 15173   0050FC  C005  F011         	movff	___fladd@b+3,___fladd@grs
 15174   005100  C009  F005         	movff	___fladd@a+3,___fladd@b+3
 15175   005104  C011  F009         	movff	___fladd@grs,___fladd@a+3
 15176   005108                     l7052:
 15177   005108  0E00               	movlw	0
 15178   00510A  6E11               	movwf	___fladd@grs^0,c
 15179   00510C  5010               	movf	___fladd@bexp^0,w,c
 15180   00510E  C00F  F00A         	movff	___fladd@aexp,??___fladd
 15181   005112  6A0B               	clrf	(??___fladd+1)^0,c
 15182   005114  5E0A               	subwf	??___fladd^0,f,c
 15183   005116  0E00               	movlw	0
 15184   005118  5A0B               	subwfb	(??___fladd+1)^0,f,c
 15185   00511A  BE0B               	btfsc	(??___fladd+1)^0,7,c
 15186   00511C  EF99  F028         	goto	u6841
 15187   005120  500B               	movf	(??___fladd+1)^0,w,c
 15188   005122  E109               	bnz	u6840
 15189   005124  0E1A               	movlw	26
 15190   005126  5C0A               	subwf	??___fladd^0,w,c
 15191   005128  A0D8               	btfss	status,0,c
 15192   00512A  EF99  F028         	goto	u6841
 15193   00512E  EF9B  F028         	goto	u6840
 15194   005132                     u6841:
 15195   005132  EFD2  F028         	goto	l1084
 15196   005136                     u6840:
 15197   005136  5002               	movf	___fladd@b^0,w,c
 15198   005138  1003               	iorwf	(___fladd@b+1)^0,w,c
 15199   00513A  1004               	iorwf	(___fladd@b+2)^0,w,c
 15200   00513C  1005               	iorwf	(___fladd@b+3)^0,w,c
 15201   00513E  A4D8               	btfss	status,2,c
 15202   005140  EFA4  F028         	goto	u6851
 15203   005144  EFA7  F028         	goto	u6850
 15204   005148                     u6851:
 15205   005148  0E01               	movlw	1
 15206   00514A  EFA8  F028         	goto	u6860
 15207   00514E                     u6850:
 15208   00514E  0E00               	movlw	0
 15209   005150                     u6860:
 15210   005150  6E11               	movwf	___fladd@grs^0,c
 15211   005152  0E00               	movlw	0
 15212   005154  6E02               	movwf	___fladd@b^0,c
 15213   005156  0E00               	movlw	0
 15214   005158  6E03               	movwf	(___fladd@b+1)^0,c
 15215   00515A  0E00               	movlw	0
 15216   00515C  6E04               	movwf	(___fladd@b+2)^0,c
 15217   00515E  0E00               	movlw	0
 15218   005160  6E05               	movwf	(___fladd@b+3)^0,c
 15219   005162  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 15220   005166  EFDB  F028         	goto	l1083
 15221   00516A                     l1085:
 15222   00516A  A011               	btfss	___fladd@grs^0,0,c
 15223   00516C  EFBA  F028         	goto	u6871
 15224   005170  EFBC  F028         	goto	u6870
 15225   005174                     u6871:
 15226   005174  EFC2  F028         	goto	l7064
 15227   005178                     u6870:
 15228   005178  90D8               	bcf	status,0,c
 15229   00517A  3011               	rrcf	___fladd@grs^0,w,c
 15230   00517C  0901               	iorlw	1
 15231   00517E  6E11               	movwf	___fladd@grs^0,c
 15232   005180  EFC4  F028         	goto	l7066
 15233   005184                     l7064:
 15234   005184  90D8               	bcf	status,0,c
 15235   005186  3211               	rrcf	___fladd@grs^0,f,c
 15236   005188                     l7066:
 15237   005188  A002               	btfss	___fladd@b^0,0,c
 15238   00518A  EFC9  F028         	goto	u6881
 15239   00518E  EFCB  F028         	goto	u6880
 15240   005192                     u6881:
 15241   005192  EFCC  F028         	goto	l7070
 15242   005196                     u6880:
 15243   005196  8E11               	bsf	___fladd@grs^0,7,c
 15244   005198                     l7070:
 15245   005198  3405               	rlcf	(___fladd@b+3)^0,w,c
 15246   00519A  3205               	rrcf	(___fladd@b+3)^0,f,c
 15247   00519C  3204               	rrcf	(___fladd@b+2)^0,f,c
 15248   00519E  3203               	rrcf	(___fladd@b+1)^0,f,c
 15249   0051A0  3202               	rrcf	___fladd@b^0,f,c
 15250   0051A2  2A10               	incf	___fladd@bexp^0,f,c
 15251   0051A4                     l1084:
 15252   0051A4  500F               	movf	___fladd@aexp^0,w,c
 15253   0051A6  5C10               	subwf	___fladd@bexp^0,w,c
 15254   0051A8  A0D8               	btfss	status,0,c
 15255   0051AA  EFD9  F028         	goto	u6891
 15256   0051AE  EFDB  F028         	goto	u6890
 15257   0051B2                     u6891:
 15258   0051B2  EFB5  F028         	goto	l1085
 15259   0051B6                     u6890:
 15260   0051B6                     l1083:
 15261   0051B6  BC0E               	btfsc	___fladd@signs^0,6,c
 15262   0051B8  EFE0  F028         	goto	u6901
 15263   0051BC  EFE2  F028         	goto	u6900
 15264   0051C0                     u6901:
 15265   0051C0  EF22  F029         	goto	l7098
 15266   0051C4                     u6900:
 15267   0051C4  5010               	movf	___fladd@bexp^0,w,c
 15268   0051C6  A4D8               	btfss	status,2,c
 15269   0051C8  EFE8  F028         	goto	u6911
 15270   0051CC  EFEA  F028         	goto	u6910
 15271   0051D0                     u6911:
 15272   0051D0  EFF4  F028         	goto	l7080
 15273   0051D4                     u6910:
 15274   0051D4  0E00               	movlw	0
 15275   0051D6  6E02               	movwf	?___fladd^0,c
 15276   0051D8  0E00               	movlw	0
 15277   0051DA  6E03               	movwf	(?___fladd+1)^0,c
 15278   0051DC  0E00               	movlw	0
 15279   0051DE  6E04               	movwf	(?___fladd+2)^0,c
 15280   0051E0  0E00               	movlw	0
 15281   0051E2  6E05               	movwf	(?___fladd+3)^0,c
 15282   0051E4  EF43  F02A         	goto	l1092
 15283   0051E8                     l7080:
 15284   0051E8  5006               	movf	___fladd@a^0,w,c
 15285   0051EA  2602               	addwf	___fladd@b^0,f,c
 15286   0051EC  5007               	movf	(___fladd@a+1)^0,w,c
 15287   0051EE  2203               	addwfc	(___fladd@b+1)^0,f,c
 15288   0051F0  5008               	movf	(___fladd@a+2)^0,w,c
 15289   0051F2  2204               	addwfc	(___fladd@b+2)^0,f,c
 15290   0051F4  5009               	movf	(___fladd@a+3)^0,w,c
 15291   0051F6  2205               	addwfc	(___fladd@b+3)^0,f,c
 15292   0051F8  A005               	btfss	(___fladd@b+3)^0,0,c
 15293   0051FA  EF01  F029         	goto	u6921
 15294   0051FE  EF03  F029         	goto	u6920
 15295   005202                     u6921:
 15296   005202  EFAF  F029         	goto	l7134
 15297   005206                     u6920:
 15298   005206  A011               	btfss	___fladd@grs^0,0,c
 15299   005208  EF08  F029         	goto	u6931
 15300   00520C  EF0A  F029         	goto	u6930
 15301   005210                     u6931:
 15302   005210  EF10  F029         	goto	l7088
 15303   005214                     u6930:
 15304   005214  90D8               	bcf	status,0,c
 15305   005216  3011               	rrcf	___fladd@grs^0,w,c
 15306   005218  0901               	iorlw	1
 15307   00521A  6E11               	movwf	___fladd@grs^0,c
 15308   00521C  EF12  F029         	goto	l7090
 15309   005220                     l7088:
 15310   005220  90D8               	bcf	status,0,c
 15311   005222  3211               	rrcf	___fladd@grs^0,f,c
 15312   005224                     l7090:
 15313   005224  A002               	btfss	___fladd@b^0,0,c
 15314   005226  EF17  F029         	goto	u6941
 15315   00522A  EF19  F029         	goto	u6940
 15316   00522E                     u6941:
 15317   00522E  EF1A  F029         	goto	l7094
 15318   005232                     u6940:
 15319   005232  8E11               	bsf	___fladd@grs^0,7,c
 15320   005234                     l7094:
 15321   005234  3405               	rlcf	(___fladd@b+3)^0,w,c
 15322   005236  3205               	rrcf	(___fladd@b+3)^0,f,c
 15323   005238  3204               	rrcf	(___fladd@b+2)^0,f,c
 15324   00523A  3203               	rrcf	(___fladd@b+1)^0,f,c
 15325   00523C  3202               	rrcf	___fladd@b^0,f,c
 15326   00523E  2A10               	incf	___fladd@bexp^0,f,c
 15327   005240  EFAF  F029         	goto	l7134
 15328   005244                     l7098:
 15329   005244  5006               	movf	___fladd@a^0,w,c
 15330   005246  5C02               	subwf	___fladd@b^0,w,c
 15331   005248  5007               	movf	(___fladd@a+1)^0,w,c
 15332   00524A  5803               	subwfb	(___fladd@b+1)^0,w,c
 15333   00524C  5008               	movf	(___fladd@a+2)^0,w,c
 15334   00524E  5804               	subwfb	(___fladd@b+2)^0,w,c
 15335   005250  5005               	movf	(___fladd@b+3)^0,w,c
 15336   005252  0A80               	xorlw	128
 15337   005254  6E0A               	movwf	??___fladd^0,c
 15338   005256  5009               	movf	(___fladd@a+3)^0,w,c
 15339   005258  0A80               	xorlw	128
 15340   00525A  580A               	subwfb	??___fladd^0,w,c
 15341   00525C  B0D8               	btfsc	status,0,c
 15342   00525E  EF33  F029         	goto	u6951
 15343   005262  EF35  F029         	goto	u6950
 15344   005266                     u6951:
 15345   005266  EF60  F029         	goto	l7108
 15346   00526A                     u6950:
 15347   00526A  5002               	movf	___fladd@b^0,w,c
 15348   00526C  5C06               	subwf	___fladd@a^0,w,c
 15349   00526E  6E0A               	movwf	??___fladd^0,c
 15350   005270  5003               	movf	(___fladd@b+1)^0,w,c
 15351   005272  5807               	subwfb	(___fladd@a+1)^0,w,c
 15352   005274  6E0B               	movwf	(??___fladd+1)^0,c
 15353   005276  5004               	movf	(___fladd@b+2)^0,w,c
 15354   005278  5808               	subwfb	(___fladd@a+2)^0,w,c
 15355   00527A  6E0C               	movwf	(??___fladd+2)^0,c
 15356   00527C  5005               	movf	(___fladd@b+3)^0,w,c
 15357   00527E  5809               	subwfb	(___fladd@a+3)^0,w,c
 15358   005280  6E0D               	movwf	(??___fladd+3)^0,c
 15359   005282  0EFF               	movlw	255
 15360   005284  240A               	addwf	??___fladd^0,w,c
 15361   005286  6E02               	movwf	___fladd@b^0,c
 15362   005288  0EFF               	movlw	255
 15363   00528A  200B               	addwfc	(??___fladd+1)^0,w,c
 15364   00528C  6E03               	movwf	(___fladd@b+1)^0,c
 15365   00528E  0EFF               	movlw	255
 15366   005290  200C               	addwfc	(??___fladd+2)^0,w,c
 15367   005292  6E04               	movwf	(___fladd@b+2)^0,c
 15368   005294  0EFF               	movlw	255
 15369   005296  200D               	addwfc	(??___fladd+3)^0,w,c
 15370   005298  6E05               	movwf	(___fladd@b+3)^0,c
 15371   00529A  0E80               	movlw	128
 15372   00529C  1A0E               	xorwf	___fladd@signs^0,f,c
 15373   00529E  6C11               	negf	___fladd@grs^0,c
 15374   0052A0  5011               	movf	___fladd@grs^0,w,c
 15375   0052A2  A4D8               	btfss	status,2,c
 15376   0052A4  EF56  F029         	goto	u6961
 15377   0052A8  EF58  F029         	goto	u6960
 15378   0052AC                     u6961:
 15379   0052AC  EF68  F029         	goto	l1100
 15380   0052B0                     u6960:
 15381   0052B0  0E01               	movlw	1
 15382   0052B2  2602               	addwf	___fladd@b^0,f,c
 15383   0052B4  0E00               	movlw	0
 15384   0052B6  2203               	addwfc	(___fladd@b+1)^0,f,c
 15385   0052B8  2204               	addwfc	(___fladd@b+2)^0,f,c
 15386   0052BA  2205               	addwfc	(___fladd@b+3)^0,f,c
 15387   0052BC  EF68  F029         	goto	l1100
 15388   0052C0                     l7108:
 15389   0052C0  5006               	movf	___fladd@a^0,w,c
 15390   0052C2  5E02               	subwf	___fladd@b^0,f,c
 15391   0052C4  5007               	movf	(___fladd@a+1)^0,w,c
 15392   0052C6  5A03               	subwfb	(___fladd@b+1)^0,f,c
 15393   0052C8  5008               	movf	(___fladd@a+2)^0,w,c
 15394   0052CA  5A04               	subwfb	(___fladd@b+2)^0,f,c
 15395   0052CC  5009               	movf	(___fladd@a+3)^0,w,c
 15396   0052CE  5A05               	subwfb	(___fladd@b+3)^0,f,c
 15397   0052D0                     l1100:
 15398   0052D0  5002               	movf	___fladd@b^0,w,c
 15399   0052D2  1003               	iorwf	(___fladd@b+1)^0,w,c
 15400   0052D4  1004               	iorwf	(___fladd@b+2)^0,w,c
 15401   0052D6  1005               	iorwf	(___fladd@b+3)^0,w,c
 15402   0052D8  A4D8               	btfss	status,2,c
 15403   0052DA  EF71  F029         	goto	u6971
 15404   0052DE  EF73  F029         	goto	u6970
 15405   0052E2                     u6971:
 15406   0052E2  EFA8  F029         	goto	l7132
 15407   0052E6                     u6970:
 15408   0052E6  5011               	movf	___fladd@grs^0,w,c
 15409   0052E8  A4D8               	btfss	status,2,c
 15410   0052EA  EF79  F029         	goto	u6981
 15411   0052EE  EF7B  F029         	goto	u6980
 15412   0052F2                     u6981:
 15413   0052F2  EFA8  F029         	goto	l7132
 15414   0052F6                     u6980:
 15415   0052F6  0E00               	movlw	0
 15416   0052F8  6E02               	movwf	?___fladd^0,c
 15417   0052FA  0E00               	movlw	0
 15418   0052FC  6E03               	movwf	(?___fladd+1)^0,c
 15419   0052FE  0E00               	movlw	0
 15420   005300  6E04               	movwf	(?___fladd+2)^0,c
 15421   005302  0E00               	movlw	0
 15422   005304  6E05               	movwf	(?___fladd+3)^0,c
 15423   005306  EF43  F02A         	goto	l1092
 15424   00530A                     l7116:
 15425   00530A  90D8               	bcf	status,0,c
 15426   00530C  3602               	rlcf	___fladd@b^0,f,c
 15427   00530E  3603               	rlcf	(___fladd@b+1)^0,f,c
 15428   005310  3604               	rlcf	(___fladd@b+2)^0,f,c
 15429   005312  3605               	rlcf	(___fladd@b+3)^0,f,c
 15430   005314  AE11               	btfss	___fladd@grs^0,7,c
 15431   005316  EF8F  F029         	goto	u6991
 15432   00531A  EF91  F029         	goto	u6990
 15433   00531E                     u6991:
 15434   00531E  EF92  F029         	goto	l7122
 15435   005322                     u6990:
 15436   005322  8002               	bsf	___fladd@b^0,0,c
 15437   005324                     l7122:
 15438   005324  A011               	btfss	___fladd@grs^0,0,c
 15439   005326  EF97  F029         	goto	u7001
 15440   00532A  EF99  F029         	goto	u7000
 15441   00532E                     u7001:
 15442   00532E  EF9D  F029         	goto	l7126
 15443   005332                     u7000:
 15444   005332  80D8               	bsf	status,0,c
 15445   005334  3611               	rlcf	___fladd@grs^0,f,c
 15446   005336  EF9F  F029         	goto	l7128
 15447   00533A                     l7126:
 15448   00533A  90D8               	bcf	status,0,c
 15449   00533C  3611               	rlcf	___fladd@grs^0,f,c
 15450   00533E                     l7128:
 15451   00533E  5010               	movf	___fladd@bexp^0,w,c
 15452   005340  B4D8               	btfsc	status,2,c
 15453   005342  EFA5  F029         	goto	u7011
 15454   005346  EFA7  F029         	goto	u7010
 15455   00534A                     u7011:
 15456   00534A  EFA8  F029         	goto	l7132
 15457   00534E                     u7010:
 15458   00534E  0610               	decf	___fladd@bexp^0,f,c
 15459   005350                     l7132:
 15460   005350  AE04               	btfss	(___fladd@b+2)^0,7,c
 15461   005352  EFAD  F029         	goto	u7021
 15462   005356  EFAF  F029         	goto	u7020
 15463   00535A                     u7021:
 15464   00535A  EF85  F029         	goto	l7116
 15465   00535E                     u7020:
 15466   00535E                     l7134:
 15467   00535E  0E00               	movlw	0
 15468   005360  6E0F               	movwf	___fladd@aexp^0,c
 15469   005362  AE11               	btfss	___fladd@grs^0,7,c
 15470   005364  EFB6  F029         	goto	u7031
 15471   005368  EFB8  F029         	goto	u7030
 15472   00536C                     u7031:
 15473   00536C  EFD0  F029         	goto	l1109
 15474   005370                     u7030:
 15475   005370  C011  F00A         	movff	___fladd@grs,??___fladd
 15476   005374  0E7F               	movlw	127
 15477   005376  160A               	andwf	??___fladd^0,f,c
 15478   005378  B4D8               	btfsc	status,2,c
 15479   00537A  EFC1  F029         	goto	u7041
 15480   00537E  EFC3  F029         	goto	u7040
 15481   005382                     u7041:
 15482   005382  EFC7  F029         	goto	l1110
 15483   005386                     u7040:
 15484   005386                     l7140:
 15485   005386  0E01               	movlw	1
 15486   005388  6E0F               	movwf	___fladd@aexp^0,c
 15487   00538A  EFD0  F029         	goto	l1109
 15488   00538E                     l1110:
 15489   00538E  A002               	btfss	___fladd@b^0,0,c
 15490   005390  EFCC  F029         	goto	u7051
 15491   005394  EFCE  F029         	goto	u7050
 15492   005398                     u7051:
 15493   005398  EFD0  F029         	goto	l1109
 15494   00539C                     u7050:
 15495   00539C  EFC3  F029         	goto	l7140
 15496   0053A0                     l1109:
 15497   0053A0  500F               	movf	___fladd@aexp^0,w,c
 15498   0053A2  B4D8               	btfsc	status,2,c
 15499   0053A4  EFD6  F029         	goto	u7061
 15500   0053A8  EFD8  F029         	goto	u7060
 15501   0053AC                     u7061:
 15502   0053AC  EF03  F02A         	goto	l7152
 15503   0053B0                     u7060:
 15504   0053B0  0E01               	movlw	1
 15505   0053B2  2602               	addwf	___fladd@b^0,f,c
 15506   0053B4  0E00               	movlw	0
 15507   0053B6  2203               	addwfc	(___fladd@b+1)^0,f,c
 15508   0053B8  2204               	addwfc	(___fladd@b+2)^0,f,c
 15509   0053BA  2205               	addwfc	(___fladd@b+3)^0,f,c
 15510   0053BC  A005               	btfss	(___fladd@b+3)^0,0,c
 15511   0053BE  EFE3  F029         	goto	u7071
 15512   0053C2  EFE5  F029         	goto	u7070
 15513   0053C6                     u7071:
 15514   0053C6  EF03  F02A         	goto	l7152
 15515   0053CA                     u7070:
 15516   0053CA  C002  F00A         	movff	___fladd@b,??___fladd
 15517   0053CE  C003  F00B         	movff	___fladd@b+1,??___fladd+1
 15518   0053D2  C004  F00C         	movff	___fladd@b+2,??___fladd+2
 15519   0053D6  C005  F00D         	movff	___fladd@b+3,??___fladd+3
 15520   0053DA  340D               	rlcf	(??___fladd+3)^0,w,c
 15521   0053DC  320D               	rrcf	(??___fladd+3)^0,f,c
 15522   0053DE  320C               	rrcf	(??___fladd+2)^0,f,c
 15523   0053E0  320B               	rrcf	(??___fladd+1)^0,f,c
 15524   0053E2  320A               	rrcf	??___fladd^0,f,c
 15525   0053E4  C00A  F002         	movff	??___fladd,___fladd@b
 15526   0053E8  C00B  F003         	movff	??___fladd+1,___fladd@b+1
 15527   0053EC  C00C  F004         	movff	??___fladd+2,___fladd@b+2
 15528   0053F0  C00D  F005         	movff	??___fladd+3,___fladd@b+3
 15529   0053F4  2810               	incf	___fladd@bexp^0,w,c
 15530   0053F6  B4D8               	btfsc	status,2,c
 15531   0053F8  EF00  F02A         	goto	u7081
 15532   0053FC  EF02  F02A         	goto	u7080
 15533   005400                     u7081:
 15534   005400  EF03  F02A         	goto	l7152
 15535   005404                     u7080:
 15536   005404  2A10               	incf	___fladd@bexp^0,f,c
 15537   005406                     l7152:
 15538   005406  2810               	incf	___fladd@bexp^0,w,c
 15539   005408  B4D8               	btfsc	status,2,c
 15540   00540A  EF09  F02A         	goto	u7091
 15541   00540E  EF0B  F02A         	goto	u7090
 15542   005412                     u7091:
 15543   005412  EF13  F02A         	goto	l7156
 15544   005416                     u7090:
 15545   005416  5010               	movf	___fladd@bexp^0,w,c
 15546   005418  A4D8               	btfss	status,2,c
 15547   00541A  EF11  F02A         	goto	u7101
 15548   00541E  EF13  F02A         	goto	u7100
 15549   005422                     u7101:
 15550   005422  EF25  F02A         	goto	l7160
 15551   005426                     u7100:
 15552   005426                     l7156:
 15553   005426  0E00               	movlw	0
 15554   005428  6E02               	movwf	___fladd@b^0,c
 15555   00542A  0E00               	movlw	0
 15556   00542C  6E03               	movwf	(___fladd@b+1)^0,c
 15557   00542E  0E00               	movlw	0
 15558   005430  6E04               	movwf	(___fladd@b+2)^0,c
 15559   005432  0E00               	movlw	0
 15560   005434  6E05               	movwf	(___fladd@b+3)^0,c
 15561   005436  5010               	movf	___fladd@bexp^0,w,c
 15562   005438  A4D8               	btfss	status,2,c
 15563   00543A  EF21  F02A         	goto	u7111
 15564   00543E  EF23  F02A         	goto	u7110
 15565   005442                     u7111:
 15566   005442  EF25  F02A         	goto	l7160
 15567   005446                     u7110:
 15568   005446  0E00               	movlw	0
 15569   005448  6E0E               	movwf	___fladd@signs^0,c
 15570   00544A                     l7160:
 15571   00544A  A010               	btfss	___fladd@bexp^0,0,c
 15572   00544C  EF2A  F02A         	goto	u7121
 15573   005450  EF2C  F02A         	goto	u7120
 15574   005454                     u7121:
 15575   005454  EF2F  F02A         	goto	l7164
 15576   005458                     u7120:
 15577   005458  8E04               	bsf	(___fladd@b+2)^0,7,c
 15578   00545A  EF30  F02A         	goto	l7166
 15579   00545E                     l7164:
 15580   00545E  9E04               	bcf	(___fladd@b+2)^0,7,c
 15581   005460                     l7166:
 15582   005460  90D8               	bcf	status,0,c
 15583   005462  3010               	rrcf	___fladd@bexp^0,w,c
 15584   005464  6E05               	movwf	(___fladd@b+3)^0,c
 15585   005466  AE0E               	btfss	___fladd@signs^0,7,c
 15586   005468  EF38  F02A         	goto	u7131
 15587   00546C  EF3A  F02A         	goto	u7130
 15588   005470                     u7131:
 15589   005470  EF3B  F02A         	goto	l7172
 15590   005474                     u7130:
 15591   005474  8E05               	bsf	(___fladd@b+3)^0,7,c
 15592   005476                     l7172:
 15593   005476  C002  F002         	movff	___fladd@b,?___fladd
 15594   00547A  C003  F003         	movff	___fladd@b+1,?___fladd+1
 15595   00547E  C004  F004         	movff	___fladd@b+2,?___fladd+2
 15596   005482  C005  F005         	movff	___fladd@b+3,?___fladd+3
 15597   005486                     l1092:
 15598   005486  0012               	return		;funcret
 15599   005488                     __end_of___fladd:
 15600                           	callstack 0
 15601                           
 15602 ;; *************** function ___flneg *****************
 15603 ;; Defined at:
 15604 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
 15605 ;; Parameters:    Size  Location     Type
 15606 ;;  f1              4    1[COMRAM] unsigned char 
 15607 ;; Auto vars:     Size  Location     Type
 15608 ;;		None
 15609 ;; Return value:  Size  Location     Type
 15610 ;;                  4    1[COMRAM] unsigned char 
 15611 ;; Registers used:
 15612 ;;		wreg, status,2, status,0
 15613 ;; Tracked objects:
 15614 ;;		On entry : 0/0
 15615 ;;		On exit  : 0/0
 15616 ;;		Unchanged: 0/0
 15617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15621 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15622 ;;Total ram usage:        4 bytes
 15623 ;; Hardware stack levels used: 1
 15624 ;; Hardware stack levels required when called: 2
 15625 ;; This function calls:
 15626 ;;		Nothing
 15627 ;; This function is called by:
 15628 ;;		_efgtoa
 15629 ;;		_powf
 15630 ;; This function uses a non-reentrant model
 15631 ;;
 15632                           
 15633                           	psect	text45
 15634   007FFE                     __ptext45:
 15635                           	callstack 0
 15636   007FFE                     ___flneg:
 15637                           	callstack 24
 15638   007FFE  5002               	movf	___flneg@f1^0,w,c
 15639   008000  1003               	iorwf	(___flneg@f1+1)^0,w,c
 15640   008002  1004               	iorwf	(___flneg@f1+2)^0,w,c
 15641   008004  1005               	iorwf	(___flneg@f1+3)^0,w,c
 15642   008006  B4D8               	btfsc	status,2,c
 15643   008008  EF08  F040         	goto	u7651
 15644   00800C  EF0A  F040         	goto	u7650
 15645   008010                     u7651:
 15646   008010  EF12  F040         	goto	l7500
 15647   008014                     u7650:
 15648   008014  0E00               	movlw	0
 15649   008016  1A02               	xorwf	___flneg@f1^0,f,c
 15650   008018  0E00               	movlw	0
 15651   00801A  1A03               	xorwf	(___flneg@f1+1)^0,f,c
 15652   00801C  0E00               	movlw	0
 15653   00801E  1A04               	xorwf	(___flneg@f1+2)^0,f,c
 15654   008020  0E80               	movlw	128
 15655   008022  1A05               	xorwf	(___flneg@f1+3)^0,f,c
 15656   008024                     l7500:
 15657   008024  C002  F002         	movff	___flneg@f1,?___flneg
 15658   008028  C003  F003         	movff	___flneg@f1+1,?___flneg+1
 15659   00802C  C004  F004         	movff	___flneg@f1+2,?___flneg+2
 15660   008030  C005  F005         	movff	___flneg@f1+3,?___flneg+3
 15661   008034  0012               	return		;funcret
 15662   008036                     __end_of___flneg:
 15663                           	callstack 0
 15664                           
 15665 ;; *************** function ___flge *****************
 15666 ;; Defined at:
 15667 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 15668 ;; Parameters:    Size  Location     Type
 15669 ;;  ff1             4   75[COMRAM] unsigned char 
 15670 ;;  ff2             4   79[COMRAM] unsigned char 
 15671 ;; Auto vars:     Size  Location     Type
 15672 ;;		None
 15673 ;; Return value:  Size  Location     Type
 15674 ;;		None               void
 15675 ;; Registers used:
 15676 ;;		wreg, status,2, status,0
 15677 ;; Tracked objects:
 15678 ;;		On entry : 0/0
 15679 ;;		On exit  : 0/0
 15680 ;;		Unchanged: 0/0
 15681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15682 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15685 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15686 ;;Total ram usage:       12 bytes
 15687 ;; Hardware stack levels used: 1
 15688 ;; Hardware stack levels required when called: 2
 15689 ;; This function calls:
 15690 ;;		Nothing
 15691 ;; This function is called by:
 15692 ;;		_decide_action
 15693 ;;		_efgtoa
 15694 ;;		_powf
 15695 ;; This function uses a non-reentrant model
 15696 ;;
 15697                           
 15698                           	psect	text46
 15699   006F0C                     __ptext46:
 15700                           	callstack 0
 15701   006F0C                     ___flge:
 15702                           	callstack 24
 15703   006F0C  0E00               	movlw	0
 15704   006F0E  144C               	andwf	___flge@ff1^0,w,c
 15705   006F10  6E54               	movwf	??___flge^0,c
 15706   006F12  0E00               	movlw	0
 15707   006F14  144D               	andwf	(___flge@ff1+1)^0,w,c
 15708   006F16  6E55               	movwf	(??___flge+1)^0,c
 15709   006F18  0E80               	movlw	128
 15710   006F1A  144E               	andwf	(___flge@ff1+2)^0,w,c
 15711   006F1C  6E56               	movwf	(??___flge+2)^0,c
 15712   006F1E  0E7F               	movlw	127
 15713   006F20  144F               	andwf	(___flge@ff1+3)^0,w,c
 15714   006F22  6E57               	movwf	(??___flge+3)^0,c
 15715   006F24  5054               	movf	??___flge^0,w,c
 15716   006F26  1055               	iorwf	(??___flge+1)^0,w,c
 15717   006F28  1056               	iorwf	(??___flge+2)^0,w,c
 15718   006F2A  1057               	iorwf	(??___flge+3)^0,w,c
 15719   006F2C  A4D8               	btfss	status,2,c
 15720   006F2E  EF9B  F037         	goto	u7601
 15721   006F32  EF9D  F037         	goto	u7600
 15722   006F36                     u7601:
 15723   006F36  EFA5  F037         	goto	l7478
 15724   006F3A                     u7600:
 15725   006F3A  0E00               	movlw	0
 15726   006F3C  6E4C               	movwf	___flge@ff1^0,c
 15727   006F3E  0E00               	movlw	0
 15728   006F40  6E4D               	movwf	(___flge@ff1+1)^0,c
 15729   006F42  0E00               	movlw	0
 15730   006F44  6E4E               	movwf	(___flge@ff1+2)^0,c
 15731   006F46  0E00               	movlw	0
 15732   006F48  6E4F               	movwf	(___flge@ff1+3)^0,c
 15733   006F4A                     l7478:
 15734   006F4A  0E00               	movlw	0
 15735   006F4C  1450               	andwf	___flge@ff2^0,w,c
 15736   006F4E  6E54               	movwf	??___flge^0,c
 15737   006F50  0E00               	movlw	0
 15738   006F52  1451               	andwf	(___flge@ff2+1)^0,w,c
 15739   006F54  6E55               	movwf	(??___flge+1)^0,c
 15740   006F56  0E80               	movlw	128
 15741   006F58  1452               	andwf	(___flge@ff2+2)^0,w,c
 15742   006F5A  6E56               	movwf	(??___flge+2)^0,c
 15743   006F5C  0E7F               	movlw	127
 15744   006F5E  1453               	andwf	(___flge@ff2+3)^0,w,c
 15745   006F60  6E57               	movwf	(??___flge+3)^0,c
 15746   006F62  5054               	movf	??___flge^0,w,c
 15747   006F64  1055               	iorwf	(??___flge+1)^0,w,c
 15748   006F66  1056               	iorwf	(??___flge+2)^0,w,c
 15749   006F68  1057               	iorwf	(??___flge+3)^0,w,c
 15750   006F6A  A4D8               	btfss	status,2,c
 15751   006F6C  EFBA  F037         	goto	u7611
 15752   006F70  EFBC  F037         	goto	u7610
 15753   006F74                     u7611:
 15754   006F74  EFC4  F037         	goto	l7482
 15755   006F78                     u7610:
 15756   006F78  0E00               	movlw	0
 15757   006F7A  6E50               	movwf	___flge@ff2^0,c
 15758   006F7C  0E00               	movlw	0
 15759   006F7E  6E51               	movwf	(___flge@ff2+1)^0,c
 15760   006F80  0E00               	movlw	0
 15761   006F82  6E52               	movwf	(___flge@ff2+2)^0,c
 15762   006F84  0E00               	movlw	0
 15763   006F86  6E53               	movwf	(___flge@ff2+3)^0,c
 15764   006F88                     l7482:
 15765   006F88  AE4F               	btfss	(___flge@ff1+3)^0,7,c
 15766   006F8A  EFC9  F037         	goto	u7621
 15767   006F8E  EFCB  F037         	goto	u7620
 15768   006F92                     u7621:
 15769   006F92  EFD4  F037         	goto	l7486
 15770   006F96                     u7620:
 15771   006F96  6C4C               	negf	___flge@ff1^0,c
 15772   006F98  1E4D               	comf	(___flge@ff1+1)^0,f,c
 15773   006F9A  B0D8               	btfsc	status,0,c
 15774   006F9C  2A4D               	incf	(___flge@ff1+1)^0,f,c
 15775   006F9E  1E4E               	comf	(___flge@ff1+2)^0,f,c
 15776   006FA0  B0D8               	btfsc	status,0,c
 15777   006FA2  2A4E               	incf	(___flge@ff1+2)^0,f,c
 15778   006FA4  0E80               	movlw	128
 15779   006FA6  564F               	subfwb	(___flge@ff1+3)^0,f,c
 15780   006FA8                     l7486:
 15781   006FA8  AE53               	btfss	(___flge@ff2+3)^0,7,c
 15782   006FAA  EFD9  F037         	goto	u7631
 15783   006FAE  EFDB  F037         	goto	u7630
 15784   006FB2                     u7631:
 15785   006FB2  EFE4  F037         	goto	l820
 15786   006FB6                     u7630:
 15787   006FB6  6C50               	negf	___flge@ff2^0,c
 15788   006FB8  1E51               	comf	(___flge@ff2+1)^0,f,c
 15789   006FBA  B0D8               	btfsc	status,0,c
 15790   006FBC  2A51               	incf	(___flge@ff2+1)^0,f,c
 15791   006FBE  1E52               	comf	(___flge@ff2+2)^0,f,c
 15792   006FC0  B0D8               	btfsc	status,0,c
 15793   006FC2  2A52               	incf	(___flge@ff2+2)^0,f,c
 15794   006FC4  0E80               	movlw	128
 15795   006FC6  5653               	subfwb	(___flge@ff2+3)^0,f,c
 15796   006FC8                     l820:
 15797   006FC8  0E00               	movlw	0
 15798   006FCA  1A4C               	xorwf	___flge@ff1^0,f,c
 15799   006FCC  0E00               	movlw	0
 15800   006FCE  1A4D               	xorwf	(___flge@ff1+1)^0,f,c
 15801   006FD0  0E00               	movlw	0
 15802   006FD2  1A4E               	xorwf	(___flge@ff1+2)^0,f,c
 15803   006FD4  0E80               	movlw	128
 15804   006FD6  1A4F               	xorwf	(___flge@ff1+3)^0,f,c
 15805   006FD8  0E00               	movlw	0
 15806   006FDA  1A50               	xorwf	___flge@ff2^0,f,c
 15807   006FDC  0E00               	movlw	0
 15808   006FDE  1A51               	xorwf	(___flge@ff2+1)^0,f,c
 15809   006FE0  0E00               	movlw	0
 15810   006FE2  1A52               	xorwf	(___flge@ff2+2)^0,f,c
 15811   006FE4  0E80               	movlw	128
 15812   006FE6  1A53               	xorwf	(___flge@ff2+3)^0,f,c
 15813   006FE8  5050               	movf	___flge@ff2^0,w,c
 15814   006FEA  5C4C               	subwf	___flge@ff1^0,w,c
 15815   006FEC  5051               	movf	(___flge@ff2+1)^0,w,c
 15816   006FEE  584D               	subwfb	(___flge@ff1+1)^0,w,c
 15817   006FF0  5052               	movf	(___flge@ff2+2)^0,w,c
 15818   006FF2  584E               	subwfb	(___flge@ff1+2)^0,w,c
 15819   006FF4  5053               	movf	(___flge@ff2+3)^0,w,c
 15820   006FF6  584F               	subwfb	(___flge@ff1+3)^0,w,c
 15821   006FF8  B0D8               	btfsc	status,0,c
 15822   006FFA  EF01  F038         	goto	u7641
 15823   006FFE  EF03  F038         	goto	u7640
 15824   007002                     u7641:
 15825   007002  EF06  F038         	goto	l7492
 15826   007006                     u7640:
 15827   007006  90D8               	bcf	status,0,c
 15828   007008  EF07  F038         	goto	l825
 15829   00700C                     l7492:
 15830   00700C  80D8               	bsf	status,0,c
 15831   00700E                     l825:
 15832   00700E  0012               	return		;funcret
 15833   007010                     __end_of___flge:
 15834                           	callstack 0
 15835                           
 15836 ;; *************** function ___fldiv *****************
 15837 ;; Defined at:
 15838 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;  b               4   42[COMRAM] unsigned char 
 15841 ;;  a               4   46[COMRAM] unsigned char 
 15842 ;; Auto vars:     Size  Location     Type
 15843 ;;  grs             4   61[COMRAM] unsigned long 
 15844 ;;  rem             4   54[COMRAM] unsigned long 
 15845 ;;  new_exp         2   59[COMRAM] short 
 15846 ;;  aexp            1   66[COMRAM] unsigned char 
 15847 ;;  bexp            1   65[COMRAM] unsigned char 
 15848 ;;  sign            1   58[COMRAM] unsigned char 
 15849 ;; Return value:  Size  Location     Type
 15850 ;;                  4   42[COMRAM] unsigned char 
 15851 ;; Registers used:
 15852 ;;		wreg, status,2, status,0
 15853 ;; Tracked objects:
 15854 ;;		On entry : 0/0
 15855 ;;		On exit  : 0/0
 15856 ;;		Unchanged: 0/0
 15857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15858 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15859 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15860 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15861 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15862 ;;Total ram usage:       25 bytes
 15863 ;; Hardware stack levels used: 1
 15864 ;; Hardware stack levels required when called: 2
 15865 ;; This function calls:
 15866 ;;		Nothing
 15867 ;; This function is called by:
 15868 ;;		_decide_action
 15869 ;;		_efgtoa
 15870 ;;		_powf
 15871 ;; This function uses a non-reentrant model
 15872 ;;
 15873                           
 15874                           	psect	text47
 15875   005C90                     __ptext47:
 15876                           	callstack 0
 15877   005C90                     ___fldiv:
 15878                           	callstack 24
 15879   005C90  502E               	movf	(___fldiv@b+3)^0,w,c
 15880   005C92  0B80               	andlw	128
 15881   005C94  6E3B               	movwf	___fldiv@sign^0,c
 15882   005C96  502E               	movf	(___fldiv@b+3)^0,w,c
 15883   005C98  242E               	addwf	(___fldiv@b+3)^0,w,c
 15884   005C9A  6E42               	movwf	___fldiv@bexp^0,c
 15885   005C9C  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 15886   005C9E  EF53  F02E         	goto	u7151
 15887   005CA2  EF55  F02E         	goto	u7150
 15888   005CA6                     u7151:
 15889   005CA6  EF56  F02E         	goto	l7190
 15890   005CAA                     u7150:
 15891   005CAA  8042               	bsf	___fldiv@bexp^0,0,c
 15892   005CAC                     l7190:
 15893   005CAC  5042               	movf	___fldiv@bexp^0,w,c
 15894   005CAE  B4D8               	btfsc	status,2,c
 15895   005CB0  EF5C  F02E         	goto	u7161
 15896   005CB4  EF5E  F02E         	goto	u7160
 15897   005CB8                     u7161:
 15898   005CB8  EF73  F02E         	goto	l7200
 15899   005CBC                     u7160:
 15900   005CBC  2842               	incf	___fldiv@bexp^0,w,c
 15901   005CBE  A4D8               	btfss	status,2,c
 15902   005CC0  EF64  F02E         	goto	u7171
 15903   005CC4  EF66  F02E         	goto	u7170
 15904   005CC8                     u7171:
 15905   005CC8  EF6E  F02E         	goto	l7196
 15906   005CCC                     u7170:
 15907   005CCC  0E00               	movlw	0
 15908   005CCE  6E2B               	movwf	___fldiv@b^0,c
 15909   005CD0  0E00               	movlw	0
 15910   005CD2  6E2C               	movwf	(___fldiv@b+1)^0,c
 15911   005CD4  0E00               	movlw	0
 15912   005CD6  6E2D               	movwf	(___fldiv@b+2)^0,c
 15913   005CD8  0E00               	movlw	0
 15914   005CDA  6E2E               	movwf	(___fldiv@b+3)^0,c
 15915   005CDC                     l7196:
 15916   005CDC  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 15917   005CDE  0E00               	movlw	0
 15918   005CE0  6E2E               	movwf	(___fldiv@b+3)^0,c
 15919   005CE2  EF7B  F02E         	goto	l7202
 15920   005CE6                     l7200:
 15921   005CE6  0E00               	movlw	0
 15922   005CE8  6E2B               	movwf	___fldiv@b^0,c
 15923   005CEA  0E00               	movlw	0
 15924   005CEC  6E2C               	movwf	(___fldiv@b+1)^0,c
 15925   005CEE  0E00               	movlw	0
 15926   005CF0  6E2D               	movwf	(___fldiv@b+2)^0,c
 15927   005CF2  0E00               	movlw	0
 15928   005CF4  6E2E               	movwf	(___fldiv@b+3)^0,c
 15929   005CF6                     l7202:
 15930   005CF6  5032               	movf	(___fldiv@a+3)^0,w,c
 15931   005CF8  0B80               	andlw	128
 15932   005CFA  1A3B               	xorwf	___fldiv@sign^0,f,c
 15933   005CFC  5032               	movf	(___fldiv@a+3)^0,w,c
 15934   005CFE  2432               	addwf	(___fldiv@a+3)^0,w,c
 15935   005D00  6E43               	movwf	___fldiv@aexp^0,c
 15936   005D02  AE31               	btfss	(___fldiv@a+2)^0,7,c
 15937   005D04  EF86  F02E         	goto	u7181
 15938   005D08  EF88  F02E         	goto	u7180
 15939   005D0C                     u7181:
 15940   005D0C  EF89  F02E         	goto	l7210
 15941   005D10                     u7180:
 15942   005D10  8043               	bsf	___fldiv@aexp^0,0,c
 15943   005D12                     l7210:
 15944   005D12  5043               	movf	___fldiv@aexp^0,w,c
 15945   005D14  B4D8               	btfsc	status,2,c
 15946   005D16  EF8F  F02E         	goto	u7191
 15947   005D1A  EF91  F02E         	goto	u7190
 15948   005D1E                     u7191:
 15949   005D1E  EFA6  F02E         	goto	l7220
 15950   005D22                     u7190:
 15951   005D22  2843               	incf	___fldiv@aexp^0,w,c
 15952   005D24  A4D8               	btfss	status,2,c
 15953   005D26  EF97  F02E         	goto	u7201
 15954   005D2A  EF99  F02E         	goto	u7200
 15955   005D2E                     u7201:
 15956   005D2E  EFA1  F02E         	goto	l7216
 15957   005D32                     u7200:
 15958   005D32  0E00               	movlw	0
 15959   005D34  6E2F               	movwf	___fldiv@a^0,c
 15960   005D36  0E00               	movlw	0
 15961   005D38  6E30               	movwf	(___fldiv@a+1)^0,c
 15962   005D3A  0E00               	movlw	0
 15963   005D3C  6E31               	movwf	(___fldiv@a+2)^0,c
 15964   005D3E  0E00               	movlw	0
 15965   005D40  6E32               	movwf	(___fldiv@a+3)^0,c
 15966   005D42                     l7216:
 15967   005D42  8E31               	bsf	(___fldiv@a+2)^0,7,c
 15968   005D44  0E00               	movlw	0
 15969   005D46  6E32               	movwf	(___fldiv@a+3)^0,c
 15970   005D48  EFAE  F02E         	goto	l7222
 15971   005D4C                     l7220:
 15972   005D4C  0E00               	movlw	0
 15973   005D4E  6E2F               	movwf	___fldiv@a^0,c
 15974   005D50  0E00               	movlw	0
 15975   005D52  6E30               	movwf	(___fldiv@a+1)^0,c
 15976   005D54  0E00               	movlw	0
 15977   005D56  6E31               	movwf	(___fldiv@a+2)^0,c
 15978   005D58  0E00               	movlw	0
 15979   005D5A  6E32               	movwf	(___fldiv@a+3)^0,c
 15980   005D5C                     l7222:
 15981   005D5C  502F               	movf	___fldiv@a^0,w,c
 15982   005D5E  1030               	iorwf	(___fldiv@a+1)^0,w,c
 15983   005D60  1031               	iorwf	(___fldiv@a+2)^0,w,c
 15984   005D62  1032               	iorwf	(___fldiv@a+3)^0,w,c
 15985   005D64  A4D8               	btfss	status,2,c
 15986   005D66  EFB7  F02E         	goto	u7211
 15987   005D6A  EFB9  F02E         	goto	u7210
 15988   005D6E                     u7211:
 15989   005D6E  EFD1  F02E         	goto	l7234
 15990   005D72                     u7210:
 15991   005D72  0E00               	movlw	0
 15992   005D74  6E2B               	movwf	___fldiv@b^0,c
 15993   005D76  0E00               	movlw	0
 15994   005D78  6E2C               	movwf	(___fldiv@b+1)^0,c
 15995   005D7A  0E00               	movlw	0
 15996   005D7C  6E2D               	movwf	(___fldiv@b+2)^0,c
 15997   005D7E  0E00               	movlw	0
 15998   005D80  6E2E               	movwf	(___fldiv@b+3)^0,c
 15999   005D82  0E80               	movlw	128
 16000   005D84  122D               	iorwf	(___fldiv@b+2)^0,f,c
 16001   005D86  0E7F               	movlw	127
 16002   005D88  122E               	iorwf	(___fldiv@b+3)^0,f,c
 16003   005D8A                     l7228:
 16004   005D8A  503B               	movf	___fldiv@sign^0,w,c
 16005   005D8C  122E               	iorwf	(___fldiv@b+3)^0,f,c
 16006   005D8E  C02B  F02B         	movff	___fldiv@b,?___fldiv
 16007   005D92  C02C  F02C         	movff	___fldiv@b+1,?___fldiv+1
 16008   005D96  C02D  F02D         	movff	___fldiv@b+2,?___fldiv+2
 16009   005D9A  C02E  F02E         	movff	___fldiv@b+3,?___fldiv+3
 16010   005D9E  EF14  F030         	goto	l1137
 16011   005DA2                     l7234:
 16012   005DA2  5042               	movf	___fldiv@bexp^0,w,c
 16013   005DA4  A4D8               	btfss	status,2,c
 16014   005DA6  EFD7  F02E         	goto	u7221
 16015   005DAA  EFD9  F02E         	goto	u7220
 16016   005DAE                     u7221:
 16017   005DAE  EFE3  F02E         	goto	l7242
 16018   005DB2                     u7220:
 16019   005DB2  0E00               	movlw	0
 16020   005DB4  6E2B               	movwf	?___fldiv^0,c
 16021   005DB6  0E00               	movlw	0
 16022   005DB8  6E2C               	movwf	(?___fldiv+1)^0,c
 16023   005DBA  0E00               	movlw	0
 16024   005DBC  6E2D               	movwf	(?___fldiv+2)^0,c
 16025   005DBE  0E00               	movlw	0
 16026   005DC0  6E2E               	movwf	(?___fldiv+3)^0,c
 16027   005DC2  EF14  F030         	goto	l1137
 16028   005DC6                     l7242:
 16029   005DC6  5043               	movf	___fldiv@aexp^0,w,c
 16030   005DC8  C042  F033         	movff	___fldiv@bexp,??___fldiv
 16031   005DCC  6A34               	clrf	(??___fldiv+1)^0,c
 16032   005DCE  5E33               	subwf	??___fldiv^0,f,c
 16033   005DD0  0E00               	movlw	0
 16034   005DD2  5A34               	subwfb	(??___fldiv+1)^0,f,c
 16035   005DD4  0E7F               	movlw	127
 16036   005DD6  2433               	addwf	??___fldiv^0,w,c
 16037   005DD8  6E3C               	movwf	___fldiv@new_exp^0,c
 16038   005DDA  0E00               	movlw	0
 16039   005DDC  2034               	addwfc	(??___fldiv+1)^0,w,c
 16040   005DDE  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 16041   005DE0  C02B  F037         	movff	___fldiv@b,___fldiv@rem
 16042   005DE4  C02C  F038         	movff	___fldiv@b+1,___fldiv@rem+1
 16043   005DE8  C02D  F039         	movff	___fldiv@b+2,___fldiv@rem+2
 16044   005DEC  C02E  F03A         	movff	___fldiv@b+3,___fldiv@rem+3
 16045   005DF0  0E00               	movlw	0
 16046   005DF2  6E2B               	movwf	___fldiv@b^0,c
 16047   005DF4  0E00               	movlw	0
 16048   005DF6  6E2C               	movwf	(___fldiv@b+1)^0,c
 16049   005DF8  0E00               	movlw	0
 16050   005DFA  6E2D               	movwf	(___fldiv@b+2)^0,c
 16051   005DFC  0E00               	movlw	0
 16052   005DFE  6E2E               	movwf	(___fldiv@b+3)^0,c
 16053   005E00  0E00               	movlw	0
 16054   005E02  6E3E               	movwf	___fldiv@grs^0,c
 16055   005E04  0E00               	movlw	0
 16056   005E06  6E3F               	movwf	(___fldiv@grs+1)^0,c
 16057   005E08  0E00               	movlw	0
 16058   005E0A  6E40               	movwf	(___fldiv@grs+2)^0,c
 16059   005E0C  0E00               	movlw	0
 16060   005E0E  6E41               	movwf	(___fldiv@grs+3)^0,c
 16061   005E10  0E00               	movlw	0
 16062   005E12  6E43               	movwf	___fldiv@aexp^0,c
 16063   005E14  EF44  F02F         	goto	l1139
 16064   005E18                     l7252:
 16065   005E18  5043               	movf	___fldiv@aexp^0,w,c
 16066   005E1A  B4D8               	btfsc	status,2,c
 16067   005E1C  EF12  F02F         	goto	u7231
 16068   005E20  EF14  F02F         	goto	u7230
 16069   005E24                     u7231:
 16070   005E24  EF2B  F02F         	goto	l7260
 16071   005E28                     u7230:
 16072   005E28  90D8               	bcf	status,0,c
 16073   005E2A  3637               	rlcf	___fldiv@rem^0,f,c
 16074   005E2C  3638               	rlcf	(___fldiv@rem+1)^0,f,c
 16075   005E2E  3639               	rlcf	(___fldiv@rem+2)^0,f,c
 16076   005E30  363A               	rlcf	(___fldiv@rem+3)^0,f,c
 16077   005E32  90D8               	bcf	status,0,c
 16078   005E34  362B               	rlcf	___fldiv@b^0,f,c
 16079   005E36  362C               	rlcf	(___fldiv@b+1)^0,f,c
 16080   005E38  362D               	rlcf	(___fldiv@b+2)^0,f,c
 16081   005E3A  362E               	rlcf	(___fldiv@b+3)^0,f,c
 16082   005E3C  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 16083   005E3E  EF23  F02F         	goto	u7241
 16084   005E42  EF25  F02F         	goto	u7240
 16085   005E46                     u7241:
 16086   005E46  EF26  F02F         	goto	l1142
 16087   005E4A                     u7240:
 16088   005E4A  802B               	bsf	___fldiv@b^0,0,c
 16089   005E4C                     l1142:
 16090   005E4C  90D8               	bcf	status,0,c
 16091   005E4E  363E               	rlcf	___fldiv@grs^0,f,c
 16092   005E50  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 16093   005E52  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 16094   005E54  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 16095   005E56                     l7260:
 16096   005E56  502F               	movf	___fldiv@a^0,w,c
 16097   005E58  5C37               	subwf	___fldiv@rem^0,w,c
 16098   005E5A  5030               	movf	(___fldiv@a+1)^0,w,c
 16099   005E5C  5838               	subwfb	(___fldiv@rem+1)^0,w,c
 16100   005E5E  5031               	movf	(___fldiv@a+2)^0,w,c
 16101   005E60  5839               	subwfb	(___fldiv@rem+2)^0,w,c
 16102   005E62  5032               	movf	(___fldiv@a+3)^0,w,c
 16103   005E64  583A               	subwfb	(___fldiv@rem+3)^0,w,c
 16104   005E66  A0D8               	btfss	status,0,c
 16105   005E68  EF38  F02F         	goto	u7251
 16106   005E6C  EF3A  F02F         	goto	u7250
 16107   005E70                     u7251:
 16108   005E70  EF43  F02F         	goto	l7266
 16109   005E74                     u7250:
 16110   005E74  8C41               	bsf	(___fldiv@grs+3)^0,6,c
 16111   005E76  502F               	movf	___fldiv@a^0,w,c
 16112   005E78  5E37               	subwf	___fldiv@rem^0,f,c
 16113   005E7A  5030               	movf	(___fldiv@a+1)^0,w,c
 16114   005E7C  5A38               	subwfb	(___fldiv@rem+1)^0,f,c
 16115   005E7E  5031               	movf	(___fldiv@a+2)^0,w,c
 16116   005E80  5A39               	subwfb	(___fldiv@rem+2)^0,f,c
 16117   005E82  5032               	movf	(___fldiv@a+3)^0,w,c
 16118   005E84  5A3A               	subwfb	(___fldiv@rem+3)^0,f,c
 16119   005E86                     l7266:
 16120   005E86  2A43               	incf	___fldiv@aexp^0,f,c
 16121   005E88                     l1139:
 16122   005E88  0E19               	movlw	25
 16123   005E8A  6443               	cpfsgt	___fldiv@aexp^0,c
 16124   005E8C  EF4A  F02F         	goto	u7261
 16125   005E90  EF4C  F02F         	goto	u7260
 16126   005E94                     u7261:
 16127   005E94  EF0C  F02F         	goto	l7252
 16128   005E98                     u7260:
 16129   005E98  5037               	movf	___fldiv@rem^0,w,c
 16130   005E9A  1038               	iorwf	(___fldiv@rem+1)^0,w,c
 16131   005E9C  1039               	iorwf	(___fldiv@rem+2)^0,w,c
 16132   005E9E  103A               	iorwf	(___fldiv@rem+3)^0,w,c
 16133   005EA0  B4D8               	btfsc	status,2,c
 16134   005EA2  EF55  F02F         	goto	u7271
 16135   005EA6  EF57  F02F         	goto	u7270
 16136   005EAA                     u7271:
 16137   005EAA  EF6F  F02F         	goto	l7278
 16138   005EAE                     u7270:
 16139   005EAE  803E               	bsf	___fldiv@grs^0,0,c
 16140   005EB0  EF6F  F02F         	goto	l7278
 16141   005EB4                     l7272:
 16142   005EB4  90D8               	bcf	status,0,c
 16143   005EB6  362B               	rlcf	___fldiv@b^0,f,c
 16144   005EB8  362C               	rlcf	(___fldiv@b+1)^0,f,c
 16145   005EBA  362D               	rlcf	(___fldiv@b+2)^0,f,c
 16146   005EBC  362E               	rlcf	(___fldiv@b+3)^0,f,c
 16147   005EBE  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 16148   005EC0  EF64  F02F         	goto	u7281
 16149   005EC4  EF66  F02F         	goto	u7280
 16150   005EC8                     u7281:
 16151   005EC8  EF67  F02F         	goto	l1148
 16152   005ECC                     u7280:
 16153   005ECC  802B               	bsf	___fldiv@b^0,0,c
 16154   005ECE                     l1148:
 16155   005ECE  90D8               	bcf	status,0,c
 16156   005ED0  363E               	rlcf	___fldiv@grs^0,f,c
 16157   005ED2  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 16158   005ED4  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 16159   005ED6  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 16160   005ED8  063C               	decf	___fldiv@new_exp^0,f,c
 16161   005EDA  A0D8               	btfss	status,0,c
 16162   005EDC  063D               	decf	(___fldiv@new_exp+1)^0,f,c
 16163   005EDE                     l7278:
 16164   005EDE  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 16165   005EE0  EF74  F02F         	goto	u7291
 16166   005EE4  EF76  F02F         	goto	u7290
 16167   005EE8                     u7291:
 16168   005EE8  EF5A  F02F         	goto	l7272
 16169   005EEC                     u7290:
 16170   005EEC  0E00               	movlw	0
 16171   005EEE  6E43               	movwf	___fldiv@aexp^0,c
 16172   005EF0  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 16173   005EF2  EF7D  F02F         	goto	u7301
 16174   005EF6  EF7F  F02F         	goto	u7300
 16175   005EFA                     u7301:
 16176   005EFA  EFA3  F02F         	goto	l1150
 16177   005EFE                     u7300:
 16178   005EFE  0EFF               	movlw	255
 16179   005F00  143E               	andwf	___fldiv@grs^0,w,c
 16180   005F02  6E33               	movwf	??___fldiv^0,c
 16181   005F04  0EFF               	movlw	255
 16182   005F06  143F               	andwf	(___fldiv@grs+1)^0,w,c
 16183   005F08  6E34               	movwf	(??___fldiv+1)^0,c
 16184   005F0A  0EFF               	movlw	255
 16185   005F0C  1440               	andwf	(___fldiv@grs+2)^0,w,c
 16186   005F0E  6E35               	movwf	(??___fldiv+2)^0,c
 16187   005F10  0E7F               	movlw	127
 16188   005F12  1441               	andwf	(___fldiv@grs+3)^0,w,c
 16189   005F14  6E36               	movwf	(??___fldiv+3)^0,c
 16190   005F16  5033               	movf	??___fldiv^0,w,c
 16191   005F18  1034               	iorwf	(??___fldiv+1)^0,w,c
 16192   005F1A  1035               	iorwf	(??___fldiv+2)^0,w,c
 16193   005F1C  1036               	iorwf	(??___fldiv+3)^0,w,c
 16194   005F1E  B4D8               	btfsc	status,2,c
 16195   005F20  EF94  F02F         	goto	u7311
 16196   005F24  EF96  F02F         	goto	u7310
 16197   005F28                     u7311:
 16198   005F28  EF9A  F02F         	goto	l1151
 16199   005F2C                     u7310:
 16200   005F2C                     l7286:
 16201   005F2C  0E01               	movlw	1
 16202   005F2E  6E43               	movwf	___fldiv@aexp^0,c
 16203   005F30  EFA3  F02F         	goto	l1150
 16204   005F34                     l1151:
 16205   005F34  A02B               	btfss	___fldiv@b^0,0,c
 16206   005F36  EF9F  F02F         	goto	u7321
 16207   005F3A  EFA1  F02F         	goto	u7320
 16208   005F3E                     u7321:
 16209   005F3E  EFA3  F02F         	goto	l1150
 16210   005F42                     u7320:
 16211   005F42  EF96  F02F         	goto	l7286
 16212   005F46                     l1150:
 16213   005F46  5043               	movf	___fldiv@aexp^0,w,c
 16214   005F48  B4D8               	btfsc	status,2,c
 16215   005F4A  EFA9  F02F         	goto	u7331
 16216   005F4E  EFAB  F02F         	goto	u7330
 16217   005F52                     u7331:
 16218   005F52  EFCF  F02F         	goto	l7298
 16219   005F56                     u7330:
 16220   005F56  0E01               	movlw	1
 16221   005F58  262B               	addwf	___fldiv@b^0,f,c
 16222   005F5A  0E00               	movlw	0
 16223   005F5C  222C               	addwfc	(___fldiv@b+1)^0,f,c
 16224   005F5E  222D               	addwfc	(___fldiv@b+2)^0,f,c
 16225   005F60  222E               	addwfc	(___fldiv@b+3)^0,f,c
 16226   005F62  A02E               	btfss	(___fldiv@b+3)^0,0,c
 16227   005F64  EFB6  F02F         	goto	u7341
 16228   005F68  EFB8  F02F         	goto	u7340
 16229   005F6C                     u7341:
 16230   005F6C  EFCF  F02F         	goto	l7298
 16231   005F70                     u7340:
 16232   005F70  C02B  F033         	movff	___fldiv@b,??___fldiv
 16233   005F74  C02C  F034         	movff	___fldiv@b+1,??___fldiv+1
 16234   005F78  C02D  F035         	movff	___fldiv@b+2,??___fldiv+2
 16235   005F7C  C02E  F036         	movff	___fldiv@b+3,??___fldiv+3
 16236   005F80  3436               	rlcf	(??___fldiv+3)^0,w,c
 16237   005F82  3236               	rrcf	(??___fldiv+3)^0,f,c
 16238   005F84  3235               	rrcf	(??___fldiv+2)^0,f,c
 16239   005F86  3234               	rrcf	(??___fldiv+1)^0,f,c
 16240   005F88  3233               	rrcf	??___fldiv^0,f,c
 16241   005F8A  C033  F02B         	movff	??___fldiv,___fldiv@b
 16242   005F8E  C034  F02C         	movff	??___fldiv+1,___fldiv@b+1
 16243   005F92  C035  F02D         	movff	??___fldiv+2,___fldiv@b+2
 16244   005F96  C036  F02E         	movff	??___fldiv+3,___fldiv@b+3
 16245   005F9A  4A3C               	infsnz	___fldiv@new_exp^0,f,c
 16246   005F9C  2A3D               	incf	(___fldiv@new_exp+1)^0,f,c
 16247   005F9E                     l7298:
 16248   005F9E  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 16249   005FA0  EFDA  F02F         	goto	u7351
 16250   005FA4  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 16251   005FA6  E108               	bnz	u7350
 16252   005FA8  283C               	incf	___fldiv@new_exp^0,w,c
 16253   005FAA  A0D8               	btfss	status,0,c
 16254   005FAC  EFDA  F02F         	goto	u7351
 16255   005FB0  EFDC  F02F         	goto	u7350
 16256   005FB4                     u7351:
 16257   005FB4  EFE7  F02F         	goto	l7302
 16258   005FB8                     u7350:
 16259   005FB8  0E00               	movlw	0
 16260   005FBA  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 16261   005FBC  683C               	setf	___fldiv@new_exp^0,c
 16262   005FBE  0E00               	movlw	0
 16263   005FC0  6E2B               	movwf	___fldiv@b^0,c
 16264   005FC2  0E00               	movlw	0
 16265   005FC4  6E2C               	movwf	(___fldiv@b+1)^0,c
 16266   005FC6  0E00               	movlw	0
 16267   005FC8  6E2D               	movwf	(___fldiv@b+2)^0,c
 16268   005FCA  0E00               	movlw	0
 16269   005FCC  6E2E               	movwf	(___fldiv@b+3)^0,c
 16270   005FCE                     l7302:
 16271   005FCE  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 16272   005FD0  EFF4  F02F         	goto	u7360
 16273   005FD4  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 16274   005FD6  E106               	bnz	u7361
 16275   005FD8  043C               	decf	___fldiv@new_exp^0,w,c
 16276   005FDA  B0D8               	btfsc	status,0,c
 16277   005FDC  EFF2  F02F         	goto	u7361
 16278   005FE0  EFF4  F02F         	goto	u7360
 16279   005FE4                     u7361:
 16280   005FE4  EF02  F030         	goto	l7306
 16281   005FE8                     u7360:
 16282   005FE8  0E00               	movlw	0
 16283   005FEA  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 16284   005FEC  0E00               	movlw	0
 16285   005FEE  6E3C               	movwf	___fldiv@new_exp^0,c
 16286   005FF0  0E00               	movlw	0
 16287   005FF2  6E2B               	movwf	___fldiv@b^0,c
 16288   005FF4  0E00               	movlw	0
 16289   005FF6  6E2C               	movwf	(___fldiv@b+1)^0,c
 16290   005FF8  0E00               	movlw	0
 16291   005FFA  6E2D               	movwf	(___fldiv@b+2)^0,c
 16292   005FFC  0E00               	movlw	0
 16293   005FFE  6E2E               	movwf	(___fldiv@b+3)^0,c
 16294   006000  0E00               	movlw	0
 16295   006002  6E3B               	movwf	___fldiv@sign^0,c
 16296   006004                     l7306:
 16297   006004  C03C  F042         	movff	___fldiv@new_exp,___fldiv@bexp
 16298   006008  A042               	btfss	___fldiv@bexp^0,0,c
 16299   00600A  EF09  F030         	goto	u7371
 16300   00600E  EF0B  F030         	goto	u7370
 16301   006012                     u7371:
 16302   006012  EF0E  F030         	goto	l7312
 16303   006016                     u7370:
 16304   006016  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 16305   006018  EF0F  F030         	goto	l7314
 16306   00601C                     l7312:
 16307   00601C  9E2D               	bcf	(___fldiv@b+2)^0,7,c
 16308   00601E                     l7314:
 16309   00601E  90D8               	bcf	status,0,c
 16310   006020  3042               	rrcf	___fldiv@bexp^0,w,c
 16311   006022  6E2E               	movwf	(___fldiv@b+3)^0,c
 16312   006024  EFC5  F02E         	goto	l7228
 16313   006028                     l1137:
 16314   006028  0012               	return		;funcret
 16315   00602A                     __end_of___fldiv:
 16316                           	callstack 0
 16317                           
 16318 ;; *************** function _color_read_Red *****************
 16319 ;; Defined at:
 16320 ;;		line 68 in file "color.c"
 16321 ;; Parameters:    Size  Location     Type
 16322 ;;		None
 16323 ;; Auto vars:     Size  Location     Type
 16324 ;;  tmp             2   10[COMRAM] unsigned int 
 16325 ;; Return value:  Size  Location     Type
 16326 ;;                  2    5[COMRAM] unsigned int 
 16327 ;; Registers used:
 16328 ;;		wreg, status,2, status,0, cstack
 16329 ;; Tracked objects:
 16330 ;;		On entry : 0/0
 16331 ;;		On exit  : 0/0
 16332 ;;		Unchanged: 0/0
 16333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16336 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16337 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16338 ;;Total ram usage:        7 bytes
 16339 ;; Hardware stack levels used: 1
 16340 ;; Hardware stack levels required when called: 4
 16341 ;; This function calls:
 16342 ;;		_I2C_2_Master_Read
 16343 ;;		_I2C_2_Master_RepStart
 16344 ;;		_I2C_2_Master_Start
 16345 ;;		_I2C_2_Master_Stop
 16346 ;;		_I2C_2_Master_Write
 16347 ;; This function is called by:
 16348 ;;		_main
 16349 ;; This function uses a non-reentrant model
 16350 ;;
 16351                           
 16352                           	psect	text48
 16353   007CE8                     __ptext48:
 16354                           	callstack 0
 16355   007CE8                     _color_read_Red:
 16356                           	callstack 26
 16357   007CE8                     
 16358                           ;color.c: 69:  unsigned int tmp;;color.c: 70:  I2C_2_Master_Start();
 16359   007CE8  EC12  F041         	call	_I2C_2_Master_Start	;wreg free
 16360                           
 16361                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x00);
 16362   007CEC  0E52               	movlw	82
 16363   007CEE  ECF7  F040         	call	_I2C_2_Master_Write
 16364                           
 16365                           ;color.c: 72:  I2C_2_Master_Write(0xA0 | 0x16);
 16366   007CF2  0EB6               	movlw	182
 16367   007CF4  ECF7  F040         	call	_I2C_2_Master_Write
 16368                           
 16369                           ;color.c: 73:  I2C_2_Master_RepStart();
 16370   007CF8  EC08  F041         	call	_I2C_2_Master_RepStart	;wreg free
 16371                           
 16372                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x01);
 16373   007CFC  0E53               	movlw	83
 16374   007CFE  ECF7  F040         	call	_I2C_2_Master_Write
 16375                           
 16376                           ;color.c: 75:  tmp=I2C_2_Master_Read(1);
 16377   007D02  0E01               	movlw	1
 16378   007D04  EC7F  F03F         	call	_I2C_2_Master_Read
 16379   007D08  6E08               	movwf	??_color_read_Red^0,c
 16380   007D0A  5008               	movf	??_color_read_Red^0,w,c
 16381   007D0C  6E0B               	movwf	color_read_Red@tmp^0,c
 16382   007D0E  6A0C               	clrf	(color_read_Red@tmp+1)^0,c
 16383                           
 16384                           ;color.c: 76:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 16385   007D10  0E00               	movlw	0
 16386   007D12  EC7F  F03F         	call	_I2C_2_Master_Read
 16387   007D16  6E08               	movwf	??_color_read_Red^0,c
 16388   007D18  5008               	movf	??_color_read_Red^0,w,c
 16389   007D1A  6E0A               	movwf	(??_color_read_Red+2)^0,c
 16390   007D1C  6A09               	clrf	(??_color_read_Red+1)^0,c
 16391   007D1E  500B               	movf	color_read_Red@tmp^0,w,c
 16392   007D20  1009               	iorwf	(??_color_read_Red+1)^0,w,c
 16393   007D22  6E0B               	movwf	color_read_Red@tmp^0,c
 16394   007D24  500C               	movf	(color_read_Red@tmp+1)^0,w,c
 16395   007D26  100A               	iorwf	(??_color_read_Red+2)^0,w,c
 16396   007D28  6E0C               	movwf	(color_read_Red@tmp+1)^0,c
 16397                           
 16398                           ;color.c: 77:  I2C_2_Master_Stop();
 16399   007D2A  EC0D  F041         	call	_I2C_2_Master_Stop	;wreg free
 16400   007D2E                     
 16401                           ;color.c: 78:  return tmp;
 16402   007D2E  C00B  F006         	movff	color_read_Red@tmp,?_color_read_Red
 16403   007D32  C00C  F007         	movff	color_read_Red@tmp+1,?_color_read_Red+1
 16404   007D36  0012               	return		;funcret
 16405   007D38                     __end_of_color_read_Red:
 16406                           	callstack 0
 16407                           
 16408 ;; *************** function _color_read_Green *****************
 16409 ;; Defined at:
 16410 ;;		line 81 in file "color.c"
 16411 ;; Parameters:    Size  Location     Type
 16412 ;;		None
 16413 ;; Auto vars:     Size  Location     Type
 16414 ;;  tmp             2   10[COMRAM] unsigned int 
 16415 ;; Return value:  Size  Location     Type
 16416 ;;                  2    5[COMRAM] unsigned int 
 16417 ;; Registers used:
 16418 ;;		wreg, status,2, status,0, cstack
 16419 ;; Tracked objects:
 16420 ;;		On entry : 0/0
 16421 ;;		On exit  : 0/0
 16422 ;;		Unchanged: 0/0
 16423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16426 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16427 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16428 ;;Total ram usage:        7 bytes
 16429 ;; Hardware stack levels used: 1
 16430 ;; Hardware stack levels required when called: 4
 16431 ;; This function calls:
 16432 ;;		_I2C_2_Master_Read
 16433 ;;		_I2C_2_Master_RepStart
 16434 ;;		_I2C_2_Master_Start
 16435 ;;		_I2C_2_Master_Stop
 16436 ;;		_I2C_2_Master_Write
 16437 ;; This function is called by:
 16438 ;;		_main
 16439 ;; This function uses a non-reentrant model
 16440 ;;
 16441                           
 16442                           	psect	text49
 16443   007D38                     __ptext49:
 16444                           	callstack 0
 16445   007D38                     _color_read_Green:
 16446                           	callstack 26
 16447   007D38                     
 16448                           ;color.c: 82:  unsigned int tmp;;color.c: 83:  I2C_2_Master_Start();
 16449   007D38  EC12  F041         	call	_I2C_2_Master_Start	;wreg free
 16450                           
 16451                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x00);
 16452   007D3C  0E52               	movlw	82
 16453   007D3E  ECF7  F040         	call	_I2C_2_Master_Write
 16454                           
 16455                           ;color.c: 85:  I2C_2_Master_Write(0xA0 | 0x18);
 16456   007D42  0EB8               	movlw	184
 16457   007D44  ECF7  F040         	call	_I2C_2_Master_Write
 16458                           
 16459                           ;color.c: 86:  I2C_2_Master_RepStart();
 16460   007D48  EC08  F041         	call	_I2C_2_Master_RepStart	;wreg free
 16461                           
 16462                           ;color.c: 87:  I2C_2_Master_Write(0x52 | 0x01);
 16463   007D4C  0E53               	movlw	83
 16464   007D4E  ECF7  F040         	call	_I2C_2_Master_Write
 16465                           
 16466                           ;color.c: 88:  tmp=I2C_2_Master_Read(1);
 16467   007D52  0E01               	movlw	1
 16468   007D54  EC7F  F03F         	call	_I2C_2_Master_Read
 16469   007D58  6E08               	movwf	??_color_read_Green^0,c
 16470   007D5A  5008               	movf	??_color_read_Green^0,w,c
 16471   007D5C  6E0B               	movwf	color_read_Green@tmp^0,c
 16472   007D5E  6A0C               	clrf	(color_read_Green@tmp+1)^0,c
 16473                           
 16474                           ;color.c: 89:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 16475   007D60  0E00               	movlw	0
 16476   007D62  EC7F  F03F         	call	_I2C_2_Master_Read
 16477   007D66  6E08               	movwf	??_color_read_Green^0,c
 16478   007D68  5008               	movf	??_color_read_Green^0,w,c
 16479   007D6A  6E0A               	movwf	(??_color_read_Green+2)^0,c
 16480   007D6C  6A09               	clrf	(??_color_read_Green+1)^0,c
 16481   007D6E  500B               	movf	color_read_Green@tmp^0,w,c
 16482   007D70  1009               	iorwf	(??_color_read_Green+1)^0,w,c
 16483   007D72  6E0B               	movwf	color_read_Green@tmp^0,c
 16484   007D74  500C               	movf	(color_read_Green@tmp+1)^0,w,c
 16485   007D76  100A               	iorwf	(??_color_read_Green+2)^0,w,c
 16486   007D78  6E0C               	movwf	(color_read_Green@tmp+1)^0,c
 16487                           
 16488                           ;color.c: 90:  I2C_2_Master_Stop();
 16489   007D7A  EC0D  F041         	call	_I2C_2_Master_Stop	;wreg free
 16490   007D7E                     
 16491                           ;color.c: 91:  return tmp;
 16492   007D7E  C00B  F006         	movff	color_read_Green@tmp,?_color_read_Green
 16493   007D82  C00C  F007         	movff	color_read_Green@tmp+1,?_color_read_Green+1
 16494   007D86  0012               	return		;funcret
 16495   007D88                     __end_of_color_read_Green:
 16496                           	callstack 0
 16497                           
 16498 ;; *************** function _color_read_Clear *****************
 16499 ;; Defined at:
 16500 ;;		line 55 in file "color.c"
 16501 ;; Parameters:    Size  Location     Type
 16502 ;;		None
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;  tmp             2   10[COMRAM] unsigned int 
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  2    5[COMRAM] unsigned int 
 16507 ;; Registers used:
 16508 ;;		wreg, status,2, status,0, cstack
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16515 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16516 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16517 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16518 ;;Total ram usage:        7 bytes
 16519 ;; Hardware stack levels used: 1
 16520 ;; Hardware stack levels required when called: 4
 16521 ;; This function calls:
 16522 ;;		_I2C_2_Master_Read
 16523 ;;		_I2C_2_Master_RepStart
 16524 ;;		_I2C_2_Master_Start
 16525 ;;		_I2C_2_Master_Stop
 16526 ;;		_I2C_2_Master_Write
 16527 ;; This function is called by:
 16528 ;;		_main
 16529 ;; This function uses a non-reentrant model
 16530 ;;
 16531                           
 16532                           	psect	text50
 16533   007D88                     __ptext50:
 16534                           	callstack 0
 16535   007D88                     _color_read_Clear:
 16536                           	callstack 26
 16537   007D88                     
 16538                           ;color.c: 56:  unsigned int tmp;;color.c: 57:  I2C_2_Master_Start();
 16539   007D88  EC12  F041         	call	_I2C_2_Master_Start	;wreg free
 16540                           
 16541                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
 16542   007D8C  0E52               	movlw	82
 16543   007D8E  ECF7  F040         	call	_I2C_2_Master_Write
 16544                           
 16545                           ;color.c: 59:  I2C_2_Master_Write(0xA0 | 0x14);
 16546   007D92  0EB4               	movlw	180
 16547   007D94  ECF7  F040         	call	_I2C_2_Master_Write
 16548                           
 16549                           ;color.c: 60:  I2C_2_Master_RepStart();
 16550   007D98  EC08  F041         	call	_I2C_2_Master_RepStart	;wreg free
 16551                           
 16552                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
 16553   007D9C  0E53               	movlw	83
 16554   007D9E  ECF7  F040         	call	_I2C_2_Master_Write
 16555                           
 16556                           ;color.c: 62:  tmp=I2C_2_Master_Read(1);
 16557   007DA2  0E01               	movlw	1
 16558   007DA4  EC7F  F03F         	call	_I2C_2_Master_Read
 16559   007DA8  6E08               	movwf	??_color_read_Clear^0,c
 16560   007DAA  5008               	movf	??_color_read_Clear^0,w,c
 16561   007DAC  6E0B               	movwf	color_read_Clear@tmp^0,c
 16562   007DAE  6A0C               	clrf	(color_read_Clear@tmp+1)^0,c
 16563                           
 16564                           ;color.c: 63:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 16565   007DB0  0E00               	movlw	0
 16566   007DB2  EC7F  F03F         	call	_I2C_2_Master_Read
 16567   007DB6  6E08               	movwf	??_color_read_Clear^0,c
 16568   007DB8  5008               	movf	??_color_read_Clear^0,w,c
 16569   007DBA  6E0A               	movwf	(??_color_read_Clear+2)^0,c
 16570   007DBC  6A09               	clrf	(??_color_read_Clear+1)^0,c
 16571   007DBE  500B               	movf	color_read_Clear@tmp^0,w,c
 16572   007DC0  1009               	iorwf	(??_color_read_Clear+1)^0,w,c
 16573   007DC2  6E0B               	movwf	color_read_Clear@tmp^0,c
 16574   007DC4  500C               	movf	(color_read_Clear@tmp+1)^0,w,c
 16575   007DC6  100A               	iorwf	(??_color_read_Clear+2)^0,w,c
 16576   007DC8  6E0C               	movwf	(color_read_Clear@tmp+1)^0,c
 16577                           
 16578                           ;color.c: 64:  I2C_2_Master_Stop();
 16579   007DCA  EC0D  F041         	call	_I2C_2_Master_Stop	;wreg free
 16580   007DCE                     
 16581                           ;color.c: 65:  return tmp;
 16582   007DCE  C00B  F006         	movff	color_read_Clear@tmp,?_color_read_Clear
 16583   007DD2  C00C  F007         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 16584   007DD6  0012               	return		;funcret
 16585   007DD8                     __end_of_color_read_Clear:
 16586                           	callstack 0
 16587                           
 16588 ;; *************** function _color_read_Blue *****************
 16589 ;; Defined at:
 16590 ;;		line 94 in file "color.c"
 16591 ;; Parameters:    Size  Location     Type
 16592 ;;		None
 16593 ;; Auto vars:     Size  Location     Type
 16594 ;;  tmp             2   10[COMRAM] unsigned int 
 16595 ;; Return value:  Size  Location     Type
 16596 ;;                  2    5[COMRAM] unsigned int 
 16597 ;; Registers used:
 16598 ;;		wreg, status,2, status,0, cstack
 16599 ;; Tracked objects:
 16600 ;;		On entry : 0/0
 16601 ;;		On exit  : 0/0
 16602 ;;		Unchanged: 0/0
 16603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16606 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16607 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16608 ;;Total ram usage:        7 bytes
 16609 ;; Hardware stack levels used: 1
 16610 ;; Hardware stack levels required when called: 4
 16611 ;; This function calls:
 16612 ;;		_I2C_2_Master_Read
 16613 ;;		_I2C_2_Master_RepStart
 16614 ;;		_I2C_2_Master_Start
 16615 ;;		_I2C_2_Master_Stop
 16616 ;;		_I2C_2_Master_Write
 16617 ;; This function is called by:
 16618 ;;		_main
 16619 ;; This function uses a non-reentrant model
 16620 ;;
 16621                           
 16622                           	psect	text51
 16623   007DD8                     __ptext51:
 16624                           	callstack 0
 16625   007DD8                     _color_read_Blue:
 16626                           	callstack 26
 16627   007DD8                     
 16628                           ;color.c: 95:  unsigned int tmp;;color.c: 96:  I2C_2_Master_Start();
 16629   007DD8  EC12  F041         	call	_I2C_2_Master_Start	;wreg free
 16630                           
 16631                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x00);
 16632   007DDC  0E52               	movlw	82
 16633   007DDE  ECF7  F040         	call	_I2C_2_Master_Write
 16634                           
 16635                           ;color.c: 98:  I2C_2_Master_Write(0xA0 | 0x1A);
 16636   007DE2  0EBA               	movlw	186
 16637   007DE4  ECF7  F040         	call	_I2C_2_Master_Write
 16638                           
 16639                           ;color.c: 99:  I2C_2_Master_RepStart();
 16640   007DE8  EC08  F041         	call	_I2C_2_Master_RepStart	;wreg free
 16641                           
 16642                           ;color.c: 100:  I2C_2_Master_Write(0x52 | 0x01);
 16643   007DEC  0E53               	movlw	83
 16644   007DEE  ECF7  F040         	call	_I2C_2_Master_Write
 16645                           
 16646                           ;color.c: 101:  tmp=I2C_2_Master_Read(1);
 16647   007DF2  0E01               	movlw	1
 16648   007DF4  EC7F  F03F         	call	_I2C_2_Master_Read
 16649   007DF8  6E08               	movwf	??_color_read_Blue^0,c
 16650   007DFA  5008               	movf	??_color_read_Blue^0,w,c
 16651   007DFC  6E0B               	movwf	color_read_Blue@tmp^0,c
 16652   007DFE  6A0C               	clrf	(color_read_Blue@tmp+1)^0,c
 16653                           
 16654                           ;color.c: 102:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 16655   007E00  0E00               	movlw	0
 16656   007E02  EC7F  F03F         	call	_I2C_2_Master_Read
 16657   007E06  6E08               	movwf	??_color_read_Blue^0,c
 16658   007E08  5008               	movf	??_color_read_Blue^0,w,c
 16659   007E0A  6E0A               	movwf	(??_color_read_Blue+2)^0,c
 16660   007E0C  6A09               	clrf	(??_color_read_Blue+1)^0,c
 16661   007E0E  500B               	movf	color_read_Blue@tmp^0,w,c
 16662   007E10  1009               	iorwf	(??_color_read_Blue+1)^0,w,c
 16663   007E12  6E0B               	movwf	color_read_Blue@tmp^0,c
 16664   007E14  500C               	movf	(color_read_Blue@tmp+1)^0,w,c
 16665   007E16  100A               	iorwf	(??_color_read_Blue+2)^0,w,c
 16666   007E18  6E0C               	movwf	(color_read_Blue@tmp+1)^0,c
 16667                           
 16668                           ;color.c: 103:  I2C_2_Master_Stop();
 16669   007E1A  EC0D  F041         	call	_I2C_2_Master_Stop	;wreg free
 16670   007E1E                     
 16671                           ;color.c: 104:  return tmp;
 16672   007E1E  C00B  F006         	movff	color_read_Blue@tmp,?_color_read_Blue
 16673   007E22  C00C  F007         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
 16674   007E26  0012               	return		;funcret
 16675   007E28                     __end_of_color_read_Blue:
 16676                           	callstack 0
 16677                           
 16678 ;; *************** function _I2C_2_Master_RepStart *****************
 16679 ;; Defined at:
 16680 ;;		line 30 in file "i2c.c"
 16681 ;; Parameters:    Size  Location     Type
 16682 ;;		None
 16683 ;; Auto vars:     Size  Location     Type
 16684 ;;		None
 16685 ;; Return value:  Size  Location     Type
 16686 ;;                  1    wreg      void 
 16687 ;; Registers used:
 16688 ;;		wreg, status,2, status,0, cstack
 16689 ;; Tracked objects:
 16690 ;;		On entry : 0/0
 16691 ;;		On exit  : 0/0
 16692 ;;		Unchanged: 0/0
 16693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16698 ;;Total ram usage:        0 bytes
 16699 ;; Hardware stack levels used: 1
 16700 ;; Hardware stack levels required when called: 3
 16701 ;; This function calls:
 16702 ;;		_I2C_2_Master_Idle
 16703 ;; This function is called by:
 16704 ;;		_color_read_Clear
 16705 ;;		_color_read_Red
 16706 ;;		_color_read_Green
 16707 ;;		_color_read_Blue
 16708 ;; This function uses a non-reentrant model
 16709 ;;
 16710                           
 16711                           	psect	text52
 16712   008210                     __ptext52:
 16713                           	callstack 0
 16714   008210                     _I2C_2_Master_RepStart:
 16715                           	callstack 26
 16716   008210                     
 16717                           ;i2c.c: 31:   I2C_2_Master_Idle();
 16718   008210  EC7A  F040         	call	_I2C_2_Master_Idle	;wreg free
 16719   008214                     
 16720                           ;i2c.c: 32:   SSP2CON2bits.RSEN = 1;
 16721   008214  010E               	movlb	14	; () banked
 16722   008216  83DA               	bsf	218,1,b	;volatile
 16723   008218                     
 16724                           ; BSR set to: 14
 16725   008218  0012               	return		;funcret
 16726   00821A                     __end_of_I2C_2_Master_RepStart:
 16727                           	callstack 0
 16728                           
 16729 ;; *************** function _I2C_2_Master_Read *****************
 16730 ;; Defined at:
 16731 ;;		line 45 in file "i2c.c"
 16732 ;; Parameters:    Size  Location     Type
 16733 ;;  ack             1    wreg     unsigned char 
 16734 ;; Auto vars:     Size  Location     Type
 16735 ;;  ack             1    3[COMRAM] unsigned char 
 16736 ;;  tmp             1    4[COMRAM] unsigned char 
 16737 ;; Return value:  Size  Location     Type
 16738 ;;                  1    wreg      unsigned char 
 16739 ;; Registers used:
 16740 ;;		wreg, status,2, status,0, cstack
 16741 ;; Tracked objects:
 16742 ;;		On entry : 0/0
 16743 ;;		On exit  : 0/0
 16744 ;;		Unchanged: 0/0
 16745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16747 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16748 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16749 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16750 ;;Total ram usage:        3 bytes
 16751 ;; Hardware stack levels used: 1
 16752 ;; Hardware stack levels required when called: 3
 16753 ;; This function calls:
 16754 ;;		_I2C_2_Master_Idle
 16755 ;; This function is called by:
 16756 ;;		_color_read_Clear
 16757 ;;		_color_read_Red
 16758 ;;		_color_read_Green
 16759 ;;		_color_read_Blue
 16760 ;; This function uses a non-reentrant model
 16761 ;;
 16762                           
 16763                           	psect	text53
 16764   007EFE                     __ptext53:
 16765                           	callstack 0
 16766   007EFE                     _I2C_2_Master_Read:
 16767                           	callstack 26
 16768                           
 16769                           ; BSR set to: 14
 16770                           ;incstack = 0
 16771                           ;I2C_2_Master_Read@ack stored from wreg
 16772   007EFE  6E04               	movwf	I2C_2_Master_Read@ack^0,c
 16773   007F00                     
 16774                           ;i2c.c: 46:   unsigned char tmp;;i2c.c: 47:   I2C_2_Master_Idle();
 16775   007F00  EC7A  F040         	call	_I2C_2_Master_Idle	;wreg free
 16776   007F04                     
 16777                           ;i2c.c: 48:   SSP2CON2bits.RCEN = 1;
 16778   007F04  010E               	movlb	14	; () banked
 16779   007F06  87DA               	bsf	218,3,b	;volatile
 16780                           
 16781                           ;i2c.c: 49:   I2C_2_Master_Idle();
 16782   007F08  EC7A  F040         	call	_I2C_2_Master_Idle	;wreg free
 16783   007F0C                     
 16784                           ;i2c.c: 50:   tmp = SSP2BUF;
 16785   007F0C  CED5 F005          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 16786                           
 16787                           ;i2c.c: 51:   I2C_2_Master_Idle();
 16788   007F10  EC7A  F040         	call	_I2C_2_Master_Idle	;wreg free
 16789   007F14                     
 16790                           ;i2c.c: 52:   SSP2CON2bits.ACKDT = !ack;
 16791   007F14  5004               	movf	I2C_2_Master_Read@ack^0,w,c
 16792   007F16  B4D8               	btfsc	status,2,c
 16793   007F18  EF90  F03F         	goto	u5571
 16794   007F1C  EF94  F03F         	goto	u5570
 16795   007F20                     u5571:
 16796   007F20  6A03               	clrf	??_I2C_2_Master_Read^0,c
 16797   007F22  2A03               	incf	??_I2C_2_Master_Read^0,f,c
 16798   007F24  EF95  F03F         	goto	u5588
 16799   007F28                     u5570:
 16800   007F28  6A03               	clrf	??_I2C_2_Master_Read^0,c
 16801   007F2A                     u5588:
 16802   007F2A  3A03               	swapf	??_I2C_2_Master_Read^0,f,c
 16803   007F2C  4603               	rlncf	??_I2C_2_Master_Read^0,f,c
 16804   007F2E  010E               	movlb	14	; () banked
 16805   007F30  51DA               	movf	218,w,b	;volatile
 16806   007F32  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 16807   007F34  0BDF               	andlw	-33
 16808   007F36  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 16809   007F38  6FDA               	movwf	218,b	;volatile
 16810   007F3A                     
 16811                           ; BSR set to: 14
 16812                           ;i2c.c: 53:   SSP2CON2bits.ACKEN = 1;
 16813   007F3A  89DA               	bsf	218,4,b	;volatile
 16814   007F3C                     
 16815                           ; BSR set to: 14
 16816                           ;i2c.c: 54:   return tmp;
 16817   007F3C  5005               	movf	I2C_2_Master_Read@tmp^0,w,c
 16818   007F3E                     
 16819                           ; BSR set to: 14
 16820   007F3E  0012               	return		;funcret
 16821   007F40                     __end_of_I2C_2_Master_Read:
 16822                           	callstack 0
 16823                           
 16824 ;; *************** function _color_click_toggleLED *****************
 16825 ;; Defined at:
 16826 ;;		line 108 in file "color.c"
 16827 ;; Parameters:    Size  Location     Type
 16828 ;;		None
 16829 ;; Auto vars:     Size  Location     Type
 16830 ;;		None
 16831 ;; Return value:  Size  Location     Type
 16832 ;;                  1    wreg      void 
 16833 ;; Registers used:
 16834 ;;		wreg, status,2, status,0
 16835 ;; Tracked objects:
 16836 ;;		On entry : 0/0
 16837 ;;		On exit  : 0/0
 16838 ;;		Unchanged: 0/0
 16839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16843 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16844 ;;Total ram usage:        1 bytes
 16845 ;; Hardware stack levels used: 1
 16846 ;; Hardware stack levels required when called: 2
 16847 ;; This function calls:
 16848 ;;		Nothing
 16849 ;; This function is called by:
 16850 ;;		_main
 16851 ;; This function uses a non-reentrant model
 16852 ;;
 16853                           
 16854                           	psect	text54
 16855   007BDC                     __ptext54:
 16856                           	callstack 0
 16857   007BDC                     _color_click_toggleLED:
 16858                           	callstack 28
 16859   007BDC                     
 16860                           ;color.c: 109:     LATGbits.LATG0 = !LATGbits.LATG0;
 16861   007BDC  A07F               	btfss	127,0,c	;volatile
 16862   007BDE  EFF3  F03D         	goto	u6221
 16863   007BE2  EFF7  F03D         	goto	u6220
 16864   007BE6                     u6221:
 16865   007BE6  6A02               	clrf	??_color_click_toggleLED^0,c
 16866   007BE8  2A02               	incf	??_color_click_toggleLED^0,f,c
 16867   007BEA  EFF8  F03D         	goto	u6238
 16868   007BEE                     u6220:
 16869   007BEE  6A02               	clrf	??_color_click_toggleLED^0,c
 16870   007BF0                     u6238:
 16871   007BF0  507F               	movf	127,w,c	;volatile
 16872   007BF2  1802               	xorwf	??_color_click_toggleLED^0,w,c
 16873   007BF4  0BFE               	andlw	-2
 16874   007BF6  1802               	xorwf	??_color_click_toggleLED^0,w,c
 16875   007BF8  6E7F               	movwf	127,c	;volatile
 16876                           
 16877                           ;color.c: 110:     LATAbits.LATA3 = !LATAbits.LATA3;
 16878   007BFA  A679               	btfss	121,3,c	;volatile
 16879   007BFC  EF02  F03E         	goto	u6241
 16880   007C00  EF06  F03E         	goto	u6240
 16881   007C04                     u6241:
 16882   007C04  6A02               	clrf	??_color_click_toggleLED^0,c
 16883   007C06  2A02               	incf	??_color_click_toggleLED^0,f,c
 16884   007C08  EF07  F03E         	goto	u6258
 16885   007C0C                     u6240:
 16886   007C0C  6A02               	clrf	??_color_click_toggleLED^0,c
 16887   007C0E                     u6258:
 16888   007C0E  4602               	rlncf	??_color_click_toggleLED^0,f,c
 16889   007C10  4602               	rlncf	??_color_click_toggleLED^0,f,c
 16890   007C12  4602               	rlncf	??_color_click_toggleLED^0,f,c
 16891   007C14  5079               	movf	121,w,c	;volatile
 16892   007C16  1802               	xorwf	??_color_click_toggleLED^0,w,c
 16893   007C18  0BF7               	andlw	-9
 16894   007C1A  1802               	xorwf	??_color_click_toggleLED^0,w,c
 16895   007C1C  6E79               	movwf	121,c	;volatile
 16896                           
 16897                           ;color.c: 111:     LATEbits.LATE7 = !LATEbits.LATE7;
 16898   007C1E  AE7D               	btfss	125,7,c	;volatile
 16899   007C20  EF14  F03E         	goto	u6261
 16900   007C24  EF18  F03E         	goto	u6260
 16901   007C28                     u6261:
 16902   007C28  6A02               	clrf	??_color_click_toggleLED^0,c
 16903   007C2A  2A02               	incf	??_color_click_toggleLED^0,f,c
 16904   007C2C  EF19  F03E         	goto	u6278
 16905   007C30                     u6260:
 16906   007C30  6A02               	clrf	??_color_click_toggleLED^0,c
 16907   007C32                     u6278:
 16908   007C32  3202               	rrcf	??_color_click_toggleLED^0,f,c
 16909   007C34  3202               	rrcf	??_color_click_toggleLED^0,f,c
 16910   007C36  507D               	movf	125,w,c	;volatile
 16911   007C38  1802               	xorwf	??_color_click_toggleLED^0,w,c
 16912   007C3A  0B7F               	andlw	-129
 16913   007C3C  1802               	xorwf	??_color_click_toggleLED^0,w,c
 16914   007C3E  6E7D               	movwf	125,c	;volatile
 16915   007C40  0012               	return		;funcret
 16916   007C42                     __end_of_color_click_toggleLED:
 16917                           	callstack 0
 16918                           
 16919 ;; *************** function _color_click_init *****************
 16920 ;; Defined at:
 16921 ;;		line 8 in file "color.c"
 16922 ;; Parameters:    Size  Location     Type
 16923 ;;		None
 16924 ;; Auto vars:     Size  Location     Type
 16925 ;;		None
 16926 ;; Return value:  Size  Location     Type
 16927 ;;                  1    wreg      void 
 16928 ;; Registers used:
 16929 ;;		wreg, status,2, status,0, cstack
 16930 ;; Tracked objects:
 16931 ;;		On entry : 0/0
 16932 ;;		On exit  : 0/0
 16933 ;;		Unchanged: 0/0
 16934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16939 ;;Total ram usage:        1 bytes
 16940 ;; Hardware stack levels used: 1
 16941 ;; Hardware stack levels required when called: 5
 16942 ;; This function calls:
 16943 ;;		_I2C_2_Master_Init
 16944 ;;		_color_writetoaddr
 16945 ;; This function is called by:
 16946 ;;		_main
 16947 ;; This function uses a non-reentrant model
 16948 ;;
 16949                           
 16950                           	psect	text55
 16951   007E28                     __ptext55:
 16952                           	callstack 0
 16953   007E28                     _color_click_init:
 16954                           	callstack 25
 16955   007E28                     
 16956                           ;color.c: 10:     I2C_2_Master_Init();
 16957   007E28  EC65  F040         	call	_I2C_2_Master_Init	;wreg free
 16958   007E2C                     
 16959                           ;color.c: 11:  color_writetoaddr(0x00, 0x01);
 16960   007E2C  0E01               	movlw	1
 16961   007E2E  6E04               	movwf	color_writetoaddr@value^0,c
 16962   007E30  0E00               	movlw	0
 16963   007E32  ECA1  F040         	call	_color_writetoaddr
 16964   007E36                     
 16965                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
 16966   007E36  0E3F               	movlw	63
 16967   007E38  6E06               	movwf	??_color_click_init^0,c
 16968   007E3A  0E55               	movlw	85
 16969   007E3C                     u9447:
 16970   007E3C  2EE8               	decfsz	wreg,f,c
 16971   007E3E  D7FE               	bra	u9447
 16972   007E40  2E06               	decfsz	??_color_click_init^0,f,c
 16973   007E42  D7FC               	bra	u9447
 16974   007E44  0000               	nop	
 16975   007E46                     
 16976                           ;color.c: 13:  color_writetoaddr(0x00, 0x03);
 16977   007E46  0E03               	movlw	3
 16978   007E48  6E04               	movwf	color_writetoaddr@value^0,c
 16979   007E4A  0E00               	movlw	0
 16980   007E4C  ECA1  F040         	call	_color_writetoaddr
 16981   007E50                     
 16982                           ;color.c: 14:  color_writetoaddr(0x01, 0xFF);
 16983   007E50  0EFF               	movlw	255
 16984   007E52  6E04               	movwf	color_writetoaddr@value^0,c
 16985   007E54  0E01               	movlw	1
 16986   007E56  ECA1  F040         	call	_color_writetoaddr
 16987   007E5A                     
 16988                           ;color.c: 15:     color_writetoaddr(0x03, 0xFF);
 16989   007E5A  0EFF               	movlw	255
 16990   007E5C  6E04               	movwf	color_writetoaddr@value^0,c
 16991   007E5E  0E03               	movlw	3
 16992   007E60  ECA1  F040         	call	_color_writetoaddr
 16993   007E64                     
 16994                           ;color.c: 27:     LATGbits.LATG0=0;
 16995   007E64  907F               	bcf	127,0,c	;volatile
 16996   007E66                     
 16997                           ;color.c: 28:     LATAbits.LATA3=0;
 16998   007E66  9679               	bcf	121,3,c	;volatile
 16999   007E68                     
 17000                           ;color.c: 29:     LATEbits.LATE7=0;
 17001   007E68  9E7D               	bcf	125,7,c	;volatile
 17002   007E6A                     
 17003                           ;color.c: 32:     TRISGbits.TRISG0=0;
 17004   007E6A  9087               	bcf	135,0,c	;volatile
 17005   007E6C                     
 17006                           ;color.c: 33:     TRISAbits.TRISA3=0;
 17007   007E6C  9681               	bcf	129,3,c	;volatile
 17008   007E6E                     
 17009                           ;color.c: 34:     TRISEbits.TRISE7=0;
 17010   007E6E  9E85               	bcf	133,7,c	;volatile
 17011   007E70  0012               	return		;funcret
 17012   007E72                     __end_of_color_click_init:
 17013                           	callstack 0
 17014                           
 17015 ;; *************** function _color_writetoaddr *****************
 17016 ;; Defined at:
 17017 ;;		line 38 in file "color.c"
 17018 ;; Parameters:    Size  Location     Type
 17019 ;;  address         1    wreg     unsigned char 
 17020 ;;  value           1    3[COMRAM] unsigned char 
 17021 ;; Auto vars:     Size  Location     Type
 17022 ;;  address         1    4[COMRAM] unsigned char 
 17023 ;; Return value:  Size  Location     Type
 17024 ;;                  1    wreg      void 
 17025 ;; Registers used:
 17026 ;;		wreg, status,2, status,0, cstack
 17027 ;; Tracked objects:
 17028 ;;		On entry : 0/0
 17029 ;;		On exit  : 0/0
 17030 ;;		Unchanged: 0/0
 17031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17032 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17036 ;;Total ram usage:        2 bytes
 17037 ;; Hardware stack levels used: 1
 17038 ;; Hardware stack levels required when called: 4
 17039 ;; This function calls:
 17040 ;;		_I2C_2_Master_Start
 17041 ;;		_I2C_2_Master_Stop
 17042 ;;		_I2C_2_Master_Write
 17043 ;; This function is called by:
 17044 ;;		_color_click_init
 17045 ;;		_decide_action
 17046 ;;		_main
 17047 ;; This function uses a non-reentrant model
 17048 ;;
 17049                           
 17050                           	psect	text56
 17051   008142                     __ptext56:
 17052                           	callstack 0
 17053   008142                     _color_writetoaddr:
 17054                           	callstack 25
 17055                           
 17056                           ;incstack = 0
 17057                           ;color_writetoaddr@address stored from wreg
 17058   008142  6E05               	movwf	color_writetoaddr@address^0,c
 17059   008144                     
 17060                           ;color.c: 39:     I2C_2_Master_Start();
 17061   008144  EC12  F041         	call	_I2C_2_Master_Start	;wreg free
 17062                           
 17063                           ;color.c: 40:     I2C_2_Master_Write(0x52 | 0x00);
 17064   008148  0E52               	movlw	82
 17065   00814A  ECF7  F040         	call	_I2C_2_Master_Write
 17066                           
 17067                           ;color.c: 41:     I2C_2_Master_Write(0x80 | address);
 17068   00814E  5005               	movf	color_writetoaddr@address^0,w,c
 17069   008150  0980               	iorlw	128
 17070   008152  ECF7  F040         	call	_I2C_2_Master_Write
 17071                           
 17072                           ;color.c: 42:     I2C_2_Master_Write(value);
 17073   008156  5004               	movf	color_writetoaddr@value^0,w,c
 17074   008158  ECF7  F040         	call	_I2C_2_Master_Write
 17075                           
 17076                           ;color.c: 43:     I2C_2_Master_Stop();
 17077   00815C  EC0D  F041         	call	_I2C_2_Master_Stop	;wreg free
 17078   008160  0012               	return		;funcret
 17079   008162                     __end_of_color_writetoaddr:
 17080                           	callstack 0
 17081                           
 17082 ;; *************** function _I2C_2_Master_Write *****************
 17083 ;; Defined at:
 17084 ;;		line 40 in file "i2c.c"
 17085 ;; Parameters:    Size  Location     Type
 17086 ;;  data_byte       1    wreg     unsigned char 
 17087 ;; Auto vars:     Size  Location     Type
 17088 ;;  data_byte       1    2[COMRAM] unsigned char 
 17089 ;; Return value:  Size  Location     Type
 17090 ;;                  1    wreg      void 
 17091 ;; Registers used:
 17092 ;;		wreg, status,2, status,0, cstack
 17093 ;; Tracked objects:
 17094 ;;		On entry : 0/0
 17095 ;;		On exit  : 0/0
 17096 ;;		Unchanged: 0/0
 17097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17101 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17102 ;;Total ram usage:        1 bytes
 17103 ;; Hardware stack levels used: 1
 17104 ;; Hardware stack levels required when called: 3
 17105 ;; This function calls:
 17106 ;;		_I2C_2_Master_Idle
 17107 ;; This function is called by:
 17108 ;;		_color_writetoaddr
 17109 ;;		_color_read_Clear
 17110 ;;		_color_read_Red
 17111 ;;		_color_read_Green
 17112 ;;		_color_read_Blue
 17113 ;; This function uses a non-reentrant model
 17114 ;;
 17115                           
 17116                           	psect	text57
 17117   0081EE                     __ptext57:
 17118                           	callstack 0
 17119   0081EE                     _I2C_2_Master_Write:
 17120                           	callstack 25
 17121                           
 17122                           ;incstack = 0
 17123                           ;I2C_2_Master_Write@data_byte stored from wreg
 17124   0081EE  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
 17125   0081F0                     
 17126                           ;i2c.c: 41:   I2C_2_Master_Idle();
 17127   0081F0  EC7A  F040         	call	_I2C_2_Master_Idle	;wreg free
 17128   0081F4                     
 17129                           ;i2c.c: 42:   SSP2BUF = data_byte;
 17130   0081F4  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 17131   0081F8  0012               	return		;funcret
 17132   0081FA                     __end_of_I2C_2_Master_Write:
 17133                           	callstack 0
 17134                           
 17135 ;; *************** function _I2C_2_Master_Stop *****************
 17136 ;; Defined at:
 17137 ;;		line 35 in file "i2c.c"
 17138 ;; Parameters:    Size  Location     Type
 17139 ;;		None
 17140 ;; Auto vars:     Size  Location     Type
 17141 ;;		None
 17142 ;; Return value:  Size  Location     Type
 17143 ;;                  1    wreg      void 
 17144 ;; Registers used:
 17145 ;;		wreg, status,2, status,0, cstack
 17146 ;; Tracked objects:
 17147 ;;		On entry : 0/0
 17148 ;;		On exit  : 0/0
 17149 ;;		Unchanged: 0/0
 17150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17155 ;;Total ram usage:        0 bytes
 17156 ;; Hardware stack levels used: 1
 17157 ;; Hardware stack levels required when called: 3
 17158 ;; This function calls:
 17159 ;;		_I2C_2_Master_Idle
 17160 ;; This function is called by:
 17161 ;;		_color_writetoaddr
 17162 ;;		_color_read_Clear
 17163 ;;		_color_read_Red
 17164 ;;		_color_read_Green
 17165 ;;		_color_read_Blue
 17166 ;; This function uses a non-reentrant model
 17167 ;;
 17168                           
 17169                           	psect	text58
 17170   00821A                     __ptext58:
 17171                           	callstack 0
 17172   00821A                     _I2C_2_Master_Stop:
 17173                           	callstack 25
 17174   00821A                     
 17175                           ;i2c.c: 36:   I2C_2_Master_Idle();
 17176   00821A  EC7A  F040         	call	_I2C_2_Master_Idle	;wreg free
 17177   00821E                     
 17178                           ;i2c.c: 37:   SSP2CON2bits.PEN = 1;
 17179   00821E  010E               	movlb	14	; () banked
 17180   008220  85DA               	bsf	218,2,b	;volatile
 17181   008222                     
 17182                           ; BSR set to: 14
 17183   008222  0012               	return		;funcret
 17184   008224                     __end_of_I2C_2_Master_Stop:
 17185                           	callstack 0
 17186                           
 17187 ;; *************** function _I2C_2_Master_Start *****************
 17188 ;; Defined at:
 17189 ;;		line 25 in file "i2c.c"
 17190 ;; Parameters:    Size  Location     Type
 17191 ;;		None
 17192 ;; Auto vars:     Size  Location     Type
 17193 ;;		None
 17194 ;; Return value:  Size  Location     Type
 17195 ;;                  1    wreg      void 
 17196 ;; Registers used:
 17197 ;;		wreg, status,2, status,0, cstack
 17198 ;; Tracked objects:
 17199 ;;		On entry : 0/0
 17200 ;;		On exit  : 0/0
 17201 ;;		Unchanged: 0/0
 17202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17207 ;;Total ram usage:        0 bytes
 17208 ;; Hardware stack levels used: 1
 17209 ;; Hardware stack levels required when called: 3
 17210 ;; This function calls:
 17211 ;;		_I2C_2_Master_Idle
 17212 ;; This function is called by:
 17213 ;;		_color_writetoaddr
 17214 ;;		_color_read_Clear
 17215 ;;		_color_read_Red
 17216 ;;		_color_read_Green
 17217 ;;		_color_read_Blue
 17218 ;; This function uses a non-reentrant model
 17219 ;;
 17220                           
 17221                           	psect	text59
 17222   008224                     __ptext59:
 17223                           	callstack 0
 17224   008224                     _I2C_2_Master_Start:
 17225                           	callstack 25
 17226   008224                     
 17227                           ;i2c.c: 26:   I2C_2_Master_Idle();
 17228   008224  EC7A  F040         	call	_I2C_2_Master_Idle	;wreg free
 17229   008228                     
 17230                           ;i2c.c: 27:   SSP2CON2bits.SEN = 1;
 17231   008228  010E               	movlb	14	; () banked
 17232   00822A  81DA               	bsf	218,0,b	;volatile
 17233   00822C                     
 17234                           ; BSR set to: 14
 17235   00822C  0012               	return		;funcret
 17236   00822E                     __end_of_I2C_2_Master_Start:
 17237                           	callstack 0
 17238                           
 17239 ;; *************** function _I2C_2_Master_Idle *****************
 17240 ;; Defined at:
 17241 ;;		line 21 in file "i2c.c"
 17242 ;; Parameters:    Size  Location     Type
 17243 ;;		None
 17244 ;; Auto vars:     Size  Location     Type
 17245 ;;		None
 17246 ;; Return value:  Size  Location     Type
 17247 ;;                  1    wreg      void 
 17248 ;; Registers used:
 17249 ;;		wreg, status,2, status,0
 17250 ;; Tracked objects:
 17251 ;;		On entry : 0/0
 17252 ;;		On exit  : 0/0
 17253 ;;		Unchanged: 0/0
 17254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17258 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17259 ;;Total ram usage:        1 bytes
 17260 ;; Hardware stack levels used: 1
 17261 ;; Hardware stack levels required when called: 2
 17262 ;; This function calls:
 17263 ;;		Nothing
 17264 ;; This function is called by:
 17265 ;;		_I2C_2_Master_Start
 17266 ;;		_I2C_2_Master_RepStart
 17267 ;;		_I2C_2_Master_Stop
 17268 ;;		_I2C_2_Master_Write
 17269 ;;		_I2C_2_Master_Read
 17270 ;; This function uses a non-reentrant model
 17271 ;;
 17272                           
 17273                           	psect	text60
 17274   0080F4                     __ptext60:
 17275                           	callstack 0
 17276   0080F4                     _I2C_2_Master_Idle:
 17277                           	callstack 25
 17278   0080F4                     l123:
 17279   0080F4  010E               	movlb	14	; () banked
 17280   0080F6  B5D8               	btfsc	216,2,b	;volatile
 17281   0080F8  EF80  F040         	goto	u5061
 17282   0080FC  EF82  F040         	goto	u5060
 17283   008100                     u5061:
 17284   008100  EF7A  F040         	goto	l123
 17285   008104                     u5060:
 17286   008104                     
 17287                           ; BSR set to: 14
 17288   008104  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
 17289   008108  0E1F               	movlw	31
 17290   00810A  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
 17291   00810C  A4D8               	btfss	status,2,c
 17292   00810E  EF8B  F040         	goto	u5071
 17293   008112  EF8D  F040         	goto	u5070
 17294   008116                     u5071:
 17295   008116  EF7A  F040         	goto	l123
 17296   00811A                     u5070:
 17297   00811A                     
 17298                           ; BSR set to: 14
 17299   00811A  0012               	return		;funcret
 17300   00811C                     __end_of_I2C_2_Master_Idle:
 17301                           	callstack 0
 17302                           
 17303 ;; *************** function _I2C_2_Master_Init *****************
 17304 ;; Defined at:
 17305 ;;		line 4 in file "i2c.c"
 17306 ;; Parameters:    Size  Location     Type
 17307 ;;		None
 17308 ;; Auto vars:     Size  Location     Type
 17309 ;;		None
 17310 ;; Return value:  Size  Location     Type
 17311 ;;                  1    wreg      void 
 17312 ;; Registers used:
 17313 ;;		wreg, status,2
 17314 ;; Tracked objects:
 17315 ;;		On entry : 0/0
 17316 ;;		On exit  : 0/0
 17317 ;;		Unchanged: 0/0
 17318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17323 ;;Total ram usage:        0 bytes
 17324 ;; Hardware stack levels used: 1
 17325 ;; Hardware stack levels required when called: 2
 17326 ;; This function calls:
 17327 ;;		Nothing
 17328 ;; This function is called by:
 17329 ;;		_color_click_init
 17330 ;;		_main
 17331 ;; This function uses a non-reentrant model
 17332 ;;
 17333                           
 17334                           	psect	text61
 17335   0080CA                     __ptext61:
 17336                           	callstack 0
 17337   0080CA                     _I2C_2_Master_Init:
 17338                           	callstack 27
 17339   0080CA                     
 17340                           ;i2c.c: 6:   SSP2CON1bits.SSPM= 0b1000;
 17341   0080CA  010E               	movlb	14	; () banked
 17342   0080CC  51D9               	movf	217,w,b	;volatile
 17343   0080CE  0BF0               	andlw	-16
 17344   0080D0  0908               	iorlw	8
 17345   0080D2  6FD9               	movwf	217,b	;volatile
 17346   0080D4                     
 17347                           ; BSR set to: 14
 17348                           ;i2c.c: 7:   SSP2CON1bits.SSPEN = 1;
 17349   0080D4  8BD9               	bsf	217,5,b	;volatile
 17350                           
 17351                           ;i2c.c: 8:   SSP2ADD = (64000000/(4*100000))-1;
 17352   0080D6  0E9F               	movlw	159
 17353   0080D8  6FD6               	movwf	214,b	;volatile
 17354   0080DA                     
 17355                           ; BSR set to: 14
 17356                           ;i2c.c: 11:   TRISDbits.TRISD5 = 1;
 17357   0080DA  8A84               	bsf	132,5,c	;volatile
 17358   0080DC                     
 17359                           ; BSR set to: 14
 17360                           ;i2c.c: 12:   TRISDbits.TRISD6 = 1;
 17361   0080DC  8C84               	bsf	132,6,c	;volatile
 17362   0080DE                     
 17363                           ; BSR set to: 14
 17364                           ;i2c.c: 13:   ANSELDbits.ANSELD5=0;
 17365   0080DE  9BA7               	bcf	167,5,b	;volatile
 17366   0080E0                     
 17367                           ; BSR set to: 14
 17368                           ;i2c.c: 14:   ANSELDbits.ANSELD6=0;
 17369   0080E0  9DA7               	bcf	167,6,b	;volatile
 17370                           
 17371                           ;i2c.c: 15:   SSP2DATPPS=0x1D;
 17372   0080E2  0E1D               	movlw	29
 17373   0080E4  6F1D               	movwf	29,b	;volatile
 17374                           
 17375                           ;i2c.c: 16:   SSP2CLKPPS=0x1E;
 17376   0080E6  0E1E               	movlw	30
 17377   0080E8  6F1C               	movwf	28,b	;volatile
 17378                           
 17379                           ;i2c.c: 17:   RD5PPS=0x1C;
 17380   0080EA  0E1C               	movlw	28
 17381   0080EC  6F6F               	movwf	111,b	;volatile
 17382                           
 17383                           ;i2c.c: 18:   RD6PPS=0x1B;
 17384   0080EE  0E1B               	movlw	27
 17385   0080F0  6F70               	movwf	112,b	;volatile
 17386   0080F2                     
 17387                           ; BSR set to: 14
 17388   0080F2  0012               	return		;funcret
 17389   0080F4                     __end_of_I2C_2_Master_Init:
 17390                           	callstack 0
 17391                           
 17392 ;; *************** function _Timer0_init *****************
 17393 ;; Defined at:
 17394 ;;		line 7 in file "timers.c"
 17395 ;; Parameters:    Size  Location     Type
 17396 ;;		None
 17397 ;; Auto vars:     Size  Location     Type
 17398 ;;		None
 17399 ;; Return value:  Size  Location     Type
 17400 ;;                  1    wreg      void 
 17401 ;; Registers used:
 17402 ;;		wreg, status,2
 17403 ;; Tracked objects:
 17404 ;;		On entry : 0/0
 17405 ;;		On exit  : 0/0
 17406 ;;		Unchanged: 0/0
 17407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17412 ;;Total ram usage:        0 bytes
 17413 ;; Hardware stack levels used: 1
 17414 ;; Hardware stack levels required when called: 2
 17415 ;; This function calls:
 17416 ;;		Nothing
 17417 ;; This function is called by:
 17418 ;;		_main
 17419 ;; This function uses a non-reentrant model
 17420 ;;
 17421                           
 17422                           	psect	text62
 17423   008162                     __ptext62:
 17424                           	callstack 0
 17425   008162                     _Timer0_init:
 17426                           	callstack 28
 17427   008162                     
 17428                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 17429   008162  50D6               	movf	214,w,c	;volatile
 17430   008164  0B1F               	andlw	-225
 17431   008166  0940               	iorlw	64
 17432   008168  6ED6               	movwf	214,c	;volatile
 17433   00816A                     
 17434                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 17435   00816A  88D6               	bsf	214,4,c	;volatile
 17436                           
 17437                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1111;
 17438   00816C  0E0F               	movlw	15
 17439   00816E  12D6               	iorwf	214,f,c	;volatile
 17440                           
 17441                           ;timers.c: 12:     T0CON0bits.T0OUTPS=0b000;
 17442   008170  0EF0               	movlw	-16
 17443   008172  16D5               	andwf	213,f,c	;volatile
 17444   008174                     
 17445                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
 17446   008174  88D5               	bsf	213,4,c	;volatile
 17447                           
 17448                           ;timers.c: 17:     TMR0H=0b00001011;
 17449   008176  0E0B               	movlw	11
 17450   008178  6ED4               	movwf	212,c	;volatile
 17451                           
 17452                           ;timers.c: 18:     TMR0L=0b11011011;
 17453   00817A  0EDB               	movlw	219
 17454   00817C  6ED3               	movwf	211,c	;volatile
 17455   00817E                     
 17456                           ;timers.c: 20:     T0CON0bits.T0EN=1;
 17457   00817E  8ED5               	bsf	213,7,c	;volatile
 17458   008180  0012               	return		;funcret
 17459   008182                     __end_of_Timer0_init:
 17460                           	callstack 0
 17461                           
 17462 ;; *************** function _Interrupts_init *****************
 17463 ;; Defined at:
 17464 ;;		line 7 in file "interrupts.c"
 17465 ;; Parameters:    Size  Location     Type
 17466 ;;		None
 17467 ;; Auto vars:     Size  Location     Type
 17468 ;;		None
 17469 ;; Return value:  Size  Location     Type
 17470 ;;                  1    wreg      void 
 17471 ;; Registers used:
 17472 ;;		None
 17473 ;; Tracked objects:
 17474 ;;		On entry : 0/0
 17475 ;;		On exit  : 0/0
 17476 ;;		Unchanged: 0/0
 17477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17482 ;;Total ram usage:        0 bytes
 17483 ;; Hardware stack levels used: 1
 17484 ;; Hardware stack levels required when called: 2
 17485 ;; This function calls:
 17486 ;;		Nothing
 17487 ;; This function is called by:
 17488 ;;		_main
 17489 ;; This function uses a non-reentrant model
 17490 ;;
 17491                           
 17492                           	psect	text63
 17493   0081FA                     __ptext63:
 17494                           	callstack 0
 17495   0081FA                     _Interrupts_init:
 17496                           	callstack 28
 17497   0081FA                     
 17498                           ;interrupts.c: 9:     INTCONbits.PEIE=1;
 17499   0081FA  8CF2               	bsf	242,6,c	;volatile
 17500                           
 17501                           ;interrupts.c: 10:     PIE2bits.C1IE=1;
 17502   0081FC  010E               	movlb	14	; () banked
 17503   0081FE  812B               	bsf	43,0,b	;volatile
 17504                           
 17505                           ;interrupts.c: 14:     PIE0bits.IOCIE=1;
 17506   008200  8929               	bsf	41,4,b	;volatile
 17507                           
 17508                           ;interrupts.c: 15:     INTCONbits.GIE=1;
 17509   008202  8EF2               	bsf	242,7,c	;volatile
 17510   008204                     
 17511                           ; BSR set to: 14
 17512   008204  0012               	return		;funcret
 17513   008206                     __end_of_Interrupts_init:
 17514                           	callstack 0
 17515                           
 17516 ;; *************** function _HighISR *****************
 17517 ;; Defined at:
 17518 ;;		line 23 in file "interrupts.c"
 17519 ;; Parameters:    Size  Location     Type
 17520 ;;		None
 17521 ;; Auto vars:     Size  Location     Type
 17522 ;;		None
 17523 ;; Return value:  Size  Location     Type
 17524 ;;                  1    wreg      void 
 17525 ;; Registers used:
 17526 ;;		wreg, cstack
 17527 ;; Tracked objects:
 17528 ;;		On entry : 0/0
 17529 ;;		On exit  : 0/0
 17530 ;;		Unchanged: 0/0
 17531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17536 ;;Total ram usage:        0 bytes
 17537 ;; Hardware stack levels used: 1
 17538 ;; Hardware stack levels required when called: 1
 17539 ;; This function calls:
 17540 ;;		i2_sendCharSerial4
 17541 ;; This function is called by:
 17542 ;;		Interrupt level 2
 17543 ;; This function uses a non-reentrant model
 17544 ;;
 17545                           
 17546                           	psect	intcode
 17547   000008                     __pintcode:
 17548                           	callstack 0
 17549   000008                     _HighISR:
 17550                           	callstack 20
 17551                           
 17552                           ; BSR set to: 14
 17553                           ;incstack = 0
 17554   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 17555   00000A                     
 17556                           ;interrupts.c: 48:     if (PORTBbits.RB0){
 17557   00000A  A08A               	btfss	138,0,c	;volatile
 17558   00000C  EF0A  F000         	goto	i2u665_41
 17559   000010  EF0C  F000         	goto	i2u665_40
 17560   000014                     i2u665_41:
 17561   000014  EF10  F000         	goto	i2l444
 17562   000018                     i2u665_40:
 17563   000018                     
 17564                           ;interrupts.c: 49:         LATHbits.LATH3 = 0;
 17565   000018  9680               	bcf	128,3,c	;volatile
 17566   00001A                     
 17567                           ;interrupts.c: 50:         sendCharSerial4('a');
 17568   00001A  0E61               	movlw	97
 17569   00001C  ECEB  F040         	call	i2_sendCharSerial4
 17570   000020                     i2l444:
 17571   000020  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17572   000022  0011               	retfie		f
 17573   000024                     __end_of_HighISR:
 17574                           	callstack 0
 17575                           
 17576 ;; *************** function i2_sendCharSerial4 *****************
 17577 ;; Defined at:
 17578 ;;		line 31 in file "serial.c"
 17579 ;; Parameters:    Size  Location     Type
 17580 ;;  charToSend      1    wreg     unsigned char 
 17581 ;; Auto vars:     Size  Location     Type
 17582 ;;  charToSend      1    0[COMRAM] unsigned char 
 17583 ;; Return value:  Size  Location     Type
 17584 ;;                  1    wreg      void 
 17585 ;; Registers used:
 17586 ;;		wreg
 17587 ;; Tracked objects:
 17588 ;;		On entry : 0/0
 17589 ;;		On exit  : 0/0
 17590 ;;		Unchanged: 0/0
 17591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17596 ;;Total ram usage:        1 bytes
 17597 ;; Hardware stack levels used: 1
 17598 ;; This function calls:
 17599 ;;		Nothing
 17600 ;; This function is called by:
 17601 ;;		_HighISR
 17602 ;; This function uses a non-reentrant model
 17603 ;;
 17604                           
 17605                           	psect	text65
 17606   0081D6                     __ptext65:
 17607                           	callstack 0
 17608   0081D6                     i2_sendCharSerial4:
 17609                           	callstack 20
 17610                           
 17611                           ;incstack = 0
 17612                           ;i2sendCharSerial4@charToSend stored from wreg
 17613   0081D6  6E01               	movwf	i2sendCharSerial4@charToSend^0,c
 17614   0081D8                     i2l490:
 17615   0081D8  010E               	movlb	14	; () banked
 17616   0081DA  A537               	btfss	55,2,b	;volatile
 17617   0081DC  EFF2  F040         	goto	i2u664_41
 17618   0081E0  EFF4  F040         	goto	i2u664_40
 17619   0081E4                     i2u664_41:
 17620   0081E4  EFEC  F040         	goto	i2l490
 17621   0081E8                     i2u664_40:
 17622   0081E8                     
 17623                           ; BSR set to: 14
 17624                           ;serial.c: 33:     TX4REG = charToSend;
 17625   0081E8  C001  FEE4         	movff	i2sendCharSerial4@charToSend,3812	;volatile
 17626   0081EC                     
 17627                           ; BSR set to: 14
 17628   0081EC  0012               	return		;funcret
 17629   0081EE                     __end_ofi2_sendCharSerial4:
 17630                           	callstack 0
 17631                           
 17632                           	psect	rparam
 17633   000000                     
 17634                           	psect	temp
 17635   00005E                     btemp:
 17636                           	callstack 0
 17637   00005E                     	ds	1
 17638   000000                     int$flags	set	btemp
 17639   000000                     wtemp8	set	btemp+1
 17640   000000                     ttemp5	set	btemp+1
 17641   000000                     ttemp6	set	btemp+4
 17642   000000                     ttemp7	set	btemp+8
 17643                           
 17644                           	psect	config
 17645                           
 17646                           ;Config register CONFIG1L @ 0x300000
 17647                           ;	External Oscillator mode Selection bits
 17648                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 17649                           ;	Power-up default value for COSC bits
 17650                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 17651   300000                     	org	3145728
 17652   300000  AA                 	db	170
 17653                           
 17654                           ;Config register CONFIG1H @ 0x300001
 17655                           ;	unspecified, using default values
 17656                           ;	Clock Out Enable bit
 17657                           ;	CLKOUTEN = 0x1, unprogrammed default
 17658                           ;	Clock Switch Enable bit
 17659                           ;	CSWEN = 0x1, unprogrammed default
 17660                           ;	Fail-Safe Clock Monitor Enable bit
 17661                           ;	FCMEN = 0x1, unprogrammed default
 17662   300001                     	org	3145729
 17663   300001  FF                 	db	255
 17664                           
 17665                           ;Config register CONFIG3L @ 0x300004
 17666                           ;	WDT Period Select bits
 17667                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17668                           ;	WDT operating mode
 17669                           ;	WDTE = OFF, WDT Disabled
 17670   300004                     	org	3145732
 17671   300004  9F                 	db	159
 17672                           
 17673                           ;Config register CONFIG3H @ 0x300005
 17674                           ;	unspecified, using default values
 17675                           ;	WDT Window Select bits
 17676                           ;	WDTCWS = 0x7, unprogrammed default
 17677                           ;	WDT input clock selector
 17678                           ;	WDTCCS = 0x7, unprogrammed default
 17679   300005                     	org	3145733
 17680   300005  FF                 	db	255
 17681                           tosu	equ	0xFFF
 17682                           tosh	equ	0xFFE
 17683                           tosl	equ	0xFFD
 17684                           stkptr	equ	0xFFC
 17685                           pclatu	equ	0xFFB
 17686                           pclath	equ	0xFFA
 17687                           pcl	equ	0xFF9
 17688                           tblptru	equ	0xFF8
 17689                           tblptrh	equ	0xFF7
 17690                           tblptrl	equ	0xFF6
 17691                           tablat	equ	0xFF5
 17692                           prodh	equ	0xFF4
 17693                           prodl	equ	0xFF3
 17694                           indf0	equ	0xFEF
 17695                           postinc0	equ	0xFEE
 17696                           postdec0	equ	0xFED
 17697                           preinc0	equ	0xFEC
 17698                           plusw0	equ	0xFEB
 17699                           fsr0h	equ	0xFEA
 17700                           fsr0l	equ	0xFE9
 17701                           wreg	equ	0xFE8
 17702                           indf1	equ	0xFE7
 17703                           postinc1	equ	0xFE6
 17704                           postdec1	equ	0xFE5
 17705                           preinc1	equ	0xFE4
 17706                           plusw1	equ	0xFE3
 17707                           fsr1h	equ	0xFE2
 17708                           fsr1l	equ	0xFE1
 17709                           bsr	equ	0xFE0
 17710                           indf2	equ	0xFDF
 17711                           postinc2	equ	0xFDE
 17712                           postdec2	equ	0xFDD
 17713                           preinc2	equ	0xFDC
 17714                           plusw2	equ	0xFDB
 17715                           fsr2h	equ	0xFDA
 17716                           fsr2l	equ	0xFD9
 17717                           status	equ	0xFD8

Data Sizes:
    Strings     105
    Constant    112
    Data        0
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      93
    BANK0           160     91     129
    BANK1           256    184     244
    BANK2           256    180     180
    BANK3           256    194     194
    BANK4           256      0      80
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    decide_action@pblue_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@blue_val(BANK2[20]), 

    decide_action@pclear_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@clear_val(BANK2[20]), 

    decide_action@pgreen_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@green_val(BANK2[20]), 

    decide_action@pred_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@red_val(BANK2[20]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pblue_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@blue_val(BANK3[20]), 

    main@pclear_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK3[20]), 

    main@pgreen_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@green_val(BANK3[20]), 

    main@pmL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    main@pmL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pmR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    main@pmR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pred_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@red_val(BANK3[20]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    reverse_after_read@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    reverse_after_read@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    reverse_after_read@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    reverse_one_square@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    reverse_one_square@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S1083DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    S1083DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S2556$buffer	PTR unsigned char  size(2) Largest target is 0

    S2556$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@blue_val(BANK2[20]), decide_action@green_val(BANK2[20]), decide_action@red_val(BANK2[20]), main@blue_val(BANK3[20]), 
		 -> main@clear_val(BANK3[20]), main@green_val(BANK3[20]), main@red_val(BANK3[20]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), main@motorR(BANK3[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[14]), STR_4(CODE[14]), 
		 -> STR_5(CODE[12]), STR_6(CODE[14]), STR_7(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@blue_val(BANK2[20]), decide_action@green_val(BANK2[20]), decide_action@red_val(BANK2[20]), main@blue_val(BANK3[20]), 
		 -> main@clear_val(BANK3[20]), main@green_val(BANK3[20]), main@red_val(BANK3[20]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_11(CODE[4]), STR_8(CODE[4]), 

    turn_left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_left_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_left_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_left_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_left_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_right_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_right_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_right_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_right_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[14]), STR_4(CODE[14]), 
		 -> STR_5(CODE[12]), STR_6(CODE[14]), STR_7(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[14]), STR_4(CODE[14]), 
		 -> STR_5(CODE[12]), STR_6(CODE[14]), STR_7(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[13]), STR_2(CODE[15]), STR_3(CODE[14]), STR_4(CODE[14]), 
		 -> STR_5(CODE[12]), STR_6(CODE[14]), STR_7(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _turn_right_90->_stop
    _turn_right_135->_stop
    _turn_left_90->_stop
    _turn_left_135->_stop
    _reverse_one_square->_stop
    _reverse_after_read->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _powf->___flge
    _sqrtf->___fladd
    _scalbnf->___flmul
    ___flmul->___fladd
    ___flsub->___fldiv
    ___flge->___flsub
    ___fldiv->___flmul
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_sendCharSerial4

Critical Paths under _main in BANK0

    _main->_decide_action
    _decide_action->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _decide_action->_powf

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_decide_action

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               215   215      0  351247
                                             89 BANK0      2     2      0
                                              0 BANK3    194   194      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
              _color_click_toggleLED
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _color_writetoaddr
                      _decide_action
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                      _invert_action
                        _resetTimer0
                 _reverse_after_read
                 _reverse_one_square
                  _sendStringSerial4
                            _sprintf
                               _stop
                      _turn_left_135
                       _turn_left_90
                     _turn_right_135
                      _turn_right_90
 ---------------------------------------------------------------------------------
 (1) _turn_right_90                                        6     2      4    7746
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_right_135                                       6     2      4    6682
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_90                                         6     2      4    6834
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_135                                        6     2      4    6682
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse_one_square                                   6     2      4    6682
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse_after_read                                   6     2      4    7594
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    3829
                                             20 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _invert_action                                        4     4      0      51
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get16bitTMR0val                                      6     4      2      24
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    2809
                                             20 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          6     4      2    2285
                                             14 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              7 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _decide_action                                      188   182      6  218557
                                             83 BANK0      6     0      6
                                              0 BANK2    180   180      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flsub
                           ___xxtofl
                  _color_writetoaddr
                               _powf
                  _sendStringSerial4
                            _sprintf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    15      7   75976
                                             63 BANK0     20    13      7
                   _color_read_Clear (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   74398
                                             91 COMRAM     1     1      0
                                             60 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3   73928
                                             89 COMRAM     2     2      0
                                             50 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                                _abs
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   70014
                                             87 COMRAM     2     2      0
                                              0 BANK0     50    44      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     463
                                              1 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    3399
                                             15 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1357
                                              9 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1037
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             67 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              1 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     183
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     613
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     625
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     599
                                              2 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   87339
                                              0 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sqrtf                                               41    37      4    1413
                                             17 COMRAM    37    33      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6   12737
                                             42 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   12053
                                             17 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8   23447
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8   16942
                                              1 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     335
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    2066
                                             75 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4523
                                             42 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              2 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_toggleLED                                1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     978
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     978
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0      22
                  i2_sendCharSerial4
 ---------------------------------------------------------------------------------
 (11) i2_sendCharSerial4                                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_click_toggleLED
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_writetoaddr
   _decide_action
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
     ___flge
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
     ___flsub
     ___xxtofl
     _color_writetoaddr
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
         ___fladd (ARG)
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _color_read_Clear (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
     _sqrtf
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _invert_action
   _resetTimer0
   _reverse_after_read
     _setMotorPWM
     _stop
       _setMotorPWM
   _reverse_one_square
     _setMotorPWM
     _stop
   _sendStringSerial4
   _sprintf
   _stop
   _turn_left_135
     _setMotorPWM
     _stop
   _turn_left_90
     _setMotorPWM
     _stop
   _turn_right_135
     _setMotorPWM
     _stop
   _turn_right_90
     _setMotorPWM
     _stop

 _HighISR (ROOT)
   i2_sendCharSerial4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100     C2      C2      11       75.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100     B4      B4       9       70.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B8      F4       7       95.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5B      81       5       80.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5D       1       98.9%
BITBIGSFRllhllh     37      0       0      49        0.0%
BITBIGSFRllhhl      31      0       0      47        0.0%
BITBIGSFRlllllh     2A      0       0      61        0.0%
BITBIGSFRllllll     26      0       0      67        0.0%
BITBIGSFRllllhh     20      0       0      52        0.0%
BITBIGSFRhhlllh     1B      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      44        0.0%
BITBIGSFRlllllh     14      0       0      54        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      56        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      53        0.0%
BITBIGSFRlllllh      B      0       0      65        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRlllllh      9      0       0      55        0.0%
BITBIGSFRllhlll      8      0       0      50        0.0%
BITBIGSFRllhhhl      6      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      66        0.0%
BITBIGSFRlllllh      6      0       0      60        0.0%
BITBIGSFRlllllh      5      0       0      59        0.0%
BITBIGSFRllhhhh      3      0       0      45        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllhlh       2      0       0      48        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      64        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRlhlh        1      0       0      42        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      57        0.0%
BITBIGSFRlllh        1      0       0      51        0.0%
BITBIGSFRhlhl        1      0       0      40        0.0%
BITBIGSFRhhllll      1      0       0      39        0.0%
BITBIGSFRlhh         1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     398      68        0.0%
DATA                 0      0     398       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 13:29:57 2024

               _color_read_Red 7CE8                   ___fldiv@aexp 0043                   ___fldiv@bexp 0042  
                 ___fldiv@sign 003B                _color_read_Blue 7DD8                             _L1 0E5D  
                           _L2 0E59                             _L3 0E55                             _L4 0E51  
                           _L5 0E4D                             _L6 0E49                             l51 7E70  
                           l60 7D36                             _P1 0E45                             l54 8160  
                           _P2 0E41                             l63 7D86                             _P3 0E3D  
                           _P4 0E39                             l57 7DD6                             l81 45DE  
                           l73 3458                             _P5 0E35                             l66 7E26  
                           l75 34D4                             l69 7C40                             l77 3550  
                           l93 7B00                   ___awdiv@sign 0007                             _bp 0E11  
                           _cp 0E21            ___wmul@multiplicand 0004          __end_of_invert_action 7B02  
             _color_read_Clear 7D88               _color_read_Green 7D38              ??_Interrupts_init 0002  
                          l120 80F2                            l202 770A                            l123 80F4  
                          l132 8218                            l141 7F3E                            l126 811A  
                          l135 8222                            l207 773A                            l215 7A8A  
                          l223 75BA                            l231 74D0                            l129 822C  
                          l138 81F8                            l250 6D90                            l234 738A  
                          l218 7560                            l242 729E                            l226 7476  
                          l411 820E                            l405 8180                            l255 6E04  
                          l263 7110                            l239 73E6                            l247 72FA  
                          l408 81BC                            l192 79F0                            l258 709C  
                          l438 8204                            l199 6CFE                            l481 819E  
                          l490 81C0                            l555 8140                            l820 6FC8  
                          l493 81D4                            l814 794E                            l825 700E  
                          l499 80C8                            l852 6F0A                            l829 8034  
                          l786 767E                            l799 78A4                            _lg2 0E31  
                          _abs 8036                            _pad 7B76                            _ovt 0E25  
                 ___awmod@sign 0007                            prod 0FF3                            wreg 0FE8  
                 ___flmul@aexp 001F                   ___flmul@bexp 0024                   ___flmul@sign 001E  
                 ___flmul@temp 0029                   ___flmul@prod 0025                    main@actions 0300  
                 ___fltol@exp1 000B                           l1100 52D0                           l1110 538E  
                         l1210 6A36                           ?_abs 0008                           l1109 53A0  
                         l1125 7EFC                           l1213 6B92                           l1053 7B74  
                         l1150 5F46                           l1142 5E4C                           l1310 4DAE  
                         l1046 7B6C                           l1151 5F34                           l1224 6B2A  
                         l1137 6028                           l1217 6ACE                           l1233 7F7E  
                         l1139 5E88                           l1083 51B6                           l1411 77F4  
                         l1148 5ECE                           l1092 5486                           l1084 51A4  
                         l1085 516A                           l1173 58B0                           l1333 6376  
                         l1262 7B8C                           l1176 5742                           l1512 1426  
                         l1504 1316                           l1280 4966                           l1169 554C  
                         l1186 5872                           l1178 57BA                           l1370 8050  
                         l1266 7BDA                           l1282 47AC                           l1179 57A8  
                         l1419 7FBE                           l1355 7EB6                           l1508 13C8  
                         l1373 8068                           l1365 720E                           l1277 4FC6  
                         l1382 6922                           l1552 822E                           l1545 331E  
                         l1393 7C96                           l1562 65AA                           l1571 5C8E  
                         l1379 69DE                           l1484 11BE                           l1582 5BB8  
                         l1494 1254                           l1590 7FFC                           l1575 5A96  
                         l1479 335A                           l1399 7CE6                           l1584 5C26  
                         l1579 5AF4                           l6100 7E64                           l5300 7B66  
                         l6110 7E6E                           l6102 7E66                           l5400 8228  
                         l6104 7E68                           l6112 7D88                           l6120 7D2E  
                         l7000 504E                           l5402 81F0                           l6106 7E6A  
                         l6130 7DD8                           l6114 7DCE                           l7010 508E  
                         l7002 505C                           l5410 58B2                           l5404 81F4  
                         l6108 7E6C                           l6132 7E1E                           l6124 7D38  
                         l7100 526A                           l7020 50C8                           l7012 5090  
                         l7004 505E                           l5500 6A00                           l5420 5942  
                         l5412 58C2                           l5270 80F4                           l5406 821A  
                         l6126 7D7E                           l6118 7CE8                           l7110 52E6  
                         l7102 529E                           l7030 50DC                           l7022 50CC  
                         l7006 506E                           l7014 5098                           l5510 6A78  
                         l5502 6A46                           l5414 58F6                           l6070 79F6  
                         ?_pad 0010                           l5600 80DC                           l5272 8104  
                         l5408 821E                           l6136 7BDC                           l7200 5CE6  
                         l7120 5322                           l7112 52F6                           l7104 52A0  
                         l7040 50F0                           l7032 50E0                           l7024 50D0  
                         l7016 50A8                           l7008 507E                           l5520 6B00  
                         l5512 6A84                           l5504 6A5C                           l5432 59B6  
                         l5440 59E2                           l5416 5924                           l5424 5956  
                         l5280 7B02                           l6400 7722                           l6080 7A46  
                         l6072 7A0E                           l5602 80DE                           l6090 7E2C  
                         l5610 8214                           l7210 5D12                           l7202 5CF6  
                         l7130 534E                           l7122 5324                           l7106 52B0  
                         l7050 5104                           l7042 50F4                           l7034 50E4  
                         l7026 50D4                           l7018 50BA                           l5530 6B3E  
                         l5522 6B0C                           l5514 6AB6                           l5450 5A6E  
                         l5442 5A36                           l5434 59C4                           l5426 5974  
                         l5418 5932                           l8002 62AC                           l5290 7B3A  
                         l5282 7B0A                           l5274 811C                           l6330 7A9E  
                         l6322 7A8E                           l6082 7A52                           l6074 7A18  
                         l6410 752E                           l6402 74D2                           l5604 80E0  
                         l6092 7E36                           l5620 7F3A                           l5612 7F00  
                         l7300 5FB8                           l7212 5D22                           l7220 5D4C  
                         l7204 5CFC                           l7140 5386                           l7124 5332  
                         l7116 530A                           l7132 5350                           l7108 52C0  
                         l7060 5162                           l7044 50F8                           l7036 50E8  
                         l7028 50D8                           l7052 5108                           l5532 6B62  
                         l5524 6B1A                           l5516 6AB8                           l5508 6A70  
                         l5460 5B42                           l5452 5AD6                           l5444 5A4A  
                         l5428 59A2                           l8100 0EDC                           l8012 6312  
                         l8004 62D6                           l5292 7B40                           l5284 7B1C  
                         l5276 8138                           l6332 7AA2                           l6324 7A92  
                         l6076 7A30                           l6084 7A5A                           l6068 79F2  
                         l6500 6D68                           l6420 7590                           l6412 7538  
                         l6404 74F4                           l5606 8144                           l6094 7E46  
                         l5622 7F3C                           l5614 7F04                           l7310 6016  
                         l7302 5FCE                           l7230 5D8E                           l7222 5D5C  
                         l7214 5D32                           l7206 5D02                           l7150 5404  
                         l7126 533A                           l7118 5314                           l7134 535E  
                         l7070 5198                           l7062 5178                           l7054 510C  
                         l7046 50FC                           l7038 50EC                           l5534 6B72  
                         l5526 6B38                           l5518 6AC4                           l5470 5BFE  
                         l5462 5B80                           l5454 5AE4                           l5446 5A54  
                         l8110 0F76                           l8102 0EFC                           l8006 62E4  
                         l8014 6342                           l5294 7B56                           l5286 7B24  
                         l6350 797A                           l6334 7AA6                           l6326 7A96  
                         l6342 7AAE                           l6086 7A72                           l6078 7A3A  
                         l6510 6DD8                           l6502 6D74                           l6422 75A6  
                         l6414 7544                           l6406 750C                           l6430 742C  
                         l6096 7E50                           l6088 7E28                           l5616 7F0C  
                         l5608 8210                           l7312 601C                           l7304 5FE8  
                         l7224 5D72                           l7216 5D42                           l7208 5D10  
                         l7160 544A                           l7144 53B0                           l7152 5406  
                         l7136 5362                           l7128 533E                           l7080 51E8  
                         l7072 51A2                           l7064 5184                           l7056 5136  
                         l7048 5100                           l5536 6B80                           l5528 6B3A  
                         l7400 56FC                           l5464 5BC8                           l5456 5B0E  
                         l5448 5A60                           l8200 1548                           l8104 0F44  
                         l5640 809E                           l8040 7E8C                           l5296 7B5E  
                         l5288 7B2C                           l5480 6C04                           l6360 79B6  
                         l6352 799E                           l6336 7AAA                           l6328 7A9A  
                         l6512 6DEC                           l6504 6D80                           l6520 7052  
                         l6416 7550                           l6408 7516                           l6440 748E  
                         l6432 7444                           l6424 73E8                           l6098 7E5A  
                         l5618 7F14                           l7314 601E                           l7306 6004  
                         l7250 5E10                           l7242 5DC6                           l7226 5D82  
                         l7234 5DA2                           l7218 5D44                           l7170 5474  
                         l7162 5458                           l7154 5416                           l7146 53BC  
                         l7138 5370                           l7090 5224                           l7082 51F8  
                         l7074 51C4                           l7066 5188                           l7058 5152  
                         l5538 6B82                           l7410 5752                           l7402 570A  
                         l7330 54B4                           l7322 5488                           l8050 63A4  
                         l5466 5BD2                           l5458 5B2E                           l8130 1056  
                         l8122 1008                           l8114 0F8C                           l5642 80AC  
                         l8018 6350                           l8042 7EAC                           l5298 7B60  
                         l5490 6CBE                           l5482 6C18                           l6370 79E2  
                         l6362 79C0                           l6354 79A8                           l6506 6DA8  
                         l6530 70B4                           l6522 706A                           l6514 7010  
                         l6450 7336                           l6418 7578                           l6442 74A6  
                         l6434 744E                           l6426 740A                           l6540 816A  
                         l7308 6008                           l7260 5E56                           l7252 5E18  
                         l7244 5DE0                           l7236 5DB2                           l7228 5D8A  
                         l7500 8024                           l7172 5476                           l7164 545E  
                         l7156 5426                           l7148 53CA                           l7092 5232  
                         l7084 5206                           l7076 51D4                           l7068 5196  
                         l7412 5760                           l7404 5728                           l7340 54F0  
                         l7332 54C4                           l7324 5494                           l8060 6438  
                         l8052 63D8                           l5468 5BE8                           l8300 1ADA  
                         l8220 15BA                           l8204 155C                           l8132 1072  
                         l8124 1018                           l8116 0FAE                           l8108 0F5A  
                         l5492 81C0                           l5644 80B0                           l7180 7F9A  
                         l8036 7E72                           l5484 6C1C                           l5476 6B94  
                         l6380 79EC                           l6372 79E4                           l6364 79C2  
                         l6356 79AA                           l6348 7950                           l6508 6DC0  
                         l6532 70CC                           l6524 7074                           l6516 7030  
                         l6460 737A                           l6452 7340                           l6444 74BC  
                         l6436 745A                           l6428 7422                           l6542 8174  
                         l5398 8224                           l7270 5EAE                           l7262 5E74  
                         l7254 5E28                           l7246 5DF0                           l7238 5DB2  
                         l7190 5CAC                           l7166 5460                           l7158 5446  
                         l7094 5234                           l7086 5214                           l7422 57CA  
                         l7430 5812                           l7414 5764                           l7406 5732  
                         l7350 5526                           l7342 54F6                           l7334 54D4  
                         l7326 54A2                           l8070 64B8                           l8062 6454  
                         l8054 63E0                           l8046 6378                           l8310 1BE8  
                         l8302 1AEE                           l8222 15DC                           l8206 156C  
                         l8134 1170                           l8126 1026                           l8118 0FD0  
                         l5494 81D0                           l5638 809A                           l7510 6E30  
                         l7182 7F9E                           l8038 7E7A                           l5486 6C5E  
                         l5478 6BB0                           l6390 76C2                           l6382 79EE  
                         l6374 79E6                           l6366 79CC                           l6358 79B4  
                         l6550 818C                           l6534 70E4                           l6526 7080  
                         l6518 7048                           l6462 73A2                           l6454 7358  
                         l6446 72FC                           l6470 7232                           l6438 7466  
                         l6544 817E                           l7280 5EEC                           l7272 5EB4  
                         l7264 5E76                           l7256 5E3C                           l7248 5E00  
                         l7192 5CBC                           l7184 5C90                           l7168 5466  
                         l7096 523E                           l7088 5220                           l5496 69E2  
                         l7440 5886                           l7432 582C                           l7424 57D6  
                         l7416 5772                           l7408 5740                           l7352 5536  
                         l7344 5504                           l7336 54DA                           l7328 54A4  
                         l8072 64D4                           l8056 63FC                           l8080 6534  
                         l8064 6460                           l8048 6388                           l8400 26E4  
                         l8320 1CB0                           l8312 1C1C                           l8304 1B0A  
                         l8240 1666                           l8224 1600                           l8216 1594  
                         l8208 157A                           l8152 1268                           l8144 120E  
                         l8136 11DC                           l8160 12B4                           l8128 1042  
                         l7520 6E7E                           l7512 6E5A                           l7504 6E06  
                         l7600 6858                           l7176 7F80                           l9040 6334  
                         l5488 6C7A                           l6392 76DA                           l6384 7680  
                         l6376 79E8                           l6368 79E0                           l6552 818E  
                         l6560 8206                           l6536 70F8                           l6528 708C  
                         l6464 73BA                           l6456 7362                           l6448 731E  
                         l6480 7282                           l6472 724A                           l6546 81FA  
                         l6538 8162                           l5594 80CA                           l7290 5F56  
                         l7282 5EF0                           l7274 5EBE                           l7266 5E86  
                         l7258 5E4A                           l7194 5CCC                           l7186 5C9C  
                         l7098 5244                           l5498 69F2                           l7442 5894  
                         l7434 5840                           l7426 57E4                           l7418 57A0  
                         l7370 55B8                           l7362 5580                           l7354 553C  
                         l7346 5506                           l7338 54EA                           l8082 6566  
                         l8074 6508                           l8066 647C                           l8058 6430  
                         l8410 2826                           l8402 2718                           l8330 1E5A  
                         l8322 1D22                           l8314 1C2C                           l8306 1B1A  
                         l8250 1688                           l8226 160E                           l8234 162C  
                         l8218 15AA                           l8162 12D0                           l8154 1276  
                         l8146 1230                           l8138 11F8                           l7530 6EAA  
                         l7514 6E5C                           l7506 6E1C                           l7602 6866  
                         l7610 6946                           l7178 7F8C                           l8090 7F4E  
                         l6394 76E4                           l6386 76A0                           l6562 81A0  
                         l6378 79EA                           l6554 8198                           l9034 7AC2  
                         l6490 6D00                           l6466 73D2                           l6458 736E  
                         l6482 728E                           l6474 7254                           l5596 80D4  
                         l7292 5F62                           l7284 5EFE                           l7276 5ECC  
                         l7268 5E98                           l7196 5CDC                           l7188 5CAA  
                         l7452 7EB8                           l7444 5896                           l7436 585A  
                         l7428 580E                           l7380 5602                           l7372 55D0  
                         l7364 558C                           l7356 555C                           l7348 5516  
                         l8084 659A                           l8076 6510                           l8068 64B0  
                         l8500 31B0                           l8412 285A                           l8340 1FCA  
                         l8332 1E8E                           l8324 1D76                           l8316 1C3C  
                         l8308 1B6E                           l8404 274C                           l8260 175E  
                         l8180 13D8                           l8172 137A                           l8164 12DE  
                         l8156 129E                           l8148 123E                           l7700 7870  
                         l7460 78D4                           l7540 6EDA                           l7516 6E6C  
                         l7612 6982                           l9036 621A                           l8092 7F56  
                         l6396 76F0                           l6388 76B8                           l6564 81A6  
                         l6556 819A                           l6548 8182                           l6492 6D24  
                         l6484 72B6                           l6476 726C                           l6468 7210  
                         l5598 80DA                           l7294 5F70                           l7286 5F2C  
                         l7278 5EDE                           l7198 5CDE                           l7454 7EC8  
                         l7438 5876                           l7446 589C                           l7390 5658  
                         l7382 5612                           l7374 55DC                           l7366 5596  
                         l7358 556C                           l8078 652C                           l8510 329E  
                         l8502 31E4                           l8414 288E                           l8406 2776  
                         l8350 213A                           l8342 2022                           l8334 1EC2  
                         l8326 1DAA                           l8318 1C56                           l8270 18DE  
                         l8262 17B6                           l8254 169E                           l8238 1642  
                         l8190 1478                           l8182 13F4                           l8174 1392  
                         l8166 132A                           l7710 789C                           l7702 7878  
                         l7470 794C                           l7462 78E4                           l7542 6EEA  
                         l7526 6E96                           l7518 6E70                           l7614 6996  
                         l7606 68D6                           l7630 7CC8                           l7622 7C98  
                         l7550 7B84                           l9038 62C0                           l8094 7F5E  
                         l6398 76FC                           l6566 81B4                           l6558 819C  
                         l6494 6D3C                           l6486 72CE                           l6478 7276  
                         l7296 5F9A                           l7480 6F78                           l7448 58A0  
                         l7392 5674                           l7384 561E                           l7376 55E8  
                         l7368 55AC                           l8512 32EE                           l8504 3218  
                         l8416 289E                           l8408 27CE                           l8360 221A  
                         l8352 216E                           l8344 207A                           l8336 1F1A  
                         l8328 1E02                           l8280 1990                           l8272 18F8  
                         l8264 17EA                           l8256 16D2                           l8192 1488  
                         l8184 140A                           l8176 13A0                           l8168 1342  
                         l7640 75D6                           l7704 787E                           l7464 7912  
                         l7544 6EFA                           l7536 6EBE                           l7528 6EA0  
                         l7560 7112                           l7616 69BE                           l7608 6912  
                         l7624 7CAC                           l7632 7CCC                           l7552 7B98  
                         l7800 4934                           l7720 4604                           l8096 7F6E  
                         l8088 7F40                           l8600 3C2A                           l6496 6D46  
                         l6488 72E6                           l7298 5F9E                           l7490 7006  
                         l7482 6F88                           l7474 6F0C                           l7394 5680  
                         l7386 562E                           l7378 55F6                           l8514 332E  
                         l8506 324C                           l8426 28C6                           l8370 2304  
                         l8362 2234                           l8354 21A2                           l8346 20AE  
                         l8338 1F72                           l8290 1A66                           l8282 19C4  
                         l8274 192C                           l8266 181E                           l8258 172A  
                         l8194 14EC                           l8186 1436                           l7650 75FC  
                         l7642 75DA                           l7634 75BC                           l7706 7884  
                         l7466 7922                           l7458 78A6                           l7538 6ECA  
                         l7562 7132                           l7618 69CE                           l7626 7CB8  
                         l7554 7BA8                           l7810 499A                           l7802 496E  
                         l7730 464E                           l7722 4608                           l7714 45E0  
                         l8610 3D46                           l8602 3C60                           l8530 33DC  
                         l8522 335C                           l6498 6D5E                           l7492 700C  
                         l7484 6F96                           l7476 6F3A                           l7396 569C  
                         l7388 5648                           l8516 3346                           l8508 325C  
                         l8460 2C9A                           l8444 29B8                           l8452 2A42  
                         l8428 28DE                           l8436 295C                           l8380 2412  
                         l8372 2380                           l8364 2268                           l8356 21D6  
                         l8348 20E2                           l8292 1A76                           l8284 19D6  
                         l8268 18CE                           l8276 1964                           l8196 150C  
                         l8188 1444                           l7660 7632                           l7652 760E  
                         l7644 75E8                           l7636 75C0                           l7708 7894  
                         l7468 7946                           l7564 7170                           l7572 71B0  
                         l7628 7CBC                           l7556 7BAC                           l7548 7B76  
                         l7900 4E34                           l7820 49E8                           l7812 499E  
                         l7804 497E                           l7740 469C                           l7732 465E  
                         l7724 462C                           l7716 45E6                           l8700 45C6  
                         l8620 3E62                           l8612 3D7C                           l8604 3CA8  
                         l8540 3506                           l8532 340E                           l8524 3376  
                         l7486 6FA8                           l7478 6F4A                           l7398 56C6  
                         l8470 2D3C                           l8462 2CAA                           l8454 2AB4  
                         l8446 29D6                           l8438 29A4                           l8390 25FC  
                         l8382 2446                           l8374 23B4                           l8366 229C  
                         l8358 220A                           l8294 1A8E                           l8286 19E6  
                         l8278 1974                           l8198 1524                           l7662 7648  
                         l7654 7616                           l7670 765E                           l7646 75F0  
                         l7638 75CE                           l7574 71C2                           l7566 7198  
                         l7590 7C64                           l7558 7BCA                           l7582 7FC0  
                         l7910 4ED2                           l7902 4E38                           l7830 4A80  
                         l7814 49B0                           l7822 49F0                           l7806 498A  
                         l7750 46D4                           l7742 46AE                           l7734 466A  
                         l7726 4636                           l7718 45F6                           l8702 45DA  
                         l8630 3F6A                           l8622 3E96                           l8614 3DB0  
                         l8606 3CDC                           l8550 3740                           l8542 351C  
                         l8534 3424                           l8526 3398                           l8710 65B4  
                         l7488 6FB6                           l7496 7FFE                           l8480 2E88  
                         l8472 2D70                           l8464 2CDE                           l8456 2AC4  
                         l8448 2A2C                           l8392 2630                           l8384 247A  
                         l8376 23C4                           l8368 22D0                           l8288 1A4E  
                         l7672 766E                           l7664 7650                           l7656 761E  
                         l7648 75F4                           l7680 77FA                           l7568 71A4  
                         l6960 773C                           l7584 7FC8                           l7920 4F26  
                         l7904 4E3E                           l7912 4ED6                           l7840 4B64  
                         l7832 4AD8                           l7824 49F8                           l7816 49BE  
                         l7808 4992                           l7760 4732                           l7752 46DE  
                         l7744 46B2                           l7736 4672                           l7728 463E  
                         l8640 4084                           l8632 3F9E                           l8624 3ECA  
                         l8616 3DE4                           l8608 3D10                           l8560 37E2  
                         l8552 374C                           l8544 36F0                           l8536 348A  
                         l8528 33BA                           l8800 674C                           l8720 65D0  
                         l8712 65B8                           l7498 8014                           l8490 2FD4  
                         l8482 2EBC                           l8474 2DA4                           l8466 2D12  
                         l8458 2AE6                           l8394 2640                           l8386 254C  
                         l8378 23DE                           l8298 1AB6                           l7674 7676  
                         l7666 7652                           l7658 762C                           l7690 782A  
                         l7682 7808                           l7578 7206                           l7594 67CE  
                         l7586 7C42                           l6970 77B4                           l6962 774C  
                         l7930 4FA2                           l7922 4F56                           l7914 4EF4  
                         l7906 4E96                           l7850 4BFE                           l7842 4B96  
                         l7834 4B0C                           l7826 4A08                           l7818 49D6  
                         l7762 4736                           l7746 46B8                           l7738 4676  
                         l8650 418E                           l8642 40BA                           l8634 3FD4  
                         l8626 3F00                           l8618 3E1A                           l8570 38EC  
                         l8562 3818                           l8554 376E                           l8546 3712  
                         l8538 34A0                           l8810 67AE                           l8802 6758  
                         l8730 65DA                           l8722 65D2                           l8714 65BC  
                         l8706 65AC                           l6980 4FE4                           l8492 302C  
                         l8484 2EF0                           l8476 2DFC                           l8468 2D22  
                         l8396 265A                           l8388 2572                           l7668 7658  
                         l7692 783C                           l7684 7810                           l7596 67EE  
                         l7588 7C50                           l6964 775C                           l7932 4FAA  
                         l7924 4F64                           l7916 4F10                           l7908 4ECA  
                         l7860 4CD6                           l7852 4C32                           l7844 4BAC  
                         l7828 4A1C                           l7836 4B12                           l7780 47BC  
                         l7764 473C                           l7748 46C0                           l7756 46FA  
                         l7940 602A                           l8660 42AA                           l8652 41D6  
                         l8644 40F0                           l8636 401C                           l8628 3F36  
                         l8580 3A08                           l8572 3934                           l8564 384E  
                         l8556 377A                           l8548 371E                           l8804 6772  
                         l8740 65F8                           l8732 65E0                           l8724 65D4  
                         l8716 65C8                           l8708 65B0                           l6982 4FF4  
                         l6990 501E                           l6974 4FC8                           l8494 3084  
                         l8486 2F24                           l8478 2E54                           l8398 268E  
                         l7694 7844                           l7686 7814                           l7678 77F6  
                         l7598 6844                           l6966 7766                           l7926 4F7C  
                         l7918 4F18                           l7870 4D00                           l7854 4C88  
                         l7862 4CDA                           l7846 4BDE                           l7838 4B30  
                         l7790 48A4                           l7782 47C2                           l7766 4744  
                         l7758 4720                           l7774 475C                           l7950 6074  
                         l7942 6052                           l8670 43C4                           l8662 42DE  
                         l8654 420A                           l8646 4124                           l8638 4050  
                         l8590 3B22                           l8582 3A3C                           l8574 3968  
                         l8566 3882                           l8558 37AE                           l8806 677E  
                         l8750 6614                           l8742 6600                           l8734 65E4  
                         l8726 65D6                           l8718 65CC                           l6992 502E  
                         l6984 5004                           l6976 4FD4                           l8496 30DC  
                         l8488 2F7C                           l7696 784C                           l7688 7822  
                         l7936 8036                           l6968 7782                           l7928 4F8C  
                         l7880 4DCE                           l7872 4D0C                           l7864 4CEA  
                         l7856 4C8E                           l7848 4BEE                           l7792 48B8  
                         l7784 47F6                           l7776 4776                           l7960 60EE  
                         l7952 6094                           l7944 605A                           l8680 44CC  
                         l8672 43F8                           l8664 4312                           l8656 423E  
                         l8648 4158                           l8592 3B56                           l8584 3A70  
                         l8576 399C                           l8568 38B6                           l8808 6796  
                         l8760 662C                           l8752 661C                           l8744 6604  
                         l8736 65E8                           l8728 65DA                           l6994 5034  
                         l6986 5014                           l6978 4FE2                           l8498 3158  
                         l7698 785A                           l7938 8044                           l7890 4E00  
                         l7882 4DDE                           l7874 4D84                           l7866 4CF2  
                         l7858 4CC2                           l7794 48EC                           l7786 4834  
                         l7970 6172                           l7962 6122                           l7954 60B4  
                         l7946 6066                           l8682 4502                           l8674 442E  
                         l8666 4348                           l8658 4274                           l8594 3B8C  
                         l8586 3AA6                           l8578 39D2                           l8770 664C  
                         l8762 6634                           l8754 6624                           l8746 6608  
                         l8738 65F0                           l6996 5046                           l6988 5016  
                         l7892 4E04                           l7884 4DE2                           l7876 4DA4  
                         l7868 4CF8                           l7796 48F4                           l7788 4866  
                         l7972 6182                           l7964 613E                           l7956 60CC  
                         l7980 61D0                           l7948 606A                           l8692 4568  
                         l8684 454A                           l8676 4464                           l8668 4390  
                         l8596 3BC2                           l8588 3AEE                           l8780 66B0  
                         l8772 6666                           l8764 663C                           l8756 6624  
                         l8748 660C                           l6998 5048                           l7894 4E0A  
                         l7886 4DE8                           l7878 4DC0                           l7982 61DA  
                         l7974 6198                           l7966 6152                           l7958 60D6  
                         l8694 45BA                           l8686 4550                           l8678 4498  
                         l8598 3BF6                           l8790 66F4                           l8782 66BC  
                         l8774 6670                           l8766 6644                           l8758 6624  
                         l7888 4DF0                           l7896 4E10                           l7984 61F0  
                         l7992 6206                           l7976 61B6                           l7968 6162  
                         l8696 45BE                           l8688 4554                           l8792 6700  
                         l8784 66C6                           l8776 667A                           l8768 6644  
                         l7898 4E22                           l7986 61F6                           l7994 6238  
                         l7978 61BA                           l8794 670C                           l8786 66D0  
                         l8778 6692                           l7996 625C                           l7988 61FE  
                         l8796 6726                           l8788 66E8                           l7998 6284  
                         l8798 6732                           STR_1 0EB9                           STR_2 0E80  
                         STR_3 0EAB                           STR_4 0E9D                           STR_5 0EC6  
                         STR_6 0E8F                           STR_7 0E71                           STR_8 0ED2  
                 _BAUD4CONbits 0EE9                           _T2PR 0FBC                           u5100 7B56  
                         u5101 7B52                           u5060 8104                           u5300 5A6E  
                         u5220 58F6                           u5061 8100                           u5301 5A6A  
                         u5221 58F2                           u5070 811A                           u5310 5AE4  
                         u5230 5924                           u5071 8116                           u5311 5AE0  
                         u5231 5920                           u7000 5332                           u5400 6A00  
                         u5320 5B80                           u5240 5932                           u5080 7B1C  
                         u6200 7A72                           u7001 532E                           u5401 69FC  
                         u5321 5B7C                           u5241 592E                           u5081 7B18  
                         u6201 7A6E                           u7010 534E                           u5410 6A5C  
                         u5330 5BE8                           u5250 5974                           u5090 7B3A  
                         u6210 7A8A                           u7011 534A                           u5411 6A58  
                         u5331 5BE4                           u5251 5970                           u5091 7B36  
                         u6211 7A86                           u6220 7BEE                           u7100 5426  
                         u7020 535E                           u5420 6AB2                           u5340 5BFE  
                         u5260 59A2                           u6221 7BE6                           u7101 5422  
                         u7021 535A                           u5421 6AAE                           u5341 5BFA  
                         u5261 599E                           u7110 5446                           u7030 5370  
                         u5430 6AFC                           u5270 59C4                           u7111 5442  
                         u7031 536C                           u5431 6AF8                           u5271 59C0  
                         u6240 7C0C                           u7200 5D32                           u7120 5458  
                         u7040 5386                           u5440 6B1A                           u8000 766E  
                         u5360 6BB0                           u6400 7590                           u6241 7C04  
                         u7201 5D2E                           u7121 5454                           u7041 5382  
                         u5441 6B16                           u8001 766A                           u5361 6BAC  
                         u6401 758C                           u7210 5D72                           u7130 5474  
                         u7050 539C                           u5450 6B2A                           u5290 5A36  
                         u8010 7808                           u5370 6C7A                           u6330 76B8  
                         u6410 7422                           u7211 5D6E                           u7131 5470  
                         u7051 5398                           u5451 6B26                           u5355 5C6A  
                         u5291 5A32                           u8011 7804                           u5371 6C76  
                         u6331 76B4                           u6411 741E                           u6260 7C30  
                         u7300 5EFE                           u7220 5DB2                           u7060 53B0  
                         u5460 6B38                           u5380 81D0                           u8020 7822  
                         u7140 7FBE                           u8100 469C                           u6340 76DA  
                         u6180 7A0E                           u6500 726C                           u6420 7444  
                         u6261 7C28                           u7301 5EFA                           u7221 5DAE  
                         u7061 53AC                           u5461 6B34                           u5285 59F6  
                         u5381 81CC                           u8021 781E                           u7141 7FBA  
                         u8101 4698                           u6341 76D6                           u6181 7A0A  
                         u6501 7268                           u6421 7440                           u6238 7BF0  
                         u7310 5F2C                           u7230 5E28                           u7150 5CAA  
                         u7070 53CA                           u5470 6B72                           u5390 69F2  
                         u5286 5A00                           u8030 783C                           u8110 46AE  
                         u6350 7722                           u6190 7A30                           u6510 72B6  
                         u6430 748E                           u7311 5F28                           u7231 5E24  
                         u7151 5CA6                           u7071 53C6                           u5471 6B6E  
                         u5391 69EE                           u5287 5A10                           u8031 7838  
                         u8111 46AA                           u6351 771E                           u6191 7A2C  
                         u6511 72B2                           u6431 748A                           u7320 5F42  
                         u7240 5E4A                           u7160 5CBC                           u7080 5404  
                         u5480 6B80                           u7400 54C4                           u9000 28C2  
                         u8040 785A                           u8200 497E                           u8120 4720  
                         u6360 773A                           u6600 70CC                           u6520 72CE  
                         u6440 74A6                           u7321 5F3E                           u7241 5E46  
                         u7161 5CB8                           u7081 5400                           u5481 6B7C  
                         u7401 54C0                           u9001 28BE                           u8041 7856  
                         u8201 497A                           u8121 471C                           u6361 7736  
                         u6601 70C8                           u6521 72CA                           u6441 74A2  
                         u6258 7C0E                           u5570 7F28                           u7330 5F56  
                         u7250 5E74                           u7170 5CCC                           u7090 5416  
                         u7410 5504                           u9010 28DE                           u8050 7870  
                         u8210 49B0                           u8130 4732                           u6530 6D3C  
                         u6450 7336                           u6370 750C                           u5571 7F20  
                         u7331 5F52                           u7251 5E70                           u7171 5CC8  
                         u7091 5412                           u7411 5500                           u9011 28DA  
                         u8051 786C                           u8211 49AC                           u8131 472E  
                         u6531 6D38                           u6451 7332                           u6371 7508  
                         u7340 5F70                           u7260 5E98                           u7180 5D10  
                         u7500 57A0                           u7420 5516                           u9020 2958  
                         u8060 7894                           u8300 4D84                           u8220 49BE  
                         u8140 47A8                           u6540 6D5E                           u6460 7358  
                         u6380 752E                           u7341 5F6C                           u7261 5E94  
                         u7181 5D0C                           u7501 579C                           u7421 5512  
                         u9021 2954                           u8061 7890                           u8301 4D80  
                         u8221 49BA                           u8141 47A4                           u6541 6D5A  
                         u6461 7354                           u6381 752A                           u6278 7C32  
                         u7350 5FB8                           u7270 5EAE                           u7190 5D22  
                         u7510 57B6                           u7430 5526                           u9030 29A4  
                         u5590 80C8                           u6710 774C                           u8310 4DC0  
                         u8230 49E8                           u8150 4834                           u8070 4604  
                         u6550 6DA8                           u6470 73A2                           u6390 7578  
                         u7351 5FB4                           u7271 5EAA                           u7191 5D1E  
                         u7511 57B2                           u7431 5522                           u9031 29A0  
                         u5591 80C4                           u6711 7748                           u8311 4DBC  
                         u8231 49E4                           u8151 4830                           u8071 4600  
                         u6551 6DA4                           u6471 739E                           u6391 7574  
                         u7360 5FE8                           u7280 5ECC                           u7600 6F3A  
                         u6800 506E                           u7520 57CA                           u7440 555C  
                         u9120 2C9A                           u9040 29D6                           u6720 775C  
                         u8320 4DCE                           u8240 4B30                           u8160 4866  
                         u8080 464E                           u8400 6052                           u9200 4564  
                         u6560 6DC0                           u6480 73BA                           u7361 5FE4  
                         u7281 5EC8                           u7601 6F36                           u6801 506A  
                         u7521 57C6                           u7441 5558                           u9121 2C96  
                         u9105 2BC2                           u9041 29D2                           u6721 7758  
                         u8321 4DCA                           u8241 4B2C                           u8161 4862  
                         u8081 464A                           u8401 604E                           u9201 4560  
                         u6561 6DBC                           u6481 73B6                           u7370 6016  
                         u7290 5EEC                           u7610 6F78                           u6810 507E  
                         u7530 57E4                           u7450 556C                           u9106 2BCC  
                         u9050 2A2C                           u6730 7782                           u8330 4E22  
                         u8250 4B96                           u8170 48A4                           u8090 465E  
                         u8410 6094                           u9210 45BA                           u6570 7048  
                         u6490 724A                           u7371 6012                           u7291 5EE8  
                         u7611 6F74                           u6811 507A                           u7531 57E0  
                         u7451 5568                           u9115 2C60                           u9107 2BDC  
                         u9051 2A28                           u6731 777E                           u8331 4E1E  
                         u8251 4B92                           u8171 48A0                           u8091 465A  
                         u8411 6090                           u9211 45B6                           u6571 7044  
                         u6491 7246                           u5588 7F2A                           u7620 6F96  
                         u6900 51C4                           u6820 50BA                           u7540 582C  
                         u7460 56E6                           u7380 54A2                           u9116 2C6A  
                         u7700 6EBA                           u6740 77B4                           u8340 4EF4  
                         u8260 4BDE                           u8180 4930                           u8500 6258  
                         u8420 60B4                           u6580 706A                           u7621 6F92  
                         u6901 51C0                           u6821 50B6                           u7541 5828  
                         u7381 549E                           u9117 2C7A                           u7701 6EB6  
                         u6741 77B0                           u8341 4EF0                           u8261 4BDA  
                         u8181 492C                           u8501 6254                           u8421 60B0  
                         u6581 7066                           u7630 6FB6                           u6910 51D4  
                         u6830 50C8                           u6750 4FE2                           u7550 585A  
                         u7470 5740                           u7390 54B4                           u9150 32EE  
                         u9070 2AE6                           u7710 6EDA                           u8350 4F10  
                         u8270 4BEE                           u8190 4966                           u8430 60EA  
                         u8510 7EAC                           u6590 70B4                           u7631 6FB2  
                         u6911 51D0                           u6831 50C4                           u6751 4FDE  
                         u7551 5856                           u7471 573C                           u7391 54B0  
                         u9151 32EA                           u9135 326E                           u9071 2AE2  
                         u7711 6ED6                           u8351 4F0C                           u8271 4BEA  
                         u8191 4962                           u8431 60E4                           u8511 7EA8  
                         u6591 70B0                           u7640 7006                           u6920 5206  
                         u6840 5136                           u6760 4FF4                           u7560 5894  
                         u7480 5760                           u8520 63A4                           u9160 3346  
                         u8600 0F76                           u7720 6EEA                           u7800 71FC  
                         u8360 4F76                           u8280 4C88                           u8440 60EC  
                         u7641 7002                           u6921 5202                           u6841 5132  
                         u6761 4FF0                           u7561 5890                           u7481 575C  
                         u7465 56DC                           u8521 63A0                           u9161 3342  
                         u9145 32B4                           u9065 2A72                           u8601 0F72  
                         u7721 6EE6                           u7801 71F6                           u8361 4F70  
                         u8281 4C84                           u7650 8014                           u6930 5214  
                         u6850 514E                           u6770 5004                           u7490 5772  
                         u8530 63FC                           u9146 32BE                           u9066 2A7C  
                         u8610 0FAE                           u7570 78D4                           u7810 71FE  
                         u7730 7B84                           u8370 4F78                           u8290 4CD6  
                         u8450 6152                           u9170 340E                           u7651 8010  
                         u6931 5210                           u6851 5148                           u6771 5000  
                         u7491 576E                           u8531 63F8                           u9147 32CE  
                         u9067 2A8C                           u8611 0FAA                           u7571 78D0  
                         u7731 7B80                           u8291 4CD2                           u8451 614E  
                         u9171 340A                           u9307 7294                           u9227 6658  
                         u6940 5232                           u6860 5150                           u6780 5046  
                         u8540 6454                           u8700 11DC                           u8620 0FD0  
                         u7580 7912                           u7660 6E1C                           u7900 6912  
                         u7740 7BCA                           u7820 7FFC                           u8380 4F8C  
                         u8460 6162                           u9180 348A                           u6941 522E  
                         u6781 5042                           u8541 6450                           u9085 2B00  
                         u8701 11D8                           u8621 0FCC                           u7581 790E  
                         u7661 6E18                           u7901 690E                           u7741 7BC6  
                         u7821 7FF8                           u8381 4F88                           u8461 615E  
                         u9181 3486                           u9317 72D8                           u9237 6686  
                         u6950 526A                           u6870 5178                           u6790 505C  
                         u8550 647C                           u9086 2B0A                           u8710 11F8  
                         u8630 1026                           u8390 8044                           u7590 7946  
                         u7670 6E50                           u7750 7152                           u7910 6966  
                         u7830 7C50                           u8470 6172                           u9190 3506  
                         u6951 5266                           u6871 5174                           u6791 5058  
                         u8551 6478                           u9095 2B6A                           u9087 2B1A  
                         u8711 11F4                           u8631 1022                           u8391 8040  
                         u7591 7942                           u7831 7C4C                           u8471 616E  
                         u9191 3502                           u9407 6DCA                           u9327 7556  
                         u9247 66DC                           u6960 52B0                           u6880 5196  
                         u8560 64D4                           u9096 2B74                           u8800 13F4  
                         u8720 1230                           u8640 1042                           u7680 6E7E  
                         u7760 7170                           u7920 6982                           u7840 6816  
                         u8480 6182                           u6961 52AC                           u6881 5192  
                         u8561 64D0                           u9097 2B84                           u8801 13F0  
                         u8721 122C                           u8641 103E                           u7681 6E7A  
                         u7761 716C                           u7921 697E                           u8481 617E  
                         u9417 6DF6                           u9337 759A                           u9257 678A  
                         u6970 52E6                           u6890 51B6                           u8570 652C  
                         u8810 140A                           u8730 123E                           u8650 1072  
                         u7690 6E92                           u7770 7198                           u7930 69BE  
                         u7850 6844                           u8490 61CC                           u6971 52E2  
                         u6891 51B2                           u8571 6528                           u8811 1406  
                         u8731 123A                           u8651 106E                           u7691 6E8E  
                         u7675 6E46                           u7771 7194                           u7755 7148  
                         u7931 69BA                           u7915 695C                           u7851 6840  
                         u8491 61C8                           u9427 7A54                           u9347 7380  
                         u9267 67A2                           u6980 52F6                           u8900 15DC  
                         u8820 1426                           u8740 1276                           u7780 71C2  
                         u7860 6866                           u7940 7CE6                           u6981 52F2  
                         u8901 15D8                           u8821 1422                           u8741 1272  
                         u7781 71BE                           u7861 6862                           u7845 680C  
                         u7941 7CE2                           u9437 7702                           u9357 73C4  
                         u9277 67BA                           u6990 5322                           u8910 1600  
                         u8830 1444                           u8750 12D0                           u8590 0F44  
                         u7950 75CE                           u9447 7E3C                           u6991 531E  
                         u8911 15FC                           u8831 1440                           u8751 12CC  
                         u8591 0F40                           u7951 75CA                           u9367 7092  
                         u9287 746C                           u8920 160E                           u8840 1488  
                         u8760 12DE                           u8680 1136                           u7960 75E8  
                         u7880 68D2                           u8585 6546                           u8921 160A  
                         u8841 1484                           u8761 12DA                           u8665 1088  
                         u7961 75E4                           u7881 68CE                           u9377 70D6  
                         u9297 74B0                           u8930 1666                           u8850 14EC  
                         u8770 1342                           u8690 1170                           u8666 1092  
                         u7970 760E                           u7890 68F6                           u8931 1662  
                         u8851 14E8                           u8771 133E                           u8691 116C  
                         u8675 10E2                           u8667 10A2                           u7971 760A  
                         u7795 71D4                           u7875 687A                           u9387 7102  
                         u8940 1684                           u8860 1524                           u8780 1392  
                         u8676 10EC                           u7980 762C                           u7876 6884  
                         u8941 1680                           u8861 1520                           u8781 138E  
                         u8685 112C                           u8677 10FC                           u7981 7628  
                         u7877 6894                           u9397 6D86                           u8950 1990  
                         u8870 157A                           u8790 13A0                           u7990 7648  
                         u8951 198C                           u8871 1576                           u8791 139C  
                         u7991 7644                           u7895 68EC                           u8880 1590  
                         u8881 158C                           u8970 1AB2                           u8890 15AA  
                         u8971 1AAE                           u8891 15A6                           u8980 1ADA  
                         u8981 1AD6                           u8965 19FC                           u8966 1A06  
                         u8967 1A16                           u8995 1CC2                    main@red_val 033C  
                         abs@a 0008                           _dbuf 0400                           _cp_h 0E6D  
                         _cp_l 0E69                           _dp_h 0E09                           _dp_l 0E01  
                         _labs 7C42                           _main 65AC                           _prec 00DB  
                         _powf 0EDC                           pad@i 0016                           pad@p 0013  
                         fsr1h 0FE2                           fsr2h 0FDA                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           btemp 005E  
                         _stop 79F2                    main@timings 0378     __end_of_reverse_after_read 6E06  
                ___fpclassifyf 7112                           prodh 0FF4                           prodl 0FF3  
                         start 0024                ___fldiv@new_exp 003C         __end_of_color_read_Red 7D38  
              __end_of_HighISR 0024                   ___param_bank 0000      invert_action@input_action 0004  
               turn_left_90@mL 0019                 turn_left_90@mR 001B                          ??_abs 000A  
                        ??_pad 0015                   main@blue_val 0364                  ___fltol@sign1 000A  
                        ?_labs 0002                __end_of___fladd 5488                          ?_main 0001  
                        _ADPCH 0F5F                __end_of___fldiv 602A                __end_of___awdiv 7680  
              __end_of___flneg 8036                          STR_11 0ED6                __end_of___awmod 78A6  
              __end_of___flmul 58B2                          ?_powf 0060                __end_of___flsub 7EFE  
              __end_of___fltol 6F0C                          ?_stop 0015                ___awdiv@divisor 0004  
              __end_of___lwdiv 7B76                          i2l444 0020                          i2l490 81D8  
                        i2l493 81EC                ___awdiv@counter 0006                   vfpfcnvrt@fmt 0093  
                        _TMR0H 0FD4                          _TMR0L 0FD3        __end_of_sendCharSerial4 81D6  
   __end_of_I2C_2_Master_Start 822E     __end_of_I2C_2_Master_Write 81FA                          _lg2_h 0E2D  
                        _lg2_l 0E29                          _flags 00DD  __end_of_color_click_toggleLED 7C42  
                        _errno 00D7                          _ivln2 0E1D                          _fputc 773C  
                        _fputs 7F80                __end_of_ivln2_h 0E69                __end_of_ivln2_l 0E1D  
                 main@pred_val 03A2                          _two24 0E61                __end_of_scalbnf 65AC  
                        labs@a 0002                          pad@fp 0010                          _width 00D9  
                        _putch 822E                          _sqrtf 58B2                          tablat 0FF5  
                        powf@i 0128                          powf@j 01A8                          powf@k 01A4  
                        powf@n 0188                          powf@r 0150                          powf@s 0160  
                        powf@t 01B0                          powf@u 017C                          powf@v 0180  
                        powf@w 0144                          powf@x 0060                          powf@y 0064  
                        powf@z 01B4                          ttemp5 005F                          ttemp6 0062  
                        ttemp7 0066                          status 0FD8                          wtemp8 005F  
              __end_of_sprintf 7F80                 ?___fpclassifyf 0002        __end_of_color_read_Blue 7E28  
        _I2C_2_Master_RepStart 8210                ?_color_read_Red 0006                __initialization 806A  
                 __end_of_cp_h 0E71                   __end_of_cp_l 0E6D                   __end_of_dp_h 0E11  
                 __end_of_dp_l 0E09                   __end_of_labs 7C98                   __end_of_main 67CE  
                 __end_of_powf 335C                   __end_of_stop 7A8C                turn_left_135@mL 0019  
              turn_left_135@mR 001B                  main@clear_val 0328                         ??_labs 0006  
              _get16bitTMR0val 81A0                         ??_main 00B9                         ??_powf 0068  
                       ??_stop 0019                  __activetblptr 0003              decide_action@blue 0288  
                 ?_setMotorPWM 000F                         ?_fputc 0002                         ?_fputs 000A  
                       _ADRESH 0F64                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0002  
                       ?_putch 0001                         ?_sqrtf 0012     __end_of_reverse_one_square 7112  
                       _RC0PPS 0E62                         _RC4REG 0EE3                         _RE2PPS 0E74  
                       _RD5PPS 0E6F                         _RC7PPS 0E69                         _RE4PPS 0E76  
                       _RD6PPS 0E70                  main@green_val 0350                         _RG6PPS 0E88  
                       i2l6582 81D8                         i2l6584 81E8                         i2l6834 000A  
                       i2l6836 0018                         i2l6838 001A               ??_turn_right_135 001D  
                vfpfcnvrt@done 0095                      ??_HighISR 0002       __end_of_color_click_init 7E72  
                       _RX4PPS 0E15                         _TX4REG 0EE4               __end_of___xxtofl 6B94  
                 ?_resetTimer0 0001                   _turn_left_90 74D2                  ??_Timer0_init 0002  
                main@pblue_val 03A4                   _CCPTMRS0bits 0FAD                   vfprintf@cfmt 005C  
                       ___flge 6F0C                         ___fleq 78A6                      ??___fladd 000A  
                       ___wmul 811C                      ??___fldiv 0033                      ??___awdiv 0006  
                    ??___flneg 0006                      ??___awmod 0006                      ??___flmul 001A  
                    ??___flsub 004C                      ??___fltol 0006                         _efgtoa 45E0  
                    ??___lwdiv 000C                         _floorf 67CE                         _memcpy 7C98  
                       clear_0 8070                         clear_1 807C                         clear_2 8088  
             ___awdiv@quotient 0008                ___awmod@divisor 0004                         isa$std 0001  
              ___awmod@counter 0006                         pad@buf 0011                         _strcpy 7FC0  
                       fputc@c 0002                         fputs@c 000D                         fputs@i 000E  
                       fputs@s 000A                      ??_scalbnf 0031                ___fpclassifyf@e 000A  
              ___fpclassifyf@u 000C                ___fpclassifyf@x 0002                   __mediumconst 0000  
                       powf@s2 0190                         powf@t1 018C                         powf@t2 011C  
                       tblptrh 0FF7                         tblptrl 0FF6                         powf@y1 012C  
                       tblptru 0FF8                         powf@ax 0178                         powf@is 0198  
                       powf@hx 0168                         powf@hy 0184                         powf@ix 01AC  
                       powf@iy 0194               ?_sendCharSerial4 0001                         powf@sn 0164  
                       putch@c 0001               __end_of_vfprintf 7EB8                         stop@mL 0015  
                       stop@mR 0017                         sqrtf@i 001F                         sqrtf@m 002B  
                       sqrtf@q 0023                         sqrtf@r 002F                         sqrtf@s 001B  
                       sqrtf@t 0027              ??_initDCmotorsPWM 0004                         sqrtf@x 0012  
                    ??_sprintf 005D                     ___flge@ff1 004C                     ___flge@ff2 0050  
              ??___fpclassifyf 0006                   ___xxtofl@arg 000C                   ___xxtofl@exp 000B  
                 ___xxtofl@val 0002                     ___fleq@ff1 0002                     ___fleq@ff2 0006  
                   __accesstop 0060        __end_of__initialization 8090       __end_of_color_read_Clear 7DD8  
                   ___flneg@f1 0002       __end_of_color_read_Green 7D88         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 0001                     ___fltol@f1 0002               ?_color_read_Blue 0006  
              _Interrupts_init 81FA                 __pcstackCOMRAM 0001        __end_of_get16bitTMR0val 81BE  
                __end_of_lg2_h 0E31                  __end_of_lg2_l 0E2D       get16bitTMR0val@timer_val 0006  
                __end_of_ivln2 0E21                  __end_of_fputc 77F6                  __end_of_fputs 7FC0  
                __end_of_two24 0E65                  __end_of_putch 8230                  __end_of_sqrtf 5C90  
                   __end_of_L1 0E61                     __end_of_L2 0E5D                     __end_of_L3 0E59  
                   __end_of_L4 0E55                     __end_of_L5 0E51                     __end_of_L6 0E4D  
                   __end_of_P1 0E49                     __end_of_P2 0E45                     __end_of_P3 0E41  
                   __end_of_P4 0E3D                     __end_of_P5 0E39            __end_of_Timer0_init 8182  
                   __end_of_bp 0E19                     __end_of_cp 0E25                turn_right_90@mL 0019  
              turn_right_90@mR 001B                        ??_fputc 0005                        ??_fputs 000D  
                      ??_putch 0002                        ??_sqrtf 0016                     __pbssBANK0 00BB  
                   __pbssBANK1 01B8                     __pbssBANK4 0400              _color_writetoaddr 8142  
         reverse_one_square@mL 0019           reverse_one_square@mR 001B                   _T2CLKCONbits 0FBF  
           decide_action@green 0284                        ?___flge 004C                        ?___fleq 0002  
           decide_action@red_r 028C             ?_color_writetoaddr 0004                        ?___wmul 0002  
           decide_action@total 027B                        ?_efgtoa 0060                        ?_floorf 0044  
         decide_action@green_r 0290                        ?_memcpy 0002             _reverse_after_read 6D00  
         decide_action@red_val 0214         decide_action@clear_val 0200            ??_color_writetoaddr 0005  
                      ?_strcpy 0002                      ?___xxtofl 0002                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5            ?_reverse_after_read 0019           reverse_after_read@mL 0019  
         reverse_after_read@mR 001B                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
      __end_of_Interrupts_init 8206         color_writetoaddr@value 0004               ??_color_read_Red 0008  
                _turn_left_135 72FC         decide_action@green_val 0228                        _HighISR 0008  
               main@pclear_val 03A0      __end_of_color_writetoaddr 8162                      _ADREFbits 0F58  
           _I2C_2_Master_Start 8224                     _initUSART4 8182             _I2C_2_Master_Write 81EE  
               decide_action@i 027F                        __Hparam 0000           ??_reverse_after_read 001D  
                      __Lparam 0000              color_read_Red@tmp 000B                    _Timer0_init 8162  
       decide_action@pblue_val 0256        sendStringSerial4@string 0003                  _turn_right_90 73E8  
             ?_get16bitTMR0val 0002                        ___fladd 4FC8                        ___fldiv 5C90  
                      ___awdiv 75BC                        ___flneg 7FFE                        ___awmod 77F6  
                      ___flmul 5488                        ___flsub 7EB8                        ___fltol 6E06  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 7B02            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 009C                   __psmallconst 0E00                        __pcinit 806A  
               main@pgreen_val 03A6                        __ramtop 0E00                        __ptext0 65AC  
                      __ptext1 73E8                        __ptext2 7210                        __ptext3 74D2  
                      __ptext4 72FC                        __ptext5 7010                        __ptext6 6D00  
                      __ptext7 79F2                        __ptext8 8206                        __ptext9 7A8C  
                    _T2CONbits 0FBD                        _ivln2_h 0E65                        _ivln2_l 0E19  
                   ??___xxtofl 0006                        _scalbnf 6378               ___awmod@dividend 0002  
                    _T2HLTbits 0FBE                        efgtoa@c 0065                        efgtoa@d 0071  
                      efgtoa@e 0075                        efgtoa@f 0061                        efgtoa@g 0088  
                      efgtoa@h 007F                        efgtoa@i 007D                        efgtoa@l 0083  
                      efgtoa@m 0073                        efgtoa@n 008C                        efgtoa@p 0068  
                      efgtoa@t 006A                        efgtoa@u 008E                        efgtoa@w 0077  
                _RxBufWriteCnt 00E0                        _sprintf 7F40           ??_I2C_2_Master_Start 0003  
         ??_I2C_2_Master_Write 0003           end_of_initialization 8090                        floorf@e 0052  
                      floorf@m 004E                        floorf@u 0054                        floorf@x 0044  
               ?_turn_left_135 0019          _color_click_toggleLED 7BDC                        memcpy@d 0009  
                      memcpy@n 0006                        memcpy@s 000B                        fputc@fp 0004  
                      fputs@fp 000C              ?_color_click_init 0001             ??_color_click_init 0006  
                _decide_action 335C                 ?_turn_right_90 0019                        powf@p_h 01A0  
                      powf@p_l 016C                        powf@s_h 0174                        powf@t_h 0170  
                      powf@s_l 0130                        powf@t_l 0134                        powf@z_h 0120  
                      powf@z_l 0124              __end_of_vfpfcnvrt 6378                     efgtoa@mode 006F  
                   efgtoa@sign 0087             _reverse_one_square 7010                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0096                     ??_vfprintf 005C                        sqrtf@ix 0033  
                      strcpy@d 0006                _initDCmotorsPWM 7950                      _PORTBbits 0F8A  
                _invert_action 7A8C            ?_reverse_one_square 0019             setMotorPWM@negDuty 0014  
                  ___fladd@grs 0011                  ___xxtofl@sign 000A                      _TRISAbits 0F81  
           setMotorPWM@posDuty 0013                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88                    ___fldiv@grs 003E                    ___fldiv@rem 0037  
             fullSpeedAhead@mL 0015               fullSpeedAhead@mR 0017       color_writetoaddr@address 0005  
      ??_I2C_2_Master_RepStart 0003               ?_Interrupts_init 0001                    ___flmul@grs 0020  
         ??_reverse_one_square 001D                    _CCP1CONbits 0FAB              ?_color_read_Clear 0006  
                 _EUSART4RXbuf 00BB                   _EUSART4TXbuf 01B8                    _CCP2CONbits 0FA7  
                   main@greenm 03AA              ?_color_read_Green 0006                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0002  
               ?_decide_action 00B3                     main@motorL 03B0                     main@motorR 03B9  
           ??_color_read_Clear 0008             ??_color_read_Green 0008                 __end_of___flge 7010  
               __end_of___fleq 7950                 _fullSpeedAhead 7680                    vfpfcnvrt@ap 0094  
                  vfpfcnvrt@cp 009A                    vfpfcnvrt@fp 0092                 __end_of___wmul 8142  
               __end_of_efgtoa 4FC8                 ?_invert_action 0001                 __end_of_floorf 69E0  
               __end_of_memcpy 7CE8                     floorf@F521 00CF                 __end_of_strcpy 7FFE  
          color_read_Clear@tmp 000B            start_initialization 806A                    __end_of_lg2 0E35  
                  __end_of_abs 806A                    __end_of_pad 7BDC                    __end_of_ovt 0E29  
                _TxBufWriteCnt 005D                ??_turn_left_135 001D         ?_color_click_toggleLED 0001  
             decide_action@red 0280          __end_of___fpclassifyf 7210                ??_turn_right_90 001D  
          color_read_Green@tmp 000B        __end_of_initDCmotorsPWM 79F2                    vfprintf@fmt 009D  
       __end_of_fullSpeedAhead 773C                       ??___flge 0054                       ??___fleq 000A  
             turn_right_135@mL 0019               turn_right_135@mR 001B                       ??___wmul 0006  
                     ??_efgtoa 0058                       ??_floorf 0048                       ??_memcpy 0008  
                     ??_strcpy 0005                      ___fladd@a 0006                      ___fladd@b 0002  
                    ___fldiv@a 002F                      ___fldiv@b 002B                      ___flmul@a 0016  
                    ___flmul@b 0012                    __pbssCOMRAM 005D     decide_action@blue_unsigned 00B7  
                    ___flsub@a 0048                      ___flsub@b 0044                  __pcstackBANK0 0060  
                __pcstackBANK1 0100                  __pcstackBANK2 0200                  __pcstackBANK3 0300  
                     ?_HighISR 0001                ??_decide_action 005D              i2_sendCharSerial4 81D6  
                  _efgtoa$2687 006C             ?i2_sendCharSerial4 0001               ___lwdiv@dividend 0008  
                 ?_Timer0_init 0001            decide_action@action 027A                ?_fullSpeedAhead 0015  
                    __pintcode 0008            decide_action@blue_r 0294                       ?___fladd 0002  
                     ?___fldiv 002B                       ?___awdiv 0002                       ?___flneg 0002  
                     ?___awmod 0002                       ?___flmul 0012                       ?___flsub 0044  
                     ?___fltol 0002                ??_invert_action 0002                       ?___lwdiv 0008  
          ??i2_sendCharSerial4 0001          decide_action@blue_val 023C           I2C_2_Master_Read@ack 0004  
         I2C_2_Master_Read@tmp 0005                    __smallconst 0E00              _I2C_2_Master_Idle 80F4  
            _I2C_2_Master_Init 80CA                       ?_scalbnf 002B              _I2C_2_Master_Read 7EFE  
            _I2C_2_Master_Stop 821A          decide_action@rgb_comp 025A                   _RxBufReadCnt 00DF  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0011             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000C  
     initDCmotorsPWM@PWMperiod 0002                       ?_sprintf 009F          decide_action@pred_val 0254  
    __end_ofi2_sendCharSerial4 81EE                      _powf$3200 0114                      _powf$3201 0118  
                    _powf$3190 019C                      _powf$3191 0138                      _powf$3192 0100  
                    _powf$3193 0104                      _powf$3194 015C                      _powf$3187 0148  
                    _powf$3195 013C                      _powf$3188 0158                      _powf$3196 0140  
                    _powf$3189 014C                      _powf$3197 0108                      _powf$3198 010C  
                    _powf$3199 0110              _sendStringSerial4 809A            ??_I2C_2_Master_Idle 0002  
          ??_I2C_2_Master_Init 0002            ??_I2C_2_Master_Read 0003                 ___wmul@product 0006  
                     _LATAbits 0F79                  ??_resetTimer0 0002            ??_I2C_2_Master_Stop 0003  
                     _LATCbits 0F7B                       _LATEbits 0F7D                       _LATGbits 0F7F  
                     _LATHbits 0F80                  ?_turn_left_90 0019                       _PIE0bits 0E29  
                     _PIE2bits 0E2B             ?_sendStringSerial4 0003                       _PIE4bits 0E2D  
                     _PIR4bits 0E37                       i2u664_40 81E8                       i2u664_41 81E4  
                     i2u665_40 0018                       i2u665_41 0014               ?_initDCmotorsPWM 0002  
            ??_sendCharSerial4 0002                       _SSP2CON2 0EDA            ??_sendStringSerial4 0005  
                     _SSP2STAT 0ED8                     powf@yisint 0154                      _vfpfcnvrt 602A  
                   _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 811C      __end_of_I2C_2_Master_Init 80F4  
    __end_of_I2C_2_Master_Read 7F40              ___wmul@multiplier 0002      __end_of_I2C_2_Master_Stop 8224  
                 setMotorPWM@m 000F    I2C_2_Master_Write@data_byte 0003                      main@bluem 03AC  
        main@actions_completed 03AE              ??_color_read_Blue 0008                   _TxBufReadCnt 00DE  
                   vfpfcnvrt@c 009B      __end_of_sendStringSerial4 80CA  __end_of_I2C_2_Master_RepStart 821A  
           color_read_Blue@tmp 000B                 ??_turn_left_90 001D            __end_of_setMotorPWM 6D00  
                 ??_initUSART4 0002                       __Hrparam 0000                      memcpy@tmp 0008  
                   vfprintf@ap 009E                       __Lrparam 0000                     vfprintf@fp 009C  
               _turn_right_135 7210            __end_of_resetTimer0 8210      decide_action@red_unsigned 00B3  
                   ?_vfpfcnvrt 0092                     _ANSELAbits 0E92                     _ANSELDbits 0EA7  
      decide_action@pgreen_val 0258             ___fpclassifyf@F465 00D3                     _ANSELFbits 0EB4  
           _decide_action$3180 0298             _decide_action$3181 029C             _decide_action$3182 02A0  
           _decide_action$3183 02A4             _decide_action$3184 02A8             _decide_action$3185 02AC  
           _decide_action$3186 02B0             _decide_action$3179 0250                     sprintf@fmt 00A1  
                     ___xxtofl 69E0                     _T0CON0bits 0FD5                     _T0CON1bits 0FD6  
      ??_color_click_toggleLED 0002                ___lwdiv@divisor 000A             __end_of_initUSART4 81A0  
              ___lwdiv@counter 000E                       __ptext10 8182                       __ptext11 7950  
                     __ptext20 602A                       __ptext12 81A0                       __ptext21 45E0  
                     __ptext13 7680                       __ptext30 7112                       __ptext22 7FC0  
                     __ptext14 6B94                       __ptext31 6E06                       __ptext23 7B76  
                     __ptext15 811C                       __ptext40 6378                       __ptext32 78A6  
                     __ptext24 7F80                       __ptext16 7B02                       __ptext41 5488  
                     __ptext33 8036                       __ptext25 773C                       __ptext17 335C  
                     __ptext50 7D88                       __ptext42 69E0                       __ptext34 77F6  
                     __ptext26 822E                       __ptext18 7F40                       __ptext51 7DD8  
                     __ptext43 7EB8                       __ptext35 75BC                       __ptext27 7C98  
                     __ptext19 7E72                       __ptext60 80F4                       __ptext52 8210  
                     __ptext44 4FC8                       __ptext36 809A                       __ptext28 7C42  
                     __ptext61 80CA                       __ptext53 7EFE                       __ptext45 7FFE  
                     __ptext37 81BE                       __ptext29 67CE                       __ptext62 8162  
                     __ptext54 7BDC                       __ptext46 6F0C                       __ptext38 0EDC  
                     __ptext63 81FA                       __ptext55 7E28                       __ptext47 5C90  
                     __ptext39 58B2                       __ptext56 8142                       __ptext48 7CE8  
                     __ptext65 81D6                       __ptext57 81EE                       __ptext49 7D38  
                     __ptext58 821A                       __ptext59 8224                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA                     strcpy@dest 0002    decide_action@green_unsigned 00B5  
       __end_of_turn_right_135 72FC                       efgtoa@fp 0060                       efgtoa@ne 0066  
                     efgtoa@pp 006E                       efgtoa@ou 0079                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       int$flags 005E                       _vfprintf 7E72  
                     main@redm 03A8                     _INTCONbits 0FF2                       memcpy@d1 0002  
                     memcpy@s1 0004                    _setMotorPWM 6B94              ??_get16bitTMR0val 0004  
                     scalbnf@n 002F                       scalbnf@u 0035                       scalbnf@x 002B  
                     scalbnf@y 0039                       intlevel2 0000          __end_of_turn_left_135 73E8  
                    sprintf@ap 00A6               ??_fullSpeedAhead 0019                    _resetTimer0 8206  
                    strcpy@src 0004                ?_turn_right_135 0019          __end_of_turn_right_90 74D2  
                  efgtoa@nmode 0070                    ??_vfpfcnvrt 005A               _color_click_init 7E28  
                     sprintf@f 00A7                       sprintf@s 009F           __end_of_turn_left_90 75BC  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C                  ___fladd@signs 000E  
                   _TX4STAbits 0EE8                _sendCharSerial4 81BE                   ___fladd@aexp 000F  
                 ___fladd@bexp 0010    i2sendCharSerial4@charToSend 0001          __end_of_decide_action 45E0  
