

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 22:24:59 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74   000000                     
    75                           ; Generated 21/07/2023 GMT
    76                           ; 
    77                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F67K40 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109   000000                     
   110                           	psect	smallconst
   111   000E00                     __psmallconst:
   112                           	callstack 0
   113   000E00  00                 	db	0
   114   000E01                     _dp_l:
   115                           	callstack 0
   116   000E01  0000               	dw	0
   117   000E03  0000               	dw	0
   118   000E05  CFDC               	dw	53212
   119   000E07  35D1               	dw	13777
   120   000E09                     __end_of_dp_l:
   121                           	callstack 0
   122   000E09                     _dp_h:
   123                           	callstack 0
   124   000E09  0000               	dw	0
   125   000E0B  0000               	dw	0
   126   000E0D  C000               	dw	49152
   127   000E0F  3F15               	dw	16149
   128   000E11                     __end_of_dp_h:
   129                           	callstack 0
   130   000E11                     _bp:
   131                           	callstack 0
   132   000E11  0000               	dw	0
   133   000E13  3F80               	dw	16256
   134   000E15  0000               	dw	0
   135   000E17  3FC0               	dw	16320
   136   000E19                     __end_of_bp:
   137                           	callstack 0
   138   000E19  A570               	dw	42352
   139   000E1B  36EC               	dw	14060
   140   000E1D                     __end_of_ivln2_l:
   141                           	callstack 0
   142   000E1D  AA3B               	dw	43579
   143   000E1F  3FB8               	dw	16312
   144   000E21                     __end_of_ivln2:
   145                           	callstack 0
   146   000E21  384F               	dw	14415
   147   000E23  3F76               	dw	16246
   148   000E25                     __end_of_cp:
   149                           	callstack 0
   150   000E25  AA3C               	dw	43580
   151   000E27  3338               	dw	13112
   152   000E29                     __end_of_ovt:
   153                           	callstack 0
   154   000E29  BE8C               	dw	48780
   155   000E2B  35BF               	dw	13759
   156   000E2D                     __end_of_lg2_l:
   157                           	callstack 0
   158   000E2D  7200               	dw	29184
   159   000E2F  3F31               	dw	16177
   160   000E31                     __end_of_lg2_h:
   161                           	callstack 0
   162   000E31  7218               	dw	29208
   163   000E33  3F31               	dw	16177
   164   000E35                     __end_of_lg2:
   165                           	callstack 0
   166   000E35  BB4C               	dw	47948
   167   000E37  3331               	dw	13105
   168   000E39                     __end_of_P5:
   169                           	callstack 0
   170   000E39  EA0E               	dw	59918
   171   000E3B  B5DD               	dw	46557
   172   000E3D                     __end_of_P4:
   173                           	callstack 0
   174   000E3D  B355               	dw	45909
   175   000E3F  388A               	dw	14474
   176   000E41                     __end_of_P3:
   177                           	callstack 0
   178   000E41  0B61               	dw	2913
   179   000E43  BB36               	dw	47926
   180   000E45                     __end_of_P2:
   181                           	callstack 0
   182   000E45  AAAB               	dw	43691
   183   000E47  3E2A               	dw	15914
   184   000E49                     __end_of_P1:
   185                           	callstack 0
   186   000E49  F142               	dw	61762
   187   000E4B  3E53               	dw	15955
   188   000E4D                     __end_of_L6:
   189                           	callstack 0
   190   000E4D  3255               	dw	12885
   191   000E4F  3E6C               	dw	15980
   192   000E51                     __end_of_L5:
   193                           	callstack 0
   194   000E51  A305               	dw	41733
   195   000E53  3E8B               	dw	16011
   196   000E55                     __end_of_L4:
   197                           	callstack 0
   198   000E55  AAAB               	dw	43691
   199   000E57  3EAA               	dw	16042
   200   000E59                     __end_of_L3:
   201                           	callstack 0
   202   000E59  6DB7               	dw	28087
   203   000E5B  3EDB               	dw	16091
   204   000E5D                     __end_of_L2:
   205                           	callstack 0
   206   000E5D  999A               	dw	39322
   207   000E5F  3F19               	dw	16153
   208   000E61                     __end_of_L1:
   209                           	callstack 0
   210   000E61  0000               	dw	0
   211   000E63  4B80               	dw	19328
   212   000E65                     __end_of_two24:
   213                           	callstack 0
   214   000E65  AA00               	dw	43520
   215   000E67  3FB8               	dw	16312
   216   000E69                     __end_of_ivln2_h:
   217                           	callstack 0
   218   000E69  23C6               	dw	9158
   219   000E6B  B8F6               	dw	47350
   220   000E6D                     __end_of_cp_l:
   221                           	callstack 0
   222   000E6D  4000               	dw	16384
   223   000E6F  3F76               	dw	16246
   224   000E71                     __end_of_cp_h:
   225                           	callstack 0
   226   000000                     _TX4REG	set	3812
   227   000000                     _RC4STAbits	set	3815
   228   000000                     _SP4BRGH	set	3814
   229   000000                     _TRISFbits	set	3974
   230   000000                     _LATHbits	set	3968
   231   000000                     _TRISAbits	set	3969
   232   000000                     _TRISGbits	set	3975
   233   000000                     _SSP2CON2bits	set	3802
   234   000000                     _RX4PPS	set	3605
   235   000000                     _SSP2CLKPPS	set	3612
   236   000000                     _SSP2DATPPS	set	3613
   237   000000                     _ANSELDbits	set	3751
   238   000000                     _SSP2ADD	set	3798
   239   000000                     _SSP2CON1bits	set	3801
   240   000000                     _LATAbits	set	3961
   241   000000                     _LATGbits	set	3967
   242   000000                     _LATCbits	set	3963
   243   000000                     _LATEbits	set	3965
   244   000000                     _PORTBbits	set	3978
   245   000000                     _TRISHbits	set	3976
   246   000000                     _T2PR	set	4028
   247   000000                     _T2CONbits	set	4029
   248   000000                     _CCPR2H	set	4006
   249   000000                     _CCPR1H	set	4010
   250   000000                     _TRISCbits	set	3971
   251   000000                     _TRISDbits	set	3972
   252   000000                     _TRISEbits	set	3973
   253   000000                     _RC4REG	set	3811
   254   000000                     _SP4BRGL	set	3813
   255   000000                     _TX4STAbits	set	3816
   256   000000                     _BAUD4CONbits	set	3817
   257   000000                     _SSP2CON2	set	3802
   258   000000                     _CCPR4H	set	3873
   259   000000                     _CCPR3H	set	3877
   260   000000                     _SSP2STAT	set	3800
   261   000000                     _ANSELFbits	set	3764
   262   000000                     _SSP2BUF	set	3797
   263   000000                     _PIE0bits	set	3625
   264   000000                     _PIE2bits	set	3627
   265   000000                     _RC7PPS	set	3689
   266   000000                     _RD5PPS	set	3695
   267   000000                     _RE2PPS	set	3700
   268   000000                     _RD6PPS	set	3696
   269   000000                     _RE4PPS	set	3702
   270   000000                     _RG6PPS	set	3720
   271   000000                     _ANSELAbits	set	3730
   272   000000                     _TMR0L	set	4051
   273   000000                     _TMR0H	set	4052
   274   000000                     _T0CON0bits	set	4053
   275   000000                     _T0CON1bits	set	4054
   276   000000                     _T2CLKCONbits	set	4031
   277   000000                     _T2HLTbits	set	4030
   278   000000                     _CCP1CONbits	set	4011
   279   000000                     _CCPTMRS0bits	set	4013
   280   000000                     _CCP2CONbits	set	4007
   281   000000                     _ADREFbits	set	3928
   282   000000                     _CCP3CONbits	set	3878
   283   000000                     _CCP4CONbits	set	3874
   284   000000                     _INTCONbits	set	4082
   285   000000                     _PIE4bits	set	3629
   286   000000                     _PIR4bits	set	3639
   287   000000                     _RC0PPS	set	3682
   288   000000                     _ADPCH	set	3935
   289   000000                     _ADRESH	set	3940
   290   000000                     _ADCON0bits	set	3936
   291   000E71                     STR_14:
   292                           
   293                           ; BSR set to: 14
   294   000E71  63                 	db	99	;'c'
   295   000E72  6C                 	db	108	;'l'
   296   000E73  65                 	db	101	;'e'
   297   000E74  61                 	db	97	;'a'
   298   000E75  72                 	db	114	;'r'
   299   000E76  20                 	db	32
   300   000E77  3D                 	db	61	;'='
   301   000E78  20                 	db	32
   302   000E79  25                 	db	37
   303   000E7A  64                 	db	100	;'d'
   304   000E7B  20                 	db	32
   305   000E7C  0D                 	db	13
   306   000E7D  0A                 	db	10
   307   000E7E  0D                 	db	13
   308   000E7F  0A                 	db	10
   309   000E80  00                 	db	0
   310   000E81                     STR_10:
   311                           
   312                           ; BSR set to: 14
   313   000E81  61                 	db	97	;'a'
   314   000E82  63                 	db	99	;'c'
   315   000E83  74                 	db	116	;'t'
   316   000E84  69                 	db	105	;'i'
   317   000E85  6F                 	db	111	;'o'
   318   000E86  6E                 	db	110	;'n'
   319   000E87  20                 	db	32
   320   000E88  3D                 	db	61	;'='
   321   000E89  20                 	db	32
   322   000E8A  25                 	db	37
   323   000E8B  64                 	db	100	;'d'
   324   000E8C  20                 	db	32
   325   000E8D  0D                 	db	13
   326   000E8E  0A                 	db	10
   327   000E8F  00                 	db	0
   328   000E90                     STR_3:
   329                           
   330                           ; BSR set to: 14
   331   000E90  62                 	db	98	;'b'
   332   000E91  6C                 	db	108	;'l'
   333   000E92  75                 	db	117	;'u'
   334   000E93  65                 	db	101	;'e'
   335   000E94  20                 	db	32
   336   000E95  3D                 	db	61	;'='
   337   000E96  20                 	db	32
   338   000E97  25                 	db	37
   339   000E98  64                 	db	100	;'d'
   340   000E99  20                 	db	32
   341   000E9A  0D                 	db	13
   342   000E9B  0A                 	db	10
   343   000E9C  0D                 	db	13
   344   000E9D  0A                 	db	10
   345   000E9E  00                 	db	0
   346   000E9F                     
   347                           ; BSR set to: 14
   348   000E9F  63                 	db	99	;'c'
   349   000EA0  6C                 	db	108	;'l'
   350   000EA1  65                 	db	101	;'e'
   351   000EA2  61                 	db	97	;'a'
   352   000EA3  72                 	db	114	;'r'
   353   000EA4  20                 	db	32
   354   000EA5  3D                 	db	61	;'='
   355   000EA6  20                 	db	32
   356   000EA7  25                 	db	37
   357   000EA8  64                 	db	100	;'d'
   358   000EA9  20                 	db	32
   359   000EAA  0D                 	db	13
   360   000EAB  0A                 	db	10
   361   000EAC  00                 	db	0
   362   000EAD                     STR_2:
   363                           
   364                           ; BSR set to: 14
   365   000EAD  67                 	db	103	;'g'
   366   000EAE  72                 	db	114	;'r'
   367   000EAF  65                 	db	101	;'e'
   368   000EB0  65                 	db	101	;'e'
   369   000EB1  6E                 	db	110	;'n'
   370   000EB2  20                 	db	32
   371   000EB3  3D                 	db	61	;'='
   372   000EB4  20                 	db	32
   373   000EB5  25                 	db	37
   374   000EB6  64                 	db	100	;'d'
   375   000EB7  20                 	db	32
   376   000EB8  0D                 	db	13
   377   000EB9  0A                 	db	10
   378   000EBA  00                 	db	0
   379   000EBB                     STR_13:
   380                           
   381                           ; BSR set to: 14
   382   000EBB  62                 	db	98	;'b'
   383   000EBC  6C                 	db	108	;'l'
   384   000EBD  75                 	db	117	;'u'
   385   000EBE  65                 	db	101	;'e'
   386   000EBF  20                 	db	32
   387   000EC0  3D                 	db	61	;'='
   388   000EC1  20                 	db	32
   389   000EC2  25                 	db	37
   390   000EC3  64                 	db	100	;'d'
   391   000EC4  20                 	db	32
   392   000EC5  0D                 	db	13
   393   000EC6  0A                 	db	10
   394   000EC7  00                 	db	0
   395   000EC8                     STR_1:
   396                           
   397                           ; BSR set to: 14
   398   000EC8  72                 	db	114	;'r'
   399   000EC9  65                 	db	101	;'e'
   400   000ECA  64                 	db	100	;'d'
   401   000ECB  20                 	db	32
   402   000ECC  3D                 	db	61	;'='
   403   000ECD  20                 	db	32
   404   000ECE  25                 	db	37
   405   000ECF  64                 	db	100	;'d'
   406   000ED0  20                 	db	32
   407   000ED1  0D                 	db	13
   408   000ED2  0A                 	db	10
   409   000ED3  00                 	db	0
   410   000ED4  00                 	db	0	; dummy byte at the end
   411   000000                     
   412                           ; #config settings
   413                           
   414                           	psect	cinit
   415   007134                     __pcinit:
   416                           	callstack 0
   417   007134                     start_initialization:
   418                           	callstack 0
   419   007134                     __initialization:
   420                           	callstack 0
   421                           
   422                           ; Clear objects allocated to BANK0 (120 bytes)
   423   007134  EE00  F060         	lfsr	0,__pbssBANK0
   424   007138  0E78               	movlw	120
   425   00713A                     clear_0:
   426   00713A  6AEE               	clrf	postinc0,c
   427   00713C  06E8               	decf	wreg,f,c
   428   00713E  E1FD               	bnz	clear_0
   429                           
   430                           ; Clear objects allocated to COMRAM (3 bytes)
   431   007140  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   432   007142  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   433   007144  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   434   007146                     end_of_initialization:
   435                           	callstack 0
   436   007146                     __end_of__initialization:
   437                           	callstack 0
   438   007146  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   439   007148  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   440   00714A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   441   00714C  6EF8               	movwf	tblptru,c
   442   00714E  0E0E               	movlw	high __Lsmallconst
   443   007150  6EF7               	movwf	tblptrh,c
   444   007152  0100               	movlb	0
   445   007154  EFF3  F02B         	goto	_main	;jump to C main() function
   446                           
   447                           	psect	bssCOMRAM
   448   00005A                     __pbssCOMRAM:
   449                           	callstack 0
   450   00005A                     _TxBufReadCnt:
   451                           	callstack 0
   452   00005A                     	ds	1
   453   00005B                     _TxBufWriteCnt:
   454                           	callstack 0
   455   00005B                     	ds	1
   456   00005C                     _RxBufWriteCnt:
   457                           	callstack 0
   458   00005C                     	ds	1
   459                           
   460                           	psect	bssBANK0
   461   000060                     __pbssBANK0:
   462                           	callstack 0
   463   000060                     _EUSART4TXbuf:
   464                           	callstack 0
   465   000060                     	ds	60
   466   00009C                     _dbuf:
   467                           	callstack 0
   468   00009C                     	ds	32
   469   0000BC                     _EUSART4RXbuf:
   470                           	callstack 0
   471   0000BC                     	ds	20
   472   0000D0                     _errno:
   473                           	callstack 0
   474   0000D0                     	ds	2
   475   0000D2                     _width:
   476                           	callstack 0
   477   0000D2                     	ds	2
   478   0000D4                     _prec:
   479                           	callstack 0
   480   0000D4                     	ds	2
   481   0000D6                     _flags:
   482                           	callstack 0
   483   0000D6                     	ds	1
   484   0000D7                     _RxBufReadCnt:
   485                           	callstack 0
   486   0000D7                     	ds	1
   487                           
   488                           	psect	cstackBANK3
   489   000300                     __pcstackBANK3:
   490                           	callstack 0
   491   000300                     main@actions:
   492                           	callstack 0
   493                           
   494                           ; 40 bytes @ 0x0
   495   000300                     	ds	40
   496   000328                     main@clear_val:
   497                           	callstack 0
   498                           
   499                           ; 20 bytes @ 0x28
   500   000328                     	ds	20
   501   00033C                     main@green_val:
   502                           	callstack 0
   503                           
   504                           ; 20 bytes @ 0x3C
   505   00033C                     	ds	20
   506   000350                     main@blue_val:
   507                           	callstack 0
   508                           
   509                           ; 20 bytes @ 0x50
   510   000350                     	ds	20
   511   000364                     main@timings:
   512                           	callstack 0
   513                           
   514                           ; 40 bytes @ 0x64
   515   000364                     	ds	40
   516   00038C                     main@red_val:
   517                           	callstack 0
   518                           
   519                           ; 20 bytes @ 0x8C
   520   00038C                     	ds	20
   521   0003A0                     _main$3106:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xA0
   525   0003A0                     	ds	2
   526   0003A2                     main@pclear_val:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xA2
   530   0003A2                     	ds	2
   531   0003A4                     main@pblue_val:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0xA4
   535   0003A4                     	ds	2
   536   0003A6                     main@pgreen_val:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0xA6
   540   0003A6                     	ds	2
   541   0003A8                     main@pred_val:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0xA8
   545   0003A8                     	ds	2
   546   0003AA                     main@lum:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0xAA
   550   0003AA                     	ds	2
   551   0003AC                     main@measured_time:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0xAC
   555   0003AC                     	ds	2
   556   0003AE                     main@actions_completed:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0xAE
   560   0003AE                     	ds	2
   561   0003B0                     main@RGBC:
   562                           	callstack 0
   563                           
   564                           ; 8 bytes @ 0xB0
   565   0003B0                     	ds	8
   566   0003B8                     main@going_forward:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0xB8
   570   0003B8                     	ds	1
   571   0003B9                     main@motorL:
   572                           	callstack 0
   573                           
   574                           ; 9 bytes @ 0xB9
   575   0003B9                     	ds	9
   576   0003C2                     main@motorR:
   577                           	callstack 0
   578                           
   579                           ; 9 bytes @ 0xC2
   580   0003C2                     	ds	9
   581   0003CB                     main@pmL:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0xCB
   585   0003CB                     	ds	2
   586   0003CD                     main@pmR:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0xCD
   590   0003CD                     	ds	2
   591                           
   592                           	psect	cstackBANK2
   593   000200                     __pcstackBANK2:
   594                           	callstack 0
   595   000200                     decide_action@clear_val:
   596                           	callstack 0
   597                           
   598                           ; 20 bytes @ 0x0
   599   000200                     	ds	20
   600   000214                     decide_action@red_val:
   601                           	callstack 0
   602                           
   603                           ; 20 bytes @ 0x14
   604   000214                     	ds	20
   605   000228                     decide_action@green_val:
   606                           	callstack 0
   607                           
   608                           ; 20 bytes @ 0x28
   609   000228                     	ds	20
   610   00023C                     decide_action@blue_val:
   611                           	callstack 0
   612                           
   613                           ; 20 bytes @ 0x3C
   614   00023C                     	ds	20
   615   000250                     decide_action@rgb_comp:
   616                           	callstack 0
   617                           
   618                           ; 32 bytes @ 0x50
   619   000250                     	ds	32
   620   000270                     decide_action@action:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x70
   624   000270                     	ds	1
   625   000271                     decide_action@pred_val:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x71
   629   000271                     	ds	2
   630   000273                     decide_action@pblue_val:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x73
   634   000273                     	ds	2
   635   000275                     decide_action@pgreen_val:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x75
   639   000275                     	ds	2
   640   000277                     _decide_action$3098:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x77
   644   000277                     	ds	4
   645   00027B                     decide_action@i:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x7B
   649   00027B                     	ds	1
   650   00027C                     decide_action@green:
   651                           	callstack 0
   652                           
   653                           ; 4 bytes @ 0x7C
   654   00027C                     	ds	4
   655   000280                     decide_action@blue:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0x80
   659   000280                     	ds	4
   660   000284                     decide_action@red_r:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x84
   664   000284                     	ds	4
   665   000288                     decide_action@green_r:
   666                           	callstack 0
   667                           
   668                           ; 4 bytes @ 0x88
   669   000288                     	ds	4
   670   00028C                     decide_action@blue_r:
   671                           	callstack 0
   672                           
   673                           ; 4 bytes @ 0x8C
   674   00028C                     	ds	4
   675   000290                     _decide_action$3099:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x90
   679   000290                     	ds	4
   680   000294                     _decide_action$3100:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x94
   684   000294                     	ds	4
   685   000298                     _decide_action$3101:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x98
   689   000298                     	ds	4
   690   00029C                     _decide_action$3102:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0x9C
   694   00029C                     	ds	4
   695   0002A0                     _decide_action$3103:
   696                           	callstack 0
   697                           
   698                           ; 4 bytes @ 0xA0
   699   0002A0                     	ds	4
   700   0002A4                     _decide_action$3104:
   701                           	callstack 0
   702                           
   703                           ; 4 bytes @ 0xA4
   704   0002A4                     	ds	4
   705   0002A8                     _decide_action$3105:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0xA8
   709   0002A8                     	ds	4
   710   0002AC                     decide_action@red:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0xAC
   714   0002AC                     	ds	4
   715                           
   716                           	psect	cstackBANK1
   717   000100                     __pcstackBANK1:
   718                           	callstack 0
   719   000100                     _powf$3112:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x0
   723   000100                     	ds	4
   724   000104                     _powf$3113:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x4
   728   000104                     	ds	4
   729   000108                     _powf$3117:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x8
   733   000108                     	ds	4
   734   00010C                     _powf$3118:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0xC
   738   00010C                     	ds	4
   739   000110                     _powf$3119:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x10
   743   000110                     	ds	4
   744   000114                     _powf$3120:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x14
   748   000114                     	ds	4
   749   000118                     _powf$3121:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x18
   753   000118                     	ds	4
   754   00011C                     powf@t2:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0x1C
   758   00011C                     	ds	4
   759   000120                     powf@z_h:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0x20
   763   000120                     	ds	4
   764   000124                     powf@z_l:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x24
   768   000124                     	ds	4
   769   000128                     powf@i:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x28
   773   000128                     	ds	4
   774   00012C                     powf@y1:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x2C
   778   00012C                     	ds	4
   779   000130                     powf@s_l:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x30
   783   000130                     	ds	4
   784   000134                     powf@t_l:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x34
   788   000134                     	ds	4
   789   000138                     _powf$3111:
   790                           	callstack 0
   791                           
   792                           ; 4 bytes @ 0x38
   793   000138                     	ds	4
   794   00013C                     _powf$3115:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x3C
   798   00013C                     	ds	4
   799   000140                     _powf$3116:
   800                           	callstack 0
   801                           
   802                           ; 4 bytes @ 0x40
   803   000140                     	ds	4
   804   000144                     powf@w:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0x44
   808   000144                     	ds	4
   809   000148                     _powf$3107:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x48
   813   000148                     	ds	4
   814   00014C                     _powf$3109:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x4C
   818   00014C                     	ds	4
   819   000150                     powf@r:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x50
   823   000150                     	ds	4
   824   000154                     powf@yisint:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0x54
   828   000154                     	ds	4
   829   000158                     powf@s:
   830                           	callstack 0
   831                           
   832                           ; 4 bytes @ 0x58
   833   000158                     	ds	4
   834   00015C                     _powf$3108:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x5C
   838   00015C                     	ds	4
   839   000160                     _powf$3114:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x60
   843   000160                     	ds	4
   844   000164                     powf@sn:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x64
   848   000164                     	ds	4
   849   000168                     powf@hx:
   850                           	callstack 0
   851                           
   852                           ; 4 bytes @ 0x68
   853   000168                     	ds	4
   854   00016C                     powf@p_l:
   855                           	callstack 0
   856                           
   857                           ; 4 bytes @ 0x6C
   858   00016C                     	ds	4
   859   000170                     powf@t_h:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x70
   863   000170                     	ds	4
   864   000174                     powf@s_h:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x74
   868   000174                     	ds	4
   869   000178                     powf@ax:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x78
   873   000178                     	ds	4
   874   00017C                     powf@u:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x7C
   878   00017C                     	ds	4
   879   000180                     powf@v:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0x80
   883   000180                     	ds	4
   884   000184                     powf@hy:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x84
   888   000184                     	ds	4
   889   000188                     powf@n:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x88
   893   000188                     	ds	4
   894   00018C                     powf@t1:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x8C
   898   00018C                     	ds	4
   899   000190                     powf@s2:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0x90
   903   000190                     	ds	4
   904   000194                     powf@iy:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x94
   908   000194                     	ds	4
   909   000198                     powf@is:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x98
   913   000198                     	ds	4
   914   00019C                     _powf$3110:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x9C
   918   00019C                     	ds	4
   919   0001A0                     powf@p_h:
   920                           	callstack 0
   921                           
   922                           ; 4 bytes @ 0xA0
   923   0001A0                     	ds	4
   924   0001A4                     powf@k:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0xA4
   928   0001A4                     	ds	4
   929   0001A8                     powf@j:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0xA8
   933   0001A8                     	ds	4
   934   0001AC                     powf@ix:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0xAC
   938   0001AC                     	ds	4
   939   0001B0                     powf@t:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0xB0
   943   0001B0                     	ds	4
   944   0001B4                     powf@z:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0xB4
   948   0001B4                     	ds	4
   949                           
   950                           	psect	cstackBANK0
   951   0000D8                     __pcstackBANK0:
   952                           	callstack 0
   953   0000D8                     ?_powf:
   954                           	callstack 0
   955   0000D8                     powf@x:
   956                           	callstack 0
   957                           
   958                           ; 4 bytes @ 0x0
   959   0000D8                     	ds	4
   960   0000DC                     powf@y:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x4
   964   0000DC                     	ds	4
   965   0000E0                     ??_powf:
   966                           
   967                           ; 1 bytes @ 0x8
   968   0000E0                     	ds	9
   969   0000E9                     ??_main:
   970                           
   971                           ; 1 bytes @ 0x11
   972   0000E9                     	ds	2
   973                           
   974                           	psect	cstackCOMRAM
   975   000001                     __pcstackCOMRAM:
   976                           	callstack 0
   977   000001                     i2sendCharSerial4@charToSend:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x0
   981   000001                     	ds	1
   982   000002                     ??_color_click_toggleLED:
   983   000002                     ??_I2C_2_Master_Idle:
   984   000002                     ?_get16bitTMR0val:
   985                           	callstack 0
   986   000002                     ?___wmul:
   987                           	callstack 0
   988   000002                     ?___awdiv:
   989                           	callstack 0
   990   000002                     ?___awmod:
   991                           	callstack 0
   992   000002                     ?___fladd:
   993                           	callstack 0
   994   000002                     ?___flneg:
   995                           	callstack 0
   996   000002                     sendCharSerial4@charToSend:
   997                           	callstack 0
   998   000002                     initDCmotorsPWM@PWMperiod:
   999                           	callstack 0
  1000   000002                     ___wmul@multiplier:
  1001                           	callstack 0
  1002   000002                     ___awdiv@dividend:
  1003                           	callstack 0
  1004   000002                     ___awmod@dividend:
  1005                           	callstack 0
  1006   000002                     fputc@c:
  1007                           	callstack 0
  1008   000002                     ___flneg@f1:
  1009                           	callstack 0
  1010   000002                     ___fladd@b:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x1
  1014   000002                     	ds	1
  1015   000003                     ??_I2C_2_Master_Read:
  1016   000003                     I2C_2_Master_Write@data_byte:
  1017                           	callstack 0
  1018   000003                     sendStringSerial4@string:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x2
  1022   000003                     	ds	1
  1023   000004                     ??_get16bitTMR0val:
  1024   000004                     color_writetoaddr@value:
  1025                           	callstack 0
  1026   000004                     I2C_2_Master_Read@ack:
  1027                           	callstack 0
  1028   000004                     fputc@fp:
  1029                           	callstack 0
  1030   000004                     ___wmul@multiplicand:
  1031                           	callstack 0
  1032   000004                     ___awdiv@divisor:
  1033                           	callstack 0
  1034   000004                     ___awmod@divisor:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x3
  1038   000004                     	ds	1
  1039   000005                     ??_fputc:
  1040   000005                     color_writetoaddr@address:
  1041                           	callstack 0
  1042   000005                     I2C_2_Master_Read@tmp:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x4
  1046   000005                     	ds	1
  1047   000006                     ??_color_click_init:
  1048   000006                     ?_color_read_Red:
  1049                           	callstack 0
  1050   000006                     ?_color_read_Green:
  1051                           	callstack 0
  1052   000006                     ?_color_read_Blue:
  1053                           	callstack 0
  1054   000006                     ?_color_read_Clear:
  1055                           	callstack 0
  1056   000006                     ___awdiv@counter:
  1057                           	callstack 0
  1058   000006                     ___awmod@counter:
  1059                           	callstack 0
  1060   000006                     get16bitTMR0val@timer_val:
  1061                           	callstack 0
  1062   000006                     ___wmul@product:
  1063                           	callstack 0
  1064   000006                     ___fladd@a:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x5
  1068   000006                     	ds	1
  1069   000007                     ___awdiv@sign:
  1070                           	callstack 0
  1071   000007                     ___awmod@sign:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x6
  1075   000007                     	ds	1
  1076   000008                     ??_color_read_Red:
  1077   000008                     ??_color_read_Green:
  1078   000008                     ??_color_read_Blue:
  1079   000008                     ??_color_read_Clear:
  1080   000008                     ?_abs:
  1081                           	callstack 0
  1082   000008                     ?___lwdiv:
  1083                           	callstack 0
  1084   000008                     ___awdiv@quotient:
  1085                           	callstack 0
  1086   000008                     ___lwdiv@dividend:
  1087                           	callstack 0
  1088   000008                     abs@a:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x7
  1092   000008                     	ds	2
  1093   00000A                     ??___fladd:
  1094   00000A                     ??_abs:
  1095   00000A                     ___lwdiv@divisor:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x9
  1099   00000A                     	ds	1
  1100   00000B                     color_read_Clear@tmp:
  1101                           	callstack 0
  1102   00000B                     color_read_Red@tmp:
  1103                           	callstack 0
  1104   00000B                     color_read_Green@tmp:
  1105                           	callstack 0
  1106   00000B                     color_read_Blue@tmp:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0xA
  1110   00000B                     	ds	1
  1111   00000C                     vfpfcnvrt@fp:
  1112                           	callstack 0
  1113   00000C                     ___lwdiv@quotient:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0xB
  1117   00000C                     	ds	1
  1118   00000D                     ?___xxtofl:
  1119                           	callstack 0
  1120   00000D                     vfpfcnvrt@fmt:
  1121                           	callstack 0
  1122   00000D                     color_read@p:
  1123                           	callstack 0
  1124   00000D                     ___xxtofl@val:
  1125                           	callstack 0
  1126                           
  1127                           ; 4 bytes @ 0xC
  1128   00000D                     	ds	1
  1129   00000E                     ___lwdiv@counter:
  1130                           	callstack 0
  1131   00000E                     ___fladd@signs:
  1132                           	callstack 0
  1133   00000E                     vfpfcnvrt@ap:
  1134                           	callstack 0
  1135                           
  1136                           ; 1 bytes @ 0xD
  1137   00000E                     	ds	1
  1138   00000F                     ??_vfpfcnvrt:
  1139   00000F                     ___fladd@aexp:
  1140                           	callstack 0
  1141   00000F                     setMotorPWM@m:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0xE
  1145   00000F                     	ds	1
  1146   000010                     ___fladd@bexp:
  1147                           	callstack 0
  1148   000010                     vfpfcnvrt@done:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0xF
  1152   000010                     	ds	1
  1153   000011                     ??_setMotorPWM:
  1154   000011                     ??___xxtofl:
  1155   000011                     ___fladd@grs:
  1156                           	callstack 0
  1157   000011                     vfpfcnvrt@cp:
  1158                           	callstack 0
  1159                           
  1160                           ; 1 bytes @ 0x10
  1161   000011                     	ds	1
  1162   000012                     ?_sqrtf:
  1163                           	callstack 0
  1164   000012                     ?___flmul:
  1165                           	callstack 0
  1166   000012                     ___flmul@b:
  1167                           	callstack 0
  1168   000012                     vfpfcnvrt@convarg:
  1169                           	callstack 0
  1170   000012                     sqrtf@x:
  1171                           	callstack 0
  1172                           
  1173                           ; 4 bytes @ 0x11
  1174   000012                     	ds	1
  1175   000013                     setMotorPWM@posDuty:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x12
  1179   000013                     	ds	1
  1180   000014                     setMotorPWM@negDuty:
  1181                           	callstack 0
  1182                           
  1183                           ; 1 bytes @ 0x13
  1184   000014                     	ds	1
  1185   000015                     ___xxtofl@sign:
  1186                           	callstack 0
  1187   000015                     fullSpeedAhead@mL:
  1188                           	callstack 0
  1189   000015                     stop@mL:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x14
  1193   000015                     	ds	1
  1194   000016                     ??_sqrtf:
  1195   000016                     ___xxtofl@exp:
  1196                           	callstack 0
  1197   000016                     vfpfcnvrt@c:
  1198                           	callstack 0
  1199   000016                     ___flmul@a:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x15
  1203   000016                     	ds	1
  1204   000017                     ?_vfprintf:
  1205                           	callstack 0
  1206   000017                     vfprintf@fp:
  1207                           	callstack 0
  1208   000017                     fullSpeedAhead@mR:
  1209                           	callstack 0
  1210   000017                     stop@mR:
  1211                           	callstack 0
  1212   000017                     ___xxtofl@arg:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x16
  1216   000017                     	ds	1
  1217   000018                     vfprintf@fmt:
  1218                           	callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x17
  1221   000018                     	ds	1
  1222   000019                     ??_fullSpeedAhead:
  1223   000019                     vfprintf@ap:
  1224                           	callstack 0
  1225   000019                     turn_left_90@mL:
  1226                           	callstack 0
  1227   000019                     turn_right_90@mL:
  1228                           	callstack 0
  1229   000019                     turn_left_135@mL:
  1230                           	callstack 0
  1231   000019                     turn_right_135@mL:
  1232                           	callstack 0
  1233   000019                     reverse_after_read@mL:
  1234                           	callstack 0
  1235   000019                     reverse_one_square@mL:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x18
  1239   000019                     	ds	1
  1240   00001A                     ??___flmul:
  1241   00001A                     vfprintf@cfmt:
  1242                           	callstack 0
  1243                           
  1244                           ; 1 bytes @ 0x19
  1245   00001A                     	ds	1
  1246   00001B                     ?_sprintf:
  1247                           	callstack 0
  1248   00001B                     turn_left_90@mR:
  1249                           	callstack 0
  1250   00001B                     turn_right_90@mR:
  1251                           	callstack 0
  1252   00001B                     turn_left_135@mR:
  1253                           	callstack 0
  1254   00001B                     turn_right_135@mR:
  1255                           	callstack 0
  1256   00001B                     reverse_after_read@mR:
  1257                           	callstack 0
  1258   00001B                     reverse_one_square@mR:
  1259                           	callstack 0
  1260   00001B                     sprintf@s:
  1261                           	callstack 0
  1262   00001B                     sqrtf@s:
  1263                           	callstack 0
  1264                           
  1265                           ; 4 bytes @ 0x1A
  1266   00001B                     	ds	2
  1267   00001D                     ??_turn_left_90:
  1268   00001D                     ??_turn_right_90:
  1269   00001D                     ??_turn_left_135:
  1270   00001D                     ??_turn_right_135:
  1271   00001D                     ??_reverse_after_read:
  1272   00001D                     ??_reverse_one_square:
  1273   00001D                     sprintf@fmt:
  1274                           	callstack 0
  1275                           
  1276                           ; 1 bytes @ 0x1C
  1277   00001D                     	ds	1
  1278   00001E                     ___flmul@sign:
  1279                           	callstack 0
  1280                           
  1281                           ; 1 bytes @ 0x1D
  1282   00001E                     	ds	1
  1283   00001F                     ___flmul@grs:
  1284                           	callstack 0
  1285   00001F                     sqrtf@i:
  1286                           	callstack 0
  1287                           
  1288                           ; 4 bytes @ 0x1E
  1289   00001F                     	ds	3
  1290   000022                     sprintf@ap:
  1291                           	callstack 0
  1292                           
  1293                           ; 1 bytes @ 0x21
  1294   000022                     	ds	1
  1295   000023                     ___flmul@aexp:
  1296                           	callstack 0
  1297   000023                     sqrtf@q:
  1298                           	callstack 0
  1299   000023                     sprintf@f:
  1300                           	callstack 0
  1301                           
  1302                           ; 12 bytes @ 0x22
  1303   000023                     	ds	1
  1304   000024                     ___flmul@bexp:
  1305                           	callstack 0
  1306                           
  1307                           ; 1 bytes @ 0x23
  1308   000024                     	ds	1
  1309   000025                     ___flmul@prod:
  1310                           	callstack 0
  1311                           
  1312                           ; 4 bytes @ 0x24
  1313   000025                     	ds	2
  1314   000027                     sqrtf@t:
  1315                           	callstack 0
  1316                           
  1317                           ; 4 bytes @ 0x26
  1318   000027                     	ds	2
  1319   000029                     ___flmul@temp:
  1320                           	callstack 0
  1321                           
  1322                           ; 2 bytes @ 0x28
  1323   000029                     	ds	2
  1324   00002B                     ?___fldiv:
  1325                           	callstack 0
  1326   00002B                     ?_scalbnf:
  1327                           	callstack 0
  1328   00002B                     ___fldiv@b:
  1329                           	callstack 0
  1330   00002B                     scalbnf@x:
  1331                           	callstack 0
  1332   00002B                     sqrtf@m:
  1333                           	callstack 0
  1334                           
  1335                           ; 4 bytes @ 0x2A
  1336   00002B                     	ds	4
  1337   00002F                     scalbnf@n:
  1338                           	callstack 0
  1339   00002F                     ___fldiv@a:
  1340                           	callstack 0
  1341   00002F                     sqrtf@r:
  1342                           	callstack 0
  1343                           
  1344                           ; 4 bytes @ 0x2E
  1345   00002F                     	ds	2
  1346   000031                     ??_scalbnf:
  1347                           
  1348                           ; 1 bytes @ 0x30
  1349   000031                     	ds	2
  1350   000033                     ??___fldiv:
  1351   000033                     sqrtf@ix:
  1352                           	callstack 0
  1353                           
  1354                           ; 4 bytes @ 0x32
  1355   000033                     	ds	2
  1356   000035                     scalbnf@u:
  1357                           	callstack 0
  1358                           
  1359                           ; 4 bytes @ 0x34
  1360   000035                     	ds	2
  1361   000037                     ___fldiv@rem:
  1362                           	callstack 0
  1363                           
  1364                           ; 4 bytes @ 0x36
  1365   000037                     	ds	2
  1366   000039                     scalbnf@y:
  1367                           	callstack 0
  1368                           
  1369                           ; 4 bytes @ 0x38
  1370   000039                     	ds	2
  1371   00003B                     ___fldiv@sign:
  1372                           	callstack 0
  1373                           
  1374                           ; 1 bytes @ 0x3A
  1375   00003B                     	ds	1
  1376   00003C                     ___fldiv@new_exp:
  1377                           	callstack 0
  1378                           
  1379                           ; 2 bytes @ 0x3B
  1380   00003C                     	ds	2
  1381   00003E                     ___fldiv@grs:
  1382                           	callstack 0
  1383                           
  1384                           ; 4 bytes @ 0x3D
  1385   00003E                     	ds	4
  1386   000042                     ___fldiv@bexp:
  1387                           	callstack 0
  1388                           
  1389                           ; 1 bytes @ 0x41
  1390   000042                     	ds	1
  1391   000043                     ___fldiv@aexp:
  1392                           	callstack 0
  1393                           
  1394                           ; 1 bytes @ 0x42
  1395   000043                     	ds	1
  1396   000044                     ?___flsub:
  1397                           	callstack 0
  1398   000044                     ___flsub@b:
  1399                           	callstack 0
  1400                           
  1401                           ; 4 bytes @ 0x43
  1402   000044                     	ds	4
  1403   000048                     ___flsub@a:
  1404                           	callstack 0
  1405                           
  1406                           ; 4 bytes @ 0x47
  1407   000048                     	ds	4
  1408   00004C                     ___flge@ff1:
  1409                           	callstack 0
  1410                           
  1411                           ; 4 bytes @ 0x4B
  1412   00004C                     	ds	4
  1413   000050                     ___flge@ff2:
  1414                           	callstack 0
  1415                           
  1416                           ; 4 bytes @ 0x4F
  1417   000050                     	ds	4
  1418   000054                     ??___flge:
  1419                           
  1420                           ; 1 bytes @ 0x53
  1421   000054                     	ds	4
  1422   000058                     ??_decide_action:
  1423                           
  1424                           ; 1 bytes @ 0x57
  1425   000058                     	ds	2
  1426                           
  1427 ;;
  1428 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1429 ;;
  1430 ;; *************** function _main *****************
  1431 ;; Defined at:
  1432 ;;		line 23 in file "main.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  timings        40  100[BANK3 ] unsigned int [20]
  1437 ;;  actions        40    0[BANK3 ] int [20]
  1438 ;;  red_val        20  140[BANK3 ] unsigned char [20]
  1439 ;;  blue_val       20   80[BANK3 ] unsigned char [20]
  1440 ;;  green_val      20   60[BANK3 ] unsigned char [20]
  1441 ;;  clear_val      20   40[BANK3 ] unsigned char [20]
  1442 ;;  motorR          9  194[BANK3 ] struct DC_motor
  1443 ;;  motorL          9  185[BANK3 ] struct DC_motor
  1444 ;;  RGBC            8  176[BANK3 ] struct RGBC_val
  1445 ;;  pmR             2  205[BANK3 ] PTR struct DC_motor
  1446 ;;		 -> main@motorR(9), 
  1447 ;;  pmL             2  203[BANK3 ] PTR struct DC_motor
  1448 ;;		 -> main@motorL(9), 
  1449 ;;  action_to_do    2    0        int 
  1450 ;;  actions_comp    2  174[BANK3 ] int 
  1451 ;;  measured_tim    2  172[BANK3 ] unsigned int 
  1452 ;;  lum             2  170[BANK3 ] unsigned int 
  1453 ;;  pred_val        2  168[BANK3 ] PTR unsigned char 
  1454 ;;		 -> main@red_val(20), 
  1455 ;;  upcoming_act    2    0        int 
  1456 ;;  pgreen_val      2  166[BANK3 ] PTR unsigned char 
  1457 ;;		 -> main@green_val(20), 
  1458 ;;  pblue_val       2  164[BANK3 ] PTR unsigned char 
  1459 ;;		 -> main@blue_val(20), 
  1460 ;;  pclear_val      2  162[BANK3 ] PTR unsigned char 
  1461 ;;		 -> main@clear_val(20), 
  1462 ;;  PWMcycle        2    0        unsigned int 
  1463 ;;  pRGBC           2    0        PTR struct RGBC_val
  1464 ;;		 -> main@RGBC(8), 
  1465 ;;  previously_m    2    0        unsigned int 
  1466 ;;  going_forwar    1  184[BANK3 ] _Bool 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1477 ;;      Locals:         0       0       0       0     207       0       0       0       0       0       0       0       
      +0       0       0
  1478 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1479 ;;      Totals:         0       2       0       0     207       0       0       0       0       0       0       0       
      +0       0       0
  1480 ;;Total ram usage:      209 bytes
  1481 ;; Hardware stack levels required when called: 8
  1482 ;; This function calls:
  1483 ;;		_I2C_2_Master_Init
  1484 ;;		_Interrupts_init
  1485 ;;		_Timer0_init
  1486 ;;		_color_click_init
  1487 ;;		_color_click_toggleLED
  1488 ;;		_color_read
  1489 ;;		_color_read_Blue
  1490 ;;		_color_read_Clear
  1491 ;;		_color_read_Green
  1492 ;;		_color_read_Red
  1493 ;;		_color_writetoaddr
  1494 ;;		_decide_action
  1495 ;;		_fullSpeedAhead
  1496 ;;		_get16bitTMR0val
  1497 ;;		_initDCmotorsPWM
  1498 ;;		_initUSART4
  1499 ;;		_resetTimer0
  1500 ;;		_reverse_after_read
  1501 ;;		_reverse_one_square
  1502 ;;		_sendStringSerial4
  1503 ;;		_sprintf
  1504 ;;		_stop
  1505 ;;		_turn_left_135
  1506 ;;		_turn_left_90
  1507 ;;		_turn_right_135
  1508 ;;		_turn_right_90
  1509 ;; This function is called by:
  1510 ;;		Startup code after reset
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text0
  1515   0057E6                     __ptext0:
  1516                           	callstack 0
  1517   0057E6                     _main:
  1518                           	callstack 23
  1519   0057E6                     
  1520                           ;main.c: 25:     Timer0_init();
  1521   0057E6  ECBC  F038         	call	_Timer0_init	;wreg free
  1522   0057EA                     
  1523                           ;main.c: 26:     Interrupts_init();
  1524   0057EA  EC08  F039         	call	_Interrupts_init	;wreg free
  1525   0057EE                     
  1526                           ;main.c: 27:     I2C_2_Master_Init();
  1527   0057EE  EC5E  F038         	call	_I2C_2_Master_Init	;wreg free
  1528   0057F2                     
  1529                           ;main.c: 28:     color_click_init();
  1530   0057F2  EC6C  F037         	call	_color_click_init	;wreg free
  1531   0057F6                     
  1532                           ;main.c: 29:     initDCmotorsPWM(99);
  1533   0057F6  0E00               	movlw	0
  1534   0057F8  6E03               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1535   0057FA  0E63               	movlw	99
  1536   0057FC  6E02               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1537   0057FE  EC92  F035         	call	_initDCmotorsPWM	;wreg free
  1538   005802                     
  1539                           ;main.c: 30:     initUSART4();
  1540   005802  ECCC  F038         	call	_initUSART4	;wreg free
  1541   005806                     
  1542                           ;main.c: 33:     color_click_toggleLED();
  1543   005806  EC6A  F036         	call	_color_click_toggleLED	;wreg free
  1544   00580A                     
  1545                           ;main.c: 36:     LATHbits.LATH3=1;
  1546   00580A  8680               	bsf	128,3,c	;volatile
  1547   00580C                     
  1548                           ;main.c: 37:     TRISHbits.TRISH3=0;
  1549   00580C  9688               	bcf	136,3,c	;volatile
  1550   00580E                     
  1551                           ;main.c: 40:     TRISFbits.TRISF2=1;
  1552   00580E  8486               	bsf	134,2,c	;volatile
  1553   005810                     
  1554                           ;main.c: 41:     ANSELFbits.ANSELF2=0;
  1555   005810  010E               	movlb	14	; () banked
  1556   005812  95B4               	bcf	180,2,b	;volatile
  1557   005814                     
  1558                           ; BSR set to: 14
  1559                           ;main.c: 49:     motorL.power=0;
  1560   005814  0E00               	movlw	0
  1561   005816  0103               	movlb	3	; () banked
  1562   005818  6FB9               	movwf	main@motorL& (0+255),b
  1563   00581A                     
  1564                           ; BSR set to: 3
  1565                           ;main.c: 50:     motorL.direction=1;
  1566   00581A  0E01               	movlw	1
  1567   00581C  6FBA               	movwf	(main@motorL+1)& (0+255),b
  1568   00581E                     
  1569                           ; BSR set to: 3
  1570                           ;main.c: 51:     motorL.brakemode=1;
  1571   00581E  0E01               	movlw	1
  1572   005820  6FBB               	movwf	(main@motorL+2)& (0+255),b
  1573   005822                     
  1574                           ; BSR set to: 3
  1575                           ;main.c: 52:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1576   005822  0EAA               	movlw	170
  1577   005824  6FBE               	movwf	(main@motorL+5)& (0+255),b
  1578   005826  0E0F               	movlw	15
  1579   005828  6FBF               	movwf	(main@motorL+6)& (0+255),b
  1580   00582A                     
  1581                           ; BSR set to: 3
  1582                           ;main.c: 53:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1583   00582A  0EA6               	movlw	166
  1584   00582C  6FC0               	movwf	(main@motorL+7)& (0+255),b
  1585   00582E  0E0F               	movlw	15
  1586   005830  6FC1               	movwf	(main@motorL+8)& (0+255),b
  1587   005832                     
  1588                           ; BSR set to: 3
  1589                           ;main.c: 54:     motorL.PWMperiod=PWMcycle;
  1590   005832  0E00               	movlw	0
  1591   005834  6FBD               	movwf	(main@motorL+4)& (0+255),b
  1592   005836  0E63               	movlw	99
  1593   005838  6FBC               	movwf	(main@motorL+3)& (0+255),b
  1594   00583A                     
  1595                           ; BSR set to: 3
  1596                           ;main.c: 56:     motorR.power=0;
  1597   00583A  0E00               	movlw	0
  1598   00583C  6FC2               	movwf	main@motorR& (0+255),b
  1599   00583E                     
  1600                           ; BSR set to: 3
  1601                           ;main.c: 57:     motorR.direction=1;
  1602   00583E  0E01               	movlw	1
  1603   005840  6FC3               	movwf	(main@motorR+1)& (0+255),b
  1604   005842                     
  1605                           ; BSR set to: 3
  1606                           ;main.c: 58:     motorR.brakemode=1;
  1607   005842  0E01               	movlw	1
  1608   005844  6FC4               	movwf	(main@motorR+2)& (0+255),b
  1609   005846                     
  1610                           ; BSR set to: 3
  1611                           ;main.c: 59:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1612   005846  0E25               	movlw	37
  1613   005848  6FC7               	movwf	(main@motorR+5)& (0+255),b
  1614   00584A  0E0F               	movlw	15
  1615   00584C  6FC8               	movwf	(main@motorR+6)& (0+255),b
  1616   00584E                     
  1617                           ; BSR set to: 3
  1618                           ;main.c: 60:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1619   00584E  0E21               	movlw	33
  1620   005850  6FC9               	movwf	(main@motorR+7)& (0+255),b
  1621   005852  0E0F               	movlw	15
  1622   005854  6FCA               	movwf	(main@motorR+8)& (0+255),b
  1623   005856                     
  1624                           ; BSR set to: 3
  1625                           ;main.c: 61:     motorR.PWMperiod=PWMcycle;
  1626   005856  0E00               	movlw	0
  1627   005858  6FC6               	movwf	(main@motorR+4)& (0+255),b
  1628   00585A  0E63               	movlw	99
  1629   00585C  6FC5               	movwf	(main@motorR+3)& (0+255),b
  1630   00585E                     
  1631                           ; BSR set to: 3
  1632                           ;main.c: 64:     struct DC_motor *pmL= &motorL;
  1633   00585E  0EB9               	movlw	low main@motorL
  1634   005860  6FCB               	movwf	main@pmL& (0+255),b
  1635   005862  0E03               	movlw	high main@motorL
  1636   005864  6FCC               	movwf	(main@pmL+1)& (0+255),b
  1637   005866                     
  1638                           ; BSR set to: 3
  1639                           ;main.c: 65:     struct DC_motor *pmR= &motorR;
  1640   005866  0EC2               	movlw	low main@motorR
  1641   005868  6FCD               	movwf	main@pmR& (0+255),b
  1642   00586A  0E03               	movlw	high main@motorR
  1643   00586C  6FCE               	movwf	(main@pmR+1)& (0+255),b
  1644   00586E                     
  1645                           ; BSR set to: 3
  1646                           ;main.c: 68:     struct RGBC_val RGBC;;main.c: 69:     RGBC.R = 0;
  1647   00586E  0E00               	movlw	0
  1648   005870  6FB1               	movwf	(main@RGBC+1)& (0+255),b
  1649   005872  0E00               	movlw	0
  1650   005874  6FB0               	movwf	main@RGBC& (0+255),b
  1651   005876                     
  1652                           ; BSR set to: 3
  1653                           ;main.c: 70:     RGBC.B = 0;
  1654   005876  0E00               	movlw	0
  1655   005878  6FB5               	movwf	(main@RGBC+5)& (0+255),b
  1656   00587A  0E00               	movlw	0
  1657   00587C  6FB4               	movwf	(main@RGBC+4)& (0+255),b
  1658   00587E                     
  1659                           ; BSR set to: 3
  1660                           ;main.c: 71:     RGBC.G = 0;
  1661   00587E  0E00               	movlw	0
  1662   005880  6FB3               	movwf	(main@RGBC+3)& (0+255),b
  1663   005882  0E00               	movlw	0
  1664   005884  6FB2               	movwf	(main@RGBC+2)& (0+255),b
  1665   005886                     
  1666                           ; BSR set to: 3
  1667                           ;main.c: 72:     RGBC.C = 0;
  1668   005886  0E00               	movlw	0
  1669   005888  6FB7               	movwf	(main@RGBC+7)& (0+255),b
  1670   00588A  0E00               	movlw	0
  1671   00588C  6FB6               	movwf	(main@RGBC+6)& (0+255),b
  1672   00588E                     
  1673                           ; BSR set to: 3
  1674                           ;main.c: 78:     char clear_val[20];;main.c: 79:     char red_val[20];;main.c: 80:     c
      +                          har green_val[20];;main.c: 81:     char blue_val[20];;main.c: 82:     char *pclear_val;;
      +                          main.c: 83:     char *pred_val;;main.c: 84:     char *pblue_val;;main.c: 85:     char *p
      +                          green_val;;main.c: 86:     pclear_val = &clear_val[0];
  1675   00588E  0E28               	movlw	low main@clear_val
  1676   005890  6FA2               	movwf	main@pclear_val& (0+255),b
  1677   005892  0E03               	movlw	high main@clear_val
  1678   005894  6FA3               	movwf	(main@pclear_val+1)& (0+255),b
  1679   005896                     
  1680                           ; BSR set to: 3
  1681                           ;main.c: 87:     pred_val = &red_val[0];
  1682   005896  0E8C               	movlw	low main@red_val
  1683   005898  6FA8               	movwf	main@pred_val& (0+255),b
  1684   00589A  0E03               	movlw	high main@red_val
  1685   00589C  6FA9               	movwf	(main@pred_val+1)& (0+255),b
  1686   00589E                     
  1687                           ; BSR set to: 3
  1688                           ;main.c: 88:     pgreen_val = &green_val[0];
  1689   00589E  0E3C               	movlw	low main@green_val
  1690   0058A0  6FA6               	movwf	main@pgreen_val& (0+255),b
  1691   0058A2  0E03               	movlw	high main@green_val
  1692   0058A4  6FA7               	movwf	(main@pgreen_val+1)& (0+255),b
  1693   0058A6                     
  1694                           ; BSR set to: 3
  1695                           ;main.c: 89:     pblue_val = &blue_val[0];
  1696   0058A6  0E50               	movlw	low main@blue_val
  1697   0058A8  6FA4               	movwf	main@pblue_val& (0+255),b
  1698   0058AA  0E03               	movlw	high main@blue_val
  1699   0058AC  6FA5               	movwf	(main@pblue_val+1)& (0+255),b
  1700   0058AE                     
  1701                           ; BSR set to: 3
  1702                           ;main.c: 91:     unsigned int lum;;main.c: 92:     _Bool going_forward = 0;
  1703   0058AE  0E00               	movlw	0
  1704   0058B0  6FB8               	movwf	main@going_forward& (0+255),b
  1705   0058B2                     
  1706                           ; BSR set to: 3
  1707                           ;main.c: 93:     unsigned int previously_measured_time, measured_time;;main.c: 94:     i
      +                          nt action_to_do;;main.c: 95:     unsigned int timings[20];;main.c: 96:     int actions[2
      +                          0];;main.c: 97:     int actions_completed = 0;
  1708   0058B2  0E00               	movlw	0
  1709   0058B4  6FAF               	movwf	(main@actions_completed+1)& (0+255),b
  1710   0058B6  0E00               	movlw	0
  1711   0058B8  6FAE               	movwf	main@actions_completed& (0+255),b
  1712   0058BA                     l7766:
  1713                           
  1714                           ;main.c: 134:         if(!going_forward){
  1715   0058BA  0103               	movlb	3	; () banked
  1716   0058BC  51B8               	movf	main@going_forward& (0+255),w,b
  1717   0058BE  A4D8               	btfss	status,2,c
  1718   0058C0  EF64  F02C         	goto	u6701
  1719   0058C4  EF66  F02C         	goto	u6700
  1720   0058C8                     u6701:
  1721   0058C8  EF75  F02C         	goto	l7774
  1722   0058CC                     u6700:
  1723   0058CC                     
  1724                           ; BSR set to: 3
  1725                           ;main.c: 137:             resetTimer0();
  1726   0058CC  EC0E  F039         	call	_resetTimer0	;wreg free
  1727   0058D0                     
  1728                           ;main.c: 138:             fullSpeedAhead(pmL, pmR);
  1729   0058D0  C3CB  F015         	movff	main@pmL,fullSpeedAhead@mL
  1730   0058D4  C3CC  F016         	movff	main@pmL+1,fullSpeedAhead@mL+1
  1731   0058D8  C3CD  F017         	movff	main@pmR,fullSpeedAhead@mR
  1732   0058DC  C3CE  F018         	movff	main@pmR+1,fullSpeedAhead@mR+1
  1733   0058E0  EC7E  F034         	call	_fullSpeedAhead	;wreg free
  1734   0058E4                     
  1735                           ;main.c: 139:             going_forward = 1;
  1736   0058E4  0E01               	movlw	1
  1737   0058E6  0103               	movlb	3	; () banked
  1738   0058E8  6FB8               	movwf	main@going_forward& (0+255),b
  1739   0058EA                     l7774:
  1740                           
  1741                           ; BSR set to: 3
  1742                           ;main.c: 142:         lum = color_read_Clear();
  1743   0058EA  EC1C  F037         	call	_color_read_Clear	;wreg free
  1744   0058EE  C006  F3AA         	movff	?_color_read_Clear,main@lum
  1745   0058F2  C007  F3AB         	movff	?_color_read_Clear+1,main@lum+1
  1746   0058F6                     
  1747                           ;main.c: 144:         if (lum > 30){
  1748   0058F6  0103               	movlb	3	; () banked
  1749   0058F8  51AB               	movf	(main@lum+1)& (0+255),w,b
  1750   0058FA  E109               	bnz	u6710
  1751   0058FC  0E1F               	movlw	31
  1752   0058FE  5DAA               	subwf	main@lum& (0+255),w,b
  1753   005900  A0D8               	btfss	status,0,c
  1754   005902  EF85  F02C         	goto	u6711
  1755   005906  EF87  F02C         	goto	u6710
  1756   00590A                     u6711:
  1757   00590A  EF5D  F02C         	goto	l7766
  1758   00590E                     u6710:
  1759   00590E                     
  1760                           ; BSR set to: 3
  1761                           ;main.c: 146:             measured_time = get16bitTMR0val();
  1762   00590E  ECDB  F038         	call	_get16bitTMR0val	;wreg free
  1763   005912  C002  F3AC         	movff	?_get16bitTMR0val,main@measured_time
  1764   005916  C003  F3AD         	movff	?_get16bitTMR0val+1,main@measured_time+1
  1765   00591A                     
  1766                           ;main.c: 147:             stop(pmL, pmR);
  1767   00591A  C3CB  F015         	movff	main@pmL,stop@mL
  1768   00591E  C3CC  F016         	movff	main@pmL+1,stop@mL+1
  1769   005922  C3CD  F017         	movff	main@pmR,stop@mR
  1770   005926  C3CE  F018         	movff	main@pmR+1,stop@mR+1
  1771   00592A  ECE3  F035         	call	_stop	;wreg free
  1772   00592E                     
  1773                           ;main.c: 149:             going_forward = 0;
  1774   00592E  0E00               	movlw	0
  1775   005930  0103               	movlb	3	; () banked
  1776   005932  6FB8               	movwf	main@going_forward& (0+255),b
  1777   005934                     
  1778                           ; BSR set to: 3
  1779                           ;main.c: 150:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1780   005934  0E09               	movlw	9
  1781   005936  0100               	movlb	0	; () banked
  1782   005938  6FEA               	movwf	(??_main+1)& (0+255),b
  1783   00593A  0E1E               	movlw	30
  1784   00593C  6FE9               	movwf	??_main& (0+255),b
  1785   00593E  0EE4               	movlw	228
  1786   005940                     u6727:
  1787   005940  2EE8               	decfsz	wreg,f,c
  1788   005942  D7FE               	bra	u6727
  1789   005944  2FE9               	decfsz	??_main& (0+255),f,b
  1790   005946  D7FC               	bra	u6727
  1791   005948  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1792   00594A  D7FA               	bra	u6727
  1793   00594C  0000               	nop	
  1794   00594E                     
  1795                           ;main.c: 152:             sprintf(red_val,"action = %d \r\n",decide_action());
  1796   00594E  EC93  F019         	call	_decide_action	;wreg free
  1797   005952  0100               	movlb	0	; () banked
  1798   005954  6FE9               	movwf	??_main& (0+255),b
  1799   005956  51E9               	movf	??_main& (0+255),w,b
  1800   005958  0103               	movlb	3	; () banked
  1801   00595A  6FA0               	movwf	_main$3106& (0+255),b
  1802   00595C  6BA1               	clrf	(_main$3106+1)& (0+255),b
  1803   00595E                     
  1804                           ; BSR set to: 3
  1805                           ;main.c: 152:             sprintf(red_val,"action = %d \r\n",decide_action());
  1806   00595E  0E8C               	movlw	low main@red_val
  1807   005960  6E1B               	movwf	sprintf@s^0,c
  1808   005962  0E03               	movlw	high main@red_val
  1809   005964  6E1C               	movwf	(sprintf@s+1)^0,c
  1810   005966  0E81               	movlw	low STR_10
  1811   005968  6E1D               	movwf	sprintf@fmt^0,c
  1812   00596A  C3A0  F01E         	movff	_main$3106,?_sprintf+3
  1813   00596E  C3A1  F01F         	movff	_main$3106+1,?_sprintf+4
  1814   005972  ECD5  F037         	call	_sprintf	;wreg free
  1815   005976                     
  1816                           ;main.c: 153:             sendStringSerial4(pred_val);
  1817   005976  C3A8  F003         	movff	main@pred_val,sendStringSerial4@string
  1818   00597A  C3A9  F004         	movff	main@pred_val+1,sendStringSerial4@string+1
  1819   00597E  EC46  F038         	call	_sendStringSerial4	;wreg free
  1820   005982                     
  1821                           ;main.c: 155:             color_writetoaddr(0x01, 0xD5);
  1822   005982  0ED5               	movlw	213
  1823   005984  6E04               	movwf	color_writetoaddr@value^0,c
  1824   005986  0E01               	movlw	1
  1825   005988  ECAC  F038         	call	_color_writetoaddr
  1826   00598C                     
  1827                           ;main.c: 156:             color_writetoaddr(0x03, 0xAB);
  1828   00598C  0EAB               	movlw	171
  1829   00598E  6E04               	movwf	color_writetoaddr@value^0,c
  1830   005990  0E03               	movlw	3
  1831   005992  ECAC  F038         	call	_color_writetoaddr
  1832   005996                     
  1833                           ;main.c: 157:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1834   005996  0E11               	movlw	17
  1835   005998  0100               	movlb	0	; () banked
  1836   00599A  6FEA               	movwf	(??_main+1)& (0+255),b
  1837   00599C  0E3C               	movlw	60
  1838   00599E  6FE9               	movwf	??_main& (0+255),b
  1839   0059A0  0ECB               	movlw	203
  1840   0059A2                     u6737:
  1841   0059A2  2EE8               	decfsz	wreg,f,c
  1842   0059A4  D7FE               	bra	u6737
  1843   0059A6  2FE9               	decfsz	??_main& (0+255),f,b
  1844   0059A8  D7FC               	bra	u6737
  1845   0059AA  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1846   0059AC  D7FA               	bra	u6737
  1847   0059AE                     
  1848                           ;main.c: 158:             sprintf(red_val,"red = %d \r\n",color_read_Red());
  1849   0059AE  0E8C               	movlw	low main@red_val
  1850   0059B0  6E1B               	movwf	sprintf@s^0,c
  1851   0059B2  0E03               	movlw	high main@red_val
  1852   0059B4  6E1C               	movwf	(sprintf@s+1)^0,c
  1853   0059B6  0EC8               	movlw	low STR_1
  1854   0059B8  6E1D               	movwf	sprintf@fmt^0,c
  1855   0059BA  ECCC  F036         	call	_color_read_Red	;wreg free
  1856   0059BE  C006  F01E         	movff	?_color_read_Red,?_sprintf+3
  1857   0059C2  C007  F01F         	movff	?_color_read_Red+1,?_sprintf+4
  1858   0059C6  ECD5  F037         	call	_sprintf	;wreg free
  1859   0059CA                     
  1860                           ;main.c: 159:             sendStringSerial4(pred_val);
  1861   0059CA  C3A8  F003         	movff	main@pred_val,sendStringSerial4@string
  1862   0059CE  C3A9  F004         	movff	main@pred_val+1,sendStringSerial4@string+1
  1863   0059D2  EC46  F038         	call	_sendStringSerial4	;wreg free
  1864   0059D6                     
  1865                           ;main.c: 160:             sprintf(green_val,"green = %d \r\n",color_read_Green());
  1866   0059D6  0E3C               	movlw	low main@green_val
  1867   0059D8  6E1B               	movwf	sprintf@s^0,c
  1868   0059DA  0E03               	movlw	high main@green_val
  1869   0059DC  6E1C               	movwf	(sprintf@s+1)^0,c
  1870   0059DE  0EAD               	movlw	low STR_2
  1871   0059E0  6E1D               	movwf	sprintf@fmt^0,c
  1872   0059E2  ECF4  F036         	call	_color_read_Green	;wreg free
  1873   0059E6  C006  F01E         	movff	?_color_read_Green,?_sprintf+3
  1874   0059EA  C007  F01F         	movff	?_color_read_Green+1,?_sprintf+4
  1875   0059EE  ECD5  F037         	call	_sprintf	;wreg free
  1876   0059F2                     
  1877                           ;main.c: 161:             sendStringSerial4(pgreen_val);
  1878   0059F2  C3A6  F003         	movff	main@pgreen_val,sendStringSerial4@string
  1879   0059F6  C3A7  F004         	movff	main@pgreen_val+1,sendStringSerial4@string+1
  1880   0059FA  EC46  F038         	call	_sendStringSerial4	;wreg free
  1881   0059FE                     
  1882                           ;main.c: 162:             sprintf(blue_val,"blue = %d \r\n",color_read_Blue());
  1883   0059FE  0E50               	movlw	low main@blue_val
  1884   005A00  6E1B               	movwf	sprintf@s^0,c
  1885   005A02  0E03               	movlw	high main@blue_val
  1886   005A04  6E1C               	movwf	(sprintf@s+1)^0,c
  1887   005A06  0EBB               	movlw	low STR_13
  1888   005A08  6E1D               	movwf	sprintf@fmt^0,c
  1889   005A0A  EC44  F037         	call	_color_read_Blue	;wreg free
  1890   005A0E  C006  F01E         	movff	?_color_read_Blue,?_sprintf+3
  1891   005A12  C007  F01F         	movff	?_color_read_Blue+1,?_sprintf+4
  1892   005A16  ECD5  F037         	call	_sprintf	;wreg free
  1893   005A1A                     
  1894                           ;main.c: 163:             sendStringSerial4(pblue_val);
  1895   005A1A  C3A4  F003         	movff	main@pblue_val,sendStringSerial4@string
  1896   005A1E  C3A5  F004         	movff	main@pblue_val+1,sendStringSerial4@string+1
  1897   005A22  EC46  F038         	call	_sendStringSerial4	;wreg free
  1898   005A26                     
  1899                           ;main.c: 164:             sprintf(clear_val,"clear = %d \r\n\r\n",color_read_Clear());
  1900   005A26  0E28               	movlw	low main@clear_val
  1901   005A28  6E1B               	movwf	sprintf@s^0,c
  1902   005A2A  0E03               	movlw	high main@clear_val
  1903   005A2C  6E1C               	movwf	(sprintf@s+1)^0,c
  1904   005A2E  0E71               	movlw	low STR_14
  1905   005A30  6E1D               	movwf	sprintf@fmt^0,c
  1906   005A32  EC1C  F037         	call	_color_read_Clear	;wreg free
  1907   005A36  C006  F01E         	movff	?_color_read_Clear,?_sprintf+3
  1908   005A3A  C007  F01F         	movff	?_color_read_Clear+1,?_sprintf+4
  1909   005A3E  ECD5  F037         	call	_sprintf	;wreg free
  1910   005A42                     
  1911                           ;main.c: 165:             sendStringSerial4(pclear_val);
  1912   005A42  C3A2  F003         	movff	main@pclear_val,sendStringSerial4@string
  1913   005A46  C3A3  F004         	movff	main@pclear_val+1,sendStringSerial4@string+1
  1914   005A4A  EC46  F038         	call	_sendStringSerial4	;wreg free
  1915   005A4E                     
  1916                           ;main.c: 166:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  1917   005A4E  0EF4               	movlw	244
  1918   005A50  0100               	movlb	0	; () banked
  1919   005A52  6FEA               	movwf	(??_main+1)& (0+255),b
  1920   005A54  0E82               	movlw	130
  1921   005A56  6FE9               	movwf	??_main& (0+255),b
  1922   005A58  0E05               	movlw	5
  1923   005A5A                     u6747:
  1924   005A5A  2EE8               	decfsz	wreg,f,c
  1925   005A5C  D7FE               	bra	u6747
  1926   005A5E  2FE9               	decfsz	??_main& (0+255),f,b
  1927   005A60  D7FC               	bra	u6747
  1928   005A62  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1929   005A64  D7FA               	bra	u6747
  1930   005A66                     
  1931                           ;main.c: 167:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  1932   005A66  0EF4               	movlw	244
  1933   005A68  0100               	movlb	0	; () banked
  1934   005A6A  6FEA               	movwf	(??_main+1)& (0+255),b
  1935   005A6C  0E82               	movlw	130
  1936   005A6E  6FE9               	movwf	??_main& (0+255),b
  1937   005A70  0E05               	movlw	5
  1938   005A72                     u6757:
  1939   005A72  2EE8               	decfsz	wreg,f,c
  1940   005A74  D7FE               	bra	u6757
  1941   005A76  2FE9               	decfsz	??_main& (0+255),f,b
  1942   005A78  D7FC               	bra	u6757
  1943   005A7A  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1944   005A7C  D7FA               	bra	u6757
  1945   005A7E                     
  1946                           ;main.c: 168:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  1947   005A7E  0EF4               	movlw	244
  1948   005A80  0100               	movlb	0	; () banked
  1949   005A82  6FEA               	movwf	(??_main+1)& (0+255),b
  1950   005A84  0E82               	movlw	130
  1951   005A86  6FE9               	movwf	??_main& (0+255),b
  1952   005A88  0E05               	movlw	5
  1953   005A8A                     u6767:
  1954   005A8A  2EE8               	decfsz	wreg,f,c
  1955   005A8C  D7FE               	bra	u6767
  1956   005A8E  2FE9               	decfsz	??_main& (0+255),f,b
  1957   005A90  D7FC               	bra	u6767
  1958   005A92  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  1959   005A94  D7FA               	bra	u6767
  1960   005A96                     
  1961                           ;main.c: 171:             color_writetoaddr(0x01, 0xFF);
  1962   005A96  0EFF               	movlw	255
  1963   005A98  6E04               	movwf	color_writetoaddr@value^0,c
  1964   005A9A  0E01               	movlw	1
  1965   005A9C  ECAC  F038         	call	_color_writetoaddr
  1966   005AA0                     
  1967                           ;main.c: 172:             color_writetoaddr(0x03, 0xFF);
  1968   005AA0  0EFF               	movlw	255
  1969   005AA2  6E04               	movwf	color_writetoaddr@value^0,c
  1970   005AA4  0E03               	movlw	3
  1971   005AA6  ECAC  F038         	call	_color_writetoaddr
  1972   005AAA  EF5D  F02C         	goto	l7766
  1973   005AAE  EF12  F000         	goto	start
  1974   005AB2                     __end_of_main:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _turn_right_90 *****************
  1978 ;; Defined at:
  1979 ;;		line 143 in file "dc_motor.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  1982 ;;		 -> main@motorL(9), 
  1983 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  1984 ;;		 -> main@motorR(9), 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;Total ram usage:        6 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 5
  2003 ;; This function calls:
  2004 ;;		_setMotorPWM
  2005 ;;		_stop
  2006 ;; This function is called by:
  2007 ;;		_main
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text1
  2012   0062B4                     __ptext1:
  2013                           	callstack 0
  2014   0062B4                     _turn_right_90:
  2015                           	callstack 25
  2016   0062B4                     
  2017                           ;dc_motor.c: 144:     mL->direction = 1;
  2018   0062B4  EE20 F001          	lfsr	2,1
  2019   0062B8  5019               	movf	turn_right_90@mL^0,w,c
  2020   0062BA  26D9               	addwf	fsr2l,f,c
  2021   0062BC  501A               	movf	(turn_right_90@mL+1)^0,w,c
  2022   0062BE  22DA               	addwfc	fsr2h,f,c
  2023   0062C0  0E01               	movlw	1
  2024   0062C2  6EDF               	movwf	indf2,c
  2025                           
  2026                           ;dc_motor.c: 145:     mR->direction = 0;
  2027   0062C4  EE20 F001          	lfsr	2,1
  2028   0062C8  501B               	movf	turn_right_90@mR^0,w,c
  2029   0062CA  26D9               	addwf	fsr2l,f,c
  2030   0062CC  501C               	movf	(turn_right_90@mR+1)^0,w,c
  2031   0062CE  22DA               	addwfc	fsr2h,f,c
  2032   0062D0  6ADF               	clrf	indf2,c
  2033                           
  2034                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2035   0062D2  EFA1  F031         	goto	l225
  2036   0062D6                     l5382:
  2037                           
  2038                           ;dc_motor.c: 148:         if ((mL->power) < 70) (mL->power) += 1;
  2039   0062D6  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2040   0062DA  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2041   0062DE  0E46               	movlw	70
  2042   0062E0  60DF               	cpfslt	indf2,c
  2043   0062E2  EF75  F031         	goto	u5111
  2044   0062E6  EF77  F031         	goto	u5110
  2045   0062EA                     u5111:
  2046   0062EA  EF7C  F031         	goto	l5386
  2047   0062EE                     u5110:
  2048   0062EE  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2049   0062F2  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2050   0062F6  2ADF               	incf	indf2,f,c
  2051   0062F8                     l5386:
  2052                           
  2053                           ;dc_motor.c: 149:         if ((mR->power) < 70) (mR->power) += 1;
  2054   0062F8  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2055   0062FC  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2056   006300  0E46               	movlw	70
  2057   006302  60DF               	cpfslt	indf2,c
  2058   006304  EF86  F031         	goto	u5121
  2059   006308  EF88  F031         	goto	u5120
  2060   00630C                     u5121:
  2061   00630C  EF8D  F031         	goto	l5390
  2062   006310                     u5120:
  2063   006310  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2064   006314  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2065   006318  2ADF               	incf	indf2,f,c
  2066   00631A                     l5390:
  2067                           
  2068                           ;dc_motor.c: 151:         setMotorPWM(mL);
  2069   00631A  C019  F00F         	movff	turn_right_90@mL,setMotorPWM@m
  2070   00631E  C01A  F010         	movff	turn_right_90@mL+1,setMotorPWM@m+1
  2071   006322  EC22  F030         	call	_setMotorPWM	;wreg free
  2072   006326                     
  2073                           ;dc_motor.c: 152:         setMotorPWM(mR);
  2074   006326  C01B  F00F         	movff	turn_right_90@mR,setMotorPWM@m
  2075   00632A  C01C  F010         	movff	turn_right_90@mR+1,setMotorPWM@m+1
  2076   00632E  EC22  F030         	call	_setMotorPWM	;wreg free
  2077   006332                     
  2078                           ;dc_motor.c: 153:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2079   006332  0E15               	movlw	21
  2080   006334  6E1D               	movwf	??_turn_right_90^0,c
  2081   006336  0EC6               	movlw	198
  2082   006338                     u6777:
  2083   006338  2EE8               	decfsz	wreg,f,c
  2084   00633A  D7FE               	bra	u6777
  2085   00633C  2E1D               	decfsz	??_turn_right_90^0,f,c
  2086   00633E  D7FC               	bra	u6777
  2087   006340  D000               	nop2	
  2088   006342                     l225:
  2089                           
  2090                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2091   006342  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2092   006346  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2093   00634A  0E45               	movlw	69
  2094   00634C  64DF               	cpfsgt	indf2,c
  2095   00634E  EFAB  F031         	goto	u5131
  2096   006352  EFAD  F031         	goto	u5130
  2097   006356                     u5131:
  2098   006356  EF6B  F031         	goto	l5382
  2099   00635A                     u5130:
  2100   00635A  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2101   00635E  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2102   006362  0E45               	movlw	69
  2103   006364  64DF               	cpfsgt	indf2,c
  2104   006366  EFB7  F031         	goto	u5141
  2105   00636A  EFB9  F031         	goto	u5140
  2106   00636E                     u5141:
  2107   00636E  EF6B  F031         	goto	l5382
  2108   006372                     u5140:
  2109   006372                     
  2110                           ;dc_motor.c: 155:     _delay((unsigned long)((225)*(64000000/4000.0)));
  2111   006372  0E13               	movlw	19
  2112   006374  6E1E               	movwf	(??_turn_right_90+1)^0,c
  2113   006376  0E44               	movlw	68
  2114   006378  6E1D               	movwf	??_turn_right_90^0,c
  2115   00637A  0E44               	movlw	68
  2116   00637C                     u6787:
  2117   00637C  2EE8               	decfsz	wreg,f,c
  2118   00637E  D7FE               	bra	u6787
  2119   006380  2E1D               	decfsz	??_turn_right_90^0,f,c
  2120   006382  D7FC               	bra	u6787
  2121   006384  2E1E               	decfsz	(??_turn_right_90+1)^0,f,c
  2122   006386  D7FA               	bra	u6787
  2123   006388  D000               	nop2	
  2124   00638A                     
  2125                           ;dc_motor.c: 156:     stop(mL, mR);
  2126   00638A  C019  F015         	movff	turn_right_90@mL,stop@mL
  2127   00638E  C01A  F016         	movff	turn_right_90@mL+1,stop@mL+1
  2128   006392  C01B  F017         	movff	turn_right_90@mR,stop@mR
  2129   006396  C01C  F018         	movff	turn_right_90@mR+1,stop@mR+1
  2130   00639A  ECE3  F035         	call	_stop	;wreg free
  2131   00639E  0012               	return		;funcret
  2132   0063A0                     __end_of_turn_right_90:
  2133                           	callstack 0
  2134                           
  2135 ;; *************** function _turn_right_135 *****************
  2136 ;; Defined at:
  2137 ;;		line 177 in file "dc_motor.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2140 ;;		 -> main@motorL(9), 
  2141 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2142 ;;		 -> main@motorR(9), 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;		None
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      void 
  2147 ;; Registers used:
  2148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2157 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2158 ;;Total ram usage:        6 bytes
  2159 ;; Hardware stack levels used: 1
  2160 ;; Hardware stack levels required when called: 5
  2161 ;; This function calls:
  2162 ;;		_setMotorPWM
  2163 ;;		_stop
  2164 ;; This function is called by:
  2165 ;;		_main
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           	psect	text2
  2170   0063A0                     __ptext2:
  2171                           	callstack 0
  2172   0063A0                     _turn_right_135:
  2173                           	callstack 25
  2174   0063A0                     
  2175                           ;dc_motor.c: 178:     mL->direction = 1;
  2176   0063A0  EE20 F001          	lfsr	2,1
  2177   0063A4  5019               	movf	turn_right_135@mL^0,w,c
  2178   0063A6  26D9               	addwf	fsr2l,f,c
  2179   0063A8  501A               	movf	(turn_right_135@mL+1)^0,w,c
  2180   0063AA  22DA               	addwfc	fsr2h,f,c
  2181   0063AC  0E01               	movlw	1
  2182   0063AE  6EDF               	movwf	indf2,c
  2183                           
  2184                           ;dc_motor.c: 179:     mR->direction = 0;
  2185   0063B0  EE20 F001          	lfsr	2,1
  2186   0063B4  501B               	movf	turn_right_135@mR^0,w,c
  2187   0063B6  26D9               	addwf	fsr2l,f,c
  2188   0063B8  501C               	movf	(turn_right_135@mR+1)^0,w,c
  2189   0063BA  22DA               	addwfc	fsr2h,f,c
  2190   0063BC  6ADF               	clrf	indf2,c
  2191                           
  2192                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2193   0063BE  EF17  F032         	goto	l241
  2194   0063C2                     l5426:
  2195                           
  2196                           ;dc_motor.c: 182:         if ((mL->power) < 70) (mL->power) += 1;
  2197   0063C2  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2198   0063C6  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2199   0063CA  0E46               	movlw	70
  2200   0063CC  60DF               	cpfslt	indf2,c
  2201   0063CE  EFEB  F031         	goto	u5191
  2202   0063D2  EFED  F031         	goto	u5190
  2203   0063D6                     u5191:
  2204   0063D6  EFF2  F031         	goto	l5430
  2205   0063DA                     u5190:
  2206   0063DA  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2207   0063DE  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2208   0063E2  2ADF               	incf	indf2,f,c
  2209   0063E4                     l5430:
  2210                           
  2211                           ;dc_motor.c: 183:         if ((mR->power) < 70) (mR->power) += 1;
  2212   0063E4  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2213   0063E8  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2214   0063EC  0E46               	movlw	70
  2215   0063EE  60DF               	cpfslt	indf2,c
  2216   0063F0  EFFC  F031         	goto	u5201
  2217   0063F4  EFFE  F031         	goto	u5200
  2218   0063F8                     u5201:
  2219   0063F8  EF03  F032         	goto	l5434
  2220   0063FC                     u5200:
  2221   0063FC  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2222   006400  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2223   006404  2ADF               	incf	indf2,f,c
  2224   006406                     l5434:
  2225                           
  2226                           ;dc_motor.c: 185:         setMotorPWM(mL);
  2227   006406  C019  F00F         	movff	turn_right_135@mL,setMotorPWM@m
  2228   00640A  C01A  F010         	movff	turn_right_135@mL+1,setMotorPWM@m+1
  2229   00640E  EC22  F030         	call	_setMotorPWM	;wreg free
  2230   006412                     
  2231                           ;dc_motor.c: 186:         setMotorPWM(mR);
  2232   006412  C01B  F00F         	movff	turn_right_135@mR,setMotorPWM@m
  2233   006416  C01C  F010         	movff	turn_right_135@mR+1,setMotorPWM@m+1
  2234   00641A  EC22  F030         	call	_setMotorPWM	;wreg free
  2235   00641E                     
  2236                           ;dc_motor.c: 187:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2237   00641E  0E15               	movlw	21
  2238   006420  6E1D               	movwf	??_turn_right_135^0,c
  2239   006422  0EC6               	movlw	198
  2240   006424                     u6797:
  2241   006424  2EE8               	decfsz	wreg,f,c
  2242   006426  D7FE               	bra	u6797
  2243   006428  2E1D               	decfsz	??_turn_right_135^0,f,c
  2244   00642A  D7FC               	bra	u6797
  2245   00642C  D000               	nop2	
  2246   00642E                     l241:
  2247                           
  2248                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2249   00642E  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2250   006432  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2251   006436  0E45               	movlw	69
  2252   006438  64DF               	cpfsgt	indf2,c
  2253   00643A  EF21  F032         	goto	u5211
  2254   00643E  EF23  F032         	goto	u5210
  2255   006442                     u5211:
  2256   006442  EFE1  F031         	goto	l5426
  2257   006446                     u5210:
  2258   006446  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2259   00644A  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2260   00644E  0E45               	movlw	69
  2261   006450  64DF               	cpfsgt	indf2,c
  2262   006452  EF2D  F032         	goto	u5221
  2263   006456  EF2F  F032         	goto	u5220
  2264   00645A                     u5221:
  2265   00645A  EFE1  F031         	goto	l5426
  2266   00645E                     u5220:
  2267   00645E                     
  2268                           ;dc_motor.c: 189:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2269   00645E  0E29               	movlw	41
  2270   006460  6E1E               	movwf	(??_turn_right_135+1)^0,c
  2271   006462  0E96               	movlw	150
  2272   006464  6E1D               	movwf	??_turn_right_135^0,c
  2273   006466  0E7F               	movlw	127
  2274   006468                     u6807:
  2275   006468  2EE8               	decfsz	wreg,f,c
  2276   00646A  D7FE               	bra	u6807
  2277   00646C  2E1D               	decfsz	??_turn_right_135^0,f,c
  2278   00646E  D7FC               	bra	u6807
  2279   006470  2E1E               	decfsz	(??_turn_right_135+1)^0,f,c
  2280   006472  D7FA               	bra	u6807
  2281   006474  0000               	nop	
  2282   006476                     
  2283                           ;dc_motor.c: 190:     stop(mL, mR);
  2284   006476  C019  F015         	movff	turn_right_135@mL,stop@mL
  2285   00647A  C01A  F016         	movff	turn_right_135@mL+1,stop@mL+1
  2286   00647E  C01B  F017         	movff	turn_right_135@mR,stop@mR
  2287   006482  C01C  F018         	movff	turn_right_135@mR+1,stop@mR+1
  2288   006486  ECE3  F035         	call	_stop	;wreg free
  2289   00648A  0012               	return		;funcret
  2290   00648C                     __end_of_turn_right_135:
  2291                           	callstack 0
  2292                           
  2293 ;; *************** function _turn_left_90 *****************
  2294 ;; Defined at:
  2295 ;;		line 126 in file "dc_motor.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2298 ;;		 -> main@motorL(9), 
  2299 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2300 ;;		 -> main@motorR(9), 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2315 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2316 ;;Total ram usage:        6 bytes
  2317 ;; Hardware stack levels used: 1
  2318 ;; Hardware stack levels required when called: 5
  2319 ;; This function calls:
  2320 ;;		_setMotorPWM
  2321 ;;		_stop
  2322 ;; This function is called by:
  2323 ;;		_main
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text3
  2328   00648C                     __ptext3:
  2329                           	callstack 0
  2330   00648C                     _turn_left_90:
  2331                           	callstack 25
  2332   00648C                     
  2333                           ;dc_motor.c: 127:     mL->direction = 0;
  2334   00648C  EE20 F001          	lfsr	2,1
  2335   006490  5019               	movf	turn_left_90@mL^0,w,c
  2336   006492  26D9               	addwf	fsr2l,f,c
  2337   006494  501A               	movf	(turn_left_90@mL+1)^0,w,c
  2338   006496  22DA               	addwfc	fsr2h,f,c
  2339   006498  6ADF               	clrf	indf2,c
  2340                           
  2341                           ;dc_motor.c: 128:     mR->direction = 1;
  2342   00649A  EE20 F001          	lfsr	2,1
  2343   00649E  501B               	movf	turn_left_90@mR^0,w,c
  2344   0064A0  26D9               	addwf	fsr2l,f,c
  2345   0064A2  501C               	movf	(turn_left_90@mR+1)^0,w,c
  2346   0064A4  22DA               	addwfc	fsr2h,f,c
  2347   0064A6  0E01               	movlw	1
  2348   0064A8  6EDF               	movwf	indf2,c
  2349                           
  2350                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  2351   0064AA  EF8D  F032         	goto	l217
  2352   0064AE                     l5360:
  2353                           
  2354                           ;dc_motor.c: 131:         if ((mL->power) < 70) (mL->power) += 1;
  2355   0064AE  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2356   0064B2  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2357   0064B6  0E46               	movlw	70
  2358   0064B8  60DF               	cpfslt	indf2,c
  2359   0064BA  EF61  F032         	goto	u5071
  2360   0064BE  EF63  F032         	goto	u5070
  2361   0064C2                     u5071:
  2362   0064C2  EF68  F032         	goto	l5364
  2363   0064C6                     u5070:
  2364   0064C6  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2365   0064CA  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2366   0064CE  2ADF               	incf	indf2,f,c
  2367   0064D0                     l5364:
  2368                           
  2369                           ;dc_motor.c: 132:         if ((mR->power) < 70) (mR->power) += 1;
  2370   0064D0  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2371   0064D4  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2372   0064D8  0E46               	movlw	70
  2373   0064DA  60DF               	cpfslt	indf2,c
  2374   0064DC  EF72  F032         	goto	u5081
  2375   0064E0  EF74  F032         	goto	u5080
  2376   0064E4                     u5081:
  2377   0064E4  EF79  F032         	goto	l5368
  2378   0064E8                     u5080:
  2379   0064E8  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2380   0064EC  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2381   0064F0  2ADF               	incf	indf2,f,c
  2382   0064F2                     l5368:
  2383                           
  2384                           ;dc_motor.c: 134:         setMotorPWM(mL);
  2385   0064F2  C019  F00F         	movff	turn_left_90@mL,setMotorPWM@m
  2386   0064F6  C01A  F010         	movff	turn_left_90@mL+1,setMotorPWM@m+1
  2387   0064FA  EC22  F030         	call	_setMotorPWM	;wreg free
  2388   0064FE                     
  2389                           ;dc_motor.c: 135:         setMotorPWM(mR);
  2390   0064FE  C01B  F00F         	movff	turn_left_90@mR,setMotorPWM@m
  2391   006502  C01C  F010         	movff	turn_left_90@mR+1,setMotorPWM@m+1
  2392   006506  EC22  F030         	call	_setMotorPWM	;wreg free
  2393   00650A                     
  2394                           ;dc_motor.c: 136:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2395   00650A  0E15               	movlw	21
  2396   00650C  6E1D               	movwf	??_turn_left_90^0,c
  2397   00650E  0EC6               	movlw	198
  2398   006510                     u6817:
  2399   006510  2EE8               	decfsz	wreg,f,c
  2400   006512  D7FE               	bra	u6817
  2401   006514  2E1D               	decfsz	??_turn_left_90^0,f,c
  2402   006516  D7FC               	bra	u6817
  2403   006518  D000               	nop2	
  2404   00651A                     l217:
  2405                           
  2406                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  2407   00651A  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2408   00651E  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2409   006522  0E45               	movlw	69
  2410   006524  64DF               	cpfsgt	indf2,c
  2411   006526  EF97  F032         	goto	u5091
  2412   00652A  EF99  F032         	goto	u5090
  2413   00652E                     u5091:
  2414   00652E  EF57  F032         	goto	l5360
  2415   006532                     u5090:
  2416   006532  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2417   006536  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2418   00653A  0E45               	movlw	69
  2419   00653C  64DF               	cpfsgt	indf2,c
  2420   00653E  EFA3  F032         	goto	u5101
  2421   006542  EFA5  F032         	goto	u5100
  2422   006546                     u5101:
  2423   006546  EF57  F032         	goto	l5360
  2424   00654A                     u5100:
  2425   00654A                     
  2426                           ;dc_motor.c: 138:     _delay((unsigned long)((225)*(64000000/4000.0)));
  2427   00654A  0E13               	movlw	19
  2428   00654C  6E1E               	movwf	(??_turn_left_90+1)^0,c
  2429   00654E  0E44               	movlw	68
  2430   006550  6E1D               	movwf	??_turn_left_90^0,c
  2431   006552  0E44               	movlw	68
  2432   006554                     u6827:
  2433   006554  2EE8               	decfsz	wreg,f,c
  2434   006556  D7FE               	bra	u6827
  2435   006558  2E1D               	decfsz	??_turn_left_90^0,f,c
  2436   00655A  D7FC               	bra	u6827
  2437   00655C  2E1E               	decfsz	(??_turn_left_90+1)^0,f,c
  2438   00655E  D7FA               	bra	u6827
  2439   006560  D000               	nop2	
  2440   006562                     
  2441                           ;dc_motor.c: 139:     stop(mL, mR);
  2442   006562  C019  F015         	movff	turn_left_90@mL,stop@mL
  2443   006566  C01A  F016         	movff	turn_left_90@mL+1,stop@mL+1
  2444   00656A  C01B  F017         	movff	turn_left_90@mR,stop@mR
  2445   00656E  C01C  F018         	movff	turn_left_90@mR+1,stop@mR+1
  2446   006572  ECE3  F035         	call	_stop	;wreg free
  2447   006576  0012               	return		;funcret
  2448   006578                     __end_of_turn_left_90:
  2449                           	callstack 0
  2450                           
  2451 ;; *************** function _turn_left_135 *****************
  2452 ;; Defined at:
  2453 ;;		line 160 in file "dc_motor.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2456 ;;		 -> main@motorL(9), 
  2457 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2458 ;;		 -> main@motorR(9), 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2473 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;Total ram usage:        6 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 5
  2477 ;; This function calls:
  2478 ;;		_setMotorPWM
  2479 ;;		_stop
  2480 ;; This function is called by:
  2481 ;;		_main
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text4
  2486   006578                     __ptext4:
  2487                           	callstack 0
  2488   006578                     _turn_left_135:
  2489                           	callstack 25
  2490   006578                     
  2491                           ;dc_motor.c: 161:     mL->direction = 0;
  2492   006578  EE20 F001          	lfsr	2,1
  2493   00657C  5019               	movf	turn_left_135@mL^0,w,c
  2494   00657E  26D9               	addwf	fsr2l,f,c
  2495   006580  501A               	movf	(turn_left_135@mL+1)^0,w,c
  2496   006582  22DA               	addwfc	fsr2h,f,c
  2497   006584  6ADF               	clrf	indf2,c
  2498                           
  2499                           ;dc_motor.c: 162:     mR->direction = 1;
  2500   006586  EE20 F001          	lfsr	2,1
  2501   00658A  501B               	movf	turn_left_135@mR^0,w,c
  2502   00658C  26D9               	addwf	fsr2l,f,c
  2503   00658E  501C               	movf	(turn_left_135@mR+1)^0,w,c
  2504   006590  22DA               	addwfc	fsr2h,f,c
  2505   006592  0E01               	movlw	1
  2506   006594  6EDF               	movwf	indf2,c
  2507                           
  2508                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  2509   006596  EF03  F033         	goto	l233
  2510   00659A                     l5404:
  2511                           
  2512                           ;dc_motor.c: 165:         if ((mL->power) < 70) (mL->power) += 1;
  2513   00659A  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  2514   00659E  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  2515   0065A2  0E46               	movlw	70
  2516   0065A4  60DF               	cpfslt	indf2,c
  2517   0065A6  EFD7  F032         	goto	u5151
  2518   0065AA  EFD9  F032         	goto	u5150
  2519   0065AE                     u5151:
  2520   0065AE  EFDE  F032         	goto	l5408
  2521   0065B2                     u5150:
  2522   0065B2  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  2523   0065B6  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  2524   0065BA  2ADF               	incf	indf2,f,c
  2525   0065BC                     l5408:
  2526                           
  2527                           ;dc_motor.c: 166:         if ((mR->power) < 70) (mR->power) += 1;
  2528   0065BC  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  2529   0065C0  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  2530   0065C4  0E46               	movlw	70
  2531   0065C6  60DF               	cpfslt	indf2,c
  2532   0065C8  EFE8  F032         	goto	u5161
  2533   0065CC  EFEA  F032         	goto	u5160
  2534   0065D0                     u5161:
  2535   0065D0  EFEF  F032         	goto	l5412
  2536   0065D4                     u5160:
  2537   0065D4  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  2538   0065D8  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  2539   0065DC  2ADF               	incf	indf2,f,c
  2540   0065DE                     l5412:
  2541                           
  2542                           ;dc_motor.c: 168:         setMotorPWM(mL);
  2543   0065DE  C019  F00F         	movff	turn_left_135@mL,setMotorPWM@m
  2544   0065E2  C01A  F010         	movff	turn_left_135@mL+1,setMotorPWM@m+1
  2545   0065E6  EC22  F030         	call	_setMotorPWM	;wreg free
  2546   0065EA                     
  2547                           ;dc_motor.c: 169:         setMotorPWM(mR);
  2548   0065EA  C01B  F00F         	movff	turn_left_135@mR,setMotorPWM@m
  2549   0065EE  C01C  F010         	movff	turn_left_135@mR+1,setMotorPWM@m+1
  2550   0065F2  EC22  F030         	call	_setMotorPWM	;wreg free
  2551   0065F6                     
  2552                           ;dc_motor.c: 170:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2553   0065F6  0E15               	movlw	21
  2554   0065F8  6E1D               	movwf	??_turn_left_135^0,c
  2555   0065FA  0EC6               	movlw	198
  2556   0065FC                     u6837:
  2557   0065FC  2EE8               	decfsz	wreg,f,c
  2558   0065FE  D7FE               	bra	u6837
  2559   006600  2E1D               	decfsz	??_turn_left_135^0,f,c
  2560   006602  D7FC               	bra	u6837
  2561   006604  D000               	nop2	
  2562   006606                     l233:
  2563                           
  2564                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  2565   006606  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  2566   00660A  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  2567   00660E  0E45               	movlw	69
  2568   006610  64DF               	cpfsgt	indf2,c
  2569   006612  EF0D  F033         	goto	u5171
  2570   006616  EF0F  F033         	goto	u5170
  2571   00661A                     u5171:
  2572   00661A  EFCD  F032         	goto	l5404
  2573   00661E                     u5170:
  2574   00661E  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  2575   006622  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  2576   006626  0E45               	movlw	69
  2577   006628  64DF               	cpfsgt	indf2,c
  2578   00662A  EF19  F033         	goto	u5181
  2579   00662E  EF1B  F033         	goto	u5180
  2580   006632                     u5181:
  2581   006632  EFCD  F032         	goto	l5404
  2582   006636                     u5180:
  2583   006636                     
  2584                           ;dc_motor.c: 172:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2585   006636  0E29               	movlw	41
  2586   006638  6E1E               	movwf	(??_turn_left_135+1)^0,c
  2587   00663A  0E96               	movlw	150
  2588   00663C  6E1D               	movwf	??_turn_left_135^0,c
  2589   00663E  0E7F               	movlw	127
  2590   006640                     u6847:
  2591   006640  2EE8               	decfsz	wreg,f,c
  2592   006642  D7FE               	bra	u6847
  2593   006644  2E1D               	decfsz	??_turn_left_135^0,f,c
  2594   006646  D7FC               	bra	u6847
  2595   006648  2E1E               	decfsz	(??_turn_left_135+1)^0,f,c
  2596   00664A  D7FA               	bra	u6847
  2597   00664C  0000               	nop	
  2598   00664E                     
  2599                           ;dc_motor.c: 173:     stop(mL, mR);
  2600   00664E  C019  F015         	movff	turn_left_135@mL,stop@mL
  2601   006652  C01A  F016         	movff	turn_left_135@mL+1,stop@mL+1
  2602   006656  C01B  F017         	movff	turn_left_135@mR,stop@mR
  2603   00665A  C01C  F018         	movff	turn_left_135@mR+1,stop@mR+1
  2604   00665E  ECE3  F035         	call	_stop	;wreg free
  2605   006662  0012               	return		;funcret
  2606   006664                     __end_of_turn_left_135:
  2607                           	callstack 0
  2608                           
  2609 ;; *************** function _reverse_one_square *****************
  2610 ;; Defined at:
  2611 ;;		line 209 in file "dc_motor.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2614 ;;		 -> main@motorL(9), 
  2615 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2616 ;;		 -> main@motorR(9), 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2631 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2632 ;;Total ram usage:        6 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 5
  2635 ;; This function calls:
  2636 ;;		_setMotorPWM
  2637 ;;		_stop
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text5
  2644   006664                     __ptext5:
  2645                           	callstack 0
  2646   006664                     _reverse_one_square:
  2647                           	callstack 25
  2648   006664                     
  2649                           ;dc_motor.c: 210:     mL->direction = 0;
  2650   006664  EE20 F001          	lfsr	2,1
  2651   006668  5019               	movf	reverse_one_square@mL^0,w,c
  2652   00666A  26D9               	addwf	fsr2l,f,c
  2653   00666C  501A               	movf	(reverse_one_square@mL+1)^0,w,c
  2654   00666E  22DA               	addwfc	fsr2h,f,c
  2655   006670  6ADF               	clrf	indf2,c
  2656                           
  2657                           ;dc_motor.c: 211:     mR->direction = 0;
  2658   006672  EE20 F001          	lfsr	2,1
  2659   006676  501B               	movf	reverse_one_square@mR^0,w,c
  2660   006678  26D9               	addwf	fsr2l,f,c
  2661   00667A  501C               	movf	(reverse_one_square@mR+1)^0,w,c
  2662   00667C  22DA               	addwfc	fsr2h,f,c
  2663   00667E  6ADF               	clrf	indf2,c
  2664                           
  2665                           ;dc_motor.c: 213:     while ((mL->power) < 70 || (mR->power) < 70){
  2666   006680  EF78  F033         	goto	l257
  2667   006684                     l5470:
  2668                           
  2669                           ;dc_motor.c: 214:         if ((mL->power) < 70) (mL->power) += 1;
  2670   006684  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  2671   006688  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  2672   00668C  0E46               	movlw	70
  2673   00668E  60DF               	cpfslt	indf2,c
  2674   006690  EF4C  F033         	goto	u5271
  2675   006694  EF4E  F033         	goto	u5270
  2676   006698                     u5271:
  2677   006698  EF53  F033         	goto	l5474
  2678   00669C                     u5270:
  2679   00669C  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  2680   0066A0  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  2681   0066A4  2ADF               	incf	indf2,f,c
  2682   0066A6                     l5474:
  2683                           
  2684                           ;dc_motor.c: 215:         if ((mR->power) < 70) (mR->power) += 1;
  2685   0066A6  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  2686   0066AA  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  2687   0066AE  0E46               	movlw	70
  2688   0066B0  60DF               	cpfslt	indf2,c
  2689   0066B2  EF5D  F033         	goto	u5281
  2690   0066B6  EF5F  F033         	goto	u5280
  2691   0066BA                     u5281:
  2692   0066BA  EF64  F033         	goto	l5478
  2693   0066BE                     u5280:
  2694   0066BE  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  2695   0066C2  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  2696   0066C6  2ADF               	incf	indf2,f,c
  2697   0066C8                     l5478:
  2698                           
  2699                           ;dc_motor.c: 217:         setMotorPWM(mL);
  2700   0066C8  C019  F00F         	movff	reverse_one_square@mL,setMotorPWM@m
  2701   0066CC  C01A  F010         	movff	reverse_one_square@mL+1,setMotorPWM@m+1
  2702   0066D0  EC22  F030         	call	_setMotorPWM	;wreg free
  2703   0066D4                     
  2704                           ;dc_motor.c: 218:         setMotorPWM(mR);
  2705   0066D4  C01B  F00F         	movff	reverse_one_square@mR,setMotorPWM@m
  2706   0066D8  C01C  F010         	movff	reverse_one_square@mR+1,setMotorPWM@m+1
  2707   0066DC  EC22  F030         	call	_setMotorPWM	;wreg free
  2708   0066E0                     
  2709                           ;dc_motor.c: 219:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2710   0066E0  0E15               	movlw	21
  2711   0066E2  6E1D               	movwf	??_reverse_one_square^0,c
  2712   0066E4  0EC6               	movlw	198
  2713   0066E6                     u6857:
  2714   0066E6  2EE8               	decfsz	wreg,f,c
  2715   0066E8  D7FE               	bra	u6857
  2716   0066EA  2E1D               	decfsz	??_reverse_one_square^0,f,c
  2717   0066EC  D7FC               	bra	u6857
  2718   0066EE  D000               	nop2	
  2719   0066F0                     l257:
  2720                           
  2721                           ;dc_motor.c: 213:     while ((mL->power) < 70 || (mR->power) < 70){
  2722   0066F0  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  2723   0066F4  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  2724   0066F8  0E45               	movlw	69
  2725   0066FA  64DF               	cpfsgt	indf2,c
  2726   0066FC  EF82  F033         	goto	u5291
  2727   006700  EF84  F033         	goto	u5290
  2728   006704                     u5291:
  2729   006704  EF42  F033         	goto	l5470
  2730   006708                     u5290:
  2731   006708  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  2732   00670C  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  2733   006710  0E45               	movlw	69
  2734   006712  64DF               	cpfsgt	indf2,c
  2735   006714  EF8E  F033         	goto	u5301
  2736   006718  EF90  F033         	goto	u5300
  2737   00671C                     u5301:
  2738   00671C  EF42  F033         	goto	l5470
  2739   006720                     u5300:
  2740   006720                     
  2741                           ;dc_motor.c: 221:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2742   006720  0E29               	movlw	41
  2743   006722  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  2744   006724  0E96               	movlw	150
  2745   006726  6E1D               	movwf	??_reverse_one_square^0,c
  2746   006728  0E7F               	movlw	127
  2747   00672A                     u6867:
  2748   00672A  2EE8               	decfsz	wreg,f,c
  2749   00672C  D7FE               	bra	u6867
  2750   00672E  2E1D               	decfsz	??_reverse_one_square^0,f,c
  2751   006730  D7FC               	bra	u6867
  2752   006732  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  2753   006734  D7FA               	bra	u6867
  2754   006736  0000               	nop	
  2755   006738                     
  2756                           ;dc_motor.c: 222:     stop(mL, mR);
  2757   006738  C019  F015         	movff	reverse_one_square@mL,stop@mL
  2758   00673C  C01A  F016         	movff	reverse_one_square@mL+1,stop@mL+1
  2759   006740  C01B  F017         	movff	reverse_one_square@mR,stop@mR
  2760   006744  C01C  F018         	movff	reverse_one_square@mR+1,stop@mR+1
  2761   006748  ECE3  F035         	call	_stop	;wreg free
  2762   00674C  0012               	return		;funcret
  2763   00674E                     __end_of_reverse_one_square:
  2764                           	callstack 0
  2765                           
  2766 ;; *************** function _reverse_after_read *****************
  2767 ;; Defined at:
  2768 ;;		line 193 in file "dc_motor.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2771 ;;		 -> main@motorL(9), 
  2772 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2773 ;;		 -> main@motorR(9), 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2785 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2787 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2788 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;Total ram usage:        6 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 5
  2792 ;; This function calls:
  2793 ;;		_setMotorPWM
  2794 ;;		_stop
  2795 ;; This function is called by:
  2796 ;;		_main
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text6
  2801   00674E                     __ptext6:
  2802                           	callstack 0
  2803   00674E                     _reverse_after_read:
  2804                           	callstack 25
  2805   00674E                     
  2806                           ;dc_motor.c: 194:     mL->direction = 0;
  2807   00674E  EE20 F001          	lfsr	2,1
  2808   006752  5019               	movf	reverse_after_read@mL^0,w,c
  2809   006754  26D9               	addwf	fsr2l,f,c
  2810   006756  501A               	movf	(reverse_after_read@mL+1)^0,w,c
  2811   006758  22DA               	addwfc	fsr2h,f,c
  2812   00675A  6ADF               	clrf	indf2,c
  2813                           
  2814                           ;dc_motor.c: 195:     mR->direction = 0;
  2815   00675C  EE20 F001          	lfsr	2,1
  2816   006760  501B               	movf	reverse_after_read@mR^0,w,c
  2817   006762  26D9               	addwf	fsr2l,f,c
  2818   006764  501C               	movf	(reverse_after_read@mR+1)^0,w,c
  2819   006766  22DA               	addwfc	fsr2h,f,c
  2820   006768  6ADF               	clrf	indf2,c
  2821                           
  2822                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  2823   00676A  EFED  F033         	goto	l249
  2824   00676E                     l5448:
  2825                           
  2826                           ;dc_motor.c: 198:         if ((mL->power) < 70) (mL->power) += 1;
  2827   00676E  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  2828   006772  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  2829   006776  0E46               	movlw	70
  2830   006778  60DF               	cpfslt	indf2,c
  2831   00677A  EFC1  F033         	goto	u5231
  2832   00677E  EFC3  F033         	goto	u5230
  2833   006782                     u5231:
  2834   006782  EFC8  F033         	goto	l5452
  2835   006786                     u5230:
  2836   006786  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  2837   00678A  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  2838   00678E  2ADF               	incf	indf2,f,c
  2839   006790                     l5452:
  2840                           
  2841                           ;dc_motor.c: 199:         if ((mR->power) < 70) (mR->power) += 1;
  2842   006790  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  2843   006794  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  2844   006798  0E46               	movlw	70
  2845   00679A  60DF               	cpfslt	indf2,c
  2846   00679C  EFD2  F033         	goto	u5241
  2847   0067A0  EFD4  F033         	goto	u5240
  2848   0067A4                     u5241:
  2849   0067A4  EFD9  F033         	goto	l5456
  2850   0067A8                     u5240:
  2851   0067A8  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  2852   0067AC  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  2853   0067B0  2ADF               	incf	indf2,f,c
  2854   0067B2                     l5456:
  2855                           
  2856                           ;dc_motor.c: 201:         setMotorPWM(mL);
  2857   0067B2  C019  F00F         	movff	reverse_after_read@mL,setMotorPWM@m
  2858   0067B6  C01A  F010         	movff	reverse_after_read@mL+1,setMotorPWM@m+1
  2859   0067BA  EC22  F030         	call	_setMotorPWM	;wreg free
  2860   0067BE                     
  2861                           ;dc_motor.c: 202:         setMotorPWM(mR);
  2862   0067BE  C01B  F00F         	movff	reverse_after_read@mR,setMotorPWM@m
  2863   0067C2  C01C  F010         	movff	reverse_after_read@mR+1,setMotorPWM@m+1
  2864   0067C6  EC22  F030         	call	_setMotorPWM	;wreg free
  2865   0067CA                     
  2866                           ;dc_motor.c: 203:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2867   0067CA  0E15               	movlw	21
  2868   0067CC  6E1D               	movwf	??_reverse_after_read^0,c
  2869   0067CE  0EC6               	movlw	198
  2870   0067D0                     u6877:
  2871   0067D0  2EE8               	decfsz	wreg,f,c
  2872   0067D2  D7FE               	bra	u6877
  2873   0067D4  2E1D               	decfsz	??_reverse_after_read^0,f,c
  2874   0067D6  D7FC               	bra	u6877
  2875   0067D8  D000               	nop2	
  2876   0067DA                     l249:
  2877                           
  2878                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  2879   0067DA  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  2880   0067DE  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  2881   0067E2  0E45               	movlw	69
  2882   0067E4  64DF               	cpfsgt	indf2,c
  2883   0067E6  EFF7  F033         	goto	u5251
  2884   0067EA  EFF9  F033         	goto	u5250
  2885   0067EE                     u5251:
  2886   0067EE  EFB7  F033         	goto	l5448
  2887   0067F2                     u5250:
  2888   0067F2  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  2889   0067F6  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  2890   0067FA  0E45               	movlw	69
  2891   0067FC  64DF               	cpfsgt	indf2,c
  2892   0067FE  EF03  F034         	goto	u5261
  2893   006802  EF05  F034         	goto	u5260
  2894   006806                     u5261:
  2895   006806  EFB7  F033         	goto	l5448
  2896   00680A                     u5260:
  2897   00680A                     
  2898                           ;dc_motor.c: 205:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2899   00680A  0E09               	movlw	9
  2900   00680C  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  2901   00680E  0E1E               	movlw	30
  2902   006810  6E1D               	movwf	??_reverse_after_read^0,c
  2903   006812  0EE4               	movlw	228
  2904   006814                     u6887:
  2905   006814  2EE8               	decfsz	wreg,f,c
  2906   006816  D7FE               	bra	u6887
  2907   006818  2E1D               	decfsz	??_reverse_after_read^0,f,c
  2908   00681A  D7FC               	bra	u6887
  2909   00681C  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  2910   00681E  D7FA               	bra	u6887
  2911   006820  D000               	nop2	
  2912   006822                     
  2913                           ;dc_motor.c: 206:     stop(mL, mR);
  2914   006822  C019  F015         	movff	reverse_after_read@mL,stop@mL
  2915   006826  C01A  F016         	movff	reverse_after_read@mL+1,stop@mL+1
  2916   00682A  C01B  F017         	movff	reverse_after_read@mR,stop@mR
  2917   00682E  C01C  F018         	movff	reverse_after_read@mR+1,stop@mR+1
  2918   006832  ECE3  F035         	call	_stop	;wreg free
  2919   006836  0012               	return		;funcret
  2920   006838                     __end_of_reverse_after_read:
  2921                           	callstack 0
  2922                           
  2923 ;; *************** function _stop *****************
  2924 ;; Defined at:
  2925 ;;		line 114 in file "dc_motor.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  2928 ;;		 -> main@motorL(9), 
  2929 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  2930 ;;		 -> main@motorR(9), 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2945 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2946 ;;Total ram usage:        4 bytes
  2947 ;; Hardware stack levels used: 1
  2948 ;; Hardware stack levels required when called: 4
  2949 ;; This function calls:
  2950 ;;		_setMotorPWM
  2951 ;; This function is called by:
  2952 ;;		_turn_left_90
  2953 ;;		_turn_right_90
  2954 ;;		_turn_left_135
  2955 ;;		_turn_right_135
  2956 ;;		_reverse_after_read
  2957 ;;		_reverse_one_square
  2958 ;;		_main
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           	psect	text7
  2963   006BC6                     __ptext7:
  2964                           	callstack 0
  2965   006BC6                     _stop:
  2966                           	callstack 25
  2967   006BC6                     
  2968                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  2969   006BC6  EF17  F036         	goto	l5092
  2970   006BCA                     l5078:
  2971                           
  2972                           ;dc_motor.c: 116:         if ((mL->power) > 0) (mL->power) -= 1;
  2973   006BCA  C015  FFD9         	movff	stop@mL,fsr2l
  2974   006BCE  C016  FFDA         	movff	stop@mL+1,fsr2h
  2975   006BD2  50DF               	movf	indf2,w,c
  2976   006BD4  B4D8               	btfsc	status,2,c
  2977   006BD6  EFEF  F035         	goto	u4881
  2978   006BDA  EFF1  F035         	goto	u4880
  2979   006BDE                     u4881:
  2980   006BDE  EFF6  F035         	goto	l5082
  2981   006BE2                     u4880:
  2982   006BE2  C015  FFD9         	movff	stop@mL,fsr2l
  2983   006BE6  C016  FFDA         	movff	stop@mL+1,fsr2h
  2984   006BEA  06DF               	decf	indf2,f,c
  2985   006BEC                     l5082:
  2986                           
  2987                           ;dc_motor.c: 117:         if ((mR->power) > 0) (mR->power) -= 1;
  2988   006BEC  C017  FFD9         	movff	stop@mR,fsr2l
  2989   006BF0  C018  FFDA         	movff	stop@mR+1,fsr2h
  2990   006BF4  50DF               	movf	indf2,w,c
  2991   006BF6  B4D8               	btfsc	status,2,c
  2992   006BF8  EF00  F036         	goto	u4891
  2993   006BFC  EF02  F036         	goto	u4890
  2994   006C00                     u4891:
  2995   006C00  EF07  F036         	goto	l5086
  2996   006C04                     u4890:
  2997   006C04  C017  FFD9         	movff	stop@mR,fsr2l
  2998   006C08  C018  FFDA         	movff	stop@mR+1,fsr2h
  2999   006C0C  06DF               	decf	indf2,f,c
  3000   006C0E                     l5086:
  3001                           
  3002                           ;dc_motor.c: 119:         setMotorPWM(mL);
  3003   006C0E  C015  F00F         	movff	stop@mL,setMotorPWM@m
  3004   006C12  C016  F010         	movff	stop@mL+1,setMotorPWM@m+1
  3005   006C16  EC22  F030         	call	_setMotorPWM	;wreg free
  3006   006C1A                     
  3007                           ;dc_motor.c: 120:         setMotorPWM(mR);
  3008   006C1A  C017  F00F         	movff	stop@mR,setMotorPWM@m
  3009   006C1E  C018  F010         	movff	stop@mR+1,setMotorPWM@m+1
  3010   006C22  EC22  F030         	call	_setMotorPWM	;wreg free
  3011   006C26                     
  3012                           ;dc_motor.c: 121:         _delay((unsigned long)((25)*(64000000/4000000.0)));
  3013   006C26  0E85               	movlw	133
  3014   006C28                     u6897:
  3015   006C28  2EE8               	decfsz	wreg,f,c
  3016   006C2A  D7FE               	bra	u6897
  3017   006C2C  0000               	nop	
  3018   006C2E                     l5092:
  3019                           
  3020                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  3021   006C2E  C015  FFD9         	movff	stop@mL,fsr2l
  3022   006C32  C016  FFDA         	movff	stop@mL+1,fsr2h
  3023   006C36  50DF               	movf	indf2,w,c
  3024   006C38  A4D8               	btfss	status,2,c
  3025   006C3A  EF21  F036         	goto	u4901
  3026   006C3E  EF23  F036         	goto	u4900
  3027   006C42                     u4901:
  3028   006C42  EFE5  F035         	goto	l5078
  3029   006C46                     u4900:
  3030   006C46  C017  FFD9         	movff	stop@mR,fsr2l
  3031   006C4A  C018  FFDA         	movff	stop@mR+1,fsr2h
  3032   006C4E  50DF               	movf	indf2,w,c
  3033   006C50  A4D8               	btfss	status,2,c
  3034   006C52  EF2D  F036         	goto	u4911
  3035   006C56  EF2F  F036         	goto	u4910
  3036   006C5A                     u4911:
  3037   006C5A  EFE5  F035         	goto	l5078
  3038   006C5E                     u4910:
  3039   006C5E  0012               	return		;funcret
  3040   006C60                     __end_of_stop:
  3041                           	callstack 0
  3042                           
  3043 ;; *************** function _resetTimer0 *****************
  3044 ;; Defined at:
  3045 ;;		line 34 in file "timers.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;		None
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, status,2
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;Total ram usage:        0 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 2
  3066 ;; This function calls:
  3067 ;;		Nothing
  3068 ;; This function is called by:
  3069 ;;		_main
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text8
  3074   00721C                     __ptext8:
  3075                           	callstack 0
  3076   00721C                     _resetTimer0:
  3077                           	callstack 28
  3078   00721C                     
  3079                           ;timers.c: 35:     TMR0H = 0;
  3080   00721C  0E00               	movlw	0
  3081   00721E  6ED4               	movwf	212,c	;volatile
  3082                           
  3083                           ;timers.c: 36:     TMR0L = 0;
  3084   007220  0E00               	movlw	0
  3085   007222  6ED3               	movwf	211,c	;volatile
  3086   007224  0012               	return		;funcret
  3087   007226                     __end_of_resetTimer0:
  3088                           	callstack 0
  3089                           
  3090 ;; *************** function _initUSART4 *****************
  3091 ;; Defined at:
  3092 ;;		line 4 in file "serial.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3110 ;;Total ram usage:        0 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; Hardware stack levels required when called: 2
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_main
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text9
  3121   007198                     __ptext9:
  3122                           	callstack 0
  3123   007198                     _initUSART4:
  3124                           	callstack 28
  3125   007198                     
  3126                           ;serial.c: 8:     RC0PPS = 0x12;
  3127   007198  0E12               	movlw	18
  3128   00719A  010E               	movlb	14	; () banked
  3129   00719C  6F62               	movwf	98,b	;volatile
  3130                           
  3131                           ;serial.c: 9:     RX4PPS = 0x11;
  3132   00719E  0E11               	movlw	17
  3133   0071A0  6F15               	movwf	21,b	;volatile
  3134   0071A2                     
  3135                           ; BSR set to: 14
  3136                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  3137   0071A2  97E9               	bcf	233,3,b	;volatile
  3138   0071A4                     
  3139                           ; BSR set to: 14
  3140                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  3141   0071A4  95E8               	bcf	232,2,b	;volatile
  3142                           
  3143                           ;serial.c: 15:     SP4BRGL = 51;
  3144   0071A6  0E33               	movlw	51
  3145   0071A8  6FE5               	movwf	229,b	;volatile
  3146                           
  3147                           ;serial.c: 16:     SP4BRGH = 0;
  3148   0071AA  0E00               	movlw	0
  3149   0071AC  6FE6               	movwf	230,b	;volatile
  3150   0071AE                     
  3151                           ; BSR set to: 14
  3152                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  3153   0071AE  89E7               	bsf	231,4,b	;volatile
  3154   0071B0                     
  3155                           ; BSR set to: 14
  3156                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  3157   0071B0  8BE8               	bsf	232,5,b	;volatile
  3158   0071B2                     
  3159                           ; BSR set to: 14
  3160                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  3161   0071B2  8FE7               	bsf	231,7,b	;volatile
  3162   0071B4                     
  3163                           ; BSR set to: 14
  3164   0071B4  0012               	return		;funcret
  3165   0071B6                     __end_of_initUSART4:
  3166                           	callstack 0
  3167                           
  3168 ;; *************** function _initDCmotorsPWM *****************
  3169 ;; Defined at:
  3170 ;;		line 6 in file "dc_motor.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  PWMperiod       2    1[COMRAM] int 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3188 ;;Total ram usage:        2 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; Hardware stack levels required when called: 2
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_main
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text10
  3199   006B24                     __ptext10:
  3200                           	callstack 0
  3201   006B24                     _initDCmotorsPWM:
  3202                           	callstack 28
  3203   006B24                     
  3204                           ;dc_motor.c: 10:     RE2PPS=0x05;
  3205   006B24  0E05               	movlw	5
  3206   006B26  010E               	movlb	14	; () banked
  3207   006B28  6F74               	movwf	116,b	;volatile
  3208                           
  3209                           ;dc_motor.c: 11:     RE4PPS=0x06;
  3210   006B2A  0E06               	movlw	6
  3211   006B2C  6F76               	movwf	118,b	;volatile
  3212                           
  3213                           ;dc_motor.c: 12:     RC7PPS=0x07;
  3214   006B2E  0E07               	movlw	7
  3215   006B30  6F69               	movwf	105,b	;volatile
  3216                           
  3217                           ;dc_motor.c: 13:     RG6PPS=0x08;
  3218   006B32  0E08               	movlw	8
  3219   006B34  6F88               	movwf	136,b	;volatile
  3220                           
  3221                           ;dc_motor.c: 16:     T2CONbits.CKPS=0b100;
  3222   006B36  50BD               	movf	189,w,c	;volatile
  3223   006B38  0B8F               	andlw	-113
  3224   006B3A  0940               	iorlw	64
  3225   006B3C  6EBD               	movwf	189,c	;volatile
  3226                           
  3227                           ;dc_motor.c: 17:     T2HLTbits.MODE=0b00000;
  3228   006B3E  0EE0               	movlw	-32
  3229   006B40  16BE               	andwf	190,f,c	;volatile
  3230                           
  3231                           ;dc_motor.c: 18:     T2CLKCONbits.CS=0b0001;
  3232   006B42  50BF               	movf	191,w,c	;volatile
  3233   006B44  0BF0               	andlw	-16
  3234   006B46  0901               	iorlw	1
  3235   006B48  6EBF               	movwf	191,c	;volatile
  3236                           
  3237                           ;dc_motor.c: 22:     T2PR=99;
  3238   006B4A  0E63               	movlw	99
  3239   006B4C  6EBC               	movwf	188,c	;volatile
  3240   006B4E                     
  3241                           ; BSR set to: 14
  3242                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  3243   006B4E  8EBD               	bsf	189,7,c	;volatile
  3244                           
  3245                           ;dc_motor.c: 27:     CCPR1H=0;
  3246   006B50  0E00               	movlw	0
  3247   006B52  6EAA               	movwf	170,c	;volatile
  3248                           
  3249                           ;dc_motor.c: 28:     CCPR2H=0;
  3250   006B54  0E00               	movlw	0
  3251   006B56  6EA6               	movwf	166,c	;volatile
  3252                           
  3253                           ;dc_motor.c: 29:     CCPR3H=0;
  3254   006B58  0E00               	movlw	0
  3255   006B5A  010F               	movlb	15	; () banked
  3256   006B5C  6F25               	movwf	37,b	;volatile
  3257                           
  3258                           ;dc_motor.c: 30:     CCPR4H=0;
  3259   006B5E  0E00               	movlw	0
  3260   006B60  6F21               	movwf	33,b	;volatile
  3261                           
  3262                           ;dc_motor.c: 33:     CCPTMRS0bits.C1TSEL=0;
  3263   006B62  0EFC               	movlw	-4
  3264   006B64  16AD               	andwf	173,f,c	;volatile
  3265                           
  3266                           ;dc_motor.c: 34:     CCPTMRS0bits.C2TSEL=0;
  3267   006B66  0EF3               	movlw	-13
  3268   006B68  16AD               	andwf	173,f,c	;volatile
  3269                           
  3270                           ;dc_motor.c: 35:     CCPTMRS0bits.C3TSEL=0;
  3271   006B6A  0ECF               	movlw	-49
  3272   006B6C  16AD               	andwf	173,f,c	;volatile
  3273                           
  3274                           ;dc_motor.c: 36:     CCPTMRS0bits.C4TSEL=0;
  3275   006B6E  0E3F               	movlw	-193
  3276   006B70  16AD               	andwf	173,f,c	;volatile
  3277   006B72                     
  3278                           ; BSR set to: 15
  3279                           ;dc_motor.c: 39:     CCP1CONbits.FMT=1;
  3280   006B72  88AB               	bsf	171,4,c	;volatile
  3281                           
  3282                           ;dc_motor.c: 40:     CCP1CONbits.CCP1MODE=0b1100;
  3283   006B74  50AB               	movf	171,w,c	;volatile
  3284   006B76  0BF0               	andlw	-16
  3285   006B78  090C               	iorlw	12
  3286   006B7A  6EAB               	movwf	171,c	;volatile
  3287   006B7C                     
  3288                           ; BSR set to: 15
  3289                           ;dc_motor.c: 41:     CCP1CONbits.EN=1;
  3290   006B7C  8EAB               	bsf	171,7,c	;volatile
  3291   006B7E                     
  3292                           ; BSR set to: 15
  3293                           ;dc_motor.c: 43:     CCP2CONbits.FMT=1;
  3294   006B7E  88A7               	bsf	167,4,c	;volatile
  3295                           
  3296                           ;dc_motor.c: 44:     CCP2CONbits.CCP2MODE=0b1100;
  3297   006B80  50A7               	movf	167,w,c	;volatile
  3298   006B82  0BF0               	andlw	-16
  3299   006B84  090C               	iorlw	12
  3300   006B86  6EA7               	movwf	167,c	;volatile
  3301   006B88                     
  3302                           ; BSR set to: 15
  3303                           ;dc_motor.c: 45:     CCP2CONbits.EN=1;
  3304   006B88  8EA7               	bsf	167,7,c	;volatile
  3305   006B8A                     
  3306                           ; BSR set to: 15
  3307                           ;dc_motor.c: 47:     CCP3CONbits.FMT=1;
  3308   006B8A  8926               	bsf	38,4,b	;volatile
  3309                           
  3310                           ;dc_motor.c: 48:     CCP3CONbits.CCP3MODE=0b1100;
  3311   006B8C  5126               	movf	38,w,b	;volatile
  3312   006B8E  0BF0               	andlw	-16
  3313   006B90  090C               	iorlw	12
  3314   006B92  6F26               	movwf	38,b	;volatile
  3315   006B94                     
  3316                           ; BSR set to: 15
  3317                           ;dc_motor.c: 49:     CCP3CONbits.EN=1;
  3318   006B94  8F26               	bsf	38,7,b	;volatile
  3319   006B96                     
  3320                           ; BSR set to: 15
  3321                           ;dc_motor.c: 51:     CCP4CONbits.FMT=1;
  3322   006B96  8922               	bsf	34,4,b	;volatile
  3323                           
  3324                           ;dc_motor.c: 52:     CCP4CONbits.CCP4MODE=0b1100;
  3325   006B98  5122               	movf	34,w,b	;volatile
  3326   006B9A  0BF0               	andlw	-16
  3327   006B9C  090C               	iorlw	12
  3328   006B9E  6F22               	movwf	34,b	;volatile
  3329   006BA0                     
  3330                           ; BSR set to: 15
  3331                           ;dc_motor.c: 53:     CCP4CONbits.EN=1;
  3332   006BA0  8F22               	bsf	34,7,b	;volatile
  3333                           
  3334                           ;dc_motor.c: 56:     RE2PPS=0x05;
  3335   006BA2  0E05               	movlw	5
  3336   006BA4  010E               	movlb	14	; () banked
  3337   006BA6  6F74               	movwf	116,b	;volatile
  3338                           
  3339                           ;dc_motor.c: 57:     RE4PPS=0x06;
  3340   006BA8  0E06               	movlw	6
  3341   006BAA  6F76               	movwf	118,b	;volatile
  3342                           
  3343                           ;dc_motor.c: 58:     RC7PPS=0x07;
  3344   006BAC  0E07               	movlw	7
  3345   006BAE  6F69               	movwf	105,b	;volatile
  3346                           
  3347                           ;dc_motor.c: 59:     RG6PPS=0x08;
  3348   006BB0  0E08               	movlw	8
  3349   006BB2  6F88               	movwf	136,b	;volatile
  3350   006BB4                     
  3351                           ; BSR set to: 14
  3352                           ;dc_motor.c: 62:     TRISEbits.TRISE2=0;
  3353   006BB4  9485               	bcf	133,2,c	;volatile
  3354   006BB6                     
  3355                           ; BSR set to: 14
  3356                           ;dc_motor.c: 63:     TRISEbits.TRISE4=0;
  3357   006BB6  9885               	bcf	133,4,c	;volatile
  3358   006BB8                     
  3359                           ; BSR set to: 14
  3360                           ;dc_motor.c: 64:     TRISCbits.TRISC7=0;
  3361   006BB8  9E83               	bcf	131,7,c	;volatile
  3362   006BBA                     
  3363                           ; BSR set to: 14
  3364                           ;dc_motor.c: 65:     TRISGbits.TRISG6=0;
  3365   006BBA  9C87               	bcf	135,6,c	;volatile
  3366   006BBC                     
  3367                           ; BSR set to: 14
  3368                           ;dc_motor.c: 68:     LATEbits.LATE2=0;
  3369   006BBC  947D               	bcf	125,2,c	;volatile
  3370   006BBE                     
  3371                           ; BSR set to: 14
  3372                           ;dc_motor.c: 69:     LATCbits.LATC7=0;
  3373   006BBE  9E7B               	bcf	123,7,c	;volatile
  3374   006BC0                     
  3375                           ; BSR set to: 14
  3376                           ;dc_motor.c: 70:     LATEbits.LATE4=0;
  3377   006BC0  987D               	bcf	125,4,c	;volatile
  3378   006BC2                     
  3379                           ; BSR set to: 14
  3380                           ;dc_motor.c: 71:     LATGbits.LATG6=0;
  3381   006BC2  9C7F               	bcf	127,6,c	;volatile
  3382   006BC4                     
  3383                           ; BSR set to: 14
  3384   006BC4  0012               	return		;funcret
  3385   006BC6                     __end_of_initDCmotorsPWM:
  3386                           	callstack 0
  3387                           
  3388 ;; *************** function _get16bitTMR0val *****************
  3389 ;; Defined at:
  3390 ;;		line 27 in file "timers.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  timer_val       2    5[COMRAM] unsigned int 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  2    1[COMRAM] unsigned int 
  3397 ;; Registers used:
  3398 ;;		wreg, status,2, status,0
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3405 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3406 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3407 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3408 ;;Total ram usage:        6 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; Hardware stack levels required when called: 2
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text11
  3419   0071B6                     __ptext11:
  3420                           	callstack 0
  3421   0071B6                     _get16bitTMR0val:
  3422                           	callstack 28
  3423   0071B6                     
  3424                           ;timers.c: 29:     unsigned int timer_val = TMR0L;
  3425   0071B6  CFD3 F006          	movff	4051,get16bitTMR0val@timer_val	;volatile
  3426   0071BA  6A07               	clrf	(get16bitTMR0val@timer_val+1)^0,c
  3427   0071BC                     
  3428                           ;timers.c: 30:     timer_val |= (TMR0H << 8);
  3429   0071BC  50D4               	movf	212,w,c	;volatile
  3430   0071BE  6E05               	movwf	(??_get16bitTMR0val+1)^0,c
  3431   0071C0  6A04               	clrf	??_get16bitTMR0val^0,c
  3432   0071C2  5004               	movf	??_get16bitTMR0val^0,w,c
  3433   0071C4  1206               	iorwf	get16bitTMR0val@timer_val^0,f,c
  3434   0071C6  5005               	movf	(??_get16bitTMR0val+1)^0,w,c
  3435   0071C8  1207               	iorwf	(get16bitTMR0val@timer_val+1)^0,f,c
  3436   0071CA                     
  3437                           ;timers.c: 31:     return timer_val;
  3438   0071CA  C006  F002         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  3439   0071CE  C007  F003         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  3440   0071D2  0012               	return		;funcret
  3441   0071D4                     __end_of_get16bitTMR0val:
  3442                           	callstack 0
  3443                           
  3444 ;; *************** function _fullSpeedAhead *****************
  3445 ;; Defined at:
  3446 ;;		line 99 in file "dc_motor.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  3449 ;;		 -> main@motorL(9), 
  3450 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  3451 ;;		 -> main@motorR(9), 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3463 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3465 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3466 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3467 ;;Total ram usage:        5 bytes
  3468 ;; Hardware stack levels used: 1
  3469 ;; Hardware stack levels required when called: 4
  3470 ;; This function calls:
  3471 ;;		_setMotorPWM
  3472 ;; This function is called by:
  3473 ;;		_main
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text12
  3478   0068FC                     __ptext12:
  3479                           	callstack 0
  3480   0068FC                     _fullSpeedAhead:
  3481                           	callstack 26
  3482   0068FC                     
  3483                           ;dc_motor.c: 100:     mL->direction = 0;
  3484   0068FC  EE20 F001          	lfsr	2,1
  3485   006900  5015               	movf	fullSpeedAhead@mL^0,w,c
  3486   006902  26D9               	addwf	fsr2l,f,c
  3487   006904  5016               	movf	(fullSpeedAhead@mL+1)^0,w,c
  3488   006906  22DA               	addwfc	fsr2h,f,c
  3489   006908  6ADF               	clrf	indf2,c
  3490                           
  3491                           ;dc_motor.c: 101:     mR->direction = 0;
  3492   00690A  EE20 F001          	lfsr	2,1
  3493   00690E  5017               	movf	fullSpeedAhead@mR^0,w,c
  3494   006910  26D9               	addwf	fsr2l,f,c
  3495   006912  5018               	movf	(fullSpeedAhead@mR+1)^0,w,c
  3496   006914  22DA               	addwfc	fsr2h,f,c
  3497   006916  6ADF               	clrf	indf2,c
  3498                           
  3499                           ;dc_motor.c: 103:     while ((mL->power) < 100 || (mR->power) < 100){
  3500   006918  EFC4  F034         	goto	l201
  3501   00691C                     l5342:
  3502                           
  3503                           ;dc_motor.c: 104:         if ((mL->power) < 100) (mL->power) += 1;
  3504   00691C  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  3505   006920  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  3506   006924  0E64               	movlw	100
  3507   006926  60DF               	cpfslt	indf2,c
  3508   006928  EF98  F034         	goto	u5031
  3509   00692C  EF9A  F034         	goto	u5030
  3510   006930                     u5031:
  3511   006930  EF9F  F034         	goto	l5346
  3512   006934                     u5030:
  3513   006934  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  3514   006938  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  3515   00693C  2ADF               	incf	indf2,f,c
  3516   00693E                     l5346:
  3517                           
  3518                           ;dc_motor.c: 105:         if ((mR->power) < 100) (mR->power) += 1;
  3519   00693E  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  3520   006942  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  3521   006946  0E64               	movlw	100
  3522   006948  60DF               	cpfslt	indf2,c
  3523   00694A  EFA9  F034         	goto	u5041
  3524   00694E  EFAB  F034         	goto	u5040
  3525   006952                     u5041:
  3526   006952  EFB0  F034         	goto	l5350
  3527   006956                     u5040:
  3528   006956  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  3529   00695A  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  3530   00695E  2ADF               	incf	indf2,f,c
  3531   006960                     l5350:
  3532                           
  3533                           ;dc_motor.c: 107:         setMotorPWM(mL);
  3534   006960  C015  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  3535   006964  C016  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  3536   006968  EC22  F030         	call	_setMotorPWM	;wreg free
  3537   00696C                     
  3538                           ;dc_motor.c: 108:         setMotorPWM(mR);
  3539   00696C  C017  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  3540   006970  C018  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  3541   006974  EC22  F030         	call	_setMotorPWM	;wreg free
  3542   006978                     
  3543                           ;dc_motor.c: 109:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3544   006978  0E15               	movlw	21
  3545   00697A  6E19               	movwf	??_fullSpeedAhead^0,c
  3546   00697C  0EC6               	movlw	198
  3547   00697E                     u6907:
  3548   00697E  2EE8               	decfsz	wreg,f,c
  3549   006980  D7FE               	bra	u6907
  3550   006982  2E19               	decfsz	??_fullSpeedAhead^0,f,c
  3551   006984  D7FC               	bra	u6907
  3552   006986  D000               	nop2	
  3553   006988                     l201:
  3554                           
  3555                           ;dc_motor.c: 103:     while ((mL->power) < 100 || (mR->power) < 100){
  3556   006988  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  3557   00698C  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  3558   006990  0E63               	movlw	99
  3559   006992  64DF               	cpfsgt	indf2,c
  3560   006994  EFCE  F034         	goto	u5051
  3561   006998  EFD0  F034         	goto	u5050
  3562   00699C                     u5051:
  3563   00699C  EF8E  F034         	goto	l5342
  3564   0069A0                     u5050:
  3565   0069A0  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  3566   0069A4  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  3567   0069A8  0E63               	movlw	99
  3568   0069AA  64DF               	cpfsgt	indf2,c
  3569   0069AC  EFDA  F034         	goto	u5061
  3570   0069B0  EFDC  F034         	goto	u5060
  3571   0069B4                     u5061:
  3572   0069B4  EF8E  F034         	goto	l5342
  3573   0069B8                     u5060:
  3574   0069B8  0012               	return		;funcret
  3575   0069BA                     __end_of_fullSpeedAhead:
  3576                           	callstack 0
  3577                           
  3578 ;; *************** function _setMotorPWM *****************
  3579 ;; Defined at:
  3580 ;;		line 76 in file "dc_motor.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  m               2   14[COMRAM] PTR struct DC_motor
  3583 ;;		 -> main@motorR(9), main@motorL(9), 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  negDuty         1   19[COMRAM] unsigned char 
  3586 ;;  posDuty         1   18[COMRAM] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      void 
  3589 ;; Registers used:
  3590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3597 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3599 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3600 ;;Total ram usage:        6 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; Hardware stack levels required when called: 3
  3603 ;; This function calls:
  3604 ;;		___lwdiv
  3605 ;;		___wmul
  3606 ;; This function is called by:
  3607 ;;		_fullSpeedAhead
  3608 ;;		_stop
  3609 ;;		_turn_left_90
  3610 ;;		_turn_right_90
  3611 ;;		_turn_left_135
  3612 ;;		_turn_right_135
  3613 ;;		_reverse_after_read
  3614 ;;		_reverse_one_square
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text13
  3619   006044                     __ptext13:
  3620                           	callstack 0
  3621   006044                     _setMotorPWM:
  3622                           	callstack 25
  3623   006044                     
  3624                           ;dc_motor.c: 76: void setMotorPWM(struct DC_motor *m);dc_motor.c: 77: {;dc_motor.c: 78: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 80:     if(m->brakemode) {
  3625   006044  EE20 F002          	lfsr	2,2
  3626   006048  500F               	movf	setMotorPWM@m^0,w,c
  3627   00604A  26D9               	addwf	fsr2l,f,c
  3628   00604C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3629   00604E  22DA               	addwfc	fsr2h,f,c
  3630   006050  50DF               	movf	indf2,w,c
  3631   006052  B4D8               	btfsc	status,2,c
  3632   006054  EF2E  F030         	goto	u3791
  3633   006058  EF30  F030         	goto	u3790
  3634   00605C                     u3791:
  3635   00605C  EF64  F030         	goto	l4310
  3636   006060                     u3790:
  3637   006060                     
  3638                           ;dc_motor.c: 81:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  3639   006060  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  3640   006064  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3641   006068  50DF               	movf	indf2,w,c
  3642   00606A  6E11               	movwf	??_setMotorPWM^0,c
  3643   00606C  5011               	movf	??_setMotorPWM^0,w,c
  3644   00606E  6E02               	movwf	___wmul@multiplier^0,c
  3645   006070  6A03               	clrf	(___wmul@multiplier+1)^0,c
  3646   006072  EE20 F003          	lfsr	2,3
  3647   006076  500F               	movf	setMotorPWM@m^0,w,c
  3648   006078  26D9               	addwf	fsr2l,f,c
  3649   00607A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3650   00607C  22DA               	addwfc	fsr2h,f,c
  3651   00607E  CFDE F004          	movff	postinc2,___wmul@multiplicand
  3652   006082  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  3653   006086  EC87  F038         	call	___wmul	;wreg free
  3654   00608A  C002  F008         	movff	?___wmul,___lwdiv@dividend
  3655   00608E  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  3656   006092  0E00               	movlw	0
  3657   006094  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  3658   006096  0E64               	movlw	100
  3659   006098  6E0A               	movwf	___lwdiv@divisor^0,c
  3660   00609A  EC30  F036         	call	___lwdiv	;wreg free
  3661   00609E  EE20 F003          	lfsr	2,3
  3662   0060A2  500F               	movf	setMotorPWM@m^0,w,c
  3663   0060A4  26D9               	addwf	fsr2l,f,c
  3664   0060A6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3665   0060A8  22DA               	addwfc	fsr2h,f,c
  3666   0060AA  50DF               	movf	indf2,w,c
  3667   0060AC  6E12               	movwf	(??_setMotorPWM+1)^0,c
  3668   0060AE  5008               	movf	?___lwdiv^0,w,c
  3669   0060B0  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  3670   0060B2  6E13               	movwf	setMotorPWM@posDuty^0,c
  3671   0060B4                     
  3672                           ;dc_motor.c: 82:         negDuty=m->PWMperiod;
  3673   0060B4  EE20 F003          	lfsr	2,3
  3674   0060B8  500F               	movf	setMotorPWM@m^0,w,c
  3675   0060BA  26D9               	addwf	fsr2l,f,c
  3676   0060BC  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3677   0060BE  22DA               	addwfc	fsr2h,f,c
  3678   0060C0  50DF               	movf	indf2,w,c
  3679   0060C2  6E14               	movwf	setMotorPWM@negDuty^0,c
  3680                           
  3681                           ;dc_motor.c: 83:     }
  3682   0060C4  EF87  F030         	goto	l4314
  3683   0060C8                     l4310:
  3684                           
  3685                           ;dc_motor.c: 85:         posDuty=0;
  3686   0060C8  0E00               	movlw	0
  3687   0060CA  6E13               	movwf	setMotorPWM@posDuty^0,c
  3688   0060CC                     
  3689                           ;dc_motor.c: 86:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  3690   0060CC  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  3691   0060D0  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3692   0060D4  50DF               	movf	indf2,w,c
  3693   0060D6  6E11               	movwf	??_setMotorPWM^0,c
  3694   0060D8  5011               	movf	??_setMotorPWM^0,w,c
  3695   0060DA  6E02               	movwf	___wmul@multiplier^0,c
  3696   0060DC  6A03               	clrf	(___wmul@multiplier+1)^0,c
  3697   0060DE  EE20 F003          	lfsr	2,3
  3698   0060E2  500F               	movf	setMotorPWM@m^0,w,c
  3699   0060E4  26D9               	addwf	fsr2l,f,c
  3700   0060E6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3701   0060E8  22DA               	addwfc	fsr2h,f,c
  3702   0060EA  CFDE F004          	movff	postinc2,___wmul@multiplicand
  3703   0060EE  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  3704   0060F2  EC87  F038         	call	___wmul	;wreg free
  3705   0060F6  C002  F008         	movff	?___wmul,___lwdiv@dividend
  3706   0060FA  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  3707   0060FE  0E00               	movlw	0
  3708   006100  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  3709   006102  0E64               	movlw	100
  3710   006104  6E0A               	movwf	___lwdiv@divisor^0,c
  3711   006106  EC30  F036         	call	___lwdiv	;wreg free
  3712   00610A  5008               	movf	?___lwdiv^0,w,c
  3713   00610C  6E14               	movwf	setMotorPWM@negDuty^0,c
  3714   00610E                     l4314:
  3715                           
  3716                           ;dc_motor.c: 89:     if (m->direction) {
  3717   00610E  EE20 F001          	lfsr	2,1
  3718   006112  500F               	movf	setMotorPWM@m^0,w,c
  3719   006114  26D9               	addwf	fsr2l,f,c
  3720   006116  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3721   006118  22DA               	addwfc	fsr2h,f,c
  3722   00611A  50DF               	movf	indf2,w,c
  3723   00611C  B4D8               	btfsc	status,2,c
  3724   00611E  EF93  F030         	goto	u3801
  3725   006122  EF95  F030         	goto	u3800
  3726   006126                     u3801:
  3727   006126  EFB7  F030         	goto	l4318
  3728   00612A                     u3800:
  3729   00612A                     
  3730                           ;dc_motor.c: 90:         *(m->posDutyHighByte)=posDuty;
  3731   00612A  EE20 F005          	lfsr	2,5
  3732   00612E  500F               	movf	setMotorPWM@m^0,w,c
  3733   006130  26D9               	addwf	fsr2l,f,c
  3734   006132  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3735   006134  22DA               	addwfc	fsr2h,f,c
  3736   006136  CFDE F011          	movff	postinc2,??_setMotorPWM
  3737   00613A  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  3738   00613E  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  3739   006142  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3740   006146  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  3741                           
  3742                           ;dc_motor.c: 91:         *(m->negDutyHighByte)=negDuty;
  3743   00614A  EE20 F007          	lfsr	2,7
  3744   00614E  500F               	movf	setMotorPWM@m^0,w,c
  3745   006150  26D9               	addwf	fsr2l,f,c
  3746   006152  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3747   006154  22DA               	addwfc	fsr2h,f,c
  3748   006156  CFDE F011          	movff	postinc2,??_setMotorPWM
  3749   00615A  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  3750   00615E  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  3751   006162  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3752   006166  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  3753                           
  3754                           ;dc_motor.c: 92:     } else {
  3755   00616A  EFD7  F030         	goto	l198
  3756   00616E                     l4318:
  3757                           
  3758                           ;dc_motor.c: 93:         *(m->posDutyHighByte)=negDuty;
  3759   00616E  EE20 F005          	lfsr	2,5
  3760   006172  500F               	movf	setMotorPWM@m^0,w,c
  3761   006174  26D9               	addwf	fsr2l,f,c
  3762   006176  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3763   006178  22DA               	addwfc	fsr2h,f,c
  3764   00617A  CFDE F011          	movff	postinc2,??_setMotorPWM
  3765   00617E  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  3766   006182  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  3767   006186  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3768   00618A  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  3769                           
  3770                           ;dc_motor.c: 94:         *(m->negDutyHighByte)=posDuty;
  3771   00618E  EE20 F007          	lfsr	2,7
  3772   006192  500F               	movf	setMotorPWM@m^0,w,c
  3773   006194  26D9               	addwf	fsr2l,f,c
  3774   006196  5010               	movf	(setMotorPWM@m+1)^0,w,c
  3775   006198  22DA               	addwfc	fsr2h,f,c
  3776   00619A  CFDE F011          	movff	postinc2,??_setMotorPWM
  3777   00619E  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  3778   0061A2  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  3779   0061A6  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3780   0061AA  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  3781   0061AE                     l198:
  3782   0061AE  0012               	return		;funcret
  3783   0061B0                     __end_of_setMotorPWM:
  3784                           	callstack 0
  3785                           
  3786 ;; *************** function ___wmul *****************
  3787 ;; Defined at:
  3788 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  multiplier      2    1[COMRAM] unsigned int 
  3791 ;;  multiplicand    2    3[COMRAM] unsigned int 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  product         2    5[COMRAM] unsigned int 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  2    1[COMRAM] unsigned int 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0, prodl, prodh
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3803 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3806 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3807 ;;Total ram usage:        6 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; Hardware stack levels required when called: 2
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_setMotorPWM
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text14
  3818   00710E                     __ptext14:
  3819                           	callstack 0
  3820   00710E                     ___wmul:
  3821                           	callstack 25
  3822   00710E  5002               	movf	___wmul@multiplier^0,w,c
  3823   007110  0204               	mulwf	___wmul@multiplicand^0,c
  3824   007112  CFF3 F006          	movff	prodl,___wmul@product
  3825   007116  CFF4 F007          	movff	prodh,___wmul@product+1
  3826   00711A  5002               	movf	___wmul@multiplier^0,w,c
  3827   00711C  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  3828   00711E  50F3               	movf	243,w,c
  3829   007120  2607               	addwf	(___wmul@product+1)^0,f,c
  3830   007122  5003               	movf	(___wmul@multiplier+1)^0,w,c
  3831   007124  0204               	mulwf	___wmul@multiplicand^0,c
  3832   007126  50F3               	movf	243,w,c
  3833   007128  2607               	addwf	(___wmul@product+1)^0,f,c
  3834   00712A  C006  F002         	movff	___wmul@product,?___wmul
  3835   00712E  C007  F003         	movff	___wmul@product+1,?___wmul+1
  3836   007132  0012               	return		;funcret
  3837   007134                     __end_of___wmul:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function ___lwdiv *****************
  3841 ;; Defined at:
  3842 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  dividend        2    7[COMRAM] unsigned int 
  3845 ;;  divisor         2    9[COMRAM] unsigned int 
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;  quotient        2   11[COMRAM] unsigned int 
  3848 ;;  counter         1   13[COMRAM] unsigned char 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  2    7[COMRAM] unsigned int 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3859 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3861 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3862 ;;Total ram usage:        7 bytes
  3863 ;; Hardware stack levels used: 1
  3864 ;; Hardware stack levels required when called: 2
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_setMotorPWM
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text15
  3873   006C60                     __ptext15:
  3874                           	callstack 0
  3875   006C60                     ___lwdiv:
  3876                           	callstack 25
  3877   006C60  0E00               	movlw	0
  3878   006C62  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  3879   006C64  0E00               	movlw	0
  3880   006C66  6E0C               	movwf	___lwdiv@quotient^0,c
  3881   006C68  500A               	movf	___lwdiv@divisor^0,w,c
  3882   006C6A  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3883   006C6C  B4D8               	btfsc	status,2,c
  3884   006C6E  EF3B  F036         	goto	u3501
  3885   006C72  EF3D  F036         	goto	u3500
  3886   006C76                     u3501:
  3887   006C76  EF65  F036         	goto	l1049
  3888   006C7A                     u3500:
  3889   006C7A  0E01               	movlw	1
  3890   006C7C  6E0E               	movwf	___lwdiv@counter^0,c
  3891   006C7E  EF45  F036         	goto	l4144
  3892   006C82                     l4142:
  3893   006C82  90D8               	bcf	status,0,c
  3894   006C84  360A               	rlcf	___lwdiv@divisor^0,f,c
  3895   006C86  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3896   006C88  2A0E               	incf	___lwdiv@counter^0,f,c
  3897   006C8A                     l4144:
  3898   006C8A  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  3899   006C8C  EF4A  F036         	goto	u3511
  3900   006C90  EF4C  F036         	goto	u3510
  3901   006C94                     u3511:
  3902   006C94  EF41  F036         	goto	l4142
  3903   006C98                     u3510:
  3904   006C98                     l4146:
  3905   006C98  90D8               	bcf	status,0,c
  3906   006C9A  360C               	rlcf	___lwdiv@quotient^0,f,c
  3907   006C9C  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3908   006C9E  500A               	movf	___lwdiv@divisor^0,w,c
  3909   006CA0  5C08               	subwf	___lwdiv@dividend^0,w,c
  3910   006CA2  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  3911   006CA4  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3912   006CA6  A0D8               	btfss	status,0,c
  3913   006CA8  EF58  F036         	goto	u3521
  3914   006CAC  EF5A  F036         	goto	u3520
  3915   006CB0                     u3521:
  3916   006CB0  EF5F  F036         	goto	l4154
  3917   006CB4                     u3520:
  3918   006CB4  500A               	movf	___lwdiv@divisor^0,w,c
  3919   006CB6  5E08               	subwf	___lwdiv@dividend^0,f,c
  3920   006CB8  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  3921   006CBA  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3922   006CBC  800C               	bsf	___lwdiv@quotient^0,0,c
  3923   006CBE                     l4154:
  3924   006CBE  90D8               	bcf	status,0,c
  3925   006CC0  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3926   006CC2  320A               	rrcf	___lwdiv@divisor^0,f,c
  3927   006CC4  2E0E               	decfsz	___lwdiv@counter^0,f,c
  3928   006CC6  EF4C  F036         	goto	l4146
  3929   006CCA                     l1049:
  3930   006CCA  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  3931   006CCE  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3932   006CD2  0012               	return		;funcret
  3933   006CD4                     __end_of___lwdiv:
  3934                           	callstack 0
  3935                           
  3936 ;; *************** function _decide_action *****************
  3937 ;; Defined at:
  3938 ;;		line 113 in file "color.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;		None
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  i               1  123[BANK2 ] unsigned char 
  3943 ;;  rgb_comp       32   80[BANK2 ] float [8]
  3944 ;;  blue_val       20   60[BANK2 ] unsigned char [20]
  3945 ;;  green_val      20   40[BANK2 ] unsigned char [20]
  3946 ;;  red_val        20   20[BANK2 ] unsigned char [20]
  3947 ;;  clear_val      20    0[BANK2 ] unsigned char [20]
  3948 ;;  red             4  172[BANK2 ] float 
  3949 ;;  blue_r          4  140[BANK2 ] float 
  3950 ;;  green_r         4  136[BANK2 ] float 
  3951 ;;  red_r           4  132[BANK2 ] float 
  3952 ;;  blue            4  128[BANK2 ] float 
  3953 ;;  green           4  124[BANK2 ] float 
  3954 ;;  pgreen_val      2  117[BANK2 ] PTR unsigned char 
  3955 ;;		 -> decide_action@green_val(20), 
  3956 ;;  pblue_val       2  115[BANK2 ] PTR unsigned char 
  3957 ;;		 -> decide_action@blue_val(20), 
  3958 ;;  pred_val        2  113[BANK2 ] PTR unsigned char 
  3959 ;;		 -> decide_action@red_val(20), 
  3960 ;;  pclear_val      2    0        PTR unsigned char 
  3961 ;;		 -> decide_action@clear_val(20), 
  3962 ;;  action          1  112[BANK2 ] unsigned char 
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      unsigned char 
  3965 ;; Registers used:
  3966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;      Locals:         0       0       0     176       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;      Totals:         2       0       0     176       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;Total ram usage:      178 bytes
  3977 ;; Hardware stack levels used: 1
  3978 ;; Hardware stack levels required when called: 7
  3979 ;; This function calls:
  3980 ;;		___fladd
  3981 ;;		___fldiv
  3982 ;;		___flge
  3983 ;;		___flsub
  3984 ;;		___xxtofl
  3985 ;;		_color_read_Blue
  3986 ;;		_color_read_Green
  3987 ;;		_color_read_Red
  3988 ;;		_color_writetoaddr
  3989 ;;		_powf
  3990 ;;		_sendStringSerial4
  3991 ;;		_sprintf
  3992 ;;		_sqrtf
  3993 ;; This function is called by:
  3994 ;;		_main
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text16
  3999   003326                     __ptext16:
  4000                           	callstack 0
  4001   003326                     _decide_action:
  4002                           	callstack 23
  4003   003326                     
  4004                           ;color.c: 125:     pred_val = &red_val[0];
  4005   003326  0E14               	movlw	low decide_action@red_val
  4006   003328  0102               	movlb	2	; () banked
  4007   00332A  6F71               	movwf	decide_action@pred_val& (0+255),b
  4008   00332C  0E02               	movlw	high decide_action@red_val
  4009   00332E  6F72               	movwf	(decide_action@pred_val+1)& (0+255),b
  4010                           
  4011                           ;color.c: 126:     pgreen_val = &green_val[0];
  4012   003330  0E28               	movlw	low decide_action@green_val
  4013   003332  6F75               	movwf	decide_action@pgreen_val& (0+255),b
  4014   003334  0E02               	movlw	high decide_action@green_val
  4015   003336  6F76               	movwf	(decide_action@pgreen_val+1)& (0+255),b
  4016                           
  4017                           ;color.c: 127:     pblue_val = &blue_val[0];
  4018   003338  0E3C               	movlw	low decide_action@blue_val
  4019   00333A  6F73               	movwf	decide_action@pblue_val& (0+255),b
  4020   00333C  0E02               	movlw	high decide_action@blue_val
  4021   00333E  6F74               	movwf	(decide_action@pblue_val+1)& (0+255),b
  4022   003340                     
  4023                           ; BSR set to: 2
  4024                           ;color.c: 130:     float red, green, blue;;color.c: 131:     float red_r, green_r, blue_
      +                          r;;color.c: 132:     float rgb_comp[8];;color.c: 133:     char action;;color.c: 136:    
      +                           color_writetoaddr(0x01, 0xD5);
  4025   003340  0ED5               	movlw	213
  4026   003342  6E04               	movwf	color_writetoaddr@value^0,c
  4027   003344  0E01               	movlw	1
  4028   003346  ECAC  F038         	call	_color_writetoaddr
  4029   00334A                     
  4030                           ;color.c: 137:     color_writetoaddr(0x03, 0xAB);
  4031   00334A  0EAB               	movlw	171
  4032   00334C  6E04               	movwf	color_writetoaddr@value^0,c
  4033   00334E  0E03               	movlw	3
  4034   003350  ECAC  F038         	call	_color_writetoaddr
  4035   003354                     
  4036                           ;color.c: 138:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4037   003354  0E11               	movlw	17
  4038   003356  6E59               	movwf	(??_decide_action+1)^0,c
  4039   003358  0E3C               	movlw	60
  4040   00335A  6E58               	movwf	??_decide_action^0,c
  4041   00335C  0ECB               	movlw	203
  4042   00335E                     u6917:
  4043   00335E  2EE8               	decfsz	wreg,f,c
  4044   003360  D7FE               	bra	u6917
  4045   003362  2E58               	decfsz	??_decide_action^0,f,c
  4046   003364  D7FC               	bra	u6917
  4047   003366  2E59               	decfsz	(??_decide_action+1)^0,f,c
  4048   003368  D7FA               	bra	u6917
  4049   00336A  0000               	nop	
  4050   00336C                     
  4051                           ;color.c: 140:     red = color_read_Red();
  4052   00336C  ECCC  F036         	call	_color_read_Red	;wreg free
  4053   003370  C006  F00D         	movff	?_color_read_Red,___xxtofl@val
  4054   003374  C007  F00E         	movff	?_color_read_Red+1,___xxtofl@val+1
  4055   003378  6A0F               	clrf	(___xxtofl@val+2)^0,c
  4056   00337A  6A10               	clrf	(___xxtofl@val+3)^0,c
  4057   00337C  0E00               	movlw	0
  4058   00337E  EC73  F02E         	call	___xxtofl
  4059   003382  C00D  F2AC         	movff	?___xxtofl,decide_action@red
  4060   003386  C00E  F2AD         	movff	?___xxtofl+1,decide_action@red+1
  4061   00338A  C00F  F2AE         	movff	?___xxtofl+2,decide_action@red+2
  4062   00338E  C010  F2AF         	movff	?___xxtofl+3,decide_action@red+3
  4063   003392                     
  4064                           ;color.c: 141:     green = color_read_Green();
  4065   003392  ECF4  F036         	call	_color_read_Green	;wreg free
  4066   003396  C006  F00D         	movff	?_color_read_Green,___xxtofl@val
  4067   00339A  C007  F00E         	movff	?_color_read_Green+1,___xxtofl@val+1
  4068   00339E  6A0F               	clrf	(___xxtofl@val+2)^0,c
  4069   0033A0  6A10               	clrf	(___xxtofl@val+3)^0,c
  4070   0033A2  0E00               	movlw	0
  4071   0033A4  EC73  F02E         	call	___xxtofl
  4072   0033A8  C00D  F27C         	movff	?___xxtofl,decide_action@green
  4073   0033AC  C00E  F27D         	movff	?___xxtofl+1,decide_action@green+1
  4074   0033B0  C00F  F27E         	movff	?___xxtofl+2,decide_action@green+2
  4075   0033B4  C010  F27F         	movff	?___xxtofl+3,decide_action@green+3
  4076   0033B8                     
  4077                           ;color.c: 142:     blue = color_read_Blue();
  4078   0033B8  EC44  F037         	call	_color_read_Blue	;wreg free
  4079   0033BC  C006  F00D         	movff	?_color_read_Blue,___xxtofl@val
  4080   0033C0  C007  F00E         	movff	?_color_read_Blue+1,___xxtofl@val+1
  4081   0033C4  6A0F               	clrf	(___xxtofl@val+2)^0,c
  4082   0033C6  6A10               	clrf	(___xxtofl@val+3)^0,c
  4083   0033C8  0E00               	movlw	0
  4084   0033CA  EC73  F02E         	call	___xxtofl
  4085   0033CE  C00D  F280         	movff	?___xxtofl,decide_action@blue
  4086   0033D2  C00E  F281         	movff	?___xxtofl+1,decide_action@blue+1
  4087   0033D6  C00F  F282         	movff	?___xxtofl+2,decide_action@blue+2
  4088   0033DA  C010  F283         	movff	?___xxtofl+3,decide_action@blue+3
  4089   0033DE                     
  4090                           ;color.c: 144:     sprintf(red_val,"red = %d \r\n",red);
  4091   0033DE  0E14               	movlw	low decide_action@red_val
  4092   0033E0  6E1B               	movwf	sprintf@s^0,c
  4093   0033E2  0E02               	movlw	high decide_action@red_val
  4094   0033E4  6E1C               	movwf	(sprintf@s+1)^0,c
  4095   0033E6  0EC8               	movlw	low STR_1
  4096   0033E8  6E1D               	movwf	sprintf@fmt^0,c
  4097   0033EA  C2AC  F01E         	movff	decide_action@red,?_sprintf+3
  4098   0033EE  C2AD  F01F         	movff	decide_action@red+1,?_sprintf+4
  4099   0033F2  C2AE  F020         	movff	decide_action@red+2,?_sprintf+5
  4100   0033F6  C2AF  F021         	movff	decide_action@red+3,?_sprintf+6
  4101   0033FA  ECD5  F037         	call	_sprintf	;wreg free
  4102   0033FE                     
  4103                           ;color.c: 145:     sendStringSerial4(pred_val);
  4104   0033FE  C271  F003         	movff	decide_action@pred_val,sendStringSerial4@string
  4105   003402  C272  F004         	movff	decide_action@pred_val+1,sendStringSerial4@string+1
  4106   003406  EC46  F038         	call	_sendStringSerial4	;wreg free
  4107   00340A                     
  4108                           ;color.c: 146:     sprintf(green_val,"green = %d \r\n",green);
  4109   00340A  0E28               	movlw	low decide_action@green_val
  4110   00340C  6E1B               	movwf	sprintf@s^0,c
  4111   00340E  0E02               	movlw	high decide_action@green_val
  4112   003410  6E1C               	movwf	(sprintf@s+1)^0,c
  4113   003412  0EAD               	movlw	low STR_2
  4114   003414  6E1D               	movwf	sprintf@fmt^0,c
  4115   003416  C27C  F01E         	movff	decide_action@green,?_sprintf+3
  4116   00341A  C27D  F01F         	movff	decide_action@green+1,?_sprintf+4
  4117   00341E  C27E  F020         	movff	decide_action@green+2,?_sprintf+5
  4118   003422  C27F  F021         	movff	decide_action@green+3,?_sprintf+6
  4119   003426  ECD5  F037         	call	_sprintf	;wreg free
  4120   00342A                     
  4121                           ;color.c: 147:     sendStringSerial4(pgreen_val);
  4122   00342A  C275  F003         	movff	decide_action@pgreen_val,sendStringSerial4@string
  4123   00342E  C276  F004         	movff	decide_action@pgreen_val+1,sendStringSerial4@string+1
  4124   003432  EC46  F038         	call	_sendStringSerial4	;wreg free
  4125   003436                     
  4126                           ;color.c: 148:     sprintf(blue_val,"blue = %d \r\n\r\n",blue);
  4127   003436  0E3C               	movlw	low decide_action@blue_val
  4128   003438  6E1B               	movwf	sprintf@s^0,c
  4129   00343A  0E02               	movlw	high decide_action@blue_val
  4130   00343C  6E1C               	movwf	(sprintf@s+1)^0,c
  4131   00343E  0E90               	movlw	low STR_3
  4132   003440  6E1D               	movwf	sprintf@fmt^0,c
  4133   003442  C280  F01E         	movff	decide_action@blue,?_sprintf+3
  4134   003446  C281  F01F         	movff	decide_action@blue+1,?_sprintf+4
  4135   00344A  C282  F020         	movff	decide_action@blue+2,?_sprintf+5
  4136   00344E  C283  F021         	movff	decide_action@blue+3,?_sprintf+6
  4137   003452  ECD5  F037         	call	_sprintf	;wreg free
  4138   003456                     
  4139                           ;color.c: 149:     sendStringSerial4(pblue_val);
  4140   003456  C273  F003         	movff	decide_action@pblue_val,sendStringSerial4@string
  4141   00345A  C274  F004         	movff	decide_action@pblue_val+1,sendStringSerial4@string+1
  4142   00345E  EC46  F038         	call	_sendStringSerial4	;wreg free
  4143   003462                     
  4144                           ;color.c: 152:     if(red < 666){ red = 0; }else{red -= 666;}
  4145   003462  C2AC  F04C         	movff	decide_action@red,___flge@ff1
  4146   003466  C2AD  F04D         	movff	decide_action@red+1,___flge@ff1+1
  4147   00346A  C2AE  F04E         	movff	decide_action@red+2,___flge@ff1+2
  4148   00346E  C2AF  F04F         	movff	decide_action@red+3,___flge@ff1+3
  4149   003472  0E00               	movlw	0
  4150   003474  6E50               	movwf	___flge@ff2^0,c
  4151   003476  0E80               	movlw	128
  4152   003478  6E51               	movwf	(___flge@ff2+1)^0,c
  4153   00347A  0E26               	movlw	38
  4154   00347C  6E52               	movwf	(___flge@ff2+2)^0,c
  4155   00347E  0E44               	movlw	68
  4156   003480  6E53               	movwf	(___flge@ff2+3)^0,c
  4157   003482  ECD8  F030         	call	___flge	;wreg free
  4158   003486  B0D8               	btfsc	status,0,c
  4159   003488  EF48  F01A         	goto	u6651
  4160   00348C  EF4A  F01A         	goto	u6650
  4161   003490                     u6651:
  4162   003490  EF55  F01A         	goto	l7542
  4163   003494                     u6650:
  4164   003494  0E00               	movlw	0
  4165   003496  0102               	movlb	2	; () banked
  4166   003498  6FAC               	movwf	decide_action@red& (0+255),b
  4167   00349A  0E00               	movlw	0
  4168   00349C  6FAD               	movwf	(decide_action@red+1)& (0+255),b
  4169   00349E  0E00               	movlw	0
  4170   0034A0  6FAE               	movwf	(decide_action@red+2)& (0+255),b
  4171   0034A2  0E00               	movlw	0
  4172   0034A4  6FAF               	movwf	(decide_action@red+3)& (0+255),b
  4173   0034A6  EF6F  F01A         	goto	l84
  4174   0034AA                     l7542:
  4175   0034AA  C2AC  F044         	movff	decide_action@red,___flsub@b
  4176   0034AE  C2AD  F045         	movff	decide_action@red+1,___flsub@b+1
  4177   0034B2  C2AE  F046         	movff	decide_action@red+2,___flsub@b+2
  4178   0034B6  C2AF  F047         	movff	decide_action@red+3,___flsub@b+3
  4179   0034BA  0E00               	movlw	0
  4180   0034BC  6E48               	movwf	___flsub@a^0,c
  4181   0034BE  0E80               	movlw	128
  4182   0034C0  6E49               	movwf	(___flsub@a+1)^0,c
  4183   0034C2  0E26               	movlw	38
  4184   0034C4  6E4A               	movwf	(___flsub@a+2)^0,c
  4185   0034C6  0E44               	movlw	68
  4186   0034C8  6E4B               	movwf	(___flsub@a+3)^0,c
  4187   0034CA  EC91  F037         	call	___flsub	;wreg free
  4188   0034CE  C044  F2AC         	movff	?___flsub,decide_action@red
  4189   0034D2  C045  F2AD         	movff	?___flsub+1,decide_action@red+1
  4190   0034D6  C046  F2AE         	movff	?___flsub+2,decide_action@red+2
  4191   0034DA  C047  F2AF         	movff	?___flsub+3,decide_action@red+3
  4192   0034DE                     l84:
  4193                           
  4194                           ;color.c: 153:     if(green < 446){ green = 0; }else{red -= 446;}
  4195   0034DE  C27C  F04C         	movff	decide_action@green,___flge@ff1
  4196   0034E2  C27D  F04D         	movff	decide_action@green+1,___flge@ff1+1
  4197   0034E6  C27E  F04E         	movff	decide_action@green+2,___flge@ff1+2
  4198   0034EA  C27F  F04F         	movff	decide_action@green+3,___flge@ff1+3
  4199   0034EE  0E00               	movlw	0
  4200   0034F0  6E50               	movwf	___flge@ff2^0,c
  4201   0034F2  0E00               	movlw	0
  4202   0034F4  6E51               	movwf	(___flge@ff2+1)^0,c
  4203   0034F6  0EDF               	movlw	223
  4204   0034F8  6E52               	movwf	(___flge@ff2+2)^0,c
  4205   0034FA  0E43               	movlw	67
  4206   0034FC  6E53               	movwf	(___flge@ff2+3)^0,c
  4207   0034FE  ECD8  F030         	call	___flge	;wreg free
  4208   003502  B0D8               	btfsc	status,0,c
  4209   003504  EF86  F01A         	goto	u6661
  4210   003508  EF88  F01A         	goto	u6660
  4211   00350C                     u6661:
  4212   00350C  EF93  F01A         	goto	l7546
  4213   003510                     u6660:
  4214   003510  0E00               	movlw	0
  4215   003512  0102               	movlb	2	; () banked
  4216   003514  6F7C               	movwf	decide_action@green& (0+255),b
  4217   003516  0E00               	movlw	0
  4218   003518  6F7D               	movwf	(decide_action@green+1)& (0+255),b
  4219   00351A  0E00               	movlw	0
  4220   00351C  6F7E               	movwf	(decide_action@green+2)& (0+255),b
  4221   00351E  0E00               	movlw	0
  4222   003520  6F7F               	movwf	(decide_action@green+3)& (0+255),b
  4223   003522  EFAD  F01A         	goto	l86
  4224   003526                     l7546:
  4225   003526  C2AC  F044         	movff	decide_action@red,___flsub@b
  4226   00352A  C2AD  F045         	movff	decide_action@red+1,___flsub@b+1
  4227   00352E  C2AE  F046         	movff	decide_action@red+2,___flsub@b+2
  4228   003532  C2AF  F047         	movff	decide_action@red+3,___flsub@b+3
  4229   003536  0E00               	movlw	0
  4230   003538  6E48               	movwf	___flsub@a^0,c
  4231   00353A  0E00               	movlw	0
  4232   00353C  6E49               	movwf	(___flsub@a+1)^0,c
  4233   00353E  0EDF               	movlw	223
  4234   003540  6E4A               	movwf	(___flsub@a+2)^0,c
  4235   003542  0E43               	movlw	67
  4236   003544  6E4B               	movwf	(___flsub@a+3)^0,c
  4237   003546  EC91  F037         	call	___flsub	;wreg free
  4238   00354A  C044  F2AC         	movff	?___flsub,decide_action@red
  4239   00354E  C045  F2AD         	movff	?___flsub+1,decide_action@red+1
  4240   003552  C046  F2AE         	movff	?___flsub+2,decide_action@red+2
  4241   003556  C047  F2AF         	movff	?___flsub+3,decide_action@red+3
  4242   00355A                     l86:
  4243                           
  4244                           ;color.c: 154:     if(blue < 295){ blue = 0; }else{red -= 295;}
  4245   00355A  C280  F04C         	movff	decide_action@blue,___flge@ff1
  4246   00355E  C281  F04D         	movff	decide_action@blue+1,___flge@ff1+1
  4247   003562  C282  F04E         	movff	decide_action@blue+2,___flge@ff1+2
  4248   003566  C283  F04F         	movff	decide_action@blue+3,___flge@ff1+3
  4249   00356A  0E00               	movlw	0
  4250   00356C  6E50               	movwf	___flge@ff2^0,c
  4251   00356E  0E80               	movlw	128
  4252   003570  6E51               	movwf	(___flge@ff2+1)^0,c
  4253   003572  0E93               	movlw	147
  4254   003574  6E52               	movwf	(___flge@ff2+2)^0,c
  4255   003576  0E43               	movlw	67
  4256   003578  6E53               	movwf	(___flge@ff2+3)^0,c
  4257   00357A  ECD8  F030         	call	___flge	;wreg free
  4258   00357E  B0D8               	btfsc	status,0,c
  4259   003580  EFC4  F01A         	goto	u6671
  4260   003584  EFC6  F01A         	goto	u6670
  4261   003588                     u6671:
  4262   003588  EFD1  F01A         	goto	l7550
  4263   00358C                     u6670:
  4264   00358C  0E00               	movlw	0
  4265   00358E  0102               	movlb	2	; () banked
  4266   003590  6F80               	movwf	decide_action@blue& (0+255),b
  4267   003592  0E00               	movlw	0
  4268   003594  6F81               	movwf	(decide_action@blue+1)& (0+255),b
  4269   003596  0E00               	movlw	0
  4270   003598  6F82               	movwf	(decide_action@blue+2)& (0+255),b
  4271   00359A  0E00               	movlw	0
  4272   00359C  6F83               	movwf	(decide_action@blue+3)& (0+255),b
  4273   00359E  EFEB  F01A         	goto	l88
  4274   0035A2                     l7550:
  4275   0035A2  C2AC  F044         	movff	decide_action@red,___flsub@b
  4276   0035A6  C2AD  F045         	movff	decide_action@red+1,___flsub@b+1
  4277   0035AA  C2AE  F046         	movff	decide_action@red+2,___flsub@b+2
  4278   0035AE  C2AF  F047         	movff	decide_action@red+3,___flsub@b+3
  4279   0035B2  0E00               	movlw	0
  4280   0035B4  6E48               	movwf	___flsub@a^0,c
  4281   0035B6  0E80               	movlw	128
  4282   0035B8  6E49               	movwf	(___flsub@a+1)^0,c
  4283   0035BA  0E93               	movlw	147
  4284   0035BC  6E4A               	movwf	(___flsub@a+2)^0,c
  4285   0035BE  0E43               	movlw	67
  4286   0035C0  6E4B               	movwf	(___flsub@a+3)^0,c
  4287   0035C2  EC91  F037         	call	___flsub	;wreg free
  4288   0035C6  C044  F2AC         	movff	?___flsub,decide_action@red
  4289   0035CA  C045  F2AD         	movff	?___flsub+1,decide_action@red+1
  4290   0035CE  C046  F2AE         	movff	?___flsub+2,decide_action@red+2
  4291   0035D2  C047  F2AF         	movff	?___flsub+3,decide_action@red+3
  4292   0035D6                     l88:
  4293                           
  4294                           ;color.c: 156:     red = red/1341;
  4295   0035D6  C2AC  F02B         	movff	decide_action@red,___fldiv@b
  4296   0035DA  C2AD  F02C         	movff	decide_action@red+1,___fldiv@b+1
  4297   0035DE  C2AE  F02D         	movff	decide_action@red+2,___fldiv@b+2
  4298   0035E2  C2AF  F02E         	movff	decide_action@red+3,___fldiv@b+3
  4299   0035E6  0E00               	movlw	0
  4300   0035E8  6E2F               	movwf	___fldiv@a^0,c
  4301   0035EA  0EA0               	movlw	160
  4302   0035EC  6E30               	movwf	(___fldiv@a+1)^0,c
  4303   0035EE  0EA7               	movlw	167
  4304   0035F0  6E31               	movwf	(___fldiv@a+2)^0,c
  4305   0035F2  0E44               	movlw	68
  4306   0035F4  6E32               	movwf	(___fldiv@a+3)^0,c
  4307   0035F6  EC26  F02A         	call	___fldiv	;wreg free
  4308   0035FA  C02B  F2AC         	movff	?___fldiv,decide_action@red
  4309   0035FE  C02C  F2AD         	movff	?___fldiv+1,decide_action@red+1
  4310   003602  C02D  F2AE         	movff	?___fldiv+2,decide_action@red+2
  4311   003606  C02E  F2AF         	movff	?___fldiv+3,decide_action@red+3
  4312                           
  4313                           ;color.c: 157:     green = green/795;
  4314   00360A  C27C  F02B         	movff	decide_action@green,___fldiv@b
  4315   00360E  C27D  F02C         	movff	decide_action@green+1,___fldiv@b+1
  4316   003612  C27E  F02D         	movff	decide_action@green+2,___fldiv@b+2
  4317   003616  C27F  F02E         	movff	decide_action@green+3,___fldiv@b+3
  4318   00361A  0E00               	movlw	0
  4319   00361C  6E2F               	movwf	___fldiv@a^0,c
  4320   00361E  0EC0               	movlw	192
  4321   003620  6E30               	movwf	(___fldiv@a+1)^0,c
  4322   003622  0E46               	movlw	70
  4323   003624  6E31               	movwf	(___fldiv@a+2)^0,c
  4324   003626  0E44               	movlw	68
  4325   003628  6E32               	movwf	(___fldiv@a+3)^0,c
  4326   00362A  EC26  F02A         	call	___fldiv	;wreg free
  4327   00362E  C02B  F27C         	movff	?___fldiv,decide_action@green
  4328   003632  C02C  F27D         	movff	?___fldiv+1,decide_action@green+1
  4329   003636  C02D  F27E         	movff	?___fldiv+2,decide_action@green+2
  4330   00363A  C02E  F27F         	movff	?___fldiv+3,decide_action@green+3
  4331                           
  4332                           ;color.c: 158:     blue = blue/756;
  4333   00363E  C280  F02B         	movff	decide_action@blue,___fldiv@b
  4334   003642  C281  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  4335   003646  C282  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  4336   00364A  C283  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  4337   00364E  0E00               	movlw	0
  4338   003650  6E2F               	movwf	___fldiv@a^0,c
  4339   003652  0E00               	movlw	0
  4340   003654  6E30               	movwf	(___fldiv@a+1)^0,c
  4341   003656  0E3D               	movlw	61
  4342   003658  6E31               	movwf	(___fldiv@a+2)^0,c
  4343   00365A  0E44               	movlw	68
  4344   00365C  6E32               	movwf	(___fldiv@a+3)^0,c
  4345   00365E  EC26  F02A         	call	___fldiv	;wreg free
  4346   003662  C02B  F280         	movff	?___fldiv,decide_action@blue
  4347   003666  C02C  F281         	movff	?___fldiv+1,decide_action@blue+1
  4348   00366A  C02D  F282         	movff	?___fldiv+2,decide_action@blue+2
  4349   00366E  C02E  F283         	movff	?___fldiv+3,decide_action@blue+3
  4350   003672                     
  4351                           ;color.c: 160:     sprintf(red_val,"red = %d \r\n",red);
  4352   003672  0E14               	movlw	low decide_action@red_val
  4353   003674  6E1B               	movwf	sprintf@s^0,c
  4354   003676  0E02               	movlw	high decide_action@red_val
  4355   003678  6E1C               	movwf	(sprintf@s+1)^0,c
  4356   00367A  0EC8               	movlw	low STR_1
  4357   00367C  6E1D               	movwf	sprintf@fmt^0,c
  4358   00367E  C2AC  F01E         	movff	decide_action@red,?_sprintf+3
  4359   003682  C2AD  F01F         	movff	decide_action@red+1,?_sprintf+4
  4360   003686  C2AE  F020         	movff	decide_action@red+2,?_sprintf+5
  4361   00368A  C2AF  F021         	movff	decide_action@red+3,?_sprintf+6
  4362   00368E  ECD5  F037         	call	_sprintf	;wreg free
  4363   003692                     
  4364                           ;color.c: 161:     sendStringSerial4(pred_val);
  4365   003692  C271  F003         	movff	decide_action@pred_val,sendStringSerial4@string
  4366   003696  C272  F004         	movff	decide_action@pred_val+1,sendStringSerial4@string+1
  4367   00369A  EC46  F038         	call	_sendStringSerial4	;wreg free
  4368   00369E                     
  4369                           ;color.c: 162:     sprintf(green_val,"green = %d \r\n",green);
  4370   00369E  0E28               	movlw	low decide_action@green_val
  4371   0036A0  6E1B               	movwf	sprintf@s^0,c
  4372   0036A2  0E02               	movlw	high decide_action@green_val
  4373   0036A4  6E1C               	movwf	(sprintf@s+1)^0,c
  4374   0036A6  0EAD               	movlw	low STR_2
  4375   0036A8  6E1D               	movwf	sprintf@fmt^0,c
  4376   0036AA  C27C  F01E         	movff	decide_action@green,?_sprintf+3
  4377   0036AE  C27D  F01F         	movff	decide_action@green+1,?_sprintf+4
  4378   0036B2  C27E  F020         	movff	decide_action@green+2,?_sprintf+5
  4379   0036B6  C27F  F021         	movff	decide_action@green+3,?_sprintf+6
  4380   0036BA  ECD5  F037         	call	_sprintf	;wreg free
  4381   0036BE                     
  4382                           ;color.c: 163:     sendStringSerial4(pgreen_val);
  4383   0036BE  C275  F003         	movff	decide_action@pgreen_val,sendStringSerial4@string
  4384   0036C2  C276  F004         	movff	decide_action@pgreen_val+1,sendStringSerial4@string+1
  4385   0036C6  EC46  F038         	call	_sendStringSerial4	;wreg free
  4386   0036CA                     
  4387                           ;color.c: 164:     sprintf(blue_val,"blue = %d \r\n\r\n",blue);
  4388   0036CA  0E3C               	movlw	low decide_action@blue_val
  4389   0036CC  6E1B               	movwf	sprintf@s^0,c
  4390   0036CE  0E02               	movlw	high decide_action@blue_val
  4391   0036D0  6E1C               	movwf	(sprintf@s+1)^0,c
  4392   0036D2  0E90               	movlw	low STR_3
  4393   0036D4  6E1D               	movwf	sprintf@fmt^0,c
  4394   0036D6  C280  F01E         	movff	decide_action@blue,?_sprintf+3
  4395   0036DA  C281  F01F         	movff	decide_action@blue+1,?_sprintf+4
  4396   0036DE  C282  F020         	movff	decide_action@blue+2,?_sprintf+5
  4397   0036E2  C283  F021         	movff	decide_action@blue+3,?_sprintf+6
  4398   0036E6  ECD5  F037         	call	_sprintf	;wreg free
  4399   0036EA                     
  4400                           ;color.c: 165:     sendStringSerial4(pblue_val);
  4401   0036EA  C273  F003         	movff	decide_action@pblue_val,sendStringSerial4@string
  4402   0036EE  C274  F004         	movff	decide_action@pblue_val+1,sendStringSerial4@string+1
  4403   0036F2  EC46  F038         	call	_sendStringSerial4	;wreg free
  4404   0036F6                     
  4405                           ;color.c: 168:     red_r = red / (red + green + blue);
  4406   0036F6  C27C  F006         	movff	decide_action@green,___fladd@a
  4407   0036FA  C27D  F007         	movff	decide_action@green+1,___fladd@a+1
  4408   0036FE  C27E  F008         	movff	decide_action@green+2,___fladd@a+2
  4409   003702  C27F  F009         	movff	decide_action@green+3,___fladd@a+3
  4410   003706  C2AC  F002         	movff	decide_action@red,___fladd@b
  4411   00370A  C2AD  F003         	movff	decide_action@red+1,___fladd@b+1
  4412   00370E  C2AE  F004         	movff	decide_action@red+2,___fladd@b+2
  4413   003712  C2AF  F005         	movff	decide_action@red+3,___fladd@b+3
  4414   003716  ECC2  F023         	call	___fladd	;wreg free
  4415   00371A  C002  F277         	movff	?___fladd,_decide_action$3098
  4416   00371E  C003  F278         	movff	?___fladd+1,_decide_action$3098+1
  4417   003722  C004  F279         	movff	?___fladd+2,_decide_action$3098+2
  4418   003726  C005  F27A         	movff	?___fladd+3,_decide_action$3098+3
  4419   00372A                     
  4420                           ;color.c: 168:     red_r = red / (red + green + blue);
  4421   00372A  C2AC  F02B         	movff	decide_action@red,___fldiv@b
  4422   00372E  C2AD  F02C         	movff	decide_action@red+1,___fldiv@b+1
  4423   003732  C2AE  F02D         	movff	decide_action@red+2,___fldiv@b+2
  4424   003736  C2AF  F02E         	movff	decide_action@red+3,___fldiv@b+3
  4425   00373A  C280  F006         	movff	decide_action@blue,___fladd@a
  4426   00373E  C281  F007         	movff	decide_action@blue+1,___fladd@a+1
  4427   003742  C282  F008         	movff	decide_action@blue+2,___fladd@a+2
  4428   003746  C283  F009         	movff	decide_action@blue+3,___fladd@a+3
  4429   00374A  C277  F002         	movff	_decide_action$3098,___fladd@b
  4430   00374E  C278  F003         	movff	_decide_action$3098+1,___fladd@b+1
  4431   003752  C279  F004         	movff	_decide_action$3098+2,___fladd@b+2
  4432   003756  C27A  F005         	movff	_decide_action$3098+3,___fladd@b+3
  4433   00375A  ECC2  F023         	call	___fladd	;wreg free
  4434   00375E  C002  F02F         	movff	?___fladd,___fldiv@a
  4435   003762  C003  F030         	movff	?___fladd+1,___fldiv@a+1
  4436   003766  C004  F031         	movff	?___fladd+2,___fldiv@a+2
  4437   00376A  C005  F032         	movff	?___fladd+3,___fldiv@a+3
  4438   00376E  EC26  F02A         	call	___fldiv	;wreg free
  4439   003772  C02B  F284         	movff	?___fldiv,decide_action@red_r
  4440   003776  C02C  F285         	movff	?___fldiv+1,decide_action@red_r+1
  4441   00377A  C02D  F286         	movff	?___fldiv+2,decide_action@red_r+2
  4442   00377E  C02E  F287         	movff	?___fldiv+3,decide_action@red_r+3
  4443   003782                     
  4444                           ;color.c: 169:     green_r = green / (red + green + blue);
  4445   003782  C27C  F006         	movff	decide_action@green,___fladd@a
  4446   003786  C27D  F007         	movff	decide_action@green+1,___fladd@a+1
  4447   00378A  C27E  F008         	movff	decide_action@green+2,___fladd@a+2
  4448   00378E  C27F  F009         	movff	decide_action@green+3,___fladd@a+3
  4449   003792  C2AC  F002         	movff	decide_action@red,___fladd@b
  4450   003796  C2AD  F003         	movff	decide_action@red+1,___fladd@b+1
  4451   00379A  C2AE  F004         	movff	decide_action@red+2,___fladd@b+2
  4452   00379E  C2AF  F005         	movff	decide_action@red+3,___fladd@b+3
  4453   0037A2  ECC2  F023         	call	___fladd	;wreg free
  4454   0037A6  C002  F277         	movff	?___fladd,_decide_action$3098
  4455   0037AA  C003  F278         	movff	?___fladd+1,_decide_action$3098+1
  4456   0037AE  C004  F279         	movff	?___fladd+2,_decide_action$3098+2
  4457   0037B2  C005  F27A         	movff	?___fladd+3,_decide_action$3098+3
  4458   0037B6                     
  4459                           ;color.c: 169:     green_r = green / (red + green + blue);
  4460   0037B6  C27C  F02B         	movff	decide_action@green,___fldiv@b
  4461   0037BA  C27D  F02C         	movff	decide_action@green+1,___fldiv@b+1
  4462   0037BE  C27E  F02D         	movff	decide_action@green+2,___fldiv@b+2
  4463   0037C2  C27F  F02E         	movff	decide_action@green+3,___fldiv@b+3
  4464   0037C6  C280  F006         	movff	decide_action@blue,___fladd@a
  4465   0037CA  C281  F007         	movff	decide_action@blue+1,___fladd@a+1
  4466   0037CE  C282  F008         	movff	decide_action@blue+2,___fladd@a+2
  4467   0037D2  C283  F009         	movff	decide_action@blue+3,___fladd@a+3
  4468   0037D6  C277  F002         	movff	_decide_action$3098,___fladd@b
  4469   0037DA  C278  F003         	movff	_decide_action$3098+1,___fladd@b+1
  4470   0037DE  C279  F004         	movff	_decide_action$3098+2,___fladd@b+2
  4471   0037E2  C27A  F005         	movff	_decide_action$3098+3,___fladd@b+3
  4472   0037E6  ECC2  F023         	call	___fladd	;wreg free
  4473   0037EA  C002  F02F         	movff	?___fladd,___fldiv@a
  4474   0037EE  C003  F030         	movff	?___fladd+1,___fldiv@a+1
  4475   0037F2  C004  F031         	movff	?___fladd+2,___fldiv@a+2
  4476   0037F6  C005  F032         	movff	?___fladd+3,___fldiv@a+3
  4477   0037FA  EC26  F02A         	call	___fldiv	;wreg free
  4478   0037FE  C02B  F288         	movff	?___fldiv,decide_action@green_r
  4479   003802  C02C  F289         	movff	?___fldiv+1,decide_action@green_r+1
  4480   003806  C02D  F28A         	movff	?___fldiv+2,decide_action@green_r+2
  4481   00380A  C02E  F28B         	movff	?___fldiv+3,decide_action@green_r+3
  4482   00380E                     
  4483                           ;color.c: 170:     blue_r = blue / (red + green + blue);
  4484   00380E  C27C  F006         	movff	decide_action@green,___fladd@a
  4485   003812  C27D  F007         	movff	decide_action@green+1,___fladd@a+1
  4486   003816  C27E  F008         	movff	decide_action@green+2,___fladd@a+2
  4487   00381A  C27F  F009         	movff	decide_action@green+3,___fladd@a+3
  4488   00381E  C2AC  F002         	movff	decide_action@red,___fladd@b
  4489   003822  C2AD  F003         	movff	decide_action@red+1,___fladd@b+1
  4490   003826  C2AE  F004         	movff	decide_action@red+2,___fladd@b+2
  4491   00382A  C2AF  F005         	movff	decide_action@red+3,___fladd@b+3
  4492   00382E  ECC2  F023         	call	___fladd	;wreg free
  4493   003832  C002  F277         	movff	?___fladd,_decide_action$3098
  4494   003836  C003  F278         	movff	?___fladd+1,_decide_action$3098+1
  4495   00383A  C004  F279         	movff	?___fladd+2,_decide_action$3098+2
  4496   00383E  C005  F27A         	movff	?___fladd+3,_decide_action$3098+3
  4497   003842                     
  4498                           ;color.c: 170:     blue_r = blue / (red + green + blue);
  4499   003842  C280  F02B         	movff	decide_action@blue,___fldiv@b
  4500   003846  C281  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  4501   00384A  C282  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  4502   00384E  C283  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  4503   003852  C280  F006         	movff	decide_action@blue,___fladd@a
  4504   003856  C281  F007         	movff	decide_action@blue+1,___fladd@a+1
  4505   00385A  C282  F008         	movff	decide_action@blue+2,___fladd@a+2
  4506   00385E  C283  F009         	movff	decide_action@blue+3,___fladd@a+3
  4507   003862  C277  F002         	movff	_decide_action$3098,___fladd@b
  4508   003866  C278  F003         	movff	_decide_action$3098+1,___fladd@b+1
  4509   00386A  C279  F004         	movff	_decide_action$3098+2,___fladd@b+2
  4510   00386E  C27A  F005         	movff	_decide_action$3098+3,___fladd@b+3
  4511   003872  ECC2  F023         	call	___fladd	;wreg free
  4512   003876  C002  F02F         	movff	?___fladd,___fldiv@a
  4513   00387A  C003  F030         	movff	?___fladd+1,___fldiv@a+1
  4514   00387E  C004  F031         	movff	?___fladd+2,___fldiv@a+2
  4515   003882  C005  F032         	movff	?___fladd+3,___fldiv@a+3
  4516   003886  EC26  F02A         	call	___fldiv	;wreg free
  4517   00388A  C02B  F28C         	movff	?___fldiv,decide_action@blue_r
  4518   00388E  C02C  F28D         	movff	?___fldiv+1,decide_action@blue_r+1
  4519   003892  C02D  F28E         	movff	?___fldiv+2,decide_action@blue_r+2
  4520   003896  C02E  F28F         	movff	?___fldiv+3,decide_action@blue_r+3
  4521   00389A                     
  4522                           ;color.c: 172:     sprintf(red_val,"red = %d \r\n",red_r);
  4523   00389A  0E14               	movlw	low decide_action@red_val
  4524   00389C  6E1B               	movwf	sprintf@s^0,c
  4525   00389E  0E02               	movlw	high decide_action@red_val
  4526   0038A0  6E1C               	movwf	(sprintf@s+1)^0,c
  4527   0038A2  0EC8               	movlw	low STR_1
  4528   0038A4  6E1D               	movwf	sprintf@fmt^0,c
  4529   0038A6  C284  F01E         	movff	decide_action@red_r,?_sprintf+3
  4530   0038AA  C285  F01F         	movff	decide_action@red_r+1,?_sprintf+4
  4531   0038AE  C286  F020         	movff	decide_action@red_r+2,?_sprintf+5
  4532   0038B2  C287  F021         	movff	decide_action@red_r+3,?_sprintf+6
  4533   0038B6  ECD5  F037         	call	_sprintf	;wreg free
  4534   0038BA                     
  4535                           ;color.c: 173:     sendStringSerial4(pred_val);
  4536   0038BA  C271  F003         	movff	decide_action@pred_val,sendStringSerial4@string
  4537   0038BE  C272  F004         	movff	decide_action@pred_val+1,sendStringSerial4@string+1
  4538   0038C2  EC46  F038         	call	_sendStringSerial4	;wreg free
  4539   0038C6                     
  4540                           ;color.c: 174:     sprintf(green_val,"green = %d \r\n",green_r);
  4541   0038C6  0E28               	movlw	low decide_action@green_val
  4542   0038C8  6E1B               	movwf	sprintf@s^0,c
  4543   0038CA  0E02               	movlw	high decide_action@green_val
  4544   0038CC  6E1C               	movwf	(sprintf@s+1)^0,c
  4545   0038CE  0EAD               	movlw	low STR_2
  4546   0038D0  6E1D               	movwf	sprintf@fmt^0,c
  4547   0038D2  C288  F01E         	movff	decide_action@green_r,?_sprintf+3
  4548   0038D6  C289  F01F         	movff	decide_action@green_r+1,?_sprintf+4
  4549   0038DA  C28A  F020         	movff	decide_action@green_r+2,?_sprintf+5
  4550   0038DE  C28B  F021         	movff	decide_action@green_r+3,?_sprintf+6
  4551   0038E2  ECD5  F037         	call	_sprintf	;wreg free
  4552   0038E6                     
  4553                           ;color.c: 175:     sendStringSerial4(pgreen_val);
  4554   0038E6  C275  F003         	movff	decide_action@pgreen_val,sendStringSerial4@string
  4555   0038EA  C276  F004         	movff	decide_action@pgreen_val+1,sendStringSerial4@string+1
  4556   0038EE  EC46  F038         	call	_sendStringSerial4	;wreg free
  4557   0038F2                     
  4558                           ;color.c: 176:     sprintf(blue_val,"blue = %d \r\n\r\n",blue_r);
  4559   0038F2  0E3C               	movlw	low decide_action@blue_val
  4560   0038F4  6E1B               	movwf	sprintf@s^0,c
  4561   0038F6  0E02               	movlw	high decide_action@blue_val
  4562   0038F8  6E1C               	movwf	(sprintf@s+1)^0,c
  4563   0038FA  0E90               	movlw	low STR_3
  4564   0038FC  6E1D               	movwf	sprintf@fmt^0,c
  4565   0038FE  C28C  F01E         	movff	decide_action@blue_r,?_sprintf+3
  4566   003902  C28D  F01F         	movff	decide_action@blue_r+1,?_sprintf+4
  4567   003906  C28E  F020         	movff	decide_action@blue_r+2,?_sprintf+5
  4568   00390A  C28F  F021         	movff	decide_action@blue_r+3,?_sprintf+6
  4569   00390E  ECD5  F037         	call	_sprintf	;wreg free
  4570   003912                     
  4571                           ;color.c: 177:     sendStringSerial4(pblue_val);
  4572   003912  C273  F003         	movff	decide_action@pblue_val,sendStringSerial4@string
  4573   003916  C274  F004         	movff	decide_action@pblue_val+1,sendStringSerial4@string+1
  4574   00391A  EC46  F038         	call	_sendStringSerial4	;wreg free
  4575                           
  4576                           ;color.c: 180:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4577   00391E  0EBC               	movlw	188
  4578   003920  6E06               	movwf	___fladd@a^0,c
  4579   003922  0E74               	movlw	116
  4580   003924  6E07               	movwf	(___fladd@a+1)^0,c
  4581   003926  0E13               	movlw	19
  4582   003928  6E08               	movwf	(___fladd@a+2)^0,c
  4583   00392A  0EBE               	movlw	190
  4584   00392C  6E09               	movwf	(___fladd@a+3)^0,c
  4585   00392E  C288  F002         	movff	decide_action@green_r,___fladd@b
  4586   003932  C289  F003         	movff	decide_action@green_r+1,___fladd@b+1
  4587   003936  C28A  F004         	movff	decide_action@green_r+2,___fladd@b+2
  4588   00393A  C28B  F005         	movff	decide_action@green_r+3,___fladd@b+3
  4589   00393E  ECC2  F023         	call	___fladd	;wreg free
  4590   003942  C002  F290         	movff	?___fladd,_decide_action$3099
  4591   003946  C003  F291         	movff	?___fladd+1,_decide_action$3099+1
  4592   00394A  C004  F292         	movff	?___fladd+2,_decide_action$3099+2
  4593   00394E  C005  F293         	movff	?___fladd+3,_decide_action$3099+3
  4594                           
  4595                           ;color.c: 180:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4596   003952  0E0C               	movlw	12
  4597   003954  6E06               	movwf	___fladd@a^0,c
  4598   003956  0E02               	movlw	2
  4599   003958  6E07               	movwf	(___fladd@a+1)^0,c
  4600   00395A  0E2B               	movlw	43
  4601   00395C  6E08               	movwf	(___fladd@a+2)^0,c
  4602   00395E  0EBF               	movlw	191
  4603   003960  6E09               	movwf	(___fladd@a+3)^0,c
  4604   003962  C284  F002         	movff	decide_action@red_r,___fladd@b
  4605   003966  C285  F003         	movff	decide_action@red_r+1,___fladd@b+1
  4606   00396A  C286  F004         	movff	decide_action@red_r+2,___fladd@b+2
  4607   00396E  C287  F005         	movff	decide_action@red_r+3,___fladd@b+3
  4608   003972  ECC2  F023         	call	___fladd	;wreg free
  4609   003976  C002  F294         	movff	?___fladd,_decide_action$3100
  4610   00397A  C003  F295         	movff	?___fladd+1,_decide_action$3100+1
  4611   00397E  C004  F296         	movff	?___fladd+2,_decide_action$3100+2
  4612   003982  C005  F297         	movff	?___fladd+3,_decide_action$3100+3
  4613   003986                     
  4614                           ;color.c: 180:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4615   003986  0E00               	movlw	0
  4616   003988  0100               	movlb	0	; () banked
  4617   00398A  6FDC               	movwf	powf@y& (0+255),b
  4618   00398C  0E00               	movlw	0
  4619   00398E  6FDD               	movwf	(powf@y+1)& (0+255),b
  4620   003990  0E00               	movlw	0
  4621   003992  6FDE               	movwf	(powf@y+2)& (0+255),b
  4622   003994  0E40               	movlw	64
  4623   003996  6FDF               	movwf	(powf@y+3)& (0+255),b
  4624   003998  C290  F0D8         	movff	_decide_action$3099,powf@x
  4625   00399C  C291  F0D9         	movff	_decide_action$3099+1,powf@x+1
  4626   0039A0  C292  F0DA         	movff	_decide_action$3099+2,powf@x+2
  4627   0039A4  C293  F0DB         	movff	_decide_action$3099+3,powf@x+3
  4628   0039A8  EC6B  F007         	call	_powf	;wreg free
  4629   0039AC  C0D8  F298         	movff	?_powf,_decide_action$3101
  4630   0039B0  C0D9  F299         	movff	?_powf+1,_decide_action$3101+1
  4631   0039B4  C0DA  F29A         	movff	?_powf+2,_decide_action$3101+2
  4632   0039B8  C0DB  F29B         	movff	?_powf+3,_decide_action$3101+3
  4633   0039BC                     
  4634                           ;color.c: 180:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4635   0039BC  0E00               	movlw	0
  4636   0039BE  0100               	movlb	0	; () banked
  4637   0039C0  6FDC               	movwf	powf@y& (0+255),b
  4638   0039C2  0E00               	movlw	0
  4639   0039C4  6FDD               	movwf	(powf@y+1)& (0+255),b
  4640   0039C6  0E00               	movlw	0
  4641   0039C8  6FDE               	movwf	(powf@y+2)& (0+255),b
  4642   0039CA  0E40               	movlw	64
  4643   0039CC  6FDF               	movwf	(powf@y+3)& (0+255),b
  4644   0039CE  C294  F0D8         	movff	_decide_action$3100,powf@x
  4645   0039D2  C295  F0D9         	movff	_decide_action$3100+1,powf@x+1
  4646   0039D6  C296  F0DA         	movff	_decide_action$3100+2,powf@x+2
  4647   0039DA  C297  F0DB         	movff	_decide_action$3100+3,powf@x+3
  4648   0039DE  EC6B  F007         	call	_powf	;wreg free
  4649   0039E2  C0D8  F29C         	movff	?_powf,_decide_action$3102
  4650   0039E6  C0D9  F29D         	movff	?_powf+1,_decide_action$3102+1
  4651   0039EA  C0DA  F29E         	movff	?_powf+2,_decide_action$3102+2
  4652   0039EE  C0DB  F29F         	movff	?_powf+3,_decide_action$3102+3
  4653                           
  4654                           ;color.c: 180:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4655   0039F2  0E12               	movlw	18
  4656   0039F4  6E06               	movwf	___fladd@a^0,c
  4657   0039F6  0E83               	movlw	131
  4658   0039F8  6E07               	movwf	(___fladd@a+1)^0,c
  4659   0039FA  0E40               	movlw	64
  4660   0039FC  6E08               	movwf	(___fladd@a+2)^0,c
  4661   0039FE  0EBE               	movlw	190
  4662   003A00  6E09               	movwf	(___fladd@a+3)^0,c
  4663   003A02  C28C  F002         	movff	decide_action@blue_r,___fladd@b
  4664   003A06  C28D  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  4665   003A0A  C28E  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  4666   003A0E  C28F  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  4667   003A12  ECC2  F023         	call	___fladd	;wreg free
  4668   003A16  C002  F2A0         	movff	?___fladd,_decide_action$3103
  4669   003A1A  C003  F2A1         	movff	?___fladd+1,_decide_action$3103+1
  4670   003A1E  C004  F2A2         	movff	?___fladd+2,_decide_action$3103+2
  4671   003A22  C005  F2A3         	movff	?___fladd+3,_decide_action$3103+3
  4672                           
  4673                           ;color.c: 180:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4674   003A26  C298  F006         	movff	_decide_action$3101,___fladd@a
  4675   003A2A  C299  F007         	movff	_decide_action$3101+1,___fladd@a+1
  4676   003A2E  C29A  F008         	movff	_decide_action$3101+2,___fladd@a+2
  4677   003A32  C29B  F009         	movff	_decide_action$3101+3,___fladd@a+3
  4678   003A36  C29C  F002         	movff	_decide_action$3102,___fladd@b
  4679   003A3A  C29D  F003         	movff	_decide_action$3102+1,___fladd@b+1
  4680   003A3E  C29E  F004         	movff	_decide_action$3102+2,___fladd@b+2
  4681   003A42  C29F  F005         	movff	_decide_action$3102+3,___fladd@b+3
  4682   003A46  ECC2  F023         	call	___fladd	;wreg free
  4683   003A4A  C002  F2A4         	movff	?___fladd,_decide_action$3104
  4684   003A4E  C003  F2A5         	movff	?___fladd+1,_decide_action$3104+1
  4685   003A52  C004  F2A6         	movff	?___fladd+2,_decide_action$3104+2
  4686   003A56  C005  F2A7         	movff	?___fladd+3,_decide_action$3104+3
  4687   003A5A                     
  4688                           ;color.c: 180:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4689   003A5A  0E00               	movlw	0
  4690   003A5C  0100               	movlb	0	; () banked
  4691   003A5E  6FDC               	movwf	powf@y& (0+255),b
  4692   003A60  0E00               	movlw	0
  4693   003A62  6FDD               	movwf	(powf@y+1)& (0+255),b
  4694   003A64  0E00               	movlw	0
  4695   003A66  6FDE               	movwf	(powf@y+2)& (0+255),b
  4696   003A68  0E40               	movlw	64
  4697   003A6A  6FDF               	movwf	(powf@y+3)& (0+255),b
  4698   003A6C  C2A0  F0D8         	movff	_decide_action$3103,powf@x
  4699   003A70  C2A1  F0D9         	movff	_decide_action$3103+1,powf@x+1
  4700   003A74  C2A2  F0DA         	movff	_decide_action$3103+2,powf@x+2
  4701   003A78  C2A3  F0DB         	movff	_decide_action$3103+3,powf@x+3
  4702   003A7C  EC6B  F007         	call	_powf	;wreg free
  4703   003A80  C0D8  F2A8         	movff	?_powf,_decide_action$3105
  4704   003A84  C0D9  F2A9         	movff	?_powf+1,_decide_action$3105+1
  4705   003A88  C0DA  F2AA         	movff	?_powf+2,_decide_action$3105+2
  4706   003A8C  C0DB  F2AB         	movff	?_powf+3,_decide_action$3105+3
  4707   003A90                     
  4708                           ;color.c: 180:     rgb_comp[0] = sqrtf(powf((red_r - 0.668),2) + powf((green_r - 0.144),
      +                          2) + powf((blue_r - 0.188),2));
  4709   003A90  C2A4  F002         	movff	_decide_action$3104,___fladd@b
  4710   003A94  C2A5  F003         	movff	_decide_action$3104+1,___fladd@b+1
  4711   003A98  C2A6  F004         	movff	_decide_action$3104+2,___fladd@b+2
  4712   003A9C  C2A7  F005         	movff	_decide_action$3104+3,___fladd@b+3
  4713   003AA0  C2A8  F006         	movff	_decide_action$3105,___fladd@a
  4714   003AA4  C2A9  F007         	movff	_decide_action$3105+1,___fladd@a+1
  4715   003AA8  C2AA  F008         	movff	_decide_action$3105+2,___fladd@a+2
  4716   003AAC  C2AB  F009         	movff	_decide_action$3105+3,___fladd@a+3
  4717   003AB0  ECC2  F023         	call	___fladd	;wreg free
  4718   003AB4  C002  F012         	movff	?___fladd,sqrtf@x
  4719   003AB8  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  4720   003ABC  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  4721   003AC0  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  4722   003AC4  EC37  F028         	call	_sqrtf	;wreg free
  4723   003AC8  C012  F250         	movff	?_sqrtf,decide_action@rgb_comp
  4724   003ACC  C013  F251         	movff	?_sqrtf+1,decide_action@rgb_comp+1
  4725   003AD0  C014  F252         	movff	?_sqrtf+2,decide_action@rgb_comp+2
  4726   003AD4  C015  F253         	movff	?_sqrtf+3,decide_action@rgb_comp+3
  4727   003AD8                     
  4728                           ;color.c: 181:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4729   003AD8  0E08               	movlw	8
  4730   003ADA  6E06               	movwf	___fladd@a^0,c
  4731   003ADC  0EAC               	movlw	172
  4732   003ADE  6E07               	movwf	(___fladd@a+1)^0,c
  4733   003AE0  0E1C               	movlw	28
  4734   003AE2  6E08               	movwf	(___fladd@a+2)^0,c
  4735   003AE4  0EBF               	movlw	191
  4736   003AE6  6E09               	movwf	(___fladd@a+3)^0,c
  4737   003AE8  C288  F002         	movff	decide_action@green_r,___fladd@b
  4738   003AEC  C289  F003         	movff	decide_action@green_r+1,___fladd@b+1
  4739   003AF0  C28A  F004         	movff	decide_action@green_r+2,___fladd@b+2
  4740   003AF4  C28B  F005         	movff	decide_action@green_r+3,___fladd@b+3
  4741   003AF8  ECC2  F023         	call	___fladd	;wreg free
  4742   003AFC  C002  F290         	movff	?___fladd,_decide_action$3099
  4743   003B00  C003  F291         	movff	?___fladd+1,_decide_action$3099+1
  4744   003B04  C004  F292         	movff	?___fladd+2,_decide_action$3099+2
  4745   003B08  C005  F293         	movff	?___fladd+3,_decide_action$3099+3
  4746   003B0C                     
  4747                           ;color.c: 181:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4748   003B0C  0E87               	movlw	135
  4749   003B0E  6E06               	movwf	___fladd@a^0,c
  4750   003B10  0E16               	movlw	22
  4751   003B12  6E07               	movwf	(___fladd@a+1)^0,c
  4752   003B14  0ED9               	movlw	217
  4753   003B16  6E08               	movwf	(___fladd@a+2)^0,c
  4754   003B18  0EBD               	movlw	189
  4755   003B1A  6E09               	movwf	(___fladd@a+3)^0,c
  4756   003B1C  C284  F002         	movff	decide_action@red_r,___fladd@b
  4757   003B20  C285  F003         	movff	decide_action@red_r+1,___fladd@b+1
  4758   003B24  C286  F004         	movff	decide_action@red_r+2,___fladd@b+2
  4759   003B28  C287  F005         	movff	decide_action@red_r+3,___fladd@b+3
  4760   003B2C  ECC2  F023         	call	___fladd	;wreg free
  4761   003B30  C002  F294         	movff	?___fladd,_decide_action$3100
  4762   003B34  C003  F295         	movff	?___fladd+1,_decide_action$3100+1
  4763   003B38  C004  F296         	movff	?___fladd+2,_decide_action$3100+2
  4764   003B3C  C005  F297         	movff	?___fladd+3,_decide_action$3100+3
  4765                           
  4766                           ;color.c: 181:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4767   003B40  0E00               	movlw	0
  4768   003B42  0100               	movlb	0	; () banked
  4769   003B44  6FDC               	movwf	powf@y& (0+255),b
  4770   003B46  0E00               	movlw	0
  4771   003B48  6FDD               	movwf	(powf@y+1)& (0+255),b
  4772   003B4A  0E00               	movlw	0
  4773   003B4C  6FDE               	movwf	(powf@y+2)& (0+255),b
  4774   003B4E  0E40               	movlw	64
  4775   003B50  6FDF               	movwf	(powf@y+3)& (0+255),b
  4776   003B52  C290  F0D8         	movff	_decide_action$3099,powf@x
  4777   003B56  C291  F0D9         	movff	_decide_action$3099+1,powf@x+1
  4778   003B5A  C292  F0DA         	movff	_decide_action$3099+2,powf@x+2
  4779   003B5E  C293  F0DB         	movff	_decide_action$3099+3,powf@x+3
  4780   003B62  EC6B  F007         	call	_powf	;wreg free
  4781   003B66  C0D8  F298         	movff	?_powf,_decide_action$3101
  4782   003B6A  C0D9  F299         	movff	?_powf+1,_decide_action$3101+1
  4783   003B6E  C0DA  F29A         	movff	?_powf+2,_decide_action$3101+2
  4784   003B72  C0DB  F29B         	movff	?_powf+3,_decide_action$3101+3
  4785                           
  4786                           ;color.c: 181:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4787   003B76  0E00               	movlw	0
  4788   003B78  0100               	movlb	0	; () banked
  4789   003B7A  6FDC               	movwf	powf@y& (0+255),b
  4790   003B7C  0E00               	movlw	0
  4791   003B7E  6FDD               	movwf	(powf@y+1)& (0+255),b
  4792   003B80  0E00               	movlw	0
  4793   003B82  6FDE               	movwf	(powf@y+2)& (0+255),b
  4794   003B84  0E40               	movlw	64
  4795   003B86  6FDF               	movwf	(powf@y+3)& (0+255),b
  4796   003B88  C294  F0D8         	movff	_decide_action$3100,powf@x
  4797   003B8C  C295  F0D9         	movff	_decide_action$3100+1,powf@x+1
  4798   003B90  C296  F0DA         	movff	_decide_action$3100+2,powf@x+2
  4799   003B94  C297  F0DB         	movff	_decide_action$3100+3,powf@x+3
  4800   003B98  EC6B  F007         	call	_powf	;wreg free
  4801   003B9C  C0D8  F29C         	movff	?_powf,_decide_action$3102
  4802   003BA0  C0D9  F29D         	movff	?_powf+1,_decide_action$3102+1
  4803   003BA4  C0DA  F29E         	movff	?_powf+2,_decide_action$3102+2
  4804   003BA8  C0DB  F29F         	movff	?_powf+3,_decide_action$3102+3
  4805   003BAC                     
  4806                           ;color.c: 181:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4807   003BAC  0E3B               	movlw	59
  4808   003BAE  6E06               	movwf	___fladd@a^0,c
  4809   003BB0  0EDF               	movlw	223
  4810   003BB2  6E07               	movwf	(___fladd@a+1)^0,c
  4811   003BB4  0E8F               	movlw	143
  4812   003BB6  6E08               	movwf	(___fladd@a+2)^0,c
  4813   003BB8  0EBE               	movlw	190
  4814   003BBA  6E09               	movwf	(___fladd@a+3)^0,c
  4815   003BBC  C28C  F002         	movff	decide_action@blue_r,___fladd@b
  4816   003BC0  C28D  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  4817   003BC4  C28E  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  4818   003BC8  C28F  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  4819   003BCC  ECC2  F023         	call	___fladd	;wreg free
  4820   003BD0  C002  F2A0         	movff	?___fladd,_decide_action$3103
  4821   003BD4  C003  F2A1         	movff	?___fladd+1,_decide_action$3103+1
  4822   003BD8  C004  F2A2         	movff	?___fladd+2,_decide_action$3103+2
  4823   003BDC  C005  F2A3         	movff	?___fladd+3,_decide_action$3103+3
  4824   003BE0                     
  4825                           ;color.c: 181:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4826   003BE0  C298  F006         	movff	_decide_action$3101,___fladd@a
  4827   003BE4  C299  F007         	movff	_decide_action$3101+1,___fladd@a+1
  4828   003BE8  C29A  F008         	movff	_decide_action$3101+2,___fladd@a+2
  4829   003BEC  C29B  F009         	movff	_decide_action$3101+3,___fladd@a+3
  4830   003BF0  C29C  F002         	movff	_decide_action$3102,___fladd@b
  4831   003BF4  C29D  F003         	movff	_decide_action$3102+1,___fladd@b+1
  4832   003BF8  C29E  F004         	movff	_decide_action$3102+2,___fladd@b+2
  4833   003BFC  C29F  F005         	movff	_decide_action$3102+3,___fladd@b+3
  4834   003C00  ECC2  F023         	call	___fladd	;wreg free
  4835   003C04  C002  F2A4         	movff	?___fladd,_decide_action$3104
  4836   003C08  C003  F2A5         	movff	?___fladd+1,_decide_action$3104+1
  4837   003C0C  C004  F2A6         	movff	?___fladd+2,_decide_action$3104+2
  4838   003C10  C005  F2A7         	movff	?___fladd+3,_decide_action$3104+3
  4839                           
  4840                           ;color.c: 181:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4841   003C14  0E00               	movlw	0
  4842   003C16  0100               	movlb	0	; () banked
  4843   003C18  6FDC               	movwf	powf@y& (0+255),b
  4844   003C1A  0E00               	movlw	0
  4845   003C1C  6FDD               	movwf	(powf@y+1)& (0+255),b
  4846   003C1E  0E00               	movlw	0
  4847   003C20  6FDE               	movwf	(powf@y+2)& (0+255),b
  4848   003C22  0E40               	movlw	64
  4849   003C24  6FDF               	movwf	(powf@y+3)& (0+255),b
  4850   003C26  C2A0  F0D8         	movff	_decide_action$3103,powf@x
  4851   003C2A  C2A1  F0D9         	movff	_decide_action$3103+1,powf@x+1
  4852   003C2E  C2A2  F0DA         	movff	_decide_action$3103+2,powf@x+2
  4853   003C32  C2A3  F0DB         	movff	_decide_action$3103+3,powf@x+3
  4854   003C36  EC6B  F007         	call	_powf	;wreg free
  4855   003C3A  C0D8  F2A8         	movff	?_powf,_decide_action$3105
  4856   003C3E  C0D9  F2A9         	movff	?_powf+1,_decide_action$3105+1
  4857   003C42  C0DA  F2AA         	movff	?_powf+2,_decide_action$3105+2
  4858   003C46  C0DB  F2AB         	movff	?_powf+3,_decide_action$3105+3
  4859   003C4A                     
  4860                           ;color.c: 181:     rgb_comp[1] = sqrtf(powf((red_r - 0.106),2) + powf((green_r - 0.612),
      +                          2) + powf((blue_r - 0.281),2));
  4861   003C4A  C2A4  F002         	movff	_decide_action$3104,___fladd@b
  4862   003C4E  C2A5  F003         	movff	_decide_action$3104+1,___fladd@b+1
  4863   003C52  C2A6  F004         	movff	_decide_action$3104+2,___fladd@b+2
  4864   003C56  C2A7  F005         	movff	_decide_action$3104+3,___fladd@b+3
  4865   003C5A  C2A8  F006         	movff	_decide_action$3105,___fladd@a
  4866   003C5E  C2A9  F007         	movff	_decide_action$3105+1,___fladd@a+1
  4867   003C62  C2AA  F008         	movff	_decide_action$3105+2,___fladd@a+2
  4868   003C66  C2AB  F009         	movff	_decide_action$3105+3,___fladd@a+3
  4869   003C6A  ECC2  F023         	call	___fladd	;wreg free
  4870   003C6E  C002  F012         	movff	?___fladd,sqrtf@x
  4871   003C72  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  4872   003C76  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  4873   003C7A  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  4874   003C7E  EC37  F028         	call	_sqrtf	;wreg free
  4875   003C82  C012  F254         	movff	?_sqrtf,decide_action@rgb_comp+4
  4876   003C86  C013  F255         	movff	?_sqrtf+1,decide_action@rgb_comp+5
  4877   003C8A  C014  F256         	movff	?_sqrtf+2,decide_action@rgb_comp+6
  4878   003C8E  C015  F257         	movff	?_sqrtf+3,decide_action@rgb_comp+7
  4879   003C92                     
  4880                           ;color.c: 182:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4881   003C92  0ED7               	movlw	215
  4882   003C94  6E06               	movwf	___fladd@a^0,c
  4883   003C96  0EA3               	movlw	163
  4884   003C98  6E07               	movwf	(___fladd@a+1)^0,c
  4885   003C9A  0EF0               	movlw	240
  4886   003C9C  6E08               	movwf	(___fladd@a+2)^0,c
  4887   003C9E  0EBE               	movlw	190
  4888   003CA0  6E09               	movwf	(___fladd@a+3)^0,c
  4889   003CA2  C288  F002         	movff	decide_action@green_r,___fladd@b
  4890   003CA6  C289  F003         	movff	decide_action@green_r+1,___fladd@b+1
  4891   003CAA  C28A  F004         	movff	decide_action@green_r+2,___fladd@b+2
  4892   003CAE  C28B  F005         	movff	decide_action@green_r+3,___fladd@b+3
  4893   003CB2  ECC2  F023         	call	___fladd	;wreg free
  4894   003CB6  C002  F290         	movff	?___fladd,_decide_action$3099
  4895   003CBA  C003  F291         	movff	?___fladd+1,_decide_action$3099+1
  4896   003CBE  C004  F292         	movff	?___fladd+2,_decide_action$3099+2
  4897   003CC2  C005  F293         	movff	?___fladd+3,_decide_action$3099+3
  4898   003CC6                     
  4899                           ;color.c: 182:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4900   003CC6  0E23               	movlw	35
  4901   003CC8  6E06               	movwf	___fladd@a^0,c
  4902   003CCA  0EDB               	movlw	219
  4903   003CCC  6E07               	movwf	(___fladd@a+1)^0,c
  4904   003CCE  0E79               	movlw	121
  4905   003CD0  6E08               	movwf	(___fladd@a+2)^0,c
  4906   003CD2  0EBD               	movlw	189
  4907   003CD4  6E09               	movwf	(___fladd@a+3)^0,c
  4908   003CD6  C284  F002         	movff	decide_action@red_r,___fladd@b
  4909   003CDA  C285  F003         	movff	decide_action@red_r+1,___fladd@b+1
  4910   003CDE  C286  F004         	movff	decide_action@red_r+2,___fladd@b+2
  4911   003CE2  C287  F005         	movff	decide_action@red_r+3,___fladd@b+3
  4912   003CE6  ECC2  F023         	call	___fladd	;wreg free
  4913   003CEA  C002  F294         	movff	?___fladd,_decide_action$3100
  4914   003CEE  C003  F295         	movff	?___fladd+1,_decide_action$3100+1
  4915   003CF2  C004  F296         	movff	?___fladd+2,_decide_action$3100+2
  4916   003CF6  C005  F297         	movff	?___fladd+3,_decide_action$3100+3
  4917   003CFA                     
  4918                           ;color.c: 182:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4919   003CFA  0E00               	movlw	0
  4920   003CFC  0100               	movlb	0	; () banked
  4921   003CFE  6FDC               	movwf	powf@y& (0+255),b
  4922   003D00  0E00               	movlw	0
  4923   003D02  6FDD               	movwf	(powf@y+1)& (0+255),b
  4924   003D04  0E00               	movlw	0
  4925   003D06  6FDE               	movwf	(powf@y+2)& (0+255),b
  4926   003D08  0E40               	movlw	64
  4927   003D0A  6FDF               	movwf	(powf@y+3)& (0+255),b
  4928   003D0C  C290  F0D8         	movff	_decide_action$3099,powf@x
  4929   003D10  C291  F0D9         	movff	_decide_action$3099+1,powf@x+1
  4930   003D14  C292  F0DA         	movff	_decide_action$3099+2,powf@x+2
  4931   003D18  C293  F0DB         	movff	_decide_action$3099+3,powf@x+3
  4932   003D1C  EC6B  F007         	call	_powf	;wreg free
  4933   003D20  C0D8  F298         	movff	?_powf,_decide_action$3101
  4934   003D24  C0D9  F299         	movff	?_powf+1,_decide_action$3101+1
  4935   003D28  C0DA  F29A         	movff	?_powf+2,_decide_action$3101+2
  4936   003D2C  C0DB  F29B         	movff	?_powf+3,_decide_action$3101+3
  4937   003D30                     
  4938                           ;color.c: 182:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4939   003D30  0E00               	movlw	0
  4940   003D32  0100               	movlb	0	; () banked
  4941   003D34  6FDC               	movwf	powf@y& (0+255),b
  4942   003D36  0E00               	movlw	0
  4943   003D38  6FDD               	movwf	(powf@y+1)& (0+255),b
  4944   003D3A  0E00               	movlw	0
  4945   003D3C  6FDE               	movwf	(powf@y+2)& (0+255),b
  4946   003D3E  0E40               	movlw	64
  4947   003D40  6FDF               	movwf	(powf@y+3)& (0+255),b
  4948   003D42  C294  F0D8         	movff	_decide_action$3100,powf@x
  4949   003D46  C295  F0D9         	movff	_decide_action$3100+1,powf@x+1
  4950   003D4A  C296  F0DA         	movff	_decide_action$3100+2,powf@x+2
  4951   003D4E  C297  F0DB         	movff	_decide_action$3100+3,powf@x+3
  4952   003D52  EC6B  F007         	call	_powf	;wreg free
  4953   003D56  C0D8  F29C         	movff	?_powf,_decide_action$3102
  4954   003D5A  C0D9  F29D         	movff	?_powf+1,_decide_action$3102+1
  4955   003D5E  C0DA  F29E         	movff	?_powf+2,_decide_action$3102+2
  4956   003D62  C0DB  F29F         	movff	?_powf+3,_decide_action$3102+3
  4957   003D66                     
  4958                           ;color.c: 182:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4959   003D66  0ED7               	movlw	215
  4960   003D68  6E06               	movwf	___fladd@a^0,c
  4961   003D6A  0EA3               	movlw	163
  4962   003D6C  6E07               	movwf	(___fladd@a+1)^0,c
  4963   003D6E  0EF0               	movlw	240
  4964   003D70  6E08               	movwf	(___fladd@a+2)^0,c
  4965   003D72  0EBE               	movlw	190
  4966   003D74  6E09               	movwf	(___fladd@a+3)^0,c
  4967   003D76  C28C  F002         	movff	decide_action@blue_r,___fladd@b
  4968   003D7A  C28D  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  4969   003D7E  C28E  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  4970   003D82  C28F  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  4971   003D86  ECC2  F023         	call	___fladd	;wreg free
  4972   003D8A  C002  F2A0         	movff	?___fladd,_decide_action$3103
  4973   003D8E  C003  F2A1         	movff	?___fladd+1,_decide_action$3103+1
  4974   003D92  C004  F2A2         	movff	?___fladd+2,_decide_action$3103+2
  4975   003D96  C005  F2A3         	movff	?___fladd+3,_decide_action$3103+3
  4976   003D9A                     
  4977                           ;color.c: 182:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4978   003D9A  C298  F006         	movff	_decide_action$3101,___fladd@a
  4979   003D9E  C299  F007         	movff	_decide_action$3101+1,___fladd@a+1
  4980   003DA2  C29A  F008         	movff	_decide_action$3101+2,___fladd@a+2
  4981   003DA6  C29B  F009         	movff	_decide_action$3101+3,___fladd@a+3
  4982   003DAA  C29C  F002         	movff	_decide_action$3102,___fladd@b
  4983   003DAE  C29D  F003         	movff	_decide_action$3102+1,___fladd@b+1
  4984   003DB2  C29E  F004         	movff	_decide_action$3102+2,___fladd@b+2
  4985   003DB6  C29F  F005         	movff	_decide_action$3102+3,___fladd@b+3
  4986   003DBA  ECC2  F023         	call	___fladd	;wreg free
  4987   003DBE  C002  F2A4         	movff	?___fladd,_decide_action$3104
  4988   003DC2  C003  F2A5         	movff	?___fladd+1,_decide_action$3104+1
  4989   003DC6  C004  F2A6         	movff	?___fladd+2,_decide_action$3104+2
  4990   003DCA  C005  F2A7         	movff	?___fladd+3,_decide_action$3104+3
  4991   003DCE                     
  4992                           ;color.c: 182:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  4993   003DCE  0E00               	movlw	0
  4994   003DD0  0100               	movlb	0	; () banked
  4995   003DD2  6FDC               	movwf	powf@y& (0+255),b
  4996   003DD4  0E00               	movlw	0
  4997   003DD6  6FDD               	movwf	(powf@y+1)& (0+255),b
  4998   003DD8  0E00               	movlw	0
  4999   003DDA  6FDE               	movwf	(powf@y+2)& (0+255),b
  5000   003DDC  0E40               	movlw	64
  5001   003DDE  6FDF               	movwf	(powf@y+3)& (0+255),b
  5002   003DE0  C2A0  F0D8         	movff	_decide_action$3103,powf@x
  5003   003DE4  C2A1  F0D9         	movff	_decide_action$3103+1,powf@x+1
  5004   003DE8  C2A2  F0DA         	movff	_decide_action$3103+2,powf@x+2
  5005   003DEC  C2A3  F0DB         	movff	_decide_action$3103+3,powf@x+3
  5006   003DF0  EC6B  F007         	call	_powf	;wreg free
  5007   003DF4  C0D8  F2A8         	movff	?_powf,_decide_action$3105
  5008   003DF8  C0D9  F2A9         	movff	?_powf+1,_decide_action$3105+1
  5009   003DFC  C0DA  F2AA         	movff	?_powf+2,_decide_action$3105+2
  5010   003E00  C0DB  F2AB         	movff	?_powf+3,_decide_action$3105+3
  5011                           
  5012                           ;color.c: 182:     rgb_comp[2] = sqrtf(powf((red_r - 0.061),2) + powf((green_r - 0.470),
      +                          2) + powf((blue_r - 0.470),2));
  5013   003E04  C2A4  F002         	movff	_decide_action$3104,___fladd@b
  5014   003E08  C2A5  F003         	movff	_decide_action$3104+1,___fladd@b+1
  5015   003E0C  C2A6  F004         	movff	_decide_action$3104+2,___fladd@b+2
  5016   003E10  C2A7  F005         	movff	_decide_action$3104+3,___fladd@b+3
  5017   003E14  C2A8  F006         	movff	_decide_action$3105,___fladd@a
  5018   003E18  C2A9  F007         	movff	_decide_action$3105+1,___fladd@a+1
  5019   003E1C  C2AA  F008         	movff	_decide_action$3105+2,___fladd@a+2
  5020   003E20  C2AB  F009         	movff	_decide_action$3105+3,___fladd@a+3
  5021   003E24  ECC2  F023         	call	___fladd	;wreg free
  5022   003E28  C002  F012         	movff	?___fladd,sqrtf@x
  5023   003E2C  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5024   003E30  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5025   003E34  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5026   003E38  EC37  F028         	call	_sqrtf	;wreg free
  5027   003E3C  C012  F258         	movff	?_sqrtf,decide_action@rgb_comp+8
  5028   003E40  C013  F259         	movff	?_sqrtf+1,decide_action@rgb_comp+9
  5029   003E44  C014  F25A         	movff	?_sqrtf+2,decide_action@rgb_comp+10
  5030   003E48  C015  F25B         	movff	?_sqrtf+3,decide_action@rgb_comp+11
  5031                           
  5032                           ;color.c: 183:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5033   003E4C  0ED3               	movlw	211
  5034   003E4E  6E06               	movwf	___fladd@a^0,c
  5035   003E50  0E4D               	movlw	77
  5036   003E52  6E07               	movwf	(___fladd@a+1)^0,c
  5037   003E54  0EE2               	movlw	226
  5038   003E56  6E08               	movwf	(___fladd@a+2)^0,c
  5039   003E58  0EBE               	movlw	190
  5040   003E5A  6E09               	movwf	(___fladd@a+3)^0,c
  5041   003E5C  C288  F002         	movff	decide_action@green_r,___fladd@b
  5042   003E60  C289  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5043   003E64  C28A  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5044   003E68  C28B  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5045   003E6C  ECC2  F023         	call	___fladd	;wreg free
  5046   003E70  C002  F290         	movff	?___fladd,_decide_action$3099
  5047   003E74  C003  F291         	movff	?___fladd+1,_decide_action$3099+1
  5048   003E78  C004  F292         	movff	?___fladd+2,_decide_action$3099+2
  5049   003E7C  C005  F293         	movff	?___fladd+3,_decide_action$3099+3
  5050                           
  5051                           ;color.c: 183:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5052   003E80  0E04               	movlw	4
  5053   003E82  6E06               	movwf	___fladd@a^0,c
  5054   003E84  0E56               	movlw	86
  5055   003E86  6E07               	movwf	(___fladd@a+1)^0,c
  5056   003E88  0ECE               	movlw	206
  5057   003E8A  6E08               	movwf	(___fladd@a+2)^0,c
  5058   003E8C  0EBE               	movlw	190
  5059   003E8E  6E09               	movwf	(___fladd@a+3)^0,c
  5060   003E90  C284  F002         	movff	decide_action@red_r,___fladd@b
  5061   003E94  C285  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5062   003E98  C286  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5063   003E9C  C287  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5064   003EA0  ECC2  F023         	call	___fladd	;wreg free
  5065   003EA4  C002  F294         	movff	?___fladd,_decide_action$3100
  5066   003EA8  C003  F295         	movff	?___fladd+1,_decide_action$3100+1
  5067   003EAC  C004  F296         	movff	?___fladd+2,_decide_action$3100+2
  5068   003EB0  C005  F297         	movff	?___fladd+3,_decide_action$3100+3
  5069   003EB4                     
  5070                           ;color.c: 183:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5071   003EB4  0E00               	movlw	0
  5072   003EB6  0100               	movlb	0	; () banked
  5073   003EB8  6FDC               	movwf	powf@y& (0+255),b
  5074   003EBA  0E00               	movlw	0
  5075   003EBC  6FDD               	movwf	(powf@y+1)& (0+255),b
  5076   003EBE  0E00               	movlw	0
  5077   003EC0  6FDE               	movwf	(powf@y+2)& (0+255),b
  5078   003EC2  0E40               	movlw	64
  5079   003EC4  6FDF               	movwf	(powf@y+3)& (0+255),b
  5080   003EC6  C290  F0D8         	movff	_decide_action$3099,powf@x
  5081   003ECA  C291  F0D9         	movff	_decide_action$3099+1,powf@x+1
  5082   003ECE  C292  F0DA         	movff	_decide_action$3099+2,powf@x+2
  5083   003ED2  C293  F0DB         	movff	_decide_action$3099+3,powf@x+3
  5084   003ED6  EC6B  F007         	call	_powf	;wreg free
  5085   003EDA  C0D8  F298         	movff	?_powf,_decide_action$3101
  5086   003EDE  C0D9  F299         	movff	?_powf+1,_decide_action$3101+1
  5087   003EE2  C0DA  F29A         	movff	?_powf+2,_decide_action$3101+2
  5088   003EE6  C0DB  F29B         	movff	?_powf+3,_decide_action$3101+3
  5089   003EEA                     
  5090                           ;color.c: 183:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5091   003EEA  0E00               	movlw	0
  5092   003EEC  0100               	movlb	0	; () banked
  5093   003EEE  6FDC               	movwf	powf@y& (0+255),b
  5094   003EF0  0E00               	movlw	0
  5095   003EF2  6FDD               	movwf	(powf@y+1)& (0+255),b
  5096   003EF4  0E00               	movlw	0
  5097   003EF6  6FDE               	movwf	(powf@y+2)& (0+255),b
  5098   003EF8  0E40               	movlw	64
  5099   003EFA  6FDF               	movwf	(powf@y+3)& (0+255),b
  5100   003EFC  C294  F0D8         	movff	_decide_action$3100,powf@x
  5101   003F00  C295  F0D9         	movff	_decide_action$3100+1,powf@x+1
  5102   003F04  C296  F0DA         	movff	_decide_action$3100+2,powf@x+2
  5103   003F08  C297  F0DB         	movff	_decide_action$3100+3,powf@x+3
  5104   003F0C  EC6B  F007         	call	_powf	;wreg free
  5105   003F10  C0D8  F29C         	movff	?_powf,_decide_action$3102
  5106   003F14  C0D9  F29D         	movff	?_powf+1,_decide_action$3102+1
  5107   003F18  C0DA  F29E         	movff	?_powf+2,_decide_action$3102+2
  5108   003F1C  C0DB  F29F         	movff	?_powf+3,_decide_action$3102+3
  5109                           
  5110                           ;color.c: 183:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5111   003F20  0E2D               	movlw	45
  5112   003F22  6E06               	movwf	___fladd@a^0,c
  5113   003F24  0EB2               	movlw	178
  5114   003F26  6E07               	movwf	(___fladd@a+1)^0,c
  5115   003F28  0E1D               	movlw	29
  5116   003F2A  6E08               	movwf	(___fladd@a+2)^0,c
  5117   003F2C  0EBE               	movlw	190
  5118   003F2E  6E09               	movwf	(___fladd@a+3)^0,c
  5119   003F30  C28C  F002         	movff	decide_action@blue_r,___fladd@b
  5120   003F34  C28D  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5121   003F38  C28E  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5122   003F3C  C28F  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5123   003F40  ECC2  F023         	call	___fladd	;wreg free
  5124   003F44  C002  F2A0         	movff	?___fladd,_decide_action$3103
  5125   003F48  C003  F2A1         	movff	?___fladd+1,_decide_action$3103+1
  5126   003F4C  C004  F2A2         	movff	?___fladd+2,_decide_action$3103+2
  5127   003F50  C005  F2A3         	movff	?___fladd+3,_decide_action$3103+3
  5128                           
  5129                           ;color.c: 183:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5130   003F54  C298  F006         	movff	_decide_action$3101,___fladd@a
  5131   003F58  C299  F007         	movff	_decide_action$3101+1,___fladd@a+1
  5132   003F5C  C29A  F008         	movff	_decide_action$3101+2,___fladd@a+2
  5133   003F60  C29B  F009         	movff	_decide_action$3101+3,___fladd@a+3
  5134   003F64  C29C  F002         	movff	_decide_action$3102,___fladd@b
  5135   003F68  C29D  F003         	movff	_decide_action$3102+1,___fladd@b+1
  5136   003F6C  C29E  F004         	movff	_decide_action$3102+2,___fladd@b+2
  5137   003F70  C29F  F005         	movff	_decide_action$3102+3,___fladd@b+3
  5138   003F74  ECC2  F023         	call	___fladd	;wreg free
  5139   003F78  C002  F2A4         	movff	?___fladd,_decide_action$3104
  5140   003F7C  C003  F2A5         	movff	?___fladd+1,_decide_action$3104+1
  5141   003F80  C004  F2A6         	movff	?___fladd+2,_decide_action$3104+2
  5142   003F84  C005  F2A7         	movff	?___fladd+3,_decide_action$3104+3
  5143   003F88                     
  5144                           ;color.c: 183:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5145   003F88  0E00               	movlw	0
  5146   003F8A  0100               	movlb	0	; () banked
  5147   003F8C  6FDC               	movwf	powf@y& (0+255),b
  5148   003F8E  0E00               	movlw	0
  5149   003F90  6FDD               	movwf	(powf@y+1)& (0+255),b
  5150   003F92  0E00               	movlw	0
  5151   003F94  6FDE               	movwf	(powf@y+2)& (0+255),b
  5152   003F96  0E40               	movlw	64
  5153   003F98  6FDF               	movwf	(powf@y+3)& (0+255),b
  5154   003F9A  C2A0  F0D8         	movff	_decide_action$3103,powf@x
  5155   003F9E  C2A1  F0D9         	movff	_decide_action$3103+1,powf@x+1
  5156   003FA2  C2A2  F0DA         	movff	_decide_action$3103+2,powf@x+2
  5157   003FA6  C2A3  F0DB         	movff	_decide_action$3103+3,powf@x+3
  5158   003FAA  EC6B  F007         	call	_powf	;wreg free
  5159   003FAE  C0D8  F2A8         	movff	?_powf,_decide_action$3105
  5160   003FB2  C0D9  F2A9         	movff	?_powf+1,_decide_action$3105+1
  5161   003FB6  C0DA  F2AA         	movff	?_powf+2,_decide_action$3105+2
  5162   003FBA  C0DB  F2AB         	movff	?_powf+3,_decide_action$3105+3
  5163   003FBE                     
  5164                           ;color.c: 183:     rgb_comp[3] = sqrtf(powf((red_r - 0.403),2) + powf((green_r - 0.442),
      +                          2) + powf((blue_r - 0.154),2));
  5165   003FBE  C2A4  F002         	movff	_decide_action$3104,___fladd@b
  5166   003FC2  C2A5  F003         	movff	_decide_action$3104+1,___fladd@b+1
  5167   003FC6  C2A6  F004         	movff	_decide_action$3104+2,___fladd@b+2
  5168   003FCA  C2A7  F005         	movff	_decide_action$3104+3,___fladd@b+3
  5169   003FCE  C2A8  F006         	movff	_decide_action$3105,___fladd@a
  5170   003FD2  C2A9  F007         	movff	_decide_action$3105+1,___fladd@a+1
  5171   003FD6  C2AA  F008         	movff	_decide_action$3105+2,___fladd@a+2
  5172   003FDA  C2AB  F009         	movff	_decide_action$3105+3,___fladd@a+3
  5173   003FDE  ECC2  F023         	call	___fladd	;wreg free
  5174   003FE2  C002  F012         	movff	?___fladd,sqrtf@x
  5175   003FE6  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5176   003FEA  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5177   003FEE  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5178   003FF2  EC37  F028         	call	_sqrtf	;wreg free
  5179   003FF6  C012  F25C         	movff	?_sqrtf,decide_action@rgb_comp+12
  5180   003FFA  C013  F25D         	movff	?_sqrtf+1,decide_action@rgb_comp+13
  5181   003FFE  C014  F25E         	movff	?_sqrtf+2,decide_action@rgb_comp+14
  5182   004002  C015  F25F         	movff	?_sqrtf+3,decide_action@rgb_comp+15
  5183   004006                     
  5184                           ;color.c: 184:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5185   004006  0E58               	movlw	88
  5186   004008  6E06               	movwf	___fladd@a^0,c
  5187   00400A  0E39               	movlw	57
  5188   00400C  6E07               	movwf	(___fladd@a+1)^0,c
  5189   00400E  0EB4               	movlw	180
  5190   004010  6E08               	movwf	(___fladd@a+2)^0,c
  5191   004012  0EBD               	movlw	189
  5192   004014  6E09               	movwf	(___fladd@a+3)^0,c
  5193   004016  C288  F002         	movff	decide_action@green_r,___fladd@b
  5194   00401A  C289  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5195   00401E  C28A  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5196   004022  C28B  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5197   004026  ECC2  F023         	call	___fladd	;wreg free
  5198   00402A  C002  F290         	movff	?___fladd,_decide_action$3099
  5199   00402E  C003  F291         	movff	?___fladd+1,_decide_action$3099+1
  5200   004032  C004  F292         	movff	?___fladd+2,_decide_action$3099+2
  5201   004036  C005  F293         	movff	?___fladd+3,_decide_action$3099+3
  5202   00403A                     
  5203                           ;color.c: 184:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5204   00403A  0EE1               	movlw	225
  5205   00403C  6E06               	movwf	___fladd@a^0,c
  5206   00403E  0E7A               	movlw	122
  5207   004040  6E07               	movwf	(___fladd@a+1)^0,c
  5208   004042  0E34               	movlw	52
  5209   004044  6E08               	movwf	(___fladd@a+2)^0,c
  5210   004046  0EBF               	movlw	191
  5211   004048  6E09               	movwf	(___fladd@a+3)^0,c
  5212   00404A  C284  F002         	movff	decide_action@red_r,___fladd@b
  5213   00404E  C285  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5214   004052  C286  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5215   004056  C287  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5216   00405A  ECC2  F023         	call	___fladd	;wreg free
  5217   00405E  C002  F294         	movff	?___fladd,_decide_action$3100
  5218   004062  C003  F295         	movff	?___fladd+1,_decide_action$3100+1
  5219   004066  C004  F296         	movff	?___fladd+2,_decide_action$3100+2
  5220   00406A  C005  F297         	movff	?___fladd+3,_decide_action$3100+3
  5221                           
  5222                           ;color.c: 184:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5223   00406E  0E00               	movlw	0
  5224   004070  0100               	movlb	0	; () banked
  5225   004072  6FDC               	movwf	powf@y& (0+255),b
  5226   004074  0E00               	movlw	0
  5227   004076  6FDD               	movwf	(powf@y+1)& (0+255),b
  5228   004078  0E00               	movlw	0
  5229   00407A  6FDE               	movwf	(powf@y+2)& (0+255),b
  5230   00407C  0E40               	movlw	64
  5231   00407E  6FDF               	movwf	(powf@y+3)& (0+255),b
  5232   004080  C290  F0D8         	movff	_decide_action$3099,powf@x
  5233   004084  C291  F0D9         	movff	_decide_action$3099+1,powf@x+1
  5234   004088  C292  F0DA         	movff	_decide_action$3099+2,powf@x+2
  5235   00408C  C293  F0DB         	movff	_decide_action$3099+3,powf@x+3
  5236   004090  EC6B  F007         	call	_powf	;wreg free
  5237   004094  C0D8  F298         	movff	?_powf,_decide_action$3101
  5238   004098  C0D9  F299         	movff	?_powf+1,_decide_action$3101+1
  5239   00409C  C0DA  F29A         	movff	?_powf+2,_decide_action$3101+2
  5240   0040A0  C0DB  F29B         	movff	?_powf+3,_decide_action$3101+3
  5241                           
  5242                           ;color.c: 184:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5243   0040A4  0E00               	movlw	0
  5244   0040A6  0100               	movlb	0	; () banked
  5245   0040A8  6FDC               	movwf	powf@y& (0+255),b
  5246   0040AA  0E00               	movlw	0
  5247   0040AC  6FDD               	movwf	(powf@y+1)& (0+255),b
  5248   0040AE  0E00               	movlw	0
  5249   0040B0  6FDE               	movwf	(powf@y+2)& (0+255),b
  5250   0040B2  0E40               	movlw	64
  5251   0040B4  6FDF               	movwf	(powf@y+3)& (0+255),b
  5252   0040B6  C294  F0D8         	movff	_decide_action$3100,powf@x
  5253   0040BA  C295  F0D9         	movff	_decide_action$3100+1,powf@x+1
  5254   0040BE  C296  F0DA         	movff	_decide_action$3100+2,powf@x+2
  5255   0040C2  C297  F0DB         	movff	_decide_action$3100+3,powf@x+3
  5256   0040C6  EC6B  F007         	call	_powf	;wreg free
  5257   0040CA  C0D8  F29C         	movff	?_powf,_decide_action$3102
  5258   0040CE  C0D9  F29D         	movff	?_powf+1,_decide_action$3102+1
  5259   0040D2  C0DA  F29E         	movff	?_powf+2,_decide_action$3102+2
  5260   0040D6  C0DB  F29F         	movff	?_powf+3,_decide_action$3102+3
  5261   0040DA                     
  5262                           ;color.c: 184:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5263   0040DA  0ECF               	movlw	207
  5264   0040DC  6E06               	movwf	___fladd@a^0,c
  5265   0040DE  0EF7               	movlw	247
  5266   0040E0  6E07               	movwf	(___fladd@a+1)^0,c
  5267   0040E2  0E53               	movlw	83
  5268   0040E4  6E08               	movwf	(___fladd@a+2)^0,c
  5269   0040E6  0EBE               	movlw	190
  5270   0040E8  6E09               	movwf	(___fladd@a+3)^0,c
  5271   0040EA  C28C  F002         	movff	decide_action@blue_r,___fladd@b
  5272   0040EE  C28D  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5273   0040F2  C28E  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5274   0040F6  C28F  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5275   0040FA  ECC2  F023         	call	___fladd	;wreg free
  5276   0040FE  C002  F2A0         	movff	?___fladd,_decide_action$3103
  5277   004102  C003  F2A1         	movff	?___fladd+1,_decide_action$3103+1
  5278   004106  C004  F2A2         	movff	?___fladd+2,_decide_action$3103+2
  5279   00410A  C005  F2A3         	movff	?___fladd+3,_decide_action$3103+3
  5280   00410E                     
  5281                           ;color.c: 184:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5282   00410E  C298  F006         	movff	_decide_action$3101,___fladd@a
  5283   004112  C299  F007         	movff	_decide_action$3101+1,___fladd@a+1
  5284   004116  C29A  F008         	movff	_decide_action$3101+2,___fladd@a+2
  5285   00411A  C29B  F009         	movff	_decide_action$3101+3,___fladd@a+3
  5286   00411E  C29C  F002         	movff	_decide_action$3102,___fladd@b
  5287   004122  C29D  F003         	movff	_decide_action$3102+1,___fladd@b+1
  5288   004126  C29E  F004         	movff	_decide_action$3102+2,___fladd@b+2
  5289   00412A  C29F  F005         	movff	_decide_action$3102+3,___fladd@b+3
  5290   00412E  ECC2  F023         	call	___fladd	;wreg free
  5291   004132  C002  F2A4         	movff	?___fladd,_decide_action$3104
  5292   004136  C003  F2A5         	movff	?___fladd+1,_decide_action$3104+1
  5293   00413A  C004  F2A6         	movff	?___fladd+2,_decide_action$3104+2
  5294   00413E  C005  F2A7         	movff	?___fladd+3,_decide_action$3104+3
  5295                           
  5296                           ;color.c: 184:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5297   004142  0E00               	movlw	0
  5298   004144  0100               	movlb	0	; () banked
  5299   004146  6FDC               	movwf	powf@y& (0+255),b
  5300   004148  0E00               	movlw	0
  5301   00414A  6FDD               	movwf	(powf@y+1)& (0+255),b
  5302   00414C  0E00               	movlw	0
  5303   00414E  6FDE               	movwf	(powf@y+2)& (0+255),b
  5304   004150  0E40               	movlw	64
  5305   004152  6FDF               	movwf	(powf@y+3)& (0+255),b
  5306   004154  C2A0  F0D8         	movff	_decide_action$3103,powf@x
  5307   004158  C2A1  F0D9         	movff	_decide_action$3103+1,powf@x+1
  5308   00415C  C2A2  F0DA         	movff	_decide_action$3103+2,powf@x+2
  5309   004160  C2A3  F0DB         	movff	_decide_action$3103+3,powf@x+3
  5310   004164  EC6B  F007         	call	_powf	;wreg free
  5311   004168  C0D8  F2A8         	movff	?_powf,_decide_action$3105
  5312   00416C  C0D9  F2A9         	movff	?_powf+1,_decide_action$3105+1
  5313   004170  C0DA  F2AA         	movff	?_powf+2,_decide_action$3105+2
  5314   004174  C0DB  F2AB         	movff	?_powf+3,_decide_action$3105+3
  5315   004178                     
  5316                           ;color.c: 184:     rgb_comp[4] = sqrtf(powf((red_r - 0.705),2) + powf((green_r - 0.088),
      +                          2) + powf((blue_r - 0.207),2));
  5317   004178  C2A4  F002         	movff	_decide_action$3104,___fladd@b
  5318   00417C  C2A5  F003         	movff	_decide_action$3104+1,___fladd@b+1
  5319   004180  C2A6  F004         	movff	_decide_action$3104+2,___fladd@b+2
  5320   004184  C2A7  F005         	movff	_decide_action$3104+3,___fladd@b+3
  5321   004188  C2A8  F006         	movff	_decide_action$3105,___fladd@a
  5322   00418C  C2A9  F007         	movff	_decide_action$3105+1,___fladd@a+1
  5323   004190  C2AA  F008         	movff	_decide_action$3105+2,___fladd@a+2
  5324   004194  C2AB  F009         	movff	_decide_action$3105+3,___fladd@a+3
  5325   004198  ECC2  F023         	call	___fladd	;wreg free
  5326   00419C  C002  F012         	movff	?___fladd,sqrtf@x
  5327   0041A0  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5328   0041A4  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5329   0041A8  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5330   0041AC  EC37  F028         	call	_sqrtf	;wreg free
  5331   0041B0  C012  F260         	movff	?_sqrtf,decide_action@rgb_comp+16
  5332   0041B4  C013  F261         	movff	?_sqrtf+1,decide_action@rgb_comp+17
  5333   0041B8  C014  F262         	movff	?_sqrtf+2,decide_action@rgb_comp+18
  5334   0041BC  C015  F263         	movff	?_sqrtf+3,decide_action@rgb_comp+19
  5335   0041C0                     
  5336                           ;color.c: 185:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5337   0041C0  0E4A               	movlw	74
  5338   0041C2  6E06               	movwf	___fladd@a^0,c
  5339   0041C4  0E0C               	movlw	12
  5340   0041C6  6E07               	movwf	(___fladd@a+1)^0,c
  5341   0041C8  0E02               	movlw	2
  5342   0041CA  6E08               	movwf	(___fladd@a+2)^0,c
  5343   0041CC  0EBE               	movlw	190
  5344   0041CE  6E09               	movwf	(___fladd@a+3)^0,c
  5345   0041D0  C288  F002         	movff	decide_action@green_r,___fladd@b
  5346   0041D4  C289  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5347   0041D8  C28A  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5348   0041DC  C28B  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5349   0041E0  ECC2  F023         	call	___fladd	;wreg free
  5350   0041E4  C002  F290         	movff	?___fladd,_decide_action$3099
  5351   0041E8  C003  F291         	movff	?___fladd+1,_decide_action$3099+1
  5352   0041EC  C004  F292         	movff	?___fladd+2,_decide_action$3099+2
  5353   0041F0  C005  F293         	movff	?___fladd+3,_decide_action$3099+3
  5354   0041F4                     
  5355                           ;color.c: 185:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5356   0041F4  0E19               	movlw	25
  5357   0041F6  6E06               	movwf	___fladd@a^0,c
  5358   0041F8  0E04               	movlw	4
  5359   0041FA  6E07               	movwf	(___fladd@a+1)^0,c
  5360   0041FC  0E36               	movlw	54
  5361   0041FE  6E08               	movwf	(___fladd@a+2)^0,c
  5362   004200  0EBF               	movlw	191
  5363   004202  6E09               	movwf	(___fladd@a+3)^0,c
  5364   004204  C284  F002         	movff	decide_action@red_r,___fladd@b
  5365   004208  C285  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5366   00420C  C286  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5367   004210  C287  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5368   004214  ECC2  F023         	call	___fladd	;wreg free
  5369   004218  C002  F294         	movff	?___fladd,_decide_action$3100
  5370   00421C  C003  F295         	movff	?___fladd+1,_decide_action$3100+1
  5371   004220  C004  F296         	movff	?___fladd+2,_decide_action$3100+2
  5372   004224  C005  F297         	movff	?___fladd+3,_decide_action$3100+3
  5373   004228                     
  5374                           ;color.c: 185:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5375   004228  0E00               	movlw	0
  5376   00422A  0100               	movlb	0	; () banked
  5377   00422C  6FDC               	movwf	powf@y& (0+255),b
  5378   00422E  0E00               	movlw	0
  5379   004230  6FDD               	movwf	(powf@y+1)& (0+255),b
  5380   004232  0E00               	movlw	0
  5381   004234  6FDE               	movwf	(powf@y+2)& (0+255),b
  5382   004236  0E40               	movlw	64
  5383   004238  6FDF               	movwf	(powf@y+3)& (0+255),b
  5384   00423A  C290  F0D8         	movff	_decide_action$3099,powf@x
  5385   00423E  C291  F0D9         	movff	_decide_action$3099+1,powf@x+1
  5386   004242  C292  F0DA         	movff	_decide_action$3099+2,powf@x+2
  5387   004246  C293  F0DB         	movff	_decide_action$3099+3,powf@x+3
  5388   00424A  EC6B  F007         	call	_powf	;wreg free
  5389   00424E  C0D8  F298         	movff	?_powf,_decide_action$3101
  5390   004252  C0D9  F299         	movff	?_powf+1,_decide_action$3101+1
  5391   004256  C0DA  F29A         	movff	?_powf+2,_decide_action$3101+2
  5392   00425A  C0DB  F29B         	movff	?_powf+3,_decide_action$3101+3
  5393   00425E                     
  5394                           ;color.c: 185:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5395   00425E  0E00               	movlw	0
  5396   004260  0100               	movlb	0	; () banked
  5397   004262  6FDC               	movwf	powf@y& (0+255),b
  5398   004264  0E00               	movlw	0
  5399   004266  6FDD               	movwf	(powf@y+1)& (0+255),b
  5400   004268  0E00               	movlw	0
  5401   00426A  6FDE               	movwf	(powf@y+2)& (0+255),b
  5402   00426C  0E40               	movlw	64
  5403   00426E  6FDF               	movwf	(powf@y+3)& (0+255),b
  5404   004270  C294  F0D8         	movff	_decide_action$3100,powf@x
  5405   004274  C295  F0D9         	movff	_decide_action$3100+1,powf@x+1
  5406   004278  C296  F0DA         	movff	_decide_action$3100+2,powf@x+2
  5407   00427C  C297  F0DB         	movff	_decide_action$3100+3,powf@x+3
  5408   004280  EC6B  F007         	call	_powf	;wreg free
  5409   004284  C0D8  F29C         	movff	?_powf,_decide_action$3102
  5410   004288  C0D9  F29D         	movff	?_powf+1,_decide_action$3102+1
  5411   00428C  C0DA  F29E         	movff	?_powf+2,_decide_action$3102+2
  5412   004290  C0DB  F29F         	movff	?_powf+3,_decide_action$3102+3
  5413   004294                     
  5414                           ;color.c: 185:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5415   004294  0E79               	movlw	121
  5416   004296  6E06               	movwf	___fladd@a^0,c
  5417   004298  0EE9               	movlw	233
  5418   00429A  6E07               	movwf	(___fladd@a+1)^0,c
  5419   00429C  0E26               	movlw	38
  5420   00429E  6E08               	movwf	(___fladd@a+2)^0,c
  5421   0042A0  0EBE               	movlw	190
  5422   0042A2  6E09               	movwf	(___fladd@a+3)^0,c
  5423   0042A4  C28C  F002         	movff	decide_action@blue_r,___fladd@b
  5424   0042A8  C28D  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5425   0042AC  C28E  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5426   0042B0  C28F  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5427   0042B4  ECC2  F023         	call	___fladd	;wreg free
  5428   0042B8  C002  F2A0         	movff	?___fladd,_decide_action$3103
  5429   0042BC  C003  F2A1         	movff	?___fladd+1,_decide_action$3103+1
  5430   0042C0  C004  F2A2         	movff	?___fladd+2,_decide_action$3103+2
  5431   0042C4  C005  F2A3         	movff	?___fladd+3,_decide_action$3103+3
  5432   0042C8                     
  5433                           ;color.c: 185:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5434   0042C8  C298  F006         	movff	_decide_action$3101,___fladd@a
  5435   0042CC  C299  F007         	movff	_decide_action$3101+1,___fladd@a+1
  5436   0042D0  C29A  F008         	movff	_decide_action$3101+2,___fladd@a+2
  5437   0042D4  C29B  F009         	movff	_decide_action$3101+3,___fladd@a+3
  5438   0042D8  C29C  F002         	movff	_decide_action$3102,___fladd@b
  5439   0042DC  C29D  F003         	movff	_decide_action$3102+1,___fladd@b+1
  5440   0042E0  C29E  F004         	movff	_decide_action$3102+2,___fladd@b+2
  5441   0042E4  C29F  F005         	movff	_decide_action$3102+3,___fladd@b+3
  5442   0042E8  ECC2  F023         	call	___fladd	;wreg free
  5443   0042EC  C002  F2A4         	movff	?___fladd,_decide_action$3104
  5444   0042F0  C003  F2A5         	movff	?___fladd+1,_decide_action$3104+1
  5445   0042F4  C004  F2A6         	movff	?___fladd+2,_decide_action$3104+2
  5446   0042F8  C005  F2A7         	movff	?___fladd+3,_decide_action$3104+3
  5447   0042FC                     
  5448                           ;color.c: 185:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5449   0042FC  0E00               	movlw	0
  5450   0042FE  0100               	movlb	0	; () banked
  5451   004300  6FDC               	movwf	powf@y& (0+255),b
  5452   004302  0E00               	movlw	0
  5453   004304  6FDD               	movwf	(powf@y+1)& (0+255),b
  5454   004306  0E00               	movlw	0
  5455   004308  6FDE               	movwf	(powf@y+2)& (0+255),b
  5456   00430A  0E40               	movlw	64
  5457   00430C  6FDF               	movwf	(powf@y+3)& (0+255),b
  5458   00430E  C2A0  F0D8         	movff	_decide_action$3103,powf@x
  5459   004312  C2A1  F0D9         	movff	_decide_action$3103+1,powf@x+1
  5460   004316  C2A2  F0DA         	movff	_decide_action$3103+2,powf@x+2
  5461   00431A  C2A3  F0DB         	movff	_decide_action$3103+3,powf@x+3
  5462   00431E  EC6B  F007         	call	_powf	;wreg free
  5463   004322  C0D8  F2A8         	movff	?_powf,_decide_action$3105
  5464   004326  C0D9  F2A9         	movff	?_powf+1,_decide_action$3105+1
  5465   00432A  C0DA  F2AA         	movff	?_powf+2,_decide_action$3105+2
  5466   00432E  C0DB  F2AB         	movff	?_powf+3,_decide_action$3105+3
  5467                           
  5468                           ;color.c: 185:     rgb_comp[5] = sqrtf(powf((red_r - 0.711),2) + powf((green_r - 0.127),
      +                          2) + powf((blue_r - 0.163),2));
  5469   004332  C2A4  F002         	movff	_decide_action$3104,___fladd@b
  5470   004336  C2A5  F003         	movff	_decide_action$3104+1,___fladd@b+1
  5471   00433A  C2A6  F004         	movff	_decide_action$3104+2,___fladd@b+2
  5472   00433E  C2A7  F005         	movff	_decide_action$3104+3,___fladd@b+3
  5473   004342  C2A8  F006         	movff	_decide_action$3105,___fladd@a
  5474   004346  C2A9  F007         	movff	_decide_action$3105+1,___fladd@a+1
  5475   00434A  C2AA  F008         	movff	_decide_action$3105+2,___fladd@a+2
  5476   00434E  C2AB  F009         	movff	_decide_action$3105+3,___fladd@a+3
  5477   004352  ECC2  F023         	call	___fladd	;wreg free
  5478   004356  C002  F012         	movff	?___fladd,sqrtf@x
  5479   00435A  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5480   00435E  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5481   004362  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5482   004366  EC37  F028         	call	_sqrtf	;wreg free
  5483   00436A  C012  F264         	movff	?_sqrtf,decide_action@rgb_comp+20
  5484   00436E  C013  F265         	movff	?_sqrtf+1,decide_action@rgb_comp+21
  5485   004372  C014  F266         	movff	?_sqrtf+2,decide_action@rgb_comp+22
  5486   004376  C015  F267         	movff	?_sqrtf+3,decide_action@rgb_comp+23
  5487                           
  5488                           ;color.c: 186:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5489   00437A  0EE7               	movlw	231
  5490   00437C  6E06               	movwf	___fladd@a^0,c
  5491   00437E  0EFB               	movlw	251
  5492   004380  6E07               	movwf	(___fladd@a+1)^0,c
  5493   004382  0EE9               	movlw	233
  5494   004384  6E08               	movwf	(___fladd@a+2)^0,c
  5495   004386  0EBE               	movlw	190
  5496   004388  6E09               	movwf	(___fladd@a+3)^0,c
  5497   00438A  C288  F002         	movff	decide_action@green_r,___fladd@b
  5498   00438E  C289  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5499   004392  C28A  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5500   004396  C28B  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5501   00439A  ECC2  F023         	call	___fladd	;wreg free
  5502   00439E  C002  F290         	movff	?___fladd,_decide_action$3099
  5503   0043A2  C003  F291         	movff	?___fladd+1,_decide_action$3099+1
  5504   0043A6  C004  F292         	movff	?___fladd+2,_decide_action$3099+2
  5505   0043AA  C005  F293         	movff	?___fladd+3,_decide_action$3099+3
  5506                           
  5507                           ;color.c: 186:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5508   0043AE  0EF0               	movlw	240
  5509   0043B0  6E06               	movwf	___fladd@a^0,c
  5510   0043B2  0EA7               	movlw	167
  5511   0043B4  6E07               	movwf	(___fladd@a+1)^0,c
  5512   0043B6  0E46               	movlw	70
  5513   0043B8  6E08               	movwf	(___fladd@a+2)^0,c
  5514   0043BA  0EBE               	movlw	190
  5515   0043BC  6E09               	movwf	(___fladd@a+3)^0,c
  5516   0043BE  C284  F002         	movff	decide_action@red_r,___fladd@b
  5517   0043C2  C285  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5518   0043C6  C286  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5519   0043CA  C287  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5520   0043CE  ECC2  F023         	call	___fladd	;wreg free
  5521   0043D2  C002  F294         	movff	?___fladd,_decide_action$3100
  5522   0043D6  C003  F295         	movff	?___fladd+1,_decide_action$3100+1
  5523   0043DA  C004  F296         	movff	?___fladd+2,_decide_action$3100+2
  5524   0043DE  C005  F297         	movff	?___fladd+3,_decide_action$3100+3
  5525   0043E2                     
  5526                           ;color.c: 186:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5527   0043E2  0E00               	movlw	0
  5528   0043E4  0100               	movlb	0	; () banked
  5529   0043E6  6FDC               	movwf	powf@y& (0+255),b
  5530   0043E8  0E00               	movlw	0
  5531   0043EA  6FDD               	movwf	(powf@y+1)& (0+255),b
  5532   0043EC  0E00               	movlw	0
  5533   0043EE  6FDE               	movwf	(powf@y+2)& (0+255),b
  5534   0043F0  0E40               	movlw	64
  5535   0043F2  6FDF               	movwf	(powf@y+3)& (0+255),b
  5536   0043F4  C290  F0D8         	movff	_decide_action$3099,powf@x
  5537   0043F8  C291  F0D9         	movff	_decide_action$3099+1,powf@x+1
  5538   0043FC  C292  F0DA         	movff	_decide_action$3099+2,powf@x+2
  5539   004400  C293  F0DB         	movff	_decide_action$3099+3,powf@x+3
  5540   004404  EC6B  F007         	call	_powf	;wreg free
  5541   004408  C0D8  F298         	movff	?_powf,_decide_action$3101
  5542   00440C  C0D9  F299         	movff	?_powf+1,_decide_action$3101+1
  5543   004410  C0DA  F29A         	movff	?_powf+2,_decide_action$3101+2
  5544   004414  C0DB  F29B         	movff	?_powf+3,_decide_action$3101+3
  5545   004418                     
  5546                           ;color.c: 186:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5547   004418  0E00               	movlw	0
  5548   00441A  0100               	movlb	0	; () banked
  5549   00441C  6FDC               	movwf	powf@y& (0+255),b
  5550   00441E  0E00               	movlw	0
  5551   004420  6FDD               	movwf	(powf@y+1)& (0+255),b
  5552   004422  0E00               	movlw	0
  5553   004424  6FDE               	movwf	(powf@y+2)& (0+255),b
  5554   004426  0E40               	movlw	64
  5555   004428  6FDF               	movwf	(powf@y+3)& (0+255),b
  5556   00442A  C294  F0D8         	movff	_decide_action$3100,powf@x
  5557   00442E  C295  F0D9         	movff	_decide_action$3100+1,powf@x+1
  5558   004432  C296  F0DA         	movff	_decide_action$3100+2,powf@x+2
  5559   004436  C297  F0DB         	movff	_decide_action$3100+3,powf@x+3
  5560   00443A  EC6B  F007         	call	_powf	;wreg free
  5561   00443E  C0D8  F29C         	movff	?_powf,_decide_action$3102
  5562   004442  C0D9  F29D         	movff	?_powf+1,_decide_action$3102+1
  5563   004446  C0DA  F29E         	movff	?_powf+2,_decide_action$3102+2
  5564   00444A  C0DB  F29F         	movff	?_powf+3,_decide_action$3102+3
  5565                           
  5566                           ;color.c: 186:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5567   00444E  0E21               	movlw	33
  5568   004450  6E06               	movwf	___fladd@a^0,c
  5569   004452  0EB0               	movlw	176
  5570   004454  6E07               	movwf	(___fladd@a+1)^0,c
  5571   004456  0EB2               	movlw	178
  5572   004458  6E08               	movwf	(___fladd@a+2)^0,c
  5573   00445A  0EBE               	movlw	190
  5574   00445C  6E09               	movwf	(___fladd@a+3)^0,c
  5575   00445E  C28C  F002         	movff	decide_action@blue_r,___fladd@b
  5576   004462  C28D  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5577   004466  C28E  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5578   00446A  C28F  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5579   00446E  ECC2  F023         	call	___fladd	;wreg free
  5580   004472  C002  F2A0         	movff	?___fladd,_decide_action$3103
  5581   004476  C003  F2A1         	movff	?___fladd+1,_decide_action$3103+1
  5582   00447A  C004  F2A2         	movff	?___fladd+2,_decide_action$3103+2
  5583   00447E  C005  F2A3         	movff	?___fladd+3,_decide_action$3103+3
  5584                           
  5585                           ;color.c: 186:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5586   004482  C298  F006         	movff	_decide_action$3101,___fladd@a
  5587   004486  C299  F007         	movff	_decide_action$3101+1,___fladd@a+1
  5588   00448A  C29A  F008         	movff	_decide_action$3101+2,___fladd@a+2
  5589   00448E  C29B  F009         	movff	_decide_action$3101+3,___fladd@a+3
  5590   004492  C29C  F002         	movff	_decide_action$3102,___fladd@b
  5591   004496  C29D  F003         	movff	_decide_action$3102+1,___fladd@b+1
  5592   00449A  C29E  F004         	movff	_decide_action$3102+2,___fladd@b+2
  5593   00449E  C29F  F005         	movff	_decide_action$3102+3,___fladd@b+3
  5594   0044A2  ECC2  F023         	call	___fladd	;wreg free
  5595   0044A6  C002  F2A4         	movff	?___fladd,_decide_action$3104
  5596   0044AA  C003  F2A5         	movff	?___fladd+1,_decide_action$3104+1
  5597   0044AE  C004  F2A6         	movff	?___fladd+2,_decide_action$3104+2
  5598   0044B2  C005  F2A7         	movff	?___fladd+3,_decide_action$3104+3
  5599   0044B6                     
  5600                           ;color.c: 186:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5601   0044B6  0E00               	movlw	0
  5602   0044B8  0100               	movlb	0	; () banked
  5603   0044BA  6FDC               	movwf	powf@y& (0+255),b
  5604   0044BC  0E00               	movlw	0
  5605   0044BE  6FDD               	movwf	(powf@y+1)& (0+255),b
  5606   0044C0  0E00               	movlw	0
  5607   0044C2  6FDE               	movwf	(powf@y+2)& (0+255),b
  5608   0044C4  0E40               	movlw	64
  5609   0044C6  6FDF               	movwf	(powf@y+3)& (0+255),b
  5610   0044C8  C2A0  F0D8         	movff	_decide_action$3103,powf@x
  5611   0044CC  C2A1  F0D9         	movff	_decide_action$3103+1,powf@x+1
  5612   0044D0  C2A2  F0DA         	movff	_decide_action$3103+2,powf@x+2
  5613   0044D4  C2A3  F0DB         	movff	_decide_action$3103+3,powf@x+3
  5614   0044D8  EC6B  F007         	call	_powf	;wreg free
  5615   0044DC  C0D8  F2A8         	movff	?_powf,_decide_action$3105
  5616   0044E0  C0D9  F2A9         	movff	?_powf+1,_decide_action$3105+1
  5617   0044E4  C0DA  F2AA         	movff	?_powf+2,_decide_action$3105+2
  5618   0044E8  C0DB  F2AB         	movff	?_powf+3,_decide_action$3105+3
  5619   0044EC                     
  5620                           ;color.c: 186:     rgb_comp[6] = sqrtf(powf((red_r - 0.194),2) + powf((green_r - 0.457),
      +                          2) + powf((blue_r - 0.349),2));
  5621   0044EC  C2A4  F002         	movff	_decide_action$3104,___fladd@b
  5622   0044F0  C2A5  F003         	movff	_decide_action$3104+1,___fladd@b+1
  5623   0044F4  C2A6  F004         	movff	_decide_action$3104+2,___fladd@b+2
  5624   0044F8  C2A7  F005         	movff	_decide_action$3104+3,___fladd@b+3
  5625   0044FC  C2A8  F006         	movff	_decide_action$3105,___fladd@a
  5626   004500  C2A9  F007         	movff	_decide_action$3105+1,___fladd@a+1
  5627   004504  C2AA  F008         	movff	_decide_action$3105+2,___fladd@a+2
  5628   004508  C2AB  F009         	movff	_decide_action$3105+3,___fladd@a+3
  5629   00450C  ECC2  F023         	call	___fladd	;wreg free
  5630   004510  C002  F012         	movff	?___fladd,sqrtf@x
  5631   004514  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5632   004518  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5633   00451C  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5634   004520  EC37  F028         	call	_sqrtf	;wreg free
  5635   004524  C012  F268         	movff	?_sqrtf,decide_action@rgb_comp+24
  5636   004528  C013  F269         	movff	?_sqrtf+1,decide_action@rgb_comp+25
  5637   00452C  C014  F26A         	movff	?_sqrtf+2,decide_action@rgb_comp+26
  5638   004530  C015  F26B         	movff	?_sqrtf+3,decide_action@rgb_comp+27
  5639   004534                     
  5640                           ;color.c: 187:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5641   004534  0EA8               	movlw	168
  5642   004536  6E06               	movwf	___fladd@a^0,c
  5643   004538  0EC6               	movlw	198
  5644   00453A  6E07               	movwf	(___fladd@a+1)^0,c
  5645   00453C  0ECB               	movlw	203
  5646   00453E  6E08               	movwf	(___fladd@a+2)^0,c
  5647   004540  0EBE               	movlw	190
  5648   004542  6E09               	movwf	(___fladd@a+3)^0,c
  5649   004544  C288  F002         	movff	decide_action@green_r,___fladd@b
  5650   004548  C289  F003         	movff	decide_action@green_r+1,___fladd@b+1
  5651   00454C  C28A  F004         	movff	decide_action@green_r+2,___fladd@b+2
  5652   004550  C28B  F005         	movff	decide_action@green_r+3,___fladd@b+3
  5653   004554  ECC2  F023         	call	___fladd	;wreg free
  5654   004558  C002  F290         	movff	?___fladd,_decide_action$3099
  5655   00455C  C003  F291         	movff	?___fladd+1,_decide_action$3099+1
  5656   004560  C004  F292         	movff	?___fladd+2,_decide_action$3099+2
  5657   004564  C005  F293         	movff	?___fladd+3,_decide_action$3099+3
  5658   004568                     
  5659                           ;color.c: 187:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5660   004568  0EF4               	movlw	244
  5661   00456A  6E06               	movwf	___fladd@a^0,c
  5662   00456C  0EFD               	movlw	253
  5663   00456E  6E07               	movwf	(___fladd@a+1)^0,c
  5664   004570  0E94               	movlw	148
  5665   004572  6E08               	movwf	(___fladd@a+2)^0,c
  5666   004574  0EBE               	movlw	190
  5667   004576  6E09               	movwf	(___fladd@a+3)^0,c
  5668   004578  C284  F002         	movff	decide_action@red_r,___fladd@b
  5669   00457C  C285  F003         	movff	decide_action@red_r+1,___fladd@b+1
  5670   004580  C286  F004         	movff	decide_action@red_r+2,___fladd@b+2
  5671   004584  C287  F005         	movff	decide_action@red_r+3,___fladd@b+3
  5672   004588  ECC2  F023         	call	___fladd	;wreg free
  5673   00458C  C002  F294         	movff	?___fladd,_decide_action$3100
  5674   004590  C003  F295         	movff	?___fladd+1,_decide_action$3100+1
  5675   004594  C004  F296         	movff	?___fladd+2,_decide_action$3100+2
  5676   004598  C005  F297         	movff	?___fladd+3,_decide_action$3100+3
  5677                           
  5678                           ;color.c: 187:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5679   00459C  0E00               	movlw	0
  5680   00459E  0100               	movlb	0	; () banked
  5681   0045A0  6FDC               	movwf	powf@y& (0+255),b
  5682   0045A2  0E00               	movlw	0
  5683   0045A4  6FDD               	movwf	(powf@y+1)& (0+255),b
  5684   0045A6  0E00               	movlw	0
  5685   0045A8  6FDE               	movwf	(powf@y+2)& (0+255),b
  5686   0045AA  0E40               	movlw	64
  5687   0045AC  6FDF               	movwf	(powf@y+3)& (0+255),b
  5688   0045AE  C290  F0D8         	movff	_decide_action$3099,powf@x
  5689   0045B2  C291  F0D9         	movff	_decide_action$3099+1,powf@x+1
  5690   0045B6  C292  F0DA         	movff	_decide_action$3099+2,powf@x+2
  5691   0045BA  C293  F0DB         	movff	_decide_action$3099+3,powf@x+3
  5692   0045BE  EC6B  F007         	call	_powf	;wreg free
  5693   0045C2  C0D8  F298         	movff	?_powf,_decide_action$3101
  5694   0045C6  C0D9  F299         	movff	?_powf+1,_decide_action$3101+1
  5695   0045CA  C0DA  F29A         	movff	?_powf+2,_decide_action$3101+2
  5696   0045CE  C0DB  F29B         	movff	?_powf+3,_decide_action$3101+3
  5697                           
  5698                           ;color.c: 187:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5699   0045D2  0E00               	movlw	0
  5700   0045D4  0100               	movlb	0	; () banked
  5701   0045D6  6FDC               	movwf	powf@y& (0+255),b
  5702   0045D8  0E00               	movlw	0
  5703   0045DA  6FDD               	movwf	(powf@y+1)& (0+255),b
  5704   0045DC  0E00               	movlw	0
  5705   0045DE  6FDE               	movwf	(powf@y+2)& (0+255),b
  5706   0045E0  0E40               	movlw	64
  5707   0045E2  6FDF               	movwf	(powf@y+3)& (0+255),b
  5708   0045E4  C294  F0D8         	movff	_decide_action$3100,powf@x
  5709   0045E8  C295  F0D9         	movff	_decide_action$3100+1,powf@x+1
  5710   0045EC  C296  F0DA         	movff	_decide_action$3100+2,powf@x+2
  5711   0045F0  C297  F0DB         	movff	_decide_action$3100+3,powf@x+3
  5712   0045F4  EC6B  F007         	call	_powf	;wreg free
  5713   0045F8  C0D8  F29C         	movff	?_powf,_decide_action$3102
  5714   0045FC  C0D9  F29D         	movff	?_powf+1,_decide_action$3102+1
  5715   004600  C0DA  F29E         	movff	?_powf+2,_decide_action$3102+2
  5716   004604  C0DB  F29F         	movff	?_powf+3,_decide_action$3102+3
  5717   004608                     
  5718                           ;color.c: 187:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5719   004608  0E64               	movlw	100
  5720   00460A  6E06               	movwf	___fladd@a^0,c
  5721   00460C  0E3B               	movlw	59
  5722   00460E  6E07               	movwf	(___fladd@a+1)^0,c
  5723   004610  0E9F               	movlw	159
  5724   004612  6E08               	movwf	(___fladd@a+2)^0,c
  5725   004614  0EBE               	movlw	190
  5726   004616  6E09               	movwf	(___fladd@a+3)^0,c
  5727   004618  C28C  F002         	movff	decide_action@blue_r,___fladd@b
  5728   00461C  C28D  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  5729   004620  C28E  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  5730   004624  C28F  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  5731   004628  ECC2  F023         	call	___fladd	;wreg free
  5732   00462C  C002  F2A0         	movff	?___fladd,_decide_action$3103
  5733   004630  C003  F2A1         	movff	?___fladd+1,_decide_action$3103+1
  5734   004634  C004  F2A2         	movff	?___fladd+2,_decide_action$3103+2
  5735   004638  C005  F2A3         	movff	?___fladd+3,_decide_action$3103+3
  5736   00463C                     
  5737                           ;color.c: 187:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5738   00463C  C298  F006         	movff	_decide_action$3101,___fladd@a
  5739   004640  C299  F007         	movff	_decide_action$3101+1,___fladd@a+1
  5740   004644  C29A  F008         	movff	_decide_action$3101+2,___fladd@a+2
  5741   004648  C29B  F009         	movff	_decide_action$3101+3,___fladd@a+3
  5742   00464C  C29C  F002         	movff	_decide_action$3102,___fladd@b
  5743   004650  C29D  F003         	movff	_decide_action$3102+1,___fladd@b+1
  5744   004654  C29E  F004         	movff	_decide_action$3102+2,___fladd@b+2
  5745   004658  C29F  F005         	movff	_decide_action$3102+3,___fladd@b+3
  5746   00465C  ECC2  F023         	call	___fladd	;wreg free
  5747   004660  C002  F2A4         	movff	?___fladd,_decide_action$3104
  5748   004664  C003  F2A5         	movff	?___fladd+1,_decide_action$3104+1
  5749   004668  C004  F2A6         	movff	?___fladd+2,_decide_action$3104+2
  5750   00466C  C005  F2A7         	movff	?___fladd+3,_decide_action$3104+3
  5751                           
  5752                           ;color.c: 187:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5753   004670  0E00               	movlw	0
  5754   004672  0100               	movlb	0	; () banked
  5755   004674  6FDC               	movwf	powf@y& (0+255),b
  5756   004676  0E00               	movlw	0
  5757   004678  6FDD               	movwf	(powf@y+1)& (0+255),b
  5758   00467A  0E00               	movlw	0
  5759   00467C  6FDE               	movwf	(powf@y+2)& (0+255),b
  5760   00467E  0E40               	movlw	64
  5761   004680  6FDF               	movwf	(powf@y+3)& (0+255),b
  5762   004682  C2A0  F0D8         	movff	_decide_action$3103,powf@x
  5763   004686  C2A1  F0D9         	movff	_decide_action$3103+1,powf@x+1
  5764   00468A  C2A2  F0DA         	movff	_decide_action$3103+2,powf@x+2
  5765   00468E  C2A3  F0DB         	movff	_decide_action$3103+3,powf@x+3
  5766   004692  EC6B  F007         	call	_powf	;wreg free
  5767   004696  C0D8  F2A8         	movff	?_powf,_decide_action$3105
  5768   00469A  C0D9  F2A9         	movff	?_powf+1,_decide_action$3105+1
  5769   00469E  C0DA  F2AA         	movff	?_powf+2,_decide_action$3105+2
  5770   0046A2  C0DB  F2AB         	movff	?_powf+3,_decide_action$3105+3
  5771   0046A6                     
  5772                           ;color.c: 187:     rgb_comp[7] = sqrtf(powf((red_r - 0.291),2) + powf((green_r - 0.398),
      +                          2) + powf((blue_r - 0.311),2));
  5773   0046A6  C2A4  F002         	movff	_decide_action$3104,___fladd@b
  5774   0046AA  C2A5  F003         	movff	_decide_action$3104+1,___fladd@b+1
  5775   0046AE  C2A6  F004         	movff	_decide_action$3104+2,___fladd@b+2
  5776   0046B2  C2A7  F005         	movff	_decide_action$3104+3,___fladd@b+3
  5777   0046B6  C2A8  F006         	movff	_decide_action$3105,___fladd@a
  5778   0046BA  C2A9  F007         	movff	_decide_action$3105+1,___fladd@a+1
  5779   0046BE  C2AA  F008         	movff	_decide_action$3105+2,___fladd@a+2
  5780   0046C2  C2AB  F009         	movff	_decide_action$3105+3,___fladd@a+3
  5781   0046C6  ECC2  F023         	call	___fladd	;wreg free
  5782   0046CA  C002  F012         	movff	?___fladd,sqrtf@x
  5783   0046CE  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  5784   0046D2  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  5785   0046D6  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  5786   0046DA  EC37  F028         	call	_sqrtf	;wreg free
  5787   0046DE  C012  F26C         	movff	?_sqrtf,decide_action@rgb_comp+28
  5788   0046E2  C013  F26D         	movff	?_sqrtf+1,decide_action@rgb_comp+29
  5789   0046E6  C014  F26E         	movff	?_sqrtf+2,decide_action@rgb_comp+30
  5790   0046EA  C015  F26F         	movff	?_sqrtf+3,decide_action@rgb_comp+31
  5791   0046EE                     
  5792                           ;color.c: 189:     action = 0;
  5793   0046EE  0E00               	movlw	0
  5794   0046F0  0102               	movlb	2	; () banked
  5795   0046F2  6F70               	movwf	decide_action@action& (0+255),b
  5796   0046F4                     
  5797                           ; BSR set to: 2
  5798                           ;color.c: 191:     for(char i = 0; i < 8; i +=1){
  5799   0046F4  0E00               	movlw	0
  5800   0046F6  6F7B               	movwf	decide_action@i& (0+255),b
  5801   0046F8                     l7674:
  5802                           
  5803                           ; BSR set to: 2
  5804   0046F8  0E07               	movlw	7
  5805   0046FA  657B               	cpfsgt	decide_action@i& (0+255),b
  5806   0046FC  EF82  F023         	goto	u6681
  5807   004700  EF84  F023         	goto	u6680
  5808   004704                     u6681:
  5809   004704  EF86  F023         	goto	l7678
  5810   004708                     u6680:
  5811   004708  EFB5  F023         	goto	l7686
  5812   00470C                     l7678:
  5813                           
  5814                           ; BSR set to: 2
  5815                           ;color.c: 192:         if(rgb_comp[i] < rgb_comp[action]){
  5816   00470C  517B               	movf	decide_action@i& (0+255),w,b
  5817   00470E  0D04               	mullw	4
  5818   004710  0E50               	movlw	low decide_action@rgb_comp
  5819   004712  24F3               	addwf	243,w,c
  5820   004714  6ED9               	movwf	fsr2l,c
  5821   004716  0E02               	movlw	high decide_action@rgb_comp
  5822   004718  20F4               	addwfc	prodh,w,c
  5823   00471A  6EDA               	movwf	fsr2h,c
  5824   00471C  CFDE F04C          	movff	postinc2,___flge@ff1
  5825   004720  CFDE F04D          	movff	postinc2,___flge@ff1+1
  5826   004724  CFDE F04E          	movff	postinc2,___flge@ff1+2
  5827   004728  CFDE F04F          	movff	postinc2,___flge@ff1+3
  5828   00472C  5170               	movf	decide_action@action& (0+255),w,b
  5829   00472E  0D04               	mullw	4
  5830   004730  0E50               	movlw	low decide_action@rgb_comp
  5831   004732  24F3               	addwf	243,w,c
  5832   004734  6ED9               	movwf	fsr2l,c
  5833   004736  0E02               	movlw	high decide_action@rgb_comp
  5834   004738  20F4               	addwfc	prodh,w,c
  5835   00473A  6EDA               	movwf	fsr2h,c
  5836   00473C  CFDE F050          	movff	postinc2,___flge@ff2
  5837   004740  CFDE F051          	movff	postinc2,___flge@ff2+1
  5838   004744  CFDE F052          	movff	postinc2,___flge@ff2+2
  5839   004748  CFDE F053          	movff	postinc2,___flge@ff2+3
  5840   00474C  ECD8  F030         	call	___flge	;wreg free
  5841   004750  B0D8               	btfsc	status,0,c
  5842   004752  EFAD  F023         	goto	u6691
  5843   004756  EFAF  F023         	goto	u6690
  5844   00475A                     u6691:
  5845   00475A  EFB1  F023         	goto	l7682
  5846   00475E                     u6690:
  5847   00475E                     
  5848                           ;color.c: 193:             action = i;
  5849   00475E  C27B  F270         	movff	decide_action@i,decide_action@action
  5850   004762                     l7682:
  5851                           
  5852                           ;color.c: 195:     }
  5853   004762  0102               	movlb	2	; () banked
  5854   004764  2B7B               	incf	decide_action@i& (0+255),f,b
  5855   004766  EF7C  F023         	goto	l7674
  5856   00476A                     l7686:
  5857                           
  5858                           ; BSR set to: 2
  5859                           ;color.c: 198:     color_writetoaddr(0x01, 0xFF);
  5860   00476A  0EFF               	movlw	255
  5861   00476C  6E04               	movwf	color_writetoaddr@value^0,c
  5862   00476E  0E01               	movlw	1
  5863   004770  ECAC  F038         	call	_color_writetoaddr
  5864                           
  5865                           ;color.c: 199:     color_writetoaddr(0x03, 0xFF);
  5866   004774  0EFF               	movlw	255
  5867   004776  6E04               	movwf	color_writetoaddr@value^0,c
  5868   004778  0E03               	movlw	3
  5869   00477A  ECAC  F038         	call	_color_writetoaddr
  5870   00477E                     
  5871                           ;color.c: 201:     return action;
  5872   00477E  0102               	movlb	2	; () banked
  5873   004780  5170               	movf	decide_action@action& (0+255),w,b
  5874   004782                     
  5875                           ; BSR set to: 2
  5876   004782  0012               	return		;funcret
  5877   004784                     __end_of_decide_action:
  5878                           	callstack 0
  5879                           
  5880 ;; *************** function _sprintf *****************
  5881 ;; Defined at:
  5882 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  s               2   26[COMRAM] PTR unsigned char 
  5885 ;;		 -> main@blue_val(20), main@green_val(20), main@red_val(20), main@clear_val(20), 
  5886 ;;		 -> decide_action@blue_val(20), decide_action@green_val(20), decide_action@red_val(20), 
  5887 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  5888 ;;		 -> STR_18(14), STR_17(13), STR_16(14), STR_15(12), 
  5889 ;;		 -> STR_14(16), STR_13(13), STR_12(14), STR_11(12), 
  5890 ;;		 -> STR_10(15), STR_9(15), STR_8(14), STR_7(12), 
  5891 ;;		 -> STR_6(15), STR_5(14), STR_4(12), STR_3(15), 
  5892 ;;		 -> STR_2(14), STR_1(12), 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  f              12   34[COMRAM] struct _IO_FILE
  5895 ;;  ret             2    0        int 
  5896 ;;  ap              1   33[COMRAM] PTR void [1]
  5897 ;;		 -> ?_sprintf(2), 
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  2   26[COMRAM] int 
  5900 ;; Registers used:
  5901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5907 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5908 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5910 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5911 ;;Total ram usage:       20 bytes
  5912 ;; Hardware stack levels used: 1
  5913 ;; Hardware stack levels required when called: 6
  5914 ;; This function calls:
  5915 ;;		_vfprintf
  5916 ;; This function is called by:
  5917 ;;		_decide_action
  5918 ;;		_main
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           	psect	text17
  5923   006FAA                     __ptext17:
  5924                           	callstack 0
  5925   006FAA                     _sprintf:
  5926                           	callstack 24
  5927   006FAA  0E1E               	movlw	low (?_sprintf+3)
  5928   006FAC  6E22               	movwf	sprintf@ap^0,c
  5929   006FAE  C01B  F023         	movff	sprintf@s,sprintf@f
  5930   006FB2  C01C  F024         	movff	sprintf@s+1,sprintf@f+1
  5931   006FB6  0E00               	movlw	0
  5932   006FB8  6E27               	movwf	(sprintf@f+4)^0,c
  5933   006FBA  0E00               	movlw	0
  5934   006FBC  6E26               	movwf	(sprintf@f+3)^0,c
  5935   006FBE  0E00               	movlw	0
  5936   006FC0  6E2E               	movwf	(sprintf@f+11)^0,c
  5937   006FC2  0E00               	movlw	0
  5938   006FC4  6E2D               	movwf	(sprintf@f+10)^0,c
  5939   006FC6  0E23               	movlw	low sprintf@f
  5940   006FC8  6E17               	movwf	vfprintf@fp^0,c
  5941   006FCA  C01D  F018         	movff	sprintf@fmt,vfprintf@fmt
  5942   006FCE  0E22               	movlw	low sprintf@ap
  5943   006FD0  6E19               	movwf	vfprintf@ap^0,c
  5944   006FD2  ECF3  F037         	call	_vfprintf	;wreg free
  5945   006FD6  5026               	movf	(sprintf@f+3)^0,w,c
  5946   006FD8  241B               	addwf	sprintf@s^0,w,c
  5947   006FDA  6ED9               	movwf	fsr2l,c
  5948   006FDC  5027               	movf	(sprintf@f+4)^0,w,c
  5949   006FDE  201C               	addwfc	(sprintf@s+1)^0,w,c
  5950   006FE0  6EDA               	movwf	fsr2h,c
  5951   006FE2  6ADF               	clrf	indf2,c
  5952   006FE4  0012               	return		;funcret
  5953   006FE6                     __end_of_sprintf:
  5954                           	callstack 0
  5955                           
  5956 ;; *************** function _vfprintf *****************
  5957 ;; Defined at:
  5958 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  5961 ;;		 -> sprintf@f(12), 
  5962 ;;  fmt             1   23[COMRAM] PTR const unsigned char 
  5963 ;;		 -> STR_18(14), STR_17(13), STR_16(14), STR_15(12), 
  5964 ;;		 -> STR_14(16), STR_13(13), STR_12(14), STR_11(12), 
  5965 ;;		 -> STR_10(15), STR_9(15), STR_8(14), STR_7(12), 
  5966 ;;		 -> STR_6(15), STR_5(14), STR_4(12), STR_3(15), 
  5967 ;;		 -> STR_2(14), STR_1(12), 
  5968 ;;  ap              1   24[COMRAM] PTR PTR void 
  5969 ;;		 -> sprintf@ap(1), 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;  cfmt            1   25[COMRAM] PTR unsigned char 
  5972 ;;		 -> STR_18(14), STR_17(13), STR_16(14), STR_15(12), 
  5973 ;;		 -> STR_14(16), STR_13(13), STR_12(14), STR_11(12), 
  5974 ;;		 -> STR_10(15), STR_9(15), STR_8(14), STR_7(12), 
  5975 ;;		 -> STR_6(15), STR_5(14), STR_4(12), STR_3(15), 
  5976 ;;		 -> STR_2(14), STR_1(12), 
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  2   22[COMRAM] int 
  5979 ;; Registers used:
  5980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5986 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5987 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5989 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5990 ;;Total ram usage:        4 bytes
  5991 ;; Hardware stack levels used: 1
  5992 ;; Hardware stack levels required when called: 5
  5993 ;; This function calls:
  5994 ;;		_vfpfcnvrt
  5995 ;; This function is called by:
  5996 ;;		_sprintf
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           	psect	text18
  6001   006FE6                     __ptext18:
  6002                           	callstack 0
  6003   006FE6                     _vfprintf:
  6004                           	callstack 24
  6005   006FE6                     
  6006                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6007   006FE6  C018  F01A         	movff	vfprintf@fmt,vfprintf@cfmt
  6008                           
  6009                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6010   006FEA  EFFF  F037         	goto	l4548
  6011   006FEE                     l4546:
  6012                           
  6013                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6014   006FEE  C017  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  6015   006FF2  0E1A               	movlw	low vfprintf@cfmt
  6016   006FF4  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  6017   006FF6  C019  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  6018   006FFA  EC4D  F02F         	call	_vfpfcnvrt	;wreg free
  6019   006FFE                     l4548:
  6020                           
  6021                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6022   006FFE  C01A  FFF6         	movff	vfprintf@cfmt,tblptrl
  6023   007002                     	if	0	;There is only one active tblptr byte
  6024   007002                     	endif
  6025   007002                     	if	0	;tblptru may be non-zero
  6026   007002                     	endif
  6027   007002                     	if	0	;tblptru may be non-zero
  6028   007002                     	endif
  6029   007002  0008               	tblrd		*
  6030   007004  50F5               	movf	tablat,w,c
  6031   007006  0900               	iorlw	0
  6032   007008  A4D8               	btfss	status,2,c
  6033   00700A  EF09  F038         	goto	u4211
  6034   00700E  EF0B  F038         	goto	u4210
  6035   007012                     u4211:
  6036   007012  EFF7  F037         	goto	l4546
  6037   007016                     u4210:
  6038   007016                     
  6039                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6040   007016  0E00               	movlw	0
  6041   007018  6E18               	movwf	(?_vfprintf+1)^0,c
  6042   00701A  0E00               	movlw	0
  6043   00701C  6E17               	movwf	?_vfprintf^0,c
  6044   00701E  0012               	return		;funcret
  6045   007020                     __end_of_vfprintf:
  6046                           	callstack 0
  6047                           
  6048 ;; *************** function _vfpfcnvrt *****************
  6049 ;; Defined at:
  6050 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  6053 ;;		 -> sprintf@f(12), 
  6054 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  6055 ;;		 -> vfprintf@cfmt(1), 
  6056 ;;  ap              1   13[COMRAM] PTR PTR void 
  6057 ;;		 -> sprintf@ap(1), 
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;  convarg         4   17[COMRAM] struct .
  6060 ;;  c               1   21[COMRAM] unsigned char 
  6061 ;;  cp              1   16[COMRAM] PTR unsigned char 
  6062 ;;		 -> STR_18(14), STR_17(13), STR_16(14), STR_15(12), 
  6063 ;;		 -> STR_14(16), STR_13(13), STR_12(14), STR_11(12), 
  6064 ;;		 -> STR_10(15), STR_9(15), STR_8(14), STR_7(12), 
  6065 ;;		 -> STR_6(15), STR_5(14), STR_4(12), STR_3(15), 
  6066 ;;		 -> STR_2(14), STR_1(12), 
  6067 ;;  done            1   15[COMRAM] _Bool 
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1    wreg      void 
  6070 ;; Registers used:
  6071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6077 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6078 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6079 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6080 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6081 ;;Total ram usage:       11 bytes
  6082 ;; Hardware stack levels used: 1
  6083 ;; Hardware stack levels required when called: 4
  6084 ;; This function calls:
  6085 ;;		___awdiv
  6086 ;;		___awmod
  6087 ;;		_abs
  6088 ;;		_fputc
  6089 ;; This function is called by:
  6090 ;;		_vfprintf
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text19
  6095   005E9A                     __ptext19:
  6096                           	callstack 0
  6097   005E9A                     _vfpfcnvrt:
  6098                           	callstack 24
  6099   005E9A                     
  6100                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6101   005E9A  500D               	movf	vfpfcnvrt@fmt^0,w,c
  6102   005E9C  6ED9               	movwf	fsr2l,c
  6103   005E9E  6ADA               	clrf	fsr2h,c
  6104   005EA0  CFDF FFF6          	movff	indf2,tblptrl
  6105   005EA4                     	if	0	;There is only one active tblptr byte
  6106   005EA4                     	endif
  6107   005EA4                     	if	0	;tblptru may be non-zero
  6108   005EA4                     	endif
  6109   005EA4                     	if	0	;tblptru may be non-zero
  6110   005EA4                     	endif
  6111   005EA4  0008               	tblrd		*
  6112   005EA6  50F5               	movf	tablat,w,c
  6113   005EA8  0A25               	xorlw	37
  6114   005EAA  A4D8               	btfss	status,2,c
  6115   005EAC  EF5A  F02F         	goto	u3531
  6116   005EB0  EF5C  F02F         	goto	u3530
  6117   005EB4                     u3531:
  6118   005EB4  EF12  F030         	goto	l4202
  6119   005EB8                     u3530:
  6120   005EB8                     
  6121                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6122   005EB8  500D               	movf	vfpfcnvrt@fmt^0,w,c
  6123   005EBA  6ED9               	movwf	fsr2l,c
  6124   005EBC  6ADA               	clrf	fsr2h,c
  6125   005EBE  2ADF               	incf	indf2,f,c
  6126   005EC0                     
  6127                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6128   005EC0  0E00               	movlw	0
  6129   005EC2  0100               	movlb	0	; () banked
  6130   005EC4  6FD3               	movwf	(_width+1)& (0+255),b
  6131   005EC6  0E00               	movlw	0
  6132   005EC8  6FD2               	movwf	_width& (0+255),b
  6133   005ECA  C0D2  F0D6         	movff	_width,_flags
  6134   005ECE                     
  6135                           ; BSR set to: 0
  6136                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6137   005ECE  69D4               	setf	_prec& (0+255),b
  6138   005ED0  69D5               	setf	(_prec+1)& (0+255),b
  6139   005ED2                     
  6140                           ; BSR set to: 0
  6141                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6142   005ED2  500D               	movf	vfpfcnvrt@fmt^0,w,c
  6143   005ED4  6ED9               	movwf	fsr2l,c
  6144   005ED6  6ADA               	clrf	fsr2h,c
  6145   005ED8  50DF               	movf	indf2,w,c
  6146   005EDA  6E11               	movwf	vfpfcnvrt@cp^0,c
  6147   005EDC                     
  6148                           ; BSR set to: 0
  6149                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6150   005EDC  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6151   005EE0                     	if	0	;There is only one active tblptr byte
  6152   005EE0                     	endif
  6153   005EE0                     	if	0	;tblptru may be non-zero
  6154   005EE0                     	endif
  6155   005EE0                     	if	0	;tblptru may be non-zero
  6156   005EE0                     	endif
  6157   005EE0  0008               	tblrd		*
  6158   005EE2  50F5               	movf	tablat,w,c
  6159   005EE4  0A64               	xorlw	100
  6160   005EE6  B4D8               	btfsc	status,2,c
  6161   005EE8  EF78  F02F         	goto	u3541
  6162   005EEC  EF7A  F02F         	goto	u3540
  6163   005EF0                     u3541:
  6164   005EF0  EF86  F02F         	goto	l4172
  6165   005EF4                     u3540:
  6166   005EF4                     
  6167                           ; BSR set to: 0
  6168   005EF4  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6169   005EF8                     	if	0	;There is only one active tblptr byte
  6170   005EF8                     	endif
  6171   005EF8                     	if	0	;tblptru may be non-zero
  6172   005EF8                     	endif
  6173   005EF8                     	if	0	;tblptru may be non-zero
  6174   005EF8                     	endif
  6175   005EF8  0008               	tblrd		*
  6176   005EFA  50F5               	movf	tablat,w,c
  6177   005EFC  0A69               	xorlw	105
  6178   005EFE  A4D8               	btfss	status,2,c
  6179   005F00  EF84  F02F         	goto	u3551
  6180   005F04  EF86  F02F         	goto	u3550
  6181   005F08                     u3551:
  6182   005F08  EF0C  F030         	goto	l4198
  6183   005F0C                     u3550:
  6184   005F0C                     l4172:
  6185                           
  6186                           ; BSR set to: 0
  6187                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6188   005F0C  500E               	movf	vfpfcnvrt@ap^0,w,c
  6189   005F0E  6ED9               	movwf	fsr2l,c
  6190   005F10  6ADA               	clrf	fsr2h,c
  6191   005F12  0E02               	movlw	2
  6192   005F14  26DF               	addwf	indf2,f,c
  6193   005F16  5CDF               	subwf	indf2,w,c
  6194   005F18  6ED9               	movwf	fsr2l,c
  6195   005F1A  6ADA               	clrf	fsr2h,c
  6196   005F1C  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
  6197   005F20  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
  6198   005F24                     
  6199                           ; BSR set to: 0
  6200                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6201   005F24  500D               	movf	vfpfcnvrt@fmt^0,w,c
  6202   005F26  6ED9               	movwf	fsr2l,c
  6203   005F28  6ADA               	clrf	fsr2h,c
  6204   005F2A  2811               	incf	vfpfcnvrt@cp^0,w,c
  6205   005F2C  6EDF               	movwf	indf2,c
  6206   005F2E                     
  6207                           ; BSR set to: 0
  6208                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  6209   005F2E  0E20               	movlw	32
  6210   005F30  6E16               	movwf	vfpfcnvrt@c^0,c
  6211                           
  6212                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  6213   005F32  BE13               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  6214   005F34  EF9E  F02F         	goto	u3561
  6215   005F38  EFA1  F02F         	goto	u3560
  6216   005F3C                     u3561:
  6217   005F3C  0E01               	movlw	1
  6218   005F3E  EFA2  F02F         	goto	u3570
  6219   005F42                     u3560:
  6220   005F42  0E00               	movlw	0
  6221   005F44                     u3570:
  6222   005F44  6E10               	movwf	vfpfcnvrt@done^0,c
  6223   005F46                     l4178:
  6224                           
  6225                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  6226   005F46  0616               	decf	vfpfcnvrt@c^0,f,c
  6227   005F48  5016               	movf	vfpfcnvrt@c^0,w,c
  6228   005F4A  0F9C               	addlw	low _dbuf
  6229   005F4C  6ED9               	movwf	fsr2l,c
  6230   005F4E  6ADA               	clrf	fsr2h,c
  6231   005F50  C012  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
  6232   005F54  C013  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  6233   005F58  0E00               	movlw	0
  6234   005F5A  6E05               	movwf	(___awmod@divisor+1)^0,c
  6235   005F5C  0E0A               	movlw	10
  6236   005F5E  6E04               	movwf	___awmod@divisor^0,c
  6237   005F60  EC3A  F035         	call	___awmod	;wreg free
  6238   005F64  C002  F008         	movff	?___awmod,abs@a
  6239   005F68  C003  F009         	movff	?___awmod+1,abs@a+1
  6240   005F6C  EC2C  F038         	call	_abs	;wreg free
  6241   005F70  5008               	movf	?_abs^0,w,c
  6242   005F72  0F30               	addlw	48
  6243   005F74  6EDF               	movwf	indf2,c
  6244   005F76                     
  6245                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  6246   005F76  C012  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  6247   005F7A  C013  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  6248   005F7E  0E00               	movlw	0
  6249   005F80  6E05               	movwf	(___awdiv@divisor+1)^0,c
  6250   005F82  0E0A               	movlw	10
  6251   005F84  6E04               	movwf	___awdiv@divisor^0,c
  6252   005F86  EC1C  F034         	call	___awdiv	;wreg free
  6253   005F8A  C002  F012         	movff	?___awdiv,vfpfcnvrt@convarg
  6254   005F8E  C003  F013         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  6255   005F92                     
  6256                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  6257   005F92  5012               	movf	vfpfcnvrt@convarg^0,w,c
  6258   005F94  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  6259   005F96  B4D8               	btfsc	status,2,c
  6260   005F98  EFD0  F02F         	goto	u3581
  6261   005F9C  EFD2  F02F         	goto	u3580
  6262   005FA0                     u3581:
  6263   005FA0  EFDA  F02F         	goto	l4186
  6264   005FA4                     u3580:
  6265   005FA4  5016               	movf	vfpfcnvrt@c^0,w,c
  6266   005FA6  A4D8               	btfss	status,2,c
  6267   005FA8  EFD8  F02F         	goto	u3591
  6268   005FAC  EFDA  F02F         	goto	u3590
  6269   005FB0                     u3591:
  6270   005FB0  EFA3  F02F         	goto	l4178
  6271   005FB4                     u3590:
  6272   005FB4                     l4186:
  6273                           
  6274                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  6275   005FB4  5016               	movf	vfpfcnvrt@c^0,w,c
  6276   005FB6  B4D8               	btfsc	status,2,c
  6277   005FB8  EFE0  F02F         	goto	u3601
  6278   005FBC  EFE2  F02F         	goto	u3600
  6279   005FC0                     u3601:
  6280   005FC0  EF01  F030         	goto	l4196
  6281   005FC4                     u3600:
  6282   005FC4  5010               	movf	vfpfcnvrt@done^0,w,c
  6283   005FC6  B4D8               	btfsc	status,2,c
  6284   005FC8  EFE8  F02F         	goto	u3611
  6285   005FCC  EFEA  F02F         	goto	u3610
  6286   005FD0                     u3611:
  6287   005FD0  EF01  F030         	goto	l4196
  6288   005FD4                     u3610:
  6289   005FD4                     
  6290                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  6291   005FD4  0616               	decf	vfpfcnvrt@c^0,f,c
  6292   005FD6  5016               	movf	vfpfcnvrt@c^0,w,c
  6293   005FD8  0F9C               	addlw	low _dbuf
  6294   005FDA  6ED9               	movwf	fsr2l,c
  6295   005FDC  6ADA               	clrf	fsr2h,c
  6296   005FDE  0E2D               	movlw	45
  6297   005FE0  6EDF               	movwf	indf2,c
  6298   005FE2  EF01  F030         	goto	l4196
  6299   005FE6                     l4192:
  6300                           
  6301                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  6302   005FE6  5016               	movf	vfpfcnvrt@c^0,w,c
  6303   005FE8  0F9C               	addlw	low _dbuf
  6304   005FEA  6ED9               	movwf	fsr2l,c
  6305   005FEC  6ADA               	clrf	fsr2h,c
  6306   005FEE  50DF               	movf	indf2,w,c
  6307   005FF0  6E0F               	movwf	??_vfpfcnvrt^0,c
  6308   005FF2  500F               	movf	??_vfpfcnvrt^0,w,c
  6309   005FF4  6E02               	movwf	fputc@c^0,c
  6310   005FF6  6A03               	clrf	(fputc@c+1)^0,c
  6311   005FF8  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  6312   005FFC  ECDD  F034         	call	_fputc	;wreg free
  6313   006000  2A16               	incf	vfpfcnvrt@c^0,f,c
  6314   006002                     l4196:
  6315                           
  6316                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  6317   006002  0E20               	movlw	32
  6318   006004  1816               	xorwf	vfpfcnvrt@c^0,w,c
  6319   006006  A4D8               	btfss	status,2,c
  6320   006008  EF08  F030         	goto	u3621
  6321   00600C  EF0A  F030         	goto	u3620
  6322   006010                     u3621:
  6323   006010  EFF3  F02F         	goto	l4192
  6324   006014                     u3620:
  6325   006014  EF21  F030         	goto	l1274
  6326   006018                     l4198:
  6327                           
  6328                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6329   006018  500D               	movf	vfpfcnvrt@fmt^0,w,c
  6330   00601A  6ED9               	movwf	fsr2l,c
  6331   00601C  6ADA               	clrf	fsr2h,c
  6332   00601E  2ADF               	incf	indf2,f,c
  6333   006020  EF21  F030         	goto	l1274
  6334   006024                     l4202:
  6335                           
  6336                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6337   006024  500D               	movf	vfpfcnvrt@fmt^0,w,c
  6338   006026  6ED9               	movwf	fsr2l,c
  6339   006028  6ADA               	clrf	fsr2h,c
  6340   00602A  CFDF FFF6          	movff	indf2,tblptrl
  6341   00602E                     	if	0	;There is only one active tblptr byte
  6342   00602E                     	endif
  6343   00602E                     	if	0	;tblptru may be non-zero
  6344   00602E                     	endif
  6345   00602E                     	if	0	;tblptru may be non-zero
  6346   00602E                     	endif
  6347   00602E  0008               	tblrd		*
  6348   006030  50F5               	movf	tablat,w,c
  6349   006032  6E02               	movwf	fputc@c^0,c
  6350   006034  6A03               	clrf	(fputc@c+1)^0,c
  6351   006036  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  6352   00603A  ECDD  F034         	call	_fputc	;wreg free
  6353   00603E  EF0C  F030         	goto	l4198
  6354   006042                     l1274:
  6355   006042  0012               	return		;funcret
  6356   006044                     __end_of_vfpfcnvrt:
  6357                           	callstack 0
  6358                           
  6359 ;; *************** function _fputc *****************
  6360 ;; Defined at:
  6361 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  6362 ;; Parameters:    Size  Location     Type
  6363 ;;  c               2    1[COMRAM] int 
  6364 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  6365 ;;		 -> sprintf@f(12), 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;		None
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  2    1[COMRAM] int 
  6370 ;; Registers used:
  6371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6377 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6379 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6380 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6381 ;;Total ram usage:        8 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; Hardware stack levels required when called: 3
  6384 ;; This function calls:
  6385 ;;		_putch
  6386 ;; This function is called by:
  6387 ;;		_vfpfcnvrt
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           	psect	text20
  6392   0069BA                     __ptext20:
  6393                           	callstack 0
  6394   0069BA                     _fputc:
  6395                           	callstack 24
  6396   0069BA  5004               	movf	fputc@fp^0,w,c
  6397   0069BC  B4D8               	btfsc	status,2,c
  6398   0069BE  EFE3  F034         	goto	u2851
  6399   0069C2  EFE5  F034         	goto	u2850
  6400   0069C6                     u2851:
  6401   0069C6  EFED  F034         	goto	l3780
  6402   0069CA                     u2850:
  6403   0069CA  5004               	movf	fputc@fp^0,w,c
  6404   0069CC  A4D8               	btfss	status,2,c
  6405   0069CE  EFEB  F034         	goto	u2861
  6406   0069D2  EFED  F034         	goto	u2860
  6407   0069D6                     u2861:
  6408   0069D6  EFF2  F034         	goto	l3782
  6409   0069DA                     u2860:
  6410   0069DA                     l3780:
  6411   0069DA  5002               	movf	fputc@c^0,w,c
  6412   0069DC  EC22  F039         	call	_putch
  6413   0069E0  EF39  F035         	goto	l1299
  6414   0069E4                     l3782:
  6415   0069E4  5004               	movf	fputc@fp^0,w,c
  6416   0069E6  6ED9               	movwf	fsr2l,c
  6417   0069E8  6ADA               	clrf	fsr2h,c
  6418   0069EA  0E0A               	movlw	10
  6419   0069EC  26D9               	addwf	fsr2l,f,c
  6420   0069EE  50DE               	movf	postinc2,w,c
  6421   0069F0  10DE               	iorwf	postinc2,w,c
  6422   0069F2  B4D8               	btfsc	status,2,c
  6423   0069F4  EFFE  F034         	goto	u2871
  6424   0069F8  EF00  F035         	goto	u2870
  6425   0069FC                     u2871:
  6426   0069FC  EF19  F035         	goto	l3786
  6427   006A00                     u2870:
  6428   006A00  5004               	movf	fputc@fp^0,w,c
  6429   006A02  6ED9               	movwf	fsr2l,c
  6430   006A04  6ADA               	clrf	fsr2h,c
  6431   006A06  0E0A               	movlw	10
  6432   006A08  26D9               	addwf	fsr2l,f,c
  6433   006A0A  5004               	movf	fputc@fp^0,w,c
  6434   006A0C  6EE1               	movwf	fsr1l,c
  6435   006A0E  6AE2               	clrf	fsr1h,c
  6436   006A10  0E03               	movlw	3
  6437   006A12  26E1               	addwf	fsr1l,f,c
  6438   006A14  50DE               	movf	postinc2,w,c
  6439   006A16  5CE6               	subwf	postinc1,w,c
  6440   006A18  50E6               	movf	postinc1,w,c
  6441   006A1A  0A80               	xorlw	128
  6442   006A1C  6E09               	movwf	(??_fputc+4)^0,c
  6443   006A1E  50DE               	movf	postinc2,w,c
  6444   006A20  0A80               	xorlw	128
  6445   006A22  5809               	subwfb	(??_fputc+4)^0,w,c
  6446   006A24  B0D8               	btfsc	status,0,c
  6447   006A26  EF17  F035         	goto	u2881
  6448   006A2A  EF19  F035         	goto	u2880
  6449   006A2E                     u2881:
  6450   006A2E  EF39  F035         	goto	l1299
  6451   006A32                     u2880:
  6452   006A32                     l3786:
  6453   006A32  5004               	movf	fputc@fp^0,w,c
  6454   006A34  6ED9               	movwf	fsr2l,c
  6455   006A36  6ADA               	clrf	fsr2h,c
  6456   006A38  0E03               	movlw	3
  6457   006A3A  26D9               	addwf	fsr2l,f,c
  6458   006A3C  CFDE F005          	movff	postinc2,??_fputc
  6459   006A40  CFDD F006          	movff	postdec2,??_fputc+1
  6460   006A44  5004               	movf	fputc@fp^0,w,c
  6461   006A46  6ED9               	movwf	fsr2l,c
  6462   006A48  6ADA               	clrf	fsr2h,c
  6463   006A4A  CFDE F007          	movff	postinc2,??_fputc+2
  6464   006A4E  CFDD F008          	movff	postdec2,??_fputc+3
  6465   006A52  5005               	movf	??_fputc^0,w,c
  6466   006A54  2407               	addwf	(??_fputc+2)^0,w,c
  6467   006A56  6ED9               	movwf	fsr2l,c
  6468   006A58  5006               	movf	(??_fputc+1)^0,w,c
  6469   006A5A  2008               	addwfc	(??_fputc+3)^0,w,c
  6470   006A5C  6EDA               	movwf	fsr2h,c
  6471   006A5E  C002  FFDF         	movff	fputc@c,indf2
  6472   006A62  5004               	movf	fputc@fp^0,w,c
  6473   006A64  6ED9               	movwf	fsr2l,c
  6474   006A66  6ADA               	clrf	fsr2h,c
  6475   006A68  0E03               	movlw	3
  6476   006A6A  26D9               	addwf	fsr2l,f,c
  6477   006A6C  2ADE               	incf	postinc2,f,c
  6478   006A6E  0E00               	movlw	0
  6479   006A70  22DD               	addwfc	postdec2,f,c
  6480   006A72                     l1299:
  6481   006A72  0012               	return		;funcret
  6482   006A74                     __end_of_fputc:
  6483                           	callstack 0
  6484                           
  6485 ;; *************** function _putch *****************
  6486 ;; Defined at:
  6487 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  c               1    wreg     unsigned char 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  c               1    0[COMRAM] unsigned char 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      void 
  6494 ;; Registers used:
  6495 ;;		wreg
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6505 ;;Total ram usage:        0 bytes
  6506 ;; Hardware stack levels used: 1
  6507 ;; Hardware stack levels required when called: 2
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		_fputc
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text21
  6516   007244                     __ptext21:
  6517                           	callstack 0
  6518   007244                     _putch:
  6519                           	callstack 24
  6520   007244  0012               	return		;funcret
  6521   007246                     __end_of_putch:
  6522                           	callstack 0
  6523                           
  6524 ;; *************** function _abs *****************
  6525 ;; Defined at:
  6526 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  a               2    7[COMRAM] int 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;		None
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  2    7[COMRAM] int 
  6533 ;; Registers used:
  6534 ;;		wreg, status,2, status,0
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6543 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6544 ;;Total ram usage:        4 bytes
  6545 ;; Hardware stack levels used: 1
  6546 ;; Hardware stack levels required when called: 2
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_vfpfcnvrt
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text22
  6555   007058                     __ptext22:
  6556                           	callstack 0
  6557   007058                     _abs:
  6558                           	callstack 25
  6559   007058  BE09               	btfsc	(abs@a+1)^0,7,c
  6560   00705A  EF31  F038         	goto	u2891
  6561   00705E  EF33  F038         	goto	u2890
  6562   007062                     u2891:
  6563   007062  EF39  F038         	goto	l1284
  6564   007066                     u2890:
  6565   007066  C008  F008         	movff	abs@a,?_abs
  6566   00706A  C009  F009         	movff	abs@a+1,?_abs+1
  6567   00706E  EF45  F038         	goto	l1287
  6568   007072                     l1284:
  6569   007072  C008  F00A         	movff	abs@a,??_abs
  6570   007076  C009  F00B         	movff	abs@a+1,??_abs+1
  6571   00707A  1E0A               	comf	??_abs^0,f,c
  6572   00707C  1E0B               	comf	(??_abs+1)^0,f,c
  6573   00707E  4A0A               	infsnz	??_abs^0,f,c
  6574   007080  2A0B               	incf	(??_abs+1)^0,f,c
  6575   007082  C00A  F008         	movff	??_abs,?_abs
  6576   007086  C00B  F009         	movff	??_abs+1,?_abs+1
  6577   00708A                     l1287:
  6578   00708A  0012               	return		;funcret
  6579   00708C                     __end_of_abs:
  6580                           	callstack 0
  6581                           
  6582 ;; *************** function ___awmod *****************
  6583 ;; Defined at:
  6584 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  dividend        2    1[COMRAM] int 
  6587 ;;  divisor         2    3[COMRAM] int 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  sign            1    6[COMRAM] unsigned char 
  6590 ;;  counter         1    5[COMRAM] unsigned char 
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  2    1[COMRAM] int 
  6593 ;; Registers used:
  6594 ;;		wreg, status,2, status,0
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6600 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6601 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6603 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6604 ;;Total ram usage:        6 bytes
  6605 ;; Hardware stack levels used: 1
  6606 ;; Hardware stack levels required when called: 2
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_vfpfcnvrt
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           	psect	text23
  6615   006A74                     __ptext23:
  6616                           	callstack 0
  6617   006A74                     ___awmod:
  6618                           	callstack 25
  6619   006A74  0E00               	movlw	0
  6620   006A76  6E07               	movwf	___awmod@sign^0,c
  6621   006A78  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  6622   006A7A  EF43  F035         	goto	u2790
  6623   006A7E  EF41  F035         	goto	u2791
  6624   006A82                     u2791:
  6625   006A82  EF49  F035         	goto	l3748
  6626   006A86                     u2790:
  6627   006A86  6C02               	negf	___awmod@dividend^0,c
  6628   006A88  1E03               	comf	(___awmod@dividend+1)^0,f,c
  6629   006A8A  B0D8               	btfsc	status,0,c
  6630   006A8C  2A03               	incf	(___awmod@dividend+1)^0,f,c
  6631   006A8E  0E01               	movlw	1
  6632   006A90  6E07               	movwf	___awmod@sign^0,c
  6633   006A92                     l3748:
  6634   006A92  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  6635   006A94  EF50  F035         	goto	u2800
  6636   006A98  EF4E  F035         	goto	u2801
  6637   006A9C                     u2801:
  6638   006A9C  EF54  F035         	goto	l3752
  6639   006AA0                     u2800:
  6640   006AA0  6C04               	negf	___awmod@divisor^0,c
  6641   006AA2  1E05               	comf	(___awmod@divisor+1)^0,f,c
  6642   006AA4  B0D8               	btfsc	status,0,c
  6643   006AA6  2A05               	incf	(___awmod@divisor+1)^0,f,c
  6644   006AA8                     l3752:
  6645   006AA8  5004               	movf	___awmod@divisor^0,w,c
  6646   006AAA  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  6647   006AAC  B4D8               	btfsc	status,2,c
  6648   006AAE  EF5B  F035         	goto	u2811
  6649   006AB2  EF5D  F035         	goto	u2810
  6650   006AB6                     u2811:
  6651   006AB6  EF81  F035         	goto	l3768
  6652   006ABA                     u2810:
  6653   006ABA  0E01               	movlw	1
  6654   006ABC  6E06               	movwf	___awmod@counter^0,c
  6655   006ABE  EF65  F035         	goto	l3758
  6656   006AC2                     l3756:
  6657   006AC2  90D8               	bcf	status,0,c
  6658   006AC4  3604               	rlcf	___awmod@divisor^0,f,c
  6659   006AC6  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  6660   006AC8  2A06               	incf	___awmod@counter^0,f,c
  6661   006ACA                     l3758:
  6662   006ACA  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  6663   006ACC  EF6A  F035         	goto	u2821
  6664   006AD0  EF6C  F035         	goto	u2820
  6665   006AD4                     u2821:
  6666   006AD4  EF61  F035         	goto	l3756
  6667   006AD8                     u2820:
  6668   006AD8                     l3760:
  6669   006AD8  5004               	movf	___awmod@divisor^0,w,c
  6670   006ADA  5C02               	subwf	___awmod@dividend^0,w,c
  6671   006ADC  5005               	movf	(___awmod@divisor+1)^0,w,c
  6672   006ADE  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  6673   006AE0  A0D8               	btfss	status,0,c
  6674   006AE2  EF75  F035         	goto	u2831
  6675   006AE6  EF77  F035         	goto	u2830
  6676   006AEA                     u2831:
  6677   006AEA  EF7B  F035         	goto	l3764
  6678   006AEE                     u2830:
  6679   006AEE  5004               	movf	___awmod@divisor^0,w,c
  6680   006AF0  5E02               	subwf	___awmod@dividend^0,f,c
  6681   006AF2  5005               	movf	(___awmod@divisor+1)^0,w,c
  6682   006AF4  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  6683   006AF6                     l3764:
  6684   006AF6  90D8               	bcf	status,0,c
  6685   006AF8  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  6686   006AFA  3204               	rrcf	___awmod@divisor^0,f,c
  6687   006AFC  2E06               	decfsz	___awmod@counter^0,f,c
  6688   006AFE  EF6C  F035         	goto	l3760
  6689   006B02                     l3768:
  6690   006B02  5007               	movf	___awmod@sign^0,w,c
  6691   006B04  B4D8               	btfsc	status,2,c
  6692   006B06  EF87  F035         	goto	u2841
  6693   006B0A  EF89  F035         	goto	u2840
  6694   006B0E                     u2841:
  6695   006B0E  EF8D  F035         	goto	l3772
  6696   006B12                     u2840:
  6697   006B12  6C02               	negf	___awmod@dividend^0,c
  6698   006B14  1E03               	comf	(___awmod@dividend+1)^0,f,c
  6699   006B16  B0D8               	btfsc	status,0,c
  6700   006B18  2A03               	incf	(___awmod@dividend+1)^0,f,c
  6701   006B1A                     l3772:
  6702   006B1A  C002  F002         	movff	___awmod@dividend,?___awmod
  6703   006B1E  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  6704   006B22  0012               	return		;funcret
  6705   006B24                     __end_of___awmod:
  6706                           	callstack 0
  6707                           
  6708 ;; *************** function ___awdiv *****************
  6709 ;; Defined at:
  6710 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;  dividend        2    1[COMRAM] int 
  6713 ;;  divisor         2    3[COMRAM] int 
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;  quotient        2    7[COMRAM] int 
  6716 ;;  sign            1    6[COMRAM] unsigned char 
  6717 ;;  counter         1    5[COMRAM] unsigned char 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  2    1[COMRAM] int 
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6728 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6730 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;Total ram usage:        8 bytes
  6732 ;; Hardware stack levels used: 1
  6733 ;; Hardware stack levels required when called: 2
  6734 ;; This function calls:
  6735 ;;		Nothing
  6736 ;; This function is called by:
  6737 ;;		_vfpfcnvrt
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text24
  6742   006838                     __ptext24:
  6743                           	callstack 0
  6744   006838                     ___awdiv:
  6745                           	callstack 25
  6746   006838  0E00               	movlw	0
  6747   00683A  6E07               	movwf	___awdiv@sign^0,c
  6748   00683C  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  6749   00683E  EF25  F034         	goto	u2730
  6750   006842  EF23  F034         	goto	u2731
  6751   006846                     u2731:
  6752   006846  EF2B  F034         	goto	l3704
  6753   00684A                     u2730:
  6754   00684A  6C04               	negf	___awdiv@divisor^0,c
  6755   00684C  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  6756   00684E  B0D8               	btfsc	status,0,c
  6757   006850  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  6758   006852  0E01               	movlw	1
  6759   006854  6E07               	movwf	___awdiv@sign^0,c
  6760   006856                     l3704:
  6761   006856  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  6762   006858  EF32  F034         	goto	u2740
  6763   00685C  EF30  F034         	goto	u2741
  6764   006860                     u2741:
  6765   006860  EF38  F034         	goto	l3710
  6766   006864                     u2740:
  6767   006864  6C02               	negf	___awdiv@dividend^0,c
  6768   006866  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  6769   006868  B0D8               	btfsc	status,0,c
  6770   00686A  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  6771   00686C  0E01               	movlw	1
  6772   00686E  1A07               	xorwf	___awdiv@sign^0,f,c
  6773   006870                     l3710:
  6774   006870  0E00               	movlw	0
  6775   006872  6E09               	movwf	(___awdiv@quotient+1)^0,c
  6776   006874  0E00               	movlw	0
  6777   006876  6E08               	movwf	___awdiv@quotient^0,c
  6778   006878  5004               	movf	___awdiv@divisor^0,w,c
  6779   00687A  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  6780   00687C  B4D8               	btfsc	status,2,c
  6781   00687E  EF43  F034         	goto	u2751
  6782   006882  EF45  F034         	goto	u2750
  6783   006886                     u2751:
  6784   006886  EF6D  F034         	goto	l3732
  6785   00688A                     u2750:
  6786   00688A  0E01               	movlw	1
  6787   00688C  6E06               	movwf	___awdiv@counter^0,c
  6788   00688E  EF4D  F034         	goto	l3718
  6789   006892                     l3716:
  6790   006892  90D8               	bcf	status,0,c
  6791   006894  3604               	rlcf	___awdiv@divisor^0,f,c
  6792   006896  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  6793   006898  2A06               	incf	___awdiv@counter^0,f,c
  6794   00689A                     l3718:
  6795   00689A  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  6796   00689C  EF52  F034         	goto	u2761
  6797   0068A0  EF54  F034         	goto	u2760
  6798   0068A4                     u2761:
  6799   0068A4  EF49  F034         	goto	l3716
  6800   0068A8                     u2760:
  6801   0068A8                     l3720:
  6802   0068A8  90D8               	bcf	status,0,c
  6803   0068AA  3608               	rlcf	___awdiv@quotient^0,f,c
  6804   0068AC  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  6805   0068AE  5004               	movf	___awdiv@divisor^0,w,c
  6806   0068B0  5C02               	subwf	___awdiv@dividend^0,w,c
  6807   0068B2  5005               	movf	(___awdiv@divisor+1)^0,w,c
  6808   0068B4  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  6809   0068B6  A0D8               	btfss	status,0,c
  6810   0068B8  EF60  F034         	goto	u2771
  6811   0068BC  EF62  F034         	goto	u2770
  6812   0068C0                     u2771:
  6813   0068C0  EF67  F034         	goto	l3728
  6814   0068C4                     u2770:
  6815   0068C4  5004               	movf	___awdiv@divisor^0,w,c
  6816   0068C6  5E02               	subwf	___awdiv@dividend^0,f,c
  6817   0068C8  5005               	movf	(___awdiv@divisor+1)^0,w,c
  6818   0068CA  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  6819   0068CC  8008               	bsf	___awdiv@quotient^0,0,c
  6820   0068CE                     l3728:
  6821   0068CE  90D8               	bcf	status,0,c
  6822   0068D0  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  6823   0068D2  3204               	rrcf	___awdiv@divisor^0,f,c
  6824   0068D4  2E06               	decfsz	___awdiv@counter^0,f,c
  6825   0068D6  EF54  F034         	goto	l3720
  6826   0068DA                     l3732:
  6827   0068DA  5007               	movf	___awdiv@sign^0,w,c
  6828   0068DC  B4D8               	btfsc	status,2,c
  6829   0068DE  EF73  F034         	goto	u2781
  6830   0068E2  EF75  F034         	goto	u2780
  6831   0068E6                     u2781:
  6832   0068E6  EF79  F034         	goto	l3736
  6833   0068EA                     u2780:
  6834   0068EA  6C08               	negf	___awdiv@quotient^0,c
  6835   0068EC  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  6836   0068EE  B0D8               	btfsc	status,0,c
  6837   0068F0  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  6838   0068F2                     l3736:
  6839   0068F2  C008  F002         	movff	___awdiv@quotient,?___awdiv
  6840   0068F6  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  6841   0068FA  0012               	return		;funcret
  6842   0068FC                     __end_of___awdiv:
  6843                           	callstack 0
  6844                           
  6845 ;; *************** function _sendStringSerial4 *****************
  6846 ;; Defined at:
  6847 ;;		line 38 in file "serial.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;  string          2    2[COMRAM] PTR unsigned char 
  6850 ;;		 -> main@blue_val(20), main@green_val(20), main@red_val(20), main@clear_val(20), 
  6851 ;;		 -> decide_action@blue_val(20), decide_action@green_val(20), decide_action@red_val(20), 
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  1    wreg      void 
  6856 ;; Registers used:
  6857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6863 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6866 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6867 ;;Total ram usage:        2 bytes
  6868 ;; Hardware stack levels used: 1
  6869 ;; Hardware stack levels required when called: 3
  6870 ;; This function calls:
  6871 ;;		_sendCharSerial4
  6872 ;; This function is called by:
  6873 ;;		_decide_action
  6874 ;;		_main
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text25
  6879   00708C                     __ptext25:
  6880                           	callstack 0
  6881   00708C                     _sendStringSerial4:
  6882                           	callstack 27
  6883   00708C                     
  6884                           ;serial.c: 40:     while(*string != 0){
  6885   00708C  EF51  F038         	goto	l4652
  6886   007090                     l4648:
  6887                           
  6888                           ;serial.c: 41:   sendCharSerial4(*string++);
  6889   007090  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  6890   007094  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6891   007098  50DF               	movf	indf2,w,c
  6892   00709A  ECEA  F038         	call	_sendCharSerial4
  6893   00709E  4A03               	infsnz	sendStringSerial4@string^0,f,c
  6894   0070A0  2A04               	incf	(sendStringSerial4@string+1)^0,f,c
  6895   0070A2                     l4652:
  6896                           
  6897                           ;serial.c: 40:     while(*string != 0){
  6898   0070A2  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  6899   0070A6  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6900   0070AA  50DF               	movf	indf2,w,c
  6901   0070AC  A4D8               	btfss	status,2,c
  6902   0070AE  EF5B  F038         	goto	u4291
  6903   0070B2  EF5D  F038         	goto	u4290
  6904   0070B6                     u4291:
  6905   0070B6  EF48  F038         	goto	l4648
  6906   0070BA                     u4290:
  6907   0070BA  0012               	return		;funcret
  6908   0070BC                     __end_of_sendStringSerial4:
  6909                           	callstack 0
  6910                           
  6911 ;; *************** function _sendCharSerial4 *****************
  6912 ;; Defined at:
  6913 ;;		line 31 in file "serial.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;  charToSend      1    wreg     unsigned char 
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;  charToSend      1    1[COMRAM] unsigned char 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6930 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6931 ;;Total ram usage:        1 bytes
  6932 ;; Hardware stack levels used: 1
  6933 ;; Hardware stack levels required when called: 2
  6934 ;; This function calls:
  6935 ;;		Nothing
  6936 ;; This function is called by:
  6937 ;;		_sendStringSerial4
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941                           	psect	text26
  6942   0071D4                     __ptext26:
  6943                           	callstack 0
  6944   0071D4                     _sendCharSerial4:
  6945                           	callstack 27
  6946                           
  6947                           ;incstack = 0
  6948                           ;sendCharSerial4@charToSend stored from wreg
  6949   0071D4  6E02               	movwf	sendCharSerial4@charToSend^0,c
  6950   0071D6                     l493:
  6951   0071D6  010E               	movlb	14	; () banked
  6952   0071D8  A537               	btfss	55,2,b	;volatile
  6953   0071DA  EFF1  F038         	goto	u3811
  6954   0071DE  EFF3  F038         	goto	u3810
  6955   0071E2                     u3811:
  6956   0071E2  EFEB  F038         	goto	l493
  6957   0071E6                     u3810:
  6958   0071E6                     
  6959                           ; BSR set to: 14
  6960                           ;serial.c: 33:     TX4REG = charToSend;
  6961   0071E6  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6962   0071EA                     
  6963                           ; BSR set to: 14
  6964   0071EA  0012               	return		;funcret
  6965   0071EC                     __end_of_sendCharSerial4:
  6966                           	callstack 0
  6967                           
  6968 ;; *************** function _powf *****************
  6969 ;; Defined at:
  6970 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\powf.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  x               4    0[BANK0 ] float 
  6973 ;;  y               4    4[BANK0 ] float 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  s2              4  144[BANK1 ] float 
  6976 ;;  s_h             4  116[BANK1 ] struct fui
  6977 ;;  t_h             4  112[BANK1 ] struct fui
  6978 ;;  t_l             4   52[BANK1 ] float 
  6979 ;;  s_l             4   48[BANK1 ] float 
  6980 ;;  z               4  180[BANK1 ] struct fui
  6981 ;;  t               4  176[BANK1 ] struct fui
  6982 ;;  ix              4  172[BANK1 ] struct fui
  6983 ;;  j               4  168[BANK1 ] long 
  6984 ;;  k               4  164[BANK1 ] long 
  6985 ;;  p_h             4  160[BANK1 ] struct fui
  6986 ;;  is              4  152[BANK1 ] struct fui
  6987 ;;  iy              4  148[BANK1 ] long 
  6988 ;;  t1              4  140[BANK1 ] struct fui
  6989 ;;  n               4  136[BANK1 ] long 
  6990 ;;  hy              4  132[BANK1 ] struct fui
  6991 ;;  v               4  128[BANK1 ] float 
  6992 ;;  u               4  124[BANK1 ] float 
  6993 ;;  ax              4  120[BANK1 ] struct fui
  6994 ;;  p_l             4  108[BANK1 ] float 
  6995 ;;  hx              4  104[BANK1 ] struct fui
  6996 ;;  sn              4  100[BANK1 ] unsigned long 
  6997 ;;  s               4   88[BANK1 ] float 
  6998 ;;  yisint          4   84[BANK1 ] long 
  6999 ;;  r               4   80[BANK1 ] float 
  7000 ;;  w               4   68[BANK1 ] float 
  7001 ;;  y1              4   44[BANK1 ] struct fui
  7002 ;;  i               4   40[BANK1 ] long 
  7003 ;;  z_l             4   36[BANK1 ] float 
  7004 ;;  z_h             4   32[BANK1 ] float 
  7005 ;;  t2              4   28[BANK1 ] float 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  4    0[BANK0 ] float 
  7008 ;; Registers used:
  7009 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7015 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7016 ;;      Locals:         0       0     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7017 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7018 ;;      Totals:         0      17     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7019 ;;Total ram usage:      201 bytes
  7020 ;; Hardware stack levels used: 1
  7021 ;; Hardware stack levels required when called: 4
  7022 ;; This function calls:
  7023 ;;		___fladd
  7024 ;;		___fldiv
  7025 ;;		___flge
  7026 ;;		___flmul
  7027 ;;		___flneg
  7028 ;;		___flsub
  7029 ;;		___xxtofl
  7030 ;;		_scalbnf
  7031 ;;		_sqrtf
  7032 ;; This function is called by:
  7033 ;;		_decide_action
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           	psect	text27
  7038   000ED6                     __ptext27:
  7039                           	callstack 0
  7040   000ED6                     _powf:
  7041                           	callstack 25
  7042   000ED6  C0D8  F168         	movff	powf@x,powf@hx
  7043   000EDA  C0D9  F169         	movff	powf@x+1,powf@hx+1
  7044   000EDE  C0DA  F16A         	movff	powf@x+2,powf@hx+2
  7045   000EE2  C0DB  F16B         	movff	powf@x+3,powf@hx+3
  7046   000EE6  C0DC  F184         	movff	powf@y,powf@hy
  7047   000EEA  C0DD  F185         	movff	powf@y+1,powf@hy+1
  7048   000EEE  C0DE  F186         	movff	powf@y+2,powf@hy+2
  7049   000EF2  C0DF  F187         	movff	powf@y+3,powf@hy+3
  7050   000EF6  0EFF               	movlw	255
  7051   000EF8  0101               	movlb	1	; () banked
  7052   000EFA  1568               	andwf	powf@hx& (0+255),w,b
  7053   000EFC  6FAC               	movwf	powf@ix& (0+255),b
  7054   000EFE  0EFF               	movlw	255
  7055   000F00  1569               	andwf	(powf@hx+1)& (0+255),w,b
  7056   000F02  6FAD               	movwf	(powf@ix+1)& (0+255),b
  7057   000F04  0EFF               	movlw	255
  7058   000F06  156A               	andwf	(powf@hx+2)& (0+255),w,b
  7059   000F08  6FAE               	movwf	(powf@ix+2)& (0+255),b
  7060   000F0A  0E7F               	movlw	127
  7061   000F0C  156B               	andwf	(powf@hx+3)& (0+255),w,b
  7062   000F0E  6FAF               	movwf	(powf@ix+3)& (0+255),b
  7063   000F10  0EFF               	movlw	255
  7064   000F12  1584               	andwf	powf@hy& (0+255),w,b
  7065   000F14  6F94               	movwf	powf@iy& (0+255),b
  7066   000F16  0EFF               	movlw	255
  7067   000F18  1585               	andwf	(powf@hy+1)& (0+255),w,b
  7068   000F1A  6F95               	movwf	(powf@iy+1)& (0+255),b
  7069   000F1C  0EFF               	movlw	255
  7070   000F1E  1586               	andwf	(powf@hy+2)& (0+255),w,b
  7071   000F20  6F96               	movwf	(powf@iy+2)& (0+255),b
  7072   000F22  0E7F               	movlw	127
  7073   000F24  1587               	andwf	(powf@hy+3)& (0+255),w,b
  7074   000F26  6F97               	movwf	(powf@iy+3)& (0+255),b
  7075   000F28  5194               	movf	powf@iy& (0+255),w,b
  7076   000F2A  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  7077   000F2C  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  7078   000F2E  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  7079   000F30  A4D8               	btfss	status,2,c
  7080   000F32  EF9D  F007         	goto	u6071
  7081   000F36  EF9F  F007         	goto	u6070
  7082   000F3A                     u6071:
  7083   000F3A  EFAA  F007         	goto	l7098
  7084   000F3E                     u6070:
  7085   000F3E                     
  7086                           ; BSR set to: 1
  7087   000F3E  0E00               	movlw	0
  7088   000F40  0100               	movlb	0	; () banked
  7089   000F42  6FD8               	movwf	?_powf& (0+255),b
  7090   000F44  0E00               	movlw	0
  7091   000F46  6FD9               	movwf	(?_powf+1)& (0+255),b
  7092   000F48  0E80               	movlw	128
  7093   000F4A  6FDA               	movwf	(?_powf+2)& (0+255),b
  7094   000F4C  0E3F               	movlw	63
  7095   000F4E  6FDB               	movwf	(?_powf+3)& (0+255),b
  7096   000F50  EF92  F019         	goto	l1367
  7097   000F54                     l7098:
  7098                           
  7099                           ; BSR set to: 1
  7100   000F54  0E80               	movlw	128
  7101   000F56  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  7102   000F58  E109               	bnz	u6081
  7103   000F5A  0E3F               	movlw	63
  7104   000F5C  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  7105   000F5E  1168               	iorwf	powf@hx& (0+255),w,b
  7106   000F60  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  7107   000F62  A4D8               	btfss	status,2,c
  7108   000F64  EFB6  F007         	goto	u6081
  7109   000F68  EFB8  F007         	goto	u6080
  7110   000F6C                     u6081:
  7111   000F6C  EFC3  F007         	goto	l7104
  7112   000F70                     u6080:
  7113   000F70                     
  7114                           ; BSR set to: 1
  7115   000F70  0E00               	movlw	0
  7116   000F72  0100               	movlb	0	; () banked
  7117   000F74  6FD8               	movwf	?_powf& (0+255),b
  7118   000F76  0E00               	movlw	0
  7119   000F78  6FD9               	movwf	(?_powf+1)& (0+255),b
  7120   000F7A  0E80               	movlw	128
  7121   000F7C  6FDA               	movwf	(?_powf+2)& (0+255),b
  7122   000F7E  0E3F               	movlw	63
  7123   000F80  6FDB               	movwf	(?_powf+3)& (0+255),b
  7124   000F82  EF92  F019         	goto	l1367
  7125   000F86                     l7104:
  7126                           
  7127                           ; BSR set to: 1
  7128   000F86  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  7129   000F88  EFD4  F007         	goto	u6090
  7130   000F8C  05AC               	decf	powf@ix& (0+255),w,b
  7131   000F8E  0E00               	movlw	0
  7132   000F90  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  7133   000F92  0E80               	movlw	128
  7134   000F94  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  7135   000F96  0E7F               	movlw	127
  7136   000F98  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  7137   000F9A  B0D8               	btfsc	status,0,c
  7138   000F9C  EFD2  F007         	goto	u6091
  7139   000FA0  EFD4  F007         	goto	u6090
  7140   000FA4                     u6091:
  7141   000FA4  EFE5  F007         	goto	l7108
  7142   000FA8                     u6090:
  7143   000FA8                     
  7144                           ; BSR set to: 1
  7145   000FA8  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7146   000FAA  EFE3  F007         	goto	u6101
  7147   000FAE  0594               	decf	powf@iy& (0+255),w,b
  7148   000FB0  0E00               	movlw	0
  7149   000FB2  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  7150   000FB4  0E80               	movlw	128
  7151   000FB6  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  7152   000FB8  0E7F               	movlw	127
  7153   000FBA  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7154   000FBC  A0D8               	btfss	status,0,c
  7155   000FBE  EFE3  F007         	goto	u6101
  7156   000FC2  EFE5  F007         	goto	u6100
  7157   000FC6                     u6101:
  7158   000FC6  EF01  F008         	goto	l7112
  7159   000FCA                     u6100:
  7160   000FCA                     l7108:
  7161                           
  7162                           ; BSR set to: 1
  7163   000FCA  C0D8  F002         	movff	powf@x,___fladd@b
  7164   000FCE  C0D9  F003         	movff	powf@x+1,___fladd@b+1
  7165   000FD2  C0DA  F004         	movff	powf@x+2,___fladd@b+2
  7166   000FD6  C0DB  F005         	movff	powf@x+3,___fladd@b+3
  7167   000FDA  C0DC  F006         	movff	powf@y,___fladd@a
  7168   000FDE  C0DD  F007         	movff	powf@y+1,___fladd@a+1
  7169   000FE2  C0DE  F008         	movff	powf@y+2,___fladd@a+2
  7170   000FE6  C0DF  F009         	movff	powf@y+3,___fladd@a+3
  7171   000FEA  ECC2  F023         	call	___fladd	;wreg free
  7172   000FEE  C002  F0D8         	movff	?___fladd,?_powf
  7173   000FF2  C003  F0D9         	movff	?___fladd+1,?_powf+1
  7174   000FF6  C004  F0DA         	movff	?___fladd+2,?_powf+2
  7175   000FFA  C005  F0DB         	movff	?___fladd+3,?_powf+3
  7176   000FFE  EF92  F019         	goto	l1367
  7177   001002                     l7112:
  7178                           
  7179                           ; BSR set to: 1
  7180   001002  0E00               	movlw	0
  7181   001004  6F54               	movwf	powf@yisint& (0+255),b
  7182   001006  0E00               	movlw	0
  7183   001008  6F55               	movwf	(powf@yisint+1)& (0+255),b
  7184   00100A  0E00               	movlw	0
  7185   00100C  6F56               	movwf	(powf@yisint+2)& (0+255),b
  7186   00100E  0E00               	movlw	0
  7187   001010  6F57               	movwf	(powf@yisint+3)& (0+255),b
  7188   001012                     
  7189                           ; BSR set to: 1
  7190   001012  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  7191   001014  EF10  F008         	goto	u6110
  7192   001018  EF0E  F008         	goto	u6111
  7193   00101C                     u6111:
  7194   00101C  EFDC  F008         	goto	l1372
  7195   001020                     u6110:
  7196   001020                     
  7197                           ; BSR set to: 1
  7198   001020  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7199   001022  EF1C  F008         	goto	u6121
  7200   001026  0E80               	movlw	128
  7201   001028  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  7202   00102A  0E4B               	movlw	75
  7203   00102C  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7204   00102E  A0D8               	btfss	status,0,c
  7205   001030  EF1C  F008         	goto	u6121
  7206   001034  EF1E  F008         	goto	u6120
  7207   001038                     u6121:
  7208   001038  EF28  F008         	goto	l7120
  7209   00103C                     u6120:
  7210   00103C                     
  7211                           ; BSR set to: 1
  7212   00103C  0E02               	movlw	2
  7213   00103E  6F54               	movwf	powf@yisint& (0+255),b
  7214   001040  0E00               	movlw	0
  7215   001042  6F55               	movwf	(powf@yisint+1)& (0+255),b
  7216   001044  0E00               	movlw	0
  7217   001046  6F56               	movwf	(powf@yisint+2)& (0+255),b
  7218   001048  0E00               	movlw	0
  7219   00104A  6F57               	movwf	(powf@yisint+3)& (0+255),b
  7220   00104C  EFDC  F008         	goto	l1372
  7221   001050                     l7120:
  7222                           
  7223                           ; BSR set to: 1
  7224   001050  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7225   001052  EF34  F008         	goto	u6131
  7226   001056  0E80               	movlw	128
  7227   001058  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  7228   00105A  0E3F               	movlw	63
  7229   00105C  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7230   00105E  A0D8               	btfss	status,0,c
  7231   001060  EF34  F008         	goto	u6131
  7232   001064  EF36  F008         	goto	u6130
  7233   001068                     u6131:
  7234   001068  EFDC  F008         	goto	l1372
  7235   00106C                     u6130:
  7236   00106C                     
  7237                           ; BSR set to: 1
  7238   00106C  0E17               	movlw	23
  7239   00106E  0100               	movlb	0	; () banked
  7240   001070  6FE0               	movwf	??_powf& (0+255),b
  7241   001072  C194  F0E1         	movff	powf@iy,??_powf+1
  7242   001076  C195  F0E2         	movff	powf@iy+1,??_powf+2
  7243   00107A  C196  F0E3         	movff	powf@iy+2,??_powf+3
  7244   00107E  C197  F0E4         	movff	powf@iy+3,??_powf+4
  7245   001082                     u6145:
  7246   001082  67E0               	tstfsz	??_powf& (0+255),b
  7247   001084  EF46  F008         	goto	u6146
  7248   001088  EF4E  F008         	goto	u6147
  7249   00108C                     u6146:
  7250   00108C  35E4               	rlcf	(??_powf+4)& (0+255),w,b
  7251   00108E  33E4               	rrcf	(??_powf+4)& (0+255),f,b
  7252   001090  33E3               	rrcf	(??_powf+3)& (0+255),f,b
  7253   001092  33E2               	rrcf	(??_powf+2)& (0+255),f,b
  7254   001094  33E1               	rrcf	(??_powf+1)& (0+255),f,b
  7255   001096  2FE0               	decfsz	??_powf& (0+255),f,b
  7256   001098  EF41  F008         	goto	u6145
  7257   00109C                     u6147:
  7258   00109C  0E81               	movlw	129
  7259   00109E  0100               	movlb	0	; () banked
  7260   0010A0  25E1               	addwf	(??_powf+1)& (0+255),w,b
  7261   0010A2  0101               	movlb	1	; () banked
  7262   0010A4  6FA4               	movwf	powf@k& (0+255),b
  7263   0010A6  0EFF               	movlw	255
  7264   0010A8  0100               	movlb	0	; () banked
  7265   0010AA  21E2               	addwfc	(??_powf+2)& (0+255),w,b
  7266   0010AC  0101               	movlb	1	; () banked
  7267   0010AE  6FA5               	movwf	(powf@k+1)& (0+255),b
  7268   0010B0  0EFF               	movlw	255
  7269   0010B2  0100               	movlb	0	; () banked
  7270   0010B4  21E3               	addwfc	(??_powf+3)& (0+255),w,b
  7271   0010B6  0101               	movlb	1	; () banked
  7272   0010B8  6FA6               	movwf	(powf@k+2)& (0+255),b
  7273   0010BA  0EFF               	movlw	255
  7274   0010BC  0100               	movlb	0	; () banked
  7275   0010BE  21E4               	addwfc	(??_powf+4)& (0+255),w,b
  7276   0010C0  0101               	movlb	1	; () banked
  7277   0010C2  6FA7               	movwf	(powf@k+3)& (0+255),b
  7278   0010C4  51A4               	movf	powf@k& (0+255),w,b
  7279   0010C6  0817               	sublw	23
  7280   0010C8  0100               	movlb	0	; () banked
  7281   0010CA  6FE0               	movwf	??_powf& (0+255),b
  7282   0010CC  C194  F0E1         	movff	powf@iy,??_powf+1
  7283   0010D0  C195  F0E2         	movff	powf@iy+1,??_powf+2
  7284   0010D4  C196  F0E3         	movff	powf@iy+2,??_powf+3
  7285   0010D8  C197  F0E4         	movff	powf@iy+3,??_powf+4
  7286   0010DC                     u6155:
  7287   0010DC  67E0               	tstfsz	??_powf& (0+255),b
  7288   0010DE  EF73  F008         	goto	u6156
  7289   0010E2  EF7B  F008         	goto	u6157
  7290   0010E6                     u6156:
  7291   0010E6  35E4               	rlcf	(??_powf+4)& (0+255),w,b
  7292   0010E8  33E4               	rrcf	(??_powf+4)& (0+255),f,b
  7293   0010EA  33E3               	rrcf	(??_powf+3)& (0+255),f,b
  7294   0010EC  33E2               	rrcf	(??_powf+2)& (0+255),f,b
  7295   0010EE  33E1               	rrcf	(??_powf+1)& (0+255),f,b
  7296   0010F0  2FE0               	decfsz	??_powf& (0+255),f,b
  7297   0010F2  EF6E  F008         	goto	u6155
  7298   0010F6                     u6157:
  7299   0010F6  C0E1  F1A8         	movff	??_powf+1,powf@j
  7300   0010FA  C0E2  F1A9         	movff	??_powf+2,powf@j+1
  7301   0010FE  C0E3  F1AA         	movff	??_powf+3,powf@j+2
  7302   001102  C0E4  F1AB         	movff	??_powf+4,powf@j+3
  7303   001106  0101               	movlb	1	; () banked
  7304   001108  51A4               	movf	powf@k& (0+255),w,b
  7305   00110A  0817               	sublw	23
  7306   00110C  0100               	movlb	0	; () banked
  7307   00110E  6FE0               	movwf	??_powf& (0+255),b
  7308   001110  C1A8  F0E1         	movff	powf@j,??_powf+1
  7309   001114  C1A9  F0E2         	movff	powf@j+1,??_powf+2
  7310   001118  C1AA  F0E3         	movff	powf@j+2,??_powf+3
  7311   00111C  C1AB  F0E4         	movff	powf@j+3,??_powf+4
  7312   001120  2BE0               	incf	??_powf& (0+255),f,b
  7313   001122  EF98  F008         	goto	u6160
  7314   001126                     u6165:
  7315   001126  90D8               	bcf	status,0,c
  7316   001128  37E1               	rlcf	(??_powf+1)& (0+255),f,b
  7317   00112A  37E2               	rlcf	(??_powf+2)& (0+255),f,b
  7318   00112C  37E3               	rlcf	(??_powf+3)& (0+255),f,b
  7319   00112E  37E4               	rlcf	(??_powf+4)& (0+255),f,b
  7320   001130                     u6160:
  7321   001130  2FE0               	decfsz	??_powf& (0+255),f,b
  7322   001132  EF93  F008         	goto	u6165
  7323   001136  0101               	movlb	1	; () banked
  7324   001138  5194               	movf	powf@iy& (0+255),w,b
  7325   00113A  0100               	movlb	0	; () banked
  7326   00113C  19E1               	xorwf	(??_powf+1)& (0+255),w,b
  7327   00113E  E113               	bnz	u6171
  7328   001140  0101               	movlb	1	; () banked
  7329   001142  5195               	movf	(powf@iy+1)& (0+255),w,b
  7330   001144  0100               	movlb	0	; () banked
  7331   001146  19E2               	xorwf	(??_powf+2)& (0+255),w,b
  7332   001148  E10E               	bnz	u6171
  7333   00114A  0101               	movlb	1	; () banked
  7334   00114C  5196               	movf	(powf@iy+2)& (0+255),w,b
  7335   00114E  0100               	movlb	0	; () banked
  7336   001150  19E3               	xorwf	(??_powf+3)& (0+255),w,b
  7337   001152  E109               	bnz	u6171
  7338   001154  0101               	movlb	1	; () banked
  7339   001156  5197               	movf	(powf@iy+3)& (0+255),w,b
  7340   001158  0100               	movlb	0	; () banked
  7341   00115A  19E4               	xorwf	(??_powf+4)& (0+255),w,b
  7342   00115C  A4D8               	btfss	status,2,c
  7343   00115E  EFB3  F008         	goto	u6171
  7344   001162  EFB5  F008         	goto	u6170
  7345   001166                     u6171:
  7346   001166  EFDC  F008         	goto	l1372
  7347   00116A                     u6170:
  7348   00116A                     
  7349                           ; BSR set to: 0
  7350   00116A  0E01               	movlw	1
  7351   00116C  0101               	movlb	1	; () banked
  7352   00116E  15A8               	andwf	powf@j& (0+255),w,b
  7353   001170  0100               	movlb	0	; () banked
  7354   001172  6FE0               	movwf	??_powf& (0+255),b
  7355   001174  0E00               	movlw	0
  7356   001176  0101               	movlb	1	; () banked
  7357   001178  15A9               	andwf	(powf@j+1)& (0+255),w,b
  7358   00117A  0100               	movlb	0	; () banked
  7359   00117C  6FE1               	movwf	(??_powf+1)& (0+255),b
  7360   00117E  0E00               	movlw	0
  7361   001180  0101               	movlb	1	; () banked
  7362   001182  15AA               	andwf	(powf@j+2)& (0+255),w,b
  7363   001184  0100               	movlb	0	; () banked
  7364   001186  6FE2               	movwf	(??_powf+2)& (0+255),b
  7365   001188  0E00               	movlw	0
  7366   00118A  0101               	movlb	1	; () banked
  7367   00118C  15AB               	andwf	(powf@j+3)& (0+255),w,b
  7368   00118E  0100               	movlb	0	; () banked
  7369   001190  6FE3               	movwf	(??_powf+3)& (0+255),b
  7370   001192  51E0               	movf	??_powf& (0+255),w,b
  7371   001194  0802               	sublw	2
  7372   001196  0101               	movlb	1	; () banked
  7373   001198  6F54               	movwf	powf@yisint& (0+255),b
  7374   00119A  0E00               	movlw	0
  7375   00119C  0100               	movlb	0	; () banked
  7376   00119E  55E1               	subfwb	(??_powf+1)& (0+255),w,b
  7377   0011A0  0101               	movlb	1	; () banked
  7378   0011A2  6F55               	movwf	(powf@yisint+1)& (0+255),b
  7379   0011A4  0E00               	movlw	0
  7380   0011A6  0100               	movlb	0	; () banked
  7381   0011A8  55E2               	subfwb	(??_powf+2)& (0+255),w,b
  7382   0011AA  0101               	movlb	1	; () banked
  7383   0011AC  6F56               	movwf	(powf@yisint+2)& (0+255),b
  7384   0011AE  0E00               	movlw	0
  7385   0011B0  0100               	movlb	0	; () banked
  7386   0011B2  55E3               	subfwb	(??_powf+3)& (0+255),w,b
  7387   0011B4  0101               	movlb	1	; () banked
  7388   0011B6  6F57               	movwf	(powf@yisint+3)& (0+255),b
  7389   0011B8                     l1372:
  7390   0011B8  0E80               	movlw	128
  7391   0011BA  0101               	movlb	1	; () banked
  7392   0011BC  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  7393   0011BE  E109               	bnz	u6181
  7394   0011C0  0E7F               	movlw	127
  7395   0011C2  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  7396   0011C4  1194               	iorwf	powf@iy& (0+255),w,b
  7397   0011C6  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  7398   0011C8  A4D8               	btfss	status,2,c
  7399   0011CA  EFE9  F008         	goto	u6181
  7400   0011CE  EFEB  F008         	goto	u6180
  7401   0011D2                     u6181:
  7402   0011D2  EF57  F009         	goto	l7150
  7403   0011D6                     u6180:
  7404   0011D6                     
  7405                           ; BSR set to: 1
  7406   0011D6  0E80               	movlw	128
  7407   0011D8  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  7408   0011DA  E109               	bnz	u6191
  7409   0011DC  0E3F               	movlw	63
  7410   0011DE  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  7411   0011E0  11AC               	iorwf	powf@ix& (0+255),w,b
  7412   0011E2  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  7413   0011E4  A4D8               	btfss	status,2,c
  7414   0011E6  EFF7  F008         	goto	u6191
  7415   0011EA  EFF9  F008         	goto	u6190
  7416   0011EE                     u6191:
  7417   0011EE  EF04  F009         	goto	l7134
  7418   0011F2                     u6190:
  7419   0011F2                     
  7420                           ; BSR set to: 1
  7421   0011F2  0E00               	movlw	0
  7422   0011F4  0100               	movlb	0	; () banked
  7423   0011F6  6FD8               	movwf	?_powf& (0+255),b
  7424   0011F8  0E00               	movlw	0
  7425   0011FA  6FD9               	movwf	(?_powf+1)& (0+255),b
  7426   0011FC  0E80               	movlw	128
  7427   0011FE  6FDA               	movwf	(?_powf+2)& (0+255),b
  7428   001200  0E3F               	movlw	63
  7429   001202  6FDB               	movwf	(?_powf+3)& (0+255),b
  7430   001204  EF92  F019         	goto	l1367
  7431   001208                     l7134:
  7432                           
  7433                           ; BSR set to: 1
  7434   001208  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  7435   00120A  EF13  F009         	goto	u6201
  7436   00120E  05AC               	decf	powf@ix& (0+255),w,b
  7437   001210  0E00               	movlw	0
  7438   001212  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  7439   001214  0E80               	movlw	128
  7440   001216  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  7441   001218  0E3F               	movlw	63
  7442   00121A  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  7443   00121C  A0D8               	btfss	status,0,c
  7444   00121E  EF13  F009         	goto	u6201
  7445   001222  EF15  F009         	goto	u6200
  7446   001226                     u6201:
  7447   001226  EF31  F009         	goto	l7142
  7448   00122A                     u6200:
  7449   00122A                     
  7450                           ; BSR set to: 1
  7451   00122A  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  7452   00122C  EF1C  F009         	goto	u6210
  7453   001230  EF1A  F009         	goto	u6211
  7454   001234                     u6211:
  7455   001234  EF27  F009         	goto	l1382
  7456   001238                     u6210:
  7457   001238                     
  7458                           ; BSR set to: 1
  7459   001238  0E00               	movlw	0
  7460   00123A  0100               	movlb	0	; () banked
  7461   00123C  6FD8               	movwf	?_powf& (0+255),b
  7462   00123E  0E00               	movlw	0
  7463   001240  6FD9               	movwf	(?_powf+1)& (0+255),b
  7464   001242  0E00               	movlw	0
  7465   001244  6FDA               	movwf	(?_powf+2)& (0+255),b
  7466   001246  0E00               	movlw	0
  7467   001248  6FDB               	movwf	(?_powf+3)& (0+255),b
  7468   00124A  EF92  F019         	goto	l1367
  7469   00124E                     l1382:
  7470                           
  7471                           ; BSR set to: 1
  7472   00124E  C0DC  F0D8         	movff	powf@y,?_powf
  7473   001252  C0DD  F0D9         	movff	powf@y+1,?_powf+1
  7474   001256  C0DE  F0DA         	movff	powf@y+2,?_powf+2
  7475   00125A  C0DF  F0DB         	movff	powf@y+3,?_powf+3
  7476   00125E  EF92  F019         	goto	l1367
  7477   001262                     l7142:
  7478                           
  7479                           ; BSR set to: 1
  7480   001262  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  7481   001264  EF38  F009         	goto	u6220
  7482   001268  EF36  F009         	goto	u6221
  7483   00126C                     u6221:
  7484   00126C  EF4C  F009         	goto	l7146
  7485   001270                     u6220:
  7486   001270                     
  7487                           ; BSR set to: 1
  7488   001270  C0DC  F002         	movff	powf@y,___flneg@f1
  7489   001274  C0DD  F003         	movff	powf@y+1,___flneg@f1+1
  7490   001278  C0DE  F004         	movff	powf@y+2,___flneg@f1+2
  7491   00127C  C0DF  F005         	movff	powf@y+3,___flneg@f1+3
  7492   001280  EC10  F038         	call	___flneg	;wreg free
  7493   001284  C002  F0D8         	movff	?___flneg,?_powf
  7494   001288  C003  F0D9         	movff	?___flneg+1,?_powf+1
  7495   00128C  C004  F0DA         	movff	?___flneg+2,?_powf+2
  7496   001290  C005  F0DB         	movff	?___flneg+3,?_powf+3
  7497   001294  EF92  F019         	goto	l1367
  7498   001298                     l7146:
  7499                           
  7500                           ; BSR set to: 1
  7501   001298  0E00               	movlw	0
  7502   00129A  0100               	movlb	0	; () banked
  7503   00129C  6FD8               	movwf	?_powf& (0+255),b
  7504   00129E  0E00               	movlw	0
  7505   0012A0  6FD9               	movwf	(?_powf+1)& (0+255),b
  7506   0012A2  0E00               	movlw	0
  7507   0012A4  6FDA               	movwf	(?_powf+2)& (0+255),b
  7508   0012A6  0E00               	movlw	0
  7509   0012A8  6FDB               	movwf	(?_powf+3)& (0+255),b
  7510   0012AA  EF92  F019         	goto	l1367
  7511   0012AE                     l7150:
  7512                           
  7513                           ; BSR set to: 1
  7514   0012AE  0E80               	movlw	128
  7515   0012B0  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  7516   0012B2  E109               	bnz	u6231
  7517   0012B4  0E3F               	movlw	63
  7518   0012B6  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  7519   0012B8  1194               	iorwf	powf@iy& (0+255),w,b
  7520   0012BA  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  7521   0012BC  A4D8               	btfss	status,2,c
  7522   0012BE  EF63  F009         	goto	u6231
  7523   0012C2  EF65  F009         	goto	u6230
  7524   0012C6                     u6231:
  7525   0012C6  EF92  F009         	goto	l7156
  7526   0012CA                     u6230:
  7527   0012CA                     
  7528                           ; BSR set to: 1
  7529   0012CA  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  7530   0012CC  EF6C  F009         	goto	u6240
  7531   0012D0  EF6A  F009         	goto	u6241
  7532   0012D4                     u6241:
  7533   0012D4  EF88  F009         	goto	l1392
  7534   0012D8                     u6240:
  7535   0012D8                     
  7536                           ; BSR set to: 1
  7537   0012D8  0E00               	movlw	0
  7538   0012DA  6E2B               	movwf	___fldiv@b^0,c
  7539   0012DC  0E00               	movlw	0
  7540   0012DE  6E2C               	movwf	(___fldiv@b+1)^0,c
  7541   0012E0  0E80               	movlw	128
  7542   0012E2  6E2D               	movwf	(___fldiv@b+2)^0,c
  7543   0012E4  0E3F               	movlw	63
  7544   0012E6  6E2E               	movwf	(___fldiv@b+3)^0,c
  7545   0012E8  C0D8  F02F         	movff	powf@x,___fldiv@a
  7546   0012EC  C0D9  F030         	movff	powf@x+1,___fldiv@a+1
  7547   0012F0  C0DA  F031         	movff	powf@x+2,___fldiv@a+2
  7548   0012F4  C0DB  F032         	movff	powf@x+3,___fldiv@a+3
  7549   0012F8  EC26  F02A         	call	___fldiv	;wreg free
  7550   0012FC  C02B  F0D8         	movff	?___fldiv,?_powf
  7551   001300  C02C  F0D9         	movff	?___fldiv+1,?_powf+1
  7552   001304  C02D  F0DA         	movff	?___fldiv+2,?_powf+2
  7553   001308  C02E  F0DB         	movff	?___fldiv+3,?_powf+3
  7554   00130C  EF92  F019         	goto	l1367
  7555   001310                     l1392:
  7556                           
  7557                           ; BSR set to: 1
  7558   001310  C0D8  F0D8         	movff	powf@x,?_powf
  7559   001314  C0D9  F0D9         	movff	powf@x+1,?_powf+1
  7560   001318  C0DA  F0DA         	movff	powf@x+2,?_powf+2
  7561   00131C  C0DB  F0DB         	movff	powf@x+3,?_powf+3
  7562   001320  EF92  F019         	goto	l1367
  7563   001324                     l7156:
  7564                           
  7565                           ; BSR set to: 1
  7566   001324  0E40               	movlw	64
  7567   001326  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  7568   001328  1184               	iorwf	powf@hy& (0+255),w,b
  7569   00132A  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  7570   00132C  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  7571   00132E  A4D8               	btfss	status,2,c
  7572   001330  EF9C  F009         	goto	u6251
  7573   001334  EF9E  F009         	goto	u6250
  7574   001338                     u6251:
  7575   001338  EFBA  F009         	goto	l7162
  7576   00133C                     u6250:
  7577   00133C                     
  7578                           ; BSR set to: 1
  7579   00133C  C0D8  F012         	movff	powf@x,___flmul@b
  7580   001340  C0D9  F013         	movff	powf@x+1,___flmul@b+1
  7581   001344  C0DA  F014         	movff	powf@x+2,___flmul@b+2
  7582   001348  C0DB  F015         	movff	powf@x+3,___flmul@b+3
  7583   00134C  C0D8  F016         	movff	powf@x,___flmul@a
  7584   001350  C0D9  F017         	movff	powf@x+1,___flmul@a+1
  7585   001354  C0DA  F018         	movff	powf@x+2,___flmul@a+2
  7586   001358  C0DB  F019         	movff	powf@x+3,___flmul@a+3
  7587   00135C  EC22  F026         	call	___flmul	;wreg free
  7588   001360  C012  F0D8         	movff	?___flmul,?_powf
  7589   001364  C013  F0D9         	movff	?___flmul+1,?_powf+1
  7590   001368  C014  F0DA         	movff	?___flmul+2,?_powf+2
  7591   00136C  C015  F0DB         	movff	?___flmul+3,?_powf+3
  7592   001370  EF92  F019         	goto	l1367
  7593   001374                     l7162:
  7594                           
  7595                           ; BSR set to: 1
  7596   001374  0E3F               	movlw	63
  7597   001376  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  7598   001378  1184               	iorwf	powf@hy& (0+255),w,b
  7599   00137A  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  7600   00137C  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  7601   00137E  A4D8               	btfss	status,2,c
  7602   001380  EFC4  F009         	goto	u6261
  7603   001384  EFC6  F009         	goto	u6260
  7604   001388                     u6261:
  7605   001388  EFE1  F009         	goto	l1396
  7606   00138C                     u6260:
  7607   00138C                     
  7608                           ; BSR set to: 1
  7609   00138C  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  7610   00138E  EFCB  F009         	goto	u6271
  7611   001392  EFCD  F009         	goto	u6270
  7612   001396                     u6271:
  7613   001396  EFE1  F009         	goto	l1396
  7614   00139A                     u6270:
  7615   00139A                     
  7616                           ; BSR set to: 1
  7617   00139A  C0D8  F012         	movff	powf@x,sqrtf@x
  7618   00139E  C0D9  F013         	movff	powf@x+1,sqrtf@x+1
  7619   0013A2  C0DA  F014         	movff	powf@x+2,sqrtf@x+2
  7620   0013A6  C0DB  F015         	movff	powf@x+3,sqrtf@x+3
  7621   0013AA  EC37  F028         	call	_sqrtf	;wreg free
  7622   0013AE  C012  F0D8         	movff	?_sqrtf,?_powf
  7623   0013B2  C013  F0D9         	movff	?_sqrtf+1,?_powf+1
  7624   0013B6  C014  F0DA         	movff	?_sqrtf+2,?_powf+2
  7625   0013BA  C015  F0DB         	movff	?_sqrtf+3,?_powf+3
  7626   0013BE  EF92  F019         	goto	l1367
  7627   0013C2                     l1396:
  7628                           
  7629                           ; BSR set to: 1
  7630   0013C2  C1AC  F178         	movff	powf@ix,powf@ax
  7631   0013C6  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  7632   0013CA  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  7633   0013CE  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  7634   0013D2                     
  7635                           ; BSR set to: 1
  7636   0013D2  0E80               	movlw	128
  7637   0013D4  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  7638   0013D6  E10B               	bnz	u6280
  7639   0013D8  0E7F               	movlw	127
  7640   0013DA  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  7641   0013DC  11AC               	iorwf	powf@ix& (0+255),w,b
  7642   0013DE  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  7643   0013E0  B4D8               	btfsc	status,2,c
  7644   0013E2  EFF5  F009         	goto	u6281
  7645   0013E6  EFF7  F009         	goto	u6280
  7646   0013EA                     u6281:
  7647   0013EA  EF10  F00A         	goto	l1400
  7648   0013EE                     u6280:
  7649   0013EE                     
  7650                           ; BSR set to: 1
  7651   0013EE  51AC               	movf	powf@ix& (0+255),w,b
  7652   0013F0  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  7653   0013F2  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  7654   0013F4  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  7655   0013F6  B4D8               	btfsc	status,2,c
  7656   0013F8  EF00  F00A         	goto	u6291
  7657   0013FC  EF02  F00A         	goto	u6290
  7658   001400                     u6291:
  7659   001400  EF10  F00A         	goto	l1400
  7660   001404                     u6290:
  7661   001404                     
  7662                           ; BSR set to: 1
  7663   001404  0E80               	movlw	128
  7664   001406  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  7665   001408  E109               	bnz	u6301
  7666   00140A  0E3F               	movlw	63
  7667   00140C  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  7668   00140E  11AC               	iorwf	powf@ix& (0+255),w,b
  7669   001410  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  7670   001412  A4D8               	btfss	status,2,c
  7671   001414  EF0E  F00A         	goto	u6301
  7672   001418  EF10  F00A         	goto	u6300
  7673   00141C                     u6301:
  7674   00141C  EFAB  F00A         	goto	l7194
  7675   001420                     u6300:
  7676   001420                     l1400:
  7677                           
  7678                           ; BSR set to: 1
  7679   001420  C178  F1B4         	movff	powf@ax,powf@z
  7680   001424  C179  F1B5         	movff	powf@ax+1,powf@z+1
  7681   001428  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  7682   00142C  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  7683   001430                     
  7684                           ; BSR set to: 1
  7685   001430  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  7686   001432  EF1F  F00A         	goto	u6310
  7687   001436  EF1D  F00A         	goto	u6311
  7688   00143A                     u6311:
  7689   00143A  EF39  F00A         	goto	l7180
  7690   00143E                     u6310:
  7691   00143E                     
  7692                           ; BSR set to: 1
  7693   00143E  0E00               	movlw	0
  7694   001440  6E2B               	movwf	___fldiv@b^0,c
  7695   001442  0E00               	movlw	0
  7696   001444  6E2C               	movwf	(___fldiv@b+1)^0,c
  7697   001446  0E80               	movlw	128
  7698   001448  6E2D               	movwf	(___fldiv@b+2)^0,c
  7699   00144A  0E3F               	movlw	63
  7700   00144C  6E2E               	movwf	(___fldiv@b+3)^0,c
  7701   00144E  C1B4  F02F         	movff	powf@z,___fldiv@a
  7702   001452  C1B5  F030         	movff	powf@z+1,___fldiv@a+1
  7703   001456  C1B6  F031         	movff	powf@z+2,___fldiv@a+2
  7704   00145A  C1B7  F032         	movff	powf@z+3,___fldiv@a+3
  7705   00145E  EC26  F02A         	call	___fldiv	;wreg free
  7706   001462  C02B  F1B4         	movff	?___fldiv,powf@z
  7707   001466  C02C  F1B5         	movff	?___fldiv+1,powf@z+1
  7708   00146A  C02D  F1B6         	movff	?___fldiv+2,powf@z+2
  7709   00146E  C02E  F1B7         	movff	?___fldiv+3,powf@z+3
  7710   001472                     l7180:
  7711   001472  0101               	movlb	1	; () banked
  7712   001474  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  7713   001476  EF41  F00A         	goto	u6320
  7714   00147A  EF3F  F00A         	goto	u6321
  7715   00147E                     u6321:
  7716   00147E  EFA1  F00A         	goto	l7190
  7717   001482                     u6320:
  7718   001482                     
  7719                           ; BSR set to: 1
  7720   001482  0E00               	movlw	0
  7721   001484  25AC               	addwf	powf@ix& (0+255),w,b
  7722   001486  0100               	movlb	0	; () banked
  7723   001488  6FE0               	movwf	??_powf& (0+255),b
  7724   00148A  0E00               	movlw	0
  7725   00148C  0101               	movlb	1	; () banked
  7726   00148E  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  7727   001490  0100               	movlb	0	; () banked
  7728   001492  6FE1               	movwf	(??_powf+1)& (0+255),b
  7729   001494  0E80               	movlw	128
  7730   001496  0101               	movlb	1	; () banked
  7731   001498  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  7732   00149A  0100               	movlb	0	; () banked
  7733   00149C  6FE2               	movwf	(??_powf+2)& (0+255),b
  7734   00149E  0EC0               	movlw	192
  7735   0014A0  0101               	movlb	1	; () banked
  7736   0014A2  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  7737   0014A4  0100               	movlb	0	; () banked
  7738   0014A6  6FE3               	movwf	(??_powf+3)& (0+255),b
  7739   0014A8  0101               	movlb	1	; () banked
  7740   0014AA  5154               	movf	powf@yisint& (0+255),w,b
  7741   0014AC  0100               	movlb	0	; () banked
  7742   0014AE  11E0               	iorwf	??_powf& (0+255),w,b
  7743   0014B0  6FE4               	movwf	(??_powf+4)& (0+255),b
  7744   0014B2  0101               	movlb	1	; () banked
  7745   0014B4  5155               	movf	(powf@yisint+1)& (0+255),w,b
  7746   0014B6  0100               	movlb	0	; () banked
  7747   0014B8  11E1               	iorwf	(??_powf+1)& (0+255),w,b
  7748   0014BA  6FE5               	movwf	(??_powf+5)& (0+255),b
  7749   0014BC  0101               	movlb	1	; () banked
  7750   0014BE  5156               	movf	(powf@yisint+2)& (0+255),w,b
  7751   0014C0  0100               	movlb	0	; () banked
  7752   0014C2  11E2               	iorwf	(??_powf+2)& (0+255),w,b
  7753   0014C4  6FE6               	movwf	(??_powf+6)& (0+255),b
  7754   0014C6  0101               	movlb	1	; () banked
  7755   0014C8  5157               	movf	(powf@yisint+3)& (0+255),w,b
  7756   0014CA  0100               	movlb	0	; () banked
  7757   0014CC  11E3               	iorwf	(??_powf+3)& (0+255),w,b
  7758   0014CE  6FE7               	movwf	(??_powf+7)& (0+255),b
  7759   0014D0  51E4               	movf	(??_powf+4)& (0+255),w,b
  7760   0014D2  11E5               	iorwf	(??_powf+5)& (0+255),w,b
  7761   0014D4  11E6               	iorwf	(??_powf+6)& (0+255),w,b
  7762   0014D6  11E7               	iorwf	(??_powf+7)& (0+255),w,b
  7763   0014D8  A4D8               	btfss	status,2,c
  7764   0014DA  EF71  F00A         	goto	u6331
  7765   0014DE  EF73  F00A         	goto	u6330
  7766   0014E2                     u6331:
  7767   0014E2  EF83  F00A         	goto	l7186
  7768   0014E6                     u6330:
  7769   0014E6                     l7184:
  7770   0014E6  0E00               	movlw	0
  7771   0014E8  0100               	movlb	0	; () banked
  7772   0014EA  6FD1               	movwf	(_errno+1)& (0+255),b
  7773   0014EC  0E21               	movlw	33
  7774   0014EE  6FD0               	movwf	_errno& (0+255),b
  7775   0014F0  0EFF               	movlw	255
  7776   0014F2  0101               	movlb	1	; () banked
  7777   0014F4  6FB4               	movwf	powf@z& (0+255),b
  7778   0014F6  0EFF               	movlw	255
  7779   0014F8  6FB5               	movwf	(powf@z+1)& (0+255),b
  7780   0014FA  0EFF               	movlw	255
  7781   0014FC  6FB6               	movwf	(powf@z+2)& (0+255),b
  7782   0014FE  0E7F               	movlw	127
  7783   001500  6FB7               	movwf	(powf@z+3)& (0+255),b
  7784   001502  EFA1  F00A         	goto	l7190
  7785   001506                     l7186:
  7786                           
  7787                           ; BSR set to: 0
  7788   001506  0101               	movlb	1	; () banked
  7789   001508  0554               	decf	powf@yisint& (0+255),w,b
  7790   00150A  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  7791   00150C  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  7792   00150E  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  7793   001510  A4D8               	btfss	status,2,c
  7794   001512  EF8D  F00A         	goto	u6341
  7795   001516  EF8F  F00A         	goto	u6340
  7796   00151A                     u6341:
  7797   00151A  EFA1  F00A         	goto	l7190
  7798   00151E                     u6340:
  7799   00151E                     
  7800                           ; BSR set to: 1
  7801   00151E  C1B4  F002         	movff	powf@z,___flneg@f1
  7802   001522  C1B5  F003         	movff	powf@z+1,___flneg@f1+1
  7803   001526  C1B6  F004         	movff	powf@z+2,___flneg@f1+2
  7804   00152A  C1B7  F005         	movff	powf@z+3,___flneg@f1+3
  7805   00152E  EC10  F038         	call	___flneg	;wreg free
  7806   001532  C002  F1B4         	movff	?___flneg,powf@z
  7807   001536  C003  F1B5         	movff	?___flneg+1,powf@z+1
  7808   00153A  C004  F1B6         	movff	?___flneg+2,powf@z+2
  7809   00153E  C005  F1B7         	movff	?___flneg+3,powf@z+3
  7810   001542                     l7190:
  7811   001542  C1B4  F0D8         	movff	powf@z,?_powf
  7812   001546  C1B5  F0D9         	movff	powf@z+1,?_powf+1
  7813   00154A  C1B6  F0DA         	movff	powf@z+2,?_powf+2
  7814   00154E  C1B7  F0DB         	movff	powf@z+3,?_powf+3
  7815   001552  EF92  F019         	goto	l1367
  7816   001556                     l7194:
  7817                           
  7818                           ; BSR set to: 1
  7819   001556  0E00               	movlw	0
  7820   001558  6F64               	movwf	powf@sn& (0+255),b
  7821   00155A  0E00               	movlw	0
  7822   00155C  6F65               	movwf	(powf@sn+1)& (0+255),b
  7823   00155E  0E00               	movlw	0
  7824   001560  6F66               	movwf	(powf@sn+2)& (0+255),b
  7825   001562  0E00               	movlw	0
  7826   001564  6F67               	movwf	(powf@sn+3)& (0+255),b
  7827   001566                     
  7828                           ; BSR set to: 1
  7829   001566  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  7830   001568  EFBA  F00A         	goto	u6350
  7831   00156C  EFB8  F00A         	goto	u6351
  7832   001570                     u6351:
  7833   001570  EFDA  F00A         	goto	l7210
  7834   001574                     u6350:
  7835   001574                     
  7836                           ; BSR set to: 1
  7837   001574  5154               	movf	powf@yisint& (0+255),w,b
  7838   001576  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  7839   001578  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  7840   00157A  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  7841   00157C  A4D8               	btfss	status,2,c
  7842   00157E  EFC3  F00A         	goto	u6361
  7843   001582  EFC5  F00A         	goto	u6360
  7844   001586                     u6361:
  7845   001586  EFC7  F00A         	goto	l7206
  7846   00158A                     u6360:
  7847   00158A  EF73  F00A         	goto	l7184
  7848   00158E                     l7206:
  7849                           
  7850                           ; BSR set to: 1
  7851   00158E  0554               	decf	powf@yisint& (0+255),w,b
  7852   001590  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  7853   001592  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  7854   001594  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  7855   001596  A4D8               	btfss	status,2,c
  7856   001598  EFD0  F00A         	goto	u6371
  7857   00159C  EFD2  F00A         	goto	u6370
  7858   0015A0                     u6371:
  7859   0015A0  EFDA  F00A         	goto	l7210
  7860   0015A4                     u6370:
  7861   0015A4                     
  7862                           ; BSR set to: 1
  7863   0015A4  0E00               	movlw	0
  7864   0015A6  6F64               	movwf	powf@sn& (0+255),b
  7865   0015A8  0E00               	movlw	0
  7866   0015AA  6F65               	movwf	(powf@sn+1)& (0+255),b
  7867   0015AC  0E00               	movlw	0
  7868   0015AE  6F66               	movwf	(powf@sn+2)& (0+255),b
  7869   0015B0  0E80               	movlw	128
  7870   0015B2  6F67               	movwf	(powf@sn+3)& (0+255),b
  7871   0015B4                     l7210:
  7872                           
  7873                           ; BSR set to: 1
  7874   0015B4  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7875   0015B6  EFE9  F00A         	goto	u6381
  7876   0015BA  0594               	decf	powf@iy& (0+255),w,b
  7877   0015BC  0E00               	movlw	0
  7878   0015BE  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  7879   0015C0  0E00               	movlw	0
  7880   0015C2  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  7881   0015C4  0E4D               	movlw	77
  7882   0015C6  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7883   0015C8  A0D8               	btfss	status,0,c
  7884   0015CA  EFE9  F00A         	goto	u6381
  7885   0015CE  EFEB  F00A         	goto	u6380
  7886   0015D2                     u6381:
  7887   0015D2  EFAF  F00C         	goto	l7266
  7888   0015D6                     u6380:
  7889   0015D6                     
  7890                           ; BSR set to: 1
  7891   0015D6  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  7892   0015D8  EFFD  F00A         	goto	u6390
  7893   0015DC  0EF8               	movlw	248
  7894   0015DE  5DAC               	subwf	powf@ix& (0+255),w,b
  7895   0015E0  0EFF               	movlw	255
  7896   0015E2  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  7897   0015E4  0E7F               	movlw	127
  7898   0015E6  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  7899   0015E8  0E3F               	movlw	63
  7900   0015EA  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  7901   0015EC  B0D8               	btfsc	status,0,c
  7902   0015EE  EFFB  F00A         	goto	u6391
  7903   0015F2  EFFD  F00A         	goto	u6390
  7904   0015F6                     u6391:
  7905   0015F6  EF1E  F00B         	goto	l7228
  7906   0015FA                     u6390:
  7907   0015FA                     
  7908                           ; BSR set to: 1
  7909   0015FA  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  7910   0015FC  EF04  F00B         	goto	u6400
  7911   001600  EF02  F00B         	goto	u6401
  7912   001604                     u6401:
  7913   001604  EF13  F00B         	goto	l7224
  7914   001608                     u6400:
  7915   001608                     l7216:
  7916   001608  0E00               	movlw	0
  7917   00160A  0101               	movlb	1	; () banked
  7918   00160C  1164               	iorwf	powf@sn& (0+255),w,b
  7919   00160E  6FB4               	movwf	powf@z& (0+255),b
  7920   001610  0E00               	movlw	0
  7921   001612  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  7922   001614  6FB5               	movwf	(powf@z+1)& (0+255),b
  7923   001616  0E80               	movlw	128
  7924   001618  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  7925   00161A  6FB6               	movwf	(powf@z+2)& (0+255),b
  7926   00161C  0E7F               	movlw	127
  7927   00161E  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  7928   001620  6FB7               	movwf	(powf@z+3)& (0+255),b
  7929   001622  EFA1  F00A         	goto	l7190
  7930   001626                     l7224:
  7931                           
  7932                           ; BSR set to: 1
  7933   001626  0E00               	movlw	0
  7934   001628  0100               	movlb	0	; () banked
  7935   00162A  6FD8               	movwf	?_powf& (0+255),b
  7936   00162C  0E00               	movlw	0
  7937   00162E  6FD9               	movwf	(?_powf+1)& (0+255),b
  7938   001630  0E00               	movlw	0
  7939   001632  6FDA               	movwf	(?_powf+2)& (0+255),b
  7940   001634  0E00               	movlw	0
  7941   001636  6FDB               	movwf	(?_powf+3)& (0+255),b
  7942   001638  EF92  F019         	goto	l1367
  7943   00163C                     l7228:
  7944                           
  7945                           ; BSR set to: 1
  7946   00163C  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  7947   00163E  EF2E  F00B         	goto	u6411
  7948   001642  0E08               	movlw	8
  7949   001644  5DAC               	subwf	powf@ix& (0+255),w,b
  7950   001646  0E00               	movlw	0
  7951   001648  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  7952   00164A  0E80               	movlw	128
  7953   00164C  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  7954   00164E  0E3F               	movlw	63
  7955   001650  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  7956   001652  A0D8               	btfss	status,0,c
  7957   001654  EF2E  F00B         	goto	u6411
  7958   001658  EF30  F00B         	goto	u6410
  7959   00165C                     u6411:
  7960   00165C  EF4C  F00B         	goto	l7244
  7961   001660                     u6410:
  7962   001660                     
  7963                           ; BSR set to: 1
  7964   001660  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  7965   001662  EF3D  F00B         	goto	u6421
  7966   001666  5187               	movf	(powf@hy+3)& (0+255),w,b
  7967   001668  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  7968   00166A  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  7969   00166C  E108               	bnz	u6420
  7970   00166E  0584               	decf	powf@hy& (0+255),w,b
  7971   001670  A0D8               	btfss	status,0,c
  7972   001672  EF3D  F00B         	goto	u6421
  7973   001676  EF3F  F00B         	goto	u6420
  7974   00167A                     u6421:
  7975   00167A  EF41  F00B         	goto	l7240
  7976   00167E                     u6420:
  7977   00167E  EF04  F00B         	goto	l7216
  7978   001682                     l7240:
  7979                           
  7980                           ; BSR set to: 1
  7981   001682  0E00               	movlw	0
  7982   001684  0100               	movlb	0	; () banked
  7983   001686  6FD8               	movwf	?_powf& (0+255),b
  7984   001688  0E00               	movlw	0
  7985   00168A  6FD9               	movwf	(?_powf+1)& (0+255),b
  7986   00168C  0E00               	movlw	0
  7987   00168E  6FDA               	movwf	(?_powf+2)& (0+255),b
  7988   001690  0E00               	movlw	0
  7989   001692  6FDB               	movwf	(?_powf+3)& (0+255),b
  7990   001694  EF92  F019         	goto	l1367
  7991   001698                     l7244:
  7992                           
  7993                           ; BSR set to: 1
  7994   001698  C178  F002         	movff	powf@ax,___fladd@b
  7995   00169C  C179  F003         	movff	powf@ax+1,___fladd@b+1
  7996   0016A0  C17A  F004         	movff	powf@ax+2,___fladd@b+2
  7997   0016A4  C17B  F005         	movff	powf@ax+3,___fladd@b+3
  7998   0016A8  0E00               	movlw	0
  7999   0016AA  6E06               	movwf	___fladd@a^0,c
  8000   0016AC  0E00               	movlw	0
  8001   0016AE  6E07               	movwf	(___fladd@a+1)^0,c
  8002   0016B0  0E80               	movlw	128
  8003   0016B2  6E08               	movwf	(___fladd@a+2)^0,c
  8004   0016B4  0EBF               	movlw	191
  8005   0016B6  6E09               	movwf	(___fladd@a+3)^0,c
  8006   0016B8  ECC2  F023         	call	___fladd	;wreg free
  8007   0016BC  C002  F1B0         	movff	?___fladd,powf@t
  8008   0016C0  C003  F1B1         	movff	?___fladd+1,powf@t+1
  8009   0016C4  C004  F1B2         	movff	?___fladd+2,powf@t+2
  8010   0016C8  C005  F1B3         	movff	?___fladd+3,powf@t+3
  8011   0016CC  0E00               	movlw	0
  8012   0016CE  6E16               	movwf	___flmul@a^0,c
  8013   0016D0  0E00               	movlw	0
  8014   0016D2  6E17               	movwf	(___flmul@a+1)^0,c
  8015   0016D4  0E80               	movlw	128
  8016   0016D6  6E18               	movwf	(___flmul@a+2)^0,c
  8017   0016D8  0E3E               	movlw	62
  8018   0016DA  6E19               	movwf	(___flmul@a+3)^0,c
  8019   0016DC  C1B0  F012         	movff	powf@t,___flmul@b
  8020   0016E0  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8021   0016E4  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8022   0016E8  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8023   0016EC  EC22  F026         	call	___flmul	;wreg free
  8024   0016F0  C012  F048         	movff	?___flmul,___flsub@a
  8025   0016F4  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8026   0016F8  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8027   0016FC  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8028   001700  0EAB               	movlw	171
  8029   001702  6E44               	movwf	___flsub@b^0,c
  8030   001704  0EAA               	movlw	170
  8031   001706  6E45               	movwf	(___flsub@b+1)^0,c
  8032   001708  0EAA               	movlw	170
  8033   00170A  6E46               	movwf	(___flsub@b+2)^0,c
  8034   00170C  0E3E               	movlw	62
  8035   00170E  6E47               	movwf	(___flsub@b+3)^0,c
  8036   001710  EC91  F037         	call	___flsub	;wreg free
  8037   001714  C044  F148         	movff	?___flsub,_powf$3107
  8038   001718  C045  F149         	movff	?___flsub+1,_powf$3107+1
  8039   00171C  C046  F14A         	movff	?___flsub+2,_powf$3107+2
  8040   001720  C047  F14B         	movff	?___flsub+3,_powf$3107+3
  8041   001724  C1B0  F016         	movff	powf@t,___flmul@a
  8042   001728  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  8043   00172C  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  8044   001730  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  8045   001734  C1B0  F012         	movff	powf@t,___flmul@b
  8046   001738  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8047   00173C  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8048   001740  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8049   001744  EC22  F026         	call	___flmul	;wreg free
  8050   001748  C012  F15C         	movff	?___flmul,_powf$3108
  8051   00174C  C013  F15D         	movff	?___flmul+1,_powf$3108+1
  8052   001750  C014  F15E         	movff	?___flmul+2,_powf$3108+2
  8053   001754  C015  F15F         	movff	?___flmul+3,_powf$3108+3
  8054   001758  C1B0  F016         	movff	powf@t,___flmul@a
  8055   00175C  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  8056   001760  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  8057   001764  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  8058   001768  C148  F012         	movff	_powf$3107,___flmul@b
  8059   00176C  C149  F013         	movff	_powf$3107+1,___flmul@b+1
  8060   001770  C14A  F014         	movff	_powf$3107+2,___flmul@b+2
  8061   001774  C14B  F015         	movff	_powf$3107+3,___flmul@b+3
  8062   001778  EC22  F026         	call	___flmul	;wreg free
  8063   00177C  C012  F048         	movff	?___flmul,___flsub@a
  8064   001780  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8065   001784  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8066   001788  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8067   00178C  0E00               	movlw	0
  8068   00178E  6E44               	movwf	___flsub@b^0,c
  8069   001790  0E00               	movlw	0
  8070   001792  6E45               	movwf	(___flsub@b+1)^0,c
  8071   001794  0E00               	movlw	0
  8072   001796  6E46               	movwf	(___flsub@b+2)^0,c
  8073   001798  0E3F               	movlw	63
  8074   00179A  6E47               	movwf	(___flsub@b+3)^0,c
  8075   00179C  EC91  F037         	call	___flsub	;wreg free
  8076   0017A0  C044  F14C         	movff	?___flsub,_powf$3109
  8077   0017A4  C045  F14D         	movff	?___flsub+1,_powf$3109+1
  8078   0017A8  C046  F14E         	movff	?___flsub+2,_powf$3109+2
  8079   0017AC  C047  F14F         	movff	?___flsub+3,_powf$3109+3
  8080   0017B0  C15C  F012         	movff	_powf$3108,___flmul@b
  8081   0017B4  C15D  F013         	movff	_powf$3108+1,___flmul@b+1
  8082   0017B8  C15E  F014         	movff	_powf$3108+2,___flmul@b+2
  8083   0017BC  C15F  F015         	movff	_powf$3108+3,___flmul@b+3
  8084   0017C0  C14C  F016         	movff	_powf$3109,___flmul@a
  8085   0017C4  C14D  F017         	movff	_powf$3109+1,___flmul@a+1
  8086   0017C8  C14E  F018         	movff	_powf$3109+2,___flmul@a+2
  8087   0017CC  C14F  F019         	movff	_powf$3109+3,___flmul@a+3
  8088   0017D0  EC22  F026         	call	___flmul	;wreg free
  8089   0017D4  C012  F144         	movff	?___flmul,powf@w
  8090   0017D8  C013  F145         	movff	?___flmul+1,powf@w+1
  8091   0017DC  C014  F146         	movff	?___flmul+2,powf@w+2
  8092   0017E0  C015  F147         	movff	?___flmul+3,powf@w+3
  8093   0017E4  C1B0  F012         	movff	powf@t,___flmul@b
  8094   0017E8  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8095   0017EC  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8096   0017F0  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8097   0017F4  0E00               	movlw	0
  8098   0017F6  6E16               	movwf	___flmul@a^0,c
  8099   0017F8  0EAA               	movlw	170
  8100   0017FA  6E17               	movwf	(___flmul@a+1)^0,c
  8101   0017FC  0EB8               	movlw	184
  8102   0017FE  6E18               	movwf	(___flmul@a+2)^0,c
  8103   001800  0E3F               	movlw	63
  8104   001802  6E19               	movwf	(___flmul@a+3)^0,c
  8105   001804  EC22  F026         	call	___flmul	;wreg free
  8106   001808  C012  F17C         	movff	?___flmul,powf@u
  8107   00180C  C013  F17D         	movff	?___flmul+1,powf@u+1
  8108   001810  C014  F17E         	movff	?___flmul+2,powf@u+2
  8109   001814  C015  F17F         	movff	?___flmul+3,powf@u+3
  8110   001818  0E70               	movlw	112
  8111   00181A  6E16               	movwf	___flmul@a^0,c
  8112   00181C  0EA5               	movlw	165
  8113   00181E  6E17               	movwf	(___flmul@a+1)^0,c
  8114   001820  0EEC               	movlw	236
  8115   001822  6E18               	movwf	(___flmul@a+2)^0,c
  8116   001824  0E36               	movlw	54
  8117   001826  6E19               	movwf	(___flmul@a+3)^0,c
  8118   001828  C1B0  F012         	movff	powf@t,___flmul@b
  8119   00182C  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8120   001830  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8121   001834  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8122   001838  EC22  F026         	call	___flmul	;wreg free
  8123   00183C  C012  F044         	movff	?___flmul,___flsub@b
  8124   001840  C013  F045         	movff	?___flmul+1,___flsub@b+1
  8125   001844  C014  F046         	movff	?___flmul+2,___flsub@b+2
  8126   001848  C015  F047         	movff	?___flmul+3,___flsub@b+3
  8127   00184C  0E3B               	movlw	59
  8128   00184E  6E16               	movwf	___flmul@a^0,c
  8129   001850  0EAA               	movlw	170
  8130   001852  6E17               	movwf	(___flmul@a+1)^0,c
  8131   001854  0EB8               	movlw	184
  8132   001856  6E18               	movwf	(___flmul@a+2)^0,c
  8133   001858  0E3F               	movlw	63
  8134   00185A  6E19               	movwf	(___flmul@a+3)^0,c
  8135   00185C  C144  F012         	movff	powf@w,___flmul@b
  8136   001860  C145  F013         	movff	powf@w+1,___flmul@b+1
  8137   001864  C146  F014         	movff	powf@w+2,___flmul@b+2
  8138   001868  C147  F015         	movff	powf@w+3,___flmul@b+3
  8139   00186C  EC22  F026         	call	___flmul	;wreg free
  8140   001870  C012  F048         	movff	?___flmul,___flsub@a
  8141   001874  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8142   001878  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8143   00187C  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8144   001880  EC91  F037         	call	___flsub	;wreg free
  8145   001884  C044  F180         	movff	?___flsub,powf@v
  8146   001888  C045  F181         	movff	?___flsub+1,powf@v+1
  8147   00188C  C046  F182         	movff	?___flsub+2,powf@v+2
  8148   001890  C047  F183         	movff	?___flsub+3,powf@v+3
  8149   001894  C17C  F002         	movff	powf@u,___fladd@b
  8150   001898  C17D  F003         	movff	powf@u+1,___fladd@b+1
  8151   00189C  C17E  F004         	movff	powf@u+2,___fladd@b+2
  8152   0018A0  C17F  F005         	movff	powf@u+3,___fladd@b+3
  8153   0018A4  C180  F006         	movff	powf@v,___fladd@a
  8154   0018A8  C181  F007         	movff	powf@v+1,___fladd@a+1
  8155   0018AC  C182  F008         	movff	powf@v+2,___fladd@a+2
  8156   0018B0  C183  F009         	movff	powf@v+3,___fladd@a+3
  8157   0018B4  ECC2  F023         	call	___fladd	;wreg free
  8158   0018B8  C002  F18C         	movff	?___fladd,powf@t1
  8159   0018BC  C003  F18D         	movff	?___fladd+1,powf@t1+1
  8160   0018C0  C004  F18E         	movff	?___fladd+2,powf@t1+2
  8161   0018C4  C005  F18F         	movff	?___fladd+3,powf@t1+3
  8162   0018C8  C18C  F198         	movff	powf@t1,powf@is
  8163   0018CC  C18D  F199         	movff	powf@t1+1,powf@is+1
  8164   0018D0  C18E  F19A         	movff	powf@t1+2,powf@is+2
  8165   0018D4  C18F  F19B         	movff	powf@t1+3,powf@is+3
  8166   0018D8  0E00               	movlw	0
  8167   0018DA  0101               	movlb	1	; () banked
  8168   0018DC  1598               	andwf	powf@is& (0+255),w,b
  8169   0018DE  6F8C               	movwf	powf@t1& (0+255),b
  8170   0018E0  0EF0               	movlw	240
  8171   0018E2  1599               	andwf	(powf@is+1)& (0+255),w,b
  8172   0018E4  6F8D               	movwf	(powf@t1+1)& (0+255),b
  8173   0018E6  0EFF               	movlw	255
  8174   0018E8  159A               	andwf	(powf@is+2)& (0+255),w,b
  8175   0018EA  6F8E               	movwf	(powf@t1+2)& (0+255),b
  8176   0018EC  0EFF               	movlw	255
  8177   0018EE  159B               	andwf	(powf@is+3)& (0+255),w,b
  8178   0018F0  6F8F               	movwf	(powf@t1+3)& (0+255),b
  8179   0018F2                     
  8180                           ; BSR set to: 1
  8181   0018F2  C17C  F048         	movff	powf@u,___flsub@a
  8182   0018F6  C17D  F049         	movff	powf@u+1,___flsub@a+1
  8183   0018FA  C17E  F04A         	movff	powf@u+2,___flsub@a+2
  8184   0018FE  C17F  F04B         	movff	powf@u+3,___flsub@a+3
  8185   001902  C18C  F044         	movff	powf@t1,___flsub@b
  8186   001906  C18D  F045         	movff	powf@t1+1,___flsub@b+1
  8187   00190A  C18E  F046         	movff	powf@t1+2,___flsub@b+2
  8188   00190E  C18F  F047         	movff	powf@t1+3,___flsub@b+3
  8189   001912  EC91  F037         	call	___flsub	;wreg free
  8190   001916  C044  F19C         	movff	?___flsub,_powf$3110
  8191   00191A  C045  F19D         	movff	?___flsub+1,_powf$3110+1
  8192   00191E  C046  F19E         	movff	?___flsub+2,_powf$3110+2
  8193   001922  C047  F19F         	movff	?___flsub+3,_powf$3110+3
  8194   001926  C180  F044         	movff	powf@v,___flsub@b
  8195   00192A  C181  F045         	movff	powf@v+1,___flsub@b+1
  8196   00192E  C182  F046         	movff	powf@v+2,___flsub@b+2
  8197   001932  C183  F047         	movff	powf@v+3,___flsub@b+3
  8198   001936  C19C  F048         	movff	_powf$3110,___flsub@a
  8199   00193A  C19D  F049         	movff	_powf$3110+1,___flsub@a+1
  8200   00193E  C19E  F04A         	movff	_powf$3110+2,___flsub@a+2
  8201   001942  C19F  F04B         	movff	_powf$3110+3,___flsub@a+3
  8202   001946  EC91  F037         	call	___flsub	;wreg free
  8203   00194A  C044  F11C         	movff	?___flsub,powf@t2
  8204   00194E  C045  F11D         	movff	?___flsub+1,powf@t2+1
  8205   001952  C046  F11E         	movff	?___flsub+2,powf@t2+2
  8206   001956  C047  F11F         	movff	?___flsub+3,powf@t2+3
  8207   00195A  EF8B  F013         	goto	l7394
  8208   00195E                     l7266:
  8209                           
  8210                           ; BSR set to: 1
  8211   00195E  0E00               	movlw	0
  8212   001960  6F88               	movwf	powf@n& (0+255),b
  8213   001962  0E00               	movlw	0
  8214   001964  6F89               	movwf	(powf@n+1)& (0+255),b
  8215   001966  0E00               	movlw	0
  8216   001968  6F8A               	movwf	(powf@n+2)& (0+255),b
  8217   00196A  0E00               	movlw	0
  8218   00196C  6F8B               	movwf	(powf@n+3)& (0+255),b
  8219   00196E                     
  8220                           ; BSR set to: 1
  8221   00196E  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8222   001970  EFC5  F00C         	goto	u6430
  8223   001974  51AF               	movf	(powf@ix+3)& (0+255),w,b
  8224   001976  E107               	bnz	u6431
  8225   001978  0E80               	movlw	128
  8226   00197A  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
  8227   00197C  B0D8               	btfsc	status,0,c
  8228   00197E  EFC3  F00C         	goto	u6431
  8229   001982  EFC5  F00C         	goto	u6430
  8230   001986                     u6431:
  8231   001986  EFF0  F00C         	goto	l7276
  8232   00198A                     u6430:
  8233   00198A                     
  8234                           ; BSR set to: 1
  8235   00198A  C178  F012         	movff	powf@ax,___flmul@b
  8236   00198E  C179  F013         	movff	powf@ax+1,___flmul@b+1
  8237   001992  C17A  F014         	movff	powf@ax+2,___flmul@b+2
  8238   001996  C17B  F015         	movff	powf@ax+3,___flmul@b+3
  8239   00199A  0E00               	movlw	0
  8240   00199C  6E16               	movwf	___flmul@a^0,c
  8241   00199E  0E00               	movlw	0
  8242   0019A0  6E17               	movwf	(___flmul@a+1)^0,c
  8243   0019A2  0E80               	movlw	128
  8244   0019A4  6E18               	movwf	(___flmul@a+2)^0,c
  8245   0019A6  0E4B               	movlw	75
  8246   0019A8  6E19               	movwf	(___flmul@a+3)^0,c
  8247   0019AA  EC22  F026         	call	___flmul	;wreg free
  8248   0019AE  C012  F178         	movff	?___flmul,powf@ax
  8249   0019B2  C013  F179         	movff	?___flmul+1,powf@ax+1
  8250   0019B6  C014  F17A         	movff	?___flmul+2,powf@ax+2
  8251   0019BA  C015  F17B         	movff	?___flmul+3,powf@ax+3
  8252   0019BE  0EE8               	movlw	232
  8253   0019C0  0101               	movlb	1	; () banked
  8254   0019C2  2788               	addwf	powf@n& (0+255),f,b
  8255   0019C4  0EFF               	movlw	255
  8256   0019C6  2389               	addwfc	(powf@n+1)& (0+255),f,b
  8257   0019C8  0EFF               	movlw	255
  8258   0019CA  238A               	addwfc	(powf@n+2)& (0+255),f,b
  8259   0019CC  0EFF               	movlw	255
  8260   0019CE  238B               	addwfc	(powf@n+3)& (0+255),f,b
  8261   0019D0                     
  8262                           ; BSR set to: 1
  8263   0019D0  C178  F1AC         	movff	powf@ax,powf@ix
  8264   0019D4  C179  F1AD         	movff	powf@ax+1,powf@ix+1
  8265   0019D8  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
  8266   0019DC  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
  8267   0019E0                     l7276:
  8268                           
  8269                           ; BSR set to: 1
  8270   0019E0  0E17               	movlw	23
  8271   0019E2  0100               	movlb	0	; () banked
  8272   0019E4  6FE0               	movwf	??_powf& (0+255),b
  8273   0019E6  C1AC  F0E1         	movff	powf@ix,??_powf+1
  8274   0019EA  C1AD  F0E2         	movff	powf@ix+1,??_powf+2
  8275   0019EE  C1AE  F0E3         	movff	powf@ix+2,??_powf+3
  8276   0019F2  C1AF  F0E4         	movff	powf@ix+3,??_powf+4
  8277   0019F6                     u6445:
  8278   0019F6  67E0               	tstfsz	??_powf& (0+255),b
  8279   0019F8  EF00  F00D         	goto	u6446
  8280   0019FC  EF08  F00D         	goto	u6447
  8281   001A00                     u6446:
  8282   001A00  35E4               	rlcf	(??_powf+4)& (0+255),w,b
  8283   001A02  33E4               	rrcf	(??_powf+4)& (0+255),f,b
  8284   001A04  33E3               	rrcf	(??_powf+3)& (0+255),f,b
  8285   001A06  33E2               	rrcf	(??_powf+2)& (0+255),f,b
  8286   001A08  33E1               	rrcf	(??_powf+1)& (0+255),f,b
  8287   001A0A  2FE0               	decfsz	??_powf& (0+255),f,b
  8288   001A0C  EFFB  F00C         	goto	u6445
  8289   001A10                     u6447:
  8290   001A10  0E81               	movlw	129
  8291   001A12  0100               	movlb	0	; () banked
  8292   001A14  25E1               	addwf	(??_powf+1)& (0+255),w,b
  8293   001A16  6FE5               	movwf	(??_powf+5)& (0+255),b
  8294   001A18  0EFF               	movlw	255
  8295   001A1A  21E2               	addwfc	(??_powf+2)& (0+255),w,b
  8296   001A1C  6FE6               	movwf	(??_powf+6)& (0+255),b
  8297   001A1E  0EFF               	movlw	255
  8298   001A20  21E3               	addwfc	(??_powf+3)& (0+255),w,b
  8299   001A22  6FE7               	movwf	(??_powf+7)& (0+255),b
  8300   001A24  0EFF               	movlw	255
  8301   001A26  21E4               	addwfc	(??_powf+4)& (0+255),w,b
  8302   001A28  6FE8               	movwf	(??_powf+8)& (0+255),b
  8303   001A2A  51E5               	movf	(??_powf+5)& (0+255),w,b
  8304   001A2C  0101               	movlb	1	; () banked
  8305   001A2E  2788               	addwf	powf@n& (0+255),f,b
  8306   001A30  0100               	movlb	0	; () banked
  8307   001A32  51E6               	movf	(??_powf+6)& (0+255),w,b
  8308   001A34  0101               	movlb	1	; () banked
  8309   001A36  2389               	addwfc	(powf@n+1)& (0+255),f,b
  8310   001A38  0100               	movlb	0	; () banked
  8311   001A3A  51E7               	movf	(??_powf+7)& (0+255),w,b
  8312   001A3C  0101               	movlb	1	; () banked
  8313   001A3E  238A               	addwfc	(powf@n+2)& (0+255),f,b
  8314   001A40  0100               	movlb	0	; () banked
  8315   001A42  51E8               	movf	(??_powf+8)& (0+255),w,b
  8316   001A44  0101               	movlb	1	; () banked
  8317   001A46  238B               	addwfc	(powf@n+3)& (0+255),f,b
  8318   001A48                     
  8319                           ; BSR set to: 1
  8320   001A48  0EFF               	movlw	255
  8321   001A4A  15AC               	andwf	powf@ix& (0+255),w,b
  8322   001A4C  6FA8               	movwf	powf@j& (0+255),b
  8323   001A4E  0EFF               	movlw	255
  8324   001A50  15AD               	andwf	(powf@ix+1)& (0+255),w,b
  8325   001A52  6FA9               	movwf	(powf@j+1)& (0+255),b
  8326   001A54  0E7F               	movlw	127
  8327   001A56  15AE               	andwf	(powf@ix+2)& (0+255),w,b
  8328   001A58  6FAA               	movwf	(powf@j+2)& (0+255),b
  8329   001A5A  0E00               	movlw	0
  8330   001A5C  15AF               	andwf	(powf@ix+3)& (0+255),w,b
  8331   001A5E  6FAB               	movwf	(powf@j+3)& (0+255),b
  8332   001A60                     
  8333                           ; BSR set to: 1
  8334   001A60  0E00               	movlw	0
  8335   001A62  6FA4               	movwf	powf@k& (0+255),b
  8336   001A64  0E00               	movlw	0
  8337   001A66  6FA5               	movwf	(powf@k+1)& (0+255),b
  8338   001A68  0E00               	movlw	0
  8339   001A6A  6FA6               	movwf	(powf@k+2)& (0+255),b
  8340   001A6C  0E00               	movlw	0
  8341   001A6E  6FA7               	movwf	(powf@k+3)& (0+255),b
  8342   001A70                     
  8343                           ; BSR set to: 1
  8344   001A70  0E00               	movlw	0
  8345   001A72  11A8               	iorwf	powf@j& (0+255),w,b
  8346   001A74  6FAC               	movwf	powf@ix& (0+255),b
  8347   001A76  0E00               	movlw	0
  8348   001A78  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  8349   001A7A  6FAD               	movwf	(powf@ix+1)& (0+255),b
  8350   001A7C  0E80               	movlw	128
  8351   001A7E  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  8352   001A80  6FAE               	movwf	(powf@ix+2)& (0+255),b
  8353   001A82  0E3F               	movlw	63
  8354   001A84  11AB               	iorwf	(powf@j+3)& (0+255),w,b
  8355   001A86  6FAF               	movwf	(powf@ix+3)& (0+255),b
  8356   001A88                     
  8357                           ; BSR set to: 1
  8358   001A88  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  8359   001A8A  EF56  F00D         	goto	u6450
  8360   001A8E  51AB               	movf	(powf@j+3)& (0+255),w,b
  8361   001A90  E10B               	bnz	u6451
  8362   001A92  0E72               	movlw	114
  8363   001A94  5DA8               	subwf	powf@j& (0+255),w,b
  8364   001A96  0EC4               	movlw	196
  8365   001A98  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  8366   001A9A  0E1C               	movlw	28
  8367   001A9C  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  8368   001A9E  B0D8               	btfsc	status,0,c
  8369   001AA0  EF54  F00D         	goto	u6451
  8370   001AA4  EF56  F00D         	goto	u6450
  8371   001AA8                     u6451:
  8372   001AA8  EF58  F00D         	goto	l7288
  8373   001AAC                     u6450:
  8374   001AAC  EF82  F00D         	goto	l7294
  8375   001AB0                     l7288:
  8376                           
  8377                           ; BSR set to: 1
  8378   001AB0  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  8379   001AB2  EF6A  F00D         	goto	u6460
  8380   001AB6  51AB               	movf	(powf@j+3)& (0+255),w,b
  8381   001AB8  E10B               	bnz	u6461
  8382   001ABA  0ED7               	movlw	215
  8383   001ABC  5DA8               	subwf	powf@j& (0+255),w,b
  8384   001ABE  0EB3               	movlw	179
  8385   001AC0  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  8386   001AC2  0E5D               	movlw	93
  8387   001AC4  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  8388   001AC6  B0D8               	btfsc	status,0,c
  8389   001AC8  EF68  F00D         	goto	u6461
  8390   001ACC  EF6A  F00D         	goto	u6460
  8391   001AD0                     u6461:
  8392   001AD0  EF74  F00D         	goto	l7292
  8393   001AD4                     u6460:
  8394   001AD4                     
  8395                           ; BSR set to: 1
  8396   001AD4  0E01               	movlw	1
  8397   001AD6  6FA4               	movwf	powf@k& (0+255),b
  8398   001AD8  0E00               	movlw	0
  8399   001ADA  6FA5               	movwf	(powf@k+1)& (0+255),b
  8400   001ADC  0E00               	movlw	0
  8401   001ADE  6FA6               	movwf	(powf@k+2)& (0+255),b
  8402   001AE0  0E00               	movlw	0
  8403   001AE2  6FA7               	movwf	(powf@k+3)& (0+255),b
  8404   001AE4  EF82  F00D         	goto	l7294
  8405   001AE8                     l7292:
  8406                           
  8407                           ; BSR set to: 1
  8408   001AE8  0E01               	movlw	1
  8409   001AEA  2788               	addwf	powf@n& (0+255),f,b
  8410   001AEC  0E00               	movlw	0
  8411   001AEE  2389               	addwfc	(powf@n+1)& (0+255),f,b
  8412   001AF0  238A               	addwfc	(powf@n+2)& (0+255),f,b
  8413   001AF2  238B               	addwfc	(powf@n+3)& (0+255),f,b
  8414   001AF4  0E00               	movlw	0
  8415   001AF6  27AC               	addwf	powf@ix& (0+255),f,b
  8416   001AF8  0E00               	movlw	0
  8417   001AFA  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
  8418   001AFC  0E80               	movlw	128
  8419   001AFE  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
  8420   001B00  0EFF               	movlw	255
  8421   001B02  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
  8422   001B04                     l7294:
  8423                           
  8424                           ; BSR set to: 1
  8425   001B04  C1AC  F178         	movff	powf@ix,powf@ax
  8426   001B08  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  8427   001B0C  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  8428   001B10  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  8429   001B14                     
  8430                           ; BSR set to: 1
  8431   001B14  C178  F044         	movff	powf@ax,___flsub@b
  8432   001B18  C179  F045         	movff	powf@ax+1,___flsub@b+1
  8433   001B1C  C17A  F046         	movff	powf@ax+2,___flsub@b+2
  8434   001B20  C17B  F047         	movff	powf@ax+3,___flsub@b+3
  8435   001B24  51A4               	movf	powf@k& (0+255),w,b
  8436   001B26  0D04               	mullw	4
  8437   001B28  50F3               	movf	243,w,c
  8438   001B2A  0F11               	addlw	low _bp
  8439   001B2C  0100               	movlb	0	; () banked
  8440   001B2E  6FE0               	movwf	??_powf& (0+255),b
  8441   001B30  C0E0  FFF6         	movff	??_powf,tblptrl
  8442   001B34                     	if	0	;There is only one active tblptr byte
  8443   001B34                     	endif
  8444   001B34                     	if	0	;tblptru may be non-zero
  8445   001B34                     	endif
  8446   001B34                     	if	0	;tblptru may be non-zero
  8447   001B34                     	endif
  8448   001B34  0009               	tblrd		*+
  8449   001B36  CFF5 F048          	movff	tablat,___flsub@a
  8450   001B3A  0009               	tblrd		*+
  8451   001B3C  CFF5 F049          	movff	tablat,___flsub@a+1
  8452   001B40  0009               	tblrd		*+
  8453   001B42  CFF5 F04A          	movff	tablat,___flsub@a+2
  8454   001B46  000A               	tblrd		*-
  8455   001B48  CFF5 F04B          	movff	tablat,___flsub@a+3
  8456   001B4C  EC91  F037         	call	___flsub	;wreg free
  8457   001B50  C044  F17C         	movff	?___flsub,powf@u
  8458   001B54  C045  F17D         	movff	?___flsub+1,powf@u+1
  8459   001B58  C046  F17E         	movff	?___flsub+2,powf@u+2
  8460   001B5C  C047  F17F         	movff	?___flsub+3,powf@u+3
  8461   001B60  0E00               	movlw	0
  8462   001B62  6E2B               	movwf	___fldiv@b^0,c
  8463   001B64  0E00               	movlw	0
  8464   001B66  6E2C               	movwf	(___fldiv@b+1)^0,c
  8465   001B68  0E80               	movlw	128
  8466   001B6A  6E2D               	movwf	(___fldiv@b+2)^0,c
  8467   001B6C  0E3F               	movlw	63
  8468   001B6E  6E2E               	movwf	(___fldiv@b+3)^0,c
  8469   001B70  C178  F006         	movff	powf@ax,___fladd@a
  8470   001B74  C179  F007         	movff	powf@ax+1,___fladd@a+1
  8471   001B78  C17A  F008         	movff	powf@ax+2,___fladd@a+2
  8472   001B7C  C17B  F009         	movff	powf@ax+3,___fladd@a+3
  8473   001B80  0101               	movlb	1	; () banked
  8474   001B82  51A4               	movf	powf@k& (0+255),w,b
  8475   001B84  0D04               	mullw	4
  8476   001B86  50F3               	movf	243,w,c
  8477   001B88  0F11               	addlw	low _bp
  8478   001B8A  0100               	movlb	0	; () banked
  8479   001B8C  6FE0               	movwf	??_powf& (0+255),b
  8480   001B8E  C0E0  FFF6         	movff	??_powf,tblptrl
  8481   001B92                     	if	0	;There is only one active tblptr byte
  8482   001B92                     	endif
  8483   001B92                     	if	0	;tblptru may be non-zero
  8484   001B92                     	endif
  8485   001B92                     	if	0	;tblptru may be non-zero
  8486   001B92                     	endif
  8487   001B92  0009               	tblrd		*+
  8488   001B94  CFF5 F002          	movff	tablat,___fladd@b
  8489   001B98  0009               	tblrd		*+
  8490   001B9A  CFF5 F003          	movff	tablat,___fladd@b+1
  8491   001B9E  0009               	tblrd		*+
  8492   001BA0  CFF5 F004          	movff	tablat,___fladd@b+2
  8493   001BA4  000A               	tblrd		*-
  8494   001BA6  CFF5 F005          	movff	tablat,___fladd@b+3
  8495   001BAA  ECC2  F023         	call	___fladd	;wreg free
  8496   001BAE  C002  F02F         	movff	?___fladd,___fldiv@a
  8497   001BB2  C003  F030         	movff	?___fladd+1,___fldiv@a+1
  8498   001BB6  C004  F031         	movff	?___fladd+2,___fldiv@a+2
  8499   001BBA  C005  F032         	movff	?___fladd+3,___fldiv@a+3
  8500   001BBE  EC26  F02A         	call	___fldiv	;wreg free
  8501   001BC2  C02B  F180         	movff	?___fldiv,powf@v
  8502   001BC6  C02C  F181         	movff	?___fldiv+1,powf@v+1
  8503   001BCA  C02D  F182         	movff	?___fldiv+2,powf@v+2
  8504   001BCE  C02E  F183         	movff	?___fldiv+3,powf@v+3
  8505   001BD2  C17C  F012         	movff	powf@u,___flmul@b
  8506   001BD6  C17D  F013         	movff	powf@u+1,___flmul@b+1
  8507   001BDA  C17E  F014         	movff	powf@u+2,___flmul@b+2
  8508   001BDE  C17F  F015         	movff	powf@u+3,___flmul@b+3
  8509   001BE2  C180  F016         	movff	powf@v,___flmul@a
  8510   001BE6  C181  F017         	movff	powf@v+1,___flmul@a+1
  8511   001BEA  C182  F018         	movff	powf@v+2,___flmul@a+2
  8512   001BEE  C183  F019         	movff	powf@v+3,___flmul@a+3
  8513   001BF2  EC22  F026         	call	___flmul	;wreg free
  8514   001BF6  C012  F158         	movff	?___flmul,powf@s
  8515   001BFA  C013  F159         	movff	?___flmul+1,powf@s+1
  8516   001BFE  C014  F15A         	movff	?___flmul+2,powf@s+2
  8517   001C02  C015  F15B         	movff	?___flmul+3,powf@s+3
  8518   001C06  C158  F174         	movff	powf@s,powf@s_h
  8519   001C0A  C159  F175         	movff	powf@s+1,powf@s_h+1
  8520   001C0E  C15A  F176         	movff	powf@s+2,powf@s_h+2
  8521   001C12  C15B  F177         	movff	powf@s+3,powf@s_h+3
  8522   001C16  C174  F198         	movff	powf@s_h,powf@is
  8523   001C1A  C175  F199         	movff	powf@s_h+1,powf@is+1
  8524   001C1E  C176  F19A         	movff	powf@s_h+2,powf@is+2
  8525   001C22  C177  F19B         	movff	powf@s_h+3,powf@is+3
  8526   001C26  0E00               	movlw	0
  8527   001C28  0101               	movlb	1	; () banked
  8528   001C2A  1598               	andwf	powf@is& (0+255),w,b
  8529   001C2C  6F74               	movwf	powf@s_h& (0+255),b
  8530   001C2E  0EF0               	movlw	240
  8531   001C30  1599               	andwf	(powf@is+1)& (0+255),w,b
  8532   001C32  6F75               	movwf	(powf@s_h+1)& (0+255),b
  8533   001C34  0EFF               	movlw	255
  8534   001C36  159A               	andwf	(powf@is+2)& (0+255),w,b
  8535   001C38  6F76               	movwf	(powf@s_h+2)& (0+255),b
  8536   001C3A  0EFF               	movlw	255
  8537   001C3C  159B               	andwf	(powf@is+3)& (0+255),w,b
  8538   001C3E  6F77               	movwf	(powf@s_h+3)& (0+255),b
  8539   001C40                     
  8540                           ; BSR set to: 1
  8541   001C40  C1AC  F0E0         	movff	powf@ix,??_powf
  8542   001C44  C1AD  F0E1         	movff	powf@ix+1,??_powf+1
  8543   001C48  C1AE  F0E2         	movff	powf@ix+2,??_powf+2
  8544   001C4C  C1AF  F0E3         	movff	powf@ix+3,??_powf+3
  8545   001C50  0100               	movlb	0	; () banked
  8546   001C52  35E3               	rlcf	(??_powf+3)& (0+255),w,b
  8547   001C54  33E3               	rrcf	(??_powf+3)& (0+255),f,b
  8548   001C56  33E2               	rrcf	(??_powf+2)& (0+255),f,b
  8549   001C58  33E1               	rrcf	(??_powf+1)& (0+255),f,b
  8550   001C5A  33E0               	rrcf	??_powf& (0+255),f,b
  8551   001C5C  0E00               	movlw	0
  8552   001C5E  15E0               	andwf	??_powf& (0+255),w,b
  8553   001C60  6FE4               	movwf	(??_powf+4)& (0+255),b
  8554   001C62  0EF0               	movlw	240
  8555   001C64  15E1               	andwf	(??_powf+1)& (0+255),w,b
  8556   001C66  6FE5               	movwf	(??_powf+5)& (0+255),b
  8557   001C68  0EFF               	movlw	255
  8558   001C6A  15E2               	andwf	(??_powf+2)& (0+255),w,b
  8559   001C6C  6FE6               	movwf	(??_powf+6)& (0+255),b
  8560   001C6E  0EFF               	movlw	255
  8561   001C70  15E3               	andwf	(??_powf+3)& (0+255),w,b
  8562   001C72  6FE7               	movwf	(??_powf+7)& (0+255),b
  8563   001C74  0E00               	movlw	0
  8564   001C76  11E4               	iorwf	(??_powf+4)& (0+255),w,b
  8565   001C78  0101               	movlb	1	; () banked
  8566   001C7A  6F98               	movwf	powf@is& (0+255),b
  8567   001C7C  0E00               	movlw	0
  8568   001C7E  0100               	movlb	0	; () banked
  8569   001C80  11E5               	iorwf	(??_powf+5)& (0+255),w,b
  8570   001C82  0101               	movlb	1	; () banked
  8571   001C84  6F99               	movwf	(powf@is+1)& (0+255),b
  8572   001C86  0E00               	movlw	0
  8573   001C88  0100               	movlb	0	; () banked
  8574   001C8A  11E6               	iorwf	(??_powf+6)& (0+255),w,b
  8575   001C8C  0101               	movlb	1	; () banked
  8576   001C8E  6F9A               	movwf	(powf@is+2)& (0+255),b
  8577   001C90  0E20               	movlw	32
  8578   001C92  0100               	movlb	0	; () banked
  8579   001C94  11E7               	iorwf	(??_powf+7)& (0+255),w,b
  8580   001C96  0101               	movlb	1	; () banked
  8581   001C98  6F9B               	movwf	(powf@is+3)& (0+255),b
  8582   001C9A                     
  8583                           ; BSR set to: 1
  8584   001C9A  C1A4  F0E0         	movff	powf@k,??_powf
  8585   001C9E  C1A5  F0E1         	movff	powf@k+1,??_powf+1
  8586   001CA2  C1A6  F0E2         	movff	powf@k+2,??_powf+2
  8587   001CA6  C1A7  F0E3         	movff	powf@k+3,??_powf+3
  8588   001CAA  0E15               	movlw	21
  8589   001CAC                     u6475:
  8590   001CAC  90D8               	bcf	status,0,c
  8591   001CAE  0100               	movlb	0	; () banked
  8592   001CB0  37E0               	rlcf	??_powf& (0+255),f,b
  8593   001CB2  37E1               	rlcf	(??_powf+1)& (0+255),f,b
  8594   001CB4  37E2               	rlcf	(??_powf+2)& (0+255),f,b
  8595   001CB6  37E3               	rlcf	(??_powf+3)& (0+255),f,b
  8596   001CB8  2EE8               	decfsz	wreg,f,c
  8597   001CBA  EF56  F00E         	goto	u6475
  8598   001CBE  0101               	movlb	1	; () banked
  8599   001CC0  5198               	movf	powf@is& (0+255),w,b
  8600   001CC2  0100               	movlb	0	; () banked
  8601   001CC4  25E0               	addwf	??_powf& (0+255),w,b
  8602   001CC6  6FE4               	movwf	(??_powf+4)& (0+255),b
  8603   001CC8  0101               	movlb	1	; () banked
  8604   001CCA  5199               	movf	(powf@is+1)& (0+255),w,b
  8605   001CCC  0100               	movlb	0	; () banked
  8606   001CCE  21E1               	addwfc	(??_powf+1)& (0+255),w,b
  8607   001CD0  6FE5               	movwf	(??_powf+5)& (0+255),b
  8608   001CD2  0101               	movlb	1	; () banked
  8609   001CD4  519A               	movf	(powf@is+2)& (0+255),w,b
  8610   001CD6  0100               	movlb	0	; () banked
  8611   001CD8  21E2               	addwfc	(??_powf+2)& (0+255),w,b
  8612   001CDA  6FE6               	movwf	(??_powf+6)& (0+255),b
  8613   001CDC  0101               	movlb	1	; () banked
  8614   001CDE  519B               	movf	(powf@is+3)& (0+255),w,b
  8615   001CE0  0100               	movlb	0	; () banked
  8616   001CE2  21E3               	addwfc	(??_powf+3)& (0+255),w,b
  8617   001CE4  6FE7               	movwf	(??_powf+7)& (0+255),b
  8618   001CE6  0E00               	movlw	0
  8619   001CE8  25E4               	addwf	(??_powf+4)& (0+255),w,b
  8620   001CEA  0101               	movlb	1	; () banked
  8621   001CEC  6F70               	movwf	powf@t_h& (0+255),b
  8622   001CEE  0E00               	movlw	0
  8623   001CF0  0100               	movlb	0	; () banked
  8624   001CF2  21E5               	addwfc	(??_powf+5)& (0+255),w,b
  8625   001CF4  0101               	movlb	1	; () banked
  8626   001CF6  6F71               	movwf	(powf@t_h+1)& (0+255),b
  8627   001CF8  0E40               	movlw	64
  8628   001CFA  0100               	movlb	0	; () banked
  8629   001CFC  21E6               	addwfc	(??_powf+6)& (0+255),w,b
  8630   001CFE  0101               	movlb	1	; () banked
  8631   001D00  6F72               	movwf	(powf@t_h+2)& (0+255),b
  8632   001D02  0E00               	movlw	0
  8633   001D04  0100               	movlb	0	; () banked
  8634   001D06  21E7               	addwfc	(??_powf+7)& (0+255),w,b
  8635   001D08  0101               	movlb	1	; () banked
  8636   001D0A  6F73               	movwf	(powf@t_h+3)& (0+255),b
  8637   001D0C                     
  8638                           ; BSR set to: 1
  8639   001D0C  51A4               	movf	powf@k& (0+255),w,b
  8640   001D0E  0D04               	mullw	4
  8641   001D10  50F3               	movf	243,w,c
  8642   001D12  0F11               	addlw	low _bp
  8643   001D14  0100               	movlb	0	; () banked
  8644   001D16  6FE0               	movwf	??_powf& (0+255),b
  8645   001D18  C0E0  FFF6         	movff	??_powf,tblptrl
  8646   001D1C                     	if	0	;There is only one active tblptr byte
  8647   001D1C                     	endif
  8648   001D1C                     	if	0	;tblptru may be non-zero
  8649   001D1C                     	endif
  8650   001D1C                     	if	0	;tblptru may be non-zero
  8651   001D1C                     	endif
  8652   001D1C  0009               	tblrd		*+
  8653   001D1E  CFF5 F048          	movff	tablat,___flsub@a
  8654   001D22  0009               	tblrd		*+
  8655   001D24  CFF5 F049          	movff	tablat,___flsub@a+1
  8656   001D28  0009               	tblrd		*+
  8657   001D2A  CFF5 F04A          	movff	tablat,___flsub@a+2
  8658   001D2E  000A               	tblrd		*-
  8659   001D30  CFF5 F04B          	movff	tablat,___flsub@a+3
  8660   001D34  C170  F044         	movff	powf@t_h,___flsub@b
  8661   001D38  C171  F045         	movff	powf@t_h+1,___flsub@b+1
  8662   001D3C  C172  F046         	movff	powf@t_h+2,___flsub@b+2
  8663   001D40  C173  F047         	movff	powf@t_h+3,___flsub@b+3
  8664   001D44  EC91  F037         	call	___flsub	;wreg free
  8665   001D48  C044  F19C         	movff	?___flsub,_powf$3110
  8666   001D4C  C045  F19D         	movff	?___flsub+1,_powf$3110+1
  8667   001D50  C046  F19E         	movff	?___flsub+2,_powf$3110+2
  8668   001D54  C047  F19F         	movff	?___flsub+3,_powf$3110+3
  8669   001D58  C178  F044         	movff	powf@ax,___flsub@b
  8670   001D5C  C179  F045         	movff	powf@ax+1,___flsub@b+1
  8671   001D60  C17A  F046         	movff	powf@ax+2,___flsub@b+2
  8672   001D64  C17B  F047         	movff	powf@ax+3,___flsub@b+3
  8673   001D68  C19C  F048         	movff	_powf$3110,___flsub@a
  8674   001D6C  C19D  F049         	movff	_powf$3110+1,___flsub@a+1
  8675   001D70  C19E  F04A         	movff	_powf$3110+2,___flsub@a+2
  8676   001D74  C19F  F04B         	movff	_powf$3110+3,___flsub@a+3
  8677   001D78  EC91  F037         	call	___flsub	;wreg free
  8678   001D7C  C044  F134         	movff	?___flsub,powf@t_l
  8679   001D80  C045  F135         	movff	?___flsub+1,powf@t_l+1
  8680   001D84  C046  F136         	movff	?___flsub+2,powf@t_l+2
  8681   001D88  C047  F137         	movff	?___flsub+3,powf@t_l+3
  8682   001D8C  C170  F016         	movff	powf@t_h,___flmul@a
  8683   001D90  C171  F017         	movff	powf@t_h+1,___flmul@a+1
  8684   001D94  C172  F018         	movff	powf@t_h+2,___flmul@a+2
  8685   001D98  C173  F019         	movff	powf@t_h+3,___flmul@a+3
  8686   001D9C  C174  F012         	movff	powf@s_h,___flmul@b
  8687   001DA0  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  8688   001DA4  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  8689   001DA8  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  8690   001DAC  EC22  F026         	call	___flmul	;wreg free
  8691   001DB0  C012  F048         	movff	?___flmul,___flsub@a
  8692   001DB4  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8693   001DB8  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8694   001DBC  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8695   001DC0  C17C  F044         	movff	powf@u,___flsub@b
  8696   001DC4  C17D  F045         	movff	powf@u+1,___flsub@b+1
  8697   001DC8  C17E  F046         	movff	powf@u+2,___flsub@b+2
  8698   001DCC  C17F  F047         	movff	powf@u+3,___flsub@b+3
  8699   001DD0  EC91  F037         	call	___flsub	;wreg free
  8700   001DD4  C044  F19C         	movff	?___flsub,_powf$3110
  8701   001DD8  C045  F19D         	movff	?___flsub+1,_powf$3110+1
  8702   001DDC  C046  F19E         	movff	?___flsub+2,_powf$3110+2
  8703   001DE0  C047  F19F         	movff	?___flsub+3,_powf$3110+3
  8704   001DE4  C134  F016         	movff	powf@t_l,___flmul@a
  8705   001DE8  C135  F017         	movff	powf@t_l+1,___flmul@a+1
  8706   001DEC  C136  F018         	movff	powf@t_l+2,___flmul@a+2
  8707   001DF0  C137  F019         	movff	powf@t_l+3,___flmul@a+3
  8708   001DF4  C174  F012         	movff	powf@s_h,___flmul@b
  8709   001DF8  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  8710   001DFC  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  8711   001E00  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  8712   001E04  EC22  F026         	call	___flmul	;wreg free
  8713   001E08  C012  F048         	movff	?___flmul,___flsub@a
  8714   001E0C  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8715   001E10  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8716   001E14  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8717   001E18  C19C  F044         	movff	_powf$3110,___flsub@b
  8718   001E1C  C19D  F045         	movff	_powf$3110+1,___flsub@b+1
  8719   001E20  C19E  F046         	movff	_powf$3110+2,___flsub@b+2
  8720   001E24  C19F  F047         	movff	_powf$3110+3,___flsub@b+3
  8721   001E28  EC91  F037         	call	___flsub	;wreg free
  8722   001E2C  C044  F15C         	movff	?___flsub,_powf$3108
  8723   001E30  C045  F15D         	movff	?___flsub+1,_powf$3108+1
  8724   001E34  C046  F15E         	movff	?___flsub+2,_powf$3108+2
  8725   001E38  C047  F15F         	movff	?___flsub+3,_powf$3108+3
  8726   001E3C  C15C  F012         	movff	_powf$3108,___flmul@b
  8727   001E40  C15D  F013         	movff	_powf$3108+1,___flmul@b+1
  8728   001E44  C15E  F014         	movff	_powf$3108+2,___flmul@b+2
  8729   001E48  C15F  F015         	movff	_powf$3108+3,___flmul@b+3
  8730   001E4C  C180  F016         	movff	powf@v,___flmul@a
  8731   001E50  C181  F017         	movff	powf@v+1,___flmul@a+1
  8732   001E54  C182  F018         	movff	powf@v+2,___flmul@a+2
  8733   001E58  C183  F019         	movff	powf@v+3,___flmul@a+3
  8734   001E5C  EC22  F026         	call	___flmul	;wreg free
  8735   001E60  C012  F130         	movff	?___flmul,powf@s_l
  8736   001E64  C013  F131         	movff	?___flmul+1,powf@s_l+1
  8737   001E68  C014  F132         	movff	?___flmul+2,powf@s_l+2
  8738   001E6C  C015  F133         	movff	?___flmul+3,powf@s_l+3
  8739   001E70  C158  F012         	movff	powf@s,___flmul@b
  8740   001E74  C159  F013         	movff	powf@s+1,___flmul@b+1
  8741   001E78  C15A  F014         	movff	powf@s+2,___flmul@b+2
  8742   001E7C  C15B  F015         	movff	powf@s+3,___flmul@b+3
  8743   001E80  C158  F016         	movff	powf@s,___flmul@a
  8744   001E84  C159  F017         	movff	powf@s+1,___flmul@a+1
  8745   001E88  C15A  F018         	movff	powf@s+2,___flmul@a+2
  8746   001E8C  C15B  F019         	movff	powf@s+3,___flmul@a+3
  8747   001E90  EC22  F026         	call	___flmul	;wreg free
  8748   001E94  C012  F190         	movff	?___flmul,powf@s2
  8749   001E98  C013  F191         	movff	?___flmul+1,powf@s2+1
  8750   001E9C  C014  F192         	movff	?___flmul+2,powf@s2+2
  8751   001EA0  C015  F193         	movff	?___flmul+3,powf@s2+3
  8752   001EA4  0E55               	movlw	85
  8753   001EA6  6E06               	movwf	___fladd@a^0,c
  8754   001EA8  0E32               	movlw	50
  8755   001EAA  6E07               	movwf	(___fladd@a+1)^0,c
  8756   001EAC  0E6C               	movlw	108
  8757   001EAE  6E08               	movwf	(___fladd@a+2)^0,c
  8758   001EB0  0E3E               	movlw	62
  8759   001EB2  6E09               	movwf	(___fladd@a+3)^0,c
  8760   001EB4  0E42               	movlw	66
  8761   001EB6  6E16               	movwf	___flmul@a^0,c
  8762   001EB8  0EF1               	movlw	241
  8763   001EBA  6E17               	movwf	(___flmul@a+1)^0,c
  8764   001EBC  0E53               	movlw	83
  8765   001EBE  6E18               	movwf	(___flmul@a+2)^0,c
  8766   001EC0  0E3E               	movlw	62
  8767   001EC2  6E19               	movwf	(___flmul@a+3)^0,c
  8768   001EC4  C190  F012         	movff	powf@s2,___flmul@b
  8769   001EC8  C191  F013         	movff	powf@s2+1,___flmul@b+1
  8770   001ECC  C192  F014         	movff	powf@s2+2,___flmul@b+2
  8771   001ED0  C193  F015         	movff	powf@s2+3,___flmul@b+3
  8772   001ED4  EC22  F026         	call	___flmul	;wreg free
  8773   001ED8  C012  F002         	movff	?___flmul,___fladd@b
  8774   001EDC  C013  F003         	movff	?___flmul+1,___fladd@b+1
  8775   001EE0  C014  F004         	movff	?___flmul+2,___fladd@b+2
  8776   001EE4  C015  F005         	movff	?___flmul+3,___fladd@b+3
  8777   001EE8  ECC2  F023         	call	___fladd	;wreg free
  8778   001EEC  C002  F148         	movff	?___fladd,_powf$3107
  8779   001EF0  C003  F149         	movff	?___fladd+1,_powf$3107+1
  8780   001EF4  C004  F14A         	movff	?___fladd+2,_powf$3107+2
  8781   001EF8  C005  F14B         	movff	?___fladd+3,_powf$3107+3
  8782   001EFC  0E05               	movlw	5
  8783   001EFE  6E06               	movwf	___fladd@a^0,c
  8784   001F00  0EA3               	movlw	163
  8785   001F02  6E07               	movwf	(___fladd@a+1)^0,c
  8786   001F04  0E8B               	movlw	139
  8787   001F06  6E08               	movwf	(___fladd@a+2)^0,c
  8788   001F08  0E3E               	movlw	62
  8789   001F0A  6E09               	movwf	(___fladd@a+3)^0,c
  8790   001F0C  C190  F016         	movff	powf@s2,___flmul@a
  8791   001F10  C191  F017         	movff	powf@s2+1,___flmul@a+1
  8792   001F14  C192  F018         	movff	powf@s2+2,___flmul@a+2
  8793   001F18  C193  F019         	movff	powf@s2+3,___flmul@a+3
  8794   001F1C  C148  F012         	movff	_powf$3107,___flmul@b
  8795   001F20  C149  F013         	movff	_powf$3107+1,___flmul@b+1
  8796   001F24  C14A  F014         	movff	_powf$3107+2,___flmul@b+2
  8797   001F28  C14B  F015         	movff	_powf$3107+3,___flmul@b+3
  8798   001F2C  EC22  F026         	call	___flmul	;wreg free
  8799   001F30  C012  F002         	movff	?___flmul,___fladd@b
  8800   001F34  C013  F003         	movff	?___flmul+1,___fladd@b+1
  8801   001F38  C014  F004         	movff	?___flmul+2,___fladd@b+2
  8802   001F3C  C015  F005         	movff	?___flmul+3,___fladd@b+3
  8803   001F40  ECC2  F023         	call	___fladd	;wreg free
  8804   001F44  C002  F15C         	movff	?___fladd,_powf$3108
  8805   001F48  C003  F15D         	movff	?___fladd+1,_powf$3108+1
  8806   001F4C  C004  F15E         	movff	?___fladd+2,_powf$3108+2
  8807   001F50  C005  F15F         	movff	?___fladd+3,_powf$3108+3
  8808   001F54  0EAB               	movlw	171
  8809   001F56  6E06               	movwf	___fladd@a^0,c
  8810   001F58  0EAA               	movlw	170
  8811   001F5A  6E07               	movwf	(___fladd@a+1)^0,c
  8812   001F5C  0EAA               	movlw	170
  8813   001F5E  6E08               	movwf	(___fladd@a+2)^0,c
  8814   001F60  0E3E               	movlw	62
  8815   001F62  6E09               	movwf	(___fladd@a+3)^0,c
  8816   001F64  C190  F016         	movff	powf@s2,___flmul@a
  8817   001F68  C191  F017         	movff	powf@s2+1,___flmul@a+1
  8818   001F6C  C192  F018         	movff	powf@s2+2,___flmul@a+2
  8819   001F70  C193  F019         	movff	powf@s2+3,___flmul@a+3
  8820   001F74  C15C  F012         	movff	_powf$3108,___flmul@b
  8821   001F78  C15D  F013         	movff	_powf$3108+1,___flmul@b+1
  8822   001F7C  C15E  F014         	movff	_powf$3108+2,___flmul@b+2
  8823   001F80  C15F  F015         	movff	_powf$3108+3,___flmul@b+3
  8824   001F84  EC22  F026         	call	___flmul	;wreg free
  8825   001F88  C012  F002         	movff	?___flmul,___fladd@b
  8826   001F8C  C013  F003         	movff	?___flmul+1,___fladd@b+1
  8827   001F90  C014  F004         	movff	?___flmul+2,___fladd@b+2
  8828   001F94  C015  F005         	movff	?___flmul+3,___fladd@b+3
  8829   001F98  ECC2  F023         	call	___fladd	;wreg free
  8830   001F9C  C002  F14C         	movff	?___fladd,_powf$3109
  8831   001FA0  C003  F14D         	movff	?___fladd+1,_powf$3109+1
  8832   001FA4  C004  F14E         	movff	?___fladd+2,_powf$3109+2
  8833   001FA8  C005  F14F         	movff	?___fladd+3,_powf$3109+3
  8834   001FAC  0EB7               	movlw	183
  8835   001FAE  6E06               	movwf	___fladd@a^0,c
  8836   001FB0  0E6D               	movlw	109
  8837   001FB2  6E07               	movwf	(___fladd@a+1)^0,c
  8838   001FB4  0EDB               	movlw	219
  8839   001FB6  6E08               	movwf	(___fladd@a+2)^0,c
  8840   001FB8  0E3E               	movlw	62
  8841   001FBA  6E09               	movwf	(___fladd@a+3)^0,c
  8842   001FBC  C190  F016         	movff	powf@s2,___flmul@a
  8843   001FC0  C191  F017         	movff	powf@s2+1,___flmul@a+1
  8844   001FC4  C192  F018         	movff	powf@s2+2,___flmul@a+2
  8845   001FC8  C193  F019         	movff	powf@s2+3,___flmul@a+3
  8846   001FCC  C14C  F012         	movff	_powf$3109,___flmul@b
  8847   001FD0  C14D  F013         	movff	_powf$3109+1,___flmul@b+1
  8848   001FD4  C14E  F014         	movff	_powf$3109+2,___flmul@b+2
  8849   001FD8  C14F  F015         	movff	_powf$3109+3,___flmul@b+3
  8850   001FDC  EC22  F026         	call	___flmul	;wreg free
  8851   001FE0  C012  F002         	movff	?___flmul,___fladd@b
  8852   001FE4  C013  F003         	movff	?___flmul+1,___fladd@b+1
  8853   001FE8  C014  F004         	movff	?___flmul+2,___fladd@b+2
  8854   001FEC  C015  F005         	movff	?___flmul+3,___fladd@b+3
  8855   001FF0  ECC2  F023         	call	___fladd	;wreg free
  8856   001FF4  C002  F138         	movff	?___fladd,_powf$3111
  8857   001FF8  C003  F139         	movff	?___fladd+1,_powf$3111+1
  8858   001FFC  C004  F13A         	movff	?___fladd+2,_powf$3111+2
  8859   002000  C005  F13B         	movff	?___fladd+3,_powf$3111+3
  8860   002004  0E9A               	movlw	154
  8861   002006  6E06               	movwf	___fladd@a^0,c
  8862   002008  0E99               	movlw	153
  8863   00200A  6E07               	movwf	(___fladd@a+1)^0,c
  8864   00200C  0E19               	movlw	25
  8865   00200E  6E08               	movwf	(___fladd@a+2)^0,c
  8866   002010  0E3F               	movlw	63
  8867   002012  6E09               	movwf	(___fladd@a+3)^0,c
  8868   002014  C190  F016         	movff	powf@s2,___flmul@a
  8869   002018  C191  F017         	movff	powf@s2+1,___flmul@a+1
  8870   00201C  C192  F018         	movff	powf@s2+2,___flmul@a+2
  8871   002020  C193  F019         	movff	powf@s2+3,___flmul@a+3
  8872   002024  C138  F012         	movff	_powf$3111,___flmul@b
  8873   002028  C139  F013         	movff	_powf$3111+1,___flmul@b+1
  8874   00202C  C13A  F014         	movff	_powf$3111+2,___flmul@b+2
  8875   002030  C13B  F015         	movff	_powf$3111+3,___flmul@b+3
  8876   002034  EC22  F026         	call	___flmul	;wreg free
  8877   002038  C012  F002         	movff	?___flmul,___fladd@b
  8878   00203C  C013  F003         	movff	?___flmul+1,___fladd@b+1
  8879   002040  C014  F004         	movff	?___flmul+2,___fladd@b+2
  8880   002044  C015  F005         	movff	?___flmul+3,___fladd@b+3
  8881   002048  ECC2  F023         	call	___fladd	;wreg free
  8882   00204C  C002  F100         	movff	?___fladd,_powf$3112
  8883   002050  C003  F101         	movff	?___fladd+1,_powf$3112+1
  8884   002054  C004  F102         	movff	?___fladd+2,_powf$3112+2
  8885   002058  C005  F103         	movff	?___fladd+3,_powf$3112+3
  8886   00205C  C190  F016         	movff	powf@s2,___flmul@a
  8887   002060  C191  F017         	movff	powf@s2+1,___flmul@a+1
  8888   002064  C192  F018         	movff	powf@s2+2,___flmul@a+2
  8889   002068  C193  F019         	movff	powf@s2+3,___flmul@a+3
  8890   00206C  C190  F012         	movff	powf@s2,___flmul@b
  8891   002070  C191  F013         	movff	powf@s2+1,___flmul@b+1
  8892   002074  C192  F014         	movff	powf@s2+2,___flmul@b+2
  8893   002078  C193  F015         	movff	powf@s2+3,___flmul@b+3
  8894   00207C  EC22  F026         	call	___flmul	;wreg free
  8895   002080  C012  F104         	movff	?___flmul,_powf$3113
  8896   002084  C013  F105         	movff	?___flmul+1,_powf$3113+1
  8897   002088  C014  F106         	movff	?___flmul+2,_powf$3113+2
  8898   00208C  C015  F107         	movff	?___flmul+3,_powf$3113+3
  8899   002090  C100  F012         	movff	_powf$3112,___flmul@b
  8900   002094  C101  F013         	movff	_powf$3112+1,___flmul@b+1
  8901   002098  C102  F014         	movff	_powf$3112+2,___flmul@b+2
  8902   00209C  C103  F015         	movff	_powf$3112+3,___flmul@b+3
  8903   0020A0  C104  F016         	movff	_powf$3113,___flmul@a
  8904   0020A4  C105  F017         	movff	_powf$3113+1,___flmul@a+1
  8905   0020A8  C106  F018         	movff	_powf$3113+2,___flmul@a+2
  8906   0020AC  C107  F019         	movff	_powf$3113+3,___flmul@a+3
  8907   0020B0  EC22  F026         	call	___flmul	;wreg free
  8908   0020B4  C012  F150         	movff	?___flmul,powf@r
  8909   0020B8  C013  F151         	movff	?___flmul+1,powf@r+1
  8910   0020BC  C014  F152         	movff	?___flmul+2,powf@r+2
  8911   0020C0  C015  F153         	movff	?___flmul+3,powf@r+3
  8912   0020C4  C130  F016         	movff	powf@s_l,___flmul@a
  8913   0020C8  C131  F017         	movff	powf@s_l+1,___flmul@a+1
  8914   0020CC  C132  F018         	movff	powf@s_l+2,___flmul@a+2
  8915   0020D0  C133  F019         	movff	powf@s_l+3,___flmul@a+3
  8916   0020D4  C158  F006         	movff	powf@s,___fladd@a
  8917   0020D8  C159  F007         	movff	powf@s+1,___fladd@a+1
  8918   0020DC  C15A  F008         	movff	powf@s+2,___fladd@a+2
  8919   0020E0  C15B  F009         	movff	powf@s+3,___fladd@a+3
  8920   0020E4  C174  F002         	movff	powf@s_h,___fladd@b
  8921   0020E8  C175  F003         	movff	powf@s_h+1,___fladd@b+1
  8922   0020EC  C176  F004         	movff	powf@s_h+2,___fladd@b+2
  8923   0020F0  C177  F005         	movff	powf@s_h+3,___fladd@b+3
  8924   0020F4  ECC2  F023         	call	___fladd	;wreg free
  8925   0020F8  C002  F012         	movff	?___fladd,___flmul@b
  8926   0020FC  C003  F013         	movff	?___fladd+1,___flmul@b+1
  8927   002100  C004  F014         	movff	?___fladd+2,___flmul@b+2
  8928   002104  C005  F015         	movff	?___fladd+3,___flmul@b+3
  8929   002108  EC22  F026         	call	___flmul	;wreg free
  8930   00210C  C012  F160         	movff	?___flmul,_powf$3114
  8931   002110  C013  F161         	movff	?___flmul+1,_powf$3114+1
  8932   002114  C014  F162         	movff	?___flmul+2,_powf$3114+2
  8933   002118  C015  F163         	movff	?___flmul+3,_powf$3114+3
  8934   00211C  C150  F002         	movff	powf@r,___fladd@b
  8935   002120  C151  F003         	movff	powf@r+1,___fladd@b+1
  8936   002124  C152  F004         	movff	powf@r+2,___fladd@b+2
  8937   002128  C153  F005         	movff	powf@r+3,___fladd@b+3
  8938   00212C  C160  F006         	movff	_powf$3114,___fladd@a
  8939   002130  C161  F007         	movff	_powf$3114+1,___fladd@a+1
  8940   002134  C162  F008         	movff	_powf$3114+2,___fladd@a+2
  8941   002138  C163  F009         	movff	_powf$3114+3,___fladd@a+3
  8942   00213C  ECC2  F023         	call	___fladd	;wreg free
  8943   002140  C002  F150         	movff	?___fladd,powf@r
  8944   002144  C003  F151         	movff	?___fladd+1,powf@r+1
  8945   002148  C004  F152         	movff	?___fladd+2,powf@r+2
  8946   00214C  C005  F153         	movff	?___fladd+3,powf@r+3
  8947   002150  C174  F012         	movff	powf@s_h,___flmul@b
  8948   002154  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  8949   002158  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  8950   00215C  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  8951   002160  C174  F016         	movff	powf@s_h,___flmul@a
  8952   002164  C175  F017         	movff	powf@s_h+1,___flmul@a+1
  8953   002168  C176  F018         	movff	powf@s_h+2,___flmul@a+2
  8954   00216C  C177  F019         	movff	powf@s_h+3,___flmul@a+3
  8955   002170  EC22  F026         	call	___flmul	;wreg free
  8956   002174  C012  F190         	movff	?___flmul,powf@s2
  8957   002178  C013  F191         	movff	?___flmul+1,powf@s2+1
  8958   00217C  C014  F192         	movff	?___flmul+2,powf@s2+2
  8959   002180  C015  F193         	movff	?___flmul+3,powf@s2+3
  8960   002184  0E00               	movlw	0
  8961   002186  6E06               	movwf	___fladd@a^0,c
  8962   002188  0E00               	movlw	0
  8963   00218A  6E07               	movwf	(___fladd@a+1)^0,c
  8964   00218C  0E40               	movlw	64
  8965   00218E  6E08               	movwf	(___fladd@a+2)^0,c
  8966   002190  0E40               	movlw	64
  8967   002192  6E09               	movwf	(___fladd@a+3)^0,c
  8968   002194  C190  F002         	movff	powf@s2,___fladd@b
  8969   002198  C191  F003         	movff	powf@s2+1,___fladd@b+1
  8970   00219C  C192  F004         	movff	powf@s2+2,___fladd@b+2
  8971   0021A0  C193  F005         	movff	powf@s2+3,___fladd@b+3
  8972   0021A4  ECC2  F023         	call	___fladd	;wreg free
  8973   0021A8  C002  F160         	movff	?___fladd,_powf$3114
  8974   0021AC  C003  F161         	movff	?___fladd+1,_powf$3114+1
  8975   0021B0  C004  F162         	movff	?___fladd+2,_powf$3114+2
  8976   0021B4  C005  F163         	movff	?___fladd+3,_powf$3114+3
  8977   0021B8  C160  F002         	movff	_powf$3114,___fladd@b
  8978   0021BC  C161  F003         	movff	_powf$3114+1,___fladd@b+1
  8979   0021C0  C162  F004         	movff	_powf$3114+2,___fladd@b+2
  8980   0021C4  C163  F005         	movff	_powf$3114+3,___fladd@b+3
  8981   0021C8  C150  F006         	movff	powf@r,___fladd@a
  8982   0021CC  C151  F007         	movff	powf@r+1,___fladd@a+1
  8983   0021D0  C152  F008         	movff	powf@r+2,___fladd@a+2
  8984   0021D4  C153  F009         	movff	powf@r+3,___fladd@a+3
  8985   0021D8  ECC2  F023         	call	___fladd	;wreg free
  8986   0021DC  C002  F170         	movff	?___fladd,powf@t_h
  8987   0021E0  C003  F171         	movff	?___fladd+1,powf@t_h+1
  8988   0021E4  C004  F172         	movff	?___fladd+2,powf@t_h+2
  8989   0021E8  C005  F173         	movff	?___fladd+3,powf@t_h+3
  8990   0021EC  C170  F198         	movff	powf@t_h,powf@is
  8991   0021F0  C171  F199         	movff	powf@t_h+1,powf@is+1
  8992   0021F4  C172  F19A         	movff	powf@t_h+2,powf@is+2
  8993   0021F8  C173  F19B         	movff	powf@t_h+3,powf@is+3
  8994   0021FC  0E00               	movlw	0
  8995   0021FE  0101               	movlb	1	; () banked
  8996   002200  1598               	andwf	powf@is& (0+255),w,b
  8997   002202  6F70               	movwf	powf@t_h& (0+255),b
  8998   002204  0EF0               	movlw	240
  8999   002206  1599               	andwf	(powf@is+1)& (0+255),w,b
  9000   002208  6F71               	movwf	(powf@t_h+1)& (0+255),b
  9001   00220A  0EFF               	movlw	255
  9002   00220C  159A               	andwf	(powf@is+2)& (0+255),w,b
  9003   00220E  6F72               	movwf	(powf@t_h+2)& (0+255),b
  9004   002210  0EFF               	movlw	255
  9005   002212  159B               	andwf	(powf@is+3)& (0+255),w,b
  9006   002214  6F73               	movwf	(powf@t_h+3)& (0+255),b
  9007   002216                     
  9008                           ; BSR set to: 1
  9009   002216  0E00               	movlw	0
  9010   002218  6E06               	movwf	___fladd@a^0,c
  9011   00221A  0E00               	movlw	0
  9012   00221C  6E07               	movwf	(___fladd@a+1)^0,c
  9013   00221E  0E40               	movlw	64
  9014   002220  6E08               	movwf	(___fladd@a+2)^0,c
  9015   002222  0EC0               	movlw	192
  9016   002224  6E09               	movwf	(___fladd@a+3)^0,c
  9017   002226  C170  F002         	movff	powf@t_h,___fladd@b
  9018   00222A  C171  F003         	movff	powf@t_h+1,___fladd@b+1
  9019   00222E  C172  F004         	movff	powf@t_h+2,___fladd@b+2
  9020   002232  C173  F005         	movff	powf@t_h+3,___fladd@b+3
  9021   002236  ECC2  F023         	call	___fladd	;wreg free
  9022   00223A  C002  F13C         	movff	?___fladd,_powf$3115
  9023   00223E  C003  F13D         	movff	?___fladd+1,_powf$3115+1
  9024   002242  C004  F13E         	movff	?___fladd+2,_powf$3115+2
  9025   002246  C005  F13F         	movff	?___fladd+3,_powf$3115+3
  9026   00224A  C190  F048         	movff	powf@s2,___flsub@a
  9027   00224E  C191  F049         	movff	powf@s2+1,___flsub@a+1
  9028   002252  C192  F04A         	movff	powf@s2+2,___flsub@a+2
  9029   002256  C193  F04B         	movff	powf@s2+3,___flsub@a+3
  9030   00225A  C13C  F044         	movff	_powf$3115,___flsub@b
  9031   00225E  C13D  F045         	movff	_powf$3115+1,___flsub@b+1
  9032   002262  C13E  F046         	movff	_powf$3115+2,___flsub@b+2
  9033   002266  C13F  F047         	movff	_powf$3115+3,___flsub@b+3
  9034   00226A  EC91  F037         	call	___flsub	;wreg free
  9035   00226E  C044  F140         	movff	?___flsub,_powf$3116
  9036   002272  C045  F141         	movff	?___flsub+1,_powf$3116+1
  9037   002276  C046  F142         	movff	?___flsub+2,_powf$3116+2
  9038   00227A  C047  F143         	movff	?___flsub+3,_powf$3116+3
  9039   00227E  C150  F044         	movff	powf@r,___flsub@b
  9040   002282  C151  F045         	movff	powf@r+1,___flsub@b+1
  9041   002286  C152  F046         	movff	powf@r+2,___flsub@b+2
  9042   00228A  C153  F047         	movff	powf@r+3,___flsub@b+3
  9043   00228E  C140  F048         	movff	_powf$3116,___flsub@a
  9044   002292  C141  F049         	movff	_powf$3116+1,___flsub@a+1
  9045   002296  C142  F04A         	movff	_powf$3116+2,___flsub@a+2
  9046   00229A  C143  F04B         	movff	_powf$3116+3,___flsub@a+3
  9047   00229E  EC91  F037         	call	___flsub	;wreg free
  9048   0022A2  C044  F134         	movff	?___flsub,powf@t_l
  9049   0022A6  C045  F135         	movff	?___flsub+1,powf@t_l+1
  9050   0022AA  C046  F136         	movff	?___flsub+2,powf@t_l+2
  9051   0022AE  C047  F137         	movff	?___flsub+3,powf@t_l+3
  9052   0022B2  C174  F012         	movff	powf@s_h,___flmul@b
  9053   0022B6  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9054   0022BA  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9055   0022BE  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9056   0022C2  C170  F016         	movff	powf@t_h,___flmul@a
  9057   0022C6  C171  F017         	movff	powf@t_h+1,___flmul@a+1
  9058   0022CA  C172  F018         	movff	powf@t_h+2,___flmul@a+2
  9059   0022CE  C173  F019         	movff	powf@t_h+3,___flmul@a+3
  9060   0022D2  EC22  F026         	call	___flmul	;wreg free
  9061   0022D6  C012  F17C         	movff	?___flmul,powf@u
  9062   0022DA  C013  F17D         	movff	?___flmul+1,powf@u+1
  9063   0022DE  C014  F17E         	movff	?___flmul+2,powf@u+2
  9064   0022E2  C015  F17F         	movff	?___flmul+3,powf@u+3
  9065   0022E6  C130  F016         	movff	powf@s_l,___flmul@a
  9066   0022EA  C131  F017         	movff	powf@s_l+1,___flmul@a+1
  9067   0022EE  C132  F018         	movff	powf@s_l+2,___flmul@a+2
  9068   0022F2  C133  F019         	movff	powf@s_l+3,___flmul@a+3
  9069   0022F6  C170  F012         	movff	powf@t_h,___flmul@b
  9070   0022FA  C171  F013         	movff	powf@t_h+1,___flmul@b+1
  9071   0022FE  C172  F014         	movff	powf@t_h+2,___flmul@b+2
  9072   002302  C173  F015         	movff	powf@t_h+3,___flmul@b+3
  9073   002306  EC22  F026         	call	___flmul	;wreg free
  9074   00230A  C012  F002         	movff	?___flmul,___fladd@b
  9075   00230E  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9076   002312  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9077   002316  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9078   00231A  C158  F016         	movff	powf@s,___flmul@a
  9079   00231E  C159  F017         	movff	powf@s+1,___flmul@a+1
  9080   002322  C15A  F018         	movff	powf@s+2,___flmul@a+2
  9081   002326  C15B  F019         	movff	powf@s+3,___flmul@a+3
  9082   00232A  C134  F012         	movff	powf@t_l,___flmul@b
  9083   00232E  C135  F013         	movff	powf@t_l+1,___flmul@b+1
  9084   002332  C136  F014         	movff	powf@t_l+2,___flmul@b+2
  9085   002336  C137  F015         	movff	powf@t_l+3,___flmul@b+3
  9086   00233A  EC22  F026         	call	___flmul	;wreg free
  9087   00233E  C012  F006         	movff	?___flmul,___fladd@a
  9088   002342  C013  F007         	movff	?___flmul+1,___fladd@a+1
  9089   002346  C014  F008         	movff	?___flmul+2,___fladd@a+2
  9090   00234A  C015  F009         	movff	?___flmul+3,___fladd@a+3
  9091   00234E  ECC2  F023         	call	___fladd	;wreg free
  9092   002352  C002  F180         	movff	?___fladd,powf@v
  9093   002356  C003  F181         	movff	?___fladd+1,powf@v+1
  9094   00235A  C004  F182         	movff	?___fladd+2,powf@v+2
  9095   00235E  C005  F183         	movff	?___fladd+3,powf@v+3
  9096   002362  C17C  F002         	movff	powf@u,___fladd@b
  9097   002366  C17D  F003         	movff	powf@u+1,___fladd@b+1
  9098   00236A  C17E  F004         	movff	powf@u+2,___fladd@b+2
  9099   00236E  C17F  F005         	movff	powf@u+3,___fladd@b+3
  9100   002372  C180  F006         	movff	powf@v,___fladd@a
  9101   002376  C181  F007         	movff	powf@v+1,___fladd@a+1
  9102   00237A  C182  F008         	movff	powf@v+2,___fladd@a+2
  9103   00237E  C183  F009         	movff	powf@v+3,___fladd@a+3
  9104   002382  ECC2  F023         	call	___fladd	;wreg free
  9105   002386  C002  F1A0         	movff	?___fladd,powf@p_h
  9106   00238A  C003  F1A1         	movff	?___fladd+1,powf@p_h+1
  9107   00238E  C004  F1A2         	movff	?___fladd+2,powf@p_h+2
  9108   002392  C005  F1A3         	movff	?___fladd+3,powf@p_h+3
  9109   002396  C1A0  F198         	movff	powf@p_h,powf@is
  9110   00239A  C1A1  F199         	movff	powf@p_h+1,powf@is+1
  9111   00239E  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
  9112   0023A2  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
  9113   0023A6  0E00               	movlw	0
  9114   0023A8  0101               	movlb	1	; () banked
  9115   0023AA  1598               	andwf	powf@is& (0+255),w,b
  9116   0023AC  6FA0               	movwf	powf@p_h& (0+255),b
  9117   0023AE  0EF0               	movlw	240
  9118   0023B0  1599               	andwf	(powf@is+1)& (0+255),w,b
  9119   0023B2  6FA1               	movwf	(powf@p_h+1)& (0+255),b
  9120   0023B4  0EFF               	movlw	255
  9121   0023B6  159A               	andwf	(powf@is+2)& (0+255),w,b
  9122   0023B8  6FA2               	movwf	(powf@p_h+2)& (0+255),b
  9123   0023BA  0EFF               	movlw	255
  9124   0023BC  159B               	andwf	(powf@is+3)& (0+255),w,b
  9125   0023BE  6FA3               	movwf	(powf@p_h+3)& (0+255),b
  9126   0023C0                     
  9127                           ; BSR set to: 1
  9128   0023C0  C17C  F048         	movff	powf@u,___flsub@a
  9129   0023C4  C17D  F049         	movff	powf@u+1,___flsub@a+1
  9130   0023C8  C17E  F04A         	movff	powf@u+2,___flsub@a+2
  9131   0023CC  C17F  F04B         	movff	powf@u+3,___flsub@a+3
  9132   0023D0  C1A0  F044         	movff	powf@p_h,___flsub@b
  9133   0023D4  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
  9134   0023D8  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
  9135   0023DC  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
  9136   0023E0  EC91  F037         	call	___flsub	;wreg free
  9137   0023E4  C044  F19C         	movff	?___flsub,_powf$3110
  9138   0023E8  C045  F19D         	movff	?___flsub+1,_powf$3110+1
  9139   0023EC  C046  F19E         	movff	?___flsub+2,_powf$3110+2
  9140   0023F0  C047  F19F         	movff	?___flsub+3,_powf$3110+3
  9141   0023F4  C180  F044         	movff	powf@v,___flsub@b
  9142   0023F8  C181  F045         	movff	powf@v+1,___flsub@b+1
  9143   0023FC  C182  F046         	movff	powf@v+2,___flsub@b+2
  9144   002400  C183  F047         	movff	powf@v+3,___flsub@b+3
  9145   002404  C19C  F048         	movff	_powf$3110,___flsub@a
  9146   002408  C19D  F049         	movff	_powf$3110+1,___flsub@a+1
  9147   00240C  C19E  F04A         	movff	_powf$3110+2,___flsub@a+2
  9148   002410  C19F  F04B         	movff	_powf$3110+3,___flsub@a+3
  9149   002414  EC91  F037         	call	___flsub	;wreg free
  9150   002418  C044  F16C         	movff	?___flsub,powf@p_l
  9151   00241C  C045  F16D         	movff	?___flsub+1,powf@p_l+1
  9152   002420  C046  F16E         	movff	?___flsub+2,powf@p_l+2
  9153   002424  C047  F16F         	movff	?___flsub+3,powf@p_l+3
  9154   002428  C1A0  F012         	movff	powf@p_h,___flmul@b
  9155   00242C  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
  9156   002430  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
  9157   002434  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
  9158   002438  0E00               	movlw	0
  9159   00243A  6E16               	movwf	___flmul@a^0,c
  9160   00243C  0E40               	movlw	64
  9161   00243E  6E17               	movwf	(___flmul@a+1)^0,c
  9162   002440  0E76               	movlw	118
  9163   002442  6E18               	movwf	(___flmul@a+2)^0,c
  9164   002444  0E3F               	movlw	63
  9165   002446  6E19               	movwf	(___flmul@a+3)^0,c
  9166   002448  EC22  F026         	call	___flmul	;wreg free
  9167   00244C  C012  F120         	movff	?___flmul,powf@z_h
  9168   002450  C013  F121         	movff	?___flmul+1,powf@z_h+1
  9169   002454  C014  F122         	movff	?___flmul+2,powf@z_h+2
  9170   002458  C015  F123         	movff	?___flmul+3,powf@z_h+3
  9171   00245C  0E4F               	movlw	79
  9172   00245E  6E16               	movwf	___flmul@a^0,c
  9173   002460  0E38               	movlw	56
  9174   002462  6E17               	movwf	(___flmul@a+1)^0,c
  9175   002464  0E76               	movlw	118
  9176   002466  6E18               	movwf	(___flmul@a+2)^0,c
  9177   002468  0E3F               	movlw	63
  9178   00246A  6E19               	movwf	(___flmul@a+3)^0,c
  9179   00246C  C16C  F012         	movff	powf@p_l,___flmul@b
  9180   002470  C16D  F013         	movff	powf@p_l+1,___flmul@b+1
  9181   002474  C16E  F014         	movff	powf@p_l+2,___flmul@b+2
  9182   002478  C16F  F015         	movff	powf@p_l+3,___flmul@b+3
  9183   00247C  EC22  F026         	call	___flmul	;wreg free
  9184   002480  C012  F006         	movff	?___flmul,___fladd@a
  9185   002484  C013  F007         	movff	?___flmul+1,___fladd@a+1
  9186   002488  C014  F008         	movff	?___flmul+2,___fladd@a+2
  9187   00248C  C015  F009         	movff	?___flmul+3,___fladd@a+3
  9188   002490  0EC6               	movlw	198
  9189   002492  6E16               	movwf	___flmul@a^0,c
  9190   002494  0E23               	movlw	35
  9191   002496  6E17               	movwf	(___flmul@a+1)^0,c
  9192   002498  0EF6               	movlw	246
  9193   00249A  6E18               	movwf	(___flmul@a+2)^0,c
  9194   00249C  0EB8               	movlw	184
  9195   00249E  6E19               	movwf	(___flmul@a+3)^0,c
  9196   0024A0  C1A0  F012         	movff	powf@p_h,___flmul@b
  9197   0024A4  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
  9198   0024A8  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
  9199   0024AC  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
  9200   0024B0  EC22  F026         	call	___flmul	;wreg free
  9201   0024B4  C012  F002         	movff	?___flmul,___fladd@b
  9202   0024B8  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9203   0024BC  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9204   0024C0  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9205   0024C4  ECC2  F023         	call	___fladd	;wreg free
  9206   0024C8  C002  F160         	movff	?___fladd,_powf$3114
  9207   0024CC  C003  F161         	movff	?___fladd+1,_powf$3114+1
  9208   0024D0  C004  F162         	movff	?___fladd+2,_powf$3114+2
  9209   0024D4  C005  F163         	movff	?___fladd+3,_powf$3114+3
  9210   0024D8  C160  F002         	movff	_powf$3114,___fladd@b
  9211   0024DC  C161  F003         	movff	_powf$3114+1,___fladd@b+1
  9212   0024E0  C162  F004         	movff	_powf$3114+2,___fladd@b+2
  9213   0024E4  C163  F005         	movff	_powf$3114+3,___fladd@b+3
  9214   0024E8  0101               	movlb	1	; () banked
  9215   0024EA  51A4               	movf	powf@k& (0+255),w,b
  9216   0024EC  0D04               	mullw	4
  9217   0024EE  50F3               	movf	243,w,c
  9218   0024F0  0F01               	addlw	low _dp_l
  9219   0024F2  0100               	movlb	0	; () banked
  9220   0024F4  6FE0               	movwf	??_powf& (0+255),b
  9221   0024F6  C0E0  FFF6         	movff	??_powf,tblptrl
  9222   0024FA                     	if	0	;There is only one active tblptr byte
  9223   0024FA                     	endif
  9224   0024FA                     	if	0	;tblptru may be non-zero
  9225   0024FA                     	endif
  9226   0024FA                     	if	0	;tblptru may be non-zero
  9227   0024FA                     	endif
  9228   0024FA  0009               	tblrd		*+
  9229   0024FC  CFF5 F006          	movff	tablat,___fladd@a
  9230   002500  0009               	tblrd		*+
  9231   002502  CFF5 F007          	movff	tablat,___fladd@a+1
  9232   002506  0009               	tblrd		*+
  9233   002508  CFF5 F008          	movff	tablat,___fladd@a+2
  9234   00250C  000A               	tblrd		*-
  9235   00250E  CFF5 F009          	movff	tablat,___fladd@a+3
  9236   002512  ECC2  F023         	call	___fladd	;wreg free
  9237   002516  C002  F124         	movff	?___fladd,powf@z_l
  9238   00251A  C003  F125         	movff	?___fladd+1,powf@z_l+1
  9239   00251E  C004  F126         	movff	?___fladd+2,powf@z_l+2
  9240   002522  C005  F127         	movff	?___fladd+3,powf@z_l+3
  9241   002526  C188  F00D         	movff	powf@n,___xxtofl@val
  9242   00252A  C189  F00E         	movff	powf@n+1,___xxtofl@val+1
  9243   00252E  C18A  F00F         	movff	powf@n+2,___xxtofl@val+2
  9244   002532  C18B  F010         	movff	powf@n+3,___xxtofl@val+3
  9245   002536  0E01               	movlw	1
  9246   002538  EC73  F02E         	call	___xxtofl
  9247   00253C  C00D  F1B0         	movff	?___xxtofl,powf@t
  9248   002540  C00E  F1B1         	movff	?___xxtofl+1,powf@t+1
  9249   002544  C00F  F1B2         	movff	?___xxtofl+2,powf@t+2
  9250   002548  C010  F1B3         	movff	?___xxtofl+3,powf@t+3
  9251   00254C  C124  F006         	movff	powf@z_l,___fladd@a
  9252   002550  C125  F007         	movff	powf@z_l+1,___fladd@a+1
  9253   002554  C126  F008         	movff	powf@z_l+2,___fladd@a+2
  9254   002558  C127  F009         	movff	powf@z_l+3,___fladd@a+3
  9255   00255C  C120  F002         	movff	powf@z_h,___fladd@b
  9256   002560  C121  F003         	movff	powf@z_h+1,___fladd@b+1
  9257   002564  C122  F004         	movff	powf@z_h+2,___fladd@b+2
  9258   002568  C123  F005         	movff	powf@z_h+3,___fladd@b+3
  9259   00256C  ECC2  F023         	call	___fladd	;wreg free
  9260   002570  C002  F160         	movff	?___fladd,_powf$3114
  9261   002574  C003  F161         	movff	?___fladd+1,_powf$3114+1
  9262   002578  C004  F162         	movff	?___fladd+2,_powf$3114+2
  9263   00257C  C005  F163         	movff	?___fladd+3,_powf$3114+3
  9264   002580  0101               	movlb	1	; () banked
  9265   002582  51A4               	movf	powf@k& (0+255),w,b
  9266   002584  0D04               	mullw	4
  9267   002586  50F3               	movf	243,w,c
  9268   002588  0F09               	addlw	low _dp_h
  9269   00258A  0100               	movlb	0	; () banked
  9270   00258C  6FE0               	movwf	??_powf& (0+255),b
  9271   00258E  C0E0  FFF6         	movff	??_powf,tblptrl
  9272   002592                     	if	0	;There is only one active tblptr byte
  9273   002592                     	endif
  9274   002592                     	if	0	;tblptru may be non-zero
  9275   002592                     	endif
  9276   002592                     	if	0	;tblptru may be non-zero
  9277   002592                     	endif
  9278   002592  0009               	tblrd		*+
  9279   002594  CFF5 F006          	movff	tablat,___fladd@a
  9280   002598  0009               	tblrd		*+
  9281   00259A  CFF5 F007          	movff	tablat,___fladd@a+1
  9282   00259E  0009               	tblrd		*+
  9283   0025A0  CFF5 F008          	movff	tablat,___fladd@a+2
  9284   0025A4  000A               	tblrd		*-
  9285   0025A6  CFF5 F009          	movff	tablat,___fladd@a+3
  9286   0025AA  C160  F002         	movff	_powf$3114,___fladd@b
  9287   0025AE  C161  F003         	movff	_powf$3114+1,___fladd@b+1
  9288   0025B2  C162  F004         	movff	_powf$3114+2,___fladd@b+2
  9289   0025B6  C163  F005         	movff	_powf$3114+3,___fladd@b+3
  9290   0025BA  ECC2  F023         	call	___fladd	;wreg free
  9291   0025BE  C002  F108         	movff	?___fladd,_powf$3117
  9292   0025C2  C003  F109         	movff	?___fladd+1,_powf$3117+1
  9293   0025C6  C004  F10A         	movff	?___fladd+2,_powf$3117+2
  9294   0025CA  C005  F10B         	movff	?___fladd+3,_powf$3117+3
  9295   0025CE  C108  F002         	movff	_powf$3117,___fladd@b
  9296   0025D2  C109  F003         	movff	_powf$3117+1,___fladd@b+1
  9297   0025D6  C10A  F004         	movff	_powf$3117+2,___fladd@b+2
  9298   0025DA  C10B  F005         	movff	_powf$3117+3,___fladd@b+3
  9299   0025DE  C1B0  F006         	movff	powf@t,___fladd@a
  9300   0025E2  C1B1  F007         	movff	powf@t+1,___fladd@a+1
  9301   0025E6  C1B2  F008         	movff	powf@t+2,___fladd@a+2
  9302   0025EA  C1B3  F009         	movff	powf@t+3,___fladd@a+3
  9303   0025EE  ECC2  F023         	call	___fladd	;wreg free
  9304   0025F2  C002  F18C         	movff	?___fladd,powf@t1
  9305   0025F6  C003  F18D         	movff	?___fladd+1,powf@t1+1
  9306   0025FA  C004  F18E         	movff	?___fladd+2,powf@t1+2
  9307   0025FE  C005  F18F         	movff	?___fladd+3,powf@t1+3
  9308   002602  C18C  F198         	movff	powf@t1,powf@is
  9309   002606  C18D  F199         	movff	powf@t1+1,powf@is+1
  9310   00260A  C18E  F19A         	movff	powf@t1+2,powf@is+2
  9311   00260E  C18F  F19B         	movff	powf@t1+3,powf@is+3
  9312   002612  0E00               	movlw	0
  9313   002614  0101               	movlb	1	; () banked
  9314   002616  1598               	andwf	powf@is& (0+255),w,b
  9315   002618  6F8C               	movwf	powf@t1& (0+255),b
  9316   00261A  0EF0               	movlw	240
  9317   00261C  1599               	andwf	(powf@is+1)& (0+255),w,b
  9318   00261E  6F8D               	movwf	(powf@t1+1)& (0+255),b
  9319   002620  0EFF               	movlw	255
  9320   002622  159A               	andwf	(powf@is+2)& (0+255),w,b
  9321   002624  6F8E               	movwf	(powf@t1+2)& (0+255),b
  9322   002626  0EFF               	movlw	255
  9323   002628  159B               	andwf	(powf@is+3)& (0+255),w,b
  9324   00262A  6F8F               	movwf	(powf@t1+3)& (0+255),b
  9325   00262C                     
  9326                           ; BSR set to: 1
  9327   00262C  C1B0  F048         	movff	powf@t,___flsub@a
  9328   002630  C1B1  F049         	movff	powf@t+1,___flsub@a+1
  9329   002634  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
  9330   002638  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
  9331   00263C  C18C  F044         	movff	powf@t1,___flsub@b
  9332   002640  C18D  F045         	movff	powf@t1+1,___flsub@b+1
  9333   002644  C18E  F046         	movff	powf@t1+2,___flsub@b+2
  9334   002648  C18F  F047         	movff	powf@t1+3,___flsub@b+3
  9335   00264C  EC91  F037         	call	___flsub	;wreg free
  9336   002650  C044  F19C         	movff	?___flsub,_powf$3110
  9337   002654  C045  F19D         	movff	?___flsub+1,_powf$3110+1
  9338   002658  C046  F19E         	movff	?___flsub+2,_powf$3110+2
  9339   00265C  C047  F19F         	movff	?___flsub+3,_powf$3110+3
  9340   002660  0101               	movlb	1	; () banked
  9341   002662  51A4               	movf	powf@k& (0+255),w,b
  9342   002664  0D04               	mullw	4
  9343   002666  50F3               	movf	243,w,c
  9344   002668  0F09               	addlw	low _dp_h
  9345   00266A  0100               	movlb	0	; () banked
  9346   00266C  6FE0               	movwf	??_powf& (0+255),b
  9347   00266E  C0E0  FFF6         	movff	??_powf,tblptrl
  9348   002672                     	if	0	;There is only one active tblptr byte
  9349   002672                     	endif
  9350   002672                     	if	0	;tblptru may be non-zero
  9351   002672                     	endif
  9352   002672                     	if	0	;tblptru may be non-zero
  9353   002672                     	endif
  9354   002672  0009               	tblrd		*+
  9355   002674  CFF5 F048          	movff	tablat,___flsub@a
  9356   002678  0009               	tblrd		*+
  9357   00267A  CFF5 F049          	movff	tablat,___flsub@a+1
  9358   00267E  0009               	tblrd		*+
  9359   002680  CFF5 F04A          	movff	tablat,___flsub@a+2
  9360   002684  000A               	tblrd		*-
  9361   002686  CFF5 F04B          	movff	tablat,___flsub@a+3
  9362   00268A  C19C  F044         	movff	_powf$3110,___flsub@b
  9363   00268E  C19D  F045         	movff	_powf$3110+1,___flsub@b+1
  9364   002692  C19E  F046         	movff	_powf$3110+2,___flsub@b+2
  9365   002696  C19F  F047         	movff	_powf$3110+3,___flsub@b+3
  9366   00269A  EC91  F037         	call	___flsub	;wreg free
  9367   00269E  C044  F140         	movff	?___flsub,_powf$3116
  9368   0026A2  C045  F141         	movff	?___flsub+1,_powf$3116+1
  9369   0026A6  C046  F142         	movff	?___flsub+2,_powf$3116+2
  9370   0026AA  C047  F143         	movff	?___flsub+3,_powf$3116+3
  9371   0026AE  C120  F048         	movff	powf@z_h,___flsub@a
  9372   0026B2  C121  F049         	movff	powf@z_h+1,___flsub@a+1
  9373   0026B6  C122  F04A         	movff	powf@z_h+2,___flsub@a+2
  9374   0026BA  C123  F04B         	movff	powf@z_h+3,___flsub@a+3
  9375   0026BE  C140  F044         	movff	_powf$3116,___flsub@b
  9376   0026C2  C141  F045         	movff	_powf$3116+1,___flsub@b+1
  9377   0026C6  C142  F046         	movff	_powf$3116+2,___flsub@b+2
  9378   0026CA  C143  F047         	movff	_powf$3116+3,___flsub@b+3
  9379   0026CE  EC91  F037         	call	___flsub	;wreg free
  9380   0026D2  C044  F10C         	movff	?___flsub,_powf$3118
  9381   0026D6  C045  F10D         	movff	?___flsub+1,_powf$3118+1
  9382   0026DA  C046  F10E         	movff	?___flsub+2,_powf$3118+2
  9383   0026DE  C047  F10F         	movff	?___flsub+3,_powf$3118+3
  9384   0026E2  C124  F044         	movff	powf@z_l,___flsub@b
  9385   0026E6  C125  F045         	movff	powf@z_l+1,___flsub@b+1
  9386   0026EA  C126  F046         	movff	powf@z_l+2,___flsub@b+2
  9387   0026EE  C127  F047         	movff	powf@z_l+3,___flsub@b+3
  9388   0026F2  C10C  F048         	movff	_powf$3118,___flsub@a
  9389   0026F6  C10D  F049         	movff	_powf$3118+1,___flsub@a+1
  9390   0026FA  C10E  F04A         	movff	_powf$3118+2,___flsub@a+2
  9391   0026FE  C10F  F04B         	movff	_powf$3118+3,___flsub@a+3
  9392   002702  EC91  F037         	call	___flsub	;wreg free
  9393   002706  C044  F11C         	movff	?___flsub,powf@t2
  9394   00270A  C045  F11D         	movff	?___flsub+1,powf@t2+1
  9395   00270E  C046  F11E         	movff	?___flsub+2,powf@t2+2
  9396   002712  C047  F11F         	movff	?___flsub+3,powf@t2+3
  9397   002716                     l7394:
  9398   002716  C0DC  F198         	movff	powf@y,powf@is
  9399   00271A  C0DD  F199         	movff	powf@y+1,powf@is+1
  9400   00271E  C0DE  F19A         	movff	powf@y+2,powf@is+2
  9401   002722  C0DF  F19B         	movff	powf@y+3,powf@is+3
  9402   002726  0E00               	movlw	0
  9403   002728  0101               	movlb	1	; () banked
  9404   00272A  1598               	andwf	powf@is& (0+255),w,b
  9405   00272C  6F2C               	movwf	powf@y1& (0+255),b
  9406   00272E  0EF0               	movlw	240
  9407   002730  1599               	andwf	(powf@is+1)& (0+255),w,b
  9408   002732  6F2D               	movwf	(powf@y1+1)& (0+255),b
  9409   002734  0EFF               	movlw	255
  9410   002736  159A               	andwf	(powf@is+2)& (0+255),w,b
  9411   002738  6F2E               	movwf	(powf@y1+2)& (0+255),b
  9412   00273A  0EFF               	movlw	255
  9413   00273C  159B               	andwf	(powf@is+3)& (0+255),w,b
  9414   00273E  6F2F               	movwf	(powf@y1+3)& (0+255),b
  9415   002740                     
  9416                           ; BSR set to: 1
  9417   002740  C18C  F016         	movff	powf@t1,___flmul@a
  9418   002744  C18D  F017         	movff	powf@t1+1,___flmul@a+1
  9419   002748  C18E  F018         	movff	powf@t1+2,___flmul@a+2
  9420   00274C  C18F  F019         	movff	powf@t1+3,___flmul@a+3
  9421   002750  C12C  F048         	movff	powf@y1,___flsub@a
  9422   002754  C12D  F049         	movff	powf@y1+1,___flsub@a+1
  9423   002758  C12E  F04A         	movff	powf@y1+2,___flsub@a+2
  9424   00275C  C12F  F04B         	movff	powf@y1+3,___flsub@a+3
  9425   002760  C0DC  F044         	movff	powf@y,___flsub@b
  9426   002764  C0DD  F045         	movff	powf@y+1,___flsub@b+1
  9427   002768  C0DE  F046         	movff	powf@y+2,___flsub@b+2
  9428   00276C  C0DF  F047         	movff	powf@y+3,___flsub@b+3
  9429   002770  EC91  F037         	call	___flsub	;wreg free
  9430   002774  C044  F012         	movff	?___flsub,___flmul@b
  9431   002778  C045  F013         	movff	?___flsub+1,___flmul@b+1
  9432   00277C  C046  F014         	movff	?___flsub+2,___flmul@b+2
  9433   002780  C047  F015         	movff	?___flsub+3,___flmul@b+3
  9434   002784  EC22  F026         	call	___flmul	;wreg free
  9435   002788  C012  F110         	movff	?___flmul,_powf$3119
  9436   00278C  C013  F111         	movff	?___flmul+1,_powf$3119+1
  9437   002790  C014  F112         	movff	?___flmul+2,_powf$3119+2
  9438   002794  C015  F113         	movff	?___flmul+3,_powf$3119+3
  9439   002798  C110  F002         	movff	_powf$3119,___fladd@b
  9440   00279C  C111  F003         	movff	_powf$3119+1,___fladd@b+1
  9441   0027A0  C112  F004         	movff	_powf$3119+2,___fladd@b+2
  9442   0027A4  C113  F005         	movff	_powf$3119+3,___fladd@b+3
  9443   0027A8  C11C  F016         	movff	powf@t2,___flmul@a
  9444   0027AC  C11D  F017         	movff	powf@t2+1,___flmul@a+1
  9445   0027B0  C11E  F018         	movff	powf@t2+2,___flmul@a+2
  9446   0027B4  C11F  F019         	movff	powf@t2+3,___flmul@a+3
  9447   0027B8  C0DC  F012         	movff	powf@y,___flmul@b
  9448   0027BC  C0DD  F013         	movff	powf@y+1,___flmul@b+1
  9449   0027C0  C0DE  F014         	movff	powf@y+2,___flmul@b+2
  9450   0027C4  C0DF  F015         	movff	powf@y+3,___flmul@b+3
  9451   0027C8  EC22  F026         	call	___flmul	;wreg free
  9452   0027CC  C012  F006         	movff	?___flmul,___fladd@a
  9453   0027D0  C013  F007         	movff	?___flmul+1,___fladd@a+1
  9454   0027D4  C014  F008         	movff	?___flmul+2,___fladd@a+2
  9455   0027D8  C015  F009         	movff	?___flmul+3,___fladd@a+3
  9456   0027DC  ECC2  F023         	call	___fladd	;wreg free
  9457   0027E0  C002  F16C         	movff	?___fladd,powf@p_l
  9458   0027E4  C003  F16D         	movff	?___fladd+1,powf@p_l+1
  9459   0027E8  C004  F16E         	movff	?___fladd+2,powf@p_l+2
  9460   0027EC  C005  F16F         	movff	?___fladd+3,powf@p_l+3
  9461   0027F0  C12C  F012         	movff	powf@y1,___flmul@b
  9462   0027F4  C12D  F013         	movff	powf@y1+1,___flmul@b+1
  9463   0027F8  C12E  F014         	movff	powf@y1+2,___flmul@b+2
  9464   0027FC  C12F  F015         	movff	powf@y1+3,___flmul@b+3
  9465   002800  C18C  F016         	movff	powf@t1,___flmul@a
  9466   002804  C18D  F017         	movff	powf@t1+1,___flmul@a+1
  9467   002808  C18E  F018         	movff	powf@t1+2,___flmul@a+2
  9468   00280C  C18F  F019         	movff	powf@t1+3,___flmul@a+3
  9469   002810  EC22  F026         	call	___flmul	;wreg free
  9470   002814  C012  F1A0         	movff	?___flmul,powf@p_h
  9471   002818  C013  F1A1         	movff	?___flmul+1,powf@p_h+1
  9472   00281C  C014  F1A2         	movff	?___flmul+2,powf@p_h+2
  9473   002820  C015  F1A3         	movff	?___flmul+3,powf@p_h+3
  9474   002824  C1A0  F002         	movff	powf@p_h,___fladd@b
  9475   002828  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
  9476   00282C  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
  9477   002830  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
  9478   002834  C16C  F006         	movff	powf@p_l,___fladd@a
  9479   002838  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
  9480   00283C  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
  9481   002840  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
  9482   002844  ECC2  F023         	call	___fladd	;wreg free
  9483   002848  C002  F1B4         	movff	?___fladd,powf@z
  9484   00284C  C003  F1B5         	movff	?___fladd+1,powf@z+1
  9485   002850  C004  F1B6         	movff	?___fladd+2,powf@z+2
  9486   002854  C005  F1B7         	movff	?___fladd+3,powf@z+3
  9487   002858  C1B4  F1A8         	movff	powf@z,powf@j
  9488   00285C  C1B5  F1A9         	movff	powf@z+1,powf@j+1
  9489   002860  C1B6  F1AA         	movff	powf@z+2,powf@j+2
  9490   002864  C1B7  F1AB         	movff	powf@z+3,powf@j+3
  9491   002868  0101               	movlb	1	; () banked
  9492   00286A  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  9493   00286C  EF44  F014         	goto	u6481
  9494   002870  05A8               	decf	powf@j& (0+255),w,b
  9495   002872  0E00               	movlw	0
  9496   002874  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  9497   002876  0E00               	movlw	0
  9498   002878  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  9499   00287A  0E43               	movlw	67
  9500   00287C  59AB               	subwfb	(powf@j+3)& (0+255),w,b
  9501   00287E  A0D8               	btfss	status,0,c
  9502   002880  EF44  F014         	goto	u6481
  9503   002884  EF46  F014         	goto	u6480
  9504   002888                     u6481:
  9505   002888  EF48  F014         	goto	l7416
  9506   00288C                     u6480:
  9507   00288C  EF04  F00B         	goto	l7216
  9508   002890                     l7416:
  9509                           
  9510                           ; BSR set to: 1
  9511   002890  0E43               	movlw	67
  9512   002892  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  9513   002894  11A8               	iorwf	powf@j& (0+255),w,b
  9514   002896  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  9515   002898  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  9516   00289A  A4D8               	btfss	status,2,c
  9517   00289C  EF52  F014         	goto	u6491
  9518   0028A0  EF54  F014         	goto	u6490
  9519   0028A4                     u6491:
  9520   0028A4  EF93  F014         	goto	l7426
  9521   0028A8                     u6490:
  9522   0028A8                     
  9523                           ; BSR set to: 1
  9524   0028A8  C1A0  F048         	movff	powf@p_h,___flsub@a
  9525   0028AC  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
  9526   0028B0  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
  9527   0028B4  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
  9528   0028B8  C1B4  F044         	movff	powf@z,___flsub@b
  9529   0028BC  C1B5  F045         	movff	powf@z+1,___flsub@b+1
  9530   0028C0  C1B6  F046         	movff	powf@z+2,___flsub@b+2
  9531   0028C4  C1B7  F047         	movff	powf@z+3,___flsub@b+3
  9532   0028C8  EC91  F037         	call	___flsub	;wreg free
  9533   0028CC  C044  F04C         	movff	?___flsub,___flge@ff1
  9534   0028D0  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
  9535   0028D4  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
  9536   0028D8  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
  9537   0028DC  0E3C               	movlw	60
  9538   0028DE  6E06               	movwf	___fladd@a^0,c
  9539   0028E0  0EAA               	movlw	170
  9540   0028E2  6E07               	movwf	(___fladd@a+1)^0,c
  9541   0028E4  0E38               	movlw	56
  9542   0028E6  6E08               	movwf	(___fladd@a+2)^0,c
  9543   0028E8  0E33               	movlw	51
  9544   0028EA  6E09               	movwf	(___fladd@a+3)^0,c
  9545   0028EC  C16C  F002         	movff	powf@p_l,___fladd@b
  9546   0028F0  C16D  F003         	movff	powf@p_l+1,___fladd@b+1
  9547   0028F4  C16E  F004         	movff	powf@p_l+2,___fladd@b+2
  9548   0028F8  C16F  F005         	movff	powf@p_l+3,___fladd@b+3
  9549   0028FC  ECC2  F023         	call	___fladd	;wreg free
  9550   002900  C002  F050         	movff	?___fladd,___flge@ff2
  9551   002904  C003  F051         	movff	?___fladd+1,___flge@ff2+1
  9552   002908  C004  F052         	movff	?___fladd+2,___flge@ff2+2
  9553   00290C  C005  F053         	movff	?___fladd+3,___flge@ff2+3
  9554   002910  ECD8  F030         	call	___flge	;wreg free
  9555   002914  B0D8               	btfsc	status,0,c
  9556   002916  EF8F  F014         	goto	u6501
  9557   00291A  EF91  F014         	goto	u6500
  9558   00291E                     u6501:
  9559   00291E  EF06  F015         	goto	l7442
  9560   002922                     u6500:
  9561   002922  EF04  F00B         	goto	l7216
  9562   002926                     l7426:
  9563                           
  9564                           ; BSR set to: 1
  9565   002926  0EFF               	movlw	255
  9566   002928  15A8               	andwf	powf@j& (0+255),w,b
  9567   00292A  0100               	movlb	0	; () banked
  9568   00292C  6FE0               	movwf	??_powf& (0+255),b
  9569   00292E  0EFF               	movlw	255
  9570   002930  0101               	movlb	1	; () banked
  9571   002932  15A9               	andwf	(powf@j+1)& (0+255),w,b
  9572   002934  0100               	movlb	0	; () banked
  9573   002936  6FE1               	movwf	(??_powf+1)& (0+255),b
  9574   002938  0EFF               	movlw	255
  9575   00293A  0101               	movlb	1	; () banked
  9576   00293C  15AA               	andwf	(powf@j+2)& (0+255),w,b
  9577   00293E  0100               	movlb	0	; () banked
  9578   002940  6FE2               	movwf	(??_powf+2)& (0+255),b
  9579   002942  0E7F               	movlw	127
  9580   002944  0101               	movlb	1	; () banked
  9581   002946  15AB               	andwf	(powf@j+3)& (0+255),w,b
  9582   002948  0100               	movlb	0	; () banked
  9583   00294A  6FE3               	movwf	(??_powf+3)& (0+255),b
  9584   00294C  BFE3               	btfsc	(??_powf+3)& (0+255),7,b
  9585   00294E  EFB5  F014         	goto	u6511
  9586   002952  05E0               	decf	??_powf& (0+255),w,b
  9587   002954  0E00               	movlw	0
  9588   002956  59E1               	subwfb	(??_powf+1)& (0+255),w,b
  9589   002958  0E16               	movlw	22
  9590   00295A  59E2               	subwfb	(??_powf+2)& (0+255),w,b
  9591   00295C  0E43               	movlw	67
  9592   00295E  59E3               	subwfb	(??_powf+3)& (0+255),w,b
  9593   002960  A0D8               	btfss	status,0,c
  9594   002962  EFB5  F014         	goto	u6511
  9595   002966  EFB7  F014         	goto	u6510
  9596   00296A                     u6511:
  9597   00296A  EFC1  F014         	goto	l7434
  9598   00296E                     u6510:
  9599   00296E                     
  9600                           ; BSR set to: 0
  9601   00296E  0E00               	movlw	0
  9602   002970  6FD8               	movwf	?_powf& (0+255),b
  9603   002972  0E00               	movlw	0
  9604   002974  6FD9               	movwf	(?_powf+1)& (0+255),b
  9605   002976  0E00               	movlw	0
  9606   002978  6FDA               	movwf	(?_powf+2)& (0+255),b
  9607   00297A  0E00               	movlw	0
  9608   00297C  6FDB               	movwf	(?_powf+3)& (0+255),b
  9609   00297E  EF92  F019         	goto	l1367
  9610   002982                     l7434:
  9611                           
  9612                           ; BSR set to: 0
  9613   002982  0E16               	movlw	22
  9614   002984  0101               	movlb	1	; () banked
  9615   002986  19AA               	xorwf	(powf@j+2)& (0+255),w,b
  9616   002988  E109               	bnz	u6521
  9617   00298A  0EC3               	movlw	195
  9618   00298C  19AB               	xorwf	(powf@j+3)& (0+255),w,b
  9619   00298E  11A8               	iorwf	powf@j& (0+255),w,b
  9620   002990  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  9621   002992  A4D8               	btfss	status,2,c
  9622   002994  EFCE  F014         	goto	u6521
  9623   002998  EFD0  F014         	goto	u6520
  9624   00299C                     u6521:
  9625   00299C  EF06  F015         	goto	l7442
  9626   0029A0                     u6520:
  9627   0029A0                     
  9628                           ; BSR set to: 1
  9629   0029A0  C1A0  F048         	movff	powf@p_h,___flsub@a
  9630   0029A4  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
  9631   0029A8  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
  9632   0029AC  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
  9633   0029B0  C1B4  F044         	movff	powf@z,___flsub@b
  9634   0029B4  C1B5  F045         	movff	powf@z+1,___flsub@b+1
  9635   0029B8  C1B6  F046         	movff	powf@z+2,___flsub@b+2
  9636   0029BC  C1B7  F047         	movff	powf@z+3,___flsub@b+3
  9637   0029C0  EC91  F037         	call	___flsub	;wreg free
  9638   0029C4  C044  F04C         	movff	?___flsub,___flge@ff1
  9639   0029C8  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
  9640   0029CC  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
  9641   0029D0  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
  9642   0029D4  C16C  F050         	movff	powf@p_l,___flge@ff2
  9643   0029D8  C16D  F051         	movff	powf@p_l+1,___flge@ff2+1
  9644   0029DC  C16E  F052         	movff	powf@p_l+2,___flge@ff2+2
  9645   0029E0  C16F  F053         	movff	powf@p_l+3,___flge@ff2+3
  9646   0029E4  ECD8  F030         	call	___flge	;wreg free
  9647   0029E8  A0D8               	btfss	status,0,c
  9648   0029EA  EFF9  F014         	goto	u6531
  9649   0029EE  EFFB  F014         	goto	u6530
  9650   0029F2                     u6531:
  9651   0029F2  EF06  F015         	goto	l7442
  9652   0029F6                     u6530:
  9653   0029F6  0E00               	movlw	0
  9654   0029F8  0100               	movlb	0	; () banked
  9655   0029FA  6FD8               	movwf	?_powf& (0+255),b
  9656   0029FC  0E00               	movlw	0
  9657   0029FE  6FD9               	movwf	(?_powf+1)& (0+255),b
  9658   002A00  0E00               	movlw	0
  9659   002A02  6FDA               	movwf	(?_powf+2)& (0+255),b
  9660   002A04  0E00               	movlw	0
  9661   002A06  6FDB               	movwf	(?_powf+3)& (0+255),b
  9662   002A08  EF92  F019         	goto	l1367
  9663   002A0C                     l7442:
  9664   002A0C  0EFF               	movlw	255
  9665   002A0E  0101               	movlb	1	; () banked
  9666   002A10  15A8               	andwf	powf@j& (0+255),w,b
  9667   002A12  6F28               	movwf	powf@i& (0+255),b
  9668   002A14  0EFF               	movlw	255
  9669   002A16  15A9               	andwf	(powf@j+1)& (0+255),w,b
  9670   002A18  6F29               	movwf	(powf@i+1)& (0+255),b
  9671   002A1A  0EFF               	movlw	255
  9672   002A1C  15AA               	andwf	(powf@j+2)& (0+255),w,b
  9673   002A1E  6F2A               	movwf	(powf@i+2)& (0+255),b
  9674   002A20  0E7F               	movlw	127
  9675   002A22  15AB               	andwf	(powf@j+3)& (0+255),w,b
  9676   002A24  6F2B               	movwf	(powf@i+3)& (0+255),b
  9677   002A26  0E17               	movlw	23
  9678   002A28  0100               	movlb	0	; () banked
  9679   002A2A  6FE0               	movwf	??_powf& (0+255),b
  9680   002A2C  C128  F0E1         	movff	powf@i,??_powf+1
  9681   002A30  C129  F0E2         	movff	powf@i+1,??_powf+2
  9682   002A34  C12A  F0E3         	movff	powf@i+2,??_powf+3
  9683   002A38  C12B  F0E4         	movff	powf@i+3,??_powf+4
  9684   002A3C                     u6545:
  9685   002A3C  67E0               	tstfsz	??_powf& (0+255),b
  9686   002A3E  EF23  F015         	goto	u6546
  9687   002A42  EF2B  F015         	goto	u6547
  9688   002A46                     u6546:
  9689   002A46  35E4               	rlcf	(??_powf+4)& (0+255),w,b
  9690   002A48  33E4               	rrcf	(??_powf+4)& (0+255),f,b
  9691   002A4A  33E3               	rrcf	(??_powf+3)& (0+255),f,b
  9692   002A4C  33E2               	rrcf	(??_powf+2)& (0+255),f,b
  9693   002A4E  33E1               	rrcf	(??_powf+1)& (0+255),f,b
  9694   002A50  2FE0               	decfsz	??_powf& (0+255),f,b
  9695   002A52  EF1E  F015         	goto	u6545
  9696   002A56                     u6547:
  9697   002A56  0E81               	movlw	129
  9698   002A58  0100               	movlb	0	; () banked
  9699   002A5A  25E1               	addwf	(??_powf+1)& (0+255),w,b
  9700   002A5C  0101               	movlb	1	; () banked
  9701   002A5E  6FA4               	movwf	powf@k& (0+255),b
  9702   002A60  0EFF               	movlw	255
  9703   002A62  0100               	movlb	0	; () banked
  9704   002A64  21E2               	addwfc	(??_powf+2)& (0+255),w,b
  9705   002A66  0101               	movlb	1	; () banked
  9706   002A68  6FA5               	movwf	(powf@k+1)& (0+255),b
  9707   002A6A  0EFF               	movlw	255
  9708   002A6C  0100               	movlb	0	; () banked
  9709   002A6E  21E3               	addwfc	(??_powf+3)& (0+255),w,b
  9710   002A70  0101               	movlb	1	; () banked
  9711   002A72  6FA6               	movwf	(powf@k+2)& (0+255),b
  9712   002A74  0EFF               	movlw	255
  9713   002A76  0100               	movlb	0	; () banked
  9714   002A78  21E4               	addwfc	(??_powf+4)& (0+255),w,b
  9715   002A7A  0101               	movlb	1	; () banked
  9716   002A7C  6FA7               	movwf	(powf@k+3)& (0+255),b
  9717   002A7E                     
  9718                           ; BSR set to: 1
  9719   002A7E  0E00               	movlw	0
  9720   002A80  6F88               	movwf	powf@n& (0+255),b
  9721   002A82  0E00               	movlw	0
  9722   002A84  6F89               	movwf	(powf@n+1)& (0+255),b
  9723   002A86  0E00               	movlw	0
  9724   002A88  6F8A               	movwf	(powf@n+2)& (0+255),b
  9725   002A8A  0E00               	movlw	0
  9726   002A8C  6F8B               	movwf	(powf@n+3)& (0+255),b
  9727   002A8E                     
  9728                           ; BSR set to: 1
  9729   002A8E  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
  9730   002A90  EF56  F015         	goto	u6551
  9731   002A94  0528               	decf	powf@i& (0+255),w,b
  9732   002A96  0E00               	movlw	0
  9733   002A98  5929               	subwfb	(powf@i+1)& (0+255),w,b
  9734   002A9A  0E00               	movlw	0
  9735   002A9C  592A               	subwfb	(powf@i+2)& (0+255),w,b
  9736   002A9E  0E3F               	movlw	63
  9737   002AA0  592B               	subwfb	(powf@i+3)& (0+255),w,b
  9738   002AA2  A0D8               	btfss	status,0,c
  9739   002AA4  EF56  F015         	goto	u6551
  9740   002AA8  EF58  F015         	goto	u6550
  9741   002AAC                     u6551:
  9742   002AAC  EF54  F016         	goto	l7454
  9743   002AB0                     u6550:
  9744   002AB0                     
  9745                           ; BSR set to: 1
  9746   002AB0  C1A4  F0E0         	movff	powf@k,??_powf
  9747   002AB4  0E01               	movlw	1
  9748   002AB6  0100               	movlb	0	; () banked
  9749   002AB8  27E0               	addwf	??_powf& (0+255),f,b
  9750   002ABA  0E00               	movlw	0
  9751   002ABC  6FE1               	movwf	(??_powf+1)& (0+255),b
  9752   002ABE  0E00               	movlw	0
  9753   002AC0  6FE2               	movwf	(??_powf+2)& (0+255),b
  9754   002AC2  0E80               	movlw	128
  9755   002AC4  6FE3               	movwf	(??_powf+3)& (0+255),b
  9756   002AC6  0E00               	movlw	0
  9757   002AC8  6FE4               	movwf	(??_powf+4)& (0+255),b
  9758   002ACA                     u6565:
  9759   002ACA  67E0               	tstfsz	??_powf& (0+255),b
  9760   002ACC  EF6A  F015         	goto	u6566
  9761   002AD0  EF72  F015         	goto	u6567
  9762   002AD4                     u6566:
  9763   002AD4  35E4               	rlcf	(??_powf+4)& (0+255),w,b
  9764   002AD6  33E4               	rrcf	(??_powf+4)& (0+255),f,b
  9765   002AD8  33E3               	rrcf	(??_powf+3)& (0+255),f,b
  9766   002ADA  33E2               	rrcf	(??_powf+2)& (0+255),f,b
  9767   002ADC  33E1               	rrcf	(??_powf+1)& (0+255),f,b
  9768   002ADE  2FE0               	decfsz	??_powf& (0+255),f,b
  9769   002AE0  EF65  F015         	goto	u6565
  9770   002AE4                     u6567:
  9771   002AE4  0101               	movlb	1	; () banked
  9772   002AE6  51A8               	movf	powf@j& (0+255),w,b
  9773   002AE8  0100               	movlb	0	; () banked
  9774   002AEA  25E1               	addwf	(??_powf+1)& (0+255),w,b
  9775   002AEC  0101               	movlb	1	; () banked
  9776   002AEE  6F88               	movwf	powf@n& (0+255),b
  9777   002AF0  51A9               	movf	(powf@j+1)& (0+255),w,b
  9778   002AF2  0100               	movlb	0	; () banked
  9779   002AF4  21E2               	addwfc	(??_powf+2)& (0+255),w,b
  9780   002AF6  0101               	movlb	1	; () banked
  9781   002AF8  6F89               	movwf	(powf@n+1)& (0+255),b
  9782   002AFA  51AA               	movf	(powf@j+2)& (0+255),w,b
  9783   002AFC  0100               	movlb	0	; () banked
  9784   002AFE  21E3               	addwfc	(??_powf+3)& (0+255),w,b
  9785   002B00  0101               	movlb	1	; () banked
  9786   002B02  6F8A               	movwf	(powf@n+2)& (0+255),b
  9787   002B04  51AB               	movf	(powf@j+3)& (0+255),w,b
  9788   002B06  0100               	movlb	0	; () banked
  9789   002B08  21E4               	addwfc	(??_powf+4)& (0+255),w,b
  9790   002B0A  0101               	movlb	1	; () banked
  9791   002B0C  6F8B               	movwf	(powf@n+3)& (0+255),b
  9792   002B0E  0E81               	movlw	129
  9793   002B10  0100               	movlb	0	; () banked
  9794   002B12  6FE0               	movwf	??_powf& (0+255),b
  9795   002B14  0EFF               	movlw	255
  9796   002B16  6FE1               	movwf	(??_powf+1)& (0+255),b
  9797   002B18  0EFF               	movlw	255
  9798   002B1A  6FE2               	movwf	(??_powf+2)& (0+255),b
  9799   002B1C  0EFF               	movlw	255
  9800   002B1E  6FE3               	movwf	(??_powf+3)& (0+255),b
  9801   002B20  0E17               	movlw	23
  9802   002B22  6FE4               	movwf	(??_powf+4)& (0+255),b
  9803   002B24  C188  F0E5         	movff	powf@n,??_powf+5
  9804   002B28  C189  F0E6         	movff	powf@n+1,??_powf+6
  9805   002B2C  C18A  F0E7         	movff	powf@n+2,??_powf+7
  9806   002B30  C18B  F0E8         	movff	powf@n+3,??_powf+8
  9807   002B34                     u6575:
  9808   002B34  67E4               	tstfsz	(??_powf+4)& (0+255),b
  9809   002B36  EF9F  F015         	goto	u6576
  9810   002B3A  EFA7  F015         	goto	u6577
  9811   002B3E                     u6576:
  9812   002B3E  35E8               	rlcf	(??_powf+8)& (0+255),w,b
  9813   002B40  33E8               	rrcf	(??_powf+8)& (0+255),f,b
  9814   002B42  33E7               	rrcf	(??_powf+7)& (0+255),f,b
  9815   002B44  33E6               	rrcf	(??_powf+6)& (0+255),f,b
  9816   002B46  33E5               	rrcf	(??_powf+5)& (0+255),f,b
  9817   002B48  2FE4               	decfsz	(??_powf+4)& (0+255),f,b
  9818   002B4A  EF9A  F015         	goto	u6575
  9819   002B4E                     u6577:
  9820   002B4E  0100               	movlb	0	; () banked
  9821   002B50  51E5               	movf	(??_powf+5)& (0+255),w,b
  9822   002B52  25E0               	addwf	??_powf& (0+255),w,b
  9823   002B54  0101               	movlb	1	; () banked
  9824   002B56  6FA4               	movwf	powf@k& (0+255),b
  9825   002B58  0E00               	movlw	0
  9826   002B5A  0100               	movlb	0	; () banked
  9827   002B5C  21E1               	addwfc	(??_powf+1)& (0+255),w,b
  9828   002B5E  0101               	movlb	1	; () banked
  9829   002B60  6FA5               	movwf	(powf@k+1)& (0+255),b
  9830   002B62  0E00               	movlw	0
  9831   002B64  0100               	movlb	0	; () banked
  9832   002B66  21E2               	addwfc	(??_powf+2)& (0+255),w,b
  9833   002B68  0101               	movlb	1	; () banked
  9834   002B6A  6FA6               	movwf	(powf@k+2)& (0+255),b
  9835   002B6C  0E00               	movlw	0
  9836   002B6E  0100               	movlb	0	; () banked
  9837   002B70  21E3               	addwfc	(??_powf+3)& (0+255),w,b
  9838   002B72  0101               	movlb	1	; () banked
  9839   002B74  6FA7               	movwf	(powf@k+3)& (0+255),b
  9840   002B76  C1A4  F0E0         	movff	powf@k,??_powf
  9841   002B7A  0EFF               	movlw	255
  9842   002B7C  0100               	movlb	0	; () banked
  9843   002B7E  6FE1               	movwf	(??_powf+1)& (0+255),b
  9844   002B80  0EFF               	movlw	255
  9845   002B82  6FE2               	movwf	(??_powf+2)& (0+255),b
  9846   002B84  0E7F               	movlw	127
  9847   002B86  6FE3               	movwf	(??_powf+3)& (0+255),b
  9848   002B88  0E00               	movlw	0
  9849   002B8A  6FE4               	movwf	(??_powf+4)& (0+255),b
  9850   002B8C                     u6585:
  9851   002B8C  67E0               	tstfsz	??_powf& (0+255),b
  9852   002B8E  EFCB  F015         	goto	u6586
  9853   002B92  EFD3  F015         	goto	u6587
  9854   002B96                     u6586:
  9855   002B96  35E4               	rlcf	(??_powf+4)& (0+255),w,b
  9856   002B98  33E4               	rrcf	(??_powf+4)& (0+255),f,b
  9857   002B9A  33E3               	rrcf	(??_powf+3)& (0+255),f,b
  9858   002B9C  33E2               	rrcf	(??_powf+2)& (0+255),f,b
  9859   002B9E  33E1               	rrcf	(??_powf+1)& (0+255),f,b
  9860   002BA0  2FE0               	decfsz	??_powf& (0+255),f,b
  9861   002BA2  EFC6  F015         	goto	u6585
  9862   002BA6                     u6587:
  9863   002BA6  0100               	movlb	0	; () banked
  9864   002BA8  1DE1               	comf	(??_powf+1)& (0+255),w,b
  9865   002BAA  6FE5               	movwf	(??_powf+5)& (0+255),b
  9866   002BAC  1DE2               	comf	(??_powf+2)& (0+255),w,b
  9867   002BAE  6FE6               	movwf	(??_powf+6)& (0+255),b
  9868   002BB0  1DE3               	comf	(??_powf+3)& (0+255),w,b
  9869   002BB2  6FE7               	movwf	(??_powf+7)& (0+255),b
  9870   002BB4  1DE4               	comf	(??_powf+4)& (0+255),w,b
  9871   002BB6  6FE8               	movwf	(??_powf+8)& (0+255),b
  9872   002BB8  0101               	movlb	1	; () banked
  9873   002BBA  5188               	movf	powf@n& (0+255),w,b
  9874   002BBC  0100               	movlb	0	; () banked
  9875   002BBE  15E5               	andwf	(??_powf+5)& (0+255),w,b
  9876   002BC0  0101               	movlb	1	; () banked
  9877   002BC2  6FB0               	movwf	powf@t& (0+255),b
  9878   002BC4  5189               	movf	(powf@n+1)& (0+255),w,b
  9879   002BC6  0100               	movlb	0	; () banked
  9880   002BC8  15E6               	andwf	(??_powf+6)& (0+255),w,b
  9881   002BCA  0101               	movlb	1	; () banked
  9882   002BCC  6FB1               	movwf	(powf@t+1)& (0+255),b
  9883   002BCE  518A               	movf	(powf@n+2)& (0+255),w,b
  9884   002BD0  0100               	movlb	0	; () banked
  9885   002BD2  15E7               	andwf	(??_powf+7)& (0+255),w,b
  9886   002BD4  0101               	movlb	1	; () banked
  9887   002BD6  6FB2               	movwf	(powf@t+2)& (0+255),b
  9888   002BD8  518B               	movf	(powf@n+3)& (0+255),w,b
  9889   002BDA  0100               	movlb	0	; () banked
  9890   002BDC  15E8               	andwf	(??_powf+8)& (0+255),w,b
  9891   002BDE  0101               	movlb	1	; () banked
  9892   002BE0  6FB3               	movwf	(powf@t+3)& (0+255),b
  9893   002BE2  51A4               	movf	powf@k& (0+255),w,b
  9894   002BE4  0817               	sublw	23
  9895   002BE6  0100               	movlb	0	; () banked
  9896   002BE8  6FE0               	movwf	??_powf& (0+255),b
  9897   002BEA  0EFF               	movlw	255
  9898   002BEC  0101               	movlb	1	; () banked
  9899   002BEE  1588               	andwf	powf@n& (0+255),w,b
  9900   002BF0  0100               	movlb	0	; () banked
  9901   002BF2  6FE1               	movwf	(??_powf+1)& (0+255),b
  9902   002BF4  0EFF               	movlw	255
  9903   002BF6  0101               	movlb	1	; () banked
  9904   002BF8  1589               	andwf	(powf@n+1)& (0+255),w,b
  9905   002BFA  0100               	movlb	0	; () banked
  9906   002BFC  6FE2               	movwf	(??_powf+2)& (0+255),b
  9907   002BFE  0E7F               	movlw	127
  9908   002C00  0101               	movlb	1	; () banked
  9909   002C02  158A               	andwf	(powf@n+2)& (0+255),w,b
  9910   002C04  0100               	movlb	0	; () banked
  9911   002C06  6FE3               	movwf	(??_powf+3)& (0+255),b
  9912   002C08  0E00               	movlw	0
  9913   002C0A  0101               	movlb	1	; () banked
  9914   002C0C  158B               	andwf	(powf@n+3)& (0+255),w,b
  9915   002C0E  0100               	movlb	0	; () banked
  9916   002C10  6FE4               	movwf	(??_powf+4)& (0+255),b
  9917   002C12  0E00               	movlw	0
  9918   002C14  11E1               	iorwf	(??_powf+1)& (0+255),w,b
  9919   002C16  6FE5               	movwf	(??_powf+5)& (0+255),b
  9920   002C18  0E00               	movlw	0
  9921   002C1A  11E2               	iorwf	(??_powf+2)& (0+255),w,b
  9922   002C1C  6FE6               	movwf	(??_powf+6)& (0+255),b
  9923   002C1E  0E80               	movlw	128
  9924   002C20  11E3               	iorwf	(??_powf+3)& (0+255),w,b
  9925   002C22  6FE7               	movwf	(??_powf+7)& (0+255),b
  9926   002C24  0E00               	movlw	0
  9927   002C26  11E4               	iorwf	(??_powf+4)& (0+255),w,b
  9928   002C28  6FE8               	movwf	(??_powf+8)& (0+255),b
  9929   002C2A                     u6595:
  9930   002C2A  67E0               	tstfsz	??_powf& (0+255),b
  9931   002C2C  EF1A  F016         	goto	u6596
  9932   002C30  EF22  F016         	goto	u6597
  9933   002C34                     u6596:
  9934   002C34  35E8               	rlcf	(??_powf+8)& (0+255),w,b
  9935   002C36  33E8               	rrcf	(??_powf+8)& (0+255),f,b
  9936   002C38  33E7               	rrcf	(??_powf+7)& (0+255),f,b
  9937   002C3A  33E6               	rrcf	(??_powf+6)& (0+255),f,b
  9938   002C3C  33E5               	rrcf	(??_powf+5)& (0+255),f,b
  9939   002C3E  2FE0               	decfsz	??_powf& (0+255),f,b
  9940   002C40  EF15  F016         	goto	u6595
  9941   002C44                     u6597:
  9942   002C44  C0E5  F188         	movff	??_powf+5,powf@n
  9943   002C48  C0E6  F189         	movff	??_powf+6,powf@n+1
  9944   002C4C  C0E7  F18A         	movff	??_powf+7,powf@n+2
  9945   002C50  C0E8  F18B         	movff	??_powf+8,powf@n+3
  9946   002C54  0101               	movlb	1	; () banked
  9947   002C56  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  9948   002C58  EF32  F016         	goto	u6600
  9949   002C5C  EF30  F016         	goto	u6601
  9950   002C60                     u6601:
  9951   002C60  EF3A  F016         	goto	l7452
  9952   002C64                     u6600:
  9953   002C64                     
  9954                           ; BSR set to: 1
  9955   002C64  1F8B               	comf	(powf@n+3)& (0+255),f,b
  9956   002C66  1F8A               	comf	(powf@n+2)& (0+255),f,b
  9957   002C68  1F89               	comf	(powf@n+1)& (0+255),f,b
  9958   002C6A  6D88               	negf	powf@n& (0+255),b
  9959   002C6C  0E00               	movlw	0
  9960   002C6E  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9961   002C70  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9962   002C72  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9963   002C74                     l7452:
  9964                           
  9965                           ; BSR set to: 1
  9966   002C74  C1A0  F044         	movff	powf@p_h,___flsub@b
  9967   002C78  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
  9968   002C7C  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
  9969   002C80  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
  9970   002C84  C1B0  F048         	movff	powf@t,___flsub@a
  9971   002C88  C1B1  F049         	movff	powf@t+1,___flsub@a+1
  9972   002C8C  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
  9973   002C90  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
  9974   002C94  EC91  F037         	call	___flsub	;wreg free
  9975   002C98  C044  F1A0         	movff	?___flsub,powf@p_h
  9976   002C9C  C045  F1A1         	movff	?___flsub+1,powf@p_h+1
  9977   002CA0  C046  F1A2         	movff	?___flsub+2,powf@p_h+2
  9978   002CA4  C047  F1A3         	movff	?___flsub+3,powf@p_h+3
  9979   002CA8                     l7454:
  9980   002CA8  C1A0  F002         	movff	powf@p_h,___fladd@b
  9981   002CAC  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
  9982   002CB0  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
  9983   002CB4  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
  9984   002CB8  C16C  F006         	movff	powf@p_l,___fladd@a
  9985   002CBC  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
  9986   002CC0  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
  9987   002CC4  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
  9988   002CC8  ECC2  F023         	call	___fladd	;wreg free
  9989   002CCC  C002  F1B0         	movff	?___fladd,powf@t
  9990   002CD0  C003  F1B1         	movff	?___fladd+1,powf@t+1
  9991   002CD4  C004  F1B2         	movff	?___fladd+2,powf@t+2
  9992   002CD8  C005  F1B3         	movff	?___fladd+3,powf@t+3
  9993   002CDC  C1B0  F198         	movff	powf@t,powf@is
  9994   002CE0  C1B1  F199         	movff	powf@t+1,powf@is+1
  9995   002CE4  C1B2  F19A         	movff	powf@t+2,powf@is+2
  9996   002CE8  C1B3  F19B         	movff	powf@t+3,powf@is+3
  9997   002CEC  0E00               	movlw	0
  9998   002CEE  0101               	movlb	1	; () banked
  9999   002CF0  1598               	andwf	powf@is& (0+255),w,b
 10000   002CF2  6FB0               	movwf	powf@t& (0+255),b
 10001   002CF4  0E80               	movlw	128
 10002   002CF6  1599               	andwf	(powf@is+1)& (0+255),w,b
 10003   002CF8  6FB1               	movwf	(powf@t+1)& (0+255),b
 10004   002CFA  0EFF               	movlw	255
 10005   002CFC  159A               	andwf	(powf@is+2)& (0+255),w,b
 10006   002CFE  6FB2               	movwf	(powf@t+2)& (0+255),b
 10007   002D00  0EFF               	movlw	255
 10008   002D02  159B               	andwf	(powf@is+3)& (0+255),w,b
 10009   002D04  6FB3               	movwf	(powf@t+3)& (0+255),b
 10010   002D06                     
 10011                           ; BSR set to: 1
 10012   002D06  C1B0  F012         	movff	powf@t,___flmul@b
 10013   002D0A  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10014   002D0E  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10015   002D12  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10016   002D16  0E00               	movlw	0
 10017   002D18  6E16               	movwf	___flmul@a^0,c
 10018   002D1A  0E72               	movlw	114
 10019   002D1C  6E17               	movwf	(___flmul@a+1)^0,c
 10020   002D1E  0E31               	movlw	49
 10021   002D20  6E18               	movwf	(___flmul@a+2)^0,c
 10022   002D22  0E3F               	movlw	63
 10023   002D24  6E19               	movwf	(___flmul@a+3)^0,c
 10024   002D26  EC22  F026         	call	___flmul	;wreg free
 10025   002D2A  C012  F17C         	movff	?___flmul,powf@u
 10026   002D2E  C013  F17D         	movff	?___flmul+1,powf@u+1
 10027   002D32  C014  F17E         	movff	?___flmul+2,powf@u+2
 10028   002D36  C015  F17F         	movff	?___flmul+3,powf@u+3
 10029   002D3A  C1A0  F048         	movff	powf@p_h,___flsub@a
 10030   002D3E  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 10031   002D42  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 10032   002D46  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 10033   002D4A  C1B0  F044         	movff	powf@t,___flsub@b
 10034   002D4E  C1B1  F045         	movff	powf@t+1,___flsub@b+1
 10035   002D52  C1B2  F046         	movff	powf@t+2,___flsub@b+2
 10036   002D56  C1B3  F047         	movff	powf@t+3,___flsub@b+3
 10037   002D5A  EC91  F037         	call	___flsub	;wreg free
 10038   002D5E  C044  F19C         	movff	?___flsub,_powf$3110
 10039   002D62  C045  F19D         	movff	?___flsub+1,_powf$3110+1
 10040   002D66  C046  F19E         	movff	?___flsub+2,_powf$3110+2
 10041   002D6A  C047  F19F         	movff	?___flsub+3,_powf$3110+3
 10042   002D6E  0E18               	movlw	24
 10043   002D70  6E16               	movwf	___flmul@a^0,c
 10044   002D72  0E72               	movlw	114
 10045   002D74  6E17               	movwf	(___flmul@a+1)^0,c
 10046   002D76  0E31               	movlw	49
 10047   002D78  6E18               	movwf	(___flmul@a+2)^0,c
 10048   002D7A  0E3F               	movlw	63
 10049   002D7C  6E19               	movwf	(___flmul@a+3)^0,c
 10050   002D7E  C19C  F048         	movff	_powf$3110,___flsub@a
 10051   002D82  C19D  F049         	movff	_powf$3110+1,___flsub@a+1
 10052   002D86  C19E  F04A         	movff	_powf$3110+2,___flsub@a+2
 10053   002D8A  C19F  F04B         	movff	_powf$3110+3,___flsub@a+3
 10054   002D8E  C16C  F044         	movff	powf@p_l,___flsub@b
 10055   002D92  C16D  F045         	movff	powf@p_l+1,___flsub@b+1
 10056   002D96  C16E  F046         	movff	powf@p_l+2,___flsub@b+2
 10057   002D9A  C16F  F047         	movff	powf@p_l+3,___flsub@b+3
 10058   002D9E  EC91  F037         	call	___flsub	;wreg free
 10059   002DA2  C044  F012         	movff	?___flsub,___flmul@b
 10060   002DA6  C045  F013         	movff	?___flsub+1,___flmul@b+1
 10061   002DAA  C046  F014         	movff	?___flsub+2,___flmul@b+2
 10062   002DAE  C047  F015         	movff	?___flsub+3,___flmul@b+3
 10063   002DB2  EC22  F026         	call	___flmul	;wreg free
 10064   002DB6  C012  F114         	movff	?___flmul,_powf$3120
 10065   002DBA  C013  F115         	movff	?___flmul+1,_powf$3120+1
 10066   002DBE  C014  F116         	movff	?___flmul+2,_powf$3120+2
 10067   002DC2  C015  F117         	movff	?___flmul+3,_powf$3120+3
 10068   002DC6  C114  F002         	movff	_powf$3120,___fladd@b
 10069   002DCA  C115  F003         	movff	_powf$3120+1,___fladd@b+1
 10070   002DCE  C116  F004         	movff	_powf$3120+2,___fladd@b+2
 10071   002DD2  C117  F005         	movff	_powf$3120+3,___fladd@b+3
 10072   002DD6  0E8C               	movlw	140
 10073   002DD8  6E16               	movwf	___flmul@a^0,c
 10074   002DDA  0EBE               	movlw	190
 10075   002DDC  6E17               	movwf	(___flmul@a+1)^0,c
 10076   002DDE  0EBF               	movlw	191
 10077   002DE0  6E18               	movwf	(___flmul@a+2)^0,c
 10078   002DE2  0E35               	movlw	53
 10079   002DE4  6E19               	movwf	(___flmul@a+3)^0,c
 10080   002DE6  C1B0  F012         	movff	powf@t,___flmul@b
 10081   002DEA  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10082   002DEE  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10083   002DF2  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10084   002DF6  EC22  F026         	call	___flmul	;wreg free
 10085   002DFA  C012  F006         	movff	?___flmul,___fladd@a
 10086   002DFE  C013  F007         	movff	?___flmul+1,___fladd@a+1
 10087   002E02  C014  F008         	movff	?___flmul+2,___fladd@a+2
 10088   002E06  C015  F009         	movff	?___flmul+3,___fladd@a+3
 10089   002E0A  ECC2  F023         	call	___fladd	;wreg free
 10090   002E0E  C002  F180         	movff	?___fladd,powf@v
 10091   002E12  C003  F181         	movff	?___fladd+1,powf@v+1
 10092   002E16  C004  F182         	movff	?___fladd+2,powf@v+2
 10093   002E1A  C005  F183         	movff	?___fladd+3,powf@v+3
 10094   002E1E  C17C  F002         	movff	powf@u,___fladd@b
 10095   002E22  C17D  F003         	movff	powf@u+1,___fladd@b+1
 10096   002E26  C17E  F004         	movff	powf@u+2,___fladd@b+2
 10097   002E2A  C17F  F005         	movff	powf@u+3,___fladd@b+3
 10098   002E2E  C180  F006         	movff	powf@v,___fladd@a
 10099   002E32  C181  F007         	movff	powf@v+1,___fladd@a+1
 10100   002E36  C182  F008         	movff	powf@v+2,___fladd@a+2
 10101   002E3A  C183  F009         	movff	powf@v+3,___fladd@a+3
 10102   002E3E  ECC2  F023         	call	___fladd	;wreg free
 10103   002E42  C002  F1B4         	movff	?___fladd,powf@z
 10104   002E46  C003  F1B5         	movff	?___fladd+1,powf@z+1
 10105   002E4A  C004  F1B6         	movff	?___fladd+2,powf@z+2
 10106   002E4E  C005  F1B7         	movff	?___fladd+3,powf@z+3
 10107   002E52  C17C  F048         	movff	powf@u,___flsub@a
 10108   002E56  C17D  F049         	movff	powf@u+1,___flsub@a+1
 10109   002E5A  C17E  F04A         	movff	powf@u+2,___flsub@a+2
 10110   002E5E  C17F  F04B         	movff	powf@u+3,___flsub@a+3
 10111   002E62  C1B4  F044         	movff	powf@z,___flsub@b
 10112   002E66  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10113   002E6A  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10114   002E6E  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10115   002E72  EC91  F037         	call	___flsub	;wreg free
 10116   002E76  C044  F19C         	movff	?___flsub,_powf$3110
 10117   002E7A  C045  F19D         	movff	?___flsub+1,_powf$3110+1
 10118   002E7E  C046  F19E         	movff	?___flsub+2,_powf$3110+2
 10119   002E82  C047  F19F         	movff	?___flsub+3,_powf$3110+3
 10120   002E86  C180  F044         	movff	powf@v,___flsub@b
 10121   002E8A  C181  F045         	movff	powf@v+1,___flsub@b+1
 10122   002E8E  C182  F046         	movff	powf@v+2,___flsub@b+2
 10123   002E92  C183  F047         	movff	powf@v+3,___flsub@b+3
 10124   002E96  C19C  F048         	movff	_powf$3110,___flsub@a
 10125   002E9A  C19D  F049         	movff	_powf$3110+1,___flsub@a+1
 10126   002E9E  C19E  F04A         	movff	_powf$3110+2,___flsub@a+2
 10127   002EA2  C19F  F04B         	movff	_powf$3110+3,___flsub@a+3
 10128   002EA6  EC91  F037         	call	___flsub	;wreg free
 10129   002EAA  C044  F144         	movff	?___flsub,powf@w
 10130   002EAE  C045  F145         	movff	?___flsub+1,powf@w+1
 10131   002EB2  C046  F146         	movff	?___flsub+2,powf@w+2
 10132   002EB6  C047  F147         	movff	?___flsub+3,powf@w+3
 10133   002EBA  C1B4  F012         	movff	powf@z,___flmul@b
 10134   002EBE  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 10135   002EC2  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 10136   002EC6  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 10137   002ECA  C1B4  F016         	movff	powf@z,___flmul@a
 10138   002ECE  C1B5  F017         	movff	powf@z+1,___flmul@a+1
 10139   002ED2  C1B6  F018         	movff	powf@z+2,___flmul@a+2
 10140   002ED6  C1B7  F019         	movff	powf@z+3,___flmul@a+3
 10141   002EDA  EC22  F026         	call	___flmul	;wreg free
 10142   002EDE  C012  F1B0         	movff	?___flmul,powf@t
 10143   002EE2  C013  F1B1         	movff	?___flmul+1,powf@t+1
 10144   002EE6  C014  F1B2         	movff	?___flmul+2,powf@t+2
 10145   002EEA  C015  F1B3         	movff	?___flmul+3,powf@t+3
 10146   002EEE  0E0E               	movlw	14
 10147   002EF0  6E06               	movwf	___fladd@a^0,c
 10148   002EF2  0EEA               	movlw	234
 10149   002EF4  6E07               	movwf	(___fladd@a+1)^0,c
 10150   002EF6  0EDD               	movlw	221
 10151   002EF8  6E08               	movwf	(___fladd@a+2)^0,c
 10152   002EFA  0EB5               	movlw	181
 10153   002EFC  6E09               	movwf	(___fladd@a+3)^0,c
 10154   002EFE  0E4C               	movlw	76
 10155   002F00  6E16               	movwf	___flmul@a^0,c
 10156   002F02  0EBB               	movlw	187
 10157   002F04  6E17               	movwf	(___flmul@a+1)^0,c
 10158   002F06  0E31               	movlw	49
 10159   002F08  6E18               	movwf	(___flmul@a+2)^0,c
 10160   002F0A  0E33               	movlw	51
 10161   002F0C  6E19               	movwf	(___flmul@a+3)^0,c
 10162   002F0E  C1B0  F012         	movff	powf@t,___flmul@b
 10163   002F12  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10164   002F16  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10165   002F1A  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10166   002F1E  EC22  F026         	call	___flmul	;wreg free
 10167   002F22  C012  F002         	movff	?___flmul,___fladd@b
 10168   002F26  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10169   002F2A  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10170   002F2E  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10171   002F32  ECC2  F023         	call	___fladd	;wreg free
 10172   002F36  C002  F148         	movff	?___fladd,_powf$3107
 10173   002F3A  C003  F149         	movff	?___fladd+1,_powf$3107+1
 10174   002F3E  C004  F14A         	movff	?___fladd+2,_powf$3107+2
 10175   002F42  C005  F14B         	movff	?___fladd+3,_powf$3107+3
 10176   002F46  0E55               	movlw	85
 10177   002F48  6E06               	movwf	___fladd@a^0,c
 10178   002F4A  0EB3               	movlw	179
 10179   002F4C  6E07               	movwf	(___fladd@a+1)^0,c
 10180   002F4E  0E8A               	movlw	138
 10181   002F50  6E08               	movwf	(___fladd@a+2)^0,c
 10182   002F52  0E38               	movlw	56
 10183   002F54  6E09               	movwf	(___fladd@a+3)^0,c
 10184   002F56  C1B0  F016         	movff	powf@t,___flmul@a
 10185   002F5A  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10186   002F5E  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10187   002F62  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10188   002F66  C148  F012         	movff	_powf$3107,___flmul@b
 10189   002F6A  C149  F013         	movff	_powf$3107+1,___flmul@b+1
 10190   002F6E  C14A  F014         	movff	_powf$3107+2,___flmul@b+2
 10191   002F72  C14B  F015         	movff	_powf$3107+3,___flmul@b+3
 10192   002F76  EC22  F026         	call	___flmul	;wreg free
 10193   002F7A  C012  F002         	movff	?___flmul,___fladd@b
 10194   002F7E  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10195   002F82  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10196   002F86  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10197   002F8A  ECC2  F023         	call	___fladd	;wreg free
 10198   002F8E  C002  F15C         	movff	?___fladd,_powf$3108
 10199   002F92  C003  F15D         	movff	?___fladd+1,_powf$3108+1
 10200   002F96  C004  F15E         	movff	?___fladd+2,_powf$3108+2
 10201   002F9A  C005  F15F         	movff	?___fladd+3,_powf$3108+3
 10202   002F9E  0E61               	movlw	97
 10203   002FA0  6E06               	movwf	___fladd@a^0,c
 10204   002FA2  0E0B               	movlw	11
 10205   002FA4  6E07               	movwf	(___fladd@a+1)^0,c
 10206   002FA6  0E36               	movlw	54
 10207   002FA8  6E08               	movwf	(___fladd@a+2)^0,c
 10208   002FAA  0EBB               	movlw	187
 10209   002FAC  6E09               	movwf	(___fladd@a+3)^0,c
 10210   002FAE  C1B0  F016         	movff	powf@t,___flmul@a
 10211   002FB2  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10212   002FB6  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10213   002FBA  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10214   002FBE  C15C  F012         	movff	_powf$3108,___flmul@b
 10215   002FC2  C15D  F013         	movff	_powf$3108+1,___flmul@b+1
 10216   002FC6  C15E  F014         	movff	_powf$3108+2,___flmul@b+2
 10217   002FCA  C15F  F015         	movff	_powf$3108+3,___flmul@b+3
 10218   002FCE  EC22  F026         	call	___flmul	;wreg free
 10219   002FD2  C012  F002         	movff	?___flmul,___fladd@b
 10220   002FD6  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10221   002FDA  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10222   002FDE  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10223   002FE2  ECC2  F023         	call	___fladd	;wreg free
 10224   002FE6  C002  F14C         	movff	?___fladd,_powf$3109
 10225   002FEA  C003  F14D         	movff	?___fladd+1,_powf$3109+1
 10226   002FEE  C004  F14E         	movff	?___fladd+2,_powf$3109+2
 10227   002FF2  C005  F14F         	movff	?___fladd+3,_powf$3109+3
 10228   002FF6  0EAB               	movlw	171
 10229   002FF8  6E06               	movwf	___fladd@a^0,c
 10230   002FFA  0EAA               	movlw	170
 10231   002FFC  6E07               	movwf	(___fladd@a+1)^0,c
 10232   002FFE  0E2A               	movlw	42
 10233   003000  6E08               	movwf	(___fladd@a+2)^0,c
 10234   003002  0E3E               	movlw	62
 10235   003004  6E09               	movwf	(___fladd@a+3)^0,c
 10236   003006  C1B0  F016         	movff	powf@t,___flmul@a
 10237   00300A  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10238   00300E  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10239   003012  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10240   003016  C14C  F012         	movff	_powf$3109,___flmul@b
 10241   00301A  C14D  F013         	movff	_powf$3109+1,___flmul@b+1
 10242   00301E  C14E  F014         	movff	_powf$3109+2,___flmul@b+2
 10243   003022  C14F  F015         	movff	_powf$3109+3,___flmul@b+3
 10244   003026  EC22  F026         	call	___flmul	;wreg free
 10245   00302A  C012  F002         	movff	?___flmul,___fladd@b
 10246   00302E  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10247   003032  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10248   003036  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10249   00303A  ECC2  F023         	call	___fladd	;wreg free
 10250   00303E  C002  F138         	movff	?___fladd,_powf$3111
 10251   003042  C003  F139         	movff	?___fladd+1,_powf$3111+1
 10252   003046  C004  F13A         	movff	?___fladd+2,_powf$3111+2
 10253   00304A  C005  F13B         	movff	?___fladd+3,_powf$3111+3
 10254   00304E  C1B4  F044         	movff	powf@z,___flsub@b
 10255   003052  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10256   003056  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10257   00305A  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10258   00305E  C1B0  F016         	movff	powf@t,___flmul@a
 10259   003062  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10260   003066  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10261   00306A  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10262   00306E  C138  F012         	movff	_powf$3111,___flmul@b
 10263   003072  C139  F013         	movff	_powf$3111+1,___flmul@b+1
 10264   003076  C13A  F014         	movff	_powf$3111+2,___flmul@b+2
 10265   00307A  C13B  F015         	movff	_powf$3111+3,___flmul@b+3
 10266   00307E  EC22  F026         	call	___flmul	;wreg free
 10267   003082  C012  F048         	movff	?___flmul,___flsub@a
 10268   003086  C013  F049         	movff	?___flmul+1,___flsub@a+1
 10269   00308A  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 10270   00308E  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 10271   003092  EC91  F037         	call	___flsub	;wreg free
 10272   003096  C044  F18C         	movff	?___flsub,powf@t1
 10273   00309A  C045  F18D         	movff	?___flsub+1,powf@t1+1
 10274   00309E  C046  F18E         	movff	?___flsub+2,powf@t1+2
 10275   0030A2  C047  F18F         	movff	?___flsub+3,powf@t1+3
 10276   0030A6  0E00               	movlw	0
 10277   0030A8  6E06               	movwf	___fladd@a^0,c
 10278   0030AA  0E00               	movlw	0
 10279   0030AC  6E07               	movwf	(___fladd@a+1)^0,c
 10280   0030AE  0E00               	movlw	0
 10281   0030B0  6E08               	movwf	(___fladd@a+2)^0,c
 10282   0030B2  0EC0               	movlw	192
 10283   0030B4  6E09               	movwf	(___fladd@a+3)^0,c
 10284   0030B6  C18C  F002         	movff	powf@t1,___fladd@b
 10285   0030BA  C18D  F003         	movff	powf@t1+1,___fladd@b+1
 10286   0030BE  C18E  F004         	movff	powf@t1+2,___fladd@b+2
 10287   0030C2  C18F  F005         	movff	powf@t1+3,___fladd@b+3
 10288   0030C6  ECC2  F023         	call	___fladd	;wreg free
 10289   0030CA  C002  F02F         	movff	?___fladd,___fldiv@a
 10290   0030CE  C003  F030         	movff	?___fladd+1,___fldiv@a+1
 10291   0030D2  C004  F031         	movff	?___fladd+2,___fldiv@a+2
 10292   0030D6  C005  F032         	movff	?___fladd+3,___fldiv@a+3
 10293   0030DA  C18C  F016         	movff	powf@t1,___flmul@a
 10294   0030DE  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 10295   0030E2  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 10296   0030E6  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 10297   0030EA  C1B4  F012         	movff	powf@z,___flmul@b
 10298   0030EE  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 10299   0030F2  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 10300   0030F6  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 10301   0030FA  EC22  F026         	call	___flmul	;wreg free
 10302   0030FE  C012  F02B         	movff	?___flmul,___fldiv@b
 10303   003102  C013  F02C         	movff	?___flmul+1,___fldiv@b+1
 10304   003106  C014  F02D         	movff	?___flmul+2,___fldiv@b+2
 10305   00310A  C015  F02E         	movff	?___flmul+3,___fldiv@b+3
 10306   00310E  EC26  F02A         	call	___fldiv	;wreg free
 10307   003112  C02B  F13C         	movff	?___fldiv,_powf$3115
 10308   003116  C02C  F13D         	movff	?___fldiv+1,_powf$3115+1
 10309   00311A  C02D  F13E         	movff	?___fldiv+2,_powf$3115+2
 10310   00311E  C02E  F13F         	movff	?___fldiv+3,_powf$3115+3
 10311   003122  C144  F006         	movff	powf@w,___fladd@a
 10312   003126  C145  F007         	movff	powf@w+1,___fladd@a+1
 10313   00312A  C146  F008         	movff	powf@w+2,___fladd@a+2
 10314   00312E  C147  F009         	movff	powf@w+3,___fladd@a+3
 10315   003132  C144  F016         	movff	powf@w,___flmul@a
 10316   003136  C145  F017         	movff	powf@w+1,___flmul@a+1
 10317   00313A  C146  F018         	movff	powf@w+2,___flmul@a+2
 10318   00313E  C147  F019         	movff	powf@w+3,___flmul@a+3
 10319   003142  C1B4  F012         	movff	powf@z,___flmul@b
 10320   003146  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 10321   00314A  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 10322   00314E  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 10323   003152  EC22  F026         	call	___flmul	;wreg free
 10324   003156  C012  F002         	movff	?___flmul,___fladd@b
 10325   00315A  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10326   00315E  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10327   003162  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10328   003166  ECC2  F023         	call	___fladd	;wreg free
 10329   00316A  C002  F118         	movff	?___fladd,_powf$3121
 10330   00316E  C003  F119         	movff	?___fladd+1,_powf$3121+1
 10331   003172  C004  F11A         	movff	?___fladd+2,_powf$3121+2
 10332   003176  C005  F11B         	movff	?___fladd+3,_powf$3121+3
 10333   00317A  C13C  F044         	movff	_powf$3115,___flsub@b
 10334   00317E  C13D  F045         	movff	_powf$3115+1,___flsub@b+1
 10335   003182  C13E  F046         	movff	_powf$3115+2,___flsub@b+2
 10336   003186  C13F  F047         	movff	_powf$3115+3,___flsub@b+3
 10337   00318A  C118  F048         	movff	_powf$3121,___flsub@a
 10338   00318E  C119  F049         	movff	_powf$3121+1,___flsub@a+1
 10339   003192  C11A  F04A         	movff	_powf$3121+2,___flsub@a+2
 10340   003196  C11B  F04B         	movff	_powf$3121+3,___flsub@a+3
 10341   00319A  EC91  F037         	call	___flsub	;wreg free
 10342   00319E  C044  F150         	movff	?___flsub,powf@r
 10343   0031A2  C045  F151         	movff	?___flsub+1,powf@r+1
 10344   0031A6  C046  F152         	movff	?___flsub+2,powf@r+2
 10345   0031AA  C047  F153         	movff	?___flsub+3,powf@r+3
 10346   0031AE  C1B4  F048         	movff	powf@z,___flsub@a
 10347   0031B2  C1B5  F049         	movff	powf@z+1,___flsub@a+1
 10348   0031B6  C1B6  F04A         	movff	powf@z+2,___flsub@a+2
 10349   0031BA  C1B7  F04B         	movff	powf@z+3,___flsub@a+3
 10350   0031BE  C150  F044         	movff	powf@r,___flsub@b
 10351   0031C2  C151  F045         	movff	powf@r+1,___flsub@b+1
 10352   0031C6  C152  F046         	movff	powf@r+2,___flsub@b+2
 10353   0031CA  C153  F047         	movff	powf@r+3,___flsub@b+3
 10354   0031CE  EC91  F037         	call	___flsub	;wreg free
 10355   0031D2  C044  F19C         	movff	?___flsub,_powf$3110
 10356   0031D6  C045  F19D         	movff	?___flsub+1,_powf$3110+1
 10357   0031DA  C046  F19E         	movff	?___flsub+2,_powf$3110+2
 10358   0031DE  C047  F19F         	movff	?___flsub+3,_powf$3110+3
 10359   0031E2  0E00               	movlw	0
 10360   0031E4  6E44               	movwf	___flsub@b^0,c
 10361   0031E6  0E00               	movlw	0
 10362   0031E8  6E45               	movwf	(___flsub@b+1)^0,c
 10363   0031EA  0E80               	movlw	128
 10364   0031EC  6E46               	movwf	(___flsub@b+2)^0,c
 10365   0031EE  0E3F               	movlw	63
 10366   0031F0  6E47               	movwf	(___flsub@b+3)^0,c
 10367   0031F2  C19C  F048         	movff	_powf$3110,___flsub@a
 10368   0031F6  C19D  F049         	movff	_powf$3110+1,___flsub@a+1
 10369   0031FA  C19E  F04A         	movff	_powf$3110+2,___flsub@a+2
 10370   0031FE  C19F  F04B         	movff	_powf$3110+3,___flsub@a+3
 10371   003202  EC91  F037         	call	___flsub	;wreg free
 10372   003206  C044  F1B4         	movff	?___flsub,powf@z
 10373   00320A  C045  F1B5         	movff	?___flsub+1,powf@z+1
 10374   00320E  C046  F1B6         	movff	?___flsub+2,powf@z+2
 10375   003212  C047  F1B7         	movff	?___flsub+3,powf@z+3
 10376   003216  C1B4  F1A8         	movff	powf@z,powf@j
 10377   00321A  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 10378   00321E  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 10379   003222  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 10380   003226  C188  F0E0         	movff	powf@n,??_powf
 10381   00322A  C189  F0E1         	movff	powf@n+1,??_powf+1
 10382   00322E  C18A  F0E2         	movff	powf@n+2,??_powf+2
 10383   003232  C18B  F0E3         	movff	powf@n+3,??_powf+3
 10384   003236  0E17               	movlw	23
 10385   003238                     u6615:
 10386   003238  90D8               	bcf	status,0,c
 10387   00323A  0100               	movlb	0	; () banked
 10388   00323C  37E0               	rlcf	??_powf& (0+255),f,b
 10389   00323E  37E1               	rlcf	(??_powf+1)& (0+255),f,b
 10390   003240  37E2               	rlcf	(??_powf+2)& (0+255),f,b
 10391   003242  37E3               	rlcf	(??_powf+3)& (0+255),f,b
 10392   003244  2EE8               	decfsz	wreg,f,c
 10393   003246  EF1C  F019         	goto	u6615
 10394   00324A  51E0               	movf	??_powf& (0+255),w,b
 10395   00324C  0101               	movlb	1	; () banked
 10396   00324E  27A8               	addwf	powf@j& (0+255),f,b
 10397   003250  0100               	movlb	0	; () banked
 10398   003252  51E1               	movf	(??_powf+1)& (0+255),w,b
 10399   003254  0101               	movlb	1	; () banked
 10400   003256  23A9               	addwfc	(powf@j+1)& (0+255),f,b
 10401   003258  0100               	movlb	0	; () banked
 10402   00325A  51E2               	movf	(??_powf+2)& (0+255),w,b
 10403   00325C  0101               	movlb	1	; () banked
 10404   00325E  23AA               	addwfc	(powf@j+2)& (0+255),f,b
 10405   003260  0100               	movlb	0	; () banked
 10406   003262  51E3               	movf	(??_powf+3)& (0+255),w,b
 10407   003264  0101               	movlb	1	; () banked
 10408   003266  23AB               	addwfc	(powf@j+3)& (0+255),f,b
 10409   003268                     
 10410                           ; BSR set to: 1
 10411   003268  0E17               	movlw	23
 10412   00326A  0100               	movlb	0	; () banked
 10413   00326C  6FE0               	movwf	??_powf& (0+255),b
 10414   00326E  C1A8  F0E1         	movff	powf@j,??_powf+1
 10415   003272  C1A9  F0E2         	movff	powf@j+1,??_powf+2
 10416   003276  C1AA  F0E3         	movff	powf@j+2,??_powf+3
 10417   00327A  C1AB  F0E4         	movff	powf@j+3,??_powf+4
 10418   00327E                     u6625:
 10419   00327E  67E0               	tstfsz	??_powf& (0+255),b
 10420   003280  EF44  F019         	goto	u6626
 10421   003284  EF4C  F019         	goto	u6627
 10422   003288                     u6626:
 10423   003288  35E4               	rlcf	(??_powf+4)& (0+255),w,b
 10424   00328A  33E4               	rrcf	(??_powf+4)& (0+255),f,b
 10425   00328C  33E3               	rrcf	(??_powf+3)& (0+255),f,b
 10426   00328E  33E2               	rrcf	(??_powf+2)& (0+255),f,b
 10427   003290  33E1               	rrcf	(??_powf+1)& (0+255),f,b
 10428   003292  2FE0               	decfsz	??_powf& (0+255),f,b
 10429   003294  EF3F  F019         	goto	u6625
 10430   003298                     u6627:
 10431   003298  0100               	movlb	0	; () banked
 10432   00329A  BFE4               	btfsc	(??_powf+4)& (0+255),7,b
 10433   00329C  EF5C  F019         	goto	u6630
 10434   0032A0  51E4               	movf	(??_powf+4)& (0+255),w,b
 10435   0032A2  11E3               	iorwf	(??_powf+3)& (0+255),w,b
 10436   0032A4  11E2               	iorwf	(??_powf+2)& (0+255),w,b
 10437   0032A6  E106               	bnz	u6631
 10438   0032A8  05E1               	decf	(??_powf+1)& (0+255),w,b
 10439   0032AA  B0D8               	btfsc	status,0,c
 10440   0032AC  EF5A  F019         	goto	u6631
 10441   0032B0  EF5C  F019         	goto	u6630
 10442   0032B4                     u6631:
 10443   0032B4  EF74  F019         	goto	l1433
 10444   0032B8                     u6630:
 10445   0032B8                     
 10446                           ; BSR set to: 0
 10447   0032B8  C1B4  F02B         	movff	powf@z,scalbnf@x
 10448   0032BC  C1B5  F02C         	movff	powf@z+1,scalbnf@x+1
 10449   0032C0  C1B6  F02D         	movff	powf@z+2,scalbnf@x+2
 10450   0032C4  C1B7  F02E         	movff	powf@z+3,scalbnf@x+3
 10451   0032C8  C188  F02F         	movff	powf@n,scalbnf@n
 10452   0032CC  C189  F030         	movff	powf@n+1,scalbnf@n+1
 10453   0032D0  EC59  F02D         	call	_scalbnf	;wreg free
 10454   0032D4  C02B  F1B4         	movff	?_scalbnf,powf@z
 10455   0032D8  C02C  F1B5         	movff	?_scalbnf+1,powf@z+1
 10456   0032DC  C02D  F1B6         	movff	?_scalbnf+2,powf@z+2
 10457   0032E0  C02E  F1B7         	movff	?_scalbnf+3,powf@z+3
 10458   0032E4  EF7C  F019         	goto	l7504
 10459   0032E8                     l1433:
 10460                           
 10461                           ; BSR set to: 0
 10462   0032E8  C1A8  F1B4         	movff	powf@j,powf@z
 10463   0032EC  C1A9  F1B5         	movff	powf@j+1,powf@z+1
 10464   0032F0  C1AA  F1B6         	movff	powf@j+2,powf@z+2
 10465   0032F4  C1AB  F1B7         	movff	powf@j+3,powf@z+3
 10466   0032F8                     l7504:
 10467   0032F8  0101               	movlb	1	; () banked
 10468   0032FA  51B4               	movf	powf@z& (0+255),w,b
 10469   0032FC  11B5               	iorwf	(powf@z+1)& (0+255),w,b
 10470   0032FE  11B6               	iorwf	(powf@z+2)& (0+255),w,b
 10471   003300  11B7               	iorwf	(powf@z+3)& (0+255),w,b
 10472   003302  B4D8               	btfsc	status,2,c
 10473   003304  EF86  F019         	goto	u6641
 10474   003308  EF88  F019         	goto	u6640
 10475   00330C                     u6641:
 10476   00330C  EFA1  F00A         	goto	l7190
 10477   003310                     u6640:
 10478   003310                     
 10479                           ; BSR set to: 1
 10480   003310  5164               	movf	powf@sn& (0+255),w,b
 10481   003312  1BB4               	xorwf	powf@z& (0+255),f,b
 10482   003314  5165               	movf	(powf@sn+1)& (0+255),w,b
 10483   003316  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
 10484   003318  5166               	movf	(powf@sn+2)& (0+255),w,b
 10485   00331A  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
 10486   00331C  5167               	movf	(powf@sn+3)& (0+255),w,b
 10487   00331E  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
 10488   003320  EFA1  F00A         	goto	l7190
 10489   003324                     l1367:
 10490   003324  0012               	return		;funcret
 10491   003326                     __end_of_powf:
 10492                           	callstack 0
 10493                           
 10494 ;; *************** function _sqrtf *****************
 10495 ;; Defined at:
 10496 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sqrtf.c"
 10497 ;; Parameters:    Size  Location     Type
 10498 ;;  x               4   17[COMRAM] float 
 10499 ;; Auto vars:     Size  Location     Type
 10500 ;;  ix              4   50[COMRAM] struct .
 10501 ;;  r               4   46[COMRAM] unsigned long 
 10502 ;;  m               4   42[COMRAM] long 
 10503 ;;  t               4   38[COMRAM] long 
 10504 ;;  q               4   34[COMRAM] long 
 10505 ;;  i               4   30[COMRAM] long 
 10506 ;;  s               4   26[COMRAM] long 
 10507 ;;  z               4    0        float 
 10508 ;; Return value:  Size  Location     Type
 10509 ;;                  4   17[COMRAM] float 
 10510 ;; Registers used:
 10511 ;;		wreg, status,2, status,0
 10512 ;; Tracked objects:
 10513 ;;		On entry : 0/0
 10514 ;;		On exit  : 0/0
 10515 ;;		Unchanged: 0/0
 10516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10517 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10518 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10519 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10520 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10521 ;;Total ram usage:       37 bytes
 10522 ;; Hardware stack levels used: 1
 10523 ;; Hardware stack levels required when called: 2
 10524 ;; This function calls:
 10525 ;;		Nothing
 10526 ;; This function is called by:
 10527 ;;		_decide_action
 10528 ;;		_powf
 10529 ;; This function uses a non-reentrant model
 10530 ;;
 10531                           
 10532                           	psect	text28
 10533   00506E                     __ptext28:
 10534                           	callstack 0
 10535   00506E                     _sqrtf:
 10536                           	callstack 27
 10537   00506E  C012  F033         	movff	sqrtf@x,sqrtf@ix
 10538   005072  C013  F034         	movff	sqrtf@x+1,sqrtf@ix+1
 10539   005076  C014  F035         	movff	sqrtf@x+2,sqrtf@ix+2
 10540   00507A  C015  F036         	movff	sqrtf@x+3,sqrtf@ix+3
 10541   00507E  0E00               	movlw	0
 10542   005080  1433               	andwf	sqrtf@ix^0,w,c
 10543   005082  6E16               	movwf	??_sqrtf^0,c
 10544   005084  0E00               	movlw	0
 10545   005086  1434               	andwf	(sqrtf@ix+1)^0,w,c
 10546   005088  6E17               	movwf	(??_sqrtf+1)^0,c
 10547   00508A  0E80               	movlw	128
 10548   00508C  1435               	andwf	(sqrtf@ix+2)^0,w,c
 10549   00508E  6E18               	movwf	(??_sqrtf+2)^0,c
 10550   005090  0E7F               	movlw	127
 10551   005092  1436               	andwf	(sqrtf@ix+3)^0,w,c
 10552   005094  6E19               	movwf	(??_sqrtf+3)^0,c
 10553   005096  0E80               	movlw	128
 10554   005098  1818               	xorwf	(??_sqrtf+2)^0,w,c
 10555   00509A  E109               	bnz	u3651
 10556   00509C  0E7F               	movlw	127
 10557   00509E  1819               	xorwf	(??_sqrtf+3)^0,w,c
 10558   0050A0  1016               	iorwf	??_sqrtf^0,w,c
 10559   0050A2  1017               	iorwf	(??_sqrtf+1)^0,w,c
 10560   0050A4  A4D8               	btfss	status,2,c
 10561   0050A6  EF57  F028         	goto	u3651
 10562   0050AA  EF59  F028         	goto	u3650
 10563   0050AE                     u3651:
 10564   0050AE  EF89  F028         	goto	l4252
 10565   0050B2                     u3650:
 10566   0050B2  0EFF               	movlw	255
 10567   0050B4  1433               	andwf	sqrtf@ix^0,w,c
 10568   0050B6  6E16               	movwf	??_sqrtf^0,c
 10569   0050B8  0EFF               	movlw	255
 10570   0050BA  1434               	andwf	(sqrtf@ix+1)^0,w,c
 10571   0050BC  6E17               	movwf	(??_sqrtf+1)^0,c
 10572   0050BE  0E7F               	movlw	127
 10573   0050C0  1435               	andwf	(sqrtf@ix+2)^0,w,c
 10574   0050C2  6E18               	movwf	(??_sqrtf+2)^0,c
 10575   0050C4  0E00               	movlw	0
 10576   0050C6  1436               	andwf	(sqrtf@ix+3)^0,w,c
 10577   0050C8  6E19               	movwf	(??_sqrtf+3)^0,c
 10578   0050CA  5016               	movf	??_sqrtf^0,w,c
 10579   0050CC  1017               	iorwf	(??_sqrtf+1)^0,w,c
 10580   0050CE  1018               	iorwf	(??_sqrtf+2)^0,w,c
 10581   0050D0  1019               	iorwf	(??_sqrtf+3)^0,w,c
 10582   0050D2  A4D8               	btfss	status,2,c
 10583   0050D4  EF6E  F028         	goto	u3661
 10584   0050D8  EF70  F028         	goto	u3660
 10585   0050DC                     u3661:
 10586   0050DC  EF77  F028         	goto	l4246
 10587   0050E0                     u3660:
 10588   0050E0  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 10589   0050E2  EF77  F028         	goto	u3670
 10590   0050E6  EF75  F028         	goto	u3671
 10591   0050EA                     u3671:
 10592   0050EA  EF7F  F028         	goto	l4248
 10593   0050EE                     u3670:
 10594   0050EE                     l4246:
 10595   0050EE  0EFF               	movlw	255
 10596   0050F0  1233               	iorwf	sqrtf@ix^0,f,c
 10597   0050F2  0EFF               	movlw	255
 10598   0050F4  1234               	iorwf	(sqrtf@ix+1)^0,f,c
 10599   0050F6  0E7F               	movlw	127
 10600   0050F8  1235               	iorwf	(sqrtf@ix+2)^0,f,c
 10601   0050FA  0E00               	movlw	0
 10602   0050FC  1236               	iorwf	(sqrtf@ix+3)^0,f,c
 10603   0050FE                     l4248:
 10604   0050FE  C033  F012         	movff	sqrtf@ix,?_sqrtf
 10605   005102  C034  F013         	movff	sqrtf@ix+1,?_sqrtf+1
 10606   005106  C035  F014         	movff	sqrtf@ix+2,?_sqrtf+2
 10607   00510A  C036  F015         	movff	sqrtf@ix+3,?_sqrtf+3
 10608   00510E  EF25  F02A         	goto	l1459
 10609   005112                     l4252:
 10610   005112  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 10611   005114  EF98  F028         	goto	u3680
 10612   005118  5036               	movf	(sqrtf@ix+3)^0,w,c
 10613   00511A  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 10614   00511C  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 10615   00511E  E106               	bnz	u3681
 10616   005120  0433               	decf	sqrtf@ix^0,w,c
 10617   005122  B0D8               	btfsc	status,0,c
 10618   005124  EF96  F028         	goto	u3681
 10619   005128  EF98  F028         	goto	u3680
 10620   00512C                     u3681:
 10621   00512C  EFCF  F028         	goto	l4268
 10622   005130                     u3680:
 10623   005130  0EFF               	movlw	255
 10624   005132  1433               	andwf	sqrtf@ix^0,w,c
 10625   005134  6E16               	movwf	??_sqrtf^0,c
 10626   005136  0EFF               	movlw	255
 10627   005138  1434               	andwf	(sqrtf@ix+1)^0,w,c
 10628   00513A  6E17               	movwf	(??_sqrtf+1)^0,c
 10629   00513C  0EFF               	movlw	255
 10630   00513E  1435               	andwf	(sqrtf@ix+2)^0,w,c
 10631   005140  6E18               	movwf	(??_sqrtf+2)^0,c
 10632   005142  0E7F               	movlw	127
 10633   005144  1436               	andwf	(sqrtf@ix+3)^0,w,c
 10634   005146  6E19               	movwf	(??_sqrtf+3)^0,c
 10635   005148  5016               	movf	??_sqrtf^0,w,c
 10636   00514A  1017               	iorwf	(??_sqrtf+1)^0,w,c
 10637   00514C  1018               	iorwf	(??_sqrtf+2)^0,w,c
 10638   00514E  1019               	iorwf	(??_sqrtf+3)^0,w,c
 10639   005150  A4D8               	btfss	status,2,c
 10640   005152  EFAD  F028         	goto	u3691
 10641   005156  EFAF  F028         	goto	u3690
 10642   00515A                     u3691:
 10643   00515A  EFB9  F028         	goto	l4260
 10644   00515E                     u3690:
 10645   00515E  0E00               	movlw	0
 10646   005160  6E12               	movwf	?_sqrtf^0,c
 10647   005162  0E00               	movlw	0
 10648   005164  6E13               	movwf	(?_sqrtf+1)^0,c
 10649   005166  0E00               	movlw	0
 10650   005168  6E14               	movwf	(?_sqrtf+2)^0,c
 10651   00516A  0E00               	movlw	0
 10652   00516C  6E15               	movwf	(?_sqrtf+3)^0,c
 10653   00516E  EF25  F02A         	goto	l1459
 10654   005172                     l4260:
 10655   005172  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 10656   005174  EFC0  F028         	goto	u3700
 10657   005178  EFBE  F028         	goto	u3701
 10658   00517C                     u3701:
 10659   00517C  EFCF  F028         	goto	l4268
 10660   005180                     u3700:
 10661   005180  0E00               	movlw	0
 10662   005182  0100               	movlb	0	; () banked
 10663   005184  6FD1               	movwf	(_errno+1)& (0+255),b
 10664   005186  0E21               	movlw	33
 10665   005188  6FD0               	movwf	_errno& (0+255),b
 10666   00518A  0EFF               	movlw	255
 10667   00518C  6E33               	movwf	sqrtf@ix^0,c
 10668   00518E  0EFF               	movlw	255
 10669   005190  6E34               	movwf	(sqrtf@ix+1)^0,c
 10670   005192  0EFF               	movlw	255
 10671   005194  6E35               	movwf	(sqrtf@ix+2)^0,c
 10672   005196  0E7F               	movlw	127
 10673   005198  6E36               	movwf	(sqrtf@ix+3)^0,c
 10674   00519A  EF7F  F028         	goto	l4248
 10675   00519E                     l4268:
 10676   00519E  0E17               	movlw	23
 10677   0051A0  6E16               	movwf	??_sqrtf^0,c
 10678   0051A2  C033  F017         	movff	sqrtf@ix,??_sqrtf+1
 10679   0051A6  C034  F018         	movff	sqrtf@ix+1,??_sqrtf+2
 10680   0051AA  C035  F019         	movff	sqrtf@ix+2,??_sqrtf+3
 10681   0051AE  C036  F01A         	movff	sqrtf@ix+3,??_sqrtf+4
 10682   0051B2                     u3715:
 10683   0051B2  6616               	tstfsz	??_sqrtf^0,c
 10684   0051B4  EFDE  F028         	goto	u3716
 10685   0051B8  EFE6  F028         	goto	u3717
 10686   0051BC                     u3716:
 10687   0051BC  341A               	rlcf	(??_sqrtf+4)^0,w,c
 10688   0051BE  321A               	rrcf	(??_sqrtf+4)^0,f,c
 10689   0051C0  3219               	rrcf	(??_sqrtf+3)^0,f,c
 10690   0051C2  3218               	rrcf	(??_sqrtf+2)^0,f,c
 10691   0051C4  3217               	rrcf	(??_sqrtf+1)^0,f,c
 10692   0051C6  2E16               	decfsz	??_sqrtf^0,f,c
 10693   0051C8  EFD9  F028         	goto	u3715
 10694   0051CC                     u3717:
 10695   0051CC  C017  F02B         	movff	??_sqrtf+1,sqrtf@m
 10696   0051D0  C018  F02C         	movff	??_sqrtf+2,sqrtf@m+1
 10697   0051D4  C019  F02D         	movff	??_sqrtf+3,sqrtf@m+2
 10698   0051D8  C01A  F02E         	movff	??_sqrtf+4,sqrtf@m+3
 10699   0051DC  502B               	movf	sqrtf@m^0,w,c
 10700   0051DE  102C               	iorwf	(sqrtf@m+1)^0,w,c
 10701   0051E0  102D               	iorwf	(sqrtf@m+2)^0,w,c
 10702   0051E2  102E               	iorwf	(sqrtf@m+3)^0,w,c
 10703   0051E4  A4D8               	btfss	status,2,c
 10704   0051E6  EFF7  F028         	goto	u3721
 10705   0051EA  EFF9  F028         	goto	u3720
 10706   0051EE                     u3721:
 10707   0051EE  EF29  F029         	goto	l1463
 10708   0051F2                     u3720:
 10709   0051F2  0E00               	movlw	0
 10710   0051F4  6E1F               	movwf	sqrtf@i^0,c
 10711   0051F6  0E00               	movlw	0
 10712   0051F8  6E20               	movwf	(sqrtf@i+1)^0,c
 10713   0051FA  0E00               	movlw	0
 10714   0051FC  6E21               	movwf	(sqrtf@i+2)^0,c
 10715   0051FE  0E00               	movlw	0
 10716   005200  6E22               	movwf	(sqrtf@i+3)^0,c
 10717   005202  EF0E  F029         	goto	l4276
 10718   005206                     l4272:
 10719   005206  90D8               	bcf	status,0,c
 10720   005208  3633               	rlcf	sqrtf@ix^0,f,c
 10721   00520A  3634               	rlcf	(sqrtf@ix+1)^0,f,c
 10722   00520C  3635               	rlcf	(sqrtf@ix+2)^0,f,c
 10723   00520E  3636               	rlcf	(sqrtf@ix+3)^0,f,c
 10724   005210  0E01               	movlw	1
 10725   005212  261F               	addwf	sqrtf@i^0,f,c
 10726   005214  0E00               	movlw	0
 10727   005216  2220               	addwfc	(sqrtf@i+1)^0,f,c
 10728   005218  2221               	addwfc	(sqrtf@i+2)^0,f,c
 10729   00521A  2222               	addwfc	(sqrtf@i+3)^0,f,c
 10730   00521C                     l4276:
 10731   00521C  AE35               	btfss	(sqrtf@ix+2)^0,7,c
 10732   00521E  EF13  F029         	goto	u3731
 10733   005222  EF15  F029         	goto	u3730
 10734   005226                     u3731:
 10735   005226  EF03  F029         	goto	l4272
 10736   00522A                     u3730:
 10737   00522A  0EFF               	movlw	255
 10738   00522C  241F               	addwf	sqrtf@i^0,w,c
 10739   00522E  6E16               	movwf	??_sqrtf^0,c
 10740   005230  0EFF               	movlw	255
 10741   005232  2020               	addwfc	(sqrtf@i+1)^0,w,c
 10742   005234  6E17               	movwf	(??_sqrtf+1)^0,c
 10743   005236  0EFF               	movlw	255
 10744   005238  2021               	addwfc	(sqrtf@i+2)^0,w,c
 10745   00523A  6E18               	movwf	(??_sqrtf+2)^0,c
 10746   00523C  0EFF               	movlw	255
 10747   00523E  2022               	addwfc	(sqrtf@i+3)^0,w,c
 10748   005240  6E19               	movwf	(??_sqrtf+3)^0,c
 10749   005242  5016               	movf	??_sqrtf^0,w,c
 10750   005244  5E2B               	subwf	sqrtf@m^0,f,c
 10751   005246  5017               	movf	(??_sqrtf+1)^0,w,c
 10752   005248  5A2C               	subwfb	(sqrtf@m+1)^0,f,c
 10753   00524A  5018               	movf	(??_sqrtf+2)^0,w,c
 10754   00524C  5A2D               	subwfb	(sqrtf@m+2)^0,f,c
 10755   00524E  5019               	movf	(??_sqrtf+3)^0,w,c
 10756   005250  5A2E               	subwfb	(sqrtf@m+3)^0,f,c
 10757   005252                     l1463:
 10758   005252  0E81               	movlw	129
 10759   005254  262B               	addwf	sqrtf@m^0,f,c
 10760   005256  0EFF               	movlw	255
 10761   005258  222C               	addwfc	(sqrtf@m+1)^0,f,c
 10762   00525A  0EFF               	movlw	255
 10763   00525C  222D               	addwfc	(sqrtf@m+2)^0,f,c
 10764   00525E  0EFF               	movlw	255
 10765   005260  222E               	addwfc	(sqrtf@m+3)^0,f,c
 10766   005262  0EFF               	movlw	255
 10767   005264  1433               	andwf	sqrtf@ix^0,w,c
 10768   005266  6E16               	movwf	??_sqrtf^0,c
 10769   005268  0EFF               	movlw	255
 10770   00526A  1434               	andwf	(sqrtf@ix+1)^0,w,c
 10771   00526C  6E17               	movwf	(??_sqrtf+1)^0,c
 10772   00526E  0E7F               	movlw	127
 10773   005270  1435               	andwf	(sqrtf@ix+2)^0,w,c
 10774   005272  6E18               	movwf	(??_sqrtf+2)^0,c
 10775   005274  0E00               	movlw	0
 10776   005276  1436               	andwf	(sqrtf@ix+3)^0,w,c
 10777   005278  6E19               	movwf	(??_sqrtf+3)^0,c
 10778   00527A  0E00               	movlw	0
 10779   00527C  1016               	iorwf	??_sqrtf^0,w,c
 10780   00527E  6E33               	movwf	sqrtf@ix^0,c
 10781   005280  0E00               	movlw	0
 10782   005282  1017               	iorwf	(??_sqrtf+1)^0,w,c
 10783   005284  6E34               	movwf	(sqrtf@ix+1)^0,c
 10784   005286  0E80               	movlw	128
 10785   005288  1018               	iorwf	(??_sqrtf+2)^0,w,c
 10786   00528A  6E35               	movwf	(sqrtf@ix+2)^0,c
 10787   00528C  0E00               	movlw	0
 10788   00528E  1019               	iorwf	(??_sqrtf+3)^0,w,c
 10789   005290  6E36               	movwf	(sqrtf@ix+3)^0,c
 10790   005292  A02B               	btfss	sqrtf@m^0,0,c
 10791   005294  EF4E  F029         	goto	u3741
 10792   005298  EF50  F029         	goto	u3740
 10793   00529C                     u3741:
 10794   00529C  EF58  F029         	goto	l1467
 10795   0052A0                     u3740:
 10796   0052A0  5033               	movf	sqrtf@ix^0,w,c
 10797   0052A2  2633               	addwf	sqrtf@ix^0,f,c
 10798   0052A4  5034               	movf	(sqrtf@ix+1)^0,w,c
 10799   0052A6  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 10800   0052A8  5035               	movf	(sqrtf@ix+2)^0,w,c
 10801   0052AA  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 10802   0052AC  5036               	movf	(sqrtf@ix+3)^0,w,c
 10803   0052AE  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 10804   0052B0                     l1467:
 10805   0052B0  342E               	rlcf	(sqrtf@m+3)^0,w,c
 10806   0052B2  322E               	rrcf	(sqrtf@m+3)^0,f,c
 10807   0052B4  322D               	rrcf	(sqrtf@m+2)^0,f,c
 10808   0052B6  322C               	rrcf	(sqrtf@m+1)^0,f,c
 10809   0052B8  322B               	rrcf	sqrtf@m^0,f,c
 10810   0052BA  5033               	movf	sqrtf@ix^0,w,c
 10811   0052BC  2633               	addwf	sqrtf@ix^0,f,c
 10812   0052BE  5034               	movf	(sqrtf@ix+1)^0,w,c
 10813   0052C0  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 10814   0052C2  5035               	movf	(sqrtf@ix+2)^0,w,c
 10815   0052C4  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 10816   0052C6  5036               	movf	(sqrtf@ix+3)^0,w,c
 10817   0052C8  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 10818   0052CA  0E00               	movlw	0
 10819   0052CC  6E1B               	movwf	sqrtf@s^0,c
 10820   0052CE  0E00               	movlw	0
 10821   0052D0  6E1C               	movwf	(sqrtf@s+1)^0,c
 10822   0052D2  0E00               	movlw	0
 10823   0052D4  6E1D               	movwf	(sqrtf@s+2)^0,c
 10824   0052D6  0E00               	movlw	0
 10825   0052D8  6E1E               	movwf	(sqrtf@s+3)^0,c
 10826   0052DA  C01B  F023         	movff	sqrtf@s,sqrtf@q
 10827   0052DE  C01C  F024         	movff	sqrtf@s+1,sqrtf@q+1
 10828   0052E2  C01D  F025         	movff	sqrtf@s+2,sqrtf@q+2
 10829   0052E6  C01E  F026         	movff	sqrtf@s+3,sqrtf@q+3
 10830   0052EA  0E00               	movlw	0
 10831   0052EC  6E2F               	movwf	sqrtf@r^0,c
 10832   0052EE  0E00               	movlw	0
 10833   0052F0  6E30               	movwf	(sqrtf@r+1)^0,c
 10834   0052F2  0E00               	movlw	0
 10835   0052F4  6E31               	movwf	(sqrtf@r+2)^0,c
 10836   0052F6  0E01               	movlw	1
 10837   0052F8  6E32               	movwf	(sqrtf@r+3)^0,c
 10838   0052FA  EFC7  F029         	goto	l4294
 10839   0052FE                     l4288:
 10840   0052FE  501B               	movf	sqrtf@s^0,w,c
 10841   005300  242F               	addwf	sqrtf@r^0,w,c
 10842   005302  6E27               	movwf	sqrtf@t^0,c
 10843   005304  501C               	movf	(sqrtf@s+1)^0,w,c
 10844   005306  2030               	addwfc	(sqrtf@r+1)^0,w,c
 10845   005308  6E28               	movwf	(sqrtf@t+1)^0,c
 10846   00530A  501D               	movf	(sqrtf@s+2)^0,w,c
 10847   00530C  2031               	addwfc	(sqrtf@r+2)^0,w,c
 10848   00530E  6E29               	movwf	(sqrtf@t+2)^0,c
 10849   005310  501E               	movf	(sqrtf@s+3)^0,w,c
 10850   005312  2032               	addwfc	(sqrtf@r+3)^0,w,c
 10851   005314  6E2A               	movwf	(sqrtf@t+3)^0,c
 10852   005316  5027               	movf	sqrtf@t^0,w,c
 10853   005318  5C33               	subwf	sqrtf@ix^0,w,c
 10854   00531A  5028               	movf	(sqrtf@t+1)^0,w,c
 10855   00531C  5834               	subwfb	(sqrtf@ix+1)^0,w,c
 10856   00531E  5029               	movf	(sqrtf@t+2)^0,w,c
 10857   005320  5835               	subwfb	(sqrtf@ix+2)^0,w,c
 10858   005322  5036               	movf	(sqrtf@ix+3)^0,w,c
 10859   005324  0A80               	xorlw	128
 10860   005326  6E16               	movwf	??_sqrtf^0,c
 10861   005328  502A               	movf	(sqrtf@t+3)^0,w,c
 10862   00532A  0A80               	xorlw	128
 10863   00532C  5816               	subwfb	??_sqrtf^0,w,c
 10864   00532E  A0D8               	btfss	status,0,c
 10865   005330  EF9C  F029         	goto	u3751
 10866   005334  EF9E  F029         	goto	u3750
 10867   005338                     u3751:
 10868   005338  EFBA  F029         	goto	l1470
 10869   00533C                     u3750:
 10870   00533C  5027               	movf	sqrtf@t^0,w,c
 10871   00533E  242F               	addwf	sqrtf@r^0,w,c
 10872   005340  6E1B               	movwf	sqrtf@s^0,c
 10873   005342  5028               	movf	(sqrtf@t+1)^0,w,c
 10874   005344  2030               	addwfc	(sqrtf@r+1)^0,w,c
 10875   005346  6E1C               	movwf	(sqrtf@s+1)^0,c
 10876   005348  5029               	movf	(sqrtf@t+2)^0,w,c
 10877   00534A  2031               	addwfc	(sqrtf@r+2)^0,w,c
 10878   00534C  6E1D               	movwf	(sqrtf@s+2)^0,c
 10879   00534E  502A               	movf	(sqrtf@t+3)^0,w,c
 10880   005350  2032               	addwfc	(sqrtf@r+3)^0,w,c
 10881   005352  6E1E               	movwf	(sqrtf@s+3)^0,c
 10882   005354  5027               	movf	sqrtf@t^0,w,c
 10883   005356  5E33               	subwf	sqrtf@ix^0,f,c
 10884   005358  5028               	movf	(sqrtf@t+1)^0,w,c
 10885   00535A  5A34               	subwfb	(sqrtf@ix+1)^0,f,c
 10886   00535C  5029               	movf	(sqrtf@t+2)^0,w,c
 10887   00535E  5A35               	subwfb	(sqrtf@ix+2)^0,f,c
 10888   005360  502A               	movf	(sqrtf@t+3)^0,w,c
 10889   005362  5A36               	subwfb	(sqrtf@ix+3)^0,f,c
 10890   005364  502F               	movf	sqrtf@r^0,w,c
 10891   005366  2623               	addwf	sqrtf@q^0,f,c
 10892   005368  5030               	movf	(sqrtf@r+1)^0,w,c
 10893   00536A  2224               	addwfc	(sqrtf@q+1)^0,f,c
 10894   00536C  5031               	movf	(sqrtf@r+2)^0,w,c
 10895   00536E  2225               	addwfc	(sqrtf@q+2)^0,f,c
 10896   005370  5032               	movf	(sqrtf@r+3)^0,w,c
 10897   005372  2226               	addwfc	(sqrtf@q+3)^0,f,c
 10898   005374                     l1470:
 10899   005374  5033               	movf	sqrtf@ix^0,w,c
 10900   005376  2633               	addwf	sqrtf@ix^0,f,c
 10901   005378  5034               	movf	(sqrtf@ix+1)^0,w,c
 10902   00537A  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 10903   00537C  5035               	movf	(sqrtf@ix+2)^0,w,c
 10904   00537E  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 10905   005380  5036               	movf	(sqrtf@ix+3)^0,w,c
 10906   005382  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 10907   005384  90D8               	bcf	status,0,c
 10908   005386  3232               	rrcf	(sqrtf@r+3)^0,f,c
 10909   005388  3231               	rrcf	(sqrtf@r+2)^0,f,c
 10910   00538A  3230               	rrcf	(sqrtf@r+1)^0,f,c
 10911   00538C  322F               	rrcf	sqrtf@r^0,f,c
 10912   00538E                     l4294:
 10913   00538E  502F               	movf	sqrtf@r^0,w,c
 10914   005390  1030               	iorwf	(sqrtf@r+1)^0,w,c
 10915   005392  1031               	iorwf	(sqrtf@r+2)^0,w,c
 10916   005394  1032               	iorwf	(sqrtf@r+3)^0,w,c
 10917   005396  A4D8               	btfss	status,2,c
 10918   005398  EFD0  F029         	goto	u3761
 10919   00539C  EFD2  F029         	goto	u3760
 10920   0053A0                     u3761:
 10921   0053A0  EF7F  F029         	goto	l4288
 10922   0053A4                     u3760:
 10923   0053A4  5033               	movf	sqrtf@ix^0,w,c
 10924   0053A6  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 10925   0053A8  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 10926   0053AA  1036               	iorwf	(sqrtf@ix+3)^0,w,c
 10927   0053AC  B4D8               	btfsc	status,2,c
 10928   0053AE  EFDB  F029         	goto	u3771
 10929   0053B2  EFDD  F029         	goto	u3770
 10930   0053B6                     u3771:
 10931   0053B6  EFF1  F029         	goto	l1472
 10932   0053BA                     u3770:
 10933   0053BA  0E01               	movlw	1
 10934   0053BC  1423               	andwf	sqrtf@q^0,w,c
 10935   0053BE  6E16               	movwf	??_sqrtf^0,c
 10936   0053C0  0E00               	movlw	0
 10937   0053C2  1424               	andwf	(sqrtf@q+1)^0,w,c
 10938   0053C4  6E17               	movwf	(??_sqrtf+1)^0,c
 10939   0053C6  0E00               	movlw	0
 10940   0053C8  1425               	andwf	(sqrtf@q+2)^0,w,c
 10941   0053CA  6E18               	movwf	(??_sqrtf+2)^0,c
 10942   0053CC  0E00               	movlw	0
 10943   0053CE  1426               	andwf	(sqrtf@q+3)^0,w,c
 10944   0053D0  6E19               	movwf	(??_sqrtf+3)^0,c
 10945   0053D2  5016               	movf	??_sqrtf^0,w,c
 10946   0053D4  2623               	addwf	sqrtf@q^0,f,c
 10947   0053D6  5017               	movf	(??_sqrtf+1)^0,w,c
 10948   0053D8  2224               	addwfc	(sqrtf@q+1)^0,f,c
 10949   0053DA  5018               	movf	(??_sqrtf+2)^0,w,c
 10950   0053DC  2225               	addwfc	(sqrtf@q+2)^0,f,c
 10951   0053DE  5019               	movf	(??_sqrtf+3)^0,w,c
 10952   0053E0  2226               	addwfc	(sqrtf@q+3)^0,f,c
 10953   0053E2                     l1472:
 10954   0053E2  C023  F016         	movff	sqrtf@q,??_sqrtf
 10955   0053E6  C024  F017         	movff	sqrtf@q+1,??_sqrtf+1
 10956   0053EA  C025  F018         	movff	sqrtf@q+2,??_sqrtf+2
 10957   0053EE  C026  F019         	movff	sqrtf@q+3,??_sqrtf+3
 10958   0053F2  3419               	rlcf	(??_sqrtf+3)^0,w,c
 10959   0053F4  3219               	rrcf	(??_sqrtf+3)^0,f,c
 10960   0053F6  3218               	rrcf	(??_sqrtf+2)^0,f,c
 10961   0053F8  3217               	rrcf	(??_sqrtf+1)^0,f,c
 10962   0053FA  3216               	rrcf	??_sqrtf^0,f,c
 10963   0053FC  0E00               	movlw	0
 10964   0053FE  2416               	addwf	??_sqrtf^0,w,c
 10965   005400  6E33               	movwf	sqrtf@ix^0,c
 10966   005402  0E00               	movlw	0
 10967   005404  2017               	addwfc	(??_sqrtf+1)^0,w,c
 10968   005406  6E34               	movwf	(sqrtf@ix+1)^0,c
 10969   005408  0E00               	movlw	0
 10970   00540A  2018               	addwfc	(??_sqrtf+2)^0,w,c
 10971   00540C  6E35               	movwf	(sqrtf@ix+2)^0,c
 10972   00540E  0E3F               	movlw	63
 10973   005410  2019               	addwfc	(??_sqrtf+3)^0,w,c
 10974   005412  6E36               	movwf	(sqrtf@ix+3)^0,c
 10975   005414  C02B  F016         	movff	sqrtf@m,??_sqrtf
 10976   005418  C02C  F017         	movff	sqrtf@m+1,??_sqrtf+1
 10977   00541C  C02D  F018         	movff	sqrtf@m+2,??_sqrtf+2
 10978   005420  C02E  F019         	movff	sqrtf@m+3,??_sqrtf+3
 10979   005424  0E17               	movlw	23
 10980   005426                     u3785:
 10981   005426  90D8               	bcf	status,0,c
 10982   005428  3616               	rlcf	??_sqrtf^0,f,c
 10983   00542A  3617               	rlcf	(??_sqrtf+1)^0,f,c
 10984   00542C  3618               	rlcf	(??_sqrtf+2)^0,f,c
 10985   00542E  3619               	rlcf	(??_sqrtf+3)^0,f,c
 10986   005430  2EE8               	decfsz	wreg,f,c
 10987   005432  EF13  F02A         	goto	u3785
 10988   005436  5016               	movf	??_sqrtf^0,w,c
 10989   005438  2633               	addwf	sqrtf@ix^0,f,c
 10990   00543A  5017               	movf	(??_sqrtf+1)^0,w,c
 10991   00543C  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 10992   00543E  5018               	movf	(??_sqrtf+2)^0,w,c
 10993   005440  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 10994   005442  5019               	movf	(??_sqrtf+3)^0,w,c
 10995   005444  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 10996   005446  EF7F  F028         	goto	l4248
 10997   00544A                     l1459:
 10998   00544A  0012               	return		;funcret
 10999   00544C                     __end_of_sqrtf:
 11000                           	callstack 0
 11001                           
 11002 ;; *************** function _scalbnf *****************
 11003 ;; Defined at:
 11004 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\scalbnf.c"
 11005 ;; Parameters:    Size  Location     Type
 11006 ;;  x               4   42[COMRAM] float 
 11007 ;;  n               2   46[COMRAM] int 
 11008 ;; Auto vars:     Size  Location     Type
 11009 ;;  y               4   56[COMRAM] float 
 11010 ;;  u               4   52[COMRAM] struct .
 11011 ;; Return value:  Size  Location     Type
 11012 ;;                  4   42[COMRAM] float 
 11013 ;; Registers used:
 11014 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11015 ;; Tracked objects:
 11016 ;;		On entry : 0/0
 11017 ;;		On exit  : 0/0
 11018 ;;		Unchanged: 0/0
 11019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11020 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11021 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11022 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11023 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11024 ;;Total ram usage:       18 bytes
 11025 ;; Hardware stack levels used: 1
 11026 ;; Hardware stack levels required when called: 3
 11027 ;; This function calls:
 11028 ;;		___flmul
 11029 ;; This function is called by:
 11030 ;;		_powf
 11031 ;; This function uses a non-reentrant model
 11032 ;;
 11033                           
 11034                           	psect	text29
 11035   005AB2                     __ptext29:
 11036                           	callstack 0
 11037   005AB2                     _scalbnf:
 11038                           	callstack 25
 11039   005AB2  C02B  F039         	movff	scalbnf@x,scalbnf@y
 11040   005AB6  C02C  F03A         	movff	scalbnf@x+1,scalbnf@y+1
 11041   005ABA  C02D  F03B         	movff	scalbnf@x+2,scalbnf@y+2
 11042   005ABE  C02E  F03C         	movff	scalbnf@x+3,scalbnf@y+3
 11043   005AC2  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11044   005AC4  EF6D  F02D         	goto	u4221
 11045   005AC8  5030               	movf	(scalbnf@n+1)^0,w,c
 11046   005ACA  E109               	bnz	u4220
 11047   005ACC  0E80               	movlw	128
 11048   005ACE  5C2F               	subwf	scalbnf@n^0,w,c
 11049   005AD0  A0D8               	btfss	status,0,c
 11050   005AD2  EF6D  F02D         	goto	u4221
 11051   005AD6  EF6F  F02D         	goto	u4220
 11052   005ADA                     u4221:
 11053   005ADA  EFCD  F02D         	goto	l4572
 11054   005ADE                     u4220:
 11055   005ADE  C039  F012         	movff	scalbnf@y,___flmul@b
 11056   005AE2  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11057   005AE6  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11058   005AEA  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11059   005AEE  0E00               	movlw	0
 11060   005AF0  6E16               	movwf	___flmul@a^0,c
 11061   005AF2  0E00               	movlw	0
 11062   005AF4  6E17               	movwf	(___flmul@a+1)^0,c
 11063   005AF6  0E00               	movlw	0
 11064   005AF8  6E18               	movwf	(___flmul@a+2)^0,c
 11065   005AFA  0E7F               	movlw	127
 11066   005AFC  6E19               	movwf	(___flmul@a+3)^0,c
 11067   005AFE  EC22  F026         	call	___flmul	;wreg free
 11068   005B02  C012  F039         	movff	?___flmul,scalbnf@y
 11069   005B06  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11070   005B0A  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11071   005B0E  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11072   005B12  0E81               	movlw	129
 11073   005B14  262F               	addwf	scalbnf@n^0,f,c
 11074   005B16  0EFF               	movlw	255
 11075   005B18  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11076   005B1A  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11077   005B1C  EF99  F02D         	goto	u4231
 11078   005B20  5030               	movf	(scalbnf@n+1)^0,w,c
 11079   005B22  E109               	bnz	u4230
 11080   005B24  0E80               	movlw	128
 11081   005B26  5C2F               	subwf	scalbnf@n^0,w,c
 11082   005B28  A0D8               	btfss	status,0,c
 11083   005B2A  EF99  F02D         	goto	u4231
 11084   005B2E  EF9B  F02D         	goto	u4230
 11085   005B32                     u4231:
 11086   005B32  EF37  F02E         	goto	l4588
 11087   005B36                     u4230:
 11088   005B36  C039  F012         	movff	scalbnf@y,___flmul@b
 11089   005B3A  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11090   005B3E  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11091   005B42  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11092   005B46  0E00               	movlw	0
 11093   005B48  6E16               	movwf	___flmul@a^0,c
 11094   005B4A  0E00               	movlw	0
 11095   005B4C  6E17               	movwf	(___flmul@a+1)^0,c
 11096   005B4E  0E00               	movlw	0
 11097   005B50  6E18               	movwf	(___flmul@a+2)^0,c
 11098   005B52  0E7F               	movlw	127
 11099   005B54  6E19               	movwf	(___flmul@a+3)^0,c
 11100   005B56  EC22  F026         	call	___flmul	;wreg free
 11101   005B5A  C012  F039         	movff	?___flmul,scalbnf@y
 11102   005B5E  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11103   005B62  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11104   005B66  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11105   005B6A  0E81               	movlw	129
 11106   005B6C  262F               	addwf	scalbnf@n^0,f,c
 11107   005B6E  0EFF               	movlw	255
 11108   005B70  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11109   005B72  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11110   005B74  EFC5  F02D         	goto	u4241
 11111   005B78  5030               	movf	(scalbnf@n+1)^0,w,c
 11112   005B7A  E109               	bnz	u4240
 11113   005B7C  0E80               	movlw	128
 11114   005B7E  5C2F               	subwf	scalbnf@n^0,w,c
 11115   005B80  A0D8               	btfss	status,0,c
 11116   005B82  EFC5  F02D         	goto	u4241
 11117   005B86  EFC7  F02D         	goto	u4240
 11118   005B8A                     u4241:
 11119   005B8A  EF37  F02E         	goto	l4588
 11120   005B8E                     u4240:
 11121   005B8E  0E00               	movlw	0
 11122   005B90  6E30               	movwf	(scalbnf@n+1)^0,c
 11123   005B92  0E7F               	movlw	127
 11124   005B94  6E2F               	movwf	scalbnf@n^0,c
 11125   005B96  EF37  F02E         	goto	l4588
 11126   005B9A                     l4572:
 11127   005B9A  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11128   005B9C  EFD9  F02D         	goto	u4251
 11129   005BA0  0E82               	movlw	130
 11130   005BA2  5C2F               	subwf	scalbnf@n^0,w,c
 11131   005BA4  0EFF               	movlw	255
 11132   005BA6  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11133   005BA8  B0D8               	btfsc	status,0,c
 11134   005BAA  EFD9  F02D         	goto	u4251
 11135   005BAE  EFDB  F02D         	goto	u4250
 11136   005BB2                     u4251:
 11137   005BB2  EF37  F02E         	goto	l4588
 11138   005BB6                     u4250:
 11139   005BB6  C039  F012         	movff	scalbnf@y,___flmul@b
 11140   005BBA  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11141   005BBE  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11142   005BC2  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11143   005BC6  0E00               	movlw	0
 11144   005BC8  6E16               	movwf	___flmul@a^0,c
 11145   005BCA  0E00               	movlw	0
 11146   005BCC  6E17               	movwf	(___flmul@a+1)^0,c
 11147   005BCE  0E80               	movlw	128
 11148   005BD0  6E18               	movwf	(___flmul@a+2)^0,c
 11149   005BD2  0E0C               	movlw	12
 11150   005BD4  6E19               	movwf	(___flmul@a+3)^0,c
 11151   005BD6  EC22  F026         	call	___flmul	;wreg free
 11152   005BDA  C012  F039         	movff	?___flmul,scalbnf@y
 11153   005BDE  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11154   005BE2  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11155   005BE6  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11156   005BEA  0E66               	movlw	102
 11157   005BEC  262F               	addwf	scalbnf@n^0,f,c
 11158   005BEE  0E00               	movlw	0
 11159   005BF0  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11160   005BF2  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11161   005BF4  EF05  F02E         	goto	u4261
 11162   005BF8  0E82               	movlw	130
 11163   005BFA  5C2F               	subwf	scalbnf@n^0,w,c
 11164   005BFC  0EFF               	movlw	255
 11165   005BFE  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11166   005C00  B0D8               	btfsc	status,0,c
 11167   005C02  EF05  F02E         	goto	u4261
 11168   005C06  EF07  F02E         	goto	u4260
 11169   005C0A                     u4261:
 11170   005C0A  EF37  F02E         	goto	l4588
 11171   005C0E                     u4260:
 11172   005C0E  C039  F012         	movff	scalbnf@y,___flmul@b
 11173   005C12  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11174   005C16  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11175   005C1A  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11176   005C1E  0E00               	movlw	0
 11177   005C20  6E16               	movwf	___flmul@a^0,c
 11178   005C22  0E00               	movlw	0
 11179   005C24  6E17               	movwf	(___flmul@a+1)^0,c
 11180   005C26  0E80               	movlw	128
 11181   005C28  6E18               	movwf	(___flmul@a+2)^0,c
 11182   005C2A  0E0C               	movlw	12
 11183   005C2C  6E19               	movwf	(___flmul@a+3)^0,c
 11184   005C2E  EC22  F026         	call	___flmul	;wreg free
 11185   005C32  C012  F039         	movff	?___flmul,scalbnf@y
 11186   005C36  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11187   005C3A  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11188   005C3E  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11189   005C42  0E66               	movlw	102
 11190   005C44  262F               	addwf	scalbnf@n^0,f,c
 11191   005C46  0E00               	movlw	0
 11192   005C48  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11193   005C4A  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11194   005C4C  EF31  F02E         	goto	u4271
 11195   005C50  0E82               	movlw	130
 11196   005C52  5C2F               	subwf	scalbnf@n^0,w,c
 11197   005C54  0EFF               	movlw	255
 11198   005C56  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11199   005C58  B0D8               	btfsc	status,0,c
 11200   005C5A  EF31  F02E         	goto	u4271
 11201   005C5E  EF33  F02E         	goto	u4270
 11202   005C62                     u4271:
 11203   005C62  EF37  F02E         	goto	l4588
 11204   005C66                     u4270:
 11205   005C66  0EFF               	movlw	255
 11206   005C68  6E30               	movwf	(scalbnf@n+1)^0,c
 11207   005C6A  0E82               	movlw	130
 11208   005C6C  6E2F               	movwf	scalbnf@n^0,c
 11209   005C6E                     l4588:
 11210   005C6E  0E7F               	movlw	127
 11211   005C70  242F               	addwf	scalbnf@n^0,w,c
 11212   005C72  6E31               	movwf	??_scalbnf^0,c
 11213   005C74  0E00               	movlw	0
 11214   005C76  2030               	addwfc	(scalbnf@n+1)^0,w,c
 11215   005C78  6E32               	movwf	(??_scalbnf+1)^0,c
 11216   005C7A  6A33               	clrf	(??_scalbnf+2)^0,c
 11217   005C7C  6A34               	clrf	(??_scalbnf+3)^0,c
 11218   005C7E  0E17               	movlw	23
 11219   005C80                     u4285:
 11220   005C80  90D8               	bcf	status,0,c
 11221   005C82  3631               	rlcf	??_scalbnf^0,f,c
 11222   005C84  3632               	rlcf	(??_scalbnf+1)^0,f,c
 11223   005C86  3633               	rlcf	(??_scalbnf+2)^0,f,c
 11224   005C88  3634               	rlcf	(??_scalbnf+3)^0,f,c
 11225   005C8A  2EE8               	decfsz	wreg,f,c
 11226   005C8C  EF40  F02E         	goto	u4285
 11227   005C90  C031  F035         	movff	??_scalbnf,scalbnf@u
 11228   005C94  C032  F036         	movff	??_scalbnf+1,scalbnf@u+1
 11229   005C98  C033  F037         	movff	??_scalbnf+2,scalbnf@u+2
 11230   005C9C  C034  F038         	movff	??_scalbnf+3,scalbnf@u+3
 11231   005CA0  C035  F012         	movff	scalbnf@u,___flmul@b
 11232   005CA4  C036  F013         	movff	scalbnf@u+1,___flmul@b+1
 11233   005CA8  C037  F014         	movff	scalbnf@u+2,___flmul@b+2
 11234   005CAC  C038  F015         	movff	scalbnf@u+3,___flmul@b+3
 11235   005CB0  C039  F016         	movff	scalbnf@y,___flmul@a
 11236   005CB4  C03A  F017         	movff	scalbnf@y+1,___flmul@a+1
 11237   005CB8  C03B  F018         	movff	scalbnf@y+2,___flmul@a+2
 11238   005CBC  C03C  F019         	movff	scalbnf@y+3,___flmul@a+3
 11239   005CC0  EC22  F026         	call	___flmul	;wreg free
 11240   005CC4  C012  F02B         	movff	?___flmul,scalbnf@x
 11241   005CC8  C013  F02C         	movff	?___flmul+1,scalbnf@x+1
 11242   005CCC  C014  F02D         	movff	?___flmul+2,scalbnf@x+2
 11243   005CD0  C015  F02E         	movff	?___flmul+3,scalbnf@x+3
 11244   005CD4  C02B  F02B         	movff	scalbnf@x,?_scalbnf
 11245   005CD8  C02C  F02C         	movff	scalbnf@x+1,?_scalbnf+1
 11246   005CDC  C02D  F02D         	movff	scalbnf@x+2,?_scalbnf+2
 11247   005CE0  C02E  F02E         	movff	scalbnf@x+3,?_scalbnf+3
 11248   005CE4  0012               	return		;funcret
 11249   005CE6                     __end_of_scalbnf:
 11250                           	callstack 0
 11251                           
 11252 ;; *************** function ___flmul *****************
 11253 ;; Defined at:
 11254 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 11255 ;; Parameters:    Size  Location     Type
 11256 ;;  b               4   17[COMRAM] float 
 11257 ;;  a               4   21[COMRAM] float 
 11258 ;; Auto vars:     Size  Location     Type
 11259 ;;  prod            4   36[COMRAM] struct .
 11260 ;;  grs             4   30[COMRAM] unsigned long 
 11261 ;;  temp            2   40[COMRAM] struct .
 11262 ;;  bexp            1   35[COMRAM] unsigned char 
 11263 ;;  aexp            1   34[COMRAM] unsigned char 
 11264 ;;  sign            1   29[COMRAM] unsigned char 
 11265 ;; Return value:  Size  Location     Type
 11266 ;;                  4   17[COMRAM] unsigned char 
 11267 ;; Registers used:
 11268 ;;		wreg, status,2, status,0, prodl, prodh
 11269 ;; Tracked objects:
 11270 ;;		On entry : 0/0
 11271 ;;		On exit  : 0/0
 11272 ;;		Unchanged: 0/0
 11273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11274 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11275 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11276 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11277 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11278 ;;Total ram usage:       25 bytes
 11279 ;; Hardware stack levels used: 1
 11280 ;; Hardware stack levels required when called: 2
 11281 ;; This function calls:
 11282 ;;		Nothing
 11283 ;; This function is called by:
 11284 ;;		_powf
 11285 ;;		_scalbnf
 11286 ;; This function uses a non-reentrant model
 11287 ;;
 11288                           
 11289                           	psect	text30
 11290   004C44                     __ptext30:
 11291                           	callstack 0
 11292   004C44                     ___flmul:
 11293                           	callstack 25
 11294   004C44  5015               	movf	(___flmul@b+3)^0,w,c
 11295   004C46  0B80               	andlw	128
 11296   004C48  6E1E               	movwf	___flmul@sign^0,c
 11297   004C4A  5015               	movf	(___flmul@b+3)^0,w,c
 11298   004C4C  2415               	addwf	(___flmul@b+3)^0,w,c
 11299   004C4E  6E24               	movwf	___flmul@bexp^0,c
 11300   004C50  AE14               	btfss	(___flmul@b+2)^0,7,c
 11301   004C52  EF2D  F026         	goto	u3311
 11302   004C56  EF2F  F026         	goto	u3310
 11303   004C5A                     u3311:
 11304   004C5A  EF30  F026         	goto	l4012
 11305   004C5E                     u3310:
 11306   004C5E  8024               	bsf	___flmul@bexp^0,0,c
 11307   004C60                     l4012:
 11308   004C60  5024               	movf	___flmul@bexp^0,w,c
 11309   004C62  B4D8               	btfsc	status,2,c
 11310   004C64  EF36  F026         	goto	u3321
 11311   004C68  EF38  F026         	goto	u3320
 11312   004C6C                     u3321:
 11313   004C6C  EF4B  F026         	goto	l4020
 11314   004C70                     u3320:
 11315   004C70  2824               	incf	___flmul@bexp^0,w,c
 11316   004C72  A4D8               	btfss	status,2,c
 11317   004C74  EF3E  F026         	goto	u3331
 11318   004C78  EF40  F026         	goto	u3330
 11319   004C7C                     u3331:
 11320   004C7C  EF48  F026         	goto	l4018
 11321   004C80                     u3330:
 11322   004C80  0E00               	movlw	0
 11323   004C82  6E12               	movwf	___flmul@b^0,c
 11324   004C84  0E00               	movlw	0
 11325   004C86  6E13               	movwf	(___flmul@b+1)^0,c
 11326   004C88  0E00               	movlw	0
 11327   004C8A  6E14               	movwf	(___flmul@b+2)^0,c
 11328   004C8C  0E00               	movlw	0
 11329   004C8E  6E15               	movwf	(___flmul@b+3)^0,c
 11330   004C90                     l4018:
 11331   004C90  8E14               	bsf	(___flmul@b+2)^0,7,c
 11332   004C92  EF53  F026         	goto	l4022
 11333   004C96                     l4020:
 11334   004C96  0E00               	movlw	0
 11335   004C98  6E12               	movwf	___flmul@b^0,c
 11336   004C9A  0E00               	movlw	0
 11337   004C9C  6E13               	movwf	(___flmul@b+1)^0,c
 11338   004C9E  0E00               	movlw	0
 11339   004CA0  6E14               	movwf	(___flmul@b+2)^0,c
 11340   004CA2  0E00               	movlw	0
 11341   004CA4  6E15               	movwf	(___flmul@b+3)^0,c
 11342   004CA6                     l4022:
 11343   004CA6  5019               	movf	(___flmul@a+3)^0,w,c
 11344   004CA8  0B80               	andlw	128
 11345   004CAA  1A1E               	xorwf	___flmul@sign^0,f,c
 11346   004CAC  5019               	movf	(___flmul@a+3)^0,w,c
 11347   004CAE  2419               	addwf	(___flmul@a+3)^0,w,c
 11348   004CB0  6E23               	movwf	___flmul@aexp^0,c
 11349   004CB2  AE18               	btfss	(___flmul@a+2)^0,7,c
 11350   004CB4  EF5E  F026         	goto	u3341
 11351   004CB8  EF60  F026         	goto	u3340
 11352   004CBC                     u3341:
 11353   004CBC  EF61  F026         	goto	l4030
 11354   004CC0                     u3340:
 11355   004CC0  8023               	bsf	___flmul@aexp^0,0,c
 11356   004CC2                     l4030:
 11357   004CC2  5023               	movf	___flmul@aexp^0,w,c
 11358   004CC4  B4D8               	btfsc	status,2,c
 11359   004CC6  EF67  F026         	goto	u3351
 11360   004CCA  EF69  F026         	goto	u3350
 11361   004CCE                     u3351:
 11362   004CCE  EF7C  F026         	goto	l4038
 11363   004CD2                     u3350:
 11364   004CD2  2823               	incf	___flmul@aexp^0,w,c
 11365   004CD4  A4D8               	btfss	status,2,c
 11366   004CD6  EF6F  F026         	goto	u3361
 11367   004CDA  EF71  F026         	goto	u3360
 11368   004CDE                     u3361:
 11369   004CDE  EF79  F026         	goto	l4036
 11370   004CE2                     u3360:
 11371   004CE2  0E00               	movlw	0
 11372   004CE4  6E16               	movwf	___flmul@a^0,c
 11373   004CE6  0E00               	movlw	0
 11374   004CE8  6E17               	movwf	(___flmul@a+1)^0,c
 11375   004CEA  0E00               	movlw	0
 11376   004CEC  6E18               	movwf	(___flmul@a+2)^0,c
 11377   004CEE  0E00               	movlw	0
 11378   004CF0  6E19               	movwf	(___flmul@a+3)^0,c
 11379   004CF2                     l4036:
 11380   004CF2  8E18               	bsf	(___flmul@a+2)^0,7,c
 11381   004CF4  EF84  F026         	goto	l1172
 11382   004CF8                     l4038:
 11383   004CF8  0E00               	movlw	0
 11384   004CFA  6E16               	movwf	___flmul@a^0,c
 11385   004CFC  0E00               	movlw	0
 11386   004CFE  6E17               	movwf	(___flmul@a+1)^0,c
 11387   004D00  0E00               	movlw	0
 11388   004D02  6E18               	movwf	(___flmul@a+2)^0,c
 11389   004D04  0E00               	movlw	0
 11390   004D06  6E19               	movwf	(___flmul@a+3)^0,c
 11391   004D08                     l1172:
 11392   004D08  5023               	movf	___flmul@aexp^0,w,c
 11393   004D0A  B4D8               	btfsc	status,2,c
 11394   004D0C  EF8A  F026         	goto	u3371
 11395   004D10  EF8C  F026         	goto	u3370
 11396   004D14                     u3371:
 11397   004D14  EF94  F026         	goto	l4042
 11398   004D18                     u3370:
 11399   004D18  5024               	movf	___flmul@bexp^0,w,c
 11400   004D1A  A4D8               	btfss	status,2,c
 11401   004D1C  EF92  F026         	goto	u3381
 11402   004D20  EF94  F026         	goto	u3380
 11403   004D24                     u3381:
 11404   004D24  EF9E  F026         	goto	l4046
 11405   004D28                     u3380:
 11406   004D28                     l4042:
 11407   004D28  0E00               	movlw	0
 11408   004D2A  6E12               	movwf	?___flmul^0,c
 11409   004D2C  0E00               	movlw	0
 11410   004D2E  6E13               	movwf	(?___flmul+1)^0,c
 11411   004D30  0E00               	movlw	0
 11412   004D32  6E14               	movwf	(?___flmul+2)^0,c
 11413   004D34  0E00               	movlw	0
 11414   004D36  6E15               	movwf	(?___flmul+3)^0,c
 11415   004D38  EF36  F028         	goto	l1176
 11416   004D3C                     l4046:
 11417   004D3C  5018               	movf	(___flmul@a+2)^0,w,c
 11418   004D3E  0212               	mulwf	___flmul@b^0,c
 11419   004D40  CFF3 F029          	movff	prodl,___flmul@temp
 11420   004D44  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11421   004D48  5029               	movf	___flmul@temp^0,w,c
 11422   004D4A  6E1F               	movwf	___flmul@grs^0,c
 11423   004D4C  6A20               	clrf	(___flmul@grs+1)^0,c
 11424   004D4E  6A21               	clrf	(___flmul@grs+2)^0,c
 11425   004D50  6A22               	clrf	(___flmul@grs+3)^0,c
 11426   004D52  502A               	movf	(___flmul@temp+1)^0,w,c
 11427   004D54  6E25               	movwf	___flmul@prod^0,c
 11428   004D56  6A26               	clrf	(___flmul@prod+1)^0,c
 11429   004D58  6A27               	clrf	(___flmul@prod+2)^0,c
 11430   004D5A  6A28               	clrf	(___flmul@prod+3)^0,c
 11431   004D5C  5017               	movf	(___flmul@a+1)^0,w,c
 11432   004D5E  0213               	mulwf	(___flmul@b+1)^0,c
 11433   004D60  CFF3 F029          	movff	prodl,___flmul@temp
 11434   004D64  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11435   004D68  5029               	movf	___flmul@temp^0,w,c
 11436   004D6A  261F               	addwf	___flmul@grs^0,f,c
 11437   004D6C  0E00               	movlw	0
 11438   004D6E  2220               	addwfc	(___flmul@grs+1)^0,f,c
 11439   004D70  2221               	addwfc	(___flmul@grs+2)^0,f,c
 11440   004D72  2222               	addwfc	(___flmul@grs+3)^0,f,c
 11441   004D74  502A               	movf	(___flmul@temp+1)^0,w,c
 11442   004D76  2625               	addwf	___flmul@prod^0,f,c
 11443   004D78  0E00               	movlw	0
 11444   004D7A  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11445   004D7C  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11446   004D7E  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11447   004D80  5016               	movf	___flmul@a^0,w,c
 11448   004D82  0214               	mulwf	(___flmul@b+2)^0,c
 11449   004D84  CFF3 F029          	movff	prodl,___flmul@temp
 11450   004D88  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11451   004D8C  5029               	movf	___flmul@temp^0,w,c
 11452   004D8E  261F               	addwf	___flmul@grs^0,f,c
 11453   004D90  0E00               	movlw	0
 11454   004D92  2220               	addwfc	(___flmul@grs+1)^0,f,c
 11455   004D94  2221               	addwfc	(___flmul@grs+2)^0,f,c
 11456   004D96  2222               	addwfc	(___flmul@grs+3)^0,f,c
 11457   004D98  502A               	movf	(___flmul@temp+1)^0,w,c
 11458   004D9A  2625               	addwf	___flmul@prod^0,f,c
 11459   004D9C  0E00               	movlw	0
 11460   004D9E  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11461   004DA0  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11462   004DA2  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11463   004DA4  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 11464   004DA8  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 11465   004DAC  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 11466   004DB0  6A1F               	clrf	___flmul@grs^0,c
 11467   004DB2  5016               	movf	___flmul@a^0,w,c
 11468   004DB4  0213               	mulwf	(___flmul@b+1)^0,c
 11469   004DB6  CFF3 F029          	movff	prodl,___flmul@temp
 11470   004DBA  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11471   004DBE  5029               	movf	___flmul@temp^0,w,c
 11472   004DC0  261F               	addwf	___flmul@grs^0,f,c
 11473   004DC2  502A               	movf	(___flmul@temp+1)^0,w,c
 11474   004DC4  2220               	addwfc	(___flmul@grs+1)^0,f,c
 11475   004DC6  0E00               	movlw	0
 11476   004DC8  2221               	addwfc	(___flmul@grs+2)^0,f,c
 11477   004DCA  0E00               	movlw	0
 11478   004DCC  2222               	addwfc	(___flmul@grs+3)^0,f,c
 11479   004DCE  5017               	movf	(___flmul@a+1)^0,w,c
 11480   004DD0  0212               	mulwf	___flmul@b^0,c
 11481   004DD2  CFF3 F029          	movff	prodl,___flmul@temp
 11482   004DD6  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11483   004DDA  5029               	movf	___flmul@temp^0,w,c
 11484   004DDC  261F               	addwf	___flmul@grs^0,f,c
 11485   004DDE  502A               	movf	(___flmul@temp+1)^0,w,c
 11486   004DE0  2220               	addwfc	(___flmul@grs+1)^0,f,c
 11487   004DE2  0E00               	movlw	0
 11488   004DE4  2221               	addwfc	(___flmul@grs+2)^0,f,c
 11489   004DE6  0E00               	movlw	0
 11490   004DE8  2222               	addwfc	(___flmul@grs+3)^0,f,c
 11491   004DEA  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 11492   004DEE  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 11493   004DF2  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 11494   004DF6  6A1F               	clrf	___flmul@grs^0,c
 11495   004DF8  5016               	movf	___flmul@a^0,w,c
 11496   004DFA  0212               	mulwf	___flmul@b^0,c
 11497   004DFC  CFF3 F029          	movff	prodl,___flmul@temp
 11498   004E00  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11499   004E04  5029               	movf	___flmul@temp^0,w,c
 11500   004E06  261F               	addwf	___flmul@grs^0,f,c
 11501   004E08  502A               	movf	(___flmul@temp+1)^0,w,c
 11502   004E0A  2220               	addwfc	(___flmul@grs+1)^0,f,c
 11503   004E0C  0E00               	movlw	0
 11504   004E0E  2221               	addwfc	(___flmul@grs+2)^0,f,c
 11505   004E10  0E00               	movlw	0
 11506   004E12  2222               	addwfc	(___flmul@grs+3)^0,f,c
 11507   004E14  5018               	movf	(___flmul@a+2)^0,w,c
 11508   004E16  0213               	mulwf	(___flmul@b+1)^0,c
 11509   004E18  CFF3 F029          	movff	prodl,___flmul@temp
 11510   004E1C  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11511   004E20  5029               	movf	___flmul@temp^0,w,c
 11512   004E22  2625               	addwf	___flmul@prod^0,f,c
 11513   004E24  502A               	movf	(___flmul@temp+1)^0,w,c
 11514   004E26  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11515   004E28  0E00               	movlw	0
 11516   004E2A  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11517   004E2C  0E00               	movlw	0
 11518   004E2E  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11519   004E30  5017               	movf	(___flmul@a+1)^0,w,c
 11520   004E32  0214               	mulwf	(___flmul@b+2)^0,c
 11521   004E34  CFF3 F029          	movff	prodl,___flmul@temp
 11522   004E38  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11523   004E3C  5029               	movf	___flmul@temp^0,w,c
 11524   004E3E  2625               	addwf	___flmul@prod^0,f,c
 11525   004E40  502A               	movf	(___flmul@temp+1)^0,w,c
 11526   004E42  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11527   004E44  0E00               	movlw	0
 11528   004E46  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11529   004E48  0E00               	movlw	0
 11530   004E4A  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11531   004E4C  5018               	movf	(___flmul@a+2)^0,w,c
 11532   004E4E  0214               	mulwf	(___flmul@b+2)^0,c
 11533   004E50  CFF3 F029          	movff	prodl,___flmul@temp
 11534   004E54  CFF4 F02A          	movff	prodh,___flmul@temp+1
 11535   004E58  5029               	movf	___flmul@temp^0,w,c
 11536   004E5A  6E1A               	movwf	??___flmul^0,c
 11537   004E5C  502A               	movf	(___flmul@temp+1)^0,w,c
 11538   004E5E  6E1B               	movwf	(??___flmul+1)^0,c
 11539   004E60  6A1C               	clrf	(??___flmul+2)^0,c
 11540   004E62  6A1D               	clrf	(??___flmul+3)^0,c
 11541   004E64  C01C  F01D         	movff	??___flmul+2,??___flmul+3
 11542   004E68  C01B  F01C         	movff	??___flmul+1,??___flmul+2
 11543   004E6C  C01A  F01B         	movff	??___flmul,??___flmul+1
 11544   004E70  6A1A               	clrf	??___flmul^0,c
 11545   004E72  501A               	movf	??___flmul^0,w,c
 11546   004E74  2625               	addwf	___flmul@prod^0,f,c
 11547   004E76  501B               	movf	(??___flmul+1)^0,w,c
 11548   004E78  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11549   004E7A  501C               	movf	(??___flmul+2)^0,w,c
 11550   004E7C  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11551   004E7E  501D               	movf	(??___flmul+3)^0,w,c
 11552   004E80  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11553   004E82  C01F  F01A         	movff	___flmul@grs,??___flmul
 11554   004E86  C020  F01B         	movff	___flmul@grs+1,??___flmul+1
 11555   004E8A  C021  F01C         	movff	___flmul@grs+2,??___flmul+2
 11556   004E8E  C022  F01D         	movff	___flmul@grs+3,??___flmul+3
 11557   004E92  0E19               	movlw	25
 11558   004E94  EF51  F027         	goto	u3390
 11559   004E98                     u3395:
 11560   004E98  90D8               	bcf	status,0,c
 11561   004E9A  321D               	rrcf	(??___flmul+3)^0,f,c
 11562   004E9C  321C               	rrcf	(??___flmul+2)^0,f,c
 11563   004E9E  321B               	rrcf	(??___flmul+1)^0,f,c
 11564   004EA0  321A               	rrcf	??___flmul^0,f,c
 11565   004EA2                     u3390:
 11566   004EA2  2EE8               	decfsz	wreg,f,c
 11567   004EA4  EF4C  F027         	goto	u3395
 11568   004EA8  501A               	movf	??___flmul^0,w,c
 11569   004EAA  2625               	addwf	___flmul@prod^0,f,c
 11570   004EAC  501B               	movf	(??___flmul+1)^0,w,c
 11571   004EAE  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11572   004EB0  501C               	movf	(??___flmul+2)^0,w,c
 11573   004EB2  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11574   004EB4  501D               	movf	(??___flmul+3)^0,w,c
 11575   004EB6  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11576   004EB8  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 11577   004EBC  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 11578   004EC0  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 11579   004EC4  6A1F               	clrf	___flmul@grs^0,c
 11580   004EC6  5023               	movf	___flmul@aexp^0,w,c
 11581   004EC8  C024  F01A         	movff	___flmul@bexp,??___flmul
 11582   004ECC  6A1B               	clrf	(??___flmul+1)^0,c
 11583   004ECE  261A               	addwf	??___flmul^0,f,c
 11584   004ED0  0E00               	movlw	0
 11585   004ED2  221B               	addwfc	(??___flmul+1)^0,f,c
 11586   004ED4  0E82               	movlw	130
 11587   004ED6  241A               	addwf	??___flmul^0,w,c
 11588   004ED8  6E29               	movwf	___flmul@temp^0,c
 11589   004EDA  0EFF               	movlw	255
 11590   004EDC  201B               	addwfc	(??___flmul+1)^0,w,c
 11591   004EDE  6E2A               	movwf	(___flmul@temp+1)^0,c
 11592   004EE0  EF87  F027         	goto	l4094
 11593   004EE4                     l4088:
 11594   004EE4  90D8               	bcf	status,0,c
 11595   004EE6  3625               	rlcf	___flmul@prod^0,f,c
 11596   004EE8  3626               	rlcf	(___flmul@prod+1)^0,f,c
 11597   004EEA  3627               	rlcf	(___flmul@prod+2)^0,f,c
 11598   004EEC  3628               	rlcf	(___flmul@prod+3)^0,f,c
 11599   004EEE  AE22               	btfss	(___flmul@grs+3)^0,7,c
 11600   004EF0  EF7C  F027         	goto	u3401
 11601   004EF4  EF7E  F027         	goto	u3400
 11602   004EF8                     u3401:
 11603   004EF8  EF7F  F027         	goto	l1179
 11604   004EFC                     u3400:
 11605   004EFC  8025               	bsf	___flmul@prod^0,0,c
 11606   004EFE                     l1179:
 11607   004EFE  90D8               	bcf	status,0,c
 11608   004F00  361F               	rlcf	___flmul@grs^0,f,c
 11609   004F02  3620               	rlcf	(___flmul@grs+1)^0,f,c
 11610   004F04  3621               	rlcf	(___flmul@grs+2)^0,f,c
 11611   004F06  3622               	rlcf	(___flmul@grs+3)^0,f,c
 11612   004F08  0629               	decf	___flmul@temp^0,f,c
 11613   004F0A  A0D8               	btfss	status,0,c
 11614   004F0C  062A               	decf	(___flmul@temp+1)^0,f,c
 11615   004F0E                     l4094:
 11616   004F0E  AE27               	btfss	(___flmul@prod+2)^0,7,c
 11617   004F10  EF8C  F027         	goto	u3411
 11618   004F14  EF8E  F027         	goto	u3410
 11619   004F18                     u3411:
 11620   004F18  EF72  F027         	goto	l4088
 11621   004F1C                     u3410:
 11622   004F1C  0E00               	movlw	0
 11623   004F1E  6E23               	movwf	___flmul@aexp^0,c
 11624   004F20  AE22               	btfss	(___flmul@grs+3)^0,7,c
 11625   004F22  EF95  F027         	goto	u3421
 11626   004F26  EF97  F027         	goto	u3420
 11627   004F2A                     u3421:
 11628   004F2A  EFBB  F027         	goto	l1181
 11629   004F2E                     u3420:
 11630   004F2E  0EFF               	movlw	255
 11631   004F30  141F               	andwf	___flmul@grs^0,w,c
 11632   004F32  6E1A               	movwf	??___flmul^0,c
 11633   004F34  0EFF               	movlw	255
 11634   004F36  1420               	andwf	(___flmul@grs+1)^0,w,c
 11635   004F38  6E1B               	movwf	(??___flmul+1)^0,c
 11636   004F3A  0EFF               	movlw	255
 11637   004F3C  1421               	andwf	(___flmul@grs+2)^0,w,c
 11638   004F3E  6E1C               	movwf	(??___flmul+2)^0,c
 11639   004F40  0E7F               	movlw	127
 11640   004F42  1422               	andwf	(___flmul@grs+3)^0,w,c
 11641   004F44  6E1D               	movwf	(??___flmul+3)^0,c
 11642   004F46  501A               	movf	??___flmul^0,w,c
 11643   004F48  101B               	iorwf	(??___flmul+1)^0,w,c
 11644   004F4A  101C               	iorwf	(??___flmul+2)^0,w,c
 11645   004F4C  101D               	iorwf	(??___flmul+3)^0,w,c
 11646   004F4E  B4D8               	btfsc	status,2,c
 11647   004F50  EFAC  F027         	goto	u3431
 11648   004F54  EFAE  F027         	goto	u3430
 11649   004F58                     u3431:
 11650   004F58  EFB2  F027         	goto	l1182
 11651   004F5C                     u3430:
 11652   004F5C                     l4102:
 11653   004F5C  0E01               	movlw	1
 11654   004F5E  6E23               	movwf	___flmul@aexp^0,c
 11655   004F60  EFBB  F027         	goto	l1181
 11656   004F64                     l1182:
 11657   004F64  A025               	btfss	___flmul@prod^0,0,c
 11658   004F66  EFB7  F027         	goto	u3441
 11659   004F6A  EFB9  F027         	goto	u3440
 11660   004F6E                     u3441:
 11661   004F6E  EFBB  F027         	goto	l1181
 11662   004F72                     u3440:
 11663   004F72  EFAE  F027         	goto	l4102
 11664   004F76                     l1181:
 11665   004F76  5023               	movf	___flmul@aexp^0,w,c
 11666   004F78  B4D8               	btfsc	status,2,c
 11667   004F7A  EFC1  F027         	goto	u3451
 11668   004F7E  EFC3  F027         	goto	u3450
 11669   004F82                     u3451:
 11670   004F82  EFE7  F027         	goto	l4114
 11671   004F86                     u3450:
 11672   004F86  0E01               	movlw	1
 11673   004F88  2625               	addwf	___flmul@prod^0,f,c
 11674   004F8A  0E00               	movlw	0
 11675   004F8C  2226               	addwfc	(___flmul@prod+1)^0,f,c
 11676   004F8E  2227               	addwfc	(___flmul@prod+2)^0,f,c
 11677   004F90  2228               	addwfc	(___flmul@prod+3)^0,f,c
 11678   004F92  A028               	btfss	(___flmul@prod+3)^0,0,c
 11679   004F94  EFCE  F027         	goto	u3461
 11680   004F98  EFD0  F027         	goto	u3460
 11681   004F9C                     u3461:
 11682   004F9C  EFE7  F027         	goto	l4114
 11683   004FA0                     u3460:
 11684   004FA0  C025  F01A         	movff	___flmul@prod,??___flmul
 11685   004FA4  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
 11686   004FA8  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
 11687   004FAC  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
 11688   004FB0  341D               	rlcf	(??___flmul+3)^0,w,c
 11689   004FB2  321D               	rrcf	(??___flmul+3)^0,f,c
 11690   004FB4  321C               	rrcf	(??___flmul+2)^0,f,c
 11691   004FB6  321B               	rrcf	(??___flmul+1)^0,f,c
 11692   004FB8  321A               	rrcf	??___flmul^0,f,c
 11693   004FBA  C01A  F025         	movff	??___flmul,___flmul@prod
 11694   004FBE  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
 11695   004FC2  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
 11696   004FC6  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
 11697   004FCA  4A29               	infsnz	___flmul@temp^0,f,c
 11698   004FCC  2A2A               	incf	(___flmul@temp+1)^0,f,c
 11699   004FCE                     l4114:
 11700   004FCE  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 11701   004FD0  EFF2  F027         	goto	u3471
 11702   004FD4  502A               	movf	(___flmul@temp+1)^0,w,c
 11703   004FD6  E108               	bnz	u3470
 11704   004FD8  2829               	incf	___flmul@temp^0,w,c
 11705   004FDA  A0D8               	btfss	status,0,c
 11706   004FDC  EFF2  F027         	goto	u3471
 11707   004FE0  EFF4  F027         	goto	u3470
 11708   004FE4                     u3471:
 11709   004FE4  EFFE  F027         	goto	l4118
 11710   004FE8                     u3470:
 11711   004FE8  0E00               	movlw	0
 11712   004FEA  6E25               	movwf	___flmul@prod^0,c
 11713   004FEC  0E00               	movlw	0
 11714   004FEE  6E26               	movwf	(___flmul@prod+1)^0,c
 11715   004FF0  0E80               	movlw	128
 11716   004FF2  6E27               	movwf	(___flmul@prod+2)^0,c
 11717   004FF4  0E7F               	movlw	127
 11718   004FF6  6E28               	movwf	(___flmul@prod+3)^0,c
 11719   004FF8  EF2C  F028         	goto	l4130
 11720   004FFC                     l4118:
 11721   004FFC  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 11722   004FFE  EF0B  F028         	goto	u3480
 11723   005002  502A               	movf	(___flmul@temp+1)^0,w,c
 11724   005004  E106               	bnz	u3481
 11725   005006  0429               	decf	___flmul@temp^0,w,c
 11726   005008  B0D8               	btfsc	status,0,c
 11727   00500A  EF09  F028         	goto	u3481
 11728   00500E  EF0B  F028         	goto	u3480
 11729   005012                     u3481:
 11730   005012  EF17  F028         	goto	l1189
 11731   005016                     u3480:
 11732   005016  0E00               	movlw	0
 11733   005018  6E25               	movwf	___flmul@prod^0,c
 11734   00501A  0E00               	movlw	0
 11735   00501C  6E26               	movwf	(___flmul@prod+1)^0,c
 11736   00501E  0E00               	movlw	0
 11737   005020  6E27               	movwf	(___flmul@prod+2)^0,c
 11738   005022  0E00               	movlw	0
 11739   005024  6E28               	movwf	(___flmul@prod+3)^0,c
 11740   005026  0E00               	movlw	0
 11741   005028  6E1E               	movwf	___flmul@sign^0,c
 11742   00502A  EF2C  F028         	goto	l4130
 11743   00502E                     l1189:
 11744   00502E  C029  F024         	movff	___flmul@temp,___flmul@bexp
 11745   005032  0EFF               	movlw	255
 11746   005034  1625               	andwf	___flmul@prod^0,f,c
 11747   005036  0EFF               	movlw	255
 11748   005038  1626               	andwf	(___flmul@prod+1)^0,f,c
 11749   00503A  0E7F               	movlw	127
 11750   00503C  1627               	andwf	(___flmul@prod+2)^0,f,c
 11751   00503E  0E00               	movlw	0
 11752   005040  1628               	andwf	(___flmul@prod+3)^0,f,c
 11753   005042  A024               	btfss	___flmul@bexp^0,0,c
 11754   005044  EF26  F028         	goto	u3491
 11755   005048  EF28  F028         	goto	u3490
 11756   00504C                     u3491:
 11757   00504C  EF29  F028         	goto	l4128
 11758   005050                     u3490:
 11759   005050  8E27               	bsf	(___flmul@prod+2)^0,7,c
 11760   005052                     l4128:
 11761   005052  90D8               	bcf	status,0,c
 11762   005054  3024               	rrcf	___flmul@bexp^0,w,c
 11763   005056  6E28               	movwf	(___flmul@prod+3)^0,c
 11764   005058                     l4130:
 11765   005058  501E               	movf	___flmul@sign^0,w,c
 11766   00505A  1228               	iorwf	(___flmul@prod+3)^0,f,c
 11767   00505C  C025  F012         	movff	___flmul@prod,?___flmul
 11768   005060  C026  F013         	movff	___flmul@prod+1,?___flmul+1
 11769   005064  C027  F014         	movff	___flmul@prod+2,?___flmul+2
 11770   005068  C028  F015         	movff	___flmul@prod+3,?___flmul+3
 11771   00506C                     l1176:
 11772   00506C  0012               	return		;funcret
 11773   00506E                     __end_of___flmul:
 11774                           	callstack 0
 11775                           
 11776 ;; *************** function ___xxtofl *****************
 11777 ;; Defined at:
 11778 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 11779 ;; Parameters:    Size  Location     Type
 11780 ;;  sign            1    wreg     unsigned char 
 11781 ;;  val             4   12[COMRAM] long 
 11782 ;; Auto vars:     Size  Location     Type
 11783 ;;  sign            1   20[COMRAM] unsigned char 
 11784 ;;  arg             4   22[COMRAM] unsigned long 
 11785 ;;  exp             1   21[COMRAM] unsigned char 
 11786 ;; Return value:  Size  Location     Type
 11787 ;;                  4   12[COMRAM] unsigned char 
 11788 ;; Registers used:
 11789 ;;		wreg, status,2, status,0
 11790 ;; Tracked objects:
 11791 ;;		On entry : 0/0
 11792 ;;		On exit  : 0/0
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11796 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11797 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11798 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11799 ;;Total ram usage:       14 bytes
 11800 ;; Hardware stack levels used: 1
 11801 ;; Hardware stack levels required when called: 2
 11802 ;; This function calls:
 11803 ;;		Nothing
 11804 ;; This function is called by:
 11805 ;;		_decide_action
 11806 ;;		_powf
 11807 ;; This function uses a non-reentrant model
 11808 ;;
 11809                           
 11810                           	psect	text31
 11811   005CE6                     __ptext31:
 11812                           	callstack 0
 11813   005CE6                     ___xxtofl:
 11814                           	callstack 26
 11815                           
 11816                           ;incstack = 0
 11817                           ;___xxtofl@sign stored from wreg
 11818   005CE6  6E15               	movwf	___xxtofl@sign^0,c
 11819   005CE8  5015               	movf	___xxtofl@sign^0,w,c
 11820   005CEA  B4D8               	btfsc	status,2,c
 11821   005CEC  EF7A  F02E         	goto	u4111
 11822   005CF0  EF7C  F02E         	goto	u4110
 11823   005CF4                     u4111:
 11824   005CF4  EF9E  F02E         	goto	l1213
 11825   005CF8                     u4110:
 11826   005CF8  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 11827   005CFA  EF83  F02E         	goto	u4120
 11828   005CFE  EF81  F02E         	goto	u4121
 11829   005D02                     u4121:
 11830   005D02  EF9E  F02E         	goto	l1213
 11831   005D06                     u4120:
 11832   005D06  C00D  F011         	movff	___xxtofl@val,??___xxtofl
 11833   005D0A  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
 11834   005D0E  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
 11835   005D12  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
 11836   005D16  1E11               	comf	??___xxtofl^0,f,c
 11837   005D18  1E12               	comf	(??___xxtofl+1)^0,f,c
 11838   005D1A  1E13               	comf	(??___xxtofl+2)^0,f,c
 11839   005D1C  1E14               	comf	(??___xxtofl+3)^0,f,c
 11840   005D1E  2A11               	incf	??___xxtofl^0,f,c
 11841   005D20  0E00               	movlw	0
 11842   005D22  2212               	addwfc	(??___xxtofl+1)^0,f,c
 11843   005D24  2213               	addwfc	(??___xxtofl+2)^0,f,c
 11844   005D26  2214               	addwfc	(??___xxtofl+3)^0,f,c
 11845   005D28  C011  F017         	movff	??___xxtofl,___xxtofl@arg
 11846   005D2C  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
 11847   005D30  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
 11848   005D34  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
 11849   005D38  EFA6  F02E         	goto	l4504
 11850   005D3C                     l1213:
 11851   005D3C  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
 11852   005D40  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11853   005D44  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11854   005D48  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11855   005D4C                     l4504:
 11856   005D4C  500D               	movf	___xxtofl@val^0,w,c
 11857   005D4E  100E               	iorwf	(___xxtofl@val+1)^0,w,c
 11858   005D50  100F               	iorwf	(___xxtofl@val+2)^0,w,c
 11859   005D52  1010               	iorwf	(___xxtofl@val+3)^0,w,c
 11860   005D54  A4D8               	btfss	status,2,c
 11861   005D56  EFAF  F02E         	goto	u4131
 11862   005D5A  EFB1  F02E         	goto	u4130
 11863   005D5E                     u4131:
 11864   005D5E  EFBB  F02E         	goto	l4510
 11865   005D62                     u4130:
 11866   005D62  0E00               	movlw	0
 11867   005D64  6E0D               	movwf	?___xxtofl^0,c
 11868   005D66  0E00               	movlw	0
 11869   005D68  6E0E               	movwf	(?___xxtofl+1)^0,c
 11870   005D6A  0E00               	movlw	0
 11871   005D6C  6E0F               	movwf	(?___xxtofl+2)^0,c
 11872   005D6E  0E00               	movlw	0
 11873   005D70  6E10               	movwf	(?___xxtofl+3)^0,c
 11874   005D72  EF4C  F02F         	goto	l1216
 11875   005D76                     l4510:
 11876   005D76  0E96               	movlw	150
 11877   005D78  6E16               	movwf	___xxtofl@exp^0,c
 11878   005D7A  EFC5  F02E         	goto	l4514
 11879   005D7E                     l4512:
 11880   005D7E  2A16               	incf	___xxtofl@exp^0,f,c
 11881   005D80  90D8               	bcf	status,0,c
 11882   005D82  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 11883   005D84  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 11884   005D86  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 11885   005D88  3217               	rrcf	___xxtofl@arg^0,f,c
 11886   005D8A                     l4514:
 11887   005D8A  0E00               	movlw	0
 11888   005D8C  1417               	andwf	___xxtofl@arg^0,w,c
 11889   005D8E  6E11               	movwf	??___xxtofl^0,c
 11890   005D90  0E00               	movlw	0
 11891   005D92  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 11892   005D94  6E12               	movwf	(??___xxtofl+1)^0,c
 11893   005D96  0E00               	movlw	0
 11894   005D98  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 11895   005D9A  6E13               	movwf	(??___xxtofl+2)^0,c
 11896   005D9C  0EFE               	movlw	254
 11897   005D9E  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 11898   005DA0  6E14               	movwf	(??___xxtofl+3)^0,c
 11899   005DA2  5011               	movf	??___xxtofl^0,w,c
 11900   005DA4  1012               	iorwf	(??___xxtofl+1)^0,w,c
 11901   005DA6  1013               	iorwf	(??___xxtofl+2)^0,w,c
 11902   005DA8  1014               	iorwf	(??___xxtofl+3)^0,w,c
 11903   005DAA  A4D8               	btfss	status,2,c
 11904   005DAC  EFDA  F02E         	goto	u4141
 11905   005DB0  EFDC  F02E         	goto	u4140
 11906   005DB4                     u4141:
 11907   005DB4  EFBF  F02E         	goto	l4512
 11908   005DB8                     u4140:
 11909   005DB8  EFEA  F02E         	goto	l1220
 11910   005DBC                     l4516:
 11911   005DBC  2A16               	incf	___xxtofl@exp^0,f,c
 11912   005DBE  0E01               	movlw	1
 11913   005DC0  2617               	addwf	___xxtofl@arg^0,f,c
 11914   005DC2  0E00               	movlw	0
 11915   005DC4  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
 11916   005DC6  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
 11917   005DC8  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
 11918   005DCA  90D8               	bcf	status,0,c
 11919   005DCC  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 11920   005DCE  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 11921   005DD0  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 11922   005DD2  3217               	rrcf	___xxtofl@arg^0,f,c
 11923   005DD4                     l1220:
 11924   005DD4  0E00               	movlw	0
 11925   005DD6  1417               	andwf	___xxtofl@arg^0,w,c
 11926   005DD8  6E11               	movwf	??___xxtofl^0,c
 11927   005DDA  0E00               	movlw	0
 11928   005DDC  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 11929   005DDE  6E12               	movwf	(??___xxtofl+1)^0,c
 11930   005DE0  0E00               	movlw	0
 11931   005DE2  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 11932   005DE4  6E13               	movwf	(??___xxtofl+2)^0,c
 11933   005DE6  0EFF               	movlw	255
 11934   005DE8  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 11935   005DEA  6E14               	movwf	(??___xxtofl+3)^0,c
 11936   005DEC  5011               	movf	??___xxtofl^0,w,c
 11937   005DEE  1012               	iorwf	(??___xxtofl+1)^0,w,c
 11938   005DF0  1013               	iorwf	(??___xxtofl+2)^0,w,c
 11939   005DF2  1014               	iorwf	(??___xxtofl+3)^0,w,c
 11940   005DF4  A4D8               	btfss	status,2,c
 11941   005DF6  EFFF  F02E         	goto	u4151
 11942   005DFA  EF01  F02F         	goto	u4150
 11943   005DFE                     u4151:
 11944   005DFE  EFDE  F02E         	goto	l4516
 11945   005E02                     u4150:
 11946   005E02  EF09  F02F         	goto	l4524
 11947   005E06                     l4522:
 11948   005E06  0616               	decf	___xxtofl@exp^0,f,c
 11949   005E08  90D8               	bcf	status,0,c
 11950   005E0A  3617               	rlcf	___xxtofl@arg^0,f,c
 11951   005E0C  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
 11952   005E0E  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
 11953   005E10  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
 11954   005E12                     l4524:
 11955   005E12  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
 11956   005E14  EF0E  F02F         	goto	u4161
 11957   005E18  EF10  F02F         	goto	u4160
 11958   005E1C                     u4161:
 11959   005E1C  EF18  F02F         	goto	l1227
 11960   005E20                     u4160:
 11961   005E20  0E02               	movlw	2
 11962   005E22  6016               	cpfslt	___xxtofl@exp^0,c
 11963   005E24  EF16  F02F         	goto	u4171
 11964   005E28  EF18  F02F         	goto	u4170
 11965   005E2C                     u4171:
 11966   005E2C  EF03  F02F         	goto	l4522
 11967   005E30                     u4170:
 11968   005E30                     l1227:
 11969   005E30  B016               	btfsc	___xxtofl@exp^0,0,c
 11970   005E32  EF1D  F02F         	goto	u4181
 11971   005E36  EF1F  F02F         	goto	u4180
 11972   005E3A                     u4181:
 11973   005E3A  EF20  F02F         	goto	l4530
 11974   005E3E                     u4180:
 11975   005E3E  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
 11976   005E40                     l4530:
 11977   005E40  90D8               	bcf	status,0,c
 11978   005E42  3216               	rrcf	___xxtofl@exp^0,f,c
 11979   005E44  C016  F011         	movff	___xxtofl@exp,??___xxtofl
 11980   005E48  6A12               	clrf	(??___xxtofl+1)^0,c
 11981   005E4A  6A13               	clrf	(??___xxtofl+2)^0,c
 11982   005E4C  6A14               	clrf	(??___xxtofl+3)^0,c
 11983   005E4E  C011  F014         	movff	??___xxtofl,??___xxtofl+3
 11984   005E52  6A13               	clrf	(??___xxtofl+2)^0,c
 11985   005E54  6A12               	clrf	(??___xxtofl+1)^0,c
 11986   005E56  6A11               	clrf	??___xxtofl^0,c
 11987   005E58  5011               	movf	??___xxtofl^0,w,c
 11988   005E5A  1217               	iorwf	___xxtofl@arg^0,f,c
 11989   005E5C  5012               	movf	(??___xxtofl+1)^0,w,c
 11990   005E5E  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
 11991   005E60  5013               	movf	(??___xxtofl+2)^0,w,c
 11992   005E62  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
 11993   005E64  5014               	movf	(??___xxtofl+3)^0,w,c
 11994   005E66  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
 11995   005E68  5015               	movf	___xxtofl@sign^0,w,c
 11996   005E6A  B4D8               	btfsc	status,2,c
 11997   005E6C  EF3A  F02F         	goto	u4191
 11998   005E70  EF3C  F02F         	goto	u4190
 11999   005E74                     u4191:
 12000   005E74  EF44  F02F         	goto	l4540
 12001   005E78                     u4190:
 12002   005E78  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 12003   005E7A  EF43  F02F         	goto	u4200
 12004   005E7E  EF41  F02F         	goto	u4201
 12005   005E82                     u4201:
 12006   005E82  EF44  F02F         	goto	l4540
 12007   005E86                     u4200:
 12008   005E86  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
 12009   005E88                     l4540:
 12010   005E88  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
 12011   005E8C  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
 12012   005E90  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
 12013   005E94  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
 12014   005E98                     l1216:
 12015   005E98  0012               	return		;funcret
 12016   005E9A                     __end_of___xxtofl:
 12017                           	callstack 0
 12018                           
 12019 ;; *************** function ___flsub *****************
 12020 ;; Defined at:
 12021 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 12022 ;; Parameters:    Size  Location     Type
 12023 ;;  b               4   67[COMRAM] unsigned char 
 12024 ;;  a               4   71[COMRAM] unsigned char 
 12025 ;; Auto vars:     Size  Location     Type
 12026 ;;		None
 12027 ;; Return value:  Size  Location     Type
 12028 ;;                  4   67[COMRAM] unsigned char 
 12029 ;; Registers used:
 12030 ;;		wreg, status,2, status,0, cstack
 12031 ;; Tracked objects:
 12032 ;;		On entry : 0/0
 12033 ;;		On exit  : 0/0
 12034 ;;		Unchanged: 0/0
 12035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12036 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12039 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12040 ;;Total ram usage:        8 bytes
 12041 ;; Hardware stack levels used: 1
 12042 ;; Hardware stack levels required when called: 3
 12043 ;; This function calls:
 12044 ;;		___fladd
 12045 ;; This function is called by:
 12046 ;;		_decide_action
 12047 ;;		_powf
 12048 ;; This function uses a non-reentrant model
 12049 ;;
 12050                           
 12051                           	psect	text32
 12052   006F22                     __ptext32:
 12053                           	callstack 0
 12054   006F22                     ___flsub:
 12055                           	callstack 25
 12056   006F22  0E00               	movlw	0
 12057   006F24  1A48               	xorwf	___flsub@a^0,f,c
 12058   006F26  0E00               	movlw	0
 12059   006F28  1A49               	xorwf	(___flsub@a+1)^0,f,c
 12060   006F2A  0E00               	movlw	0
 12061   006F2C  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 12062   006F2E  0E80               	movlw	128
 12063   006F30  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 12064   006F32  C044  F002         	movff	___flsub@b,___fladd@b
 12065   006F36  C045  F003         	movff	___flsub@b+1,___fladd@b+1
 12066   006F3A  C046  F004         	movff	___flsub@b+2,___fladd@b+2
 12067   006F3E  C047  F005         	movff	___flsub@b+3,___fladd@b+3
 12068   006F42  C048  F006         	movff	___flsub@a,___fladd@a
 12069   006F46  C049  F007         	movff	___flsub@a+1,___fladd@a+1
 12070   006F4A  C04A  F008         	movff	___flsub@a+2,___fladd@a+2
 12071   006F4E  C04B  F009         	movff	___flsub@a+3,___fladd@a+3
 12072   006F52  ECC2  F023         	call	___fladd	;wreg free
 12073   006F56  C002  F044         	movff	?___fladd,?___flsub
 12074   006F5A  C003  F045         	movff	?___fladd+1,?___flsub+1
 12075   006F5E  C004  F046         	movff	?___fladd+2,?___flsub+2
 12076   006F62  C005  F047         	movff	?___fladd+3,?___flsub+3
 12077   006F66  0012               	return		;funcret
 12078   006F68                     __end_of___flsub:
 12079                           	callstack 0
 12080                           
 12081 ;; *************** function ___fladd *****************
 12082 ;; Defined at:
 12083 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 12084 ;; Parameters:    Size  Location     Type
 12085 ;;  b               4    1[COMRAM] unsigned char 
 12086 ;;  a               4    5[COMRAM] unsigned char 
 12087 ;; Auto vars:     Size  Location     Type
 12088 ;;  grs             1   16[COMRAM] unsigned char 
 12089 ;;  bexp            1   15[COMRAM] unsigned char 
 12090 ;;  aexp            1   14[COMRAM] unsigned char 
 12091 ;;  signs           1   13[COMRAM] unsigned char 
 12092 ;; Return value:  Size  Location     Type
 12093 ;;                  4    1[COMRAM] unsigned char 
 12094 ;; Registers used:
 12095 ;;		wreg, status,2, status,0
 12096 ;; Tracked objects:
 12097 ;;		On entry : 0/0
 12098 ;;		On exit  : 0/0
 12099 ;;		Unchanged: 0/0
 12100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12101 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12102 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12103 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12104 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12105 ;;Total ram usage:       16 bytes
 12106 ;; Hardware stack levels used: 1
 12107 ;; Hardware stack levels required when called: 2
 12108 ;; This function calls:
 12109 ;;		Nothing
 12110 ;; This function is called by:
 12111 ;;		_decide_action
 12112 ;;		___flsub
 12113 ;;		_powf
 12114 ;; This function uses a non-reentrant model
 12115 ;;
 12116                           
 12117                           	psect	text33
 12118   004784                     __ptext33:
 12119                           	callstack 0
 12120   004784                     ___fladd:
 12121                           	callstack 25
 12122   004784  5005               	movf	(___fladd@b+3)^0,w,c
 12123   004786  0B80               	andlw	128
 12124   004788  6E0E               	movwf	___fladd@signs^0,c
 12125   00478A  5005               	movf	(___fladd@b+3)^0,w,c
 12126   00478C  2405               	addwf	(___fladd@b+3)^0,w,c
 12127   00478E  6E10               	movwf	___fladd@bexp^0,c
 12128   004790  AE04               	btfss	(___fladd@b+2)^0,7,c
 12129   004792  EFCD  F023         	goto	u2921
 12130   004796  EFCF  F023         	goto	u2920
 12131   00479A                     u2921:
 12132   00479A  EFD0  F023         	goto	l3810
 12133   00479E                     u2920:
 12134   00479E  8010               	bsf	___fladd@bexp^0,0,c
 12135   0047A0                     l3810:
 12136   0047A0  5010               	movf	___fladd@bexp^0,w,c
 12137   0047A2  B4D8               	btfsc	status,2,c
 12138   0047A4  EFD6  F023         	goto	u2931
 12139   0047A8  EFD8  F023         	goto	u2930
 12140   0047AC                     u2931:
 12141   0047AC  EFED  F023         	goto	l3820
 12142   0047B0                     u2930:
 12143   0047B0  2810               	incf	___fladd@bexp^0,w,c
 12144   0047B2  A4D8               	btfss	status,2,c
 12145   0047B4  EFDE  F023         	goto	u2941
 12146   0047B8  EFE0  F023         	goto	u2940
 12147   0047BC                     u2941:
 12148   0047BC  EFE8  F023         	goto	l3816
 12149   0047C0                     u2940:
 12150   0047C0  0E00               	movlw	0
 12151   0047C2  6E02               	movwf	___fladd@b^0,c
 12152   0047C4  0E00               	movlw	0
 12153   0047C6  6E03               	movwf	(___fladd@b+1)^0,c
 12154   0047C8  0E00               	movlw	0
 12155   0047CA  6E04               	movwf	(___fladd@b+2)^0,c
 12156   0047CC  0E00               	movlw	0
 12157   0047CE  6E05               	movwf	(___fladd@b+3)^0,c
 12158   0047D0                     l3816:
 12159   0047D0  8E04               	bsf	(___fladd@b+2)^0,7,c
 12160   0047D2  0E00               	movlw	0
 12161   0047D4  6E05               	movwf	(___fladd@b+3)^0,c
 12162   0047D6  EFF5  F023         	goto	l3822
 12163   0047DA                     l3820:
 12164   0047DA  0E00               	movlw	0
 12165   0047DC  6E02               	movwf	___fladd@b^0,c
 12166   0047DE  0E00               	movlw	0
 12167   0047E0  6E03               	movwf	(___fladd@b+1)^0,c
 12168   0047E2  0E00               	movlw	0
 12169   0047E4  6E04               	movwf	(___fladd@b+2)^0,c
 12170   0047E6  0E00               	movlw	0
 12171   0047E8  6E05               	movwf	(___fladd@b+3)^0,c
 12172   0047EA                     l3822:
 12173   0047EA  5009               	movf	(___fladd@a+3)^0,w,c
 12174   0047EC  0B80               	andlw	128
 12175   0047EE  6E0F               	movwf	___fladd@aexp^0,c
 12176   0047F0  500E               	movf	___fladd@signs^0,w,c
 12177   0047F2  180F               	xorwf	___fladd@aexp^0,w,c
 12178   0047F4  B4D8               	btfsc	status,2,c
 12179   0047F6  EFFF  F023         	goto	u2951
 12180   0047FA  EF01  F024         	goto	u2950
 12181   0047FE                     u2951:
 12182   0047FE  EF02  F024         	goto	l3828
 12183   004802                     u2950:
 12184   004802  8C0E               	bsf	___fladd@signs^0,6,c
 12185   004804                     l3828:
 12186   004804  5009               	movf	(___fladd@a+3)^0,w,c
 12187   004806  2409               	addwf	(___fladd@a+3)^0,w,c
 12188   004808  6E0F               	movwf	___fladd@aexp^0,c
 12189   00480A  AE08               	btfss	(___fladd@a+2)^0,7,c
 12190   00480C  EF0A  F024         	goto	u2961
 12191   004810  EF0C  F024         	goto	u2960
 12192   004814                     u2961:
 12193   004814  EF0D  F024         	goto	l3834
 12194   004818                     u2960:
 12195   004818  800F               	bsf	___fladd@aexp^0,0,c
 12196   00481A                     l3834:
 12197   00481A  500F               	movf	___fladd@aexp^0,w,c
 12198   00481C  B4D8               	btfsc	status,2,c
 12199   00481E  EF13  F024         	goto	u2971
 12200   004822  EF15  F024         	goto	u2970
 12201   004826                     u2971:
 12202   004826  EF2A  F024         	goto	l3844
 12203   00482A                     u2970:
 12204   00482A  280F               	incf	___fladd@aexp^0,w,c
 12205   00482C  A4D8               	btfss	status,2,c
 12206   00482E  EF1B  F024         	goto	u2981
 12207   004832  EF1D  F024         	goto	u2980
 12208   004836                     u2981:
 12209   004836  EF25  F024         	goto	l3840
 12210   00483A                     u2980:
 12211   00483A  0E00               	movlw	0
 12212   00483C  6E06               	movwf	___fladd@a^0,c
 12213   00483E  0E00               	movlw	0
 12214   004840  6E07               	movwf	(___fladd@a+1)^0,c
 12215   004842  0E00               	movlw	0
 12216   004844  6E08               	movwf	(___fladd@a+2)^0,c
 12217   004846  0E00               	movlw	0
 12218   004848  6E09               	movwf	(___fladd@a+3)^0,c
 12219   00484A                     l3840:
 12220   00484A  8E08               	bsf	(___fladd@a+2)^0,7,c
 12221   00484C  0E00               	movlw	0
 12222   00484E  6E09               	movwf	(___fladd@a+3)^0,c
 12223   004850  EF32  F024         	goto	l3846
 12224   004854                     l3844:
 12225   004854  0E00               	movlw	0
 12226   004856  6E06               	movwf	___fladd@a^0,c
 12227   004858  0E00               	movlw	0
 12228   00485A  6E07               	movwf	(___fladd@a+1)^0,c
 12229   00485C  0E00               	movlw	0
 12230   00485E  6E08               	movwf	(___fladd@a+2)^0,c
 12231   004860  0E00               	movlw	0
 12232   004862  6E09               	movwf	(___fladd@a+3)^0,c
 12233   004864                     l3846:
 12234   004864  5010               	movf	___fladd@bexp^0,w,c
 12235   004866  5C0F               	subwf	___fladd@aexp^0,w,c
 12236   004868  B0D8               	btfsc	status,0,c
 12237   00486A  EF39  F024         	goto	u2991
 12238   00486E  EF3B  F024         	goto	u2990
 12239   004872                     u2991:
 12240   004872  EF62  F024         	goto	l3882
 12241   004876                     u2990:
 12242   004876  AC0E               	btfss	___fladd@signs^0,6,c
 12243   004878  EF40  F024         	goto	u3001
 12244   00487C  EF42  F024         	goto	u3000
 12245   004880                     u3001:
 12246   004880  EF44  F024         	goto	l3852
 12247   004884                     u3000:
 12248   004884  0E80               	movlw	128
 12249   004886  1A0E               	xorwf	___fladd@signs^0,f,c
 12250   004888                     l3852:
 12251   004888  C010  F011         	movff	___fladd@bexp,___fladd@grs
 12252   00488C  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 12253   004890  C011  F00F         	movff	___fladd@grs,___fladd@aexp
 12254   004894  C002  F011         	movff	___fladd@b,___fladd@grs
 12255   004898  C006  F002         	movff	___fladd@a,___fladd@b
 12256   00489C  C011  F006         	movff	___fladd@grs,___fladd@a
 12257   0048A0  C003  F011         	movff	___fladd@b+1,___fladd@grs
 12258   0048A4  C007  F003         	movff	___fladd@a+1,___fladd@b+1
 12259   0048A8  C011  F007         	movff	___fladd@grs,___fladd@a+1
 12260   0048AC  C004  F011         	movff	___fladd@b+2,___fladd@grs
 12261   0048B0  C008  F004         	movff	___fladd@a+2,___fladd@b+2
 12262   0048B4  C011  F008         	movff	___fladd@grs,___fladd@a+2
 12263   0048B8  C005  F011         	movff	___fladd@b+3,___fladd@grs
 12264   0048BC  C009  F005         	movff	___fladd@a+3,___fladd@b+3
 12265   0048C0  C011  F009         	movff	___fladd@grs,___fladd@a+3
 12266   0048C4                     l3882:
 12267   0048C4  0E00               	movlw	0
 12268   0048C6  6E11               	movwf	___fladd@grs^0,c
 12269   0048C8  5010               	movf	___fladd@bexp^0,w,c
 12270   0048CA  C00F  F00A         	movff	___fladd@aexp,??___fladd
 12271   0048CE  6A0B               	clrf	(??___fladd+1)^0,c
 12272   0048D0  5E0A               	subwf	??___fladd^0,f,c
 12273   0048D2  0E00               	movlw	0
 12274   0048D4  5A0B               	subwfb	(??___fladd+1)^0,f,c
 12275   0048D6  BE0B               	btfsc	(??___fladd+1)^0,7,c
 12276   0048D8  EF77  F024         	goto	u3011
 12277   0048DC  500B               	movf	(??___fladd+1)^0,w,c
 12278   0048DE  E109               	bnz	u3010
 12279   0048E0  0E1A               	movlw	26
 12280   0048E2  5C0A               	subwf	??___fladd^0,w,c
 12281   0048E4  A0D8               	btfss	status,0,c
 12282   0048E6  EF77  F024         	goto	u3011
 12283   0048EA  EF79  F024         	goto	u3010
 12284   0048EE                     u3011:
 12285   0048EE  EFB0  F024         	goto	l1087
 12286   0048F2                     u3010:
 12287   0048F2  5002               	movf	___fladd@b^0,w,c
 12288   0048F4  1003               	iorwf	(___fladd@b+1)^0,w,c
 12289   0048F6  1004               	iorwf	(___fladd@b+2)^0,w,c
 12290   0048F8  1005               	iorwf	(___fladd@b+3)^0,w,c
 12291   0048FA  A4D8               	btfss	status,2,c
 12292   0048FC  EF82  F024         	goto	u3021
 12293   004900  EF85  F024         	goto	u3020
 12294   004904                     u3021:
 12295   004904  0E01               	movlw	1
 12296   004906  EF86  F024         	goto	u3030
 12297   00490A                     u3020:
 12298   00490A  0E00               	movlw	0
 12299   00490C                     u3030:
 12300   00490C  6E11               	movwf	___fladd@grs^0,c
 12301   00490E  0E00               	movlw	0
 12302   004910  6E02               	movwf	___fladd@b^0,c
 12303   004912  0E00               	movlw	0
 12304   004914  6E03               	movwf	(___fladd@b+1)^0,c
 12305   004916  0E00               	movlw	0
 12306   004918  6E04               	movwf	(___fladd@b+2)^0,c
 12307   00491A  0E00               	movlw	0
 12308   00491C  6E05               	movwf	(___fladd@b+3)^0,c
 12309   00491E  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 12310   004922  EFB9  F024         	goto	l1086
 12311   004926                     l1088:
 12312   004926  A011               	btfss	___fladd@grs^0,0,c
 12313   004928  EF98  F024         	goto	u3041
 12314   00492C  EF9A  F024         	goto	u3040
 12315   004930                     u3041:
 12316   004930  EFA0  F024         	goto	l3894
 12317   004934                     u3040:
 12318   004934  90D8               	bcf	status,0,c
 12319   004936  3011               	rrcf	___fladd@grs^0,w,c
 12320   004938  0901               	iorlw	1
 12321   00493A  6E11               	movwf	___fladd@grs^0,c
 12322   00493C  EFA2  F024         	goto	l3896
 12323   004940                     l3894:
 12324   004940  90D8               	bcf	status,0,c
 12325   004942  3211               	rrcf	___fladd@grs^0,f,c
 12326   004944                     l3896:
 12327   004944  A002               	btfss	___fladd@b^0,0,c
 12328   004946  EFA7  F024         	goto	u3051
 12329   00494A  EFA9  F024         	goto	u3050
 12330   00494E                     u3051:
 12331   00494E  EFAA  F024         	goto	l3900
 12332   004952                     u3050:
 12333   004952  8E11               	bsf	___fladd@grs^0,7,c
 12334   004954                     l3900:
 12335   004954  3405               	rlcf	(___fladd@b+3)^0,w,c
 12336   004956  3205               	rrcf	(___fladd@b+3)^0,f,c
 12337   004958  3204               	rrcf	(___fladd@b+2)^0,f,c
 12338   00495A  3203               	rrcf	(___fladd@b+1)^0,f,c
 12339   00495C  3202               	rrcf	___fladd@b^0,f,c
 12340   00495E  2A10               	incf	___fladd@bexp^0,f,c
 12341   004960                     l1087:
 12342   004960  500F               	movf	___fladd@aexp^0,w,c
 12343   004962  5C10               	subwf	___fladd@bexp^0,w,c
 12344   004964  A0D8               	btfss	status,0,c
 12345   004966  EFB7  F024         	goto	u3061
 12346   00496A  EFB9  F024         	goto	u3060
 12347   00496E                     u3061:
 12348   00496E  EF93  F024         	goto	l1088
 12349   004972                     u3060:
 12350   004972                     l1086:
 12351   004972  BC0E               	btfsc	___fladd@signs^0,6,c
 12352   004974  EFBE  F024         	goto	u3071
 12353   004978  EFC0  F024         	goto	u3070
 12354   00497C                     u3071:
 12355   00497C  EF00  F025         	goto	l3928
 12356   004980                     u3070:
 12357   004980  5010               	movf	___fladd@bexp^0,w,c
 12358   004982  A4D8               	btfss	status,2,c
 12359   004984  EFC6  F024         	goto	u3081
 12360   004988  EFC8  F024         	goto	u3080
 12361   00498C                     u3081:
 12362   00498C  EFD2  F024         	goto	l3910
 12363   004990                     u3080:
 12364   004990  0E00               	movlw	0
 12365   004992  6E02               	movwf	?___fladd^0,c
 12366   004994  0E00               	movlw	0
 12367   004996  6E03               	movwf	(?___fladd+1)^0,c
 12368   004998  0E00               	movlw	0
 12369   00499A  6E04               	movwf	(?___fladd+2)^0,c
 12370   00499C  0E00               	movlw	0
 12371   00499E  6E05               	movwf	(?___fladd+3)^0,c
 12372   0049A0  EF21  F026         	goto	l1095
 12373   0049A4                     l3910:
 12374   0049A4  5006               	movf	___fladd@a^0,w,c
 12375   0049A6  2602               	addwf	___fladd@b^0,f,c
 12376   0049A8  5007               	movf	(___fladd@a+1)^0,w,c
 12377   0049AA  2203               	addwfc	(___fladd@b+1)^0,f,c
 12378   0049AC  5008               	movf	(___fladd@a+2)^0,w,c
 12379   0049AE  2204               	addwfc	(___fladd@b+2)^0,f,c
 12380   0049B0  5009               	movf	(___fladd@a+3)^0,w,c
 12381   0049B2  2205               	addwfc	(___fladd@b+3)^0,f,c
 12382   0049B4  A005               	btfss	(___fladd@b+3)^0,0,c
 12383   0049B6  EFDF  F024         	goto	u3091
 12384   0049BA  EFE1  F024         	goto	u3090
 12385   0049BE                     u3091:
 12386   0049BE  EF8D  F025         	goto	l3964
 12387   0049C2                     u3090:
 12388   0049C2  A011               	btfss	___fladd@grs^0,0,c
 12389   0049C4  EFE6  F024         	goto	u3101
 12390   0049C8  EFE8  F024         	goto	u3100
 12391   0049CC                     u3101:
 12392   0049CC  EFEE  F024         	goto	l3918
 12393   0049D0                     u3100:
 12394   0049D0  90D8               	bcf	status,0,c
 12395   0049D2  3011               	rrcf	___fladd@grs^0,w,c
 12396   0049D4  0901               	iorlw	1
 12397   0049D6  6E11               	movwf	___fladd@grs^0,c
 12398   0049D8  EFF0  F024         	goto	l3920
 12399   0049DC                     l3918:
 12400   0049DC  90D8               	bcf	status,0,c
 12401   0049DE  3211               	rrcf	___fladd@grs^0,f,c
 12402   0049E0                     l3920:
 12403   0049E0  A002               	btfss	___fladd@b^0,0,c
 12404   0049E2  EFF5  F024         	goto	u3111
 12405   0049E6  EFF7  F024         	goto	u3110
 12406   0049EA                     u3111:
 12407   0049EA  EFF8  F024         	goto	l3924
 12408   0049EE                     u3110:
 12409   0049EE  8E11               	bsf	___fladd@grs^0,7,c
 12410   0049F0                     l3924:
 12411   0049F0  3405               	rlcf	(___fladd@b+3)^0,w,c
 12412   0049F2  3205               	rrcf	(___fladd@b+3)^0,f,c
 12413   0049F4  3204               	rrcf	(___fladd@b+2)^0,f,c
 12414   0049F6  3203               	rrcf	(___fladd@b+1)^0,f,c
 12415   0049F8  3202               	rrcf	___fladd@b^0,f,c
 12416   0049FA  2A10               	incf	___fladd@bexp^0,f,c
 12417   0049FC  EF8D  F025         	goto	l3964
 12418   004A00                     l3928:
 12419   004A00  5006               	movf	___fladd@a^0,w,c
 12420   004A02  5C02               	subwf	___fladd@b^0,w,c
 12421   004A04  5007               	movf	(___fladd@a+1)^0,w,c
 12422   004A06  5803               	subwfb	(___fladd@b+1)^0,w,c
 12423   004A08  5008               	movf	(___fladd@a+2)^0,w,c
 12424   004A0A  5804               	subwfb	(___fladd@b+2)^0,w,c
 12425   004A0C  5005               	movf	(___fladd@b+3)^0,w,c
 12426   004A0E  0A80               	xorlw	128
 12427   004A10  6E0A               	movwf	??___fladd^0,c
 12428   004A12  5009               	movf	(___fladd@a+3)^0,w,c
 12429   004A14  0A80               	xorlw	128
 12430   004A16  580A               	subwfb	??___fladd^0,w,c
 12431   004A18  B0D8               	btfsc	status,0,c
 12432   004A1A  EF11  F025         	goto	u3121
 12433   004A1E  EF13  F025         	goto	u3120
 12434   004A22                     u3121:
 12435   004A22  EF3E  F025         	goto	l3938
 12436   004A26                     u3120:
 12437   004A26  5002               	movf	___fladd@b^0,w,c
 12438   004A28  5C06               	subwf	___fladd@a^0,w,c
 12439   004A2A  6E0A               	movwf	??___fladd^0,c
 12440   004A2C  5003               	movf	(___fladd@b+1)^0,w,c
 12441   004A2E  5807               	subwfb	(___fladd@a+1)^0,w,c
 12442   004A30  6E0B               	movwf	(??___fladd+1)^0,c
 12443   004A32  5004               	movf	(___fladd@b+2)^0,w,c
 12444   004A34  5808               	subwfb	(___fladd@a+2)^0,w,c
 12445   004A36  6E0C               	movwf	(??___fladd+2)^0,c
 12446   004A38  5005               	movf	(___fladd@b+3)^0,w,c
 12447   004A3A  5809               	subwfb	(___fladd@a+3)^0,w,c
 12448   004A3C  6E0D               	movwf	(??___fladd+3)^0,c
 12449   004A3E  0EFF               	movlw	255
 12450   004A40  240A               	addwf	??___fladd^0,w,c
 12451   004A42  6E02               	movwf	___fladd@b^0,c
 12452   004A44  0EFF               	movlw	255
 12453   004A46  200B               	addwfc	(??___fladd+1)^0,w,c
 12454   004A48  6E03               	movwf	(___fladd@b+1)^0,c
 12455   004A4A  0EFF               	movlw	255
 12456   004A4C  200C               	addwfc	(??___fladd+2)^0,w,c
 12457   004A4E  6E04               	movwf	(___fladd@b+2)^0,c
 12458   004A50  0EFF               	movlw	255
 12459   004A52  200D               	addwfc	(??___fladd+3)^0,w,c
 12460   004A54  6E05               	movwf	(___fladd@b+3)^0,c
 12461   004A56  0E80               	movlw	128
 12462   004A58  1A0E               	xorwf	___fladd@signs^0,f,c
 12463   004A5A  6C11               	negf	___fladd@grs^0,c
 12464   004A5C  5011               	movf	___fladd@grs^0,w,c
 12465   004A5E  A4D8               	btfss	status,2,c
 12466   004A60  EF34  F025         	goto	u3131
 12467   004A64  EF36  F025         	goto	u3130
 12468   004A68                     u3131:
 12469   004A68  EF46  F025         	goto	l1103
 12470   004A6C                     u3130:
 12471   004A6C  0E01               	movlw	1
 12472   004A6E  2602               	addwf	___fladd@b^0,f,c
 12473   004A70  0E00               	movlw	0
 12474   004A72  2203               	addwfc	(___fladd@b+1)^0,f,c
 12475   004A74  2204               	addwfc	(___fladd@b+2)^0,f,c
 12476   004A76  2205               	addwfc	(___fladd@b+3)^0,f,c
 12477   004A78  EF46  F025         	goto	l1103
 12478   004A7C                     l3938:
 12479   004A7C  5006               	movf	___fladd@a^0,w,c
 12480   004A7E  5E02               	subwf	___fladd@b^0,f,c
 12481   004A80  5007               	movf	(___fladd@a+1)^0,w,c
 12482   004A82  5A03               	subwfb	(___fladd@b+1)^0,f,c
 12483   004A84  5008               	movf	(___fladd@a+2)^0,w,c
 12484   004A86  5A04               	subwfb	(___fladd@b+2)^0,f,c
 12485   004A88  5009               	movf	(___fladd@a+3)^0,w,c
 12486   004A8A  5A05               	subwfb	(___fladd@b+3)^0,f,c
 12487   004A8C                     l1103:
 12488   004A8C  5002               	movf	___fladd@b^0,w,c
 12489   004A8E  1003               	iorwf	(___fladd@b+1)^0,w,c
 12490   004A90  1004               	iorwf	(___fladd@b+2)^0,w,c
 12491   004A92  1005               	iorwf	(___fladd@b+3)^0,w,c
 12492   004A94  A4D8               	btfss	status,2,c
 12493   004A96  EF4F  F025         	goto	u3141
 12494   004A9A  EF51  F025         	goto	u3140
 12495   004A9E                     u3141:
 12496   004A9E  EF86  F025         	goto	l3962
 12497   004AA2                     u3140:
 12498   004AA2  5011               	movf	___fladd@grs^0,w,c
 12499   004AA4  A4D8               	btfss	status,2,c
 12500   004AA6  EF57  F025         	goto	u3151
 12501   004AAA  EF59  F025         	goto	u3150
 12502   004AAE                     u3151:
 12503   004AAE  EF86  F025         	goto	l3962
 12504   004AB2                     u3150:
 12505   004AB2  0E00               	movlw	0
 12506   004AB4  6E02               	movwf	?___fladd^0,c
 12507   004AB6  0E00               	movlw	0
 12508   004AB8  6E03               	movwf	(?___fladd+1)^0,c
 12509   004ABA  0E00               	movlw	0
 12510   004ABC  6E04               	movwf	(?___fladd+2)^0,c
 12511   004ABE  0E00               	movlw	0
 12512   004AC0  6E05               	movwf	(?___fladd+3)^0,c
 12513   004AC2  EF21  F026         	goto	l1095
 12514   004AC6                     l3946:
 12515   004AC6  90D8               	bcf	status,0,c
 12516   004AC8  3602               	rlcf	___fladd@b^0,f,c
 12517   004ACA  3603               	rlcf	(___fladd@b+1)^0,f,c
 12518   004ACC  3604               	rlcf	(___fladd@b+2)^0,f,c
 12519   004ACE  3605               	rlcf	(___fladd@b+3)^0,f,c
 12520   004AD0  AE11               	btfss	___fladd@grs^0,7,c
 12521   004AD2  EF6D  F025         	goto	u3161
 12522   004AD6  EF6F  F025         	goto	u3160
 12523   004ADA                     u3161:
 12524   004ADA  EF70  F025         	goto	l3952
 12525   004ADE                     u3160:
 12526   004ADE  8002               	bsf	___fladd@b^0,0,c
 12527   004AE0                     l3952:
 12528   004AE0  A011               	btfss	___fladd@grs^0,0,c
 12529   004AE2  EF75  F025         	goto	u3171
 12530   004AE6  EF77  F025         	goto	u3170
 12531   004AEA                     u3171:
 12532   004AEA  EF7B  F025         	goto	l3956
 12533   004AEE                     u3170:
 12534   004AEE  80D8               	bsf	status,0,c
 12535   004AF0  3611               	rlcf	___fladd@grs^0,f,c
 12536   004AF2  EF7D  F025         	goto	l3958
 12537   004AF6                     l3956:
 12538   004AF6  90D8               	bcf	status,0,c
 12539   004AF8  3611               	rlcf	___fladd@grs^0,f,c
 12540   004AFA                     l3958:
 12541   004AFA  5010               	movf	___fladd@bexp^0,w,c
 12542   004AFC  B4D8               	btfsc	status,2,c
 12543   004AFE  EF83  F025         	goto	u3181
 12544   004B02  EF85  F025         	goto	u3180
 12545   004B06                     u3181:
 12546   004B06  EF86  F025         	goto	l3962
 12547   004B0A                     u3180:
 12548   004B0A  0610               	decf	___fladd@bexp^0,f,c
 12549   004B0C                     l3962:
 12550   004B0C  AE04               	btfss	(___fladd@b+2)^0,7,c
 12551   004B0E  EF8B  F025         	goto	u3191
 12552   004B12  EF8D  F025         	goto	u3190
 12553   004B16                     u3191:
 12554   004B16  EF63  F025         	goto	l3946
 12555   004B1A                     u3190:
 12556   004B1A                     l3964:
 12557   004B1A  0E00               	movlw	0
 12558   004B1C  6E0F               	movwf	___fladd@aexp^0,c
 12559   004B1E  AE11               	btfss	___fladd@grs^0,7,c
 12560   004B20  EF94  F025         	goto	u3201
 12561   004B24  EF96  F025         	goto	u3200
 12562   004B28                     u3201:
 12563   004B28  EFAE  F025         	goto	l1112
 12564   004B2C                     u3200:
 12565   004B2C  C011  F00A         	movff	___fladd@grs,??___fladd
 12566   004B30  0E7F               	movlw	127
 12567   004B32  160A               	andwf	??___fladd^0,f,c
 12568   004B34  B4D8               	btfsc	status,2,c
 12569   004B36  EF9F  F025         	goto	u3211
 12570   004B3A  EFA1  F025         	goto	u3210
 12571   004B3E                     u3211:
 12572   004B3E  EFA5  F025         	goto	l1113
 12573   004B42                     u3210:
 12574   004B42                     l3970:
 12575   004B42  0E01               	movlw	1
 12576   004B44  6E0F               	movwf	___fladd@aexp^0,c
 12577   004B46  EFAE  F025         	goto	l1112
 12578   004B4A                     l1113:
 12579   004B4A  A002               	btfss	___fladd@b^0,0,c
 12580   004B4C  EFAA  F025         	goto	u3221
 12581   004B50  EFAC  F025         	goto	u3220
 12582   004B54                     u3221:
 12583   004B54  EFAE  F025         	goto	l1112
 12584   004B58                     u3220:
 12585   004B58  EFA1  F025         	goto	l3970
 12586   004B5C                     l1112:
 12587   004B5C  500F               	movf	___fladd@aexp^0,w,c
 12588   004B5E  B4D8               	btfsc	status,2,c
 12589   004B60  EFB4  F025         	goto	u3231
 12590   004B64  EFB6  F025         	goto	u3230
 12591   004B68                     u3231:
 12592   004B68  EFE1  F025         	goto	l3982
 12593   004B6C                     u3230:
 12594   004B6C  0E01               	movlw	1
 12595   004B6E  2602               	addwf	___fladd@b^0,f,c
 12596   004B70  0E00               	movlw	0
 12597   004B72  2203               	addwfc	(___fladd@b+1)^0,f,c
 12598   004B74  2204               	addwfc	(___fladd@b+2)^0,f,c
 12599   004B76  2205               	addwfc	(___fladd@b+3)^0,f,c
 12600   004B78  A005               	btfss	(___fladd@b+3)^0,0,c
 12601   004B7A  EFC1  F025         	goto	u3241
 12602   004B7E  EFC3  F025         	goto	u3240
 12603   004B82                     u3241:
 12604   004B82  EFE1  F025         	goto	l3982
 12605   004B86                     u3240:
 12606   004B86  C002  F00A         	movff	___fladd@b,??___fladd
 12607   004B8A  C003  F00B         	movff	___fladd@b+1,??___fladd+1
 12608   004B8E  C004  F00C         	movff	___fladd@b+2,??___fladd+2
 12609   004B92  C005  F00D         	movff	___fladd@b+3,??___fladd+3
 12610   004B96  340D               	rlcf	(??___fladd+3)^0,w,c
 12611   004B98  320D               	rrcf	(??___fladd+3)^0,f,c
 12612   004B9A  320C               	rrcf	(??___fladd+2)^0,f,c
 12613   004B9C  320B               	rrcf	(??___fladd+1)^0,f,c
 12614   004B9E  320A               	rrcf	??___fladd^0,f,c
 12615   004BA0  C00A  F002         	movff	??___fladd,___fladd@b
 12616   004BA4  C00B  F003         	movff	??___fladd+1,___fladd@b+1
 12617   004BA8  C00C  F004         	movff	??___fladd+2,___fladd@b+2
 12618   004BAC  C00D  F005         	movff	??___fladd+3,___fladd@b+3
 12619   004BB0  2810               	incf	___fladd@bexp^0,w,c
 12620   004BB2  B4D8               	btfsc	status,2,c
 12621   004BB4  EFDE  F025         	goto	u3251
 12622   004BB8  EFE0  F025         	goto	u3250
 12623   004BBC                     u3251:
 12624   004BBC  EFE1  F025         	goto	l3982
 12625   004BC0                     u3250:
 12626   004BC0  2A10               	incf	___fladd@bexp^0,f,c
 12627   004BC2                     l3982:
 12628   004BC2  2810               	incf	___fladd@bexp^0,w,c
 12629   004BC4  B4D8               	btfsc	status,2,c
 12630   004BC6  EFE7  F025         	goto	u3261
 12631   004BCA  EFE9  F025         	goto	u3260
 12632   004BCE                     u3261:
 12633   004BCE  EFF1  F025         	goto	l3986
 12634   004BD2                     u3260:
 12635   004BD2  5010               	movf	___fladd@bexp^0,w,c
 12636   004BD4  A4D8               	btfss	status,2,c
 12637   004BD6  EFEF  F025         	goto	u3271
 12638   004BDA  EFF1  F025         	goto	u3270
 12639   004BDE                     u3271:
 12640   004BDE  EF03  F026         	goto	l3990
 12641   004BE2                     u3270:
 12642   004BE2                     l3986:
 12643   004BE2  0E00               	movlw	0
 12644   004BE4  6E02               	movwf	___fladd@b^0,c
 12645   004BE6  0E00               	movlw	0
 12646   004BE8  6E03               	movwf	(___fladd@b+1)^0,c
 12647   004BEA  0E00               	movlw	0
 12648   004BEC  6E04               	movwf	(___fladd@b+2)^0,c
 12649   004BEE  0E00               	movlw	0
 12650   004BF0  6E05               	movwf	(___fladd@b+3)^0,c
 12651   004BF2  5010               	movf	___fladd@bexp^0,w,c
 12652   004BF4  A4D8               	btfss	status,2,c
 12653   004BF6  EFFF  F025         	goto	u3281
 12654   004BFA  EF01  F026         	goto	u3280
 12655   004BFE                     u3281:
 12656   004BFE  EF03  F026         	goto	l3990
 12657   004C02                     u3280:
 12658   004C02  0E00               	movlw	0
 12659   004C04  6E0E               	movwf	___fladd@signs^0,c
 12660   004C06                     l3990:
 12661   004C06  A010               	btfss	___fladd@bexp^0,0,c
 12662   004C08  EF08  F026         	goto	u3291
 12663   004C0C  EF0A  F026         	goto	u3290
 12664   004C10                     u3291:
 12665   004C10  EF0D  F026         	goto	l3994
 12666   004C14                     u3290:
 12667   004C14  8E04               	bsf	(___fladd@b+2)^0,7,c
 12668   004C16  EF0E  F026         	goto	l3996
 12669   004C1A                     l3994:
 12670   004C1A  9E04               	bcf	(___fladd@b+2)^0,7,c
 12671   004C1C                     l3996:
 12672   004C1C  90D8               	bcf	status,0,c
 12673   004C1E  3010               	rrcf	___fladd@bexp^0,w,c
 12674   004C20  6E05               	movwf	(___fladd@b+3)^0,c
 12675   004C22  AE0E               	btfss	___fladd@signs^0,7,c
 12676   004C24  EF16  F026         	goto	u3301
 12677   004C28  EF18  F026         	goto	u3300
 12678   004C2C                     u3301:
 12679   004C2C  EF19  F026         	goto	l4002
 12680   004C30                     u3300:
 12681   004C30  8E05               	bsf	(___fladd@b+3)^0,7,c
 12682   004C32                     l4002:
 12683   004C32  C002  F002         	movff	___fladd@b,?___fladd
 12684   004C36  C003  F003         	movff	___fladd@b+1,?___fladd+1
 12685   004C3A  C004  F004         	movff	___fladd@b+2,?___fladd+2
 12686   004C3E  C005  F005         	movff	___fladd@b+3,?___fladd+3
 12687   004C42                     l1095:
 12688   004C42  0012               	return		;funcret
 12689   004C44                     __end_of___fladd:
 12690                           	callstack 0
 12691                           
 12692 ;; *************** function ___flneg *****************
 12693 ;; Defined at:
 12694 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
 12695 ;; Parameters:    Size  Location     Type
 12696 ;;  f1              4    1[COMRAM] unsigned char 
 12697 ;; Auto vars:     Size  Location     Type
 12698 ;;		None
 12699 ;; Return value:  Size  Location     Type
 12700 ;;                  4    1[COMRAM] unsigned char 
 12701 ;; Registers used:
 12702 ;;		wreg, status,2, status,0
 12703 ;; Tracked objects:
 12704 ;;		On entry : 0/0
 12705 ;;		On exit  : 0/0
 12706 ;;		Unchanged: 0/0
 12707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12708 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12711 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12712 ;;Total ram usage:        4 bytes
 12713 ;; Hardware stack levels used: 1
 12714 ;; Hardware stack levels required when called: 2
 12715 ;; This function calls:
 12716 ;;		Nothing
 12717 ;; This function is called by:
 12718 ;;		_powf
 12719 ;; This function uses a non-reentrant model
 12720 ;;
 12721                           
 12722                           	psect	text34
 12723   007020                     __ptext34:
 12724                           	callstack 0
 12725   007020                     ___flneg:
 12726                           	callstack 26
 12727   007020  5002               	movf	___flneg@f1^0,w,c
 12728   007022  1003               	iorwf	(___flneg@f1+1)^0,w,c
 12729   007024  1004               	iorwf	(___flneg@f1+2)^0,w,c
 12730   007026  1005               	iorwf	(___flneg@f1+3)^0,w,c
 12731   007028  B4D8               	btfsc	status,2,c
 12732   00702A  EF19  F038         	goto	u4101
 12733   00702E  EF1B  F038         	goto	u4100
 12734   007032                     u4101:
 12735   007032  EF23  F038         	goto	l4494
 12736   007036                     u4100:
 12737   007036  0E00               	movlw	0
 12738   007038  1A02               	xorwf	___flneg@f1^0,f,c
 12739   00703A  0E00               	movlw	0
 12740   00703C  1A03               	xorwf	(___flneg@f1+1)^0,f,c
 12741   00703E  0E00               	movlw	0
 12742   007040  1A04               	xorwf	(___flneg@f1+2)^0,f,c
 12743   007042  0E80               	movlw	128
 12744   007044  1A05               	xorwf	(___flneg@f1+3)^0,f,c
 12745   007046                     l4494:
 12746   007046  C002  F002         	movff	___flneg@f1,?___flneg
 12747   00704A  C003  F003         	movff	___flneg@f1+1,?___flneg+1
 12748   00704E  C004  F004         	movff	___flneg@f1+2,?___flneg+2
 12749   007052  C005  F005         	movff	___flneg@f1+3,?___flneg+3
 12750   007056  0012               	return		;funcret
 12751   007058                     __end_of___flneg:
 12752                           	callstack 0
 12753                           
 12754 ;; *************** function ___flge *****************
 12755 ;; Defined at:
 12756 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 12757 ;; Parameters:    Size  Location     Type
 12758 ;;  ff1             4   75[COMRAM] unsigned char 
 12759 ;;  ff2             4   79[COMRAM] unsigned char 
 12760 ;; Auto vars:     Size  Location     Type
 12761 ;;		None
 12762 ;; Return value:  Size  Location     Type
 12763 ;;		None               void
 12764 ;; Registers used:
 12765 ;;		wreg, status,2, status,0
 12766 ;; Tracked objects:
 12767 ;;		On entry : 0/0
 12768 ;;		On exit  : 0/0
 12769 ;;		Unchanged: 0/0
 12770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12771 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12773 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12774 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12775 ;;Total ram usage:       12 bytes
 12776 ;; Hardware stack levels used: 1
 12777 ;; Hardware stack levels required when called: 2
 12778 ;; This function calls:
 12779 ;;		Nothing
 12780 ;; This function is called by:
 12781 ;;		_decide_action
 12782 ;;		_powf
 12783 ;; This function uses a non-reentrant model
 12784 ;;
 12785                           
 12786                           	psect	text35
 12787   0061B0                     __ptext35:
 12788                           	callstack 0
 12789   0061B0                     ___flge:
 12790                           	callstack 26
 12791   0061B0  0E00               	movlw	0
 12792   0061B2  144C               	andwf	___flge@ff1^0,w,c
 12793   0061B4  6E54               	movwf	??___flge^0,c
 12794   0061B6  0E00               	movlw	0
 12795   0061B8  144D               	andwf	(___flge@ff1+1)^0,w,c
 12796   0061BA  6E55               	movwf	(??___flge+1)^0,c
 12797   0061BC  0E80               	movlw	128
 12798   0061BE  144E               	andwf	(___flge@ff1+2)^0,w,c
 12799   0061C0  6E56               	movwf	(??___flge+2)^0,c
 12800   0061C2  0E7F               	movlw	127
 12801   0061C4  144F               	andwf	(___flge@ff1+3)^0,w,c
 12802   0061C6  6E57               	movwf	(??___flge+3)^0,c
 12803   0061C8  5054               	movf	??___flge^0,w,c
 12804   0061CA  1055               	iorwf	(??___flge+1)^0,w,c
 12805   0061CC  1056               	iorwf	(??___flge+2)^0,w,c
 12806   0061CE  1057               	iorwf	(??___flge+3)^0,w,c
 12807   0061D0  A4D8               	btfss	status,2,c
 12808   0061D2  EFED  F030         	goto	u4051
 12809   0061D6  EFEF  F030         	goto	u4050
 12810   0061DA                     u4051:
 12811   0061DA  EFF7  F030         	goto	l4472
 12812   0061DE                     u4050:
 12813   0061DE  0E00               	movlw	0
 12814   0061E0  6E4C               	movwf	___flge@ff1^0,c
 12815   0061E2  0E00               	movlw	0
 12816   0061E4  6E4D               	movwf	(___flge@ff1+1)^0,c
 12817   0061E6  0E00               	movlw	0
 12818   0061E8  6E4E               	movwf	(___flge@ff1+2)^0,c
 12819   0061EA  0E00               	movlw	0
 12820   0061EC  6E4F               	movwf	(___flge@ff1+3)^0,c
 12821   0061EE                     l4472:
 12822   0061EE  0E00               	movlw	0
 12823   0061F0  1450               	andwf	___flge@ff2^0,w,c
 12824   0061F2  6E54               	movwf	??___flge^0,c
 12825   0061F4  0E00               	movlw	0
 12826   0061F6  1451               	andwf	(___flge@ff2+1)^0,w,c
 12827   0061F8  6E55               	movwf	(??___flge+1)^0,c
 12828   0061FA  0E80               	movlw	128
 12829   0061FC  1452               	andwf	(___flge@ff2+2)^0,w,c
 12830   0061FE  6E56               	movwf	(??___flge+2)^0,c
 12831   006200  0E7F               	movlw	127
 12832   006202  1453               	andwf	(___flge@ff2+3)^0,w,c
 12833   006204  6E57               	movwf	(??___flge+3)^0,c
 12834   006206  5054               	movf	??___flge^0,w,c
 12835   006208  1055               	iorwf	(??___flge+1)^0,w,c
 12836   00620A  1056               	iorwf	(??___flge+2)^0,w,c
 12837   00620C  1057               	iorwf	(??___flge+3)^0,w,c
 12838   00620E  A4D8               	btfss	status,2,c
 12839   006210  EF0C  F031         	goto	u4061
 12840   006214  EF0E  F031         	goto	u4060
 12841   006218                     u4061:
 12842   006218  EF16  F031         	goto	l4476
 12843   00621C                     u4060:
 12844   00621C  0E00               	movlw	0
 12845   00621E  6E50               	movwf	___flge@ff2^0,c
 12846   006220  0E00               	movlw	0
 12847   006222  6E51               	movwf	(___flge@ff2+1)^0,c
 12848   006224  0E00               	movlw	0
 12849   006226  6E52               	movwf	(___flge@ff2+2)^0,c
 12850   006228  0E00               	movlw	0
 12851   00622A  6E53               	movwf	(___flge@ff2+3)^0,c
 12852   00622C                     l4476:
 12853   00622C  AE4F               	btfss	(___flge@ff1+3)^0,7,c
 12854   00622E  EF1B  F031         	goto	u4071
 12855   006232  EF1D  F031         	goto	u4070
 12856   006236                     u4071:
 12857   006236  EF26  F031         	goto	l4480
 12858   00623A                     u4070:
 12859   00623A  6C4C               	negf	___flge@ff1^0,c
 12860   00623C  1E4D               	comf	(___flge@ff1+1)^0,f,c
 12861   00623E  B0D8               	btfsc	status,0,c
 12862   006240  2A4D               	incf	(___flge@ff1+1)^0,f,c
 12863   006242  1E4E               	comf	(___flge@ff1+2)^0,f,c
 12864   006244  B0D8               	btfsc	status,0,c
 12865   006246  2A4E               	incf	(___flge@ff1+2)^0,f,c
 12866   006248  0E80               	movlw	128
 12867   00624A  564F               	subfwb	(___flge@ff1+3)^0,f,c
 12868   00624C                     l4480:
 12869   00624C  AE53               	btfss	(___flge@ff2+3)^0,7,c
 12870   00624E  EF2B  F031         	goto	u4081
 12871   006252  EF2D  F031         	goto	u4080
 12872   006256                     u4081:
 12873   006256  EF36  F031         	goto	l823
 12874   00625A                     u4080:
 12875   00625A  6C50               	negf	___flge@ff2^0,c
 12876   00625C  1E51               	comf	(___flge@ff2+1)^0,f,c
 12877   00625E  B0D8               	btfsc	status,0,c
 12878   006260  2A51               	incf	(___flge@ff2+1)^0,f,c
 12879   006262  1E52               	comf	(___flge@ff2+2)^0,f,c
 12880   006264  B0D8               	btfsc	status,0,c
 12881   006266  2A52               	incf	(___flge@ff2+2)^0,f,c
 12882   006268  0E80               	movlw	128
 12883   00626A  5653               	subfwb	(___flge@ff2+3)^0,f,c
 12884   00626C                     l823:
 12885   00626C  0E00               	movlw	0
 12886   00626E  1A4C               	xorwf	___flge@ff1^0,f,c
 12887   006270  0E00               	movlw	0
 12888   006272  1A4D               	xorwf	(___flge@ff1+1)^0,f,c
 12889   006274  0E00               	movlw	0
 12890   006276  1A4E               	xorwf	(___flge@ff1+2)^0,f,c
 12891   006278  0E80               	movlw	128
 12892   00627A  1A4F               	xorwf	(___flge@ff1+3)^0,f,c
 12893   00627C  0E00               	movlw	0
 12894   00627E  1A50               	xorwf	___flge@ff2^0,f,c
 12895   006280  0E00               	movlw	0
 12896   006282  1A51               	xorwf	(___flge@ff2+1)^0,f,c
 12897   006284  0E00               	movlw	0
 12898   006286  1A52               	xorwf	(___flge@ff2+2)^0,f,c
 12899   006288  0E80               	movlw	128
 12900   00628A  1A53               	xorwf	(___flge@ff2+3)^0,f,c
 12901   00628C  5050               	movf	___flge@ff2^0,w,c
 12902   00628E  5C4C               	subwf	___flge@ff1^0,w,c
 12903   006290  5051               	movf	(___flge@ff2+1)^0,w,c
 12904   006292  584D               	subwfb	(___flge@ff1+1)^0,w,c
 12905   006294  5052               	movf	(___flge@ff2+2)^0,w,c
 12906   006296  584E               	subwfb	(___flge@ff1+2)^0,w,c
 12907   006298  5053               	movf	(___flge@ff2+3)^0,w,c
 12908   00629A  584F               	subwfb	(___flge@ff1+3)^0,w,c
 12909   00629C  B0D8               	btfsc	status,0,c
 12910   00629E  EF53  F031         	goto	u4091
 12911   0062A2  EF55  F031         	goto	u4090
 12912   0062A6                     u4091:
 12913   0062A6  EF58  F031         	goto	l4486
 12914   0062AA                     u4090:
 12915   0062AA  90D8               	bcf	status,0,c
 12916   0062AC  EF59  F031         	goto	l828
 12917   0062B0                     l4486:
 12918   0062B0  80D8               	bsf	status,0,c
 12919   0062B2                     l828:
 12920   0062B2  0012               	return		;funcret
 12921   0062B4                     __end_of___flge:
 12922                           	callstack 0
 12923                           
 12924 ;; *************** function ___fldiv *****************
 12925 ;; Defined at:
 12926 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 12927 ;; Parameters:    Size  Location     Type
 12928 ;;  b               4   42[COMRAM] unsigned char 
 12929 ;;  a               4   46[COMRAM] unsigned char 
 12930 ;; Auto vars:     Size  Location     Type
 12931 ;;  grs             4   61[COMRAM] unsigned long 
 12932 ;;  rem             4   54[COMRAM] unsigned long 
 12933 ;;  new_exp         2   59[COMRAM] short 
 12934 ;;  aexp            1   66[COMRAM] unsigned char 
 12935 ;;  bexp            1   65[COMRAM] unsigned char 
 12936 ;;  sign            1   58[COMRAM] unsigned char 
 12937 ;; Return value:  Size  Location     Type
 12938 ;;                  4   42[COMRAM] unsigned char 
 12939 ;; Registers used:
 12940 ;;		wreg, status,2, status,0
 12941 ;; Tracked objects:
 12942 ;;		On entry : 0/0
 12943 ;;		On exit  : 0/0
 12944 ;;		Unchanged: 0/0
 12945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12946 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12947 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12948 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12949 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12950 ;;Total ram usage:       25 bytes
 12951 ;; Hardware stack levels used: 1
 12952 ;; Hardware stack levels required when called: 2
 12953 ;; This function calls:
 12954 ;;		Nothing
 12955 ;; This function is called by:
 12956 ;;		_decide_action
 12957 ;;		_powf
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           	psect	text36
 12962   00544C                     __ptext36:
 12963                           	callstack 0
 12964   00544C                     ___fldiv:
 12965                           	callstack 26
 12966   00544C  502E               	movf	(___fldiv@b+3)^0,w,c
 12967   00544E  0B80               	andlw	128
 12968   005450  6E3B               	movwf	___fldiv@sign^0,c
 12969   005452  502E               	movf	(___fldiv@b+3)^0,w,c
 12970   005454  242E               	addwf	(___fldiv@b+3)^0,w,c
 12971   005456  6E42               	movwf	___fldiv@bexp^0,c
 12972   005458  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 12973   00545A  EF31  F02A         	goto	u3821
 12974   00545E  EF33  F02A         	goto	u3820
 12975   005462                     u3821:
 12976   005462  EF34  F02A         	goto	l4330
 12977   005466                     u3820:
 12978   005466  8042               	bsf	___fldiv@bexp^0,0,c
 12979   005468                     l4330:
 12980   005468  5042               	movf	___fldiv@bexp^0,w,c
 12981   00546A  B4D8               	btfsc	status,2,c
 12982   00546C  EF3A  F02A         	goto	u3831
 12983   005470  EF3C  F02A         	goto	u3830
 12984   005474                     u3831:
 12985   005474  EF51  F02A         	goto	l4340
 12986   005478                     u3830:
 12987   005478  2842               	incf	___fldiv@bexp^0,w,c
 12988   00547A  A4D8               	btfss	status,2,c
 12989   00547C  EF42  F02A         	goto	u3841
 12990   005480  EF44  F02A         	goto	u3840
 12991   005484                     u3841:
 12992   005484  EF4C  F02A         	goto	l4336
 12993   005488                     u3840:
 12994   005488  0E00               	movlw	0
 12995   00548A  6E2B               	movwf	___fldiv@b^0,c
 12996   00548C  0E00               	movlw	0
 12997   00548E  6E2C               	movwf	(___fldiv@b+1)^0,c
 12998   005490  0E00               	movlw	0
 12999   005492  6E2D               	movwf	(___fldiv@b+2)^0,c
 13000   005494  0E00               	movlw	0
 13001   005496  6E2E               	movwf	(___fldiv@b+3)^0,c
 13002   005498                     l4336:
 13003   005498  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 13004   00549A  0E00               	movlw	0
 13005   00549C  6E2E               	movwf	(___fldiv@b+3)^0,c
 13006   00549E  EF59  F02A         	goto	l4342
 13007   0054A2                     l4340:
 13008   0054A2  0E00               	movlw	0
 13009   0054A4  6E2B               	movwf	___fldiv@b^0,c
 13010   0054A6  0E00               	movlw	0
 13011   0054A8  6E2C               	movwf	(___fldiv@b+1)^0,c
 13012   0054AA  0E00               	movlw	0
 13013   0054AC  6E2D               	movwf	(___fldiv@b+2)^0,c
 13014   0054AE  0E00               	movlw	0
 13015   0054B0  6E2E               	movwf	(___fldiv@b+3)^0,c
 13016   0054B2                     l4342:
 13017   0054B2  5032               	movf	(___fldiv@a+3)^0,w,c
 13018   0054B4  0B80               	andlw	128
 13019   0054B6  1A3B               	xorwf	___fldiv@sign^0,f,c
 13020   0054B8  5032               	movf	(___fldiv@a+3)^0,w,c
 13021   0054BA  2432               	addwf	(___fldiv@a+3)^0,w,c
 13022   0054BC  6E43               	movwf	___fldiv@aexp^0,c
 13023   0054BE  AE31               	btfss	(___fldiv@a+2)^0,7,c
 13024   0054C0  EF64  F02A         	goto	u3851
 13025   0054C4  EF66  F02A         	goto	u3850
 13026   0054C8                     u3851:
 13027   0054C8  EF67  F02A         	goto	l4350
 13028   0054CC                     u3850:
 13029   0054CC  8043               	bsf	___fldiv@aexp^0,0,c
 13030   0054CE                     l4350:
 13031   0054CE  5043               	movf	___fldiv@aexp^0,w,c
 13032   0054D0  B4D8               	btfsc	status,2,c
 13033   0054D2  EF6D  F02A         	goto	u3861
 13034   0054D6  EF6F  F02A         	goto	u3860
 13035   0054DA                     u3861:
 13036   0054DA  EF84  F02A         	goto	l4360
 13037   0054DE                     u3860:
 13038   0054DE  2843               	incf	___fldiv@aexp^0,w,c
 13039   0054E0  A4D8               	btfss	status,2,c
 13040   0054E2  EF75  F02A         	goto	u3871
 13041   0054E6  EF77  F02A         	goto	u3870
 13042   0054EA                     u3871:
 13043   0054EA  EF7F  F02A         	goto	l4356
 13044   0054EE                     u3870:
 13045   0054EE  0E00               	movlw	0
 13046   0054F0  6E2F               	movwf	___fldiv@a^0,c
 13047   0054F2  0E00               	movlw	0
 13048   0054F4  6E30               	movwf	(___fldiv@a+1)^0,c
 13049   0054F6  0E00               	movlw	0
 13050   0054F8  6E31               	movwf	(___fldiv@a+2)^0,c
 13051   0054FA  0E00               	movlw	0
 13052   0054FC  6E32               	movwf	(___fldiv@a+3)^0,c
 13053   0054FE                     l4356:
 13054   0054FE  8E31               	bsf	(___fldiv@a+2)^0,7,c
 13055   005500  0E00               	movlw	0
 13056   005502  6E32               	movwf	(___fldiv@a+3)^0,c
 13057   005504  EF8C  F02A         	goto	l4362
 13058   005508                     l4360:
 13059   005508  0E00               	movlw	0
 13060   00550A  6E2F               	movwf	___fldiv@a^0,c
 13061   00550C  0E00               	movlw	0
 13062   00550E  6E30               	movwf	(___fldiv@a+1)^0,c
 13063   005510  0E00               	movlw	0
 13064   005512  6E31               	movwf	(___fldiv@a+2)^0,c
 13065   005514  0E00               	movlw	0
 13066   005516  6E32               	movwf	(___fldiv@a+3)^0,c
 13067   005518                     l4362:
 13068   005518  502F               	movf	___fldiv@a^0,w,c
 13069   00551A  1030               	iorwf	(___fldiv@a+1)^0,w,c
 13070   00551C  1031               	iorwf	(___fldiv@a+2)^0,w,c
 13071   00551E  1032               	iorwf	(___fldiv@a+3)^0,w,c
 13072   005520  A4D8               	btfss	status,2,c
 13073   005522  EF95  F02A         	goto	u3881
 13074   005526  EF97  F02A         	goto	u3880
 13075   00552A                     u3881:
 13076   00552A  EFAF  F02A         	goto	l4374
 13077   00552E                     u3880:
 13078   00552E  0E00               	movlw	0
 13079   005530  6E2B               	movwf	___fldiv@b^0,c
 13080   005532  0E00               	movlw	0
 13081   005534  6E2C               	movwf	(___fldiv@b+1)^0,c
 13082   005536  0E00               	movlw	0
 13083   005538  6E2D               	movwf	(___fldiv@b+2)^0,c
 13084   00553A  0E00               	movlw	0
 13085   00553C  6E2E               	movwf	(___fldiv@b+3)^0,c
 13086   00553E  0E80               	movlw	128
 13087   005540  122D               	iorwf	(___fldiv@b+2)^0,f,c
 13088   005542  0E7F               	movlw	127
 13089   005544  122E               	iorwf	(___fldiv@b+3)^0,f,c
 13090   005546                     l4368:
 13091   005546  503B               	movf	___fldiv@sign^0,w,c
 13092   005548  122E               	iorwf	(___fldiv@b+3)^0,f,c
 13093   00554A  C02B  F02B         	movff	___fldiv@b,?___fldiv
 13094   00554E  C02C  F02C         	movff	___fldiv@b+1,?___fldiv+1
 13095   005552  C02D  F02D         	movff	___fldiv@b+2,?___fldiv+2
 13096   005556  C02E  F02E         	movff	___fldiv@b+3,?___fldiv+3
 13097   00555A  EFF2  F02B         	goto	l1140
 13098   00555E                     l4374:
 13099   00555E  5042               	movf	___fldiv@bexp^0,w,c
 13100   005560  A4D8               	btfss	status,2,c
 13101   005562  EFB5  F02A         	goto	u3891
 13102   005566  EFB7  F02A         	goto	u3890
 13103   00556A                     u3891:
 13104   00556A  EFC1  F02A         	goto	l4382
 13105   00556E                     u3890:
 13106   00556E  0E00               	movlw	0
 13107   005570  6E2B               	movwf	?___fldiv^0,c
 13108   005572  0E00               	movlw	0
 13109   005574  6E2C               	movwf	(?___fldiv+1)^0,c
 13110   005576  0E00               	movlw	0
 13111   005578  6E2D               	movwf	(?___fldiv+2)^0,c
 13112   00557A  0E00               	movlw	0
 13113   00557C  6E2E               	movwf	(?___fldiv+3)^0,c
 13114   00557E  EFF2  F02B         	goto	l1140
 13115   005582                     l4382:
 13116   005582  5043               	movf	___fldiv@aexp^0,w,c
 13117   005584  C042  F033         	movff	___fldiv@bexp,??___fldiv
 13118   005588  6A34               	clrf	(??___fldiv+1)^0,c
 13119   00558A  5E33               	subwf	??___fldiv^0,f,c
 13120   00558C  0E00               	movlw	0
 13121   00558E  5A34               	subwfb	(??___fldiv+1)^0,f,c
 13122   005590  0E7F               	movlw	127
 13123   005592  2433               	addwf	??___fldiv^0,w,c
 13124   005594  6E3C               	movwf	___fldiv@new_exp^0,c
 13125   005596  0E00               	movlw	0
 13126   005598  2034               	addwfc	(??___fldiv+1)^0,w,c
 13127   00559A  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 13128   00559C  C02B  F037         	movff	___fldiv@b,___fldiv@rem
 13129   0055A0  C02C  F038         	movff	___fldiv@b+1,___fldiv@rem+1
 13130   0055A4  C02D  F039         	movff	___fldiv@b+2,___fldiv@rem+2
 13131   0055A8  C02E  F03A         	movff	___fldiv@b+3,___fldiv@rem+3
 13132   0055AC  0E00               	movlw	0
 13133   0055AE  6E2B               	movwf	___fldiv@b^0,c
 13134   0055B0  0E00               	movlw	0
 13135   0055B2  6E2C               	movwf	(___fldiv@b+1)^0,c
 13136   0055B4  0E00               	movlw	0
 13137   0055B6  6E2D               	movwf	(___fldiv@b+2)^0,c
 13138   0055B8  0E00               	movlw	0
 13139   0055BA  6E2E               	movwf	(___fldiv@b+3)^0,c
 13140   0055BC  0E00               	movlw	0
 13141   0055BE  6E3E               	movwf	___fldiv@grs^0,c
 13142   0055C0  0E00               	movlw	0
 13143   0055C2  6E3F               	movwf	(___fldiv@grs+1)^0,c
 13144   0055C4  0E00               	movlw	0
 13145   0055C6  6E40               	movwf	(___fldiv@grs+2)^0,c
 13146   0055C8  0E00               	movlw	0
 13147   0055CA  6E41               	movwf	(___fldiv@grs+3)^0,c
 13148   0055CC  0E00               	movlw	0
 13149   0055CE  6E43               	movwf	___fldiv@aexp^0,c
 13150   0055D0  EF22  F02B         	goto	l1142
 13151   0055D4                     l4392:
 13152   0055D4  5043               	movf	___fldiv@aexp^0,w,c
 13153   0055D6  B4D8               	btfsc	status,2,c
 13154   0055D8  EFF0  F02A         	goto	u3901
 13155   0055DC  EFF2  F02A         	goto	u3900
 13156   0055E0                     u3901:
 13157   0055E0  EF09  F02B         	goto	l4400
 13158   0055E4                     u3900:
 13159   0055E4  90D8               	bcf	status,0,c
 13160   0055E6  3637               	rlcf	___fldiv@rem^0,f,c
 13161   0055E8  3638               	rlcf	(___fldiv@rem+1)^0,f,c
 13162   0055EA  3639               	rlcf	(___fldiv@rem+2)^0,f,c
 13163   0055EC  363A               	rlcf	(___fldiv@rem+3)^0,f,c
 13164   0055EE  90D8               	bcf	status,0,c
 13165   0055F0  362B               	rlcf	___fldiv@b^0,f,c
 13166   0055F2  362C               	rlcf	(___fldiv@b+1)^0,f,c
 13167   0055F4  362D               	rlcf	(___fldiv@b+2)^0,f,c
 13168   0055F6  362E               	rlcf	(___fldiv@b+3)^0,f,c
 13169   0055F8  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 13170   0055FA  EF01  F02B         	goto	u3911
 13171   0055FE  EF03  F02B         	goto	u3910
 13172   005602                     u3911:
 13173   005602  EF04  F02B         	goto	l1145
 13174   005606                     u3910:
 13175   005606  802B               	bsf	___fldiv@b^0,0,c
 13176   005608                     l1145:
 13177   005608  90D8               	bcf	status,0,c
 13178   00560A  363E               	rlcf	___fldiv@grs^0,f,c
 13179   00560C  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 13180   00560E  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 13181   005610  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 13182   005612                     l4400:
 13183   005612  502F               	movf	___fldiv@a^0,w,c
 13184   005614  5C37               	subwf	___fldiv@rem^0,w,c
 13185   005616  5030               	movf	(___fldiv@a+1)^0,w,c
 13186   005618  5838               	subwfb	(___fldiv@rem+1)^0,w,c
 13187   00561A  5031               	movf	(___fldiv@a+2)^0,w,c
 13188   00561C  5839               	subwfb	(___fldiv@rem+2)^0,w,c
 13189   00561E  5032               	movf	(___fldiv@a+3)^0,w,c
 13190   005620  583A               	subwfb	(___fldiv@rem+3)^0,w,c
 13191   005622  A0D8               	btfss	status,0,c
 13192   005624  EF16  F02B         	goto	u3921
 13193   005628  EF18  F02B         	goto	u3920
 13194   00562C                     u3921:
 13195   00562C  EF21  F02B         	goto	l4406
 13196   005630                     u3920:
 13197   005630  8C41               	bsf	(___fldiv@grs+3)^0,6,c
 13198   005632  502F               	movf	___fldiv@a^0,w,c
 13199   005634  5E37               	subwf	___fldiv@rem^0,f,c
 13200   005636  5030               	movf	(___fldiv@a+1)^0,w,c
 13201   005638  5A38               	subwfb	(___fldiv@rem+1)^0,f,c
 13202   00563A  5031               	movf	(___fldiv@a+2)^0,w,c
 13203   00563C  5A39               	subwfb	(___fldiv@rem+2)^0,f,c
 13204   00563E  5032               	movf	(___fldiv@a+3)^0,w,c
 13205   005640  5A3A               	subwfb	(___fldiv@rem+3)^0,f,c
 13206   005642                     l4406:
 13207   005642  2A43               	incf	___fldiv@aexp^0,f,c
 13208   005644                     l1142:
 13209   005644  0E19               	movlw	25
 13210   005646  6443               	cpfsgt	___fldiv@aexp^0,c
 13211   005648  EF28  F02B         	goto	u3931
 13212   00564C  EF2A  F02B         	goto	u3930
 13213   005650                     u3931:
 13214   005650  EFEA  F02A         	goto	l4392
 13215   005654                     u3930:
 13216   005654  5037               	movf	___fldiv@rem^0,w,c
 13217   005656  1038               	iorwf	(___fldiv@rem+1)^0,w,c
 13218   005658  1039               	iorwf	(___fldiv@rem+2)^0,w,c
 13219   00565A  103A               	iorwf	(___fldiv@rem+3)^0,w,c
 13220   00565C  B4D8               	btfsc	status,2,c
 13221   00565E  EF33  F02B         	goto	u3941
 13222   005662  EF35  F02B         	goto	u3940
 13223   005666                     u3941:
 13224   005666  EF4D  F02B         	goto	l4418
 13225   00566A                     u3940:
 13226   00566A  803E               	bsf	___fldiv@grs^0,0,c
 13227   00566C  EF4D  F02B         	goto	l4418
 13228   005670                     l4412:
 13229   005670  90D8               	bcf	status,0,c
 13230   005672  362B               	rlcf	___fldiv@b^0,f,c
 13231   005674  362C               	rlcf	(___fldiv@b+1)^0,f,c
 13232   005676  362D               	rlcf	(___fldiv@b+2)^0,f,c
 13233   005678  362E               	rlcf	(___fldiv@b+3)^0,f,c
 13234   00567A  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 13235   00567C  EF42  F02B         	goto	u3951
 13236   005680  EF44  F02B         	goto	u3950
 13237   005684                     u3951:
 13238   005684  EF45  F02B         	goto	l1151
 13239   005688                     u3950:
 13240   005688  802B               	bsf	___fldiv@b^0,0,c
 13241   00568A                     l1151:
 13242   00568A  90D8               	bcf	status,0,c
 13243   00568C  363E               	rlcf	___fldiv@grs^0,f,c
 13244   00568E  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 13245   005690  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 13246   005692  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 13247   005694  063C               	decf	___fldiv@new_exp^0,f,c
 13248   005696  A0D8               	btfss	status,0,c
 13249   005698  063D               	decf	(___fldiv@new_exp+1)^0,f,c
 13250   00569A                     l4418:
 13251   00569A  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 13252   00569C  EF52  F02B         	goto	u3961
 13253   0056A0  EF54  F02B         	goto	u3960
 13254   0056A4                     u3961:
 13255   0056A4  EF38  F02B         	goto	l4412
 13256   0056A8                     u3960:
 13257   0056A8  0E00               	movlw	0
 13258   0056AA  6E43               	movwf	___fldiv@aexp^0,c
 13259   0056AC  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 13260   0056AE  EF5B  F02B         	goto	u3971
 13261   0056B2  EF5D  F02B         	goto	u3970
 13262   0056B6                     u3971:
 13263   0056B6  EF81  F02B         	goto	l1153
 13264   0056BA                     u3970:
 13265   0056BA  0EFF               	movlw	255
 13266   0056BC  143E               	andwf	___fldiv@grs^0,w,c
 13267   0056BE  6E33               	movwf	??___fldiv^0,c
 13268   0056C0  0EFF               	movlw	255
 13269   0056C2  143F               	andwf	(___fldiv@grs+1)^0,w,c
 13270   0056C4  6E34               	movwf	(??___fldiv+1)^0,c
 13271   0056C6  0EFF               	movlw	255
 13272   0056C8  1440               	andwf	(___fldiv@grs+2)^0,w,c
 13273   0056CA  6E35               	movwf	(??___fldiv+2)^0,c
 13274   0056CC  0E7F               	movlw	127
 13275   0056CE  1441               	andwf	(___fldiv@grs+3)^0,w,c
 13276   0056D0  6E36               	movwf	(??___fldiv+3)^0,c
 13277   0056D2  5033               	movf	??___fldiv^0,w,c
 13278   0056D4  1034               	iorwf	(??___fldiv+1)^0,w,c
 13279   0056D6  1035               	iorwf	(??___fldiv+2)^0,w,c
 13280   0056D8  1036               	iorwf	(??___fldiv+3)^0,w,c
 13281   0056DA  B4D8               	btfsc	status,2,c
 13282   0056DC  EF72  F02B         	goto	u3981
 13283   0056E0  EF74  F02B         	goto	u3980
 13284   0056E4                     u3981:
 13285   0056E4  EF78  F02B         	goto	l1154
 13286   0056E8                     u3980:
 13287   0056E8                     l4426:
 13288   0056E8  0E01               	movlw	1
 13289   0056EA  6E43               	movwf	___fldiv@aexp^0,c
 13290   0056EC  EF81  F02B         	goto	l1153
 13291   0056F0                     l1154:
 13292   0056F0  A02B               	btfss	___fldiv@b^0,0,c
 13293   0056F2  EF7D  F02B         	goto	u3991
 13294   0056F6  EF7F  F02B         	goto	u3990
 13295   0056FA                     u3991:
 13296   0056FA  EF81  F02B         	goto	l1153
 13297   0056FE                     u3990:
 13298   0056FE  EF74  F02B         	goto	l4426
 13299   005702                     l1153:
 13300   005702  5043               	movf	___fldiv@aexp^0,w,c
 13301   005704  B4D8               	btfsc	status,2,c
 13302   005706  EF87  F02B         	goto	u4001
 13303   00570A  EF89  F02B         	goto	u4000
 13304   00570E                     u4001:
 13305   00570E  EFAD  F02B         	goto	l4438
 13306   005712                     u4000:
 13307   005712  0E01               	movlw	1
 13308   005714  262B               	addwf	___fldiv@b^0,f,c
 13309   005716  0E00               	movlw	0
 13310   005718  222C               	addwfc	(___fldiv@b+1)^0,f,c
 13311   00571A  222D               	addwfc	(___fldiv@b+2)^0,f,c
 13312   00571C  222E               	addwfc	(___fldiv@b+3)^0,f,c
 13313   00571E  A02E               	btfss	(___fldiv@b+3)^0,0,c
 13314   005720  EF94  F02B         	goto	u4011
 13315   005724  EF96  F02B         	goto	u4010
 13316   005728                     u4011:
 13317   005728  EFAD  F02B         	goto	l4438
 13318   00572C                     u4010:
 13319   00572C  C02B  F033         	movff	___fldiv@b,??___fldiv
 13320   005730  C02C  F034         	movff	___fldiv@b+1,??___fldiv+1
 13321   005734  C02D  F035         	movff	___fldiv@b+2,??___fldiv+2
 13322   005738  C02E  F036         	movff	___fldiv@b+3,??___fldiv+3
 13323   00573C  3436               	rlcf	(??___fldiv+3)^0,w,c
 13324   00573E  3236               	rrcf	(??___fldiv+3)^0,f,c
 13325   005740  3235               	rrcf	(??___fldiv+2)^0,f,c
 13326   005742  3234               	rrcf	(??___fldiv+1)^0,f,c
 13327   005744  3233               	rrcf	??___fldiv^0,f,c
 13328   005746  C033  F02B         	movff	??___fldiv,___fldiv@b
 13329   00574A  C034  F02C         	movff	??___fldiv+1,___fldiv@b+1
 13330   00574E  C035  F02D         	movff	??___fldiv+2,___fldiv@b+2
 13331   005752  C036  F02E         	movff	??___fldiv+3,___fldiv@b+3
 13332   005756  4A3C               	infsnz	___fldiv@new_exp^0,f,c
 13333   005758  2A3D               	incf	(___fldiv@new_exp+1)^0,f,c
 13334   00575A                     l4438:
 13335   00575A  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13336   00575C  EFB8  F02B         	goto	u4021
 13337   005760  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 13338   005762  E108               	bnz	u4020
 13339   005764  283C               	incf	___fldiv@new_exp^0,w,c
 13340   005766  A0D8               	btfss	status,0,c
 13341   005768  EFB8  F02B         	goto	u4021
 13342   00576C  EFBA  F02B         	goto	u4020
 13343   005770                     u4021:
 13344   005770  EFC5  F02B         	goto	l4442
 13345   005774                     u4020:
 13346   005774  0E00               	movlw	0
 13347   005776  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 13348   005778  683C               	setf	___fldiv@new_exp^0,c
 13349   00577A  0E00               	movlw	0
 13350   00577C  6E2B               	movwf	___fldiv@b^0,c
 13351   00577E  0E00               	movlw	0
 13352   005780  6E2C               	movwf	(___fldiv@b+1)^0,c
 13353   005782  0E00               	movlw	0
 13354   005784  6E2D               	movwf	(___fldiv@b+2)^0,c
 13355   005786  0E00               	movlw	0
 13356   005788  6E2E               	movwf	(___fldiv@b+3)^0,c
 13357   00578A                     l4442:
 13358   00578A  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13359   00578C  EFD2  F02B         	goto	u4030
 13360   005790  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 13361   005792  E106               	bnz	u4031
 13362   005794  043C               	decf	___fldiv@new_exp^0,w,c
 13363   005796  B0D8               	btfsc	status,0,c
 13364   005798  EFD0  F02B         	goto	u4031
 13365   00579C  EFD2  F02B         	goto	u4030
 13366   0057A0                     u4031:
 13367   0057A0  EFE0  F02B         	goto	l4446
 13368   0057A4                     u4030:
 13369   0057A4  0E00               	movlw	0
 13370   0057A6  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 13371   0057A8  0E00               	movlw	0
 13372   0057AA  6E3C               	movwf	___fldiv@new_exp^0,c
 13373   0057AC  0E00               	movlw	0
 13374   0057AE  6E2B               	movwf	___fldiv@b^0,c
 13375   0057B0  0E00               	movlw	0
 13376   0057B2  6E2C               	movwf	(___fldiv@b+1)^0,c
 13377   0057B4  0E00               	movlw	0
 13378   0057B6  6E2D               	movwf	(___fldiv@b+2)^0,c
 13379   0057B8  0E00               	movlw	0
 13380   0057BA  6E2E               	movwf	(___fldiv@b+3)^0,c
 13381   0057BC  0E00               	movlw	0
 13382   0057BE  6E3B               	movwf	___fldiv@sign^0,c
 13383   0057C0                     l4446:
 13384   0057C0  C03C  F042         	movff	___fldiv@new_exp,___fldiv@bexp
 13385   0057C4  A042               	btfss	___fldiv@bexp^0,0,c
 13386   0057C6  EFE7  F02B         	goto	u4041
 13387   0057CA  EFE9  F02B         	goto	u4040
 13388   0057CE                     u4041:
 13389   0057CE  EFEC  F02B         	goto	l4452
 13390   0057D2                     u4040:
 13391   0057D2  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 13392   0057D4  EFED  F02B         	goto	l4454
 13393   0057D8                     l4452:
 13394   0057D8  9E2D               	bcf	(___fldiv@b+2)^0,7,c
 13395   0057DA                     l4454:
 13396   0057DA  90D8               	bcf	status,0,c
 13397   0057DC  3042               	rrcf	___fldiv@bexp^0,w,c
 13398   0057DE  6E2E               	movwf	(___fldiv@b+3)^0,c
 13399   0057E0  EFA3  F02A         	goto	l4368
 13400   0057E4                     l1140:
 13401   0057E4  0012               	return		;funcret
 13402   0057E6                     __end_of___fldiv:
 13403                           	callstack 0
 13404                           
 13405 ;; *************** function _color_read *****************
 13406 ;; Defined at:
 13407 ;;		line 47 in file "color.c"
 13408 ;; Parameters:    Size  Location     Type
 13409 ;;  p               2   12[COMRAM] PTR struct RGBC_val
 13410 ;;		 -> main@RGBC(8), 
 13411 ;; Auto vars:     Size  Location     Type
 13412 ;;		None
 13413 ;; Return value:  Size  Location     Type
 13414 ;;                  1    wreg      void 
 13415 ;; Registers used:
 13416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13417 ;; Tracked objects:
 13418 ;;		On entry : 0/0
 13419 ;;		On exit  : 0/0
 13420 ;;		Unchanged: 0/0
 13421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13425 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13426 ;;Total ram usage:        2 bytes
 13427 ;; Hardware stack levels used: 1
 13428 ;; Hardware stack levels required when called: 5
 13429 ;; This function calls:
 13430 ;;		_color_read_Blue
 13431 ;;		_color_read_Clear
 13432 ;;		_color_read_Green
 13433 ;;		_color_read_Red
 13434 ;; This function is called by:
 13435 ;;		_main
 13436 ;; This function uses a non-reentrant model
 13437 ;;
 13438                           
 13439                           	psect	text37
 13440   006D3A                     __ptext37:
 13441                           	callstack 0
 13442   006D3A                     _color_read:
 13443                           	callstack 25
 13444   006D3A                     
 13445                           ;color.c: 48:     (p->R) = color_read_Red();
 13446   006D3A  ECCC  F036         	call	_color_read_Red	;wreg free
 13447   006D3E  C00D  FFD9         	movff	color_read@p,fsr2l
 13448   006D42  C00E  FFDA         	movff	color_read@p+1,fsr2h
 13449   006D46  C006  FFDE         	movff	?_color_read_Red,postinc2
 13450   006D4A  C007  FFDD         	movff	?_color_read_Red+1,postdec2
 13451                           
 13452                           ;color.c: 49:     (p->G) = color_read_Green();
 13453   006D4E  ECF4  F036         	call	_color_read_Green	;wreg free
 13454   006D52  EE20 F002          	lfsr	2,2
 13455   006D56  500D               	movf	color_read@p^0,w,c
 13456   006D58  26D9               	addwf	fsr2l,f,c
 13457   006D5A  500E               	movf	(color_read@p+1)^0,w,c
 13458   006D5C  22DA               	addwfc	fsr2h,f,c
 13459   006D5E  C006  FFDE         	movff	?_color_read_Green,postinc2
 13460   006D62  C007  FFDD         	movff	?_color_read_Green+1,postdec2
 13461                           
 13462                           ;color.c: 50:     (p->B) = color_read_Blue();
 13463   006D66  EC44  F037         	call	_color_read_Blue	;wreg free
 13464   006D6A  EE20 F004          	lfsr	2,4
 13465   006D6E  500D               	movf	color_read@p^0,w,c
 13466   006D70  26D9               	addwf	fsr2l,f,c
 13467   006D72  500E               	movf	(color_read@p+1)^0,w,c
 13468   006D74  22DA               	addwfc	fsr2h,f,c
 13469   006D76  C006  FFDE         	movff	?_color_read_Blue,postinc2
 13470   006D7A  C007  FFDD         	movff	?_color_read_Blue+1,postdec2
 13471                           
 13472                           ;color.c: 51:     (p->C) = color_read_Clear();
 13473   006D7E  EC1C  F037         	call	_color_read_Clear	;wreg free
 13474   006D82  EE20 F006          	lfsr	2,6
 13475   006D86  500D               	movf	color_read@p^0,w,c
 13476   006D88  26D9               	addwf	fsr2l,f,c
 13477   006D8A  500E               	movf	(color_read@p+1)^0,w,c
 13478   006D8C  22DA               	addwfc	fsr2h,f,c
 13479   006D8E  C006  FFDE         	movff	?_color_read_Clear,postinc2
 13480   006D92  C007  FFDD         	movff	?_color_read_Clear+1,postdec2
 13481   006D96  0012               	return		;funcret
 13482   006D98                     __end_of_color_read:
 13483                           	callstack 0
 13484                           
 13485 ;; *************** function _color_read_Red *****************
 13486 ;; Defined at:
 13487 ;;		line 67 in file "color.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;		None
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;  tmp             2   10[COMRAM] unsigned int 
 13492 ;; Return value:  Size  Location     Type
 13493 ;;                  2    5[COMRAM] unsigned int 
 13494 ;; Registers used:
 13495 ;;		wreg, status,2, status,0, cstack
 13496 ;; Tracked objects:
 13497 ;;		On entry : 0/0
 13498 ;;		On exit  : 0/0
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13503 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13504 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13505 ;;Total ram usage:        7 bytes
 13506 ;; Hardware stack levels used: 1
 13507 ;; Hardware stack levels required when called: 4
 13508 ;; This function calls:
 13509 ;;		_I2C_2_Master_Read
 13510 ;;		_I2C_2_Master_RepStart
 13511 ;;		_I2C_2_Master_Start
 13512 ;;		_I2C_2_Master_Stop
 13513 ;;		_I2C_2_Master_Write
 13514 ;; This function is called by:
 13515 ;;		_color_read
 13516 ;;		_decide_action
 13517 ;;		_main
 13518 ;; This function uses a non-reentrant model
 13519 ;;
 13520                           
 13521                           	psect	text38
 13522   006D98                     __ptext38:
 13523                           	callstack 0
 13524   006D98                     _color_read_Red:
 13525                           	callstack 25
 13526   006D98                     
 13527                           ;color.c: 68:  unsigned int tmp;;color.c: 69:  I2C_2_Master_Start();
 13528   006D98  EC1D  F039         	call	_I2C_2_Master_Start	;wreg free
 13529                           
 13530                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x00);
 13531   006D9C  0E52               	movlw	82
 13532   006D9E  EC02  F039         	call	_I2C_2_Master_Write
 13533                           
 13534                           ;color.c: 71:  I2C_2_Master_Write(0xA0 | 0x16);
 13535   006DA2  0EB6               	movlw	182
 13536   006DA4  EC02  F039         	call	_I2C_2_Master_Write
 13537                           
 13538                           ;color.c: 72:  I2C_2_Master_RepStart();
 13539   006DA8  EC13  F039         	call	_I2C_2_Master_RepStart	;wreg free
 13540                           
 13541                           ;color.c: 73:  I2C_2_Master_Write(0x52 | 0x01);
 13542   006DAC  0E53               	movlw	83
 13543   006DAE  EC02  F039         	call	_I2C_2_Master_Write
 13544                           
 13545                           ;color.c: 74:  tmp=I2C_2_Master_Read(1);
 13546   006DB2  0E01               	movlw	1
 13547   006DB4  ECB4  F037         	call	_I2C_2_Master_Read
 13548   006DB8  6E08               	movwf	??_color_read_Red^0,c
 13549   006DBA  5008               	movf	??_color_read_Red^0,w,c
 13550   006DBC  6E0B               	movwf	color_read_Red@tmp^0,c
 13551   006DBE  6A0C               	clrf	(color_read_Red@tmp+1)^0,c
 13552                           
 13553                           ;color.c: 75:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 13554   006DC0  0E00               	movlw	0
 13555   006DC2  ECB4  F037         	call	_I2C_2_Master_Read
 13556   006DC6  6E08               	movwf	??_color_read_Red^0,c
 13557   006DC8  5008               	movf	??_color_read_Red^0,w,c
 13558   006DCA  6E0A               	movwf	(??_color_read_Red+2)^0,c
 13559   006DCC  6A09               	clrf	(??_color_read_Red+1)^0,c
 13560   006DCE  500B               	movf	color_read_Red@tmp^0,w,c
 13561   006DD0  1009               	iorwf	(??_color_read_Red+1)^0,w,c
 13562   006DD2  6E0B               	movwf	color_read_Red@tmp^0,c
 13563   006DD4  500C               	movf	(color_read_Red@tmp+1)^0,w,c
 13564   006DD6  100A               	iorwf	(??_color_read_Red+2)^0,w,c
 13565   006DD8  6E0C               	movwf	(color_read_Red@tmp+1)^0,c
 13566                           
 13567                           ;color.c: 76:  I2C_2_Master_Stop();
 13568   006DDA  EC18  F039         	call	_I2C_2_Master_Stop	;wreg free
 13569   006DDE                     
 13570                           ;color.c: 77:  return tmp;
 13571   006DDE  C00B  F006         	movff	color_read_Red@tmp,?_color_read_Red
 13572   006DE2  C00C  F007         	movff	color_read_Red@tmp+1,?_color_read_Red+1
 13573   006DE6  0012               	return		;funcret
 13574   006DE8                     __end_of_color_read_Red:
 13575                           	callstack 0
 13576                           
 13577 ;; *************** function _color_read_Green *****************
 13578 ;; Defined at:
 13579 ;;		line 80 in file "color.c"
 13580 ;; Parameters:    Size  Location     Type
 13581 ;;		None
 13582 ;; Auto vars:     Size  Location     Type
 13583 ;;  tmp             2   10[COMRAM] unsigned int 
 13584 ;; Return value:  Size  Location     Type
 13585 ;;                  2    5[COMRAM] unsigned int 
 13586 ;; Registers used:
 13587 ;;		wreg, status,2, status,0, cstack
 13588 ;; Tracked objects:
 13589 ;;		On entry : 0/0
 13590 ;;		On exit  : 0/0
 13591 ;;		Unchanged: 0/0
 13592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13594 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13595 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13596 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13597 ;;Total ram usage:        7 bytes
 13598 ;; Hardware stack levels used: 1
 13599 ;; Hardware stack levels required when called: 4
 13600 ;; This function calls:
 13601 ;;		_I2C_2_Master_Read
 13602 ;;		_I2C_2_Master_RepStart
 13603 ;;		_I2C_2_Master_Start
 13604 ;;		_I2C_2_Master_Stop
 13605 ;;		_I2C_2_Master_Write
 13606 ;; This function is called by:
 13607 ;;		_color_read
 13608 ;;		_decide_action
 13609 ;;		_main
 13610 ;; This function uses a non-reentrant model
 13611 ;;
 13612                           
 13613                           	psect	text39
 13614   006DE8                     __ptext39:
 13615                           	callstack 0
 13616   006DE8                     _color_read_Green:
 13617                           	callstack 25
 13618   006DE8                     
 13619                           ;color.c: 81:  unsigned int tmp;;color.c: 82:  I2C_2_Master_Start();
 13620   006DE8  EC1D  F039         	call	_I2C_2_Master_Start	;wreg free
 13621                           
 13622                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x00);
 13623   006DEC  0E52               	movlw	82
 13624   006DEE  EC02  F039         	call	_I2C_2_Master_Write
 13625                           
 13626                           ;color.c: 84:  I2C_2_Master_Write(0xA0 | 0x18);
 13627   006DF2  0EB8               	movlw	184
 13628   006DF4  EC02  F039         	call	_I2C_2_Master_Write
 13629                           
 13630                           ;color.c: 85:  I2C_2_Master_RepStart();
 13631   006DF8  EC13  F039         	call	_I2C_2_Master_RepStart	;wreg free
 13632                           
 13633                           ;color.c: 86:  I2C_2_Master_Write(0x52 | 0x01);
 13634   006DFC  0E53               	movlw	83
 13635   006DFE  EC02  F039         	call	_I2C_2_Master_Write
 13636                           
 13637                           ;color.c: 87:  tmp=I2C_2_Master_Read(1);
 13638   006E02  0E01               	movlw	1
 13639   006E04  ECB4  F037         	call	_I2C_2_Master_Read
 13640   006E08  6E08               	movwf	??_color_read_Green^0,c
 13641   006E0A  5008               	movf	??_color_read_Green^0,w,c
 13642   006E0C  6E0B               	movwf	color_read_Green@tmp^0,c
 13643   006E0E  6A0C               	clrf	(color_read_Green@tmp+1)^0,c
 13644                           
 13645                           ;color.c: 88:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 13646   006E10  0E00               	movlw	0
 13647   006E12  ECB4  F037         	call	_I2C_2_Master_Read
 13648   006E16  6E08               	movwf	??_color_read_Green^0,c
 13649   006E18  5008               	movf	??_color_read_Green^0,w,c
 13650   006E1A  6E0A               	movwf	(??_color_read_Green+2)^0,c
 13651   006E1C  6A09               	clrf	(??_color_read_Green+1)^0,c
 13652   006E1E  500B               	movf	color_read_Green@tmp^0,w,c
 13653   006E20  1009               	iorwf	(??_color_read_Green+1)^0,w,c
 13654   006E22  6E0B               	movwf	color_read_Green@tmp^0,c
 13655   006E24  500C               	movf	(color_read_Green@tmp+1)^0,w,c
 13656   006E26  100A               	iorwf	(??_color_read_Green+2)^0,w,c
 13657   006E28  6E0C               	movwf	(color_read_Green@tmp+1)^0,c
 13658                           
 13659                           ;color.c: 89:  I2C_2_Master_Stop();
 13660   006E2A  EC18  F039         	call	_I2C_2_Master_Stop	;wreg free
 13661   006E2E                     
 13662                           ;color.c: 90:  return tmp;
 13663   006E2E  C00B  F006         	movff	color_read_Green@tmp,?_color_read_Green
 13664   006E32  C00C  F007         	movff	color_read_Green@tmp+1,?_color_read_Green+1
 13665   006E36  0012               	return		;funcret
 13666   006E38                     __end_of_color_read_Green:
 13667                           	callstack 0
 13668                           
 13669 ;; *************** function _color_read_Clear *****************
 13670 ;; Defined at:
 13671 ;;		line 54 in file "color.c"
 13672 ;; Parameters:    Size  Location     Type
 13673 ;;		None
 13674 ;; Auto vars:     Size  Location     Type
 13675 ;;  tmp             2   10[COMRAM] unsigned int 
 13676 ;; Return value:  Size  Location     Type
 13677 ;;                  2    5[COMRAM] unsigned int 
 13678 ;; Registers used:
 13679 ;;		wreg, status,2, status,0, cstack
 13680 ;; Tracked objects:
 13681 ;;		On entry : 0/0
 13682 ;;		On exit  : 0/0
 13683 ;;		Unchanged: 0/0
 13684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13686 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13687 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13688 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13689 ;;Total ram usage:        7 bytes
 13690 ;; Hardware stack levels used: 1
 13691 ;; Hardware stack levels required when called: 4
 13692 ;; This function calls:
 13693 ;;		_I2C_2_Master_Read
 13694 ;;		_I2C_2_Master_RepStart
 13695 ;;		_I2C_2_Master_Start
 13696 ;;		_I2C_2_Master_Stop
 13697 ;;		_I2C_2_Master_Write
 13698 ;; This function is called by:
 13699 ;;		_color_read
 13700 ;;		_main
 13701 ;; This function uses a non-reentrant model
 13702 ;;
 13703                           
 13704                           	psect	text40
 13705   006E38                     __ptext40:
 13706                           	callstack 0
 13707   006E38                     _color_read_Clear:
 13708                           	callstack 26
 13709   006E38                     
 13710                           ;color.c: 55:  unsigned int tmp;;color.c: 56:  I2C_2_Master_Start();
 13711   006E38  EC1D  F039         	call	_I2C_2_Master_Start	;wreg free
 13712                           
 13713                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x00);
 13714   006E3C  0E52               	movlw	82
 13715   006E3E  EC02  F039         	call	_I2C_2_Master_Write
 13716                           
 13717                           ;color.c: 58:  I2C_2_Master_Write(0xA0 | 0x14);
 13718   006E42  0EB4               	movlw	180
 13719   006E44  EC02  F039         	call	_I2C_2_Master_Write
 13720                           
 13721                           ;color.c: 59:  I2C_2_Master_RepStart();
 13722   006E48  EC13  F039         	call	_I2C_2_Master_RepStart	;wreg free
 13723                           
 13724                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x01);
 13725   006E4C  0E53               	movlw	83
 13726   006E4E  EC02  F039         	call	_I2C_2_Master_Write
 13727                           
 13728                           ;color.c: 61:  tmp=I2C_2_Master_Read(1);
 13729   006E52  0E01               	movlw	1
 13730   006E54  ECB4  F037         	call	_I2C_2_Master_Read
 13731   006E58  6E08               	movwf	??_color_read_Clear^0,c
 13732   006E5A  5008               	movf	??_color_read_Clear^0,w,c
 13733   006E5C  6E0B               	movwf	color_read_Clear@tmp^0,c
 13734   006E5E  6A0C               	clrf	(color_read_Clear@tmp+1)^0,c
 13735                           
 13736                           ;color.c: 62:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 13737   006E60  0E00               	movlw	0
 13738   006E62  ECB4  F037         	call	_I2C_2_Master_Read
 13739   006E66  6E08               	movwf	??_color_read_Clear^0,c
 13740   006E68  5008               	movf	??_color_read_Clear^0,w,c
 13741   006E6A  6E0A               	movwf	(??_color_read_Clear+2)^0,c
 13742   006E6C  6A09               	clrf	(??_color_read_Clear+1)^0,c
 13743   006E6E  500B               	movf	color_read_Clear@tmp^0,w,c
 13744   006E70  1009               	iorwf	(??_color_read_Clear+1)^0,w,c
 13745   006E72  6E0B               	movwf	color_read_Clear@tmp^0,c
 13746   006E74  500C               	movf	(color_read_Clear@tmp+1)^0,w,c
 13747   006E76  100A               	iorwf	(??_color_read_Clear+2)^0,w,c
 13748   006E78  6E0C               	movwf	(color_read_Clear@tmp+1)^0,c
 13749                           
 13750                           ;color.c: 63:  I2C_2_Master_Stop();
 13751   006E7A  EC18  F039         	call	_I2C_2_Master_Stop	;wreg free
 13752   006E7E                     
 13753                           ;color.c: 64:  return tmp;
 13754   006E7E  C00B  F006         	movff	color_read_Clear@tmp,?_color_read_Clear
 13755   006E82  C00C  F007         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 13756   006E86  0012               	return		;funcret
 13757   006E88                     __end_of_color_read_Clear:
 13758                           	callstack 0
 13759                           
 13760 ;; *************** function _color_read_Blue *****************
 13761 ;; Defined at:
 13762 ;;		line 93 in file "color.c"
 13763 ;; Parameters:    Size  Location     Type
 13764 ;;		None
 13765 ;; Auto vars:     Size  Location     Type
 13766 ;;  tmp             2   10[COMRAM] unsigned int 
 13767 ;; Return value:  Size  Location     Type
 13768 ;;                  2    5[COMRAM] unsigned int 
 13769 ;; Registers used:
 13770 ;;		wreg, status,2, status,0, cstack
 13771 ;; Tracked objects:
 13772 ;;		On entry : 0/0
 13773 ;;		On exit  : 0/0
 13774 ;;		Unchanged: 0/0
 13775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13777 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13778 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13779 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13780 ;;Total ram usage:        7 bytes
 13781 ;; Hardware stack levels used: 1
 13782 ;; Hardware stack levels required when called: 4
 13783 ;; This function calls:
 13784 ;;		_I2C_2_Master_Read
 13785 ;;		_I2C_2_Master_RepStart
 13786 ;;		_I2C_2_Master_Start
 13787 ;;		_I2C_2_Master_Stop
 13788 ;;		_I2C_2_Master_Write
 13789 ;; This function is called by:
 13790 ;;		_color_read
 13791 ;;		_decide_action
 13792 ;;		_main
 13793 ;; This function uses a non-reentrant model
 13794 ;;
 13795                           
 13796                           	psect	text41
 13797   006E88                     __ptext41:
 13798                           	callstack 0
 13799   006E88                     _color_read_Blue:
 13800                           	callstack 25
 13801   006E88                     
 13802                           ;color.c: 94:  unsigned int tmp;;color.c: 95:  I2C_2_Master_Start();
 13803   006E88  EC1D  F039         	call	_I2C_2_Master_Start	;wreg free
 13804                           
 13805                           ;color.c: 96:  I2C_2_Master_Write(0x52 | 0x00);
 13806   006E8C  0E52               	movlw	82
 13807   006E8E  EC02  F039         	call	_I2C_2_Master_Write
 13808                           
 13809                           ;color.c: 97:  I2C_2_Master_Write(0xA0 | 0x1A);
 13810   006E92  0EBA               	movlw	186
 13811   006E94  EC02  F039         	call	_I2C_2_Master_Write
 13812                           
 13813                           ;color.c: 98:  I2C_2_Master_RepStart();
 13814   006E98  EC13  F039         	call	_I2C_2_Master_RepStart	;wreg free
 13815                           
 13816                           ;color.c: 99:  I2C_2_Master_Write(0x52 | 0x01);
 13817   006E9C  0E53               	movlw	83
 13818   006E9E  EC02  F039         	call	_I2C_2_Master_Write
 13819                           
 13820                           ;color.c: 100:  tmp=I2C_2_Master_Read(1);
 13821   006EA2  0E01               	movlw	1
 13822   006EA4  ECB4  F037         	call	_I2C_2_Master_Read
 13823   006EA8  6E08               	movwf	??_color_read_Blue^0,c
 13824   006EAA  5008               	movf	??_color_read_Blue^0,w,c
 13825   006EAC  6E0B               	movwf	color_read_Blue@tmp^0,c
 13826   006EAE  6A0C               	clrf	(color_read_Blue@tmp+1)^0,c
 13827                           
 13828                           ;color.c: 101:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 13829   006EB0  0E00               	movlw	0
 13830   006EB2  ECB4  F037         	call	_I2C_2_Master_Read
 13831   006EB6  6E08               	movwf	??_color_read_Blue^0,c
 13832   006EB8  5008               	movf	??_color_read_Blue^0,w,c
 13833   006EBA  6E0A               	movwf	(??_color_read_Blue+2)^0,c
 13834   006EBC  6A09               	clrf	(??_color_read_Blue+1)^0,c
 13835   006EBE  500B               	movf	color_read_Blue@tmp^0,w,c
 13836   006EC0  1009               	iorwf	(??_color_read_Blue+1)^0,w,c
 13837   006EC2  6E0B               	movwf	color_read_Blue@tmp^0,c
 13838   006EC4  500C               	movf	(color_read_Blue@tmp+1)^0,w,c
 13839   006EC6  100A               	iorwf	(??_color_read_Blue+2)^0,w,c
 13840   006EC8  6E0C               	movwf	(color_read_Blue@tmp+1)^0,c
 13841                           
 13842                           ;color.c: 102:  I2C_2_Master_Stop();
 13843   006ECA  EC18  F039         	call	_I2C_2_Master_Stop	;wreg free
 13844   006ECE                     
 13845                           ;color.c: 103:  return tmp;
 13846   006ECE  C00B  F006         	movff	color_read_Blue@tmp,?_color_read_Blue
 13847   006ED2  C00C  F007         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
 13848   006ED6  0012               	return		;funcret
 13849   006ED8                     __end_of_color_read_Blue:
 13850                           	callstack 0
 13851                           
 13852 ;; *************** function _I2C_2_Master_RepStart *****************
 13853 ;; Defined at:
 13854 ;;		line 30 in file "i2c.c"
 13855 ;; Parameters:    Size  Location     Type
 13856 ;;		None
 13857 ;; Auto vars:     Size  Location     Type
 13858 ;;		None
 13859 ;; Return value:  Size  Location     Type
 13860 ;;                  1    wreg      void 
 13861 ;; Registers used:
 13862 ;;		wreg, status,2, status,0, cstack
 13863 ;; Tracked objects:
 13864 ;;		On entry : 0/0
 13865 ;;		On exit  : 0/0
 13866 ;;		Unchanged: 0/0
 13867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13872 ;;Total ram usage:        0 bytes
 13873 ;; Hardware stack levels used: 1
 13874 ;; Hardware stack levels required when called: 3
 13875 ;; This function calls:
 13876 ;;		_I2C_2_Master_Idle
 13877 ;; This function is called by:
 13878 ;;		_color_read_Clear
 13879 ;;		_color_read_Red
 13880 ;;		_color_read_Green
 13881 ;;		_color_read_Blue
 13882 ;; This function uses a non-reentrant model
 13883 ;;
 13884                           
 13885                           	psect	text42
 13886   007226                     __ptext42:
 13887                           	callstack 0
 13888   007226                     _I2C_2_Master_RepStart:
 13889                           	callstack 25
 13890   007226                     
 13891                           ;i2c.c: 31:   I2C_2_Master_Idle();
 13892   007226  EC73  F038         	call	_I2C_2_Master_Idle	;wreg free
 13893   00722A                     
 13894                           ;i2c.c: 32:   SSP2CON2bits.RSEN = 1;
 13895   00722A  010E               	movlb	14	; () banked
 13896   00722C  83DA               	bsf	218,1,b	;volatile
 13897   00722E                     
 13898                           ; BSR set to: 14
 13899   00722E  0012               	return		;funcret
 13900   007230                     __end_of_I2C_2_Master_RepStart:
 13901                           	callstack 0
 13902                           
 13903 ;; *************** function _I2C_2_Master_Read *****************
 13904 ;; Defined at:
 13905 ;;		line 45 in file "i2c.c"
 13906 ;; Parameters:    Size  Location     Type
 13907 ;;  ack             1    wreg     unsigned char 
 13908 ;; Auto vars:     Size  Location     Type
 13909 ;;  ack             1    3[COMRAM] unsigned char 
 13910 ;;  tmp             1    4[COMRAM] unsigned char 
 13911 ;; Return value:  Size  Location     Type
 13912 ;;                  1    wreg      unsigned char 
 13913 ;; Registers used:
 13914 ;;		wreg, status,2, status,0, cstack
 13915 ;; Tracked objects:
 13916 ;;		On entry : 0/0
 13917 ;;		On exit  : 0/0
 13918 ;;		Unchanged: 0/0
 13919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13921 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13923 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13924 ;;Total ram usage:        3 bytes
 13925 ;; Hardware stack levels used: 1
 13926 ;; Hardware stack levels required when called: 3
 13927 ;; This function calls:
 13928 ;;		_I2C_2_Master_Idle
 13929 ;; This function is called by:
 13930 ;;		_color_read_Clear
 13931 ;;		_color_read_Red
 13932 ;;		_color_read_Green
 13933 ;;		_color_read_Blue
 13934 ;; This function uses a non-reentrant model
 13935 ;;
 13936                           
 13937                           	psect	text43
 13938   006F68                     __ptext43:
 13939                           	callstack 0
 13940   006F68                     _I2C_2_Master_Read:
 13941                           	callstack 25
 13942                           
 13943                           ; BSR set to: 14
 13944                           ;incstack = 0
 13945                           ;I2C_2_Master_Read@ack stored from wreg
 13946   006F68  6E04               	movwf	I2C_2_Master_Read@ack^0,c
 13947   006F6A                     
 13948                           ;i2c.c: 46:   unsigned char tmp;;i2c.c: 47:   I2C_2_Master_Idle();
 13949   006F6A  EC73  F038         	call	_I2C_2_Master_Idle	;wreg free
 13950   006F6E                     
 13951                           ;i2c.c: 48:   SSP2CON2bits.RCEN = 1;
 13952   006F6E  010E               	movlb	14	; () banked
 13953   006F70  87DA               	bsf	218,3,b	;volatile
 13954                           
 13955                           ;i2c.c: 49:   I2C_2_Master_Idle();
 13956   006F72  EC73  F038         	call	_I2C_2_Master_Idle	;wreg free
 13957   006F76                     
 13958                           ;i2c.c: 50:   tmp = SSP2BUF;
 13959   006F76  CED5 F005          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 13960                           
 13961                           ;i2c.c: 51:   I2C_2_Master_Idle();
 13962   006F7A  EC73  F038         	call	_I2C_2_Master_Idle	;wreg free
 13963   006F7E                     
 13964                           ;i2c.c: 52:   SSP2CON2bits.ACKDT = !ack;
 13965   006F7E  5004               	movf	I2C_2_Master_Read@ack^0,w,c
 13966   006F80  B4D8               	btfsc	status,2,c
 13967   006F82  EFC5  F037         	goto	u3631
 13968   006F86  EFC9  F037         	goto	u3630
 13969   006F8A                     u3631:
 13970   006F8A  6A03               	clrf	??_I2C_2_Master_Read^0,c
 13971   006F8C  2A03               	incf	??_I2C_2_Master_Read^0,f,c
 13972   006F8E  EFCA  F037         	goto	u3648
 13973   006F92                     u3630:
 13974   006F92  6A03               	clrf	??_I2C_2_Master_Read^0,c
 13975   006F94                     u3648:
 13976   006F94  3A03               	swapf	??_I2C_2_Master_Read^0,f,c
 13977   006F96  4603               	rlncf	??_I2C_2_Master_Read^0,f,c
 13978   006F98  010E               	movlb	14	; () banked
 13979   006F9A  51DA               	movf	218,w,b	;volatile
 13980   006F9C  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 13981   006F9E  0BDF               	andlw	-33
 13982   006FA0  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 13983   006FA2  6FDA               	movwf	218,b	;volatile
 13984   006FA4                     
 13985                           ; BSR set to: 14
 13986                           ;i2c.c: 53:   SSP2CON2bits.ACKEN = 1;
 13987   006FA4  89DA               	bsf	218,4,b	;volatile
 13988   006FA6                     
 13989                           ; BSR set to: 14
 13990                           ;i2c.c: 54:   return tmp;
 13991   006FA6  5005               	movf	I2C_2_Master_Read@tmp^0,w,c
 13992   006FA8                     
 13993                           ; BSR set to: 14
 13994   006FA8  0012               	return		;funcret
 13995   006FAA                     __end_of_I2C_2_Master_Read:
 13996                           	callstack 0
 13997                           
 13998 ;; *************** function _color_click_toggleLED *****************
 13999 ;; Defined at:
 14000 ;;		line 107 in file "color.c"
 14001 ;; Parameters:    Size  Location     Type
 14002 ;;		None
 14003 ;; Auto vars:     Size  Location     Type
 14004 ;;		None
 14005 ;; Return value:  Size  Location     Type
 14006 ;;                  1    wreg      void 
 14007 ;; Registers used:
 14008 ;;		wreg, status,2, status,0
 14009 ;; Tracked objects:
 14010 ;;		On entry : 0/0
 14011 ;;		On exit  : 0/0
 14012 ;;		Unchanged: 0/0
 14013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14018 ;;Total ram usage:        1 bytes
 14019 ;; Hardware stack levels used: 1
 14020 ;; Hardware stack levels required when called: 2
 14021 ;; This function calls:
 14022 ;;		Nothing
 14023 ;; This function is called by:
 14024 ;;		_main
 14025 ;; This function uses a non-reentrant model
 14026 ;;
 14027                           
 14028                           	psect	text44
 14029   006CD4                     __ptext44:
 14030                           	callstack 0
 14031   006CD4                     _color_click_toggleLED:
 14032                           	callstack 28
 14033   006CD4                     
 14034                           ;color.c: 108:     LATGbits.LATG0 = !LATGbits.LATG0;
 14035   006CD4  A07F               	btfss	127,0,c	;volatile
 14036   006CD6  EF6F  F036         	goto	u4921
 14037   006CDA  EF73  F036         	goto	u4920
 14038   006CDE                     u4921:
 14039   006CDE  6A02               	clrf	??_color_click_toggleLED^0,c
 14040   006CE0  2A02               	incf	??_color_click_toggleLED^0,f,c
 14041   006CE2  EF74  F036         	goto	u4938
 14042   006CE6                     u4920:
 14043   006CE6  6A02               	clrf	??_color_click_toggleLED^0,c
 14044   006CE8                     u4938:
 14045   006CE8  507F               	movf	127,w,c	;volatile
 14046   006CEA  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14047   006CEC  0BFE               	andlw	-2
 14048   006CEE  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14049   006CF0  6E7F               	movwf	127,c	;volatile
 14050                           
 14051                           ;color.c: 109:     LATAbits.LATA3 = !LATAbits.LATA3;
 14052   006CF2  A679               	btfss	121,3,c	;volatile
 14053   006CF4  EF7E  F036         	goto	u4941
 14054   006CF8  EF82  F036         	goto	u4940
 14055   006CFC                     u4941:
 14056   006CFC  6A02               	clrf	??_color_click_toggleLED^0,c
 14057   006CFE  2A02               	incf	??_color_click_toggleLED^0,f,c
 14058   006D00  EF83  F036         	goto	u4958
 14059   006D04                     u4940:
 14060   006D04  6A02               	clrf	??_color_click_toggleLED^0,c
 14061   006D06                     u4958:
 14062   006D06  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14063   006D08  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14064   006D0A  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14065   006D0C  5079               	movf	121,w,c	;volatile
 14066   006D0E  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14067   006D10  0BF7               	andlw	-9
 14068   006D12  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14069   006D14  6E79               	movwf	121,c	;volatile
 14070                           
 14071                           ;color.c: 110:     LATEbits.LATE7 = !LATEbits.LATE7;
 14072   006D16  AE7D               	btfss	125,7,c	;volatile
 14073   006D18  EF90  F036         	goto	u4961
 14074   006D1C  EF94  F036         	goto	u4960
 14075   006D20                     u4961:
 14076   006D20  6A02               	clrf	??_color_click_toggleLED^0,c
 14077   006D22  2A02               	incf	??_color_click_toggleLED^0,f,c
 14078   006D24  EF95  F036         	goto	u4978
 14079   006D28                     u4960:
 14080   006D28  6A02               	clrf	??_color_click_toggleLED^0,c
 14081   006D2A                     u4978:
 14082   006D2A  3202               	rrcf	??_color_click_toggleLED^0,f,c
 14083   006D2C  3202               	rrcf	??_color_click_toggleLED^0,f,c
 14084   006D2E  507D               	movf	125,w,c	;volatile
 14085   006D30  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14086   006D32  0B7F               	andlw	-129
 14087   006D34  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14088   006D36  6E7D               	movwf	125,c	;volatile
 14089   006D38  0012               	return		;funcret
 14090   006D3A                     __end_of_color_click_toggleLED:
 14091                           	callstack 0
 14092                           
 14093 ;; *************** function _color_click_init *****************
 14094 ;; Defined at:
 14095 ;;		line 8 in file "color.c"
 14096 ;; Parameters:    Size  Location     Type
 14097 ;;		None
 14098 ;; Auto vars:     Size  Location     Type
 14099 ;;		None
 14100 ;; Return value:  Size  Location     Type
 14101 ;;                  1    wreg      void 
 14102 ;; Registers used:
 14103 ;;		wreg, status,2, status,0, cstack
 14104 ;; Tracked objects:
 14105 ;;		On entry : 0/0
 14106 ;;		On exit  : 0/0
 14107 ;;		Unchanged: 0/0
 14108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14111 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14112 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14113 ;;Total ram usage:        1 bytes
 14114 ;; Hardware stack levels used: 1
 14115 ;; Hardware stack levels required when called: 5
 14116 ;; This function calls:
 14117 ;;		_I2C_2_Master_Init
 14118 ;;		_color_writetoaddr
 14119 ;; This function is called by:
 14120 ;;		_main
 14121 ;; This function uses a non-reentrant model
 14122 ;;
 14123                           
 14124                           	psect	text45
 14125   006ED8                     __ptext45:
 14126                           	callstack 0
 14127   006ED8                     _color_click_init:
 14128                           	callstack 25
 14129   006ED8                     
 14130                           ;color.c: 10:     I2C_2_Master_Init();
 14131   006ED8  EC5E  F038         	call	_I2C_2_Master_Init	;wreg free
 14132   006EDC                     
 14133                           ;color.c: 11:  color_writetoaddr(0x00, 0x01);
 14134   006EDC  0E01               	movlw	1
 14135   006EDE  6E04               	movwf	color_writetoaddr@value^0,c
 14136   006EE0  0E00               	movlw	0
 14137   006EE2  ECAC  F038         	call	_color_writetoaddr
 14138   006EE6                     
 14139                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
 14140   006EE6  0E3F               	movlw	63
 14141   006EE8  6E06               	movwf	??_color_click_init^0,c
 14142   006EEA  0E55               	movlw	85
 14143   006EEC                     u6927:
 14144   006EEC  2EE8               	decfsz	wreg,f,c
 14145   006EEE  D7FE               	bra	u6927
 14146   006EF0  2E06               	decfsz	??_color_click_init^0,f,c
 14147   006EF2  D7FC               	bra	u6927
 14148   006EF4  0000               	nop	
 14149   006EF6                     
 14150                           ;color.c: 13:  color_writetoaddr(0x00, 0x03);
 14151   006EF6  0E03               	movlw	3
 14152   006EF8  6E04               	movwf	color_writetoaddr@value^0,c
 14153   006EFA  0E00               	movlw	0
 14154   006EFC  ECAC  F038         	call	_color_writetoaddr
 14155   006F00                     
 14156                           ;color.c: 14:  color_writetoaddr(0x01, 0xFF);
 14157   006F00  0EFF               	movlw	255
 14158   006F02  6E04               	movwf	color_writetoaddr@value^0,c
 14159   006F04  0E01               	movlw	1
 14160   006F06  ECAC  F038         	call	_color_writetoaddr
 14161   006F0A                     
 14162                           ;color.c: 15:     color_writetoaddr(0x03, 0xFF);
 14163   006F0A  0EFF               	movlw	255
 14164   006F0C  6E04               	movwf	color_writetoaddr@value^0,c
 14165   006F0E  0E03               	movlw	3
 14166   006F10  ECAC  F038         	call	_color_writetoaddr
 14167   006F14                     
 14168                           ;color.c: 27:     LATGbits.LATG0=0;
 14169   006F14  907F               	bcf	127,0,c	;volatile
 14170   006F16                     
 14171                           ;color.c: 28:     LATAbits.LATA3=0;
 14172   006F16  9679               	bcf	121,3,c	;volatile
 14173   006F18                     
 14174                           ;color.c: 29:     LATEbits.LATE7=0;
 14175   006F18  9E7D               	bcf	125,7,c	;volatile
 14176   006F1A                     
 14177                           ;color.c: 32:     TRISGbits.TRISG0=0;
 14178   006F1A  9087               	bcf	135,0,c	;volatile
 14179   006F1C                     
 14180                           ;color.c: 33:     TRISAbits.TRISA3=0;
 14181   006F1C  9681               	bcf	129,3,c	;volatile
 14182   006F1E                     
 14183                           ;color.c: 34:     TRISEbits.TRISE7=0;
 14184   006F1E  9E85               	bcf	133,7,c	;volatile
 14185   006F20  0012               	return		;funcret
 14186   006F22                     __end_of_color_click_init:
 14187                           	callstack 0
 14188                           
 14189 ;; *************** function _color_writetoaddr *****************
 14190 ;; Defined at:
 14191 ;;		line 38 in file "color.c"
 14192 ;; Parameters:    Size  Location     Type
 14193 ;;  address         1    wreg     unsigned char 
 14194 ;;  value           1    3[COMRAM] unsigned char 
 14195 ;; Auto vars:     Size  Location     Type
 14196 ;;  address         1    4[COMRAM] unsigned char 
 14197 ;; Return value:  Size  Location     Type
 14198 ;;                  1    wreg      void 
 14199 ;; Registers used:
 14200 ;;		wreg, status,2, status,0, cstack
 14201 ;; Tracked objects:
 14202 ;;		On entry : 0/0
 14203 ;;		On exit  : 0/0
 14204 ;;		Unchanged: 0/0
 14205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14206 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14210 ;;Total ram usage:        2 bytes
 14211 ;; Hardware stack levels used: 1
 14212 ;; Hardware stack levels required when called: 4
 14213 ;; This function calls:
 14214 ;;		_I2C_2_Master_Start
 14215 ;;		_I2C_2_Master_Stop
 14216 ;;		_I2C_2_Master_Write
 14217 ;; This function is called by:
 14218 ;;		_color_click_init
 14219 ;;		_decide_action
 14220 ;;		_main
 14221 ;; This function uses a non-reentrant model
 14222 ;;
 14223                           
 14224                           	psect	text46
 14225   007158                     __ptext46:
 14226                           	callstack 0
 14227   007158                     _color_writetoaddr:
 14228                           	callstack 25
 14229                           
 14230                           ;incstack = 0
 14231                           ;color_writetoaddr@address stored from wreg
 14232   007158  6E05               	movwf	color_writetoaddr@address^0,c
 14233   00715A                     
 14234                           ;color.c: 39:     I2C_2_Master_Start();
 14235   00715A  EC1D  F039         	call	_I2C_2_Master_Start	;wreg free
 14236                           
 14237                           ;color.c: 40:     I2C_2_Master_Write(0x52 | 0x00);
 14238   00715E  0E52               	movlw	82
 14239   007160  EC02  F039         	call	_I2C_2_Master_Write
 14240                           
 14241                           ;color.c: 41:     I2C_2_Master_Write(0x80 | address);
 14242   007164  5005               	movf	color_writetoaddr@address^0,w,c
 14243   007166  0980               	iorlw	128
 14244   007168  EC02  F039         	call	_I2C_2_Master_Write
 14245                           
 14246                           ;color.c: 42:     I2C_2_Master_Write(value);
 14247   00716C  5004               	movf	color_writetoaddr@value^0,w,c
 14248   00716E  EC02  F039         	call	_I2C_2_Master_Write
 14249                           
 14250                           ;color.c: 43:     I2C_2_Master_Stop();
 14251   007172  EC18  F039         	call	_I2C_2_Master_Stop	;wreg free
 14252   007176  0012               	return		;funcret
 14253   007178                     __end_of_color_writetoaddr:
 14254                           	callstack 0
 14255                           
 14256 ;; *************** function _I2C_2_Master_Write *****************
 14257 ;; Defined at:
 14258 ;;		line 40 in file "i2c.c"
 14259 ;; Parameters:    Size  Location     Type
 14260 ;;  data_byte       1    wreg     unsigned char 
 14261 ;; Auto vars:     Size  Location     Type
 14262 ;;  data_byte       1    2[COMRAM] unsigned char 
 14263 ;; Return value:  Size  Location     Type
 14264 ;;                  1    wreg      void 
 14265 ;; Registers used:
 14266 ;;		wreg, status,2, status,0, cstack
 14267 ;; Tracked objects:
 14268 ;;		On entry : 0/0
 14269 ;;		On exit  : 0/0
 14270 ;;		Unchanged: 0/0
 14271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14273 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14275 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14276 ;;Total ram usage:        1 bytes
 14277 ;; Hardware stack levels used: 1
 14278 ;; Hardware stack levels required when called: 3
 14279 ;; This function calls:
 14280 ;;		_I2C_2_Master_Idle
 14281 ;; This function is called by:
 14282 ;;		_color_writetoaddr
 14283 ;;		_color_read_Clear
 14284 ;;		_color_read_Red
 14285 ;;		_color_read_Green
 14286 ;;		_color_read_Blue
 14287 ;; This function uses a non-reentrant model
 14288 ;;
 14289                           
 14290                           	psect	text47
 14291   007204                     __ptext47:
 14292                           	callstack 0
 14293   007204                     _I2C_2_Master_Write:
 14294                           	callstack 25
 14295                           
 14296                           ;incstack = 0
 14297                           ;I2C_2_Master_Write@data_byte stored from wreg
 14298   007204  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
 14299   007206                     
 14300                           ;i2c.c: 41:   I2C_2_Master_Idle();
 14301   007206  EC73  F038         	call	_I2C_2_Master_Idle	;wreg free
 14302   00720A                     
 14303                           ;i2c.c: 42:   SSP2BUF = data_byte;
 14304   00720A  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 14305   00720E  0012               	return		;funcret
 14306   007210                     __end_of_I2C_2_Master_Write:
 14307                           	callstack 0
 14308                           
 14309 ;; *************** function _I2C_2_Master_Stop *****************
 14310 ;; Defined at:
 14311 ;;		line 35 in file "i2c.c"
 14312 ;; Parameters:    Size  Location     Type
 14313 ;;		None
 14314 ;; Auto vars:     Size  Location     Type
 14315 ;;		None
 14316 ;; Return value:  Size  Location     Type
 14317 ;;                  1    wreg      void 
 14318 ;; Registers used:
 14319 ;;		wreg, status,2, status,0, cstack
 14320 ;; Tracked objects:
 14321 ;;		On entry : 0/0
 14322 ;;		On exit  : 0/0
 14323 ;;		Unchanged: 0/0
 14324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14329 ;;Total ram usage:        0 bytes
 14330 ;; Hardware stack levels used: 1
 14331 ;; Hardware stack levels required when called: 3
 14332 ;; This function calls:
 14333 ;;		_I2C_2_Master_Idle
 14334 ;; This function is called by:
 14335 ;;		_color_writetoaddr
 14336 ;;		_color_read_Clear
 14337 ;;		_color_read_Red
 14338 ;;		_color_read_Green
 14339 ;;		_color_read_Blue
 14340 ;; This function uses a non-reentrant model
 14341 ;;
 14342                           
 14343                           	psect	text48
 14344   007230                     __ptext48:
 14345                           	callstack 0
 14346   007230                     _I2C_2_Master_Stop:
 14347                           	callstack 25
 14348   007230                     
 14349                           ;i2c.c: 36:   I2C_2_Master_Idle();
 14350   007230  EC73  F038         	call	_I2C_2_Master_Idle	;wreg free
 14351   007234                     
 14352                           ;i2c.c: 37:   SSP2CON2bits.PEN = 1;
 14353   007234  010E               	movlb	14	; () banked
 14354   007236  85DA               	bsf	218,2,b	;volatile
 14355   007238                     
 14356                           ; BSR set to: 14
 14357   007238  0012               	return		;funcret
 14358   00723A                     __end_of_I2C_2_Master_Stop:
 14359                           	callstack 0
 14360                           
 14361 ;; *************** function _I2C_2_Master_Start *****************
 14362 ;; Defined at:
 14363 ;;		line 25 in file "i2c.c"
 14364 ;; Parameters:    Size  Location     Type
 14365 ;;		None
 14366 ;; Auto vars:     Size  Location     Type
 14367 ;;		None
 14368 ;; Return value:  Size  Location     Type
 14369 ;;                  1    wreg      void 
 14370 ;; Registers used:
 14371 ;;		wreg, status,2, status,0, cstack
 14372 ;; Tracked objects:
 14373 ;;		On entry : 0/0
 14374 ;;		On exit  : 0/0
 14375 ;;		Unchanged: 0/0
 14376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14381 ;;Total ram usage:        0 bytes
 14382 ;; Hardware stack levels used: 1
 14383 ;; Hardware stack levels required when called: 3
 14384 ;; This function calls:
 14385 ;;		_I2C_2_Master_Idle
 14386 ;; This function is called by:
 14387 ;;		_color_writetoaddr
 14388 ;;		_color_read_Clear
 14389 ;;		_color_read_Red
 14390 ;;		_color_read_Green
 14391 ;;		_color_read_Blue
 14392 ;; This function uses a non-reentrant model
 14393 ;;
 14394                           
 14395                           	psect	text49
 14396   00723A                     __ptext49:
 14397                           	callstack 0
 14398   00723A                     _I2C_2_Master_Start:
 14399                           	callstack 25
 14400   00723A                     
 14401                           ;i2c.c: 26:   I2C_2_Master_Idle();
 14402   00723A  EC73  F038         	call	_I2C_2_Master_Idle	;wreg free
 14403   00723E                     
 14404                           ;i2c.c: 27:   SSP2CON2bits.SEN = 1;
 14405   00723E  010E               	movlb	14	; () banked
 14406   007240  81DA               	bsf	218,0,b	;volatile
 14407   007242                     
 14408                           ; BSR set to: 14
 14409   007242  0012               	return		;funcret
 14410   007244                     __end_of_I2C_2_Master_Start:
 14411                           	callstack 0
 14412                           
 14413 ;; *************** function _I2C_2_Master_Idle *****************
 14414 ;; Defined at:
 14415 ;;		line 21 in file "i2c.c"
 14416 ;; Parameters:    Size  Location     Type
 14417 ;;		None
 14418 ;; Auto vars:     Size  Location     Type
 14419 ;;		None
 14420 ;; Return value:  Size  Location     Type
 14421 ;;                  1    wreg      void 
 14422 ;; Registers used:
 14423 ;;		wreg, status,2, status,0
 14424 ;; Tracked objects:
 14425 ;;		On entry : 0/0
 14426 ;;		On exit  : 0/0
 14427 ;;		Unchanged: 0/0
 14428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14433 ;;Total ram usage:        1 bytes
 14434 ;; Hardware stack levels used: 1
 14435 ;; Hardware stack levels required when called: 2
 14436 ;; This function calls:
 14437 ;;		Nothing
 14438 ;; This function is called by:
 14439 ;;		_I2C_2_Master_Start
 14440 ;;		_I2C_2_Master_RepStart
 14441 ;;		_I2C_2_Master_Stop
 14442 ;;		_I2C_2_Master_Write
 14443 ;;		_I2C_2_Master_Read
 14444 ;; This function uses a non-reentrant model
 14445 ;;
 14446                           
 14447                           	psect	text50
 14448   0070E6                     __ptext50:
 14449                           	callstack 0
 14450   0070E6                     _I2C_2_Master_Idle:
 14451                           	callstack 25
 14452   0070E6                     l122:
 14453   0070E6  010E               	movlb	14	; () banked
 14454   0070E8  B5D8               	btfsc	216,2,b	;volatile
 14455   0070EA  EF79  F038         	goto	u2901
 14456   0070EE  EF7B  F038         	goto	u2900
 14457   0070F2                     u2901:
 14458   0070F2  EF73  F038         	goto	l122
 14459   0070F6                     u2900:
 14460   0070F6                     
 14461                           ; BSR set to: 14
 14462   0070F6  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
 14463   0070FA  0E1F               	movlw	31
 14464   0070FC  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
 14465   0070FE  A4D8               	btfss	status,2,c
 14466   007100  EF84  F038         	goto	u2911
 14467   007104  EF86  F038         	goto	u2910
 14468   007108                     u2911:
 14469   007108  EF73  F038         	goto	l122
 14470   00710C                     u2910:
 14471   00710C                     
 14472                           ; BSR set to: 14
 14473   00710C  0012               	return		;funcret
 14474   00710E                     __end_of_I2C_2_Master_Idle:
 14475                           	callstack 0
 14476                           
 14477 ;; *************** function _I2C_2_Master_Init *****************
 14478 ;; Defined at:
 14479 ;;		line 4 in file "i2c.c"
 14480 ;; Parameters:    Size  Location     Type
 14481 ;;		None
 14482 ;; Auto vars:     Size  Location     Type
 14483 ;;		None
 14484 ;; Return value:  Size  Location     Type
 14485 ;;                  1    wreg      void 
 14486 ;; Registers used:
 14487 ;;		wreg, status,2
 14488 ;; Tracked objects:
 14489 ;;		On entry : 0/0
 14490 ;;		On exit  : 0/0
 14491 ;;		Unchanged: 0/0
 14492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14497 ;;Total ram usage:        0 bytes
 14498 ;; Hardware stack levels used: 1
 14499 ;; Hardware stack levels required when called: 2
 14500 ;; This function calls:
 14501 ;;		Nothing
 14502 ;; This function is called by:
 14503 ;;		_color_click_init
 14504 ;;		_main
 14505 ;; This function uses a non-reentrant model
 14506 ;;
 14507                           
 14508                           	psect	text51
 14509   0070BC                     __ptext51:
 14510                           	callstack 0
 14511   0070BC                     _I2C_2_Master_Init:
 14512                           	callstack 27
 14513   0070BC                     
 14514                           ;i2c.c: 6:   SSP2CON1bits.SSPM= 0b1000;
 14515   0070BC  010E               	movlb	14	; () banked
 14516   0070BE  51D9               	movf	217,w,b	;volatile
 14517   0070C0  0BF0               	andlw	-16
 14518   0070C2  0908               	iorlw	8
 14519   0070C4  6FD9               	movwf	217,b	;volatile
 14520   0070C6                     
 14521                           ; BSR set to: 14
 14522                           ;i2c.c: 7:   SSP2CON1bits.SSPEN = 1;
 14523   0070C6  8BD9               	bsf	217,5,b	;volatile
 14524                           
 14525                           ;i2c.c: 8:   SSP2ADD = (64000000/(4*100000))-1;
 14526   0070C8  0E9F               	movlw	159
 14527   0070CA  6FD6               	movwf	214,b	;volatile
 14528   0070CC                     
 14529                           ; BSR set to: 14
 14530                           ;i2c.c: 11:   TRISDbits.TRISD5 = 1;
 14531   0070CC  8A84               	bsf	132,5,c	;volatile
 14532   0070CE                     
 14533                           ; BSR set to: 14
 14534                           ;i2c.c: 12:   TRISDbits.TRISD6 = 1;
 14535   0070CE  8C84               	bsf	132,6,c	;volatile
 14536   0070D0                     
 14537                           ; BSR set to: 14
 14538                           ;i2c.c: 13:   ANSELDbits.ANSELD5=0;
 14539   0070D0  9BA7               	bcf	167,5,b	;volatile
 14540   0070D2                     
 14541                           ; BSR set to: 14
 14542                           ;i2c.c: 14:   ANSELDbits.ANSELD6=0;
 14543   0070D2  9DA7               	bcf	167,6,b	;volatile
 14544                           
 14545                           ;i2c.c: 15:   SSP2DATPPS=0x1D;
 14546   0070D4  0E1D               	movlw	29
 14547   0070D6  6F1D               	movwf	29,b	;volatile
 14548                           
 14549                           ;i2c.c: 16:   SSP2CLKPPS=0x1E;
 14550   0070D8  0E1E               	movlw	30
 14551   0070DA  6F1C               	movwf	28,b	;volatile
 14552                           
 14553                           ;i2c.c: 17:   RD5PPS=0x1C;
 14554   0070DC  0E1C               	movlw	28
 14555   0070DE  6F6F               	movwf	111,b	;volatile
 14556                           
 14557                           ;i2c.c: 18:   RD6PPS=0x1B;
 14558   0070E0  0E1B               	movlw	27
 14559   0070E2  6F70               	movwf	112,b	;volatile
 14560   0070E4                     
 14561                           ; BSR set to: 14
 14562   0070E4  0012               	return		;funcret
 14563   0070E6                     __end_of_I2C_2_Master_Init:
 14564                           	callstack 0
 14565                           
 14566 ;; *************** function _Timer0_init *****************
 14567 ;; Defined at:
 14568 ;;		line 7 in file "timers.c"
 14569 ;; Parameters:    Size  Location     Type
 14570 ;;		None
 14571 ;; Auto vars:     Size  Location     Type
 14572 ;;		None
 14573 ;; Return value:  Size  Location     Type
 14574 ;;                  1    wreg      void 
 14575 ;; Registers used:
 14576 ;;		wreg, status,2
 14577 ;; Tracked objects:
 14578 ;;		On entry : 0/0
 14579 ;;		On exit  : 0/0
 14580 ;;		Unchanged: 0/0
 14581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14586 ;;Total ram usage:        0 bytes
 14587 ;; Hardware stack levels used: 1
 14588 ;; Hardware stack levels required when called: 2
 14589 ;; This function calls:
 14590 ;;		Nothing
 14591 ;; This function is called by:
 14592 ;;		_main
 14593 ;; This function uses a non-reentrant model
 14594 ;;
 14595                           
 14596                           	psect	text52
 14597   007178                     __ptext52:
 14598                           	callstack 0
 14599   007178                     _Timer0_init:
 14600                           	callstack 28
 14601   007178                     
 14602                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14603   007178  50D6               	movf	214,w,c	;volatile
 14604   00717A  0B1F               	andlw	-225
 14605   00717C  0940               	iorlw	64
 14606   00717E  6ED6               	movwf	214,c	;volatile
 14607   007180                     
 14608                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14609   007180  88D6               	bsf	214,4,c	;volatile
 14610                           
 14611                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1111;
 14612   007182  0E0F               	movlw	15
 14613   007184  12D6               	iorwf	214,f,c	;volatile
 14614                           
 14615                           ;timers.c: 12:     T0CON0bits.T0OUTPS=0b000;
 14616   007186  0EF0               	movlw	-16
 14617   007188  16D5               	andwf	213,f,c	;volatile
 14618   00718A                     
 14619                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
 14620   00718A  88D5               	bsf	213,4,c	;volatile
 14621                           
 14622                           ;timers.c: 17:     TMR0H=0b00001011;
 14623   00718C  0E0B               	movlw	11
 14624   00718E  6ED4               	movwf	212,c	;volatile
 14625                           
 14626                           ;timers.c: 18:     TMR0L=0b11011011;
 14627   007190  0EDB               	movlw	219
 14628   007192  6ED3               	movwf	211,c	;volatile
 14629   007194                     
 14630                           ;timers.c: 20:     T0CON0bits.T0EN=1;
 14631   007194  8ED5               	bsf	213,7,c	;volatile
 14632   007196  0012               	return		;funcret
 14633   007198                     __end_of_Timer0_init:
 14634                           	callstack 0
 14635                           
 14636 ;; *************** function _Interrupts_init *****************
 14637 ;; Defined at:
 14638 ;;		line 7 in file "interrupts.c"
 14639 ;; Parameters:    Size  Location     Type
 14640 ;;		None
 14641 ;; Auto vars:     Size  Location     Type
 14642 ;;		None
 14643 ;; Return value:  Size  Location     Type
 14644 ;;                  1    wreg      void 
 14645 ;; Registers used:
 14646 ;;		None
 14647 ;; Tracked objects:
 14648 ;;		On entry : 0/0
 14649 ;;		On exit  : 0/0
 14650 ;;		Unchanged: 0/0
 14651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14656 ;;Total ram usage:        0 bytes
 14657 ;; Hardware stack levels used: 1
 14658 ;; Hardware stack levels required when called: 2
 14659 ;; This function calls:
 14660 ;;		Nothing
 14661 ;; This function is called by:
 14662 ;;		_main
 14663 ;; This function uses a non-reentrant model
 14664 ;;
 14665                           
 14666                           	psect	text53
 14667   007210                     __ptext53:
 14668                           	callstack 0
 14669   007210                     _Interrupts_init:
 14670                           	callstack 28
 14671   007210                     
 14672                           ;interrupts.c: 9:     INTCONbits.PEIE=1;
 14673   007210  8CF2               	bsf	242,6,c	;volatile
 14674                           
 14675                           ;interrupts.c: 10:     PIE2bits.C1IE=1;
 14676   007212  010E               	movlb	14	; () banked
 14677   007214  812B               	bsf	43,0,b	;volatile
 14678                           
 14679                           ;interrupts.c: 14:     PIE0bits.IOCIE=1;
 14680   007216  8929               	bsf	41,4,b	;volatile
 14681                           
 14682                           ;interrupts.c: 15:     INTCONbits.GIE=1;
 14683   007218  8EF2               	bsf	242,7,c	;volatile
 14684   00721A                     
 14685                           ; BSR set to: 14
 14686   00721A  0012               	return		;funcret
 14687   00721C                     __end_of_Interrupts_init:
 14688                           	callstack 0
 14689                           
 14690 ;; *************** function _HighISR *****************
 14691 ;; Defined at:
 14692 ;;		line 23 in file "interrupts.c"
 14693 ;; Parameters:    Size  Location     Type
 14694 ;;		None
 14695 ;; Auto vars:     Size  Location     Type
 14696 ;;		None
 14697 ;; Return value:  Size  Location     Type
 14698 ;;                  1    wreg      void 
 14699 ;; Registers used:
 14700 ;;		wreg, cstack
 14701 ;; Tracked objects:
 14702 ;;		On entry : 0/0
 14703 ;;		On exit  : 0/0
 14704 ;;		Unchanged: 0/0
 14705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14710 ;;Total ram usage:        0 bytes
 14711 ;; Hardware stack levels used: 1
 14712 ;; Hardware stack levels required when called: 1
 14713 ;; This function calls:
 14714 ;;		i2_sendCharSerial4
 14715 ;; This function is called by:
 14716 ;;		Interrupt level 2
 14717 ;; This function uses a non-reentrant model
 14718 ;;
 14719                           
 14720                           	psect	intcode
 14721   000008                     __pintcode:
 14722                           	callstack 0
 14723   000008                     _HighISR:
 14724                           	callstack 23
 14725                           
 14726                           ; BSR set to: 14
 14727                           ;incstack = 0
 14728   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14729   00000A                     
 14730                           ;interrupts.c: 48:     if (PORTBbits.RB0){
 14731   00000A  A08A               	btfss	138,0,c	;volatile
 14732   00000C  EF0A  F000         	goto	i2u535_41
 14733   000010  EF0C  F000         	goto	i2u535_40
 14734   000014                     i2u535_41:
 14735   000014  EF10  F000         	goto	i2l447
 14736   000018                     i2u535_40:
 14737   000018                     
 14738                           ;interrupts.c: 49:         LATHbits.LATH3 = 0;
 14739   000018  9680               	bcf	128,3,c	;volatile
 14740   00001A                     
 14741                           ;interrupts.c: 50:         sendCharSerial4('a');
 14742   00001A  0E61               	movlw	97
 14743   00001C  ECF6  F038         	call	i2_sendCharSerial4
 14744   000020                     i2l447:
 14745   000020  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14746   000022  0011               	retfie		f
 14747   000024                     __end_of_HighISR:
 14748                           	callstack 0
 14749                           
 14750 ;; *************** function i2_sendCharSerial4 *****************
 14751 ;; Defined at:
 14752 ;;		line 31 in file "serial.c"
 14753 ;; Parameters:    Size  Location     Type
 14754 ;;  charToSend      1    wreg     unsigned char 
 14755 ;; Auto vars:     Size  Location     Type
 14756 ;;  charToSend      1    0[COMRAM] unsigned char 
 14757 ;; Return value:  Size  Location     Type
 14758 ;;                  1    wreg      void 
 14759 ;; Registers used:
 14760 ;;		wreg
 14761 ;; Tracked objects:
 14762 ;;		On entry : 0/0
 14763 ;;		On exit  : 0/0
 14764 ;;		Unchanged: 0/0
 14765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14770 ;;Total ram usage:        1 bytes
 14771 ;; Hardware stack levels used: 1
 14772 ;; This function calls:
 14773 ;;		Nothing
 14774 ;; This function is called by:
 14775 ;;		_HighISR
 14776 ;; This function uses a non-reentrant model
 14777 ;;
 14778                           
 14779                           	psect	text55
 14780   0071EC                     __ptext55:
 14781                           	callstack 0
 14782   0071EC                     i2_sendCharSerial4:
 14783                           	callstack 23
 14784                           
 14785                           ;incstack = 0
 14786                           ;i2sendCharSerial4@charToSend stored from wreg
 14787   0071EC  6E01               	movwf	i2sendCharSerial4@charToSend^0,c
 14788   0071EE                     i2l493:
 14789   0071EE  010E               	movlb	14	; () banked
 14790   0071F0  A537               	btfss	55,2,b	;volatile
 14791   0071F2  EFFD  F038         	goto	i2u532_41
 14792   0071F6  EFFF  F038         	goto	i2u532_40
 14793   0071FA                     i2u532_41:
 14794   0071FA  EFF7  F038         	goto	i2l493
 14795   0071FE                     i2u532_40:
 14796   0071FE                     
 14797                           ; BSR set to: 14
 14798                           ;serial.c: 33:     TX4REG = charToSend;
 14799   0071FE  C001  FEE4         	movff	i2sendCharSerial4@charToSend,3812	;volatile
 14800   007202                     
 14801                           ; BSR set to: 14
 14802   007202  0012               	return		;funcret
 14803   007204                     __end_ofi2_sendCharSerial4:
 14804                           	callstack 0
 14805                           
 14806                           	psect	rparam
 14807   000000                     
 14808                           	psect	temp
 14809   00005D                     btemp:
 14810                           	callstack 0
 14811   00005D                     	ds	1
 14812   000000                     int$flags	set	btemp
 14813   000000                     wtemp8	set	btemp+1
 14814   000000                     ttemp5	set	btemp+1
 14815   000000                     ttemp6	set	btemp+4
 14816   000000                     ttemp7	set	btemp+8
 14817                           
 14818                           	psect	config
 14819                           
 14820                           ;Config register CONFIG1L @ 0x300000
 14821                           ;	External Oscillator mode Selection bits
 14822                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14823                           ;	Power-up default value for COSC bits
 14824                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14825   300000                     	org	3145728
 14826   300000  AA                 	db	170
 14827                           
 14828                           ;Config register CONFIG1H @ 0x300001
 14829                           ;	unspecified, using default values
 14830                           ;	Clock Out Enable bit
 14831                           ;	CLKOUTEN = 0x1, unprogrammed default
 14832                           ;	Clock Switch Enable bit
 14833                           ;	CSWEN = 0x1, unprogrammed default
 14834                           ;	Fail-Safe Clock Monitor Enable bit
 14835                           ;	FCMEN = 0x1, unprogrammed default
 14836   300001                     	org	3145729
 14837   300001  FF                 	db	255
 14838                           
 14839                           ;Config register CONFIG3L @ 0x300004
 14840                           ;	WDT Period Select bits
 14841                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14842                           ;	WDT operating mode
 14843                           ;	WDTE = OFF, WDT Disabled
 14844   300004                     	org	3145732
 14845   300004  9F                 	db	159
 14846                           
 14847                           ;Config register CONFIG3H @ 0x300005
 14848                           ;	unspecified, using default values
 14849                           ;	WDT Window Select bits
 14850                           ;	WDTCWS = 0x7, unprogrammed default
 14851                           ;	WDT input clock selector
 14852                           ;	WDTCCS = 0x7, unprogrammed default
 14853   300005                     	org	3145733
 14854   300005  FF                 	db	255
 14855                           tosu	equ	0xFFF
 14856                           tosh	equ	0xFFE
 14857                           tosl	equ	0xFFD
 14858                           stkptr	equ	0xFFC
 14859                           pclatu	equ	0xFFB
 14860                           pclath	equ	0xFFA
 14861                           pcl	equ	0xFF9
 14862                           tblptru	equ	0xFF8
 14863                           tblptrh	equ	0xFF7
 14864                           tblptrl	equ	0xFF6
 14865                           tablat	equ	0xFF5
 14866                           prodh	equ	0xFF4
 14867                           prodl	equ	0xFF3
 14868                           indf0	equ	0xFEF
 14869                           postinc0	equ	0xFEE
 14870                           postdec0	equ	0xFED
 14871                           preinc0	equ	0xFEC
 14872                           plusw0	equ	0xFEB
 14873                           fsr0h	equ	0xFEA
 14874                           fsr0l	equ	0xFE9
 14875                           wreg	equ	0xFE8
 14876                           indf1	equ	0xFE7
 14877                           postinc1	equ	0xFE6
 14878                           postdec1	equ	0xFE5
 14879                           preinc1	equ	0xFE4
 14880                           plusw1	equ	0xFE3
 14881                           fsr1h	equ	0xFE2
 14882                           fsr1l	equ	0xFE1
 14883                           bsr	equ	0xFE0
 14884                           indf2	equ	0xFDF
 14885                           postinc2	equ	0xFDE
 14886                           postdec2	equ	0xFDD
 14887                           preinc2	equ	0xFDC
 14888                           plusw2	equ	0xFDB
 14889                           fsr2h	equ	0xFDA
 14890                           fsr2l	equ	0xFD9
 14891                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    112
    Data        0
    BSS         123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      92
    BANK0           160     19     139
    BANK1           256    184     184
    BANK2           256    176     176
    BANK3           256    207     207
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    color_read@p	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK3[8]), 

    decide_action@pblue_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@blue_val(BANK2[20]), 

    decide_action@pclear_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@clear_val(BANK2[20]), 

    decide_action@pgreen_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@green_val(BANK2[20]), 

    decide_action@pred_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@red_val(BANK2[20]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pblue_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@blue_val(BANK3[20]), 

    main@pclear_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK3[20]), 

    main@pgreen_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@green_val(BANK3[20]), 

    main@pmL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    main@pmL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pmR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    main@pmR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pred_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@red_val(BANK3[20]), 

    main@pRGBC	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK3[8]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    reverse_after_read@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    reverse_after_read@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    reverse_one_square@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    reverse_one_square@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S1109DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    S1109DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S2593$buffer	PTR unsigned char  size(2) Largest target is 0

    S2593$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@blue_val(BANK2[20]), decide_action@green_val(BANK2[20]), decide_action@red_val(BANK2[20]), main@blue_val(BANK3[20]), 
		 -> main@clear_val(BANK3[20]), main@green_val(BANK3[20]), main@red_val(BANK3[20]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), main@motorR(BANK3[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[12]), STR_10(CODE[15]), STR_11(CODE[12]), STR_12(CODE[14]), 
		 -> STR_13(CODE[13]), STR_14(CODE[16]), STR_15(CODE[12]), STR_16(CODE[14]), 
		 -> STR_17(CODE[13]), STR_18(CODE[14]), STR_2(CODE[14]), STR_3(CODE[15]), 
		 -> STR_4(CODE[12]), STR_5(CODE[14]), STR_6(CODE[15]), STR_7(CODE[12]), 
		 -> STR_8(CODE[14]), STR_9(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@blue_val(BANK2[20]), decide_action@green_val(BANK2[20]), decide_action@red_val(BANK2[20]), main@blue_val(BANK3[20]), 
		 -> main@clear_val(BANK3[20]), main@green_val(BANK3[20]), main@red_val(BANK3[20]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_left_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_left_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_left_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_left_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_right_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_right_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_right_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_right_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[12]), STR_10(CODE[15]), STR_11(CODE[12]), STR_12(CODE[14]), 
		 -> STR_13(CODE[13]), STR_14(CODE[16]), STR_15(CODE[12]), STR_16(CODE[14]), 
		 -> STR_17(CODE[13]), STR_18(CODE[14]), STR_2(CODE[14]), STR_3(CODE[15]), 
		 -> STR_4(CODE[12]), STR_5(CODE[14]), STR_6(CODE[15]), STR_7(CODE[12]), 
		 -> STR_8(CODE[14]), STR_9(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[12]), STR_10(CODE[15]), STR_11(CODE[12]), STR_12(CODE[14]), 
		 -> STR_13(CODE[13]), STR_14(CODE[16]), STR_15(CODE[12]), STR_16(CODE[14]), 
		 -> STR_17(CODE[13]), STR_18(CODE[14]), STR_2(CODE[14]), STR_3(CODE[15]), 
		 -> STR_4(CODE[12]), STR_5(CODE[14]), STR_6(CODE[15]), STR_7(CODE[12]), 
		 -> STR_8(CODE[14]), STR_9(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[12]), STR_10(CODE[15]), STR_11(CODE[12]), STR_12(CODE[14]), 
		 -> STR_13(CODE[13]), STR_14(CODE[16]), STR_15(CODE[12]), STR_16(CODE[14]), 
		 -> STR_17(CODE[13]), STR_18(CODE[14]), STR_2(CODE[14]), STR_3(CODE[15]), 
		 -> STR_4(CODE[12]), STR_5(CODE[14]), STR_6(CODE[15]), STR_7(CODE[12]), 
		 -> STR_8(CODE[14]), STR_9(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_decide_action
    _turn_right_90->_stop
    _turn_right_135->_stop
    _turn_left_90->_stop
    _turn_left_135->_stop
    _reverse_one_square->_stop
    _reverse_after_read->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _decide_action->___flge
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _powf->___flge
    _sqrtf->___fladd
    _scalbnf->___flmul
    ___flmul->___fladd
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___fldiv
    ___flge->___flsub
    ___fldiv->___flmul
    _color_read->_color_read_Blue
    _color_read->_color_read_Clear
    _color_read->_color_read_Green
    _color_read->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_sendCharSerial4

Critical Paths under _main in BANK0

    _decide_action->_powf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _decide_action->_powf

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_decide_action

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               219   219      0  201607
                                             17 BANK0      2     2      0
                                              0 BANK3    207   207      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
              _color_click_toggleLED
                         _color_read
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _color_writetoaddr
                      _decide_action
                     _fullSpeedAhead
                    _get16bitTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                        _resetTimer0
                 _reverse_after_read
                 _reverse_one_square
                  _sendStringSerial4
                            _sprintf
                               _stop
                      _turn_left_135
                       _turn_left_90
                     _turn_right_135
                      _turn_right_90
 ---------------------------------------------------------------------------------
 (1) _turn_right_90                                        6     2      4    7594
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_right_135                                       6     2      4    6834
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_90                                         6     2      4    6986
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_135                                        6     2      4    6834
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse_one_square                                   6     2      4    6986
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse_after_read                                   6     2      4    7898
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    4133
                                             20 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _resetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _get16bitTMR0val                                      6     4      2      24
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    3113
                                             20 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          6     4      2    2285
                                             14 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              7 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _decide_action                                      180   180      0  131015
                                             87 COMRAM     2     2      0
                                              0 BANK2    176   176      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flsub
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                  _color_writetoaddr
                               _powf
                  _sendStringSerial4
                            _sprintf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    15      7    5871
                                             26 COMRAM    20    13      7
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2936
                                             22 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    2586
                                             11 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2    1435
                                              2 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   75477
                                              0 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sqrtf                                               41    37      4    1413
                                             17 COMRAM    37    33      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6    9383
                                             42 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    8888
                                             17 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                             12 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8   19457
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8   14270
                                              1 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1094
                                             75 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2767
                                             42 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read                                           2     0      2     616
                                             12 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              2 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_toggleLED                                1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0    1282
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1    1282
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _HighISR                                              0     0      0      22
                  i2_sendCharSerial4
 ---------------------------------------------------------------------------------
 (8) i2_sendCharSerial4                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_click_toggleLED
   _color_read
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_read_Blue
   _color_read_Clear
   _color_read_Green
   _color_read_Red
   _color_writetoaddr
   _decide_action
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
     ___flge
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
     ___flsub
     ___xxtofl
       _color_read_Blue (ARG)
       _color_read_Green (ARG)
       _color_read_Red (ARG)
     _color_read_Blue
     _color_read_Green
     _color_read_Red
     _color_writetoaddr
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
         ___fladd (ARG)
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _color_read_Blue (ARG)
       _color_read_Clear (ARG)
       _color_read_Green (ARG)
       _color_read_Red (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
     _sqrtf
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _get16bitTMR0val
   _initDCmotorsPWM
   _initUSART4
   _resetTimer0
   _reverse_after_read
     _setMotorPWM
     _stop
       _setMotorPWM
   _reverse_one_square
     _setMotorPWM
     _stop
   _sendStringSerial4
   _sprintf
   _stop
   _turn_left_135
     _setMotorPWM
     _stop
   _turn_left_90
     _setMotorPWM
     _stop
   _turn_right_135
     _setMotorPWM
     _stop
   _turn_right_90
     _setMotorPWM
     _stop

 _HighISR (ROOT)
   i2_sendCharSerial4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     CF      CF      11       80.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100     B0      B0       9       68.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B8      B8       7       71.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      8B       5       86.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5C       1       97.9%
BITBIGSFRllhllh     37      0       0      49        0.0%
BITBIGSFRllhhl      31      0       0      47        0.0%
BITBIGSFRlllllh     2A      0       0      61        0.0%
BITBIGSFRllllll     26      0       0      67        0.0%
BITBIGSFRllllhh     20      0       0      52        0.0%
BITBIGSFRhhlllh     1B      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      44        0.0%
BITBIGSFRlllllh     14      0       0      54        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      56        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      53        0.0%
BITBIGSFRlllllh      B      0       0      65        0.0%
BITBIGSFRlllllh      9      0       0      62        0.0%
BITBIGSFRlllllh      9      0       0      55        0.0%
BITBIGSFRllhlll      8      0       0      50        0.0%
BITBIGSFRllhhhl      6      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      66        0.0%
BITBIGSFRlllllh      6      0       0      60        0.0%
BITBIGSFRlllllh      5      0       0      59        0.0%
BITBIGSFRllhhhh      3      0       0      45        0.0%
BITBIGSFRlllllh      3      0       0      58        0.0%
BITBIGSFRllhlh       2      0       0      48        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      64        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRlhlh        1      0       0      42        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      57        0.0%
BITBIGSFRlllh        1      0       0      51        0.0%
BITBIGSFRhlhl        1      0       0      40        0.0%
BITBIGSFRhhllll      1      0       0      39        0.0%
BITBIGSFRlhh         1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     31E      68        0.0%
DATA                 0      0     31E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 22:24:59 2024

               _color_read_Red 6D98                   ___fldiv@aexp 0043                   ___fldiv@bexp 0042  
                 ___fldiv@sign 003B                _color_read_Blue 6E88                             _L1 0E5D  
                           _L2 0E59                             _L3 0E55                             _L4 0E51  
                           _L5 0E4D                             _L6 0E49                             _P1 0E45  
                           l62 7176                             _P2 0E41                             l71 6DE6  
                           _P3 0E3D                             l80 6D38                             _P4 0E39  
                           l65 6D96                             _P5 0E35                             l74 6E36  
                           l59 6F20                             l68 6E86                             l92 4782  
                           l84 34DE                             l77 6ED6                             l86 355A  
                           l88 35D6                   ___awdiv@sign 0007                             _bp 0E11  
                           _cp 0E21            ___wmul@multiplicand 0004               _color_read_Clear 6E38  
             _color_read_Green 6DE8              ??_Interrupts_init 0002                            l201 6988  
                          l122 70E6                            l131 722E                            l140 6FA8  
                          l125 710C                            l134 7238                            l206 69B8  
                          l214 6C5E                            l222 6576                            l230 639E  
                          l119 70E4                            l128 7242                            l137 720E  
                          l233 6606                            l217 651A                            l241 642E  
                          l225 6342                            l411 71D2                            l502 70BA  
                          l414 7224                            l254 6836                            l262 674C  
                          l238 6662                            l246 648A                            l191 6BC4  
                          l408 7196                            l441 721A                            l249 67DA  
                          l257 66F0                            l198 61AE                            l802 6B22  
                          l484 71B4                            l493 71D6                            l558 7132  
                          l823 626C                            l832 7056                            l496 71EA  
                          l828 62B2                            l789 68FA                            _lg2 0E31  
                          _abs 7058                            _ovt 0E25                   ___awmod@sign 0007  
                          prod 0FF3                            wreg 0FE8                   ___flmul@aexp 0023  
                 ___flmul@bexp 0024                   ___flmul@sign 001E                   ___flmul@temp 0029  
                 ___flmul@prod 0025                    main@actions 0300                           l1103 4A8C  
                         l1112 4B5C                           l1113 4B4A                           ?_abs 0008  
                         l1140 57E4                           l1220 5DD4                           l1213 5D3C  
                         l1142 5644                           l1151 568A                           l1128 6F66  
                         l1216 5E98                           l1400 1420                           l1056 6CD2  
                         l1153 5702                           l1145 5608                           l1049 6CCA  
                         l1154 56F0                           l1227 5E30                           l1172 4D08  
                         l1236 6FE4                           l1181 4F76                           l1086 4972  
                         l1182 4F64                           l1095 4C42                           l1087 4960  
                         l4000 4C30                           l1088 4926                           l1176 506C  
                         l1440 7244                           l1280 701E                           l1433 32E8  
                         l4002 4C32                           l4010 4C5E                           l1450 5CE4  
                         l1274 6042                           l1179 4EFE                           l4100 4F2E  
                         l4020 4C96                           l4012 4C60                           l1372 11B8  
                         l1284 7072                           l1189 502E                           l4110 4FA0  
                         l4102 4F5C                           l4030 4CC2                           l4022 4CA6  
                         l4014 4C70                           l4006 4C44                           l1470 5374  
                         l1382 124E                           l1463 5252                           l1367 3324  
                         l1287 708A                           l4120 5016                           l4112 4FCA  
                         l4040 4D18                           l4032 4CD2                           l4024 4CAC  
                         l4016 4C80                           l4008 4C50                           l1472 53E2  
                         l1392 1310                           l4210 723E                           l4122 5032  
                         l4130 5058                           l4106 4F86                           l4114 4FCE  
                         l4050 4D52                           l4042 4D28                           l4034 4CE2  
                         l4026 4CB2                           l4018 4C90                           l4202 6024  
                         l1467 52B0                           l1459 544A                           l1299 6A72  
                         l4212 7206                           l5100 6EE6                           l4220 7226  
                         l4132 505C                           l4124 5042                           l4116 4FE8  
                         l4108 4F92                           l4060 4DA4                           l4052 4D68  
                         l4036 4CF2                           l4028 4CC0                           l1396 13C2  
                         l4140 6C7A                           l4214 720A                           l5110 6F16  
                         l5102 6EF6                           l4230 6F7E                           l4222 722A  
                         l4126 5050                           l4118 4FFC                           l4070 4DEA  
                         l4062 4DB2                           l4054 4D74                           l4046 4D3C  
                         l4038 4CF8                           l4150 6CB4                           l4142 6C82  
                         l4310 60C8                           l4208 723A                           l4216 7230  
                         l5112 6F18                           l5104 6F00                           l4232 6FA4  
                         l4224 6F6A                           l5120 6D3A                           l4400 5612  
                         l4128 5052                           l4080 4E58                           l4072 4E04  
                         l4064 4DBE                           l4056 4D8C                           l4048 4D48  
                         l4240 507E                           l4320 71D6                           l4160 5EB8  
                         l4152 6CBC                           l4144 6C8A                           l4136 6C60  
                         l4312 60CC                           l4304 6044                           l4218 7234  
                         l5114 6F1A                           l5106 6F0A                           l5122 6CD4  
                         l4234 6FA6                           l4226 6F6E                           l4410 566A  
                         l4402 5630                           l4330 5468                           l4090 4EEE  
                         l4082 4E82                           l4074 4E14                           l4066 4DCE  
                         l4058 4D98                           l4242 50B2                           l4322 71E6  
                         l4170 5EF4                           l4162 5EC0                           l4154 6CBE  
                         l4146 6C98                           l4138 6C68                           l4314 610E  
                         l4306 6060                           l5116 6F1C                           l5108 6F14  
                         l4228 6F76                           l4420 56A8                           l4412 5670  
                         l4404 5632                           l4332 5478                           l4340 54A2  
                         l4324 544C                           l4500 5CF8                           l4092 4EFC  
                         l4084 4EB8                           l4076 4E30                           l4068 4DDA  
                         l4260 5172                           l4244 50E0                           l4252 5112  
                         l3700 684A                           l4180 5F76                           l4172 5F0C  
                         l4164 5ECE                           l4156 6CC4                           l4148 6C9E  
                         l4316 612A                           l4308 60B4                           l5118 6F1E  
                         l4430 5712                           l4422 56AC                           l4414 567A  
                         l4406 5642                           l4350 54CE                           l4342 54B2  
                         l4334 5488                           l4326 5458                           l4510 5D76  
                         l4502 5D06                           l4094 4F0E                           l4086 4EC6  
                         l4078 4E3C                           l4270 51F2                           l4262 5180  
                         l4254 5130                           l4246 50EE                           l4238 506E  
                         l3710 6870                           l3702 6852                           l4190 5FD4  
                         l4182 5F92                           l4174 5F24                           l4166 5ED2  
                         l4158 5E9A                           l4318 616E                           l5310 6B7C  
                         l4600 70CC                           l4440 5774                           l4432 571E  
                         l4424 56BA                           l4416 5688                           l4408 5654  
                         l4352 54DE                           l4360 5508                           l4344 54B8  
                         l4336 5498                           l4328 5466                           l4520 5DCA  
                         l4512 5D7E                           l4504 5D4C                           l4096 4F1C  
                         l4088 4EE4                           l4280 5292                           l4272 5206  
                         l4256 515E                           l4248 50FE                           l3720 68A8  
                         l3712 6878                           l3704 6856                           l4192 5FE6  
                         l4184 5FA4                           l4176 5F2E                           l4168 5EDC  
                         l3800 712A                           l5320 6B96                           l5312 6B7E  
                         l5304 6B24                           l5080 6BE2                           l5400 638A  
                         l4602 70CE                           l4610 6D98                           l4450 57D2  
                         l4442 578A                           l4434 572C                           l4426 56E8  
                         l4418 569A                           l4370 554A                           l4362 5518  
                         l4354 54EE                           l4346 54BE                           l4338 549A  
                         l3810 47A0                           l4530 5E40                           l4522 5E06  
                         l4514 5D8A                           l4506 5D62                           l4098 4F20  
                         l4290 533C                           l4282 52A0                           l4274 5210  
                         l3730 68D4                           l3722 68AE                           l3714 688A  
                         l3706 6864                           l4194 6000                           l4186 5FB4  
                         l4178 5F46                           l5330 6BBA                           l5322 6BA0  
                         l5314 6B88                           l5306 6B4E                           l5090 6C26  
                         l5082 6BEC                           l5410 65D4                           l5402 6578  
                         l4604 70D0                           l4612 6DDE                           l4452 57D8  
                         l4444 57A4                           l4436 5756                           l4364 552E  
                         l4356 54FE                           l4348 54CC                           l3900 4954  
                         l3812 47B0                           l3820 47DA                           l3804 4784  
                         l4540 5E88                           l4532 5E44                           l4524 5E12  
                         l4516 5DBC                           l4292 5384                           l4284 52CA  
                         l4276 521C                           l4268 519E                           l7100 0F70  
                         l3724 68C4                           l3716 6892                           l3732 68DA  
                         l3708 686C                           l3740 6A74                           l4188 5FC4  
                         l4196 6002                           l5340 68FC                           l5332 6BBC  
                         l5324 6BB4                           l5316 6B8A                           l5308 6B72  
                         l5500 7198                           l5084 6C04                           l5092 6C2E  
                         l5076 6BC6                           l5420 6636                           l5412 65DE  
                         l5404 659A                           l4606 70D2                           l4622 6E88  
                         l4630 6E7E                           l4454 57DA                           l4446 57C0  
                         l4438 575A                           l4390 55CC                           l4382 5582  
                         l4366 553E                           l4374 555E                           l4358 5500  
                         l4470 61DE                           l3910 49A4                           l3902 495E  
                         l3830 480A                           l3822 47EA                           l3814 47C0  
                         l3806 4790                           l4462 6F22                           l4534 5E68  
                         l4526 5E20                           l4518 5DBE                           l4294 538E  
                         l4286 52EA                           l4278 522A                           l3734 68EA  
                         l3726 68CC                           l3718 689A                           l3750 6AA0  
                         l3742 6A78                           l4198 6018                           l4550 7016  
                         l5350 6960                           l5342 691C                           l5334 6BBE  
                         l5326 6BB6                           l5318 6B94                           l5510 71B2  
                         l5502 71A2                           l5094 6C46                           l5086 6C0E  
                         l5078 6BCA                           l5422 664E                           l5414 65EA  
                         l5406 65B2                           l5430 63E4                           l4608 715A  
                         l5096 6ED8                           l4624 6ECE                           l4616 6DE8  
                         l4448 57C4                           l4392 55D4                           l4384 559C  
                         l4376 556E                           l4368 5546                           l4480 624C  
                         l4472 61EE                           l3920 49E0                           l3912 49B4  
                         l3904 4980                           l3840 484A                           l3832 4818  
                         l3824 47F0                           l3816 47D0                           l3808 479E  
                         l4464 6F32                           l4536 5E78                           l4528 5E3E  
                         l4560 5B12                           l4296 53A4                           l4288 52FE  
                         l7120 1050                           l7112 1002                           l7104 0F86  
                         l3736 68F2                           l3728 68CE                           l3760 6AD8  
                         l3752 6AA8                           l3744 6A86                           l4544 6FE6  
                         l4640 6FC6                           l5352 696C                           l5344 6934  
                         l5336 6BC0                           l5328 6BB8                           l5504 71A4  
                         l5512 721C                           l5088 6C1A                           l5416 65F6  
                         l5408 65BC                           l5360 64AE                           l5440 6446  
                         l5432 63FC                           l5424 63A0                           l5098 6EDC  
                         l4618 6E2E                           l4394 55E4                           l4386 55AC  
                         l4378 556E                           l4482 625A                           l4474 621C  
                         l4490 7020                           l3930 4A26                           l3922 49EE  
                         l3914 49C2                           l3906 4990                           l3850 4884  
                         l3842 484C                           l3834 481A                           l3826 4802  
                         l3818 47D2                           l4538 5E86                           l4570 5B8E  
                         l4562 5B1A                           l4554 5AB2                           l4298 53BA  
                         l7210 15B4                           l7122 106C                           l7114 1012  
                         l7106 0FA8                           l4650 709E                           l3770 6B12  
                         l3762 6AEE                           l3754 6ABA                           l3746 6A8E  
                         l4546 6FEE                           l4642 6FD6                           l4634 6FAA  
                         l5354 6978                           l5346 693E                           l5514 71B6  
                         l5338 6BC2                           l5506 71AE                           l5450 6786  
                         l5418 661E                           l5370 64FE                           l5362 64C6  
                         l5442 645E                           l5434 6406                           l5426 63C2  
                         l4628 6E38                           l4396 55F8                           l4388 55BC  
                         l4484 62AA                           l4476 622C                           l4468 61B0  
                         l4492 7036                           l3940 4AA2                           l3932 4A5A  
                         l3924 49F0                           l3916 49D0                           l3860 4898  
                         l3852 4888                           l3836 482A                           l3844 4854  
                         l3828 4804                           l4580 5C0E                           l4564 5B36  
                         l4572 5B9A                           l4556 5AC2                           l7300 1BD2  
                         l7212 15D6                           l7124 116A                           l7116 1020  
                         l7108 0FCA                           l4652 70A2                           l3772 6B1A  
                         l3764 6AF6                           l3756 6AC2                           l3748 6A92  
                         l3780 69DA                           l4548 6FFE                           l4636 6FB6  
                         l5356 69A0                           l5348 6956                           l5516 71BC  
                         l5508 71B0                           l5460 67CA                           l5452 6790  
                         l5372 650A                           l5364 64D0                           l5444 6476  
                         l5436 6412                           l5428 63DA                           l5380 62B4  
                         l4398 5606                           l4486 62B0                           l4478 623A  
                         l4494 7046                           l3950 4ADE                           l3942 4AB2  
                         l3934 4A5C                           l3926 49FA                           l3918 49DC  
                         l3870 48AC                           l3862 489C                           l3854 488C  
                         l3846 4864                           l3838 483A                           l4590 5CA0  
                         l4582 5C42                           l4574 5BB6                           l4566 5B6A  
                         l4558 5ADE                           l7310 1C9A                           l7302 1C06  
                         l7230 1660                           l7214 15FA                           l7206 158E  
                         l7142 1262                           l7134 1208                           l7126 11D6  
                         l7150 12AE                           l7118 103C                           l4646 708C  
                         l3766 6AFC                           l3758 6ACA                           l3790 7058  
                         l3782 69E4                           l4638 6FBE                           l5518 71CA  
                         l5462 67F2                           l5454 67A8                           l5446 674E  
                         l5470 6684                           l5374 6532                           l5366 64E8  
                         l5358 648C                           l5438 641E                           l5390 631A  
                         l5382 62D6                           l3960 4B0A                           l3952 4AE0  
                         l3936 4A6C                           l3928 4A00                           l3880 48C0  
                         l3872 48B0                           l3864 48A0                           l3856 4890  
                         l3848 4876                           l4592 5CD4                           l4584 5C4A  
                         l4576 5BEA                           l4568 5B72                           l7400 27F0  
                         l7320 1E3C                           l7312 1D0C                           l7304 1C16  
                         l7240 1682                           l7216 1608                           l7224 1626  
                         l7208 15A4                           l7152 12CA                           l7144 1270  
                         l7136 122A                           l7128 11F2                           l4648 7090  
                         l3696 6838                           l3768 6B02                           l3792 7066  
                         l3784 6A00                           l3776 69BA                           l5464 680A  
                         l5456 67B2                           l5448 676E                           l5480 66D4  
                         l5472 669C                           l5376 654A                           l5368 64F2  
                         l5392 6326                           l5384 62EE                           l5490 7178  
                         l3794 70E6                           l3970 4B42                           l3954 4AEE  
                         l3946 4AC6                           l3962 4B0C                           l3938 4A7C  
                         l3890 491E                           l3874 48B4                           l3866 48A4  
                         l3858 4894                           l3882 48C4                           l4498 5CE8  
                         l4586 5C66                           l4578 5BF2                           l7402 2824  
                         l7330 1FAC                           l7322 1E70                           l7314 1D58  
                         l7306 1C26                           l7250 1758                           l7170 13D2  
                         l7162 1374                           l7154 12D8                           l7146 1298  
                         l7138 1238                           l7090 0ED6                           l3698 683C  
                         l3786 6A32                           l3778 69CA                           l5466 6822  
                         l5458 67BE                           l5482 66E0                           l5474 66A6  
                         l5378 6562                           l5394 6332                           l5386 62F8  
                         l5492 7180                           l4596 70BC                           l3796 70F6  
                         l3980 4BC0                           l3956 4AF6                           l3948 4AD0  
                         l3964 4B1A                           l3892 4934                           l3884 48C8  
                         l3876 48B8                           l3868 48A8                           l4588 5C6E  
                         l7500 3268                           l7404 2858                           l7340 211C  
                         l7332 2004                           l7324 1EA4                           l7316 1D8C  
                         l7308 1C40                           l7260 18D8                           l7252 17B0  
                         l7244 1698                           l7228 163C                           l7180 1472  
                         l7172 13EE                           l7164 138C                           l7156 1324  
                         l7092 0EF6                           l5484 6708                           l5476 66BE  
                         l5468 6664                           l5396 635A                           l5388 6310  
                         l5494 718A                           l4598 70C6                           l3990 4C06  
                         l3974 4B6C                           l3982 4BC2                           l3966 4B1E  
                         l3958 4AFA                           l3894 4940                           l3886 48F2  
                         l3878 48BC                           l7502 32B8                           l7406 2868  
                         l7350 21FC                           l7342 2150                           l7334 205C  
                         l7326 1EFC                           l7318 1DE4                           l7270 198A  
                         l7262 18F2                           l7254 17E4                           l7246 16CC  
                         l7182 1482                           l7190 1542                           l7174 1404  
                         l7166 139A                           l7158 133C                           l7094 0F3E  
                         l3798 710E                           l5486 6720                           l5478 66C8  
                         l5398 6372                           l5496 7194                           l3992 4C14  
                         l3984 4BD2                           l3976 4B78                           l3968 4B2C  
                         l3896 4944                           l3888 490E                           l7504 32F8  
                         l7416 2890                           l7360 22E6                           l7352 2216  
                         l7344 2184                           l7336 2090                           l7328 1F54  
                         l7280 1A60                           l7272 19BE                           l7264 1926  
                         l7256 1818                           l7248 1724                           l7184 14E6  
                         l7176 1430                           l7600 3BAC                           l7520 336C  
                         l7512 3326                           l5488 6738                           l5498 7210  
                         l3994 4C1A                           l3986 4BE2                           l3978 4B86  
                         l3898 4952                           l7506 3310                           l7450 2C64  
                         l7434 2982                           l7442 2A0C                           l7418 28A8  
                         l7426 2926                           l7370 23F4                           l7362 2362  
                         l7354 224A                           l7346 21B8                           l7338 20C4  
                         l7290 1AD4                           l7282 1A70                           l7274 19D0  
                         l7258 18C8                           l7266 195E                           l7186 1506  
                         l7178 143E                           l7194 1556                           l7098 0F54  
                         l7610 3CFA                           l7602 3BE0                           l7530 340A  
                         l7522 3392                           l7514 3340                           l3996 4C1C  
                         l3988 4C02                           l7460 2D06                           l7452 2C74  
                         l7444 2A7E                           l7436 29A0                           l7428 296E  
                         l7380 25CE                           l7372 2428                           l7364 2396  
                         l7356 227E                           l7348 21EC                           l7292 1AE8  
                         l7284 1A88                           l7276 19E0                           l7268 196E  
                         l7196 1566                           l7188 151E                           l7620 3EB4  
                         l7612 3D30                           l7604 3C4A                           l7540 3494  
                         l7532 342A                           l7524 33B8                           l7516 334A  
                         l7700 57F6                           l3998 4C22                           l7470 2E52  
                         l7462 2D3A                           l7454 2CA8                           l7446 2A8E  
                         l7438 29F6                           l7390 26AE                           l7382 2602  
                         l7374 245C                           l7366 23A6                           l7358 22B2  
                         l7294 1B04                           l7278 1A48                           l7198 1574  
                         l7630 403A                           l7622 3EEA                           l7614 3D66  
                         l7606 3C92                           l7550 35A2                           l7542 34AA  
                         l7534 3436                           l7526 33DE                           l7518 3354  
                         l7710 580E                           l7702 5802                           l7480 2F9E  
                         l7472 2E86                           l7464 2D6E                           l7456 2CDC  
                         l7448 2AB0                           l7392 26E2                           l7384 2612  
                         l7376 2526                           l7368 23C0                           l7296 1B14  
                         l7288 1AB0                           l7640 41F4                           l7632 40DA  
                         l7624 3F88                           l7616 3D9A                           l7608 3CC6  
                         l7560 36CA                           l7552 3672                           l7544 3510  
                         l7536 3456                           l7528 33FE                           l7800 59CA  
                         l7720 581E                           l7712 5810                           l7704 5806  
                         l7490 317A                           l7482 2FF6                           l7474 2EBA  
                         l7466 2DC6                           l7458 2CEC                           l7386 262C  
                         l7378 254C                           l7298 1B60                           l7394 2716  
                         l7650 42FC                           l7642 4228                           l7634 410E  
                         l7626 3FBE                           l7618 3DCE                           l7570 37B6  
                         l7562 36EA                           l7554 3692                           l7546 3526  
                         l7538 3462                           l7810 5A26                           l7802 59D6  
                         l7730 583E                           l7722 5822                           l7714 5814  
                         l7706 580A                           l7492 31AE                           l7484 304E  
                         l7476 2EEE                           l7468 2E1E                           l7396 2740  
                         l7388 2660                           l7660 4534                           l7652 43E2  
                         l7644 425E                           l7636 4178                           l7628 4006  
                         l7580 38C6                           l7572 380E                           l7564 36F6  
                         l7556 369E                           l7548 358C                           l7820 5A96  
                         l7812 5A42                           l7804 59F2                           l7740 585E  
                         l7732 5842                           l7724 582A                           l7716 5814  
                         l7708 580C                           l7494 31E2                           l7486 30A6  
                         l7478 2F46                           l7398 2798                           l7670 46EE  
                         l7662 4568                           l7654 4418                           l7646 4294  
                         l7638 41C0                           l7590 39BC                           l7582 38E6  
                         l7574 3842                           l7566 372A                           l7558 36BE  
                         l7822 5AA0                           l7814 5A4E                           l7806 59FE  
                         l7750 5886                           l7742 5866                           l7734 5846  
                         l7726 5832                           l7718 581A                           l7496 3216  
                         l7488 3122                           l7680 475E                           l7672 46F4  
                         l7664 4608                           l7656 44B6                           l7648 42C8  
                         l7592 3A5A                           l7584 38F2                           l7576 389A  
                         l7568 3782                           l7816 5A66                           l7808 5A1A  
                         l7760 58A6                           l7752 588E                           l7744 586E  
                         l7736 584E                           l7728 583A                           l7498 3226  
                         l7682 4762                           l7674 46F8                           l7666 463C  
                         l7658 44EC                           l7594 3A90                           l7586 3912  
                         l7578 38BA                           l7818 5A7E                           l7770 58D0  
                         l7762 58AE                           l7754 588E                           l7746 5876  
                         l7738 5856                           l7668 46A6                           l7596 3AD8  
                         l7588 3986                           l7780 591A                           l7772 58E4  
                         l7764 58B2                           l7756 5896                           l7748 587E  
                         l7692 57E6                           l7686 476A                           l7678 470C  
                         l7598 3B0C                           l7790 5976                           l7782 592E  
                         l7774 58EA                           l7766 58BA                           l7758 589E  
                         l7694 57EA                           l7688 477E                           l7792 5982  
                         l7784 5934                           l7776 58F6                           l7768 58CC  
                         l7696 57EE                           l7794 598C                           l7786 594E  
                         l7778 590E                           l7698 57F2                           l7796 5996  
                         l7788 595E                           l7798 59AE                           STR_1 0EC8  
                         STR_2 0EAD                           STR_3 0E90                           STR_4 0EC8  
                         STR_5 0EAD                           STR_6 0E90                           STR_7 0EC8  
                         STR_8 0EAD                           STR_9 0E90                           u3000 4884  
                         u3001 4880                           u3010 48F2                           u3011 48EE  
                         u3100 49D0                           u3020 490A                           u3101 49CC  
                         u3021 4904                           u3110 49EE                           u3030 490C  
                         u3111 49EA                           u4000 5712                           u3200 4B2C  
                         u3120 4A26                           u3040 4934                   _BAUD4CONbits 0EE9  
                         u4001 570E                           u3201 4B28                           u3121 4A22  
                         u3041 4930                           u4010 572C                           u3210 4B42  
                         u3130 4A6C                           u3050 4952                           u4011 5728  
                         u3211 4B3E                           u3131 4A68                           u3051 494E  
                         u4020 5774                           u4100 7036                           u3300 4C30  
                         u3220 4B58                           u3140 4AA2                           u3060 4972  
                         u4021 5770                           u4101 7032                           u3301 4C2C  
                         u3221 4B54                           u3141 4A9E                           u3061 496E  
                         u4030 57A4                           u3230 4B6C                           u3150 4AB2  
                         u3070 4980                           u4110 5CF8                           u3310 4C5E  
                         u4031 57A0                           u3231 4B68                           u3151 4AAE  
                         u3071 497C                           u4111 5CF4                           u3311 4C5A  
                         u4040 57D2                           u3240 4B86                           u3160 4ADE  
                         u3080 4990                           u4200 5E86                           u4120 5D06  
                         u3400 4EFC                           u3320 4C70                           u4041 57CE  
                         u3241 4B82                           u3161 4ADA                           u3081 498C  
                         u4201 5E82                           u4121 5D02                           u3401 4EF8  
                         u3321 4C6C                           u4050 61DE                           u3250 4BC0  
                         u3170 4AEE                           u3090 49C2                           u4130 5D62  
                         u3410 4F1C                           u3330 4C80                           u4210 7016  
                         _T2PR 0FBC                           u4051 61DA                           u3251 4BBC  
                         u3171 4AEA                           u3091 49BE                           u4131 5D5E  
                         u3411 4F18                           u3331 4C7C                           u4211 7012  
                         u4060 621C                           u3260 4BD2                           u3180 4B0A  
                         u4140 5DB8                           u3420 4F2E                           u3340 4CC0  
                         u4220 5ADE                           u3500 6C7A                           u5100 654A  
                         u4061 6218                           u3261 4BCE                           u3181 4B06  
                         u4141 5DB4                           u3421 4F2A                           u3341 4CBC  
                         u4221 5ADA                           u3501 6C76                           u5101 6546  
                         u4070 623A                           u3270 4BE2                           u3190 4B1A  
                         u4150 5E02                           u3430 4F5C                           u3350 4CD2  
                         u4230 5B36                           u3510 6C98                           u5030 6934  
                         u5110 62EE                           u4071 6236                           u3271 4BDE  
                         u3191 4B16                           u4151 5DFE                           u3431 4F58  
                         u3351 4CCE                           u4231 5B32                           u3511 6C94  
                         u5031 6930                           u5111 62EA                           u4080 625A  
                         u3280 4C02                           u4160 5E20                           u3440 4F72  
                         u3360 4CE2                           u4240 5B8E                           u2800 6AA0  
                         u3600 5FC4                           u3520 6CB4                           u5040 6956  
                         u5200 63FC                           u5120 6310                           u4081 6256  
                         u3281 4BFE                           u4161 5E1C                           u3441 4F6E  
                         u3361 4CDE                           u4241 5B8A                           u2801 6A9C  
                         u3601 5FC0                           u3521 6CB0                           u5041 6952  
                         u5201 63F8                           u5121 630C                           u4090 62AA  
                         u3290 4C14                           u4170 5E30                           u3450 4F86  
                         u3370 4D18                           u4250 5BB6                           u2730 684A  
                         u2810 6ABA                           u3610 5FD4                           u3530 5EB8  
                         u5050 69A0                           u5210 6446                           u5130 635A  
                         u4091 62A6                           u3291 4C10                           u4171 5E2C  
                         u3451 4F82                           u3371 4D14                           u4251 5BB2  
                         u2731 6846                           u2811 6AB6                           u3611 5FD0  
                         u3531 5EB4                           u5051 699C                           u5211 6442  
                         u5131 6356                           u2900 70F6                           u4180 5E3E  
                         u3460 4FA0                           u3380 4D28                           u4260 5C0E  
                         u3700 5180                           u6100 0FCA                           u2740 6864  
                         u2820 6AD8                           u3620 6014                           u3540 5EF4  
                         u5060 69B8                           u5300 6720                           u5220 645E  
                         u5140 6372                           u2901 70F2                           u4181 5E3A  
                         u3461 4F9C                           u3381 4D24                           u4261 5C0A  
                         u3701 517C                           u6101 0FC6                           u2741 6860  
                         u2821 6AD4                           u3621 6010                           u3541 5EF0  
                         u5061 69B4                           u5301 671C                           u5221 645A  
                         u5141 636E                           u2910 710C                           u3630 6F92  
                         u4190 5E78                           u3470 4FE8                           u3390 4EA2  
                         u4270 5C66                           u6110 1020                           u2750 688A  
                         u2830 6AEE                           u3550 5F0C                           u5230 6786  
                         u5150 65B2                           u5070 64C6                           u2911 7108  
                         u3631 6F8A                           u4191 5E74                           u3471 4FE4  
                         u4271 5C62                           u6111 101C                           u2751 6886  
                         u2831 6AEA                           u3551 5F08                           u5231 6782  
                         u5151 65AE                           u5071 64C2                           u2920 479E  
                         u3480 5016                           u3720 51F2                           u6200 122A  
                         u6120 103C                           u2760 68A8                           u2840 6B12  
                         u3560 5F42                           u3800 612A                           u5240 67A8  
                         u5160 65D4                           u5080 64E8                           u2921 479A  
                         u3481 5012                           u3721 51EE                           u6201 1226  
                         u6121 1038                           u2761 68A4                           u2841 6B0E  
                         u3561 5F3C                           u3801 6126                           u5241 67A4  
                         u5161 65D0                           u5081 64E4                           u2930 47B0  
                         u3490 5050                           u3730 522A                           u3650 50B2  
                         u6210 1238                           u6130 106C                           u3810 71E6  
                         u4290 70BA                           u2770 68C4                           u2850 69CA  
                         u3570 5F44                           u5250 67F2                           u5170 661E  
                         u5090 6532                           u2931 47AC                           u3491 504C  
                         u3395 4E98                           u3731 5226                           u3715 51B2  
                         u3651 50AE                           u6211 1234                           u6131 1068  
                         u3811 71E2                           u4291 70B6                           u2771 68C0  
                         u2851 69C6                           u5251 67EE                           u5171 661A  
                         u5091 652E                           u3900 55E4                           u3820 5466  
                         u2940 47C0                           u3740 52A0                           u3716 51BC  
                         u3660 50E0                           u6300 1420                           u6220 1270  
                         u2780 68EA                           u2860 69DA                           u3580 5FA4  
                         u5260 680A                           u5180 6636                           u3901 55E0  
                         u3821 5462                           u2941 47BC                           u4285 5C80  
                         u3741 529C                           u3717 51CC                           u3661 50DC  
                         u6301 141C                           u6221 126C                           u2781 68E6  
                         u2861 69D6                           u3581 5FA0                           u5261 6806  
                         u5181 6632                           u3910 5606                           u3830 5478  
                         u2950 4802                           u3750 533C                           u3670 50EE  
                         u6310 143E                           u6230 12CA                           u6070 0F3E  
                         u2790 6A86                           u2870 6A00                           u3590 5FB4  
                         u5270 669C                           u5190 63DA                           u3911 5602  
                         u3831 5474                           u2951 47FE                           u3751 5338  
                         u3671 50EA                           u6311 143A                           u6231 12C6  
                         u6071 0F3A                           u2791 6A82                           u2871 69FC  
                         u3591 5FB0                           u5271 6698                           u5191 63D6  
                         u3648 6F94                           u3920 5630                           u3840 5488  
                         u2960 4818                           u3760 53A4                           u3680 5130  
                         u6400 1608                           u6320 1482                           u6240 12D8  
                         u6160 1130                           u6080 0F70                           u2880 6A32  
                         u5280 66BE                           u3921 562C                           u3841 5484  
                         u2961 4814                           u3761 53A0                           u3681 512C  
                         u6401 1604                           u6321 147E                           u6241 12D4  
                         u6145 1082                           u6081 0F6C                           u2881 6A2E  
                         u5281 66BA                           u3930 5654                           u3850 54CC  
                         u2970 482A                           u3770 53BA                           u3690 515E  
                         u6410 1660                           u6330 14E6                           u6250 133C  
                         u6170 116A                           u6146 108C                           u6090 0FA8  
                         u2890 7066                           u5290 6708                           u3931 5650  
                         u3851 54C8                           u2971 4826                           u3771 53B6  
                         u3691 515A                           u6411 165C                           u6331 14E2  
                         u6251 1338                           u6171 1166                           u6155 10DC  
                         u6147 109C                           u6091 0FA4                           u2891 7062  
                         u5291 6704                           u3940 566A                           u3860 54DE  
                         u2980 483A                           u6500 2922                           u6420 167E  
                         u6340 151E                           u6260 138C                           u6180 11D6  
                         u6156 10E6                           u4900 6C46                           u3941 5666  
                         u3861 54DA                           u2981 4836                           u6501 291E  
                         u6421 167A                           u6341 151A                           u6261 1388  
                         u6181 11D2                           u6165 1126                           u6157 10F6  
                         u4901 6C42                           u3950 5688                           u3870 54EE  
                         u2990 4876                           u6510 296E                           u6430 198A  
                         u6350 1574                           u6270 139A                           u6190 11F2  
                         u3790 6060                           u4910 6C5E                           u3951 5684  
                         u3871 54EA                           u2991 4872                           u6511 296A  
                         u6431 1986                           u6351 1570                           u6271 1396  
                         u6191 11EE                           u3791 605C                           u4911 6C5A  
                         u4920 6CE6                           u3960 56A8                           u3880 552E  
                         u6600 2C64                           u6520 29A0                           u6360 158A  
                         u6280 13EE                           u4921 6CDE                           u3961 56A4  
                         u3881 552A                           u3785 5426                           u6601 2C60  
                         u6521 299C                           u6361 1586                           u6281 13EA  
                         u3970 56BA                           u3890 556E                           u6530 29F6  
                         u6450 1AAC                           u6370 15A4                           u6290 1404  
                         u3971 56B6                           u3891 556A                           u6531 29F2  
                         u6451 1AA8                           u6371 15A0                           u6291 1400  
                         u4940 6D04                           u3980 56E8                           u6460 1AD4  
                         u6380 15D6                           u6700 58CC                           u4941 6CFC  
                         u3981 56E4                           u6461 1AD0                           u6445 19F6  
                         u6381 15D2                           u6701 58C8                           u3990 56FE  
                         u6630 32B8                           u6550 2AB0                           u6446 1A00  
                         u6390 15FA                           u6710 590E                           u3991 56FA  
                         u6631 32B4                           u6615 3238                           u6551 2AAC  
                         u6447 1A10                           u6391 15F6                           u6711 590A  
                         u4960 6D28                           u6640 3310                           u6480 288C  
                         u4880 6BE2                           u4961 6D20                           u6641 330C  
                         u6625 327E                           u6545 2A3C                           u6481 2888  
                         u4881 6BDE                           u4938 6CE8                           u6626 3288  
                         u6546 2A46                           u6490 28A8                           u6650 3494  
                         u4890 6C04                           u6627 3298                           u6547 2A56  
                         u6491 28A4                           u6475 1CAC                           u6651 3490  
                         u4891 6C00                           u6660 3510                           u6565 2ACA  
                         u6661 350C                           u4958 6D06                           u6566 2AD4  
                         u6670 358C                           u6575 2B34                           u6567 2AE4  
                         u6671 3588                           u6807 6468                           u6727 5940  
                         u6576 2B3E                           u6680 4708                           u6585 2B8C  
                         u6577 2B4E                           u6681 4704                           u6817 6510  
                         u6737 59A2                           u4978 6D2A                           u6586 2B96  
                         u6690 475E                           u6595 2C2A                           u6587 2BA6  
                         u6691 475A                           u6907 697E                           u6827 6554  
                         u6747 5A5A                           u6596 2C34                           u6597 2C44  
                         u6917 335E                           u6837 65FC                           u6757 5A72  
                         u6927 6EEC                           u6847 6640                           u6767 5A8A  
                         u6857 66E6                           u6777 6338                           u6867 672A  
                         u6787 637C                           u6877 67D0                           u6797 6424  
                         u6887 6814                           u6897 6C28                    main@red_val 038C  
                         abs@a 0008                           _dbuf 009C                           _cp_h 0E6D  
                         _cp_l 0E69                           _dp_h 0E09                           _dp_l 0E01  
                         _main 57E6                           _prec 00D4                           _powf 0ED6  
                         fsr1h 0FE2                           fsr2h 0FDA                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           btemp 005D  
                         _stop 6BC6                    main@timings 0364     __end_of_reverse_after_read 6838  
                         prodh 0FF4                           prodl 0FF3                           start 0024  
              ___fldiv@new_exp 003C         __end_of_color_read_Red 6DE8                __end_of_HighISR 0024  
                  color_read@p 000D                   ___param_bank 0000                 turn_left_90@mL 0019  
               turn_left_90@mR 001B                          ??_abs 000A                   main@blue_val 0350  
              __end_of___fladd 4C44                          ?_main 0001                          _ADPCH 0F5F  
              __end_of___fldiv 57E6                __end_of___awdiv 68FC                __end_of___flneg 7058  
                        STR_10 0E81                          STR_11 0EC8                          STR_12 0EAD  
                        STR_13 0EBB                          STR_14 0E71                          STR_18 0E9F  
              __end_of___awmod 6B24                __end_of___flmul 506E                          ?_powf 00D8  
              __end_of___flsub 6F68                          ?_stop 0015                ___awdiv@divisor 0004  
              __end_of___lwdiv 6CD4                          i2l447 0020                          i2l493 71EE  
                        i2l496 7202                ___awdiv@counter 0006                   vfpfcnvrt@fmt 000D  
                        _TMR0H 0FD4                          _TMR0L 0FD3        __end_of_sendCharSerial4 71EC  
   __end_of_I2C_2_Master_Start 7244     __end_of_I2C_2_Master_Write 7210                          _lg2_h 0E2D  
                        _lg2_l 0E29                          _flags 00D6  __end_of_color_click_toggleLED 6D3A  
                        _errno 00D0                          _ivln2 0E1D                          _fputc 69BA  
              __end_of_ivln2_h 0E69                __end_of_ivln2_l 0E1D                   main@pred_val 03A8  
                        _two24 0E61                __end_of_scalbnf 5CE6                          _width 00D2  
                        _putch 7244                          _sqrtf 506E                          tablat 0FF5  
                        powf@i 0128                          powf@j 01A8                          powf@k 01A4  
                        powf@n 0188                          powf@r 0150                          powf@s 0158  
                        powf@t 01B0                          powf@u 017C                          powf@v 0180  
                        powf@w 0144                          powf@x 00D8                          powf@y 00DC  
                        powf@z 01B4                          ttemp5 005E                          ttemp6 0061  
                        ttemp7 0065                          status 0FD8                          wtemp8 005E  
              __end_of_sprintf 6FE6        __end_of_color_read_Blue 6ED8          _I2C_2_Master_RepStart 7226  
              ?_color_read_Red 0006                __initialization 7134                   __end_of_cp_h 0E71  
                 __end_of_cp_l 0E6D                   __end_of_dp_h 0E11                   __end_of_dp_l 0E09  
                 __end_of_main 5AB2                   __end_of_powf 3326                   __end_of_stop 6C60  
              turn_left_135@mL 0019                turn_left_135@mR 001B                  main@clear_val 0328  
              _get16bitTMR0val 71B6                         ??_main 00E9                         ??_powf 00E0  
                       ??_stop 0019                  __activetblptr 0001              decide_action@blue 0280  
                 ?_setMotorPWM 000F                         ?_fputc 0002                         _ADRESH 0F64  
                       _CCPR1H 0FAA                         _CCPR2H 0FA6                         _CCPR3H 0F25  
                       _CCPR4H 0F21               ___awdiv@dividend 0002                         ?_putch 0001  
                       ?_sqrtf 0012     __end_of_reverse_one_square 674E                         _RC0PPS 0E62  
                       _RC4REG 0EE3                         _RE2PPS 0E74                         _RD5PPS 0E6F  
                       _RC7PPS 0E69                         _RE4PPS 0E76                         _RD6PPS 0E70  
                       i2l5530 71EE                  main@green_val 033C                         _RG6PPS 0E88  
                       i2l5532 71FE                         i2l5840 0018                         i2l5842 001A  
                       i2l5838 000A               ??_turn_right_135 001D                  vfpfcnvrt@done 0010  
                    ??_HighISR 0002       __end_of_color_click_init 6F22                         _RX4PPS 0E15  
                       _TX4REG 0EE4               __end_of___xxtofl 5E9A                   ?_resetTimer0 0001  
                 _turn_left_90 648C                  ??_Timer0_init 0002                  main@pblue_val 03A4  
                 _CCPTMRS0bits 0FAD                   vfprintf@cfmt 001A                         ___flge 61B0  
                    ??___fladd 000A                         ___wmul 710E                      ??___fldiv 0033  
                    ??___awdiv 0006                      ??___flneg 0006                      ??___awmod 0006  
                    ??___flmul 001A                      ??___flsub 004C                      ??___lwdiv 000C  
                       clear_0 713A               ___awdiv@quotient 0008                ___awmod@divisor 0004  
                       isa$std 0001                ___awmod@counter 0006                         fputc@c 0002  
                    ??_scalbnf 0031                   __mediumconst 0000                         powf@s2 0190  
                       powf@t1 018C                         powf@t2 011C                         tblptrh 0FF7  
                       tblptrl 0FF6                         powf@y1 012C                         tblptru 0FF8  
                       powf@ax 0178                         powf@is 0198                         powf@hx 0168  
                       powf@hy 0184                         powf@ix 01AC                         powf@iy 0194  
             ?_sendCharSerial4 0001                         powf@sn 0164                         putch@c 0001  
             __end_of_vfprintf 7020                         stop@mL 0015                         stop@mR 0017  
                       sqrtf@i 001F                         sqrtf@m 002B                         sqrtf@q 0023  
                       sqrtf@r 002F                         sqrtf@s 001B                         sqrtf@t 0027  
            ??_initDCmotorsPWM 0004                         sqrtf@x 0012                      ??_sprintf 0022  
                   ___flge@ff1 004C                     ___flge@ff2 0050                   ___xxtofl@arg 0017  
                 ___xxtofl@exp 0016                   ___xxtofl@val 000D                     __accesstop 0060  
      __end_of__initialization 7146       __end_of_color_read_Clear 6E88                     ___flneg@f1 0002  
     __end_of_color_read_Green 6E38         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001  
             ?_color_read_Blue 0006                _Interrupts_init 7210                 __pcstackCOMRAM 0001  
      __end_of_get16bitTMR0val 71D4                  __end_of_lg2_h 0E31                  __end_of_lg2_l 0E2D  
     get16bitTMR0val@timer_val 0006                  __end_of_ivln2 0E21                  __end_of_fputc 6A74  
                __end_of_two24 0E65                  __end_of_putch 7246                  __end_of_sqrtf 544C  
                   __end_of_L1 0E61                     __end_of_L2 0E5D                     __end_of_L3 0E59  
                   __end_of_L4 0E55                     __end_of_L5 0E51                     __end_of_L6 0E4D  
                   __end_of_P1 0E49                     __end_of_P2 0E45                     __end_of_P3 0E41  
                   __end_of_P4 0E3D                     __end_of_P5 0E39            __end_of_Timer0_init 7198  
                   __end_of_bp 0E19                     __end_of_cp 0E25                turn_right_90@mL 0019  
              turn_right_90@mR 001B                        ??_fputc 0005                        ??_putch 0002  
                      ??_sqrtf 0016                     __pbssBANK0 0060              _color_writetoaddr 7158  
         reverse_one_square@mL 0019           reverse_one_square@mR 001B                   _T2CLKCONbits 0FBF  
           decide_action@green 027C                        ?___flge 004C             decide_action@red_r 0284  
           ?_color_writetoaddr 0004                        ?___wmul 0002           decide_action@green_r 0288  
           _reverse_after_read 674E           decide_action@red_val 0214         decide_action@clear_val 0200  
          ??_color_writetoaddr 0005                      ?___xxtofl 000D                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5            ?_reverse_after_read 0019           reverse_after_read@mL 0019  
         reverse_after_read@mR 001B                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
                   _color_read 6D3A        __end_of_Interrupts_init 721C         color_writetoaddr@value 0004  
             ??_color_read_Red 0008                  _turn_left_135 6578         decide_action@green_val 0228  
                      _HighISR 0008                 main@pclear_val 03A2      __end_of_color_writetoaddr 7178  
                    _ADREFbits 0F58             _I2C_2_Master_Start 723A                     _initUSART4 7198  
           _I2C_2_Master_Write 7204                 decide_action@i 027B                        __Hparam 0000  
         ??_reverse_after_read 001D                        __Lparam 0000              color_read_Red@tmp 000B  
                  _Timer0_init 7178         decide_action@pblue_val 0273        sendStringSerial4@string 0003  
                _turn_right_90 62B4               ?_get16bitTMR0val 0002                        ___fladd 4784  
                      ___fldiv 544C                        ___awdiv 6838                        ___flneg 7020  
                      ___awmod 6A74                        ___flmul 4C44                        ___flsub 6F22  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 6C60            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0017                   __psmallconst 0E00                        __pcinit 7134  
               main@pgreen_val 03A6                        __ramtop 0E00                        __ptext0 57E6  
                      __ptext1 62B4                        __ptext2 63A0                        __ptext3 648C  
                      __ptext4 6578                        __ptext5 6664                        __ptext6 674E  
                      __ptext7 6BC6                        __ptext8 721C                        __ptext9 7198  
                    _T2CONbits 0FBD                        _ivln2_h 0E65                        _ivln2_l 0E19  
                   ??___xxtofl 0011                        _scalbnf 5AB2               ___awmod@dividend 0002  
                    _T2HLTbits 0FBE                  _RxBufWriteCnt 005C                        main@pmL 03CB  
                      main@pmR 03CD                        _sprintf 6FAA                        main@lum 03AA  
         ??_I2C_2_Master_Start 0003           ??_I2C_2_Master_Write 0003           end_of_initialization 7146  
               ?_turn_left_135 0019          _color_click_toggleLED 6CD4                        fputc@fp 0004  
            ?_color_click_init 0001             ??_color_click_init 0006                  _decide_action 3326  
               ?_turn_right_90 0019                        powf@p_h 01A0                        powf@p_l 016C  
                      powf@s_h 0174                        powf@t_h 0170                        powf@s_l 0130  
                      powf@t_l 0134                        powf@z_h 0120                        powf@z_l 0124  
            __end_of_vfpfcnvrt 6044             _reverse_one_square 6664                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0012                     ??_vfprintf 001A                        sqrtf@ix 0033  
              _initDCmotorsPWM 6B24                      _PORTBbits 0F8A            ?_reverse_one_square 0019  
           setMotorPWM@negDuty 0014                    ___fladd@grs 0011                  ___xxtofl@sign 0015  
                    _TRISAbits 0F81             setMotorPWM@posDuty 0013                      _TRISCbits 0F83  
                    _TRISDbits 0F84                      _TRISEbits 0F85                      _TRISFbits 0F86  
                    _TRISGbits 0F87                      _TRISHbits 0F88                    ___fldiv@grs 003E  
                  ___fldiv@rem 0037               fullSpeedAhead@mL 0015               fullSpeedAhead@mR 0017  
                  ?_color_read 000D       color_writetoaddr@address 0005        ??_I2C_2_Master_RepStart 0003  
             ?_Interrupts_init 0001                    ___flmul@grs 001F           ??_reverse_one_square 001D  
                  _CCP1CONbits 0FAB              ?_color_read_Clear 0006                   _EUSART4RXbuf 00BC  
                 _EUSART4TXbuf 0060                    _CCP2CONbits 0FA7              ?_color_read_Green 0006  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0002                 ?_decide_action 0001                     main@motorL 03B9  
                   main@motorR 03C2             ??_color_read_Clear 0008             ??_color_read_Green 0008  
               __end_of___flge 62B4                 _fullSpeedAhead 68FC                    vfpfcnvrt@ap 000E  
                  vfpfcnvrt@cp 0011                    vfpfcnvrt@fp 000C                 __end_of___wmul 7134  
          color_read_Clear@tmp 000B            start_initialization 7134                    __end_of_lg2 0E35  
                  __end_of_abs 708C                    __end_of_ovt 0E29                  _TxBufWriteCnt 005B  
              ??_turn_left_135 001D         ?_color_click_toggleLED 0001               decide_action@red 02AC  
              ??_turn_right_90 001D            color_read_Green@tmp 000B        __end_of_initDCmotorsPWM 6BC6  
                  vfprintf@fmt 0018         __end_of_fullSpeedAhead 69BA                       ??___flge 0054  
             turn_right_135@mL 0019               turn_right_135@mR 001B                       ??___wmul 0006  
                    ___fladd@a 0006                      ___fladd@b 0002                      ___fldiv@a 002F  
                    ___fldiv@b 002B                      ___flmul@a 0016                      ___flmul@b 0012  
                  __pbssCOMRAM 005A                      ___flsub@a 0048                      ___flsub@b 0044  
                __pcstackBANK0 00D8                  __pcstackBANK1 0100                  __pcstackBANK2 0200  
                __pcstackBANK3 0300                       ?_HighISR 0001                ??_decide_action 0058  
            i2_sendCharSerial4 71EC                      _main$3106 03A0             ?i2_sendCharSerial4 0001  
             ___lwdiv@dividend 0008                   ?_Timer0_init 0001            decide_action@action 0270  
              ?_fullSpeedAhead 0015                      __pintcode 0008            decide_action@blue_r 028C  
                     ?___fladd 0002                       ?___fldiv 002B                       ?___awdiv 0002  
                     ?___flneg 0002                       ?___awmod 0002                       ?___flmul 0012  
                     ?___flsub 0044                       ?___lwdiv 0008            ??i2_sendCharSerial4 0001  
        decide_action@blue_val 023C           I2C_2_Master_Read@ack 0004           I2C_2_Master_Read@tmp 0005  
                  __smallconst 0E00              _I2C_2_Master_Idle 70E6              _I2C_2_Master_Init 70BC  
                     ?_scalbnf 002B              _I2C_2_Master_Read 6F68              _I2C_2_Master_Stop 7230  
        decide_action@rgb_comp 0250                   _RxBufReadCnt 00D7             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0011  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000C       initDCmotorsPWM@PWMperiod 0002  
                     ?_sprintf 001B          decide_action@pred_val 0271      __end_ofi2_sendCharSerial4 7204  
                    _powf$3110 019C                      _powf$3111 0138                      _powf$3120 0114  
                    _powf$3112 0100                      _powf$3121 0118                      _powf$3113 0104  
                    _powf$3114 0160                      _powf$3107 0148                      _powf$3115 013C  
                    _powf$3108 015C                      _powf$3116 0140                      _powf$3109 014C  
                    _powf$3117 0108                      _powf$3118 010C                      _powf$3119 0110  
            _sendStringSerial4 708C            ??_I2C_2_Master_Idle 0002            ??_I2C_2_Master_Init 0002  
          ??_I2C_2_Master_Read 0003                 ___wmul@product 0006                       _LATAbits 0F79  
                ??_resetTimer0 0002            ??_I2C_2_Master_Stop 0003                       _LATCbits 0F7B  
                     _LATEbits 0F7D                       _LATGbits 0F7F                       _LATHbits 0F80  
                ?_turn_left_90 0019                       _PIE0bits 0E29                       _PIE2bits 0E2B  
           ?_sendStringSerial4 0003                       _PIE4bits 0E2D                       i2u532_40 71FE  
                     i2u532_41 71FA                       i2u535_40 0018                       i2u535_41 0014  
                     _PIR4bits 0E37               ?_initDCmotorsPWM 0002              ??_sendCharSerial4 0002  
                     _SSP2CON2 0EDA            ??_sendStringSerial4 0005                       _SSP2STAT 0ED8  
                   powf@yisint 0154                      _vfpfcnvrt 5E9A                     _ADCON0bits 0F60  
    __end_of_I2C_2_Master_Idle 710E      __end_of_I2C_2_Master_Init 70E6      __end_of_I2C_2_Master_Read 6FAA  
            ___wmul@multiplier 0002      __end_of_I2C_2_Master_Stop 723A                   setMotorPWM@m 000F  
  I2C_2_Master_Write@data_byte 0003          main@actions_completed 03AE              ??_color_read_Blue 0008  
                 _TxBufReadCnt 005A                     vfpfcnvrt@c 0016                   ??_color_read 000F  
    __end_of_sendStringSerial4 70BC  __end_of_I2C_2_Master_RepStart 7230             color_read_Blue@tmp 000B  
               ??_turn_left_90 001D            __end_of_setMotorPWM 61B0                   ??_initUSART4 0002  
                     __Hrparam 0000                     vfprintf@ap 0019                       __Lrparam 0000  
                   vfprintf@fp 0017                   __Lsmallconst 0E00                 _turn_right_135 63A0  
          __end_of_resetTimer0 7226                     ?_vfpfcnvrt 000C             __end_of_color_read 6D98  
                   _ANSELAbits 0E92                     _ANSELDbits 0EA7        decide_action@pgreen_val 0275  
                   _ANSELFbits 0EB4             _decide_action$3100 0294             _decide_action$3101 0298  
           _decide_action$3102 029C             _decide_action$3103 02A0             _decide_action$3104 02A4  
           _decide_action$3105 02A8             _decide_action$3098 0277             _decide_action$3099 0290  
                   sprintf@fmt 001D                       ___xxtofl 5CE6                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6        ??_color_click_toggleLED 0002                ___lwdiv@divisor 000A  
           __end_of_initUSART4 71B6                ___lwdiv@counter 000E                       __ptext10 6B24  
                     __ptext11 71B6                       __ptext20 69BA                       __ptext12 68FC  
                     __ptext21 7244                       __ptext13 6044                       __ptext30 4C44  
                     __ptext22 7058                       __ptext14 710E                       __ptext31 5CE6  
                     __ptext23 6A74                       __ptext15 6C60                       __ptext40 6E38  
                     __ptext32 6F22                       __ptext24 6838                       __ptext16 3326  
                     __ptext41 6E88                       __ptext33 4784                       __ptext25 708C  
                     __ptext17 6FAA                       __ptext50 70E6                       __ptext42 7226  
                     __ptext34 7020                       __ptext26 71D4                       __ptext18 6FE6  
                     __ptext51 70BC                       __ptext43 6F68                       __ptext35 61B0  
                     __ptext27 0ED6                       __ptext19 5E9A                       __ptext52 7178  
                     __ptext44 6CD4                       __ptext36 544C                       __ptext28 506E  
                     __ptext53 7210                       __ptext45 6ED8                       __ptext37 6D3A  
                     __ptext29 5AB2                       __ptext46 7158                       __ptext38 6D98  
                     __ptext55 71EC                       __ptext47 7204                       __ptext39 6DE8  
                     __ptext48 7230                       __ptext49 723A                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA         __end_of_turn_right_135 648C                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       main@RGBC 03B0                       int$flags 005D  
                     _vfprintf 6FE6                     _INTCONbits 0FF2              main@going_forward 03B8  
                  _setMotorPWM 6044              ??_get16bitTMR0val 0004                       scalbnf@n 002F  
                     scalbnf@u 0035                       scalbnf@x 002B                       scalbnf@y 0039  
                     intlevel2 0000          __end_of_turn_left_135 6664                      sprintf@ap 0022  
             ??_fullSpeedAhead 0019                    _resetTimer0 721C                ?_turn_right_135 0019  
        __end_of_turn_right_90 63A0                    ??_vfpfcnvrt 000F               _color_click_init 6ED8  
                     sprintf@f 0023                       sprintf@s 001B           __end_of_turn_left_90 6578  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C              main@measured_time 03AC  
                ___fladd@signs 000E                     _TX4STAbits 0EE8                _sendCharSerial4 71D4  
                 ___fladd@aexp 000F                   ___fladd@bexp 0010    i2sendCharSerial4@charToSend 0001  
        __end_of_decide_action 4784  
