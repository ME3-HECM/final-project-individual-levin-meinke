

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Mar 14 17:31:00 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    76   000000                     
    77                           ; Generated 21/07/2023 GMT
    78                           ; 
    79                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F67K40 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111   000000                     
   112                           	psect	smallconst
   113   000E00                     __psmallconst:
   114                           	callstack 0
   115   000E00  00                 	db	0
   116   000E01                     _dp_l:
   117                           	callstack 0
   118   000E01  0000               	dw	0
   119   000E03  0000               	dw	0
   120   000E05  CFDC               	dw	53212
   121   000E07  35D1               	dw	13777
   122   000E09                     __end_of_dp_l:
   123                           	callstack 0
   124   000E09                     _dp_h:
   125                           	callstack 0
   126   000E09  0000               	dw	0
   127   000E0B  0000               	dw	0
   128   000E0D  C000               	dw	49152
   129   000E0F  3F15               	dw	16149
   130   000E11                     __end_of_dp_h:
   131                           	callstack 0
   132   000E11                     _bp:
   133                           	callstack 0
   134   000E11  0000               	dw	0
   135   000E13  3F80               	dw	16256
   136   000E15  0000               	dw	0
   137   000E17  3FC0               	dw	16320
   138   000E19                     __end_of_bp:
   139                           	callstack 0
   140   000E19  A570               	dw	42352
   141   000E1B  36EC               	dw	14060
   142   000E1D                     __end_of_ivln2_l:
   143                           	callstack 0
   144   000E1D  AA3B               	dw	43579
   145   000E1F  3FB8               	dw	16312
   146   000E21                     __end_of_ivln2:
   147                           	callstack 0
   148   000E21  384F               	dw	14415
   149   000E23  3F76               	dw	16246
   150   000E25                     __end_of_cp:
   151                           	callstack 0
   152   000E25  AA3C               	dw	43580
   153   000E27  3338               	dw	13112
   154   000E29                     __end_of_ovt:
   155                           	callstack 0
   156   000E29  BE8C               	dw	48780
   157   000E2B  35BF               	dw	13759
   158   000E2D                     __end_of_lg2_l:
   159                           	callstack 0
   160   000E2D  7200               	dw	29184
   161   000E2F  3F31               	dw	16177
   162   000E31                     __end_of_lg2_h:
   163                           	callstack 0
   164   000E31  7218               	dw	29208
   165   000E33  3F31               	dw	16177
   166   000E35                     __end_of_lg2:
   167                           	callstack 0
   168   000E35  BB4C               	dw	47948
   169   000E37  3331               	dw	13105
   170   000E39                     __end_of_P5:
   171                           	callstack 0
   172   000E39  EA0E               	dw	59918
   173   000E3B  B5DD               	dw	46557
   174   000E3D                     __end_of_P4:
   175                           	callstack 0
   176   000E3D  B355               	dw	45909
   177   000E3F  388A               	dw	14474
   178   000E41                     __end_of_P3:
   179                           	callstack 0
   180   000E41  0B61               	dw	2913
   181   000E43  BB36               	dw	47926
   182   000E45                     __end_of_P2:
   183                           	callstack 0
   184   000E45  AAAB               	dw	43691
   185   000E47  3E2A               	dw	15914
   186   000E49                     __end_of_P1:
   187                           	callstack 0
   188   000E49  F142               	dw	61762
   189   000E4B  3E53               	dw	15955
   190   000E4D                     __end_of_L6:
   191                           	callstack 0
   192   000E4D  3255               	dw	12885
   193   000E4F  3E6C               	dw	15980
   194   000E51                     __end_of_L5:
   195                           	callstack 0
   196   000E51  A305               	dw	41733
   197   000E53  3E8B               	dw	16011
   198   000E55                     __end_of_L4:
   199                           	callstack 0
   200   000E55  AAAB               	dw	43691
   201   000E57  3EAA               	dw	16042
   202   000E59                     __end_of_L3:
   203                           	callstack 0
   204   000E59  6DB7               	dw	28087
   205   000E5B  3EDB               	dw	16091
   206   000E5D                     __end_of_L2:
   207                           	callstack 0
   208   000E5D  999A               	dw	39322
   209   000E5F  3F19               	dw	16153
   210   000E61                     __end_of_L1:
   211                           	callstack 0
   212   000E61  0000               	dw	0
   213   000E63  4B80               	dw	19328
   214   000E65                     __end_of_two24:
   215                           	callstack 0
   216   000E65  AA00               	dw	43520
   217   000E67  3FB8               	dw	16312
   218   000E69                     __end_of_ivln2_h:
   219                           	callstack 0
   220   000E69  23C6               	dw	9158
   221   000E6B  B8F6               	dw	47350
   222   000E6D                     __end_of_cp_l:
   223                           	callstack 0
   224   000E6D  4000               	dw	16384
   225   000E6F  3F76               	dw	16246
   226   000E71                     __end_of_cp_h:
   227                           	callstack 0
   228   000000                     _TX4REG	set	3812
   229   000000                     _RC4STAbits	set	3815
   230   000000                     _SP4BRGH	set	3814
   231   000000                     _TRISFbits	set	3974
   232   000000                     _LATHbits	set	3968
   233   000000                     _TRISAbits	set	3969
   234   000000                     _TRISGbits	set	3975
   235   000000                     _SSP2CON2bits	set	3802
   236   000000                     _RX4PPS	set	3605
   237   000000                     _SSP2CLKPPS	set	3612
   238   000000                     _SSP2DATPPS	set	3613
   239   000000                     _ANSELDbits	set	3751
   240   000000                     _SSP2ADD	set	3798
   241   000000                     _SSP2CON1bits	set	3801
   242   000000                     _LATAbits	set	3961
   243   000000                     _LATGbits	set	3967
   244   000000                     _LATCbits	set	3963
   245   000000                     _LATEbits	set	3965
   246   000000                     _PORTBbits	set	3978
   247   000000                     _TRISHbits	set	3976
   248   000000                     _T2PR	set	4028
   249   000000                     _T2CONbits	set	4029
   250   000000                     _CCPR2H	set	4006
   251   000000                     _CCPR1H	set	4010
   252   000000                     _TRISCbits	set	3971
   253   000000                     _TRISDbits	set	3972
   254   000000                     _TRISEbits	set	3973
   255   000000                     _RC4REG	set	3811
   256   000000                     _SP4BRGL	set	3813
   257   000000                     _TX4STAbits	set	3816
   258   000000                     _BAUD4CONbits	set	3817
   259   000000                     _SSP2CON2	set	3802
   260   000000                     _CCPR4H	set	3873
   261   000000                     _CCPR3H	set	3877
   262   000000                     _SSP2STAT	set	3800
   263   000000                     _ANSELFbits	set	3764
   264   000000                     _SSP2BUF	set	3797
   265   000000                     _PIE0bits	set	3625
   266   000000                     _PIE2bits	set	3627
   267   000000                     _RC7PPS	set	3689
   268   000000                     _RD5PPS	set	3695
   269   000000                     _RE2PPS	set	3700
   270   000000                     _RD6PPS	set	3696
   271   000000                     _RE4PPS	set	3702
   272   000000                     _RG6PPS	set	3720
   273   000000                     _TMR0L	set	4051
   274   000000                     _TMR0H	set	4052
   275   000000                     _T0CON0bits	set	4053
   276   000000                     _T0CON1bits	set	4054
   277   000000                     _T2CLKCONbits	set	4031
   278   000000                     _T2HLTbits	set	4030
   279   000000                     _CCP1CONbits	set	4011
   280   000000                     _CCPTMRS0bits	set	4013
   281   000000                     _CCP2CONbits	set	4007
   282   000000                     _ADREFbits	set	3928
   283   000000                     _CCP3CONbits	set	3878
   284   000000                     _CCP4CONbits	set	3874
   285   000000                     _INTCONbits	set	4082
   286   000000                     _PIE4bits	set	3629
   287   000000                     _PIR4bits	set	3639
   288   000000                     _RC0PPS	set	3682
   289   000000                     _ADPCH	set	3935
   290   000000                     _ADRESH	set	3940
   291   000000                     _ADCON0bits	set	3936
   292   000E71                     STR_1:
   293                           
   294                           ; BSR set to: 14
   295   000E71  61                 	db	97	;'a'
   296   000E72  63                 	db	99	;'c'
   297   000E73  74                 	db	116	;'t'
   298   000E74  69                 	db	105	;'i'
   299   000E75  6F                 	db	111	;'o'
   300   000E76  6E                 	db	110	;'n'
   301   000E77  20                 	db	32
   302   000E78  3D                 	db	61	;'='
   303   000E79  20                 	db	32
   304   000E7A  25                 	db	37
   305   000E7B  64                 	db	100	;'d'
   306   000E7C  20                 	db	32
   307   000E7D  0D                 	db	13
   308   000E7E  0A                 	db	10
   309   000E7F  00                 	db	0
   310   000E80  00                 	db	0	; dummy byte at the end
   311   000000                     
   312                           ; #config settings
   313                           
   314                           	psect	cinit
   315   0075A4                     __pcinit:
   316                           	callstack 0
   317   0075A4                     start_initialization:
   318                           	callstack 0
   319   0075A4                     __initialization:
   320                           	callstack 0
   321                           
   322                           ; Clear objects allocated to BANK0 (122 bytes)
   323   0075A4  EE00  F060         	lfsr	0,__pbssBANK0
   324   0075A8  0E7A               	movlw	122
   325   0075AA                     clear_0:
   326   0075AA  6AEE               	clrf	postinc0,c
   327   0075AC  06E8               	decf	wreg,f,c
   328   0075AE  E1FD               	bnz	clear_0
   329                           
   330                           ; Clear objects allocated to COMRAM (1 bytes)
   331   0075B0  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   332   0075B2                     end_of_initialization:
   333                           	callstack 0
   334   0075B2                     __end_of__initialization:
   335                           	callstack 0
   336   0075B2  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   337   0075B4  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   338   0075B6  0100               	movlb	0
   339   0075B8  EF7E  F022         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssCOMRAM
   342   00005D                     __pbssCOMRAM:
   343                           	callstack 0
   344   00005D                     _TxBufWriteCnt:
   345                           	callstack 0
   346   00005D                     	ds	1
   347                           
   348                           	psect	bssBANK0
   349   000060                     __pbssBANK0:
   350                           	callstack 0
   351   000060                     _EUSART4TXbuf:
   352                           	callstack 0
   353   000060                     	ds	60
   354   00009C                     _dbuf:
   355                           	callstack 0
   356   00009C                     	ds	32
   357   0000BC                     _EUSART4RXbuf:
   358                           	callstack 0
   359   0000BC                     	ds	20
   360   0000D0                     _errno:
   361                           	callstack 0
   362   0000D0                     	ds	2
   363   0000D2                     _width:
   364                           	callstack 0
   365   0000D2                     	ds	2
   366   0000D4                     _prec:
   367                           	callstack 0
   368   0000D4                     	ds	2
   369   0000D6                     _flags:
   370                           	callstack 0
   371   0000D6                     	ds	1
   372   0000D7                     _TxBufReadCnt:
   373                           	callstack 0
   374   0000D7                     	ds	1
   375   0000D8                     _RxBufReadCnt:
   376                           	callstack 0
   377   0000D8                     	ds	1
   378   0000D9                     _RxBufWriteCnt:
   379                           	callstack 0
   380   0000D9                     	ds	1
   381                           
   382                           	psect	cstackBANK3
   383   000300                     __pcstackBANK3:
   384                           	callstack 0
   385   000300                     main@red_val:
   386                           	callstack 0
   387                           
   388                           ; 20 bytes @ 0x0
   389   000300                     	ds	20
   390   000314                     main@green_val:
   391                           	callstack 0
   392                           
   393                           ; 20 bytes @ 0x14
   394   000314                     	ds	20
   395   000328                     main@blue_val:
   396                           	callstack 0
   397                           
   398                           ; 20 bytes @ 0x28
   399   000328                     	ds	20
   400   00033C                     main@actions:
   401                           	callstack 0
   402                           
   403                           ; 40 bytes @ 0x3C
   404   00033C                     	ds	40
   405   000364                     main@clear_val:
   406                           	callstack 0
   407                           
   408                           ; 20 bytes @ 0x64
   409   000364                     	ds	20
   410   000378                     main@timings:
   411                           	callstack 0
   412                           
   413                           ; 40 bytes @ 0x78
   414   000378                     	ds	40
   415   0003A0                     main@lum_threshold:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0xA0
   419   0003A0                     	ds	2
   420   0003A2                     main@redm:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0xA2
   424   0003A2                     	ds	2
   425   0003A4                     main@greenm:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0xA4
   429   0003A4                     	ds	2
   430   0003A6                     main@bluem:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0xA6
   434   0003A6                     	ds	2
   435   0003A8                     main@pclear_val:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xA8
   439   0003A8                     	ds	2
   440   0003AA                     main@measured_time:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0xAA
   444   0003AA                     	ds	2
   445   0003AC                     main@lum:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0xAC
   449   0003AC                     	ds	2
   450   0003AE                     main@going_forward:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0xAE
   454   0003AE                     	ds	1
   455   0003AF                     main@i:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0xAF
   459   0003AF                     	ds	1
   460   0003B0                     main@actions_completed:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xB0
   464   0003B0                     	ds	2
   465   0003B2                     main@action_to_do:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0xB2
   469   0003B2                     	ds	2
   470   0003B4                     main@motorL:
   471                           	callstack 0
   472                           
   473                           ; 9 bytes @ 0xB4
   474   0003B4                     	ds	9
   475   0003BD                     main@motorR:
   476                           	callstack 0
   477                           
   478                           ; 9 bytes @ 0xBD
   479   0003BD                     	ds	9
   480   0003C6                     main@pmL:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xC6
   484   0003C6                     	ds	2
   485   0003C8                     main@pmR:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0xC8
   489   0003C8                     	ds	2
   490                           
   491                           	psect	cstackBANK2
   492   000200                     __pcstackBANK2:
   493                           	callstack 0
   494   000200                     decide_action@clear_val:
   495                           	callstack 0
   496                           
   497                           ; 20 bytes @ 0x0
   498   000200                     	ds	20
   499   000214                     decide_action@red_val:
   500                           	callstack 0
   501                           
   502                           ; 20 bytes @ 0x14
   503   000214                     	ds	20
   504   000228                     decide_action@green_val:
   505                           	callstack 0
   506                           
   507                           ; 20 bytes @ 0x28
   508   000228                     	ds	20
   509   00023C                     decide_action@blue_val:
   510                           	callstack 0
   511                           
   512                           ; 20 bytes @ 0x3C
   513   00023C                     	ds	20
   514   000250                     decide_action@pred_val:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x50
   518   000250                     	ds	2
   519   000252                     decide_action@pblue_val:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x52
   523   000252                     	ds	2
   524   000254                     decide_action@pgreen_val:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x54
   528   000254                     	ds	2
   529   000256                     _decide_action$3065:
   530                           	callstack 0
   531                           
   532                           ; 4 bytes @ 0x56
   533   000256                     	ds	4
   534   00025A                     decide_action@rgb_comp:
   535                           	callstack 0
   536                           
   537                           ; 32 bytes @ 0x5A
   538   00025A                     	ds	32
   539   00027A                     decide_action@action:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x7A
   543   00027A                     	ds	1
   544   00027B                     decide_action@total:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x7B
   548   00027B                     	ds	4
   549   00027F                     decide_action@i:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x7F
   553   00027F                     	ds	1
   554   000280                     decide_action@red:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0x80
   558   000280                     	ds	4
   559   000284                     decide_action@green:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x84
   563   000284                     	ds	4
   564   000288                     decide_action@blue:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x88
   568   000288                     	ds	4
   569   00028C                     decide_action@red_r:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0x8C
   573   00028C                     	ds	4
   574   000290                     decide_action@green_r:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x90
   578   000290                     	ds	4
   579   000294                     decide_action@blue_r:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x94
   583   000294                     	ds	4
   584   000298                     _decide_action$3066:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x98
   588   000298                     	ds	4
   589   00029C                     _decide_action$3067:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x9C
   593   00029C                     	ds	4
   594   0002A0                     _decide_action$3068:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0xA0
   598   0002A0                     	ds	4
   599   0002A4                     _decide_action$3069:
   600                           	callstack 0
   601                           
   602                           ; 4 bytes @ 0xA4
   603   0002A4                     	ds	4
   604   0002A8                     _decide_action$3070:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0xA8
   608   0002A8                     	ds	4
   609   0002AC                     _decide_action$3071:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0xAC
   613   0002AC                     	ds	4
   614   0002B0                     _decide_action$3072:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0xB0
   618   0002B0                     	ds	4
   619                           
   620                           	psect	cstackBANK1
   621   000100                     __pcstackBANK1:
   622                           	callstack 0
   623   000100                     _powf$3078:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x0
   627   000100                     	ds	4
   628   000104                     _powf$3079:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x4
   632   000104                     	ds	4
   633   000108                     _powf$3083:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x8
   637   000108                     	ds	4
   638   00010C                     _powf$3084:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0xC
   642   00010C                     	ds	4
   643   000110                     _powf$3085:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x10
   647   000110                     	ds	4
   648   000114                     _powf$3086:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x14
   652   000114                     	ds	4
   653   000118                     _powf$3087:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x18
   657   000118                     	ds	4
   658   00011C                     powf@t2:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x1C
   662   00011C                     	ds	4
   663   000120                     powf@z_h:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x20
   667   000120                     	ds	4
   668   000124                     powf@z_l:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0x24
   672   000124                     	ds	4
   673   000128                     powf@i:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0x28
   677   000128                     	ds	4
   678   00012C                     powf@y1:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x2C
   682   00012C                     	ds	4
   683   000130                     powf@s_l:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x30
   687   000130                     	ds	4
   688   000134                     powf@t_l:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x34
   692   000134                     	ds	4
   693   000138                     _powf$3077:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x38
   697   000138                     	ds	4
   698   00013C                     _powf$3081:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x3C
   702   00013C                     	ds	4
   703   000140                     _powf$3082:
   704                           	callstack 0
   705                           
   706                           ; 4 bytes @ 0x40
   707   000140                     	ds	4
   708   000144                     powf@w:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x44
   712   000144                     	ds	4
   713   000148                     _powf$3073:
   714                           	callstack 0
   715                           
   716                           ; 4 bytes @ 0x48
   717   000148                     	ds	4
   718   00014C                     _powf$3075:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x4C
   722   00014C                     	ds	4
   723   000150                     powf@r:
   724                           	callstack 0
   725                           
   726                           ; 4 bytes @ 0x50
   727   000150                     	ds	4
   728   000154                     powf@yisint:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x54
   732   000154                     	ds	4
   733   000158                     powf@s:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x58
   737   000158                     	ds	4
   738   00015C                     _powf$3074:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x5C
   742   00015C                     	ds	4
   743   000160                     _powf$3080:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0x60
   747   000160                     	ds	4
   748   000164                     powf@sn:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x64
   752   000164                     	ds	4
   753   000168                     powf@hx:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x68
   757   000168                     	ds	4
   758   00016C                     powf@p_l:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x6C
   762   00016C                     	ds	4
   763   000170                     powf@t_h:
   764                           	callstack 0
   765                           
   766                           ; 4 bytes @ 0x70
   767   000170                     	ds	4
   768   000174                     powf@s_h:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x74
   772   000174                     	ds	4
   773   000178                     powf@ax:
   774                           	callstack 0
   775                           
   776                           ; 4 bytes @ 0x78
   777   000178                     	ds	4
   778   00017C                     powf@u:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x7C
   782   00017C                     	ds	4
   783   000180                     powf@v:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x80
   787   000180                     	ds	4
   788   000184                     powf@hy:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x84
   792   000184                     	ds	4
   793   000188                     powf@n:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x88
   797   000188                     	ds	4
   798   00018C                     powf@t1:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x8C
   802   00018C                     	ds	4
   803   000190                     powf@s2:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x90
   807   000190                     	ds	4
   808   000194                     powf@iy:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x94
   812   000194                     	ds	4
   813   000198                     powf@is:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x98
   817   000198                     	ds	4
   818   00019C                     _powf$3076:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x9C
   822   00019C                     	ds	4
   823   0001A0                     powf@p_h:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0xA0
   827   0001A0                     	ds	4
   828   0001A4                     powf@k:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0xA4
   832   0001A4                     	ds	4
   833   0001A8                     powf@j:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0xA8
   837   0001A8                     	ds	4
   838   0001AC                     powf@ix:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0xAC
   842   0001AC                     	ds	4
   843   0001B0                     powf@t:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0xB0
   847   0001B0                     	ds	4
   848   0001B4                     powf@z:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0xB4
   852   0001B4                     	ds	4
   853                           
   854                           	psect	cstackBANK0
   855   0000DA                     __pcstackBANK0:
   856                           	callstack 0
   857   0000DA                     ?_powf:
   858                           	callstack 0
   859   0000DA                     powf@x:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x0
   863   0000DA                     	ds	4
   864   0000DE                     powf@y:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x4
   868   0000DE                     	ds	4
   869   0000E2                     ??_powf:
   870                           
   871                           ; 1 bytes @ 0x8
   872   0000E2                     	ds	9
   873   0000EB                     decide_action@red_unsigned:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x11
   877   0000EB                     	ds	2
   878   0000ED                     decide_action@green_unsigned:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x13
   882   0000ED                     	ds	2
   883   0000EF                     decide_action@blue_unsigned:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x15
   887   0000EF                     	ds	2
   888                           
   889                           	psect	cstackCOMRAM
   890   000001                     __pcstackCOMRAM:
   891                           	callstack 0
   892   000001                     i2sendCharSerial4@charToSend:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x0
   896   000001                     	ds	1
   897   000002                     ??_color_click_toggleLED:
   898   000002                     ??_invert_action:
   899   000002                     ??_I2C_2_Master_Idle:
   900   000002                     ?_get16bitTMR0val:
   901                           	callstack 0
   902   000002                     ?___wmul:
   903                           	callstack 0
   904   000002                     ?___awdiv:
   905                           	callstack 0
   906   000002                     ?___awmod:
   907                           	callstack 0
   908   000002                     ?___fladd:
   909                           	callstack 0
   910   000002                     ?___flneg:
   911                           	callstack 0
   912   000002                     ?___xxtofl:
   913                           	callstack 0
   914   000002                     sendCharSerial4@charToSend:
   915                           	callstack 0
   916   000002                     initDCmotorsPWM@PWMperiod:
   917                           	callstack 0
   918   000002                     ___wmul@multiplier:
   919                           	callstack 0
   920   000002                     ___awdiv@dividend:
   921                           	callstack 0
   922   000002                     ___awmod@dividend:
   923                           	callstack 0
   924   000002                     fputc@c:
   925                           	callstack 0
   926   000002                     ___flneg@f1:
   927                           	callstack 0
   928   000002                     ___fladd@b:
   929                           	callstack 0
   930   000002                     ___xxtofl@val:
   931                           	callstack 0
   932                           
   933                           ; 4 bytes @ 0x1
   934   000002                     	ds	1
   935   000003                     ??_I2C_2_Master_Read:
   936   000003                     I2C_2_Master_Write@data_byte:
   937                           	callstack 0
   938   000003                     sendStringSerial4@string:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x2
   942   000003                     	ds	1
   943   000004                     ??_get16bitTMR0val:
   944   000004                     color_writetoaddr@value:
   945                           	callstack 0
   946   000004                     invert_action@input_action:
   947                           	callstack 0
   948   000004                     I2C_2_Master_Read@ack:
   949                           	callstack 0
   950   000004                     fputc@fp:
   951                           	callstack 0
   952   000004                     ___wmul@multiplicand:
   953                           	callstack 0
   954   000004                     ___awdiv@divisor:
   955                           	callstack 0
   956   000004                     ___awmod@divisor:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x3
   960   000004                     	ds	1
   961   000005                     ??_fputc:
   962   000005                     color_writetoaddr@address:
   963                           	callstack 0
   964   000005                     invert_action@output_action:
   965                           	callstack 0
   966   000005                     I2C_2_Master_Read@tmp:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x4
   970   000005                     	ds	1
   971   000006                     ??_color_click_init:
   972   000006                     ??___xxtofl:
   973   000006                     ?_color_read_Clear:
   974                           	callstack 0
   975   000006                     ?_color_read_Red:
   976                           	callstack 0
   977   000006                     ?_color_read_Green:
   978                           	callstack 0
   979   000006                     ?_color_read_Blue:
   980                           	callstack 0
   981   000006                     ___awdiv@counter:
   982                           	callstack 0
   983   000006                     ___awmod@counter:
   984                           	callstack 0
   985   000006                     get16bitTMR0val@timer_val:
   986                           	callstack 0
   987   000006                     ___wmul@product:
   988                           	callstack 0
   989   000006                     ___fladd@a:
   990                           	callstack 0
   991                           
   992                           ; 4 bytes @ 0x5
   993   000006                     	ds	1
   994   000007                     ___awdiv@sign:
   995                           	callstack 0
   996   000007                     ___awmod@sign:
   997                           	callstack 0
   998                           
   999                           ; 1 bytes @ 0x6
  1000   000007                     	ds	1
  1001   000008                     ??_color_read_Clear:
  1002   000008                     ??_color_read_Red:
  1003   000008                     ??_color_read_Green:
  1004   000008                     ??_color_read_Blue:
  1005   000008                     ?_abs:
  1006                           	callstack 0
  1007   000008                     ?___lwdiv:
  1008                           	callstack 0
  1009   000008                     ___awdiv@quotient:
  1010                           	callstack 0
  1011   000008                     ___lwdiv@dividend:
  1012                           	callstack 0
  1013   000008                     abs@a:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x7
  1017   000008                     	ds	2
  1018   00000A                     ??___fladd:
  1019   00000A                     ??_abs:
  1020   00000A                     ___xxtofl@sign:
  1021                           	callstack 0
  1022   00000A                     ___lwdiv@divisor:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x9
  1026   00000A                     	ds	1
  1027   00000B                     ___xxtofl@exp:
  1028                           	callstack 0
  1029   00000B                     color_read_Clear@tmp:
  1030                           	callstack 0
  1031   00000B                     color_read_Red@tmp:
  1032                           	callstack 0
  1033   00000B                     color_read_Green@tmp:
  1034                           	callstack 0
  1035   00000B                     color_read_Blue@tmp:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0xA
  1039   00000B                     	ds	1
  1040   00000C                     vfpfcnvrt@fp:
  1041                           	callstack 0
  1042   00000C                     ___lwdiv@quotient:
  1043                           	callstack 0
  1044   00000C                     ___xxtofl@arg:
  1045                           	callstack 0
  1046                           
  1047                           ; 4 bytes @ 0xB
  1048   00000C                     	ds	1
  1049   00000D                     vfpfcnvrt@fmt:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0xC
  1053   00000D                     	ds	1
  1054   00000E                     ___lwdiv@counter:
  1055                           	callstack 0
  1056   00000E                     ___fladd@signs:
  1057                           	callstack 0
  1058   00000E                     vfpfcnvrt@ap:
  1059                           	callstack 0
  1060                           
  1061                           ; 1 bytes @ 0xD
  1062   00000E                     	ds	1
  1063   00000F                     ??_vfpfcnvrt:
  1064   00000F                     ___fladd@aexp:
  1065                           	callstack 0
  1066   00000F                     setMotorPWM@m:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0xE
  1070   00000F                     	ds	1
  1071   000010                     ___fladd@bexp:
  1072                           	callstack 0
  1073   000010                     vfpfcnvrt@done:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0xF
  1077   000010                     	ds	1
  1078   000011                     ??_setMotorPWM:
  1079   000011                     ___fladd@grs:
  1080                           	callstack 0
  1081   000011                     vfpfcnvrt@cp:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x10
  1085   000011                     	ds	1
  1086   000012                     ?_sqrtf:
  1087                           	callstack 0
  1088   000012                     ?___flmul:
  1089                           	callstack 0
  1090   000012                     ___flmul@b:
  1091                           	callstack 0
  1092   000012                     vfpfcnvrt@convarg:
  1093                           	callstack 0
  1094   000012                     sqrtf@x:
  1095                           	callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x11
  1098   000012                     	ds	1
  1099   000013                     setMotorPWM@posDuty:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x12
  1103   000013                     	ds	1
  1104   000014                     setMotorPWM@negDuty:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x13
  1108   000014                     	ds	1
  1109   000015                     fullSpeedAhead@mL:
  1110                           	callstack 0
  1111   000015                     stop@mL:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x14
  1115   000015                     	ds	1
  1116   000016                     ??_sqrtf:
  1117   000016                     vfpfcnvrt@c:
  1118                           	callstack 0
  1119   000016                     ___flmul@a:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x15
  1123   000016                     	ds	1
  1124   000017                     ?_vfprintf:
  1125                           	callstack 0
  1126   000017                     vfprintf@fp:
  1127                           	callstack 0
  1128   000017                     fullSpeedAhead@mR:
  1129                           	callstack 0
  1130   000017                     stop@mR:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x16
  1134   000017                     	ds	1
  1135   000018                     vfprintf@fmt:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x17
  1139   000018                     	ds	1
  1140   000019                     ??_fullSpeedAhead:
  1141   000019                     vfprintf@ap:
  1142                           	callstack 0
  1143   000019                     turn_left_90@mL:
  1144                           	callstack 0
  1145   000019                     turn_right_90@mL:
  1146                           	callstack 0
  1147   000019                     turn_left_135@mL:
  1148                           	callstack 0
  1149   000019                     turn_right_135@mL:
  1150                           	callstack 0
  1151   000019                     reverse_after_read@mL:
  1152                           	callstack 0
  1153   000019                     reverse_one_square@mL:
  1154                           	callstack 0
  1155   000019                     inch_forward@mL:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x18
  1159   000019                     	ds	1
  1160   00001A                     ??___flmul:
  1161   00001A                     vfprintf@cfmt:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x19
  1165   00001A                     	ds	1
  1166   00001B                     ?_sprintf:
  1167                           	callstack 0
  1168   00001B                     turn_left_90@mR:
  1169                           	callstack 0
  1170   00001B                     turn_right_90@mR:
  1171                           	callstack 0
  1172   00001B                     turn_left_135@mR:
  1173                           	callstack 0
  1174   00001B                     turn_right_135@mR:
  1175                           	callstack 0
  1176   00001B                     reverse_after_read@mR:
  1177                           	callstack 0
  1178   00001B                     reverse_one_square@mR:
  1179                           	callstack 0
  1180   00001B                     inch_forward@mR:
  1181                           	callstack 0
  1182   00001B                     sprintf@s:
  1183                           	callstack 0
  1184   00001B                     sqrtf@s:
  1185                           	callstack 0
  1186                           
  1187                           ; 4 bytes @ 0x1A
  1188   00001B                     	ds	2
  1189   00001D                     ??_turn_left_90:
  1190   00001D                     ??_turn_right_90:
  1191   00001D                     ??_turn_left_135:
  1192   00001D                     ??_turn_right_135:
  1193   00001D                     ??_reverse_after_read:
  1194   00001D                     ??_reverse_one_square:
  1195   00001D                     ??_inch_forward:
  1196   00001D                     sprintf@fmt:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x1C
  1200   00001D                     	ds	1
  1201   00001E                     ___flmul@sign:
  1202                           	callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x1D
  1205   00001E                     	ds	1
  1206   00001F                     ___flmul@grs:
  1207                           	callstack 0
  1208   00001F                     sqrtf@i:
  1209                           	callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x1E
  1212   00001F                     	ds	1
  1213   000020                     sprintf@ap:
  1214                           	callstack 0
  1215                           
  1216                           ; 1 bytes @ 0x1F
  1217   000020                     	ds	1
  1218   000021                     sprintf@f:
  1219                           	callstack 0
  1220                           
  1221                           ; 12 bytes @ 0x20
  1222   000021                     	ds	2
  1223   000023                     ___flmul@aexp:
  1224                           	callstack 0
  1225   000023                     sqrtf@q:
  1226                           	callstack 0
  1227                           
  1228                           ; 4 bytes @ 0x22
  1229   000023                     	ds	1
  1230   000024                     ___flmul@bexp:
  1231                           	callstack 0
  1232                           
  1233                           ; 1 bytes @ 0x23
  1234   000024                     	ds	1
  1235   000025                     ___flmul@prod:
  1236                           	callstack 0
  1237                           
  1238                           ; 4 bytes @ 0x24
  1239   000025                     	ds	2
  1240   000027                     sqrtf@t:
  1241                           	callstack 0
  1242                           
  1243                           ; 4 bytes @ 0x26
  1244   000027                     	ds	2
  1245   000029                     ___flmul@temp:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x28
  1249   000029                     	ds	2
  1250   00002B                     ?___fldiv:
  1251                           	callstack 0
  1252   00002B                     ?_scalbnf:
  1253                           	callstack 0
  1254   00002B                     ___fldiv@b:
  1255                           	callstack 0
  1256   00002B                     scalbnf@x:
  1257                           	callstack 0
  1258   00002B                     sqrtf@m:
  1259                           	callstack 0
  1260                           
  1261                           ; 4 bytes @ 0x2A
  1262   00002B                     	ds	4
  1263   00002F                     scalbnf@n:
  1264                           	callstack 0
  1265   00002F                     ___fldiv@a:
  1266                           	callstack 0
  1267   00002F                     sqrtf@r:
  1268                           	callstack 0
  1269                           
  1270                           ; 4 bytes @ 0x2E
  1271   00002F                     	ds	2
  1272   000031                     ??_scalbnf:
  1273                           
  1274                           ; 1 bytes @ 0x30
  1275   000031                     	ds	2
  1276   000033                     ??___fldiv:
  1277   000033                     sqrtf@ix:
  1278                           	callstack 0
  1279                           
  1280                           ; 4 bytes @ 0x32
  1281   000033                     	ds	2
  1282   000035                     scalbnf@u:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x34
  1286   000035                     	ds	2
  1287   000037                     ___fldiv@rem:
  1288                           	callstack 0
  1289                           
  1290                           ; 4 bytes @ 0x36
  1291   000037                     	ds	2
  1292   000039                     scalbnf@y:
  1293                           	callstack 0
  1294                           
  1295                           ; 4 bytes @ 0x38
  1296   000039                     	ds	2
  1297   00003B                     ___fldiv@sign:
  1298                           	callstack 0
  1299                           
  1300                           ; 1 bytes @ 0x3A
  1301   00003B                     	ds	1
  1302   00003C                     ___fldiv@new_exp:
  1303                           	callstack 0
  1304                           
  1305                           ; 2 bytes @ 0x3B
  1306   00003C                     	ds	2
  1307   00003E                     ___fldiv@grs:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x3D
  1311   00003E                     	ds	4
  1312   000042                     ___fldiv@bexp:
  1313                           	callstack 0
  1314                           
  1315                           ; 1 bytes @ 0x41
  1316   000042                     	ds	1
  1317   000043                     ___fldiv@aexp:
  1318                           	callstack 0
  1319                           
  1320                           ; 1 bytes @ 0x42
  1321   000043                     	ds	1
  1322   000044                     ?___flsub:
  1323                           	callstack 0
  1324   000044                     ___flsub@b:
  1325                           	callstack 0
  1326                           
  1327                           ; 4 bytes @ 0x43
  1328   000044                     	ds	4
  1329   000048                     ___flsub@a:
  1330                           	callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x47
  1333   000048                     	ds	4
  1334   00004C                     ___flge@ff1:
  1335                           	callstack 0
  1336                           
  1337                           ; 4 bytes @ 0x4B
  1338   00004C                     	ds	4
  1339   000050                     ___flge@ff2:
  1340                           	callstack 0
  1341                           
  1342                           ; 4 bytes @ 0x4F
  1343   000050                     	ds	4
  1344   000054                     ??___flge:
  1345                           
  1346                           ; 1 bytes @ 0x53
  1347   000054                     	ds	4
  1348   000058                     ??_main:
  1349                           
  1350                           ; 1 bytes @ 0x57
  1351   000058                     	ds	5
  1352                           
  1353 ;;
  1354 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1355 ;;
  1356 ;; *************** function _main *****************
  1357 ;; Defined at:
  1358 ;;		line 23 in file "main.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  i               1  175[BANK3 ] unsigned char 
  1363 ;;  timings        40  120[BANK3 ] unsigned int [20]
  1364 ;;  actions        40   60[BANK3 ] int [20]
  1365 ;;  clear_val      20  100[BANK3 ] unsigned char [20]
  1366 ;;  blue_val       20   40[BANK3 ] unsigned char [20]
  1367 ;;  green_val      20   20[BANK3 ] unsigned char [20]
  1368 ;;  red_val        20    0[BANK3 ] unsigned char [20]
  1369 ;;  motorR          9  189[BANK3 ] struct DC_motor
  1370 ;;  motorL          9  180[BANK3 ] struct DC_motor
  1371 ;;  pmR             2  200[BANK3 ] PTR struct DC_motor
  1372 ;;		 -> main@motorR(9), 
  1373 ;;  pmL             2  198[BANK3 ] PTR struct DC_motor
  1374 ;;		 -> main@motorL(9), 
  1375 ;;  action_to_do    2  178[BANK3 ] int 
  1376 ;;  actions_comp    2  176[BANK3 ] int 
  1377 ;;  lum             2  172[BANK3 ] unsigned int 
  1378 ;;  measured_tim    2  170[BANK3 ] unsigned int 
  1379 ;;  pclear_val      2  168[BANK3 ] PTR unsigned char 
  1380 ;;		 -> main@clear_val(20), 
  1381 ;;  PWMcycle        2    0        unsigned int 
  1382 ;;  bluem           2  166[BANK3 ] unsigned int 
  1383 ;;  greenm          2  164[BANK3 ] unsigned int 
  1384 ;;  redm            2  162[BANK3 ] unsigned int 
  1385 ;;  lum_threshol    2  160[BANK3 ] unsigned int 
  1386 ;;  pgreen_val      2    0        PTR unsigned char 
  1387 ;;		 -> main@green_val(20), 
  1388 ;;  pblue_val       2    0        PTR unsigned char 
  1389 ;;		 -> main@blue_val(20), 
  1390 ;;  pred_val        2    0        PTR unsigned char 
  1391 ;;		 -> main@red_val(20), 
  1392 ;;  previously_m    2    0        unsigned int 
  1393 ;;  going_forwar    1  174[BANK3 ] _Bool 
  1394 ;;  action          1    0        unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;      Locals:         0       0       0       0     202       0       0       0       0       0       0       0       
      +0       0       0
  1406 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1407 ;;      Totals:         5       0       0       0     202       0       0       0       0       0       0       0       
      +0       0       0
  1408 ;;Total ram usage:      207 bytes
  1409 ;; Hardware stack levels required when called: 7
  1410 ;; This function calls:
  1411 ;;		_ADC_init
  1412 ;;		_I2C_2_Master_Init
  1413 ;;		_Interrupts_init
  1414 ;;		_Timer0_init
  1415 ;;		_color_click_init
  1416 ;;		_color_click_toggleLED
  1417 ;;		_color_read_Blue
  1418 ;;		_color_read_Clear
  1419 ;;		_color_read_Green
  1420 ;;		_color_read_Red
  1421 ;;		_color_writetoaddr
  1422 ;;		_decide_action
  1423 ;;		_fullSpeedAhead
  1424 ;;		_get16bitTMR0val
  1425 ;;		_inch_forward
  1426 ;;		_initDCmotorsPWM
  1427 ;;		_initUSART4
  1428 ;;		_invert_action
  1429 ;;		_resetTimer0
  1430 ;;		_reverse_after_read
  1431 ;;		_reverse_one_square
  1432 ;;		_sendStringSerial4
  1433 ;;		_sprintf
  1434 ;;		_stop
  1435 ;;		_turn_left_135
  1436 ;;		_turn_left_90
  1437 ;;		_turn_right_135
  1438 ;;		_turn_right_90
  1439 ;; This function is called by:
  1440 ;;		Startup code after reset
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text0
  1445   0044FC                     __ptext0:
  1446                           	callstack 0
  1447   0044FC                     _main:
  1448                           	callstack 24
  1449   0044FC                     
  1450                           ;main.c: 25:     Timer0_init();
  1451   0044FC  EC97  F03A         	call	_Timer0_init	;wreg free
  1452                           
  1453                           ;main.c: 26:     ADC_init();
  1454   004500  ECC5  F03A         	call	_ADC_init	;wreg free
  1455   004504                     
  1456                           ;main.c: 27:     Interrupts_init();
  1457   004504  ECFC  F03A         	call	_Interrupts_init	;wreg free
  1458   004508                     
  1459                           ;main.c: 28:     I2C_2_Master_Init();
  1460   004508  EC4B  F03A         	call	_I2C_2_Master_Init	;wreg free
  1461   00450C                     
  1462                           ;main.c: 29:     color_click_init();
  1463   00450C  EC55  F039         	call	_color_click_init	;wreg free
  1464   004510                     
  1465                           ;main.c: 30:     initDCmotorsPWM(99);
  1466   004510  0E00               	movlw	0
  1467   004512  6E03               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1468   004514  0E63               	movlw	99
  1469   004516  6E02               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1470   004518  EC60  F037         	call	_initDCmotorsPWM	;wreg free
  1471   00451C                     
  1472                           ;main.c: 31:     initUSART4();
  1473   00451C  ECA7  F03A         	call	_initUSART4	;wreg free
  1474   004520                     
  1475                           ;main.c: 34:     color_click_toggleLED();
  1476   004520  EC82  F038         	call	_color_click_toggleLED	;wreg free
  1477   004524                     
  1478                           ;main.c: 37:     LATHbits.LATH3=1;
  1479   004524  8680               	bsf	128,3,c	;volatile
  1480   004526                     
  1481                           ;main.c: 38:     TRISHbits.TRISH3=0;
  1482   004526  9688               	bcf	136,3,c	;volatile
  1483   004528                     
  1484                           ;main.c: 41:     TRISFbits.TRISF2=1;
  1485   004528  8486               	bsf	134,2,c	;volatile
  1486   00452A                     
  1487                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1488   00452A  010E               	movlb	14	; () banked
  1489   00452C  95B4               	bcf	180,2,b	;volatile
  1490   00452E                     
  1491                           ; BSR set to: 14
  1492                           ;main.c: 48:     motorL.power=0;
  1493   00452E  0E00               	movlw	0
  1494   004530  0103               	movlb	3	; () banked
  1495   004532  6FB4               	movwf	main@motorL& (0+255),b
  1496   004534                     
  1497                           ; BSR set to: 3
  1498                           ;main.c: 49:     motorL.direction=1;
  1499   004534  0E01               	movlw	1
  1500   004536  6FB5               	movwf	(main@motorL+1)& (0+255),b
  1501   004538                     
  1502                           ; BSR set to: 3
  1503                           ;main.c: 50:     motorL.brakemode=1;
  1504   004538  0E01               	movlw	1
  1505   00453A  6FB6               	movwf	(main@motorL+2)& (0+255),b
  1506   00453C                     
  1507                           ; BSR set to: 3
  1508                           ;main.c: 51:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1509   00453C  0EAA               	movlw	170
  1510   00453E  6FB9               	movwf	(main@motorL+5)& (0+255),b
  1511   004540  0E0F               	movlw	15
  1512   004542  6FBA               	movwf	(main@motorL+6)& (0+255),b
  1513   004544                     
  1514                           ; BSR set to: 3
  1515                           ;main.c: 52:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1516   004544  0EA6               	movlw	166
  1517   004546  6FBB               	movwf	(main@motorL+7)& (0+255),b
  1518   004548  0E0F               	movlw	15
  1519   00454A  6FBC               	movwf	(main@motorL+8)& (0+255),b
  1520   00454C                     
  1521                           ; BSR set to: 3
  1522                           ;main.c: 53:     motorL.PWMperiod=PWMcycle;
  1523   00454C  0E00               	movlw	0
  1524   00454E  6FB8               	movwf	(main@motorL+4)& (0+255),b
  1525   004550  0E63               	movlw	99
  1526   004552  6FB7               	movwf	(main@motorL+3)& (0+255),b
  1527   004554                     
  1528                           ; BSR set to: 3
  1529                           ;main.c: 55:     motorR.power=0;
  1530   004554  0E00               	movlw	0
  1531   004556  6FBD               	movwf	main@motorR& (0+255),b
  1532   004558                     
  1533                           ; BSR set to: 3
  1534                           ;main.c: 56:     motorR.direction=1;
  1535   004558  0E01               	movlw	1
  1536   00455A  6FBE               	movwf	(main@motorR+1)& (0+255),b
  1537   00455C                     
  1538                           ; BSR set to: 3
  1539                           ;main.c: 57:     motorR.brakemode=1;
  1540   00455C  0E01               	movlw	1
  1541   00455E  6FBF               	movwf	(main@motorR+2)& (0+255),b
  1542   004560                     
  1543                           ; BSR set to: 3
  1544                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1545   004560  0E25               	movlw	37
  1546   004562  6FC2               	movwf	(main@motorR+5)& (0+255),b
  1547   004564  0E0F               	movlw	15
  1548   004566  6FC3               	movwf	(main@motorR+6)& (0+255),b
  1549   004568                     
  1550                           ; BSR set to: 3
  1551                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1552   004568  0E21               	movlw	33
  1553   00456A  6FC4               	movwf	(main@motorR+7)& (0+255),b
  1554   00456C  0E0F               	movlw	15
  1555   00456E  6FC5               	movwf	(main@motorR+8)& (0+255),b
  1556   004570                     
  1557                           ; BSR set to: 3
  1558                           ;main.c: 60:     motorR.PWMperiod=PWMcycle;
  1559   004570  0E00               	movlw	0
  1560   004572  6FC1               	movwf	(main@motorR+4)& (0+255),b
  1561   004574  0E63               	movlw	99
  1562   004576  6FC0               	movwf	(main@motorR+3)& (0+255),b
  1563   004578                     
  1564                           ; BSR set to: 3
  1565                           ;main.c: 63:     struct DC_motor *pmL= &motorL;
  1566   004578  0EB4               	movlw	low main@motorL
  1567   00457A  6FC6               	movwf	main@pmL& (0+255),b
  1568   00457C  0E03               	movlw	high main@motorL
  1569   00457E  6FC7               	movwf	(main@pmL+1)& (0+255),b
  1570   004580                     
  1571                           ; BSR set to: 3
  1572                           ;main.c: 64:     struct DC_motor *pmR= &motorR;
  1573   004580  0EBD               	movlw	low main@motorR
  1574   004582  6FC8               	movwf	main@pmR& (0+255),b
  1575   004584  0E03               	movlw	high main@motorR
  1576   004586  6FC9               	movwf	(main@pmR+1)& (0+255),b
  1577   004588                     
  1578                           ; BSR set to: 3
  1579                           ;main.c: 67:     char clear_val[20];;main.c: 68:     char red_val[20];;main.c: 69:     c
      +                          har green_val[20];;main.c: 70:     char blue_val[20];;main.c: 71:     char *pclear_val;;
      +                          main.c: 72:     char *pred_val;;main.c: 73:     char *pblue_val;;main.c: 74:     char *p
      +                          green_val;;main.c: 75:     pclear_val = &clear_val[0];
  1580   004588  0E64               	movlw	low main@clear_val
  1581   00458A  6FA8               	movwf	main@pclear_val& (0+255),b
  1582   00458C  0E03               	movlw	high main@clear_val
  1583   00458E  6FA9               	movwf	(main@pclear_val+1)& (0+255),b
  1584   004590                     
  1585                           ; BSR set to: 3
  1586                           ;main.c: 80:     unsigned int lum;;main.c: 81:     unsigned int lum_threshold;;main.c: 8
      +                          2:     unsigned int redm, greenm, bluem;;main.c: 83:     char action;;main.c: 84:     _B
      +                          ool going_forward = 0;
  1587   004590  0E00               	movlw	0
  1588   004592  6FAE               	movwf	main@going_forward& (0+255),b
  1589   004594                     
  1590                           ; BSR set to: 3
  1591                           ;main.c: 85:     unsigned int previously_measured_time, measured_time;;main.c: 86:     i
      +                          nt action_to_do;;main.c: 87:     unsigned int timings[20];;main.c: 88:     int actions[2
      +                          0];;main.c: 89:     int actions_completed = 0;
  1592   004594  0E00               	movlw	0
  1593   004596  6FB1               	movwf	(main@actions_completed+1)& (0+255),b
  1594   004598  0E00               	movlw	0
  1595   00459A  6FB0               	movwf	main@actions_completed& (0+255),b
  1596   00459C                     
  1597                           ; BSR set to: 3
  1598                           ;main.c: 102:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1599   00459C  0EA3               	movlw	163
  1600   00459E  6E59               	movwf	(??_main+1)^0,c
  1601   0045A0  0E57               	movlw	87
  1602   0045A2  6E58               	movwf	??_main^0,c
  1603   0045A4  0E02               	movlw	2
  1604   0045A6                     u7887:
  1605   0045A6  2EE8               	decfsz	wreg,f,c
  1606   0045A8  D7FE               	bra	u7887
  1607   0045AA  2E58               	decfsz	??_main^0,f,c
  1608   0045AC  D7FC               	bra	u7887
  1609   0045AE  2E59               	decfsz	(??_main+1)^0,f,c
  1610   0045B0  D7FA               	bra	u7887
  1611   0045B2  D000               	nop2	
  1612   0045B4                     
  1613                           ;main.c: 104:     lum = color_read_Clear();
  1614   0045B4  EC05  F039         	call	_color_read_Clear	;wreg free
  1615   0045B8  C006  F3AC         	movff	?_color_read_Clear,main@lum
  1616   0045BC  C007  F3AD         	movff	?_color_read_Clear+1,main@lum+1
  1617   0045C0                     
  1618                           ;main.c: 105:     lum_threshold = lum + 10;
  1619   0045C0  0E0A               	movlw	10
  1620   0045C2  0103               	movlb	3	; () banked
  1621   0045C4  25AC               	addwf	main@lum& (0+255),w,b
  1622   0045C6  6FA0               	movwf	main@lum_threshold& (0+255),b
  1623   0045C8  0E00               	movlw	0
  1624   0045CA  21AD               	addwfc	(main@lum+1)& (0+255),w,b
  1625   0045CC  6FA1               	movwf	(main@lum_threshold+1)& (0+255),b
  1626   0045CE                     l7641:
  1627                           
  1628                           ;main.c: 219:         if(!going_forward){
  1629   0045CE  0103               	movlb	3	; () banked
  1630   0045D0  51AE               	movf	main@going_forward& (0+255),w,b
  1631   0045D2  A4D8               	btfss	status,2,c
  1632   0045D4  EFEE  F022         	goto	u7661
  1633   0045D8  EFF0  F022         	goto	u7660
  1634   0045DC                     u7661:
  1635   0045DC  EFFF  F022         	goto	l7649
  1636   0045E0                     u7660:
  1637   0045E0                     
  1638                           ; BSR set to: 3
  1639                           ;main.c: 222:             resetTimer0();
  1640   0045E0  EC02  F03B         	call	_resetTimer0	;wreg free
  1641   0045E4                     
  1642                           ;main.c: 223:             fullSpeedAhead(pmL, pmR);
  1643   0045E4  C3C6  F015         	movff	main@pmL,fullSpeedAhead@mL
  1644   0045E8  C3C7  F016         	movff	main@pmL+1,fullSpeedAhead@mL+1
  1645   0045EC  C3C8  F017         	movff	main@pmR,fullSpeedAhead@mR
  1646   0045F0  C3C9  F018         	movff	main@pmR+1,fullSpeedAhead@mR+1
  1647   0045F4  EC4D  F036         	call	_fullSpeedAhead	;wreg free
  1648   0045F8                     
  1649                           ;main.c: 224:             going_forward = 1;
  1650   0045F8  0E01               	movlw	1
  1651   0045FA  0103               	movlb	3	; () banked
  1652   0045FC  6FAE               	movwf	main@going_forward& (0+255),b
  1653   0045FE                     l7649:
  1654                           
  1655                           ; BSR set to: 3
  1656                           ;main.c: 227:         lum = color_read_Clear();
  1657   0045FE  EC05  F039         	call	_color_read_Clear	;wreg free
  1658   004602  C006  F3AC         	movff	?_color_read_Clear,main@lum
  1659   004606  C007  F3AD         	movff	?_color_read_Clear+1,main@lum+1
  1660   00460A                     
  1661                           ;main.c: 229:         if (lum > lum_threshold){
  1662   00460A  0103               	movlb	3	; () banked
  1663   00460C  51AC               	movf	main@lum& (0+255),w,b
  1664   00460E  5DA0               	subwf	main@lum_threshold& (0+255),w,b
  1665   004610  51AD               	movf	(main@lum+1)& (0+255),w,b
  1666   004612  59A1               	subwfb	(main@lum_threshold+1)& (0+255),w,b
  1667   004614  B0D8               	btfsc	status,0,c
  1668   004616  EF0F  F023         	goto	u7671
  1669   00461A  EF11  F023         	goto	u7670
  1670   00461E                     u7671:
  1671   00461E  EFE7  F022         	goto	l7641
  1672   004622                     u7670:
  1673   004622                     
  1674                           ; BSR set to: 3
  1675                           ;main.c: 231:             measured_time = get16bitTMR0val();
  1676   004622  ECB6  F03A         	call	_get16bitTMR0val	;wreg free
  1677   004626  C002  F3AA         	movff	?_get16bitTMR0val,main@measured_time
  1678   00462A  C003  F3AB         	movff	?_get16bitTMR0val+1,main@measured_time+1
  1679   00462E                     
  1680                           ;main.c: 232:             stop(pmL, pmR);
  1681   00462E  C3C6  F015         	movff	main@pmL,stop@mL
  1682   004632  C3C7  F016         	movff	main@pmL+1,stop@mL+1
  1683   004636  C3C8  F017         	movff	main@pmR,stop@mR
  1684   00463A  C3C9  F018         	movff	main@pmR+1,stop@mR+1
  1685   00463E  ECB1  F037         	call	_stop	;wreg free
  1686   004642                     
  1687                           ;main.c: 233:             _delay((unsigned long)((250)*(64000000/4000.0)));
  1688   004642  0E15               	movlw	21
  1689   004644  6E59               	movwf	(??_main+1)^0,c
  1690   004646  0E4B               	movlw	75
  1691   004648  6E58               	movwf	??_main^0,c
  1692   00464A  0EBE               	movlw	190
  1693   00464C                     u7897:
  1694   00464C  2EE8               	decfsz	wreg,f,c
  1695   00464E  D7FE               	bra	u7897
  1696   004650  2E58               	decfsz	??_main^0,f,c
  1697   004652  D7FC               	bra	u7897
  1698   004654  2E59               	decfsz	(??_main+1)^0,f,c
  1699   004656  D7FA               	bra	u7897
  1700   004658  D000               	nop2	
  1701   00465A                     l7659:
  1702                           
  1703                           ;main.c: 237:                 lum = color_read_Clear();
  1704   00465A  EC05  F039         	call	_color_read_Clear	;wreg free
  1705   00465E  C006  F3AC         	movff	?_color_read_Clear,main@lum
  1706   004662  C007  F3AD         	movff	?_color_read_Clear+1,main@lum+1
  1707   004666                     
  1708                           ;main.c: 238:                 if(lum < 80){
  1709   004666  0103               	movlb	3	; () banked
  1710   004668  51AD               	movf	(main@lum+1)& (0+255),w,b
  1711   00466A  E107               	bnz	u7681
  1712   00466C  0E50               	movlw	80
  1713   00466E  5DAC               	subwf	main@lum& (0+255),w,b
  1714   004670  B0D8               	btfsc	status,0,c
  1715   004672  EF3D  F023         	goto	u7681
  1716   004676  EF3F  F023         	goto	u7680
  1717   00467A                     u7681:
  1718   00467A  EF57  F023         	goto	l7667
  1719   00467E                     u7680:
  1720   00467E                     
  1721                           ; BSR set to: 3
  1722                           ;main.c: 239:                 inch_forward(pmL, pmR);
  1723   00467E  C3C6  F019         	movff	main@pmL,inch_forward@mL
  1724   004682  C3C7  F01A         	movff	main@pmL+1,inch_forward@mL+1
  1725   004686  C3C8  F01B         	movff	main@pmR,inch_forward@mR
  1726   00468A  C3C9  F01C         	movff	main@pmR+1,inch_forward@mR+1
  1727   00468E  EC76  F035         	call	_inch_forward	;wreg free
  1728   004692                     
  1729                           ;main.c: 240:                 _delay((unsigned long)((100)*(64000000/4000.0)));
  1730   004692  0E09               	movlw	9
  1731   004694  6E59               	movwf	(??_main+1)^0,c
  1732   004696  0E1E               	movlw	30
  1733   004698  6E58               	movwf	??_main^0,c
  1734   00469A  0EE4               	movlw	228
  1735   00469C                     u7907:
  1736   00469C  2EE8               	decfsz	wreg,f,c
  1737   00469E  D7FE               	bra	u7907
  1738   0046A0  2E58               	decfsz	??_main^0,f,c
  1739   0046A2  D7FC               	bra	u7907
  1740   0046A4  2E59               	decfsz	(??_main+1)^0,f,c
  1741   0046A6  D7FA               	bra	u7907
  1742   0046A8  D000               	nop2	
  1743                           
  1744                           ;main.c: 241:                 }
  1745   0046AA  EF2D  F023         	goto	l7659
  1746   0046AE                     l7667:
  1747                           
  1748                           ; BSR set to: 3
  1749                           ;main.c: 248:             going_forward = 0;
  1750   0046AE  0E00               	movlw	0
  1751   0046B0  6FAE               	movwf	main@going_forward& (0+255),b
  1752   0046B2                     
  1753                           ; BSR set to: 3
  1754                           ;main.c: 251:             timings[actions_completed] = measured_time;
  1755   0046B2  90D8               	bcf	status,0,c
  1756   0046B4  35B0               	rlcf	main@actions_completed& (0+255),w,b
  1757   0046B6  6ED9               	movwf	fsr2l,c
  1758   0046B8  35B1               	rlcf	(main@actions_completed+1)& (0+255),w,b
  1759   0046BA  6EDA               	movwf	fsr2h,c
  1760   0046BC  0E78               	movlw	low main@timings
  1761   0046BE  26D9               	addwf	fsr2l,f,c
  1762   0046C0  0E03               	movlw	high main@timings
  1763   0046C2  22DA               	addwfc	fsr2h,f,c
  1764   0046C4  C3AA  FFDE         	movff	main@measured_time,postinc2
  1765   0046C8  C3AB  FFDD         	movff	main@measured_time+1,postdec2
  1766   0046CC                     
  1767                           ; BSR set to: 3
  1768                           ;main.c: 254:             color_writetoaddr(0x01, 0xD5);
  1769   0046CC  0ED5               	movlw	213
  1770   0046CE  6E04               	movwf	color_writetoaddr@value^0,c
  1771   0046D0  0E01               	movlw	1
  1772   0046D2  EC87  F03A         	call	_color_writetoaddr
  1773   0046D6                     
  1774                           ;main.c: 255:             color_writetoaddr(0x03, 0xAB);
  1775   0046D6  0EAB               	movlw	171
  1776   0046D8  6E04               	movwf	color_writetoaddr@value^0,c
  1777   0046DA  0E03               	movlw	3
  1778   0046DC  EC87  F03A         	call	_color_writetoaddr
  1779   0046E0                     
  1780                           ;main.c: 256:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1781   0046E0  0E11               	movlw	17
  1782   0046E2  6E59               	movwf	(??_main+1)^0,c
  1783   0046E4  0E3C               	movlw	60
  1784   0046E6  6E58               	movwf	??_main^0,c
  1785   0046E8  0ECB               	movlw	203
  1786   0046EA                     u7917:
  1787   0046EA  2EE8               	decfsz	wreg,f,c
  1788   0046EC  D7FE               	bra	u7917
  1789   0046EE  2E58               	decfsz	??_main^0,f,c
  1790   0046F0  D7FC               	bra	u7917
  1791   0046F2  2E59               	decfsz	(??_main+1)^0,f,c
  1792   0046F4  D7FA               	bra	u7917
  1793   0046F6  0000               	nop	
  1794   0046F8                     
  1795                           ;main.c: 258:             redm = color_read_Red();
  1796   0046F8  ECB5  F038         	call	_color_read_Red	;wreg free
  1797   0046FC  C006  F3A2         	movff	?_color_read_Red,main@redm
  1798   004700  C007  F3A3         	movff	?_color_read_Red+1,main@redm+1
  1799   004704                     
  1800                           ;main.c: 259:             greenm = color_read_Green();
  1801   004704  ECDD  F038         	call	_color_read_Green	;wreg free
  1802   004708  C006  F3A4         	movff	?_color_read_Green,main@greenm
  1803   00470C  C007  F3A5         	movff	?_color_read_Green+1,main@greenm+1
  1804   004710                     
  1805                           ;main.c: 260:             bluem = color_read_Blue();
  1806   004710  EC2D  F039         	call	_color_read_Blue	;wreg free
  1807   004714  C006  F3A6         	movff	?_color_read_Blue,main@bluem
  1808   004718  C007  F3A7         	movff	?_color_read_Blue+1,main@bluem+1
  1809   00471C                     
  1810                           ;main.c: 262:             action_to_do = decide_action(redm, greenm, bluem);
  1811   00471C  C3A2  F0EB         	movff	main@redm,decide_action@red_unsigned
  1812   004720  C3A3  F0EC         	movff	main@redm+1,decide_action@red_unsigned+1
  1813   004724  C3A4  F0ED         	movff	main@greenm,decide_action@green_unsigned
  1814   004728  C3A5  F0EE         	movff	main@greenm+1,decide_action@green_unsigned+1
  1815   00472C  C3A6  F0EF         	movff	main@bluem,decide_action@blue_unsigned
  1816   004730  C3A7  F0F0         	movff	main@bluem+1,decide_action@blue_unsigned+1
  1817   004734  EC81  F019         	call	_decide_action	;wreg free
  1818   004738  6E58               	movwf	??_main^0,c
  1819   00473A  5058               	movf	??_main^0,w,c
  1820   00473C  0103               	movlb	3	; () banked
  1821   00473E  6FB2               	movwf	main@action_to_do& (0+255),b
  1822   004740  6BB3               	clrf	(main@action_to_do+1)& (0+255),b
  1823   004742                     
  1824                           ; BSR set to: 3
  1825                           ;main.c: 265:             actions[actions_completed] = action_to_do;
  1826   004742  90D8               	bcf	status,0,c
  1827   004744  35B0               	rlcf	main@actions_completed& (0+255),w,b
  1828   004746  6ED9               	movwf	fsr2l,c
  1829   004748  35B1               	rlcf	(main@actions_completed+1)& (0+255),w,b
  1830   00474A  6EDA               	movwf	fsr2h,c
  1831   00474C  0E3C               	movlw	low main@actions
  1832   00474E  26D9               	addwf	fsr2l,f,c
  1833   004750  0E03               	movlw	high main@actions
  1834   004752  22DA               	addwfc	fsr2h,f,c
  1835   004754  C3B2  FFDE         	movff	main@action_to_do,postinc2
  1836   004758  C3B3  FFDD         	movff	main@action_to_do+1,postdec2
  1837   00475C                     
  1838                           ; BSR set to: 3
  1839                           ;main.c: 266:             actions_completed += 1;
  1840   00475C  4BB0               	infsnz	main@actions_completed& (0+255),f,b
  1841   00475E  2BB1               	incf	(main@actions_completed+1)& (0+255),f,b
  1842   004760                     
  1843                           ; BSR set to: 3
  1844                           ;main.c: 269:             if(action_to_do == 0){
  1845   004760  51B2               	movf	main@action_to_do& (0+255),w,b
  1846   004762  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1847   004764  A4D8               	btfss	status,2,c
  1848   004766  EFB7  F023         	goto	u7691
  1849   00476A  EFB9  F023         	goto	u7690
  1850   00476E                     u7691:
  1851   00476E  EFCF  F023         	goto	l7693
  1852   004772                     u7690:
  1853   004772                     
  1854                           ; BSR set to: 3
  1855                           ;main.c: 270:                 reverse_after_read(pmL, pmR);
  1856   004772  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  1857   004776  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1858   00477A  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  1859   00477E  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1860   004782  EC1A  F032         	call	_reverse_after_read	;wreg free
  1861                           
  1862                           ;main.c: 271:                 turn_right_90(pmL, pmR);
  1863   004786  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  1864   00478A  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1865   00478E  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  1866   004792  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1867   004796  EC8C  F034         	call	_turn_right_90	;wreg free
  1868                           
  1869                           ;main.c: 272:             }
  1870   00479A  EFE2  F024         	goto	l7725
  1871   00479E                     l7693:
  1872                           
  1873                           ; BSR set to: 3
  1874   00479E  05B2               	decf	main@action_to_do& (0+255),w,b
  1875   0047A0  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1876   0047A2  A4D8               	btfss	status,2,c
  1877   0047A4  EFD6  F023         	goto	u7701
  1878   0047A8  EFD8  F023         	goto	u7700
  1879   0047AC                     u7701:
  1880   0047AC  EFEE  F023         	goto	l7697
  1881   0047B0                     u7700:
  1882   0047B0                     
  1883                           ; BSR set to: 3
  1884                           ;main.c: 274:                 reverse_after_read(pmL, pmR);
  1885   0047B0  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  1886   0047B4  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1887   0047B8  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  1888   0047BC  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1889   0047C0  EC1A  F032         	call	_reverse_after_read	;wreg free
  1890                           
  1891                           ;main.c: 275:                 turn_left_90(pmL, pmR);
  1892   0047C4  C3C6  F019         	movff	main@pmL,turn_left_90@mL
  1893   0047C8  C3C7  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  1894   0047CC  C3C8  F01B         	movff	main@pmR,turn_left_90@mR
  1895   0047D0  C3C9  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  1896   0047D4  EC01  F035         	call	_turn_left_90	;wreg free
  1897                           
  1898                           ;main.c: 276:             }
  1899   0047D8  EFE2  F024         	goto	l7725
  1900   0047DC                     l7697:
  1901                           
  1902                           ; BSR set to: 3
  1903   0047DC  0E02               	movlw	2
  1904   0047DE  19B2               	xorwf	main@action_to_do& (0+255),w,b
  1905   0047E0  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1906   0047E2  A4D8               	btfss	status,2,c
  1907   0047E4  EFF6  F023         	goto	u7711
  1908   0047E8  EFF8  F023         	goto	u7710
  1909   0047EC                     u7711:
  1910   0047EC  EF18  F024         	goto	l7701
  1911   0047F0                     u7710:
  1912   0047F0                     
  1913                           ; BSR set to: 3
  1914                           ;main.c: 278:                 reverse_after_read(pmL, pmR);
  1915   0047F0  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  1916   0047F4  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1917   0047F8  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  1918   0047FC  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1919   004800  EC1A  F032         	call	_reverse_after_read	;wreg free
  1920                           
  1921                           ;main.c: 279:                 turn_right_90(pmL, pmR);
  1922   004804  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  1923   004808  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1924   00480C  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  1925   004810  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1926   004814  EC8C  F034         	call	_turn_right_90	;wreg free
  1927                           
  1928                           ;main.c: 280:                 turn_right_90(pmL, pmR);
  1929   004818  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  1930   00481C  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1931   004820  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  1932   004824  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1933   004828  EC8C  F034         	call	_turn_right_90	;wreg free
  1934                           
  1935                           ;main.c: 281:             }
  1936   00482C  EFE2  F024         	goto	l7725
  1937   004830                     l7701:
  1938                           
  1939                           ; BSR set to: 3
  1940   004830  0E03               	movlw	3
  1941   004832  19B2               	xorwf	main@action_to_do& (0+255),w,b
  1942   004834  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1943   004836  A4D8               	btfss	status,2,c
  1944   004838  EF20  F024         	goto	u7721
  1945   00483C  EF22  F024         	goto	u7720
  1946   004840                     u7721:
  1947   004840  EF42  F024         	goto	l7705
  1948   004844                     u7720:
  1949   004844                     
  1950                           ; BSR set to: 3
  1951                           ;main.c: 283:                 reverse_after_read(pmL, pmR);
  1952   004844  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  1953   004848  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1954   00484C  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  1955   004850  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1956   004854  EC1A  F032         	call	_reverse_after_read	;wreg free
  1957                           
  1958                           ;main.c: 284:                 reverse_one_square(pmL, pmR);
  1959   004858  C3C6  F019         	movff	main@pmL,reverse_one_square@mL
  1960   00485C  C3C7  F01A         	movff	main@pmL+1,reverse_one_square@mL+1
  1961   004860  C3C8  F01B         	movff	main@pmR,reverse_one_square@mR
  1962   004864  C3C9  F01C         	movff	main@pmR+1,reverse_one_square@mR+1
  1963   004868  EC1F  F033         	call	_reverse_one_square	;wreg free
  1964                           
  1965                           ;main.c: 285:                 turn_right_90(pmL, pmR);
  1966   00486C  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  1967   004870  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1968   004874  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  1969   004878  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1970   00487C  EC8C  F034         	call	_turn_right_90	;wreg free
  1971                           
  1972                           ;main.c: 286:             }
  1973   004880  EFE2  F024         	goto	l7725
  1974   004884                     l7705:
  1975                           
  1976                           ; BSR set to: 3
  1977   004884  0E04               	movlw	4
  1978   004886  19B2               	xorwf	main@action_to_do& (0+255),w,b
  1979   004888  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1980   00488A  A4D8               	btfss	status,2,c
  1981   00488C  EF4A  F024         	goto	u7731
  1982   004890  EF4C  F024         	goto	u7730
  1983   004894                     u7731:
  1984   004894  EF6C  F024         	goto	l7709
  1985   004898                     u7730:
  1986   004898                     
  1987                           ; BSR set to: 3
  1988                           ;main.c: 288:                 reverse_after_read(pmL, pmR);
  1989   004898  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  1990   00489C  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1991   0048A0  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  1992   0048A4  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1993   0048A8  EC1A  F032         	call	_reverse_after_read	;wreg free
  1994                           
  1995                           ;main.c: 289:                 reverse_one_square(pmL, pmR);
  1996   0048AC  C3C6  F019         	movff	main@pmL,reverse_one_square@mL
  1997   0048B0  C3C7  F01A         	movff	main@pmL+1,reverse_one_square@mL+1
  1998   0048B4  C3C8  F01B         	movff	main@pmR,reverse_one_square@mR
  1999   0048B8  C3C9  F01C         	movff	main@pmR+1,reverse_one_square@mR+1
  2000   0048BC  EC1F  F033         	call	_reverse_one_square	;wreg free
  2001                           
  2002                           ;main.c: 290:                 turn_left_90(pmL, pmR);
  2003   0048C0  C3C6  F019         	movff	main@pmL,turn_left_90@mL
  2004   0048C4  C3C7  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  2005   0048C8  C3C8  F01B         	movff	main@pmR,turn_left_90@mR
  2006   0048CC  C3C9  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  2007   0048D0  EC01  F035         	call	_turn_left_90	;wreg free
  2008                           
  2009                           ;main.c: 291:             }
  2010   0048D4  EFE2  F024         	goto	l7725
  2011   0048D8                     l7709:
  2012                           
  2013                           ; BSR set to: 3
  2014   0048D8  0E05               	movlw	5
  2015   0048DA  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2016   0048DC  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2017   0048DE  A4D8               	btfss	status,2,c
  2018   0048E0  EF74  F024         	goto	u7741
  2019   0048E4  EF76  F024         	goto	u7740
  2020   0048E8                     u7741:
  2021   0048E8  EF8C  F024         	goto	l7713
  2022   0048EC                     u7740:
  2023   0048EC                     
  2024                           ; BSR set to: 3
  2025                           ;main.c: 293:                 reverse_after_read(pmL, pmR);
  2026   0048EC  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  2027   0048F0  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2028   0048F4  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  2029   0048F8  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2030   0048FC  EC1A  F032         	call	_reverse_after_read	;wreg free
  2031                           
  2032                           ;main.c: 294:                 turn_left_135(pmL, pmR);
  2033   004900  C3C6  F019         	movff	main@pmL,turn_left_135@mL
  2034   004904  C3C7  F01A         	movff	main@pmL+1,turn_left_135@mL+1
  2035   004908  C3C8  F01B         	movff	main@pmR,turn_left_135@mR
  2036   00490C  C3C9  F01C         	movff	main@pmR+1,turn_left_135@mR+1
  2037   004910  EC16  F034         	call	_turn_left_135	;wreg free
  2038                           
  2039                           ;main.c: 295:             }
  2040   004914  EFE2  F024         	goto	l7725
  2041   004918                     l7713:
  2042                           
  2043                           ; BSR set to: 3
  2044   004918  0E06               	movlw	6
  2045   00491A  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2046   00491C  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2047   00491E  A4D8               	btfss	status,2,c
  2048   004920  EF94  F024         	goto	u7751
  2049   004924  EF96  F024         	goto	u7750
  2050   004928                     u7751:
  2051   004928  EFAC  F024         	goto	l7717
  2052   00492C                     u7750:
  2053   00492C                     
  2054                           ; BSR set to: 3
  2055                           ;main.c: 297:                 reverse_after_read(pmL, pmR);
  2056   00492C  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  2057   004930  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2058   004934  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  2059   004938  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2060   00493C  EC1A  F032         	call	_reverse_after_read	;wreg free
  2061                           
  2062                           ;main.c: 298:                 turn_right_135(pmL, pmR);
  2063   004940  C3C6  F019         	movff	main@pmL,turn_right_135@mL
  2064   004944  C3C7  F01A         	movff	main@pmL+1,turn_right_135@mL+1
  2065   004948  C3C8  F01B         	movff	main@pmR,turn_right_135@mR
  2066   00494C  C3C9  F01C         	movff	main@pmR+1,turn_right_135@mR+1
  2067   004950  ECA0  F033         	call	_turn_right_135	;wreg free
  2068                           
  2069                           ;main.c: 299:             }
  2070   004954  EFE2  F024         	goto	l7725
  2071   004958                     l7717:
  2072                           
  2073                           ; BSR set to: 3
  2074   004958  0E07               	movlw	7
  2075   00495A  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2076   00495C  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2077   00495E  A4D8               	btfss	status,2,c
  2078   004960  EFB4  F024         	goto	u7761
  2079   004964  EFB6  F024         	goto	u7760
  2080   004968                     u7761:
  2081   004968  EFE2  F024         	goto	l375
  2082   00496C                     u7760:
  2083   00496C                     
  2084                           ; BSR set to: 3
  2085                           ;main.c: 303:                 reverse_after_read(pmL, pmR);
  2086   00496C  C3C6  F019         	movff	main@pmL,reverse_after_read@mL
  2087   004970  C3C7  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2088   004974  C3C8  F01B         	movff	main@pmR,reverse_after_read@mR
  2089   004978  C3C9  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2090   00497C  EC1A  F032         	call	_reverse_after_read	;wreg free
  2091                           
  2092                           ;main.c: 304:                 turn_right_90(pmL, pmR);
  2093   004980  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2094   004984  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2095   004988  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2096   00498C  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2097   004990  EC8C  F034         	call	_turn_right_90	;wreg free
  2098   004994                     
  2099                           ;main.c: 305:                 _delay((unsigned long)((250)*(64000000/4000.0)));
  2100   004994  0E15               	movlw	21
  2101   004996  6E59               	movwf	(??_main+1)^0,c
  2102   004998  0E4B               	movlw	75
  2103   00499A  6E58               	movwf	??_main^0,c
  2104   00499C  0EBE               	movlw	190
  2105   00499E                     u7927:
  2106   00499E  2EE8               	decfsz	wreg,f,c
  2107   0049A0  D7FE               	bra	u7927
  2108   0049A2  2E58               	decfsz	??_main^0,f,c
  2109   0049A4  D7FC               	bra	u7927
  2110   0049A6  2E59               	decfsz	(??_main+1)^0,f,c
  2111   0049A8  D7FA               	bra	u7927
  2112   0049AA  D000               	nop2	
  2113   0049AC                     
  2114                           ;main.c: 306:                 turn_right_90(pmL, pmR);
  2115   0049AC  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2116   0049B0  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2117   0049B4  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2118   0049B8  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2119   0049BC  EC8C  F034         	call	_turn_right_90	;wreg free
  2120                           
  2121                           ;main.c: 307:                 break;
  2122   0049C0  EF0A  F025         	goto	l7733
  2123   0049C4                     l375:
  2124   0049C4                     l7725:
  2125                           
  2126                           ;main.c: 309:             _delay((unsigned long)((250)*(64000000/4000.0)));
  2127   0049C4  0E15               	movlw	21
  2128   0049C6  6E59               	movwf	(??_main+1)^0,c
  2129   0049C8  0E4B               	movlw	75
  2130   0049CA  6E58               	movwf	??_main^0,c
  2131   0049CC  0EBE               	movlw	190
  2132   0049CE                     u7937:
  2133   0049CE  2EE8               	decfsz	wreg,f,c
  2134   0049D0  D7FE               	bra	u7937
  2135   0049D2  2E58               	decfsz	??_main^0,f,c
  2136   0049D4  D7FC               	bra	u7937
  2137   0049D6  2E59               	decfsz	(??_main+1)^0,f,c
  2138   0049D8  D7FA               	bra	u7937
  2139   0049DA  D000               	nop2	
  2140   0049DC                     
  2141                           ;main.c: 311:             sprintf(clear_val,"action = %d \r\n",action_to_do);
  2142   0049DC  0E64               	movlw	low main@clear_val
  2143   0049DE  6E1B               	movwf	sprintf@s^0,c
  2144   0049E0  0E03               	movlw	high main@clear_val
  2145   0049E2  6E1C               	movwf	(sprintf@s+1)^0,c
  2146   0049E4  0E71               	movlw	low STR_1
  2147   0049E6  6E1D               	movwf	sprintf@fmt^0,c
  2148   0049E8  C3B2  F01E         	movff	main@action_to_do,?_sprintf+3
  2149   0049EC  C3B3  F01F         	movff	main@action_to_do+1,?_sprintf+4
  2150   0049F0  ECDF  F039         	call	_sprintf	;wreg free
  2151   0049F4                     
  2152                           ;main.c: 312:             sendStringSerial4(pclear_val);
  2153   0049F4  C3A8  F003         	movff	main@pclear_val,sendStringSerial4@string
  2154   0049F8  C3A9  F004         	movff	main@pclear_val+1,sendStringSerial4@string+1
  2155   0049FC  EC33  F03A         	call	_sendStringSerial4	;wreg free
  2156   004A00                     
  2157                           ;main.c: 313:         _delay((unsigned long)((5)*(64000000/4000.0)));
  2158   004A00  0E68               	movlw	104
  2159   004A02  6E58               	movwf	??_main^0,c
  2160   004A04  0EE4               	movlw	228
  2161   004A06                     u7947:
  2162   004A06  2EE8               	decfsz	wreg,f,c
  2163   004A08  D7FE               	bra	u7947
  2164   004A0A  2E58               	decfsz	??_main^0,f,c
  2165   004A0C  D7FC               	bra	u7947
  2166   004A0E  D000               	nop2	
  2167   004A10  EFE7  F022         	goto	l7641
  2168   004A14                     l7733:
  2169                           
  2170                           ;main.c: 321:     actions_completed -= 1;
  2171   004A14  0103               	movlb	3	; () banked
  2172   004A16  07B0               	decf	main@actions_completed& (0+255),f,b
  2173   004A18  A0D8               	btfss	status,0,c
  2174   004A1A  07B1               	decf	(main@actions_completed+1)& (0+255),f,b
  2175   004A1C                     
  2176                           ; BSR set to: 3
  2177                           ;main.c: 324:     going_forward = 0;
  2178   004A1C  0E00               	movlw	0
  2179   004A1E  6FAE               	movwf	main@going_forward& (0+255),b
  2180   004A20                     
  2181                           ; BSR set to: 3
  2182                           ;main.c: 327:     for(char i = 0; i < 20; i +=1){
  2183   004A20  0E00               	movlw	0
  2184   004A22  6FAF               	movwf	main@i& (0+255),b
  2185   004A24                     l7739:
  2186                           
  2187                           ; BSR set to: 3
  2188   004A24  0E13               	movlw	19
  2189   004A26  65AF               	cpfsgt	main@i& (0+255),b
  2190   004A28  EF18  F025         	goto	u7771
  2191   004A2C  EF1A  F025         	goto	u7770
  2192   004A30                     u7771:
  2193   004A30  EF1C  F025         	goto	l7743
  2194   004A34                     u7770:
  2195   004A34  EF46  F026         	goto	l7811
  2196   004A38                     l7743:
  2197                           
  2198                           ; BSR set to: 3
  2199                           ;main.c: 328:         timings[i] -= 130;
  2200   004A38  51AF               	movf	main@i& (0+255),w,b
  2201   004A3A  0D02               	mullw	2
  2202   004A3C  0E78               	movlw	low main@timings
  2203   004A3E  24F3               	addwf	243,w,c
  2204   004A40  6ED9               	movwf	fsr2l,c
  2205   004A42  0E03               	movlw	high main@timings
  2206   004A44  20F4               	addwfc	prodh,w,c
  2207   004A46  6EDA               	movwf	fsr2h,c
  2208   004A48  0E82               	movlw	130
  2209   004A4A  5EDE               	subwf	postinc2,f,c
  2210   004A4C  0E00               	movlw	0
  2211   004A4E  5ADD               	subwfb	postdec2,f,c
  2212   004A50                     
  2213                           ; BSR set to: 3
  2214                           ;main.c: 329:         if(i > 7){
  2215   004A50  0E07               	movlw	7
  2216   004A52  65AF               	cpfsgt	main@i& (0+255),b
  2217   004A54  EF2E  F025         	goto	u7781
  2218   004A58  EF30  F025         	goto	u7780
  2219   004A5C                     u7781:
  2220   004A5C  EF3C  F025         	goto	l7749
  2221   004A60                     u7780:
  2222   004A60                     
  2223                           ; BSR set to: 3
  2224                           ;main.c: 330:               timings[i] -= 250;
  2225   004A60  51AF               	movf	main@i& (0+255),w,b
  2226   004A62  0D02               	mullw	2
  2227   004A64  0E78               	movlw	low main@timings
  2228   004A66  24F3               	addwf	243,w,c
  2229   004A68  6ED9               	movwf	fsr2l,c
  2230   004A6A  0E03               	movlw	high main@timings
  2231   004A6C  20F4               	addwfc	prodh,w,c
  2232   004A6E  6EDA               	movwf	fsr2h,c
  2233   004A70  0EFA               	movlw	250
  2234   004A72  5EDE               	subwf	postinc2,f,c
  2235   004A74  0E00               	movlw	0
  2236   004A76  5ADD               	subwfb	postdec2,f,c
  2237   004A78                     l7749:
  2238                           
  2239                           ; BSR set to: 3
  2240                           ;main.c: 332:     }
  2241   004A78  2BAF               	incf	main@i& (0+255),f,b
  2242   004A7A  EF12  F025         	goto	l7739
  2243   004A7E                     l7753:
  2244                           
  2245                           ; BSR set to: 3
  2246                           ;main.c: 337:         if(!going_forward){
  2247   004A7E  51AE               	movf	main@going_forward& (0+255),w,b
  2248   004A80  A4D8               	btfss	status,2,c
  2249   004A82  EF45  F025         	goto	u7791
  2250   004A86  EF47  F025         	goto	u7790
  2251   004A8A                     u7791:
  2252   004A8A  EF56  F025         	goto	l7761
  2253   004A8E                     u7790:
  2254   004A8E                     
  2255                           ; BSR set to: 3
  2256                           ;main.c: 338:             resetTimer0();
  2257   004A8E  EC02  F03B         	call	_resetTimer0	;wreg free
  2258   004A92                     
  2259                           ;main.c: 339:             fullSpeedAhead(pmL, pmR);
  2260   004A92  C3C6  F015         	movff	main@pmL,fullSpeedAhead@mL
  2261   004A96  C3C7  F016         	movff	main@pmL+1,fullSpeedAhead@mL+1
  2262   004A9A  C3C8  F017         	movff	main@pmR,fullSpeedAhead@mR
  2263   004A9E  C3C9  F018         	movff	main@pmR+1,fullSpeedAhead@mR+1
  2264   004AA2  EC4D  F036         	call	_fullSpeedAhead	;wreg free
  2265   004AA6                     
  2266                           ;main.c: 340:             going_forward = 1;
  2267   004AA6  0E01               	movlw	1
  2268   004AA8  0103               	movlb	3	; () banked
  2269   004AAA  6FAE               	movwf	main@going_forward& (0+255),b
  2270   004AAC                     l7761:
  2271                           
  2272                           ; BSR set to: 3
  2273                           ;main.c: 343:         measured_time = get16bitTMR0val();
  2274   004AAC  ECB6  F03A         	call	_get16bitTMR0val	;wreg free
  2275   004AB0  C002  F3AA         	movff	?_get16bitTMR0val,main@measured_time
  2276   004AB4  C003  F3AB         	movff	?_get16bitTMR0val+1,main@measured_time+1
  2277   004AB8                     
  2278                           ;main.c: 344:         if(measured_time > timings[actions_completed]){
  2279   004AB8  90D8               	bcf	status,0,c
  2280   004ABA  0103               	movlb	3	; () banked
  2281   004ABC  35B0               	rlcf	main@actions_completed& (0+255),w,b
  2282   004ABE  6ED9               	movwf	fsr2l,c
  2283   004AC0  35B1               	rlcf	(main@actions_completed+1)& (0+255),w,b
  2284   004AC2  6EDA               	movwf	fsr2h,c
  2285   004AC4  0E78               	movlw	low main@timings
  2286   004AC6  26D9               	addwf	fsr2l,f,c
  2287   004AC8  0E03               	movlw	high main@timings
  2288   004ACA  22DA               	addwfc	fsr2h,f,c
  2289   004ACC  51AA               	movf	main@measured_time& (0+255),w,b
  2290   004ACE  5CDE               	subwf	postinc2,w,c
  2291   004AD0  51AB               	movf	(main@measured_time+1)& (0+255),w,b
  2292   004AD2  58DE               	subwfb	postinc2,w,c
  2293   004AD4  B0D8               	btfsc	status,0,c
  2294   004AD6  EF6F  F025         	goto	u7801
  2295   004ADA  EF71  F025         	goto	u7800
  2296   004ADE                     u7801:
  2297   004ADE  EF3F  F026         	goto	l7809
  2298   004AE2                     u7800:
  2299   004AE2                     
  2300                           ; BSR set to: 3
  2301                           ;main.c: 345:             stop(pmL, pmR);
  2302   004AE2  C3C6  F015         	movff	main@pmL,stop@mL
  2303   004AE6  C3C7  F016         	movff	main@pmL+1,stop@mL+1
  2304   004AEA  C3C8  F017         	movff	main@pmR,stop@mR
  2305   004AEE  C3C9  F018         	movff	main@pmR+1,stop@mR+1
  2306   004AF2  ECB1  F037         	call	_stop	;wreg free
  2307   004AF6                     
  2308                           ;main.c: 346:             going_forward = 0;
  2309   004AF6  0E00               	movlw	0
  2310   004AF8  0103               	movlb	3	; () banked
  2311   004AFA  6FAE               	movwf	main@going_forward& (0+255),b
  2312   004AFC                     
  2313                           ; BSR set to: 3
  2314                           ;main.c: 347:             action_to_do = invert_action(actions[actions_completed - 1]);
  2315   004AFC  C3B0  F058         	movff	main@actions_completed,??_main
  2316   004B00  C3B1  F059         	movff	main@actions_completed+1,??_main+1
  2317   004B04  90D8               	bcf	status,0,c
  2318   004B06  3658               	rlcf	??_main^0,f,c
  2319   004B08  3659               	rlcf	(??_main+1)^0,f,c
  2320   004B0A  0EFE               	movlw	254
  2321   004B0C  2458               	addwf	??_main^0,w,c
  2322   004B0E  6E5A               	movwf	(??_main+2)^0,c
  2323   004B10  0EFF               	movlw	255
  2324   004B12  2059               	addwfc	(??_main+1)^0,w,c
  2325   004B14  6E5B               	movwf	(??_main+3)^0,c
  2326   004B16  0E3C               	movlw	low main@actions
  2327   004B18  245A               	addwf	(??_main+2)^0,w,c
  2328   004B1A  6ED9               	movwf	fsr2l,c
  2329   004B1C  0E03               	movlw	high main@actions
  2330   004B1E  205B               	addwfc	(??_main+3)^0,w,c
  2331   004B20  6EDA               	movwf	fsr2h,c
  2332   004B22  50DF               	movf	indf2,w,c
  2333   004B24  ECFE  F037         	call	_invert_action
  2334   004B28  6E5C               	movwf	(??_main+4)^0,c
  2335   004B2A  505C               	movf	(??_main+4)^0,w,c
  2336   004B2C  0103               	movlb	3	; () banked
  2337   004B2E  6FB2               	movwf	main@action_to_do& (0+255),b
  2338   004B30  6BB3               	clrf	(main@action_to_do+1)& (0+255),b
  2339   004B32                     
  2340                           ; BSR set to: 3
  2341                           ;main.c: 349:             if(action_to_do == 0){
  2342   004B32  51B2               	movf	main@action_to_do& (0+255),w,b
  2343   004B34  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2344   004B36  A4D8               	btfss	status,2,c
  2345   004B38  EFA0  F025         	goto	u7811
  2346   004B3C  EFA2  F025         	goto	u7810
  2347   004B40                     u7811:
  2348   004B40  EFAE  F025         	goto	l7775
  2349   004B44                     u7810:
  2350   004B44                     l7773:
  2351                           
  2352                           ;main.c: 350:                 turn_right_90(pmL, pmR);
  2353   004B44  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2354   004B48  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2355   004B4C  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2356   004B50  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2357   004B54  EC8C  F034         	call	_turn_right_90	;wreg free
  2358                           
  2359                           ;main.c: 351:             }
  2360   004B58  EF1D  F026         	goto	l7801
  2361   004B5C                     l7775:
  2362                           
  2363                           ; BSR set to: 3
  2364   004B5C  05B2               	decf	main@action_to_do& (0+255),w,b
  2365   004B5E  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2366   004B60  A4D8               	btfss	status,2,c
  2367   004B62  EFB5  F025         	goto	u7821
  2368   004B66  EFB7  F025         	goto	u7820
  2369   004B6A                     u7821:
  2370   004B6A  EFC3  F025         	goto	l7779
  2371   004B6E                     u7820:
  2372   004B6E                     
  2373                           ; BSR set to: 3
  2374                           ;main.c: 353:                 turn_left_90(pmL, pmR);
  2375   004B6E  C3C6  F019         	movff	main@pmL,turn_left_90@mL
  2376   004B72  C3C7  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  2377   004B76  C3C8  F01B         	movff	main@pmR,turn_left_90@mR
  2378   004B7A  C3C9  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  2379   004B7E  EC01  F035         	call	_turn_left_90	;wreg free
  2380                           
  2381                           ;main.c: 354:             }
  2382   004B82  EF1D  F026         	goto	l7801
  2383   004B86                     l7779:
  2384                           
  2385                           ; BSR set to: 3
  2386   004B86  0E02               	movlw	2
  2387   004B88  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2388   004B8A  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2389   004B8C  A4D8               	btfss	status,2,c
  2390   004B8E  EFCB  F025         	goto	u7831
  2391   004B92  EFCD  F025         	goto	u7830
  2392   004B96                     u7831:
  2393   004B96  EFE5  F025         	goto	l7787
  2394   004B9A                     u7830:
  2395   004B9A                     
  2396                           ; BSR set to: 3
  2397                           ;main.c: 356:                 turn_right_90(pmL, pmR);
  2398   004B9A  C3C6  F019         	movff	main@pmL,turn_right_90@mL
  2399   004B9E  C3C7  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2400   004BA2  C3C8  F01B         	movff	main@pmR,turn_right_90@mR
  2401   004BA6  C3C9  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2402   004BAA  EC8C  F034         	call	_turn_right_90	;wreg free
  2403   004BAE                     
  2404                           ;main.c: 357:                 _delay((unsigned long)((250)*(64000000/4000.0)));
  2405   004BAE  0E15               	movlw	21
  2406   004BB0  6E59               	movwf	(??_main+1)^0,c
  2407   004BB2  0E4B               	movlw	75
  2408   004BB4  6E58               	movwf	??_main^0,c
  2409   004BB6  0EBE               	movlw	190
  2410   004BB8                     u7957:
  2411   004BB8  2EE8               	decfsz	wreg,f,c
  2412   004BBA  D7FE               	bra	u7957
  2413   004BBC  2E58               	decfsz	??_main^0,f,c
  2414   004BBE  D7FC               	bra	u7957
  2415   004BC0  2E59               	decfsz	(??_main+1)^0,f,c
  2416   004BC2  D7FA               	bra	u7957
  2417   004BC4  D000               	nop2	
  2418   004BC6  EFA2  F025         	goto	l7773
  2419   004BCA                     l7787:
  2420                           
  2421                           ; BSR set to: 3
  2422   004BCA  0E05               	movlw	5
  2423   004BCC  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2424   004BCE  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2425   004BD0  A4D8               	btfss	status,2,c
  2426   004BD2  EFED  F025         	goto	u7841
  2427   004BD6  EFEF  F025         	goto	u7840
  2428   004BDA                     u7841:
  2429   004BDA  EFFB  F025         	goto	l7791
  2430   004BDE                     u7840:
  2431   004BDE                     
  2432                           ; BSR set to: 3
  2433                           ;main.c: 361:                 turn_right_135(pmL, pmR);
  2434   004BDE  C3C6  F019         	movff	main@pmL,turn_right_135@mL
  2435   004BE2  C3C7  F01A         	movff	main@pmL+1,turn_right_135@mL+1
  2436   004BE6  C3C8  F01B         	movff	main@pmR,turn_right_135@mR
  2437   004BEA  C3C9  F01C         	movff	main@pmR+1,turn_right_135@mR+1
  2438   004BEE  ECA0  F033         	call	_turn_right_135	;wreg free
  2439                           
  2440                           ;main.c: 362:             }
  2441   004BF2  EF1D  F026         	goto	l7801
  2442   004BF6                     l7791:
  2443                           
  2444                           ; BSR set to: 3
  2445   004BF6  0E06               	movlw	6
  2446   004BF8  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2447   004BFA  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2448   004BFC  A4D8               	btfss	status,2,c
  2449   004BFE  EF03  F026         	goto	u7851
  2450   004C02  EF05  F026         	goto	u7850
  2451   004C06                     u7851:
  2452   004C06  EF11  F026         	goto	l7795
  2453   004C0A                     u7850:
  2454   004C0A                     
  2455                           ; BSR set to: 3
  2456                           ;main.c: 364:                 turn_left_135(pmL, pmR);
  2457   004C0A  C3C6  F019         	movff	main@pmL,turn_left_135@mL
  2458   004C0E  C3C7  F01A         	movff	main@pmL+1,turn_left_135@mL+1
  2459   004C12  C3C8  F01B         	movff	main@pmR,turn_left_135@mR
  2460   004C16  C3C9  F01C         	movff	main@pmR+1,turn_left_135@mR+1
  2461   004C1A  EC16  F034         	call	_turn_left_135	;wreg free
  2462                           
  2463                           ;main.c: 365:             }
  2464   004C1E  EF1D  F026         	goto	l7801
  2465   004C22                     l7795:
  2466                           
  2467                           ; BSR set to: 3
  2468   004C22  0E08               	movlw	8
  2469   004C24  19B2               	xorwf	main@action_to_do& (0+255),w,b
  2470   004C26  11B3               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2471   004C28  A4D8               	btfss	status,2,c
  2472   004C2A  EF19  F026         	goto	u7861
  2473   004C2E  EF1B  F026         	goto	u7860
  2474   004C32                     u7861:
  2475   004C32  EF1D  F026         	goto	l397
  2476   004C36                     u7860:
  2477   004C36  EF1D  F026         	goto	l7801
  2478   004C3A                     l397:
  2479   004C3A                     l7801:
  2480                           
  2481                           ;main.c: 372:             _delay((unsigned long)((250)*(64000000/4000.0)));
  2482   004C3A  0E15               	movlw	21
  2483   004C3C  6E59               	movwf	(??_main+1)^0,c
  2484   004C3E  0E4B               	movlw	75
  2485   004C40  6E58               	movwf	??_main^0,c
  2486   004C42  0EBE               	movlw	190
  2487   004C44                     u7967:
  2488   004C44  2EE8               	decfsz	wreg,f,c
  2489   004C46  D7FE               	bra	u7967
  2490   004C48  2E58               	decfsz	??_main^0,f,c
  2491   004C4A  D7FC               	bra	u7967
  2492   004C4C  2E59               	decfsz	(??_main+1)^0,f,c
  2493   004C4E  D7FA               	bra	u7967
  2494   004C50  D000               	nop2	
  2495   004C52                     
  2496                           ;main.c: 374:             sprintf(clear_val,"action = %d \r\n",action_to_do);
  2497   004C52  0E64               	movlw	low main@clear_val
  2498   004C54  6E1B               	movwf	sprintf@s^0,c
  2499   004C56  0E03               	movlw	high main@clear_val
  2500   004C58  6E1C               	movwf	(sprintf@s+1)^0,c
  2501   004C5A  0E71               	movlw	low STR_1
  2502   004C5C  6E1D               	movwf	sprintf@fmt^0,c
  2503   004C5E  C3B2  F01E         	movff	main@action_to_do,?_sprintf+3
  2504   004C62  C3B3  F01F         	movff	main@action_to_do+1,?_sprintf+4
  2505   004C66  ECDF  F039         	call	_sprintf	;wreg free
  2506   004C6A                     
  2507                           ;main.c: 375:             sendStringSerial4(pclear_val);
  2508   004C6A  C3A8  F003         	movff	main@pclear_val,sendStringSerial4@string
  2509   004C6E  C3A9  F004         	movff	main@pclear_val+1,sendStringSerial4@string+1
  2510   004C72  EC33  F03A         	call	_sendStringSerial4	;wreg free
  2511   004C76                     
  2512                           ;main.c: 376:         actions_completed -=1 ;
  2513   004C76  0103               	movlb	3	; () banked
  2514   004C78  07B0               	decf	main@actions_completed& (0+255),f,b
  2515   004C7A  A0D8               	btfss	status,0,c
  2516   004C7C  07B1               	decf	(main@actions_completed+1)& (0+255),f,b
  2517   004C7E                     l7809:
  2518                           
  2519                           ; BSR set to: 3
  2520                           ;main.c: 378:     _delay((unsigned long)((10)*(64000000/4000.0)));
  2521   004C7E  0ED0               	movlw	208
  2522   004C80  6E58               	movwf	??_main^0,c
  2523   004C82  0ECA               	movlw	202
  2524   004C84                     u7977:
  2525   004C84  2EE8               	decfsz	wreg,f,c
  2526   004C86  D7FE               	bra	u7977
  2527   004C88  2E58               	decfsz	??_main^0,f,c
  2528   004C8A  D7FC               	bra	u7977
  2529   004C8C                     l7811:
  2530                           
  2531                           ;main.c: 336:     while(actions_completed >= 0){
  2532   004C8C  0103               	movlb	3	; () banked
  2533   004C8E  BFB1               	btfsc	(main@actions_completed+1)& (0+255),7,b
  2534   004C90  EF4E  F026         	goto	u7870
  2535   004C94  EF4C  F026         	goto	u7871
  2536   004C98                     u7871:
  2537   004C98  EF3F  F025         	goto	l7753
  2538   004C9C                     u7870:
  2539   004C9C                     
  2540                           ; BSR set to: 3
  2541                           ;main.c: 380:     stop(pmL, pmR);
  2542   004C9C  C3C6  F015         	movff	main@pmL,stop@mL
  2543   004CA0  C3C7  F016         	movff	main@pmL+1,stop@mL+1
  2544   004CA4  C3C8  F017         	movff	main@pmR,stop@mR
  2545   004CA8  C3C9  F018         	movff	main@pmR+1,stop@mR+1
  2546   004CAC  ECB1  F037         	call	_stop	;wreg free
  2547   004CB0  EF12  F000         	goto	start
  2548   004CB4                     __end_of_main:
  2549                           	callstack 0
  2550                           
  2551 ;; *************** function _turn_right_90 *****************
  2552 ;; Defined at:
  2553 ;;		line 143 in file "dc_motor.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2556 ;;		 -> main@motorL(9), 
  2557 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2558 ;;		 -> main@motorR(9), 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2570 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2573 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2574 ;;Total ram usage:        6 bytes
  2575 ;; Hardware stack levels used: 1
  2576 ;; Hardware stack levels required when called: 5
  2577 ;; This function calls:
  2578 ;;		_setMotorPWM
  2579 ;;		_stop
  2580 ;; This function is called by:
  2581 ;;		_main
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text1
  2586   006918                     __ptext1:
  2587                           	callstack 0
  2588   006918                     _turn_right_90:
  2589                           	callstack 25
  2590   006918                     
  2591                           ;dc_motor.c: 144:     mL->direction = 0;
  2592   006918  EE20 F001          	lfsr	2,1
  2593   00691C  5019               	movf	turn_right_90@mL^0,w,c
  2594   00691E  26D9               	addwf	fsr2l,f,c
  2595   006920  501A               	movf	(turn_right_90@mL+1)^0,w,c
  2596   006922  22DA               	addwfc	fsr2h,f,c
  2597   006924  6ADF               	clrf	indf2,c
  2598                           
  2599                           ;dc_motor.c: 145:     mR->direction = 1;
  2600   006926  EE20 F001          	lfsr	2,1
  2601   00692A  501B               	movf	turn_right_90@mR^0,w,c
  2602   00692C  26D9               	addwf	fsr2l,f,c
  2603   00692E  501C               	movf	(turn_right_90@mR+1)^0,w,c
  2604   006930  22DA               	addwfc	fsr2h,f,c
  2605   006932  0E01               	movlw	1
  2606   006934  6EDF               	movwf	indf2,c
  2607                           
  2608                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2609   006936  EFD3  F034         	goto	l222
  2610   00693A                     l5299:
  2611                           
  2612                           ;dc_motor.c: 148:         if ((mL->power) < 70) (mL->power) += 1;
  2613   00693A  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2614   00693E  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2615   006942  0E46               	movlw	70
  2616   006944  60DF               	cpfslt	indf2,c
  2617   006946  EFA7  F034         	goto	u5341
  2618   00694A  EFA9  F034         	goto	u5340
  2619   00694E                     u5341:
  2620   00694E  EFAE  F034         	goto	l5303
  2621   006952                     u5340:
  2622   006952  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2623   006956  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2624   00695A  2ADF               	incf	indf2,f,c
  2625   00695C                     l5303:
  2626                           
  2627                           ;dc_motor.c: 149:         if ((mR->power) < 70) (mR->power) += 1;
  2628   00695C  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2629   006960  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2630   006964  0E46               	movlw	70
  2631   006966  60DF               	cpfslt	indf2,c
  2632   006968  EFB8  F034         	goto	u5351
  2633   00696C  EFBA  F034         	goto	u5350
  2634   006970                     u5351:
  2635   006970  EFBF  F034         	goto	l5307
  2636   006974                     u5350:
  2637   006974  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2638   006978  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2639   00697C  2ADF               	incf	indf2,f,c
  2640   00697E                     l5307:
  2641                           
  2642                           ;dc_motor.c: 151:         setMotorPWM(mL);
  2643   00697E  C019  F00F         	movff	turn_right_90@mL,setMotorPWM@m
  2644   006982  C01A  F010         	movff	turn_right_90@mL+1,setMotorPWM@m+1
  2645   006986  EC64  F031         	call	_setMotorPWM	;wreg free
  2646   00698A                     
  2647                           ;dc_motor.c: 152:         setMotorPWM(mR);
  2648   00698A  C01B  F00F         	movff	turn_right_90@mR,setMotorPWM@m
  2649   00698E  C01C  F010         	movff	turn_right_90@mR+1,setMotorPWM@m+1
  2650   006992  EC64  F031         	call	_setMotorPWM	;wreg free
  2651   006996                     
  2652                           ;dc_motor.c: 153:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2653   006996  0E15               	movlw	21
  2654   006998  6E1D               	movwf	??_turn_right_90^0,c
  2655   00699A  0EC6               	movlw	198
  2656   00699C                     u7987:
  2657   00699C  2EE8               	decfsz	wreg,f,c
  2658   00699E  D7FE               	bra	u7987
  2659   0069A0  2E1D               	decfsz	??_turn_right_90^0,f,c
  2660   0069A2  D7FC               	bra	u7987
  2661   0069A4  D000               	nop2	
  2662   0069A6                     l222:
  2663                           
  2664                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2665   0069A6  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2666   0069AA  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2667   0069AE  0E45               	movlw	69
  2668   0069B0  64DF               	cpfsgt	indf2,c
  2669   0069B2  EFDD  F034         	goto	u5361
  2670   0069B6  EFDF  F034         	goto	u5360
  2671   0069BA                     u5361:
  2672   0069BA  EF9D  F034         	goto	l5299
  2673   0069BE                     u5360:
  2674   0069BE  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2675   0069C2  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2676   0069C6  0E45               	movlw	69
  2677   0069C8  64DF               	cpfsgt	indf2,c
  2678   0069CA  EFE9  F034         	goto	u5371
  2679   0069CE  EFEB  F034         	goto	u5370
  2680   0069D2                     u5371:
  2681   0069D2  EF9D  F034         	goto	l5299
  2682   0069D6                     u5370:
  2683   0069D6                     
  2684                           ;dc_motor.c: 155:     _delay((unsigned long)((450)*(64000000/4000.0)));
  2685   0069D6  0E25               	movlw	37
  2686   0069D8  6E1E               	movwf	(??_turn_right_90+1)^0,c
  2687   0069DA  0E87               	movlw	135
  2688   0069DC  6E1D               	movwf	??_turn_right_90^0,c
  2689   0069DE  0E8C               	movlw	140
  2690   0069E0                     u7997:
  2691   0069E0  2EE8               	decfsz	wreg,f,c
  2692   0069E2  D7FE               	bra	u7997
  2693   0069E4  2E1D               	decfsz	??_turn_right_90^0,f,c
  2694   0069E6  D7FC               	bra	u7997
  2695   0069E8  2E1E               	decfsz	(??_turn_right_90+1)^0,f,c
  2696   0069EA  D7FA               	bra	u7997
  2697   0069EC                     
  2698                           ;dc_motor.c: 156:     stop(mL, mR);
  2699   0069EC  C019  F015         	movff	turn_right_90@mL,stop@mL
  2700   0069F0  C01A  F016         	movff	turn_right_90@mL+1,stop@mL+1
  2701   0069F4  C01B  F017         	movff	turn_right_90@mR,stop@mR
  2702   0069F8  C01C  F018         	movff	turn_right_90@mR+1,stop@mR+1
  2703   0069FC  ECB1  F037         	call	_stop	;wreg free
  2704   006A00  0012               	return		;funcret
  2705   006A02                     __end_of_turn_right_90:
  2706                           	callstack 0
  2707                           
  2708 ;; *************** function _turn_right_135 *****************
  2709 ;; Defined at:
  2710 ;;		line 177 in file "dc_motor.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2713 ;;		 -> main@motorL(9), 
  2714 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2715 ;;		 -> main@motorR(9), 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2730 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2731 ;;Total ram usage:        6 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; Hardware stack levels required when called: 5
  2734 ;; This function calls:
  2735 ;;		_setMotorPWM
  2736 ;;		_stop
  2737 ;; This function is called by:
  2738 ;;		_main
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           	psect	text2
  2743   006740                     __ptext2:
  2744                           	callstack 0
  2745   006740                     _turn_right_135:
  2746                           	callstack 25
  2747   006740                     
  2748                           ;dc_motor.c: 178:     mL->direction = 0;
  2749   006740  EE20 F001          	lfsr	2,1
  2750   006744  5019               	movf	turn_right_135@mL^0,w,c
  2751   006746  26D9               	addwf	fsr2l,f,c
  2752   006748  501A               	movf	(turn_right_135@mL+1)^0,w,c
  2753   00674A  22DA               	addwfc	fsr2h,f,c
  2754   00674C  6ADF               	clrf	indf2,c
  2755                           
  2756                           ;dc_motor.c: 179:     mR->direction = 1;
  2757   00674E  EE20 F001          	lfsr	2,1
  2758   006752  501B               	movf	turn_right_135@mR^0,w,c
  2759   006754  26D9               	addwf	fsr2l,f,c
  2760   006756  501C               	movf	(turn_right_135@mR+1)^0,w,c
  2761   006758  22DA               	addwfc	fsr2h,f,c
  2762   00675A  0E01               	movlw	1
  2763   00675C  6EDF               	movwf	indf2,c
  2764                           
  2765                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2766   00675E  EFE7  F033         	goto	l238
  2767   006762                     l5343:
  2768                           
  2769                           ;dc_motor.c: 182:         if ((mL->power) < 70) (mL->power) += 1;
  2770   006762  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2771   006766  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2772   00676A  0E46               	movlw	70
  2773   00676C  60DF               	cpfslt	indf2,c
  2774   00676E  EFBB  F033         	goto	u5421
  2775   006772  EFBD  F033         	goto	u5420
  2776   006776                     u5421:
  2777   006776  EFC2  F033         	goto	l5347
  2778   00677A                     u5420:
  2779   00677A  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2780   00677E  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2781   006782  2ADF               	incf	indf2,f,c
  2782   006784                     l5347:
  2783                           
  2784                           ;dc_motor.c: 183:         if ((mR->power) < 70) (mR->power) += 1;
  2785   006784  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2786   006788  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2787   00678C  0E46               	movlw	70
  2788   00678E  60DF               	cpfslt	indf2,c
  2789   006790  EFCC  F033         	goto	u5431
  2790   006794  EFCE  F033         	goto	u5430
  2791   006798                     u5431:
  2792   006798  EFD3  F033         	goto	l5351
  2793   00679C                     u5430:
  2794   00679C  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2795   0067A0  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2796   0067A4  2ADF               	incf	indf2,f,c
  2797   0067A6                     l5351:
  2798                           
  2799                           ;dc_motor.c: 185:         setMotorPWM(mL);
  2800   0067A6  C019  F00F         	movff	turn_right_135@mL,setMotorPWM@m
  2801   0067AA  C01A  F010         	movff	turn_right_135@mL+1,setMotorPWM@m+1
  2802   0067AE  EC64  F031         	call	_setMotorPWM	;wreg free
  2803   0067B2                     
  2804                           ;dc_motor.c: 186:         setMotorPWM(mR);
  2805   0067B2  C01B  F00F         	movff	turn_right_135@mR,setMotorPWM@m
  2806   0067B6  C01C  F010         	movff	turn_right_135@mR+1,setMotorPWM@m+1
  2807   0067BA  EC64  F031         	call	_setMotorPWM	;wreg free
  2808   0067BE                     
  2809                           ;dc_motor.c: 187:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2810   0067BE  0E15               	movlw	21
  2811   0067C0  6E1D               	movwf	??_turn_right_135^0,c
  2812   0067C2  0EC6               	movlw	198
  2813   0067C4                     u8007:
  2814   0067C4  2EE8               	decfsz	wreg,f,c
  2815   0067C6  D7FE               	bra	u8007
  2816   0067C8  2E1D               	decfsz	??_turn_right_135^0,f,c
  2817   0067CA  D7FC               	bra	u8007
  2818   0067CC  D000               	nop2	
  2819   0067CE                     l238:
  2820                           
  2821                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2822   0067CE  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2823   0067D2  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2824   0067D6  0E45               	movlw	69
  2825   0067D8  64DF               	cpfsgt	indf2,c
  2826   0067DA  EFF1  F033         	goto	u5441
  2827   0067DE  EFF3  F033         	goto	u5440
  2828   0067E2                     u5441:
  2829   0067E2  EFB1  F033         	goto	l5343
  2830   0067E6                     u5440:
  2831   0067E6  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2832   0067EA  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2833   0067EE  0E45               	movlw	69
  2834   0067F0  64DF               	cpfsgt	indf2,c
  2835   0067F2  EFFD  F033         	goto	u5451
  2836   0067F6  EFFF  F033         	goto	u5450
  2837   0067FA                     u5451:
  2838   0067FA  EFB1  F033         	goto	l5343
  2839   0067FE                     u5450:
  2840   0067FE                     
  2841                           ;dc_motor.c: 189:     _delay((unsigned long)((700)*(64000000/4000.0)));
  2842   0067FE  0E39               	movlw	57
  2843   006800  6E1E               	movwf	(??_turn_right_135+1)^0,c
  2844   006802  0ED2               	movlw	210
  2845   006804  6E1D               	movwf	??_turn_right_135^0,c
  2846   006806  0E4C               	movlw	76
  2847   006808                     u8017:
  2848   006808  2EE8               	decfsz	wreg,f,c
  2849   00680A  D7FE               	bra	u8017
  2850   00680C  2E1D               	decfsz	??_turn_right_135^0,f,c
  2851   00680E  D7FC               	bra	u8017
  2852   006810  2E1E               	decfsz	(??_turn_right_135+1)^0,f,c
  2853   006812  D7FA               	bra	u8017
  2854   006814  D000               	nop2	
  2855   006816                     
  2856                           ;dc_motor.c: 190:     stop(mL, mR);
  2857   006816  C019  F015         	movff	turn_right_135@mL,stop@mL
  2858   00681A  C01A  F016         	movff	turn_right_135@mL+1,stop@mL+1
  2859   00681E  C01B  F017         	movff	turn_right_135@mR,stop@mR
  2860   006822  C01C  F018         	movff	turn_right_135@mR+1,stop@mR+1
  2861   006826  ECB1  F037         	call	_stop	;wreg free
  2862   00682A  0012               	return		;funcret
  2863   00682C                     __end_of_turn_right_135:
  2864                           	callstack 0
  2865                           
  2866 ;; *************** function _turn_left_90 *****************
  2867 ;; Defined at:
  2868 ;;		line 126 in file "dc_motor.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2871 ;;		 -> main@motorL(9), 
  2872 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2873 ;;		 -> main@motorR(9), 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2888 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;Total ram usage:        6 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; Hardware stack levels required when called: 5
  2892 ;; This function calls:
  2893 ;;		_setMotorPWM
  2894 ;;		_stop
  2895 ;; This function is called by:
  2896 ;;		_main
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text3
  2901   006A02                     __ptext3:
  2902                           	callstack 0
  2903   006A02                     _turn_left_90:
  2904                           	callstack 25
  2905   006A02                     
  2906                           ;dc_motor.c: 127:     mL->direction = 1;
  2907   006A02  EE20 F001          	lfsr	2,1
  2908   006A06  5019               	movf	turn_left_90@mL^0,w,c
  2909   006A08  26D9               	addwf	fsr2l,f,c
  2910   006A0A  501A               	movf	(turn_left_90@mL+1)^0,w,c
  2911   006A0C  22DA               	addwfc	fsr2h,f,c
  2912   006A0E  0E01               	movlw	1
  2913   006A10  6EDF               	movwf	indf2,c
  2914                           
  2915                           ;dc_motor.c: 128:     mR->direction = 0;
  2916   006A12  EE20 F001          	lfsr	2,1
  2917   006A16  501B               	movf	turn_left_90@mR^0,w,c
  2918   006A18  26D9               	addwf	fsr2l,f,c
  2919   006A1A  501C               	movf	(turn_left_90@mR+1)^0,w,c
  2920   006A1C  22DA               	addwfc	fsr2h,f,c
  2921   006A1E  6ADF               	clrf	indf2,c
  2922                           
  2923                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  2924   006A20  EF48  F035         	goto	l214
  2925   006A24                     l5277:
  2926                           
  2927                           ;dc_motor.c: 131:         if ((mL->power) < 70) (mL->power) += 1;
  2928   006A24  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2929   006A28  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2930   006A2C  0E46               	movlw	70
  2931   006A2E  60DF               	cpfslt	indf2,c
  2932   006A30  EF1C  F035         	goto	u5301
  2933   006A34  EF1E  F035         	goto	u5300
  2934   006A38                     u5301:
  2935   006A38  EF23  F035         	goto	l5281
  2936   006A3C                     u5300:
  2937   006A3C  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2938   006A40  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2939   006A44  2ADF               	incf	indf2,f,c
  2940   006A46                     l5281:
  2941                           
  2942                           ;dc_motor.c: 132:         if ((mR->power) < 70) (mR->power) += 1;
  2943   006A46  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2944   006A4A  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2945   006A4E  0E46               	movlw	70
  2946   006A50  60DF               	cpfslt	indf2,c
  2947   006A52  EF2D  F035         	goto	u5311
  2948   006A56  EF2F  F035         	goto	u5310
  2949   006A5A                     u5311:
  2950   006A5A  EF34  F035         	goto	l5285
  2951   006A5E                     u5310:
  2952   006A5E  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2953   006A62  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2954   006A66  2ADF               	incf	indf2,f,c
  2955   006A68                     l5285:
  2956                           
  2957                           ;dc_motor.c: 134:         setMotorPWM(mL);
  2958   006A68  C019  F00F         	movff	turn_left_90@mL,setMotorPWM@m
  2959   006A6C  C01A  F010         	movff	turn_left_90@mL+1,setMotorPWM@m+1
  2960   006A70  EC64  F031         	call	_setMotorPWM	;wreg free
  2961   006A74                     
  2962                           ;dc_motor.c: 135:         setMotorPWM(mR);
  2963   006A74  C01B  F00F         	movff	turn_left_90@mR,setMotorPWM@m
  2964   006A78  C01C  F010         	movff	turn_left_90@mR+1,setMotorPWM@m+1
  2965   006A7C  EC64  F031         	call	_setMotorPWM	;wreg free
  2966   006A80                     
  2967                           ;dc_motor.c: 136:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2968   006A80  0E15               	movlw	21
  2969   006A82  6E1D               	movwf	??_turn_left_90^0,c
  2970   006A84  0EC6               	movlw	198
  2971   006A86                     u8027:
  2972   006A86  2EE8               	decfsz	wreg,f,c
  2973   006A88  D7FE               	bra	u8027
  2974   006A8A  2E1D               	decfsz	??_turn_left_90^0,f,c
  2975   006A8C  D7FC               	bra	u8027
  2976   006A8E  D000               	nop2	
  2977   006A90                     l214:
  2978                           
  2979                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  2980   006A90  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2981   006A94  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2982   006A98  0E45               	movlw	69
  2983   006A9A  64DF               	cpfsgt	indf2,c
  2984   006A9C  EF52  F035         	goto	u5321
  2985   006AA0  EF54  F035         	goto	u5320
  2986   006AA4                     u5321:
  2987   006AA4  EF12  F035         	goto	l5277
  2988   006AA8                     u5320:
  2989   006AA8  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2990   006AAC  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2991   006AB0  0E45               	movlw	69
  2992   006AB2  64DF               	cpfsgt	indf2,c
  2993   006AB4  EF5E  F035         	goto	u5331
  2994   006AB8  EF60  F035         	goto	u5330
  2995   006ABC                     u5331:
  2996   006ABC  EF12  F035         	goto	l5277
  2997   006AC0                     u5330:
  2998   006AC0                     
  2999                           ;dc_motor.c: 138:     _delay((unsigned long)((450)*(64000000/4000.0)));
  3000   006AC0  0E25               	movlw	37
  3001   006AC2  6E1E               	movwf	(??_turn_left_90+1)^0,c
  3002   006AC4  0E87               	movlw	135
  3003   006AC6  6E1D               	movwf	??_turn_left_90^0,c
  3004   006AC8  0E8C               	movlw	140
  3005   006ACA                     u8037:
  3006   006ACA  2EE8               	decfsz	wreg,f,c
  3007   006ACC  D7FE               	bra	u8037
  3008   006ACE  2E1D               	decfsz	??_turn_left_90^0,f,c
  3009   006AD0  D7FC               	bra	u8037
  3010   006AD2  2E1E               	decfsz	(??_turn_left_90+1)^0,f,c
  3011   006AD4  D7FA               	bra	u8037
  3012   006AD6                     
  3013                           ;dc_motor.c: 139:     stop(mL, mR);
  3014   006AD6  C019  F015         	movff	turn_left_90@mL,stop@mL
  3015   006ADA  C01A  F016         	movff	turn_left_90@mL+1,stop@mL+1
  3016   006ADE  C01B  F017         	movff	turn_left_90@mR,stop@mR
  3017   006AE2  C01C  F018         	movff	turn_left_90@mR+1,stop@mR+1
  3018   006AE6  ECB1  F037         	call	_stop	;wreg free
  3019   006AEA  0012               	return		;funcret
  3020   006AEC                     __end_of_turn_left_90:
  3021                           	callstack 0
  3022                           
  3023 ;; *************** function _turn_left_135 *****************
  3024 ;; Defined at:
  3025 ;;		line 160 in file "dc_motor.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  3028 ;;		 -> main@motorL(9), 
  3029 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  3030 ;;		 -> main@motorR(9), 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3042 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3045 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;Total ram usage:        6 bytes
  3047 ;; Hardware stack levels used: 1
  3048 ;; Hardware stack levels required when called: 5
  3049 ;; This function calls:
  3050 ;;		_setMotorPWM
  3051 ;;		_stop
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text4
  3058   00682C                     __ptext4:
  3059                           	callstack 0
  3060   00682C                     _turn_left_135:
  3061                           	callstack 25
  3062   00682C                     
  3063                           ;dc_motor.c: 161:     mL->direction = 1;
  3064   00682C  EE20 F001          	lfsr	2,1
  3065   006830  5019               	movf	turn_left_135@mL^0,w,c
  3066   006832  26D9               	addwf	fsr2l,f,c
  3067   006834  501A               	movf	(turn_left_135@mL+1)^0,w,c
  3068   006836  22DA               	addwfc	fsr2h,f,c
  3069   006838  0E01               	movlw	1
  3070   00683A  6EDF               	movwf	indf2,c
  3071                           
  3072                           ;dc_motor.c: 162:     mR->direction = 0;
  3073   00683C  EE20 F001          	lfsr	2,1
  3074   006840  501B               	movf	turn_left_135@mR^0,w,c
  3075   006842  26D9               	addwf	fsr2l,f,c
  3076   006844  501C               	movf	(turn_left_135@mR+1)^0,w,c
  3077   006846  22DA               	addwfc	fsr2h,f,c
  3078   006848  6ADF               	clrf	indf2,c
  3079                           
  3080                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  3081   00684A  EF5D  F034         	goto	l230
  3082   00684E                     l5321:
  3083                           
  3084                           ;dc_motor.c: 165:         if ((mL->power) < 70) (mL->power) += 1;
  3085   00684E  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3086   006852  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3087   006856  0E46               	movlw	70
  3088   006858  60DF               	cpfslt	indf2,c
  3089   00685A  EF31  F034         	goto	u5381
  3090   00685E  EF33  F034         	goto	u5380
  3091   006862                     u5381:
  3092   006862  EF38  F034         	goto	l5325
  3093   006866                     u5380:
  3094   006866  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3095   00686A  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3096   00686E  2ADF               	incf	indf2,f,c
  3097   006870                     l5325:
  3098                           
  3099                           ;dc_motor.c: 166:         if ((mR->power) < 70) (mR->power) += 1;
  3100   006870  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3101   006874  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3102   006878  0E46               	movlw	70
  3103   00687A  60DF               	cpfslt	indf2,c
  3104   00687C  EF42  F034         	goto	u5391
  3105   006880  EF44  F034         	goto	u5390
  3106   006884                     u5391:
  3107   006884  EF49  F034         	goto	l5329
  3108   006888                     u5390:
  3109   006888  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3110   00688C  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3111   006890  2ADF               	incf	indf2,f,c
  3112   006892                     l5329:
  3113                           
  3114                           ;dc_motor.c: 168:         setMotorPWM(mL);
  3115   006892  C019  F00F         	movff	turn_left_135@mL,setMotorPWM@m
  3116   006896  C01A  F010         	movff	turn_left_135@mL+1,setMotorPWM@m+1
  3117   00689A  EC64  F031         	call	_setMotorPWM	;wreg free
  3118   00689E                     
  3119                           ;dc_motor.c: 169:         setMotorPWM(mR);
  3120   00689E  C01B  F00F         	movff	turn_left_135@mR,setMotorPWM@m
  3121   0068A2  C01C  F010         	movff	turn_left_135@mR+1,setMotorPWM@m+1
  3122   0068A6  EC64  F031         	call	_setMotorPWM	;wreg free
  3123   0068AA                     
  3124                           ;dc_motor.c: 170:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3125   0068AA  0E15               	movlw	21
  3126   0068AC  6E1D               	movwf	??_turn_left_135^0,c
  3127   0068AE  0EC6               	movlw	198
  3128   0068B0                     u8047:
  3129   0068B0  2EE8               	decfsz	wreg,f,c
  3130   0068B2  D7FE               	bra	u8047
  3131   0068B4  2E1D               	decfsz	??_turn_left_135^0,f,c
  3132   0068B6  D7FC               	bra	u8047
  3133   0068B8  D000               	nop2	
  3134   0068BA                     l230:
  3135                           
  3136                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  3137   0068BA  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3138   0068BE  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3139   0068C2  0E45               	movlw	69
  3140   0068C4  64DF               	cpfsgt	indf2,c
  3141   0068C6  EF67  F034         	goto	u5401
  3142   0068CA  EF69  F034         	goto	u5400
  3143   0068CE                     u5401:
  3144   0068CE  EF27  F034         	goto	l5321
  3145   0068D2                     u5400:
  3146   0068D2  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3147   0068D6  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3148   0068DA  0E45               	movlw	69
  3149   0068DC  64DF               	cpfsgt	indf2,c
  3150   0068DE  EF73  F034         	goto	u5411
  3151   0068E2  EF75  F034         	goto	u5410
  3152   0068E6                     u5411:
  3153   0068E6  EF27  F034         	goto	l5321
  3154   0068EA                     u5410:
  3155   0068EA                     
  3156                           ;dc_motor.c: 172:     _delay((unsigned long)((700)*(64000000/4000.0)));
  3157   0068EA  0E39               	movlw	57
  3158   0068EC  6E1E               	movwf	(??_turn_left_135+1)^0,c
  3159   0068EE  0ED2               	movlw	210
  3160   0068F0  6E1D               	movwf	??_turn_left_135^0,c
  3161   0068F2  0E4C               	movlw	76
  3162   0068F4                     u8057:
  3163   0068F4  2EE8               	decfsz	wreg,f,c
  3164   0068F6  D7FE               	bra	u8057
  3165   0068F8  2E1D               	decfsz	??_turn_left_135^0,f,c
  3166   0068FA  D7FC               	bra	u8057
  3167   0068FC  2E1E               	decfsz	(??_turn_left_135+1)^0,f,c
  3168   0068FE  D7FA               	bra	u8057
  3169   006900  D000               	nop2	
  3170   006902                     
  3171                           ;dc_motor.c: 173:     stop(mL, mR);
  3172   006902  C019  F015         	movff	turn_left_135@mL,stop@mL
  3173   006906  C01A  F016         	movff	turn_left_135@mL+1,stop@mL+1
  3174   00690A  C01B  F017         	movff	turn_left_135@mR,stop@mR
  3175   00690E  C01C  F018         	movff	turn_left_135@mR+1,stop@mR+1
  3176   006912  ECB1  F037         	call	_stop	;wreg free
  3177   006916  0012               	return		;funcret
  3178   006918                     __end_of_turn_left_135:
  3179                           	callstack 0
  3180                           
  3181 ;; *************** function _sprintf *****************
  3182 ;; Defined at:
  3183 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  s               2   26[COMRAM] PTR unsigned char 
  3186 ;;		 -> main@clear_val(20), 
  3187 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  3188 ;;		 -> STR_2(15), STR_1(15), 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  f              12   32[COMRAM] struct _IO_FILE
  3191 ;;  ret             2    0        int 
  3192 ;;  ap              1   31[COMRAM] PTR void [1]
  3193 ;;		 -> ?_sprintf(2), 
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  2   26[COMRAM] int 
  3196 ;; Registers used:
  3197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3203 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3204 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3206 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3207 ;;Total ram usage:       18 bytes
  3208 ;; Hardware stack levels used: 1
  3209 ;; Hardware stack levels required when called: 6
  3210 ;; This function calls:
  3211 ;;		_vfprintf
  3212 ;; This function is called by:
  3213 ;;		_main
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           	psect	text5
  3218   0073BE                     __ptext5:
  3219                           	callstack 0
  3220   0073BE                     _sprintf:
  3221                           	callstack 24
  3222   0073BE  0E1E               	movlw	low (?_sprintf+3)
  3223   0073C0  6E20               	movwf	sprintf@ap^0,c
  3224   0073C2  C01B  F021         	movff	sprintf@s,sprintf@f
  3225   0073C6  C01C  F022         	movff	sprintf@s+1,sprintf@f+1
  3226   0073CA  0E00               	movlw	0
  3227   0073CC  6E25               	movwf	(sprintf@f+4)^0,c
  3228   0073CE  0E00               	movlw	0
  3229   0073D0  6E24               	movwf	(sprintf@f+3)^0,c
  3230   0073D2  0E00               	movlw	0
  3231   0073D4  6E2C               	movwf	(sprintf@f+11)^0,c
  3232   0073D6  0E00               	movlw	0
  3233   0073D8  6E2B               	movwf	(sprintf@f+10)^0,c
  3234   0073DA  0E21               	movlw	low sprintf@f
  3235   0073DC  6E17               	movwf	vfprintf@fp^0,c
  3236   0073DE  C01D  F018         	movff	sprintf@fmt,vfprintf@fmt
  3237   0073E2  0E20               	movlw	low sprintf@ap
  3238   0073E4  6E19               	movwf	vfprintf@ap^0,c
  3239   0073E6  EC9D  F039         	call	_vfprintf	;wreg free
  3240   0073EA  5024               	movf	(sprintf@f+3)^0,w,c
  3241   0073EC  241B               	addwf	sprintf@s^0,w,c
  3242   0073EE  6ED9               	movwf	fsr2l,c
  3243   0073F0  5025               	movf	(sprintf@f+4)^0,w,c
  3244   0073F2  201C               	addwfc	(sprintf@s+1)^0,w,c
  3245   0073F4  6EDA               	movwf	fsr2h,c
  3246   0073F6  6ADF               	clrf	indf2,c
  3247   0073F8  0012               	return		;funcret
  3248   0073FA                     __end_of_sprintf:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function _vfprintf *****************
  3252 ;; Defined at:
  3253 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  3256 ;;		 -> sprintf@f(12), 
  3257 ;;  fmt             1   23[COMRAM] PTR const unsigned char 
  3258 ;;		 -> STR_2(15), STR_1(15), 
  3259 ;;  ap              1   24[COMRAM] PTR PTR void 
  3260 ;;		 -> sprintf@ap(1), 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  cfmt            1   25[COMRAM] PTR unsigned char 
  3263 ;;		 -> STR_2(15), STR_1(15), 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  2   22[COMRAM] int 
  3266 ;; Registers used:
  3267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3273 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3276 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3277 ;;Total ram usage:        4 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 5
  3280 ;; This function calls:
  3281 ;;		_vfpfcnvrt
  3282 ;; This function is called by:
  3283 ;;		_sprintf
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text6
  3288   00733A                     __ptext6:
  3289                           	callstack 0
  3290   00733A                     _vfprintf:
  3291                           	callstack 24
  3292   00733A                     
  3293                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3294   00733A  C018  F01A         	movff	vfprintf@fmt,vfprintf@cfmt
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3297   00733E  EFA9  F039         	goto	l5011
  3298   007342                     l5009:
  3299                           
  3300                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3301   007342  C017  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  3302   007346  0E1A               	movlw	low vfprintf@cfmt
  3303   007348  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  3304   00734A  C019  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  3305   00734E  ECA5  F02F         	call	_vfpfcnvrt	;wreg free
  3306   007352                     l5011:
  3307                           
  3308                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3309   007352  C01A  FFF6         	movff	vfprintf@cfmt,tblptrl
  3310   007356                     	if	1	;There is more than 1 active tblptr byte
  3311   007356  0E0E               	movlw	high __smallconst
  3312   007358  6EF7               	movwf	tblptrh,c
  3313   00735A                     	endif
  3314   00735A                     	if	0	;tblptru may be non-zero
  3315   00735A                     	endif
  3316   00735A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3317   00735A  0E00               	movlw	low (__smallconst shr (0+16))
  3318   00735C  6EF8               	movwf	tblptru,c
  3319   00735E                     	endif
  3320   00735E  0008               	tblrd		*
  3321   007360  50F5               	movf	tablat,w,c
  3322   007362  0900               	iorlw	0
  3323   007364  A4D8               	btfss	status,2,c
  3324   007366  EFB7  F039         	goto	u5141
  3325   00736A  EFB9  F039         	goto	u5140
  3326   00736E                     u5141:
  3327   00736E  EFA1  F039         	goto	l5009
  3328   007372                     u5140:
  3329   007372                     
  3330                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3331   007372  0E00               	movlw	0
  3332   007374  6E18               	movwf	(?_vfprintf+1)^0,c
  3333   007376  0E00               	movlw	0
  3334   007378  6E17               	movwf	?_vfprintf^0,c
  3335   00737A  0012               	return		;funcret
  3336   00737C                     __end_of_vfprintf:
  3337                           	callstack 0
  3338                           
  3339 ;; *************** function _vfpfcnvrt *****************
  3340 ;; Defined at:
  3341 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  3344 ;;		 -> sprintf@f(12), 
  3345 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  3346 ;;		 -> vfprintf@cfmt(1), 
  3347 ;;  ap              1   13[COMRAM] PTR PTR void 
  3348 ;;		 -> sprintf@ap(1), 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  convarg         4   17[COMRAM] struct .
  3351 ;;  c               1   21[COMRAM] unsigned char 
  3352 ;;  cp              1   16[COMRAM] PTR unsigned char 
  3353 ;;		 -> STR_2(15), STR_1(15), 
  3354 ;;  done            1   15[COMRAM] _Bool 
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3364 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3365 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3366 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3367 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;Total ram usage:       11 bytes
  3369 ;; Hardware stack levels used: 1
  3370 ;; Hardware stack levels required when called: 4
  3371 ;; This function calls:
  3372 ;;		___awdiv
  3373 ;;		___awmod
  3374 ;;		_abs
  3375 ;;		_fputc
  3376 ;; This function is called by:
  3377 ;;		_vfprintf
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text7
  3382   005F4A                     __ptext7:
  3383                           	callstack 0
  3384   005F4A                     _vfpfcnvrt:
  3385                           	callstack 24
  3386   005F4A                     
  3387                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3388   005F4A  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3389   005F4C  6ED9               	movwf	fsr2l,c
  3390   005F4E  6ADA               	clrf	fsr2h,c
  3391   005F50  CFDF FFF6          	movff	indf2,tblptrl
  3392   005F54                     	if	1	;There is more than 1 active tblptr byte
  3393   005F54  0E0E               	movlw	high __smallconst
  3394   005F56  6EF7               	movwf	tblptrh,c
  3395   005F58                     	endif
  3396   005F58                     	if	0	;tblptru may be non-zero
  3397   005F58                     	endif
  3398   005F58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3399   005F58  0E00               	movlw	low (__smallconst shr (0+16))
  3400   005F5A  6EF8               	movwf	tblptru,c
  3401   005F5C                     	endif
  3402   005F5C  0008               	tblrd		*
  3403   005F5E  50F5               	movf	tablat,w,c
  3404   005F60  0A25               	xorlw	37
  3405   005F62  A4D8               	btfss	status,2,c
  3406   005F64  EFB6  F02F         	goto	u4321
  3407   005F68  EFB8  F02F         	goto	u4320
  3408   005F6C                     u4321:
  3409   005F6C  EF76  F030         	goto	l4481
  3410   005F70                     u4320:
  3411   005F70                     
  3412                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3413   005F70  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3414   005F72  6ED9               	movwf	fsr2l,c
  3415   005F74  6ADA               	clrf	fsr2h,c
  3416   005F76  2ADF               	incf	indf2,f,c
  3417   005F78                     
  3418                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3419   005F78  0E00               	movlw	0
  3420   005F7A  0100               	movlb	0	; () banked
  3421   005F7C  6FD3               	movwf	(_width+1)& (0+255),b
  3422   005F7E  0E00               	movlw	0
  3423   005F80  6FD2               	movwf	_width& (0+255),b
  3424   005F82  C0D2  F0D6         	movff	_width,_flags
  3425   005F86                     
  3426                           ; BSR set to: 0
  3427                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3428   005F86  69D4               	setf	_prec& (0+255),b
  3429   005F88  69D5               	setf	(_prec+1)& (0+255),b
  3430   005F8A                     
  3431                           ; BSR set to: 0
  3432                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3433   005F8A  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3434   005F8C  6ED9               	movwf	fsr2l,c
  3435   005F8E  6ADA               	clrf	fsr2h,c
  3436   005F90  50DF               	movf	indf2,w,c
  3437   005F92  6E11               	movwf	vfpfcnvrt@cp^0,c
  3438   005F94                     
  3439                           ; BSR set to: 0
  3440                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3441   005F94  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3442   005F98                     	if	1	;There is more than 1 active tblptr byte
  3443   005F98  0E0E               	movlw	high __smallconst
  3444   005F9A  6EF7               	movwf	tblptrh,c
  3445   005F9C                     	endif
  3446   005F9C                     	if	0	;tblptru may be non-zero
  3447   005F9C                     	endif
  3448   005F9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3449   005F9C  0E00               	movlw	low (__smallconst shr (0+16))
  3450   005F9E  6EF8               	movwf	tblptru,c
  3451   005FA0                     	endif
  3452   005FA0  0008               	tblrd		*
  3453   005FA2  50F5               	movf	tablat,w,c
  3454   005FA4  0A64               	xorlw	100
  3455   005FA6  B4D8               	btfsc	status,2,c
  3456   005FA8  EFD8  F02F         	goto	u4331
  3457   005FAC  EFDA  F02F         	goto	u4330
  3458   005FB0                     u4331:
  3459   005FB0  EFEA  F02F         	goto	l4451
  3460   005FB4                     u4330:
  3461   005FB4                     
  3462                           ; BSR set to: 0
  3463   005FB4  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3464   005FB8                     	if	1	;There is more than 1 active tblptr byte
  3465   005FB8  0E0E               	movlw	high __smallconst
  3466   005FBA  6EF7               	movwf	tblptrh,c
  3467   005FBC                     	endif
  3468   005FBC                     	if	0	;tblptru may be non-zero
  3469   005FBC                     	endif
  3470   005FBC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3471   005FBC  0E00               	movlw	low (__smallconst shr (0+16))
  3472   005FBE  6EF8               	movwf	tblptru,c
  3473   005FC0                     	endif
  3474   005FC0  0008               	tblrd		*
  3475   005FC2  50F5               	movf	tablat,w,c
  3476   005FC4  0A69               	xorlw	105
  3477   005FC6  A4D8               	btfss	status,2,c
  3478   005FC8  EFE8  F02F         	goto	u4341
  3479   005FCC  EFEA  F02F         	goto	u4340
  3480   005FD0                     u4341:
  3481   005FD0  EF70  F030         	goto	l4477
  3482   005FD4                     u4340:
  3483   005FD4                     l4451:
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3487   005FD4  500E               	movf	vfpfcnvrt@ap^0,w,c
  3488   005FD6  6ED9               	movwf	fsr2l,c
  3489   005FD8  6ADA               	clrf	fsr2h,c
  3490   005FDA  0E02               	movlw	2
  3491   005FDC  26DF               	addwf	indf2,f,c
  3492   005FDE  5CDF               	subwf	indf2,w,c
  3493   005FE0  6ED9               	movwf	fsr2l,c
  3494   005FE2  6ADA               	clrf	fsr2h,c
  3495   005FE4  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
  3496   005FE8  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
  3497   005FEC                     
  3498                           ; BSR set to: 0
  3499                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3500   005FEC  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3501   005FEE  6ED9               	movwf	fsr2l,c
  3502   005FF0  6ADA               	clrf	fsr2h,c
  3503   005FF2  2811               	incf	vfpfcnvrt@cp^0,w,c
  3504   005FF4  6EDF               	movwf	indf2,c
  3505   005FF6                     
  3506                           ; BSR set to: 0
  3507                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3508   005FF6  0E20               	movlw	32
  3509   005FF8  6E16               	movwf	vfpfcnvrt@c^0,c
  3510                           
  3511                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3512   005FFA  BE13               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3513   005FFC  EF02  F030         	goto	u4351
  3514   006000  EF05  F030         	goto	u4350
  3515   006004                     u4351:
  3516   006004  0E01               	movlw	1
  3517   006006  EF06  F030         	goto	u4360
  3518   00600A                     u4350:
  3519   00600A  0E00               	movlw	0
  3520   00600C                     u4360:
  3521   00600C  6E10               	movwf	vfpfcnvrt@done^0,c
  3522   00600E                     l4457:
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3525   00600E  0616               	decf	vfpfcnvrt@c^0,f,c
  3526   006010  5016               	movf	vfpfcnvrt@c^0,w,c
  3527   006012  0F9C               	addlw	low _dbuf
  3528   006014  6ED9               	movwf	fsr2l,c
  3529   006016  6ADA               	clrf	fsr2h,c
  3530   006018  C012  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3531   00601C  C013  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3532   006020  0E00               	movlw	0
  3533   006022  6E05               	movwf	(___awmod@divisor+1)^0,c
  3534   006024  0E0A               	movlw	10
  3535   006026  6E04               	movwf	___awmod@divisor^0,c
  3536   006028  EC08  F037         	call	___awmod	;wreg free
  3537   00602C  C002  F008         	movff	?___awmod,abs@a
  3538   006030  C003  F009         	movff	?___awmod+1,abs@a+1
  3539   006034  EC19  F03A         	call	_abs	;wreg free
  3540   006038  5008               	movf	?_abs^0,w,c
  3541   00603A  0F30               	addlw	48
  3542   00603C  6EDF               	movwf	indf2,c
  3543   00603E                     
  3544                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3545   00603E  C012  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3546   006042  C013  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3547   006046  0E00               	movlw	0
  3548   006048  6E05               	movwf	(___awdiv@divisor+1)^0,c
  3549   00604A  0E0A               	movlw	10
  3550   00604C  6E04               	movwf	___awdiv@divisor^0,c
  3551   00604E  ECEB  F035         	call	___awdiv	;wreg free
  3552   006052  C002  F012         	movff	?___awdiv,vfpfcnvrt@convarg
  3553   006056  C003  F013         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3554   00605A                     
  3555                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3556   00605A  5012               	movf	vfpfcnvrt@convarg^0,w,c
  3557   00605C  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3558   00605E  B4D8               	btfsc	status,2,c
  3559   006060  EF34  F030         	goto	u4371
  3560   006064  EF36  F030         	goto	u4370
  3561   006068                     u4371:
  3562   006068  EF3E  F030         	goto	l4465
  3563   00606C                     u4370:
  3564   00606C  5016               	movf	vfpfcnvrt@c^0,w,c
  3565   00606E  A4D8               	btfss	status,2,c
  3566   006070  EF3C  F030         	goto	u4381
  3567   006074  EF3E  F030         	goto	u4380
  3568   006078                     u4381:
  3569   006078  EF07  F030         	goto	l4457
  3570   00607C                     u4380:
  3571   00607C                     l4465:
  3572                           
  3573                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3574   00607C  5016               	movf	vfpfcnvrt@c^0,w,c
  3575   00607E  B4D8               	btfsc	status,2,c
  3576   006080  EF44  F030         	goto	u4391
  3577   006084  EF46  F030         	goto	u4390
  3578   006088                     u4391:
  3579   006088  EF65  F030         	goto	l4475
  3580   00608C                     u4390:
  3581   00608C  5010               	movf	vfpfcnvrt@done^0,w,c
  3582   00608E  B4D8               	btfsc	status,2,c
  3583   006090  EF4C  F030         	goto	u4401
  3584   006094  EF4E  F030         	goto	u4400
  3585   006098                     u4401:
  3586   006098  EF65  F030         	goto	l4475
  3587   00609C                     u4400:
  3588   00609C                     
  3589                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3590   00609C  0616               	decf	vfpfcnvrt@c^0,f,c
  3591   00609E  5016               	movf	vfpfcnvrt@c^0,w,c
  3592   0060A0  0F9C               	addlw	low _dbuf
  3593   0060A2  6ED9               	movwf	fsr2l,c
  3594   0060A4  6ADA               	clrf	fsr2h,c
  3595   0060A6  0E2D               	movlw	45
  3596   0060A8  6EDF               	movwf	indf2,c
  3597   0060AA  EF65  F030         	goto	l4475
  3598   0060AE                     l4471:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3601   0060AE  5016               	movf	vfpfcnvrt@c^0,w,c
  3602   0060B0  0F9C               	addlw	low _dbuf
  3603   0060B2  6ED9               	movwf	fsr2l,c
  3604   0060B4  6ADA               	clrf	fsr2h,c
  3605   0060B6  50DF               	movf	indf2,w,c
  3606   0060B8  6E0F               	movwf	??_vfpfcnvrt^0,c
  3607   0060BA  500F               	movf	??_vfpfcnvrt^0,w,c
  3608   0060BC  6E02               	movwf	fputc@c^0,c
  3609   0060BE  6A03               	clrf	(fputc@c+1)^0,c
  3610   0060C0  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3611   0060C4  ECAB  F036         	call	_fputc	;wreg free
  3612   0060C8  2A16               	incf	vfpfcnvrt@c^0,f,c
  3613   0060CA                     l4475:
  3614                           
  3615                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3616   0060CA  0E20               	movlw	32
  3617   0060CC  1816               	xorwf	vfpfcnvrt@c^0,w,c
  3618   0060CE  A4D8               	btfss	status,2,c
  3619   0060D0  EF6C  F030         	goto	u4411
  3620   0060D4  EF6E  F030         	goto	u4410
  3621   0060D8                     u4411:
  3622   0060D8  EF57  F030         	goto	l4471
  3623   0060DC                     u4410:
  3624   0060DC  EF89  F030         	goto	l1281
  3625   0060E0                     l4477:
  3626                           
  3627                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3628   0060E0  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3629   0060E2  6ED9               	movwf	fsr2l,c
  3630   0060E4  6ADA               	clrf	fsr2h,c
  3631   0060E6  2ADF               	incf	indf2,f,c
  3632   0060E8  EF89  F030         	goto	l1281
  3633   0060EC                     l4481:
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3636   0060EC  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3637   0060EE  6ED9               	movwf	fsr2l,c
  3638   0060F0  6ADA               	clrf	fsr2h,c
  3639   0060F2  CFDF FFF6          	movff	indf2,tblptrl
  3640   0060F6                     	if	1	;There is more than 1 active tblptr byte
  3641   0060F6  0E0E               	movlw	high __smallconst
  3642   0060F8  6EF7               	movwf	tblptrh,c
  3643   0060FA                     	endif
  3644   0060FA                     	if	0	;tblptru may be non-zero
  3645   0060FA                     	endif
  3646   0060FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3647   0060FA  0E00               	movlw	low (__smallconst shr (0+16))
  3648   0060FC  6EF8               	movwf	tblptru,c
  3649   0060FE                     	endif
  3650   0060FE  0008               	tblrd		*
  3651   006100  50F5               	movf	tablat,w,c
  3652   006102  6E02               	movwf	fputc@c^0,c
  3653   006104  6A03               	clrf	(fputc@c+1)^0,c
  3654   006106  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3655   00610A  ECAB  F036         	call	_fputc	;wreg free
  3656   00610E  EF70  F030         	goto	l4477
  3657   006112                     l1281:
  3658   006112  0012               	return		;funcret
  3659   006114                     __end_of_vfpfcnvrt:
  3660                           	callstack 0
  3661                           
  3662 ;; *************** function _fputc *****************
  3663 ;; Defined at:
  3664 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  c               2    1[COMRAM] int 
  3667 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  3668 ;;		 -> sprintf@f(12), 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;		None
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  2    1[COMRAM] int 
  3673 ;; Registers used:
  3674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3680 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3683 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3684 ;;Total ram usage:        8 bytes
  3685 ;; Hardware stack levels used: 1
  3686 ;; Hardware stack levels required when called: 3
  3687 ;; This function calls:
  3688 ;;		_putch
  3689 ;; This function is called by:
  3690 ;;		_vfpfcnvrt
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text8
  3695   006D56                     __ptext8:
  3696                           	callstack 0
  3697   006D56                     _fputc:
  3698                           	callstack 24
  3699   006D56  5004               	movf	fputc@fp^0,w,c
  3700   006D58  B4D8               	btfsc	status,2,c
  3701   006D5A  EFB1  F036         	goto	u3721
  3702   006D5E  EFB3  F036         	goto	u3720
  3703   006D62                     u3721:
  3704   006D62  EFBB  F036         	goto	l4109
  3705   006D66                     u3720:
  3706   006D66  5004               	movf	fputc@fp^0,w,c
  3707   006D68  A4D8               	btfss	status,2,c
  3708   006D6A  EFB9  F036         	goto	u3731
  3709   006D6E  EFBB  F036         	goto	u3730
  3710   006D72                     u3731:
  3711   006D72  EFC0  F036         	goto	l4111
  3712   006D76                     u3730:
  3713   006D76                     l4109:
  3714   006D76  5002               	movf	fputc@c^0,w,c
  3715   006D78  EC16  F03B         	call	_putch
  3716   006D7C  EF07  F037         	goto	l1306
  3717   006D80                     l4111:
  3718   006D80  5004               	movf	fputc@fp^0,w,c
  3719   006D82  6ED9               	movwf	fsr2l,c
  3720   006D84  6ADA               	clrf	fsr2h,c
  3721   006D86  0E0A               	movlw	10
  3722   006D88  26D9               	addwf	fsr2l,f,c
  3723   006D8A  50DE               	movf	postinc2,w,c
  3724   006D8C  10DE               	iorwf	postinc2,w,c
  3725   006D8E  B4D8               	btfsc	status,2,c
  3726   006D90  EFCC  F036         	goto	u3741
  3727   006D94  EFCE  F036         	goto	u3740
  3728   006D98                     u3741:
  3729   006D98  EFE7  F036         	goto	l4115
  3730   006D9C                     u3740:
  3731   006D9C  5004               	movf	fputc@fp^0,w,c
  3732   006D9E  6ED9               	movwf	fsr2l,c
  3733   006DA0  6ADA               	clrf	fsr2h,c
  3734   006DA2  0E0A               	movlw	10
  3735   006DA4  26D9               	addwf	fsr2l,f,c
  3736   006DA6  5004               	movf	fputc@fp^0,w,c
  3737   006DA8  6EE1               	movwf	fsr1l,c
  3738   006DAA  6AE2               	clrf	fsr1h,c
  3739   006DAC  0E03               	movlw	3
  3740   006DAE  26E1               	addwf	fsr1l,f,c
  3741   006DB0  50DE               	movf	postinc2,w,c
  3742   006DB2  5CE6               	subwf	postinc1,w,c
  3743   006DB4  50E6               	movf	postinc1,w,c
  3744   006DB6  0A80               	xorlw	128
  3745   006DB8  6E09               	movwf	(??_fputc+4)^0,c
  3746   006DBA  50DE               	movf	postinc2,w,c
  3747   006DBC  0A80               	xorlw	128
  3748   006DBE  5809               	subwfb	(??_fputc+4)^0,w,c
  3749   006DC0  B0D8               	btfsc	status,0,c
  3750   006DC2  EFE5  F036         	goto	u3751
  3751   006DC6  EFE7  F036         	goto	u3750
  3752   006DCA                     u3751:
  3753   006DCA  EF07  F037         	goto	l1306
  3754   006DCE                     u3750:
  3755   006DCE                     l4115:
  3756   006DCE  5004               	movf	fputc@fp^0,w,c
  3757   006DD0  6ED9               	movwf	fsr2l,c
  3758   006DD2  6ADA               	clrf	fsr2h,c
  3759   006DD4  0E03               	movlw	3
  3760   006DD6  26D9               	addwf	fsr2l,f,c
  3761   006DD8  CFDE F005          	movff	postinc2,??_fputc
  3762   006DDC  CFDD F006          	movff	postdec2,??_fputc+1
  3763   006DE0  5004               	movf	fputc@fp^0,w,c
  3764   006DE2  6ED9               	movwf	fsr2l,c
  3765   006DE4  6ADA               	clrf	fsr2h,c
  3766   006DE6  CFDE F007          	movff	postinc2,??_fputc+2
  3767   006DEA  CFDD F008          	movff	postdec2,??_fputc+3
  3768   006DEE  5005               	movf	??_fputc^0,w,c
  3769   006DF0  2407               	addwf	(??_fputc+2)^0,w,c
  3770   006DF2  6ED9               	movwf	fsr2l,c
  3771   006DF4  5006               	movf	(??_fputc+1)^0,w,c
  3772   006DF6  2008               	addwfc	(??_fputc+3)^0,w,c
  3773   006DF8  6EDA               	movwf	fsr2h,c
  3774   006DFA  C002  FFDF         	movff	fputc@c,indf2
  3775   006DFE  5004               	movf	fputc@fp^0,w,c
  3776   006E00  6ED9               	movwf	fsr2l,c
  3777   006E02  6ADA               	clrf	fsr2h,c
  3778   006E04  0E03               	movlw	3
  3779   006E06  26D9               	addwf	fsr2l,f,c
  3780   006E08  2ADE               	incf	postinc2,f,c
  3781   006E0A  0E00               	movlw	0
  3782   006E0C  22DD               	addwfc	postdec2,f,c
  3783   006E0E                     l1306:
  3784   006E0E  0012               	return		;funcret
  3785   006E10                     __end_of_fputc:
  3786                           	callstack 0
  3787                           
  3788 ;; *************** function _putch *****************
  3789 ;; Defined at:
  3790 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  c               1    wreg     unsigned char 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  c               1    0[COMRAM] unsigned char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3808 ;;Total ram usage:        0 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 2
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_fputc
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text9
  3819   00762C                     __ptext9:
  3820                           	callstack 0
  3821   00762C                     _putch:
  3822                           	callstack 24
  3823   00762C  0012               	return		;funcret
  3824   00762E                     __end_of_putch:
  3825                           	callstack 0
  3826                           
  3827 ;; *************** function _abs *****************
  3828 ;; Defined at:
  3829 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  a               2    7[COMRAM] int 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  2    7[COMRAM] int 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;Total ram usage:        4 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 2
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_vfpfcnvrt
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           	psect	text10
  3858   007432                     __ptext10:
  3859                           	callstack 0
  3860   007432                     _abs:
  3861                           	callstack 25
  3862   007432  BE09               	btfsc	(abs@a+1)^0,7,c
  3863   007434  EF1E  F03A         	goto	u3761
  3864   007438  EF20  F03A         	goto	u3760
  3865   00743C                     u3761:
  3866   00743C  EF26  F03A         	goto	l1291
  3867   007440                     u3760:
  3868   007440  C008  F008         	movff	abs@a,?_abs
  3869   007444  C009  F009         	movff	abs@a+1,?_abs+1
  3870   007448  EF32  F03A         	goto	l1294
  3871   00744C                     l1291:
  3872   00744C  C008  F00A         	movff	abs@a,??_abs
  3873   007450  C009  F00B         	movff	abs@a+1,??_abs+1
  3874   007454  1E0A               	comf	??_abs^0,f,c
  3875   007456  1E0B               	comf	(??_abs+1)^0,f,c
  3876   007458  4A0A               	infsnz	??_abs^0,f,c
  3877   00745A  2A0B               	incf	(??_abs+1)^0,f,c
  3878   00745C  C00A  F008         	movff	??_abs,?_abs
  3879   007460  C00B  F009         	movff	??_abs+1,?_abs+1
  3880   007464                     l1294:
  3881   007464  0012               	return		;funcret
  3882   007466                     __end_of_abs:
  3883                           	callstack 0
  3884                           
  3885 ;; *************** function ___awmod *****************
  3886 ;; Defined at:
  3887 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  dividend        2    1[COMRAM] int 
  3890 ;;  divisor         2    3[COMRAM] int 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  sign            1    6[COMRAM] unsigned char 
  3893 ;;  counter         1    5[COMRAM] unsigned char 
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  2    1[COMRAM] int 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2, status,0
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3904 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3906 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3907 ;;Total ram usage:        6 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; Hardware stack levels required when called: 2
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_vfpfcnvrt
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text11
  3918   006E10                     __ptext11:
  3919                           	callstack 0
  3920   006E10                     ___awmod:
  3921                           	callstack 25
  3922   006E10  0E00               	movlw	0
  3923   006E12  6E07               	movwf	___awmod@sign^0,c
  3924   006E14  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  3925   006E16  EF11  F037         	goto	u3630
  3926   006E1A  EF0F  F037         	goto	u3631
  3927   006E1E                     u3631:
  3928   006E1E  EF17  F037         	goto	l4055
  3929   006E22                     u3630:
  3930   006E22  6C02               	negf	___awmod@dividend^0,c
  3931   006E24  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3932   006E26  B0D8               	btfsc	status,0,c
  3933   006E28  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3934   006E2A  0E01               	movlw	1
  3935   006E2C  6E07               	movwf	___awmod@sign^0,c
  3936   006E2E                     l4055:
  3937   006E2E  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  3938   006E30  EF1E  F037         	goto	u3640
  3939   006E34  EF1C  F037         	goto	u3641
  3940   006E38                     u3641:
  3941   006E38  EF22  F037         	goto	l4059
  3942   006E3C                     u3640:
  3943   006E3C  6C04               	negf	___awmod@divisor^0,c
  3944   006E3E  1E05               	comf	(___awmod@divisor+1)^0,f,c
  3945   006E40  B0D8               	btfsc	status,0,c
  3946   006E42  2A05               	incf	(___awmod@divisor+1)^0,f,c
  3947   006E44                     l4059:
  3948   006E44  5004               	movf	___awmod@divisor^0,w,c
  3949   006E46  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  3950   006E48  B4D8               	btfsc	status,2,c
  3951   006E4A  EF29  F037         	goto	u3651
  3952   006E4E  EF2B  F037         	goto	u3650
  3953   006E52                     u3651:
  3954   006E52  EF4F  F037         	goto	l4075
  3955   006E56                     u3650:
  3956   006E56  0E01               	movlw	1
  3957   006E58  6E06               	movwf	___awmod@counter^0,c
  3958   006E5A  EF33  F037         	goto	l4065
  3959   006E5E                     l4063:
  3960   006E5E  90D8               	bcf	status,0,c
  3961   006E60  3604               	rlcf	___awmod@divisor^0,f,c
  3962   006E62  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  3963   006E64  2A06               	incf	___awmod@counter^0,f,c
  3964   006E66                     l4065:
  3965   006E66  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  3966   006E68  EF38  F037         	goto	u3661
  3967   006E6C  EF3A  F037         	goto	u3660
  3968   006E70                     u3661:
  3969   006E70  EF2F  F037         	goto	l4063
  3970   006E74                     u3660:
  3971   006E74                     l4067:
  3972   006E74  5004               	movf	___awmod@divisor^0,w,c
  3973   006E76  5C02               	subwf	___awmod@dividend^0,w,c
  3974   006E78  5005               	movf	(___awmod@divisor+1)^0,w,c
  3975   006E7A  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  3976   006E7C  A0D8               	btfss	status,0,c
  3977   006E7E  EF43  F037         	goto	u3671
  3978   006E82  EF45  F037         	goto	u3670
  3979   006E86                     u3671:
  3980   006E86  EF49  F037         	goto	l4071
  3981   006E8A                     u3670:
  3982   006E8A  5004               	movf	___awmod@divisor^0,w,c
  3983   006E8C  5E02               	subwf	___awmod@dividend^0,f,c
  3984   006E8E  5005               	movf	(___awmod@divisor+1)^0,w,c
  3985   006E90  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  3986   006E92                     l4071:
  3987   006E92  90D8               	bcf	status,0,c
  3988   006E94  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  3989   006E96  3204               	rrcf	___awmod@divisor^0,f,c
  3990   006E98  2E06               	decfsz	___awmod@counter^0,f,c
  3991   006E9A  EF3A  F037         	goto	l4067
  3992   006E9E                     l4075:
  3993   006E9E  5007               	movf	___awmod@sign^0,w,c
  3994   006EA0  B4D8               	btfsc	status,2,c
  3995   006EA2  EF55  F037         	goto	u3681
  3996   006EA6  EF57  F037         	goto	u3680
  3997   006EAA                     u3681:
  3998   006EAA  EF5B  F037         	goto	l4079
  3999   006EAE                     u3680:
  4000   006EAE  6C02               	negf	___awmod@dividend^0,c
  4001   006EB0  1E03               	comf	(___awmod@dividend+1)^0,f,c
  4002   006EB2  B0D8               	btfsc	status,0,c
  4003   006EB4  2A03               	incf	(___awmod@dividend+1)^0,f,c
  4004   006EB6                     l4079:
  4005   006EB6  C002  F002         	movff	___awmod@dividend,?___awmod
  4006   006EBA  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  4007   006EBE  0012               	return		;funcret
  4008   006EC0                     __end_of___awmod:
  4009                           	callstack 0
  4010                           
  4011 ;; *************** function ___awdiv *****************
  4012 ;; Defined at:
  4013 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  dividend        2    1[COMRAM] int 
  4016 ;;  divisor         2    3[COMRAM] int 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  quotient        2    7[COMRAM] int 
  4019 ;;  sign            1    6[COMRAM] unsigned char 
  4020 ;;  counter         1    5[COMRAM] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  2    1[COMRAM] int 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4031 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;Total ram usage:        8 bytes
  4035 ;; Hardware stack levels used: 1
  4036 ;; Hardware stack levels required when called: 2
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_vfpfcnvrt
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text12
  4045   006BD6                     __ptext12:
  4046                           	callstack 0
  4047   006BD6                     ___awdiv:
  4048                           	callstack 25
  4049   006BD6  0E00               	movlw	0
  4050   006BD8  6E07               	movwf	___awdiv@sign^0,c
  4051   006BDA  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  4052   006BDC  EFF4  F035         	goto	u3570
  4053   006BE0  EFF2  F035         	goto	u3571
  4054   006BE4                     u3571:
  4055   006BE4  EFFA  F035         	goto	l4011
  4056   006BE8                     u3570:
  4057   006BE8  6C04               	negf	___awdiv@divisor^0,c
  4058   006BEA  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  4059   006BEC  B0D8               	btfsc	status,0,c
  4060   006BEE  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  4061   006BF0  0E01               	movlw	1
  4062   006BF2  6E07               	movwf	___awdiv@sign^0,c
  4063   006BF4                     l4011:
  4064   006BF4  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  4065   006BF6  EF01  F036         	goto	u3580
  4066   006BFA  EFFF  F035         	goto	u3581
  4067   006BFE                     u3581:
  4068   006BFE  EF07  F036         	goto	l4017
  4069   006C02                     u3580:
  4070   006C02  6C02               	negf	___awdiv@dividend^0,c
  4071   006C04  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  4072   006C06  B0D8               	btfsc	status,0,c
  4073   006C08  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  4074   006C0A  0E01               	movlw	1
  4075   006C0C  1A07               	xorwf	___awdiv@sign^0,f,c
  4076   006C0E                     l4017:
  4077   006C0E  0E00               	movlw	0
  4078   006C10  6E09               	movwf	(___awdiv@quotient+1)^0,c
  4079   006C12  0E00               	movlw	0
  4080   006C14  6E08               	movwf	___awdiv@quotient^0,c
  4081   006C16  5004               	movf	___awdiv@divisor^0,w,c
  4082   006C18  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  4083   006C1A  B4D8               	btfsc	status,2,c
  4084   006C1C  EF12  F036         	goto	u3591
  4085   006C20  EF14  F036         	goto	u3590
  4086   006C24                     u3591:
  4087   006C24  EF3C  F036         	goto	l4039
  4088   006C28                     u3590:
  4089   006C28  0E01               	movlw	1
  4090   006C2A  6E06               	movwf	___awdiv@counter^0,c
  4091   006C2C  EF1C  F036         	goto	l4025
  4092   006C30                     l4023:
  4093   006C30  90D8               	bcf	status,0,c
  4094   006C32  3604               	rlcf	___awdiv@divisor^0,f,c
  4095   006C34  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  4096   006C36  2A06               	incf	___awdiv@counter^0,f,c
  4097   006C38                     l4025:
  4098   006C38  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  4099   006C3A  EF21  F036         	goto	u3601
  4100   006C3E  EF23  F036         	goto	u3600
  4101   006C42                     u3601:
  4102   006C42  EF18  F036         	goto	l4023
  4103   006C46                     u3600:
  4104   006C46                     l4027:
  4105   006C46  90D8               	bcf	status,0,c
  4106   006C48  3608               	rlcf	___awdiv@quotient^0,f,c
  4107   006C4A  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  4108   006C4C  5004               	movf	___awdiv@divisor^0,w,c
  4109   006C4E  5C02               	subwf	___awdiv@dividend^0,w,c
  4110   006C50  5005               	movf	(___awdiv@divisor+1)^0,w,c
  4111   006C52  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  4112   006C54  A0D8               	btfss	status,0,c
  4113   006C56  EF2F  F036         	goto	u3611
  4114   006C5A  EF31  F036         	goto	u3610
  4115   006C5E                     u3611:
  4116   006C5E  EF36  F036         	goto	l4035
  4117   006C62                     u3610:
  4118   006C62  5004               	movf	___awdiv@divisor^0,w,c
  4119   006C64  5E02               	subwf	___awdiv@dividend^0,f,c
  4120   006C66  5005               	movf	(___awdiv@divisor+1)^0,w,c
  4121   006C68  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  4122   006C6A  8008               	bsf	___awdiv@quotient^0,0,c
  4123   006C6C                     l4035:
  4124   006C6C  90D8               	bcf	status,0,c
  4125   006C6E  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  4126   006C70  3204               	rrcf	___awdiv@divisor^0,f,c
  4127   006C72  2E06               	decfsz	___awdiv@counter^0,f,c
  4128   006C74  EF23  F036         	goto	l4027
  4129   006C78                     l4039:
  4130   006C78  5007               	movf	___awdiv@sign^0,w,c
  4131   006C7A  B4D8               	btfsc	status,2,c
  4132   006C7C  EF42  F036         	goto	u3621
  4133   006C80  EF44  F036         	goto	u3620
  4134   006C84                     u3621:
  4135   006C84  EF48  F036         	goto	l4043
  4136   006C88                     u3620:
  4137   006C88  6C08               	negf	___awdiv@quotient^0,c
  4138   006C8A  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  4139   006C8C  B0D8               	btfsc	status,0,c
  4140   006C8E  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  4141   006C90                     l4043:
  4142   006C90  C008  F002         	movff	___awdiv@quotient,?___awdiv
  4143   006C94  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  4144   006C98  0012               	return		;funcret
  4145   006C9A                     __end_of___awdiv:
  4146                           	callstack 0
  4147                           
  4148 ;; *************** function _sendStringSerial4 *****************
  4149 ;; Defined at:
  4150 ;;		line 38 in file "serial.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  string          2    2[COMRAM] PTR unsigned char 
  4153 ;;		 -> main@clear_val(20), 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;		None
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      void 
  4158 ;; Registers used:
  4159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4168 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4169 ;;Total ram usage:        2 bytes
  4170 ;; Hardware stack levels used: 1
  4171 ;; Hardware stack levels required when called: 3
  4172 ;; This function calls:
  4173 ;;		_sendCharSerial4
  4174 ;; This function is called by:
  4175 ;;		_main
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text13
  4180   007466                     __ptext13:
  4181                           	callstack 0
  4182   007466                     _sendStringSerial4:
  4183                           	callstack 27
  4184   007466                     
  4185                           ;serial.c: 40:     while(*string != 0){
  4186   007466  EF3E  F03A         	goto	l5493
  4187   00746A                     l5489:
  4188                           
  4189                           ;serial.c: 41:   sendCharSerial4(*string++);
  4190   00746A  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  4191   00746E  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4192   007472  50DF               	movf	indf2,w,c
  4193   007474  ECDE  F03A         	call	_sendCharSerial4
  4194   007478  4A03               	infsnz	sendStringSerial4@string^0,f,c
  4195   00747A  2A04               	incf	(sendStringSerial4@string+1)^0,f,c
  4196   00747C                     l5493:
  4197                           
  4198                           ;serial.c: 40:     while(*string != 0){
  4199   00747C  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  4200   007480  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4201   007484  50DF               	movf	indf2,w,c
  4202   007486  A4D8               	btfss	status,2,c
  4203   007488  EF48  F03A         	goto	u5581
  4204   00748C  EF4A  F03A         	goto	u5580
  4205   007490                     u5581:
  4206   007490  EF35  F03A         	goto	l5489
  4207   007494                     u5580:
  4208   007494  0012               	return		;funcret
  4209   007496                     __end_of_sendStringSerial4:
  4210                           	callstack 0
  4211                           
  4212 ;; *************** function _sendCharSerial4 *****************
  4213 ;; Defined at:
  4214 ;;		line 31 in file "serial.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  charToSend      1    wreg     unsigned char 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  charToSend      1    1[COMRAM] unsigned char 
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      void 
  4221 ;; Registers used:
  4222 ;;		wreg
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4229 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4232 ;;Total ram usage:        1 bytes
  4233 ;; Hardware stack levels used: 1
  4234 ;; Hardware stack levels required when called: 2
  4235 ;; This function calls:
  4236 ;;		Nothing
  4237 ;; This function is called by:
  4238 ;;		_sendStringSerial4
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           	psect	text14
  4243   0075BC                     __ptext14:
  4244                           	callstack 0
  4245   0075BC                     _sendCharSerial4:
  4246                           	callstack 27
  4247                           
  4248                           ;incstack = 0
  4249                           ;sendCharSerial4@charToSend stored from wreg
  4250   0075BC  6E02               	movwf	sendCharSerial4@charToSend^0,c
  4251   0075BE                     l500:
  4252   0075BE  010E               	movlb	14	; () banked
  4253   0075C0  A537               	btfss	55,2,b	;volatile
  4254   0075C2  EFE5  F03A         	goto	u5131
  4255   0075C6  EFE7  F03A         	goto	u5130
  4256   0075CA                     u5131:
  4257   0075CA  EFDF  F03A         	goto	l500
  4258   0075CE                     u5130:
  4259   0075CE                     
  4260                           ; BSR set to: 14
  4261                           ;serial.c: 33:     TX4REG = charToSend;
  4262   0075CE  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4263   0075D2                     
  4264                           ; BSR set to: 14
  4265   0075D2  0012               	return		;funcret
  4266   0075D4                     __end_of_sendCharSerial4:
  4267                           	callstack 0
  4268                           
  4269 ;; *************** function _reverse_one_square *****************
  4270 ;; Defined at:
  4271 ;;		line 210 in file "dc_motor.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  4274 ;;		 -> main@motorL(9), 
  4275 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  4276 ;;		 -> main@motorR(9), 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;		None
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4288 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4291 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4292 ;;Total ram usage:        6 bytes
  4293 ;; Hardware stack levels used: 1
  4294 ;; Hardware stack levels required when called: 5
  4295 ;; This function calls:
  4296 ;;		_setMotorPWM
  4297 ;;		_stop
  4298 ;; This function is called by:
  4299 ;;		_main
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text15
  4304   00663E                     __ptext15:
  4305                           	callstack 0
  4306   00663E                     _reverse_one_square:
  4307                           	callstack 25
  4308   00663E                     
  4309                           ;dc_motor.c: 211:     mL->direction = 0;
  4310   00663E  EE20 F001          	lfsr	2,1
  4311   006642  5019               	movf	reverse_one_square@mL^0,w,c
  4312   006644  26D9               	addwf	fsr2l,f,c
  4313   006646  501A               	movf	(reverse_one_square@mL+1)^0,w,c
  4314   006648  22DA               	addwfc	fsr2h,f,c
  4315   00664A  6ADF               	clrf	indf2,c
  4316                           
  4317                           ;dc_motor.c: 212:     mR->direction = 0;
  4318   00664C  EE20 F001          	lfsr	2,1
  4319   006650  501B               	movf	reverse_one_square@mR^0,w,c
  4320   006652  26D9               	addwf	fsr2l,f,c
  4321   006654  501C               	movf	(reverse_one_square@mR+1)^0,w,c
  4322   006656  22DA               	addwfc	fsr2h,f,c
  4323   006658  6ADF               	clrf	indf2,c
  4324                           
  4325                           ;dc_motor.c: 214:     while ((mL->power) < 70 || (mR->power) < 70){
  4326   00665A  EF65  F033         	goto	l254
  4327   00665E                     l5389:
  4328                           
  4329                           ;dc_motor.c: 215:         if ((mL->power) < 70) (mL->power) += 1;
  4330   00665E  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  4331   006662  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  4332   006666  0E46               	movlw	70
  4333   006668  60DF               	cpfslt	indf2,c
  4334   00666A  EF39  F033         	goto	u5501
  4335   00666E  EF3B  F033         	goto	u5500
  4336   006672                     u5501:
  4337   006672  EF40  F033         	goto	l5393
  4338   006676                     u5500:
  4339   006676  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  4340   00667A  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  4341   00667E  2ADF               	incf	indf2,f,c
  4342   006680                     l5393:
  4343                           
  4344                           ;dc_motor.c: 216:         if ((mR->power) < 70) (mR->power) += 1;
  4345   006680  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  4346   006684  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  4347   006688  0E46               	movlw	70
  4348   00668A  60DF               	cpfslt	indf2,c
  4349   00668C  EF4A  F033         	goto	u5511
  4350   006690  EF4C  F033         	goto	u5510
  4351   006694                     u5511:
  4352   006694  EF51  F033         	goto	l5397
  4353   006698                     u5510:
  4354   006698  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  4355   00669C  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  4356   0066A0  2ADF               	incf	indf2,f,c
  4357   0066A2                     l5397:
  4358                           
  4359                           ;dc_motor.c: 218:         setMotorPWM(mL);
  4360   0066A2  C019  F00F         	movff	reverse_one_square@mL,setMotorPWM@m
  4361   0066A6  C01A  F010         	movff	reverse_one_square@mL+1,setMotorPWM@m+1
  4362   0066AA  EC64  F031         	call	_setMotorPWM	;wreg free
  4363   0066AE                     
  4364                           ;dc_motor.c: 219:         setMotorPWM(mR);
  4365   0066AE  C01B  F00F         	movff	reverse_one_square@mR,setMotorPWM@m
  4366   0066B2  C01C  F010         	movff	reverse_one_square@mR+1,setMotorPWM@m+1
  4367   0066B6  EC64  F031         	call	_setMotorPWM	;wreg free
  4368   0066BA                     
  4369                           ;dc_motor.c: 220:         _delay((unsigned long)((1)*(64000000/4000.0)));
  4370   0066BA  0E15               	movlw	21
  4371   0066BC  6E1D               	movwf	??_reverse_one_square^0,c
  4372   0066BE  0EC6               	movlw	198
  4373   0066C0                     u8067:
  4374   0066C0  2EE8               	decfsz	wreg,f,c
  4375   0066C2  D7FE               	bra	u8067
  4376   0066C4  2E1D               	decfsz	??_reverse_one_square^0,f,c
  4377   0066C6  D7FC               	bra	u8067
  4378   0066C8  D000               	nop2	
  4379   0066CA                     l254:
  4380                           
  4381                           ;dc_motor.c: 214:     while ((mL->power) < 70 || (mR->power) < 70){
  4382   0066CA  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  4383   0066CE  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  4384   0066D2  0E45               	movlw	69
  4385   0066D4  64DF               	cpfsgt	indf2,c
  4386   0066D6  EF6F  F033         	goto	u5521
  4387   0066DA  EF71  F033         	goto	u5520
  4388   0066DE                     u5521:
  4389   0066DE  EF2F  F033         	goto	l5389
  4390   0066E2                     u5520:
  4391   0066E2  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  4392   0066E6  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  4393   0066EA  0E45               	movlw	69
  4394   0066EC  64DF               	cpfsgt	indf2,c
  4395   0066EE  EF7B  F033         	goto	u5531
  4396   0066F2  EF7D  F033         	goto	u5530
  4397   0066F6                     u5531:
  4398   0066F6  EF2F  F033         	goto	l5389
  4399   0066FA                     u5530:
  4400   0066FA                     
  4401                           ;dc_motor.c: 222:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4402   0066FA  0E29               	movlw	41
  4403   0066FC  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  4404   0066FE  0E96               	movlw	150
  4405   006700  6E1D               	movwf	??_reverse_one_square^0,c
  4406   006702  0E7F               	movlw	127
  4407   006704                     u8077:
  4408   006704  2EE8               	decfsz	wreg,f,c
  4409   006706  D7FE               	bra	u8077
  4410   006708  2E1D               	decfsz	??_reverse_one_square^0,f,c
  4411   00670A  D7FC               	bra	u8077
  4412   00670C  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  4413   00670E  D7FA               	bra	u8077
  4414   006710  0000               	nop	
  4415   006712                     
  4416                           ;dc_motor.c: 223:     stop(mL, mR);
  4417   006712  C019  F015         	movff	reverse_one_square@mL,stop@mL
  4418   006716  C01A  F016         	movff	reverse_one_square@mL+1,stop@mL+1
  4419   00671A  C01B  F017         	movff	reverse_one_square@mR,stop@mR
  4420   00671E  C01C  F018         	movff	reverse_one_square@mR+1,stop@mR+1
  4421   006722  ECB1  F037         	call	_stop	;wreg free
  4422   006726                     
  4423                           ;dc_motor.c: 224:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4424   006726  0E15               	movlw	21
  4425   006728  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  4426   00672A  0E4B               	movlw	75
  4427   00672C  6E1D               	movwf	??_reverse_one_square^0,c
  4428   00672E  0EBE               	movlw	190
  4429   006730                     u8087:
  4430   006730  2EE8               	decfsz	wreg,f,c
  4431   006732  D7FE               	bra	u8087
  4432   006734  2E1D               	decfsz	??_reverse_one_square^0,f,c
  4433   006736  D7FC               	bra	u8087
  4434   006738  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  4435   00673A  D7FA               	bra	u8087
  4436   00673C  D000               	nop2	
  4437   00673E  0012               	return		;funcret
  4438   006740                     __end_of_reverse_one_square:
  4439                           	callstack 0
  4440                           
  4441 ;; *************** function _reverse_after_read *****************
  4442 ;; Defined at:
  4443 ;;		line 193 in file "dc_motor.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  4446 ;;		 -> main@motorL(9), 
  4447 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  4448 ;;		 -> main@motorR(9), 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4460 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4462 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4463 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4464 ;;Total ram usage:        6 bytes
  4465 ;; Hardware stack levels used: 1
  4466 ;; Hardware stack levels required when called: 5
  4467 ;; This function calls:
  4468 ;;		_setMotorPWM
  4469 ;;		_stop
  4470 ;; This function is called by:
  4471 ;;		_main
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           	psect	text16
  4476   006434                     __ptext16:
  4477                           	callstack 0
  4478   006434                     _reverse_after_read:
  4479                           	callstack 25
  4480   006434                     
  4481                           ;dc_motor.c: 194:     mL->direction = 1;
  4482   006434  EE20 F001          	lfsr	2,1
  4483   006438  5019               	movf	reverse_after_read@mL^0,w,c
  4484   00643A  26D9               	addwf	fsr2l,f,c
  4485   00643C  501A               	movf	(reverse_after_read@mL+1)^0,w,c
  4486   00643E  22DA               	addwfc	fsr2h,f,c
  4487   006440  0E01               	movlw	1
  4488   006442  6EDF               	movwf	indf2,c
  4489                           
  4490                           ;dc_motor.c: 195:     mR->direction = 1;
  4491   006444  EE20 F001          	lfsr	2,1
  4492   006448  501B               	movf	reverse_after_read@mR^0,w,c
  4493   00644A  26D9               	addwf	fsr2l,f,c
  4494   00644C  501C               	movf	(reverse_after_read@mR+1)^0,w,c
  4495   00644E  22DA               	addwfc	fsr2h,f,c
  4496   006450  0E01               	movlw	1
  4497   006452  6EDF               	movwf	indf2,c
  4498                           
  4499                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  4500   006454  EF62  F032         	goto	l246
  4501   006458                     l5365:
  4502                           
  4503                           ;dc_motor.c: 198:         if ((mL->power) < 70) (mL->power) += 1;
  4504   006458  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  4505   00645C  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  4506   006460  0E46               	movlw	70
  4507   006462  60DF               	cpfslt	indf2,c
  4508   006464  EF36  F032         	goto	u5461
  4509   006468  EF38  F032         	goto	u5460
  4510   00646C                     u5461:
  4511   00646C  EF3D  F032         	goto	l5369
  4512   006470                     u5460:
  4513   006470  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  4514   006474  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  4515   006478  2ADF               	incf	indf2,f,c
  4516   00647A                     l5369:
  4517                           
  4518                           ;dc_motor.c: 199:         if ((mR->power) < 70) (mR->power) += 1;
  4519   00647A  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  4520   00647E  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  4521   006482  0E46               	movlw	70
  4522   006484  60DF               	cpfslt	indf2,c
  4523   006486  EF47  F032         	goto	u5471
  4524   00648A  EF49  F032         	goto	u5470
  4525   00648E                     u5471:
  4526   00648E  EF4E  F032         	goto	l5373
  4527   006492                     u5470:
  4528   006492  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  4529   006496  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  4530   00649A  2ADF               	incf	indf2,f,c
  4531   00649C                     l5373:
  4532                           
  4533                           ;dc_motor.c: 201:         setMotorPWM(mL);
  4534   00649C  C019  F00F         	movff	reverse_after_read@mL,setMotorPWM@m
  4535   0064A0  C01A  F010         	movff	reverse_after_read@mL+1,setMotorPWM@m+1
  4536   0064A4  EC64  F031         	call	_setMotorPWM	;wreg free
  4537   0064A8                     
  4538                           ;dc_motor.c: 202:         setMotorPWM(mR);
  4539   0064A8  C01B  F00F         	movff	reverse_after_read@mR,setMotorPWM@m
  4540   0064AC  C01C  F010         	movff	reverse_after_read@mR+1,setMotorPWM@m+1
  4541   0064B0  EC64  F031         	call	_setMotorPWM	;wreg free
  4542   0064B4                     
  4543                           ;dc_motor.c: 203:         _delay((unsigned long)((1)*(64000000/4000.0)));
  4544   0064B4  0E15               	movlw	21
  4545   0064B6  6E1D               	movwf	??_reverse_after_read^0,c
  4546   0064B8  0EC6               	movlw	198
  4547   0064BA                     u8097:
  4548   0064BA  2EE8               	decfsz	wreg,f,c
  4549   0064BC  D7FE               	bra	u8097
  4550   0064BE  2E1D               	decfsz	??_reverse_after_read^0,f,c
  4551   0064C0  D7FC               	bra	u8097
  4552   0064C2  D000               	nop2	
  4553   0064C4                     l246:
  4554                           
  4555                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  4556   0064C4  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  4557   0064C8  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  4558   0064CC  0E45               	movlw	69
  4559   0064CE  64DF               	cpfsgt	indf2,c
  4560   0064D0  EF6C  F032         	goto	u5481
  4561   0064D4  EF6E  F032         	goto	u5480
  4562   0064D8                     u5481:
  4563   0064D8  EF2C  F032         	goto	l5365
  4564   0064DC                     u5480:
  4565   0064DC  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  4566   0064E0  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  4567   0064E4  0E45               	movlw	69
  4568   0064E6  64DF               	cpfsgt	indf2,c
  4569   0064E8  EF78  F032         	goto	u5491
  4570   0064EC  EF7A  F032         	goto	u5490
  4571   0064F0                     u5491:
  4572   0064F0  EF2C  F032         	goto	l5365
  4573   0064F4                     u5490:
  4574   0064F4                     
  4575                           ;dc_motor.c: 205:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4576   0064F4  0E15               	movlw	21
  4577   0064F6  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  4578   0064F8  0E4B               	movlw	75
  4579   0064FA  6E1D               	movwf	??_reverse_after_read^0,c
  4580   0064FC  0EBE               	movlw	190
  4581   0064FE                     u8107:
  4582   0064FE  2EE8               	decfsz	wreg,f,c
  4583   006500  D7FE               	bra	u8107
  4584   006502  2E1D               	decfsz	??_reverse_after_read^0,f,c
  4585   006504  D7FC               	bra	u8107
  4586   006506  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  4587   006508  D7FA               	bra	u8107
  4588   00650A  D000               	nop2	
  4589   00650C                     
  4590                           ;dc_motor.c: 206:     stop(mL, mR);
  4591   00650C  C019  F015         	movff	reverse_after_read@mL,stop@mL
  4592   006510  C01A  F016         	movff	reverse_after_read@mL+1,stop@mL+1
  4593   006514  C01B  F017         	movff	reverse_after_read@mR,stop@mR
  4594   006518  C01C  F018         	movff	reverse_after_read@mR+1,stop@mR+1
  4595   00651C  ECB1  F037         	call	_stop	;wreg free
  4596   006520                     
  4597                           ;dc_motor.c: 207:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4598   006520  0E15               	movlw	21
  4599   006522  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  4600   006524  0E4B               	movlw	75
  4601   006526  6E1D               	movwf	??_reverse_after_read^0,c
  4602   006528  0EBE               	movlw	190
  4603   00652A                     u8117:
  4604   00652A  2EE8               	decfsz	wreg,f,c
  4605   00652C  D7FE               	bra	u8117
  4606   00652E  2E1D               	decfsz	??_reverse_after_read^0,f,c
  4607   006530  D7FC               	bra	u8117
  4608   006532  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  4609   006534  D7FA               	bra	u8117
  4610   006536  D000               	nop2	
  4611   006538  0012               	return		;funcret
  4612   00653A                     __end_of_reverse_after_read:
  4613                           	callstack 0
  4614                           
  4615 ;; *************** function _resetTimer0 *****************
  4616 ;; Defined at:
  4617 ;;		line 34 in file "timers.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;		None
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      void 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4635 ;;Total ram usage:        0 bytes
  4636 ;; Hardware stack levels used: 1
  4637 ;; Hardware stack levels required when called: 2
  4638 ;; This function calls:
  4639 ;;		Nothing
  4640 ;; This function is called by:
  4641 ;;		_main
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text17
  4646   007604                     __ptext17:
  4647                           	callstack 0
  4648   007604                     _resetTimer0:
  4649                           	callstack 28
  4650   007604                     
  4651                           ;timers.c: 35:     TMR0H = 0;
  4652   007604  0E00               	movlw	0
  4653   007606  6ED4               	movwf	212,c	;volatile
  4654                           
  4655                           ;timers.c: 36:     TMR0L = 0;
  4656   007608  0E00               	movlw	0
  4657   00760A  6ED3               	movwf	211,c	;volatile
  4658   00760C  0012               	return		;funcret
  4659   00760E                     __end_of_resetTimer0:
  4660                           	callstack 0
  4661                           
  4662 ;; *************** function _invert_action *****************
  4663 ;; Defined at:
  4664 ;;		line 179 in file "color.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  input_action    1    wreg     unsigned char 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  input_action    1    3[COMRAM] unsigned char 
  4669 ;;  output_actio    1    4[COMRAM] unsigned char 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      unsigned char 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2, status,0
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4682 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;Total ram usage:        4 bytes
  4684 ;; Hardware stack levels used: 1
  4685 ;; Hardware stack levels required when called: 2
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_main
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text18
  4694   006FFC                     __ptext18:
  4695                           	callstack 0
  4696   006FFC                     _invert_action:
  4697                           	callstack 28
  4698                           
  4699                           ;incstack = 0
  4700                           ;invert_action@input_action stored from wreg
  4701   006FFC  6E04               	movwf	invert_action@input_action^0,c
  4702   006FFE                     
  4703                           ;color.c: 180:     char output_action;;color.c: 181:     switch(input_action){
  4704   006FFE  EF1D  F038         	goto	l5211
  4705   007002                     l5195:
  4706                           
  4707                           ;color.c: 183:             output_action = 1;
  4708   007002  0E01               	movlw	1
  4709   007004  6E05               	movwf	invert_action@output_action^0,c
  4710                           
  4711                           ;color.c: 184:             break;
  4712   007006  EF46  F038         	goto	l5213
  4713   00700A                     l5197:
  4714                           
  4715                           ;color.c: 186:             output_action = 0;
  4716   00700A  0E00               	movlw	0
  4717   00700C  6E05               	movwf	invert_action@output_action^0,c
  4718                           
  4719                           ;color.c: 187:             break;
  4720   00700E  EF46  F038         	goto	l5213
  4721   007012                     l5199:
  4722                           
  4723                           ;color.c: 189:             output_action = 2;
  4724   007012  0E02               	movlw	2
  4725   007014  6E05               	movwf	invert_action@output_action^0,c
  4726                           
  4727                           ;color.c: 190:             break;
  4728   007016  EF46  F038         	goto	l5213
  4729   00701A                     l5201:
  4730                           
  4731                           ;color.c: 192:             output_action = 8;
  4732   00701A  0E08               	movlw	8
  4733   00701C  6E05               	movwf	invert_action@output_action^0,c
  4734                           
  4735                           ;color.c: 193:             break;
  4736   00701E  EF46  F038         	goto	l5213
  4737   007022                     l5203:
  4738                           
  4739                           ;color.c: 195:             output_action = 9;
  4740   007022  0E09               	movlw	9
  4741   007024  6E05               	movwf	invert_action@output_action^0,c
  4742                           
  4743                           ;color.c: 196:             break;
  4744   007026  EF46  F038         	goto	l5213
  4745   00702A                     l5205:
  4746                           
  4747                           ;color.c: 198:             output_action = 6;
  4748   00702A  0E06               	movlw	6
  4749   00702C  6E05               	movwf	invert_action@output_action^0,c
  4750                           
  4751                           ;color.c: 199:             break;
  4752   00702E  EF46  F038         	goto	l5213
  4753   007032                     l5207:
  4754                           
  4755                           ;color.c: 201:             output_action = 5;
  4756   007032  0E05               	movlw	5
  4757   007034  6E05               	movwf	invert_action@output_action^0,c
  4758                           
  4759                           ;color.c: 202:             break;
  4760   007036  EF46  F038         	goto	l5213
  4761   00703A                     l5211:
  4762   00703A  5004               	movf	invert_action@input_action^0,w,c
  4763   00703C  6E02               	movwf	??_invert_action^0,c
  4764   00703E  6A03               	clrf	(??_invert_action+1)^0,c
  4765                           
  4766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4767                           ; Switch size 1, requested type "simple"
  4768                           ; Number of cases is 1, Range of values is 0 to 0
  4769                           ; switch strategies available:
  4770                           ; Name         Instructions Cycles
  4771                           ; simple_byte            4     3 (average)
  4772                           ;	Chosen strategy is simple_byte
  4773   007040  5003               	movf	(??_invert_action+1)^0,w,c
  4774   007042  0A00               	xorlw	0	; case 0
  4775   007044  B4D8               	btfsc	status,2,c
  4776   007046  EF27  F038         	goto	l7835
  4777   00704A  EF46  F038         	goto	l5213
  4778   00704E                     l7835:
  4779                           
  4780                           ; Switch size 1, requested type "simple"
  4781                           ; Number of cases is 7, Range of values is 0 to 6
  4782                           ; switch strategies available:
  4783                           ; Name         Instructions Cycles
  4784                           ; simple_byte           22    12 (average)
  4785                           ;	Chosen strategy is simple_byte
  4786   00704E  5002               	movf	??_invert_action^0,w,c
  4787   007050  0A00               	xorlw	0	; case 0
  4788   007052  B4D8               	btfsc	status,2,c
  4789   007054  EF01  F038         	goto	l5195
  4790   007058  0A01               	xorlw	1	; case 1
  4791   00705A  B4D8               	btfsc	status,2,c
  4792   00705C  EF05  F038         	goto	l5197
  4793   007060  0A03               	xorlw	3	; case 2
  4794   007062  B4D8               	btfsc	status,2,c
  4795   007064  EF09  F038         	goto	l5199
  4796   007068  0A01               	xorlw	1	; case 3
  4797   00706A  B4D8               	btfsc	status,2,c
  4798   00706C  EF0D  F038         	goto	l5201
  4799   007070  0A07               	xorlw	7	; case 4
  4800   007072  B4D8               	btfsc	status,2,c
  4801   007074  EF11  F038         	goto	l5203
  4802   007078  0A01               	xorlw	1	; case 5
  4803   00707A  B4D8               	btfsc	status,2,c
  4804   00707C  EF15  F038         	goto	l5205
  4805   007080  0A03               	xorlw	3	; case 6
  4806   007082  B4D8               	btfsc	status,2,c
  4807   007084  EF19  F038         	goto	l5207
  4808   007088  EF46  F038         	goto	l5213
  4809   00708C                     l5213:
  4810                           
  4811                           ;color.c: 206:     return output_action;
  4812   00708C  5005               	movf	invert_action@output_action^0,w,c
  4813   00708E  0012               	return		;funcret
  4814   007090                     __end_of_invert_action:
  4815                           	callstack 0
  4816                           
  4817 ;; *************** function _initUSART4 *****************
  4818 ;; Defined at:
  4819 ;;		line 4 in file "serial.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		wreg, status,2
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4837 ;;Total ram usage:        0 bytes
  4838 ;; Hardware stack levels used: 1
  4839 ;; Hardware stack levels required when called: 2
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_main
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text19
  4848   00754E                     __ptext19:
  4849                           	callstack 0
  4850   00754E                     _initUSART4:
  4851                           	callstack 28
  4852   00754E                     
  4853                           ;serial.c: 8:     RC0PPS = 0x12;
  4854   00754E  0E12               	movlw	18
  4855   007550  010E               	movlb	14	; () banked
  4856   007552  6F62               	movwf	98,b	;volatile
  4857                           
  4858                           ;serial.c: 9:     RX4PPS = 0x11;
  4859   007554  0E11               	movlw	17
  4860   007556  6F15               	movwf	21,b	;volatile
  4861   007558                     
  4862                           ; BSR set to: 14
  4863                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4864   007558  97E9               	bcf	233,3,b	;volatile
  4865   00755A                     
  4866                           ; BSR set to: 14
  4867                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  4868   00755A  95E8               	bcf	232,2,b	;volatile
  4869                           
  4870                           ;serial.c: 15:     SP4BRGL = 51;
  4871   00755C  0E33               	movlw	51
  4872   00755E  6FE5               	movwf	229,b	;volatile
  4873                           
  4874                           ;serial.c: 16:     SP4BRGH = 0;
  4875   007560  0E00               	movlw	0
  4876   007562  6FE6               	movwf	230,b	;volatile
  4877   007564                     
  4878                           ; BSR set to: 14
  4879                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  4880   007564  89E7               	bsf	231,4,b	;volatile
  4881   007566                     
  4882                           ; BSR set to: 14
  4883                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  4884   007566  8BE8               	bsf	232,5,b	;volatile
  4885   007568                     
  4886                           ; BSR set to: 14
  4887                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  4888   007568  8FE7               	bsf	231,7,b	;volatile
  4889   00756A                     
  4890                           ; BSR set to: 14
  4891   00756A  0012               	return		;funcret
  4892   00756C                     __end_of_initUSART4:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function _initDCmotorsPWM *****************
  4896 ;; Defined at:
  4897 ;;		line 6 in file "dc_motor.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  PWMperiod       2    1[COMRAM] int 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;		None
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4914 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4915 ;;Total ram usage:        2 bytes
  4916 ;; Hardware stack levels used: 1
  4917 ;; Hardware stack levels required when called: 2
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_main
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text20
  4926   006EC0                     __ptext20:
  4927                           	callstack 0
  4928   006EC0                     _initDCmotorsPWM:
  4929                           	callstack 28
  4930   006EC0                     
  4931                           ;dc_motor.c: 10:     RE2PPS=0x05;
  4932   006EC0  0E05               	movlw	5
  4933   006EC2  010E               	movlb	14	; () banked
  4934   006EC4  6F74               	movwf	116,b	;volatile
  4935                           
  4936                           ;dc_motor.c: 11:     RE4PPS=0x06;
  4937   006EC6  0E06               	movlw	6
  4938   006EC8  6F76               	movwf	118,b	;volatile
  4939                           
  4940                           ;dc_motor.c: 12:     RC7PPS=0x07;
  4941   006ECA  0E07               	movlw	7
  4942   006ECC  6F69               	movwf	105,b	;volatile
  4943                           
  4944                           ;dc_motor.c: 13:     RG6PPS=0x08;
  4945   006ECE  0E08               	movlw	8
  4946   006ED0  6F88               	movwf	136,b	;volatile
  4947                           
  4948                           ;dc_motor.c: 16:     T2CONbits.CKPS=0b100;
  4949   006ED2  50BD               	movf	189,w,c	;volatile
  4950   006ED4  0B8F               	andlw	-113
  4951   006ED6  0940               	iorlw	64
  4952   006ED8  6EBD               	movwf	189,c	;volatile
  4953                           
  4954                           ;dc_motor.c: 17:     T2HLTbits.MODE=0b00000;
  4955   006EDA  0EE0               	movlw	-32
  4956   006EDC  16BE               	andwf	190,f,c	;volatile
  4957                           
  4958                           ;dc_motor.c: 18:     T2CLKCONbits.CS=0b0001;
  4959   006EDE  50BF               	movf	191,w,c	;volatile
  4960   006EE0  0BF0               	andlw	-16
  4961   006EE2  0901               	iorlw	1
  4962   006EE4  6EBF               	movwf	191,c	;volatile
  4963                           
  4964                           ;dc_motor.c: 22:     T2PR=99;
  4965   006EE6  0E63               	movlw	99
  4966   006EE8  6EBC               	movwf	188,c	;volatile
  4967   006EEA                     
  4968                           ; BSR set to: 14
  4969                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  4970   006EEA  8EBD               	bsf	189,7,c	;volatile
  4971                           
  4972                           ;dc_motor.c: 27:     CCPR1H=0;
  4973   006EEC  0E00               	movlw	0
  4974   006EEE  6EAA               	movwf	170,c	;volatile
  4975                           
  4976                           ;dc_motor.c: 28:     CCPR2H=0;
  4977   006EF0  0E00               	movlw	0
  4978   006EF2  6EA6               	movwf	166,c	;volatile
  4979                           
  4980                           ;dc_motor.c: 29:     CCPR3H=0;
  4981   006EF4  0E00               	movlw	0
  4982   006EF6  010F               	movlb	15	; () banked
  4983   006EF8  6F25               	movwf	37,b	;volatile
  4984                           
  4985                           ;dc_motor.c: 30:     CCPR4H=0;
  4986   006EFA  0E00               	movlw	0
  4987   006EFC  6F21               	movwf	33,b	;volatile
  4988                           
  4989                           ;dc_motor.c: 33:     CCPTMRS0bits.C1TSEL=0;
  4990   006EFE  0EFC               	movlw	-4
  4991   006F00  16AD               	andwf	173,f,c	;volatile
  4992                           
  4993                           ;dc_motor.c: 34:     CCPTMRS0bits.C2TSEL=0;
  4994   006F02  0EF3               	movlw	-13
  4995   006F04  16AD               	andwf	173,f,c	;volatile
  4996                           
  4997                           ;dc_motor.c: 35:     CCPTMRS0bits.C3TSEL=0;
  4998   006F06  0ECF               	movlw	-49
  4999   006F08  16AD               	andwf	173,f,c	;volatile
  5000                           
  5001                           ;dc_motor.c: 36:     CCPTMRS0bits.C4TSEL=0;
  5002   006F0A  0E3F               	movlw	-193
  5003   006F0C  16AD               	andwf	173,f,c	;volatile
  5004   006F0E                     
  5005                           ; BSR set to: 15
  5006                           ;dc_motor.c: 39:     CCP1CONbits.FMT=1;
  5007   006F0E  88AB               	bsf	171,4,c	;volatile
  5008                           
  5009                           ;dc_motor.c: 40:     CCP1CONbits.CCP1MODE=0b1100;
  5010   006F10  50AB               	movf	171,w,c	;volatile
  5011   006F12  0BF0               	andlw	-16
  5012   006F14  090C               	iorlw	12
  5013   006F16  6EAB               	movwf	171,c	;volatile
  5014   006F18                     
  5015                           ; BSR set to: 15
  5016                           ;dc_motor.c: 41:     CCP1CONbits.EN=1;
  5017   006F18  8EAB               	bsf	171,7,c	;volatile
  5018   006F1A                     
  5019                           ; BSR set to: 15
  5020                           ;dc_motor.c: 43:     CCP2CONbits.FMT=1;
  5021   006F1A  88A7               	bsf	167,4,c	;volatile
  5022                           
  5023                           ;dc_motor.c: 44:     CCP2CONbits.CCP2MODE=0b1100;
  5024   006F1C  50A7               	movf	167,w,c	;volatile
  5025   006F1E  0BF0               	andlw	-16
  5026   006F20  090C               	iorlw	12
  5027   006F22  6EA7               	movwf	167,c	;volatile
  5028   006F24                     
  5029                           ; BSR set to: 15
  5030                           ;dc_motor.c: 45:     CCP2CONbits.EN=1;
  5031   006F24  8EA7               	bsf	167,7,c	;volatile
  5032   006F26                     
  5033                           ; BSR set to: 15
  5034                           ;dc_motor.c: 47:     CCP3CONbits.FMT=1;
  5035   006F26  8926               	bsf	38,4,b	;volatile
  5036                           
  5037                           ;dc_motor.c: 48:     CCP3CONbits.CCP3MODE=0b1100;
  5038   006F28  5126               	movf	38,w,b	;volatile
  5039   006F2A  0BF0               	andlw	-16
  5040   006F2C  090C               	iorlw	12
  5041   006F2E  6F26               	movwf	38,b	;volatile
  5042   006F30                     
  5043                           ; BSR set to: 15
  5044                           ;dc_motor.c: 49:     CCP3CONbits.EN=1;
  5045   006F30  8F26               	bsf	38,7,b	;volatile
  5046   006F32                     
  5047                           ; BSR set to: 15
  5048                           ;dc_motor.c: 51:     CCP4CONbits.FMT=1;
  5049   006F32  8922               	bsf	34,4,b	;volatile
  5050                           
  5051                           ;dc_motor.c: 52:     CCP4CONbits.CCP4MODE=0b1100;
  5052   006F34  5122               	movf	34,w,b	;volatile
  5053   006F36  0BF0               	andlw	-16
  5054   006F38  090C               	iorlw	12
  5055   006F3A  6F22               	movwf	34,b	;volatile
  5056   006F3C                     
  5057                           ; BSR set to: 15
  5058                           ;dc_motor.c: 53:     CCP4CONbits.EN=1;
  5059   006F3C  8F22               	bsf	34,7,b	;volatile
  5060                           
  5061                           ;dc_motor.c: 56:     RE2PPS=0x05;
  5062   006F3E  0E05               	movlw	5
  5063   006F40  010E               	movlb	14	; () banked
  5064   006F42  6F74               	movwf	116,b	;volatile
  5065                           
  5066                           ;dc_motor.c: 57:     RE4PPS=0x06;
  5067   006F44  0E06               	movlw	6
  5068   006F46  6F76               	movwf	118,b	;volatile
  5069                           
  5070                           ;dc_motor.c: 58:     RC7PPS=0x07;
  5071   006F48  0E07               	movlw	7
  5072   006F4A  6F69               	movwf	105,b	;volatile
  5073                           
  5074                           ;dc_motor.c: 59:     RG6PPS=0x08;
  5075   006F4C  0E08               	movlw	8
  5076   006F4E  6F88               	movwf	136,b	;volatile
  5077   006F50                     
  5078                           ; BSR set to: 14
  5079                           ;dc_motor.c: 62:     TRISEbits.TRISE2=0;
  5080   006F50  9485               	bcf	133,2,c	;volatile
  5081   006F52                     
  5082                           ; BSR set to: 14
  5083                           ;dc_motor.c: 63:     TRISEbits.TRISE4=0;
  5084   006F52  9885               	bcf	133,4,c	;volatile
  5085   006F54                     
  5086                           ; BSR set to: 14
  5087                           ;dc_motor.c: 64:     TRISCbits.TRISC7=0;
  5088   006F54  9E83               	bcf	131,7,c	;volatile
  5089   006F56                     
  5090                           ; BSR set to: 14
  5091                           ;dc_motor.c: 65:     TRISGbits.TRISG6=0;
  5092   006F56  9C87               	bcf	135,6,c	;volatile
  5093   006F58                     
  5094                           ; BSR set to: 14
  5095                           ;dc_motor.c: 68:     LATEbits.LATE2=0;
  5096   006F58  947D               	bcf	125,2,c	;volatile
  5097   006F5A                     
  5098                           ; BSR set to: 14
  5099                           ;dc_motor.c: 69:     LATCbits.LATC7=0;
  5100   006F5A  9E7B               	bcf	123,7,c	;volatile
  5101   006F5C                     
  5102                           ; BSR set to: 14
  5103                           ;dc_motor.c: 70:     LATEbits.LATE4=0;
  5104   006F5C  987D               	bcf	125,4,c	;volatile
  5105   006F5E                     
  5106                           ; BSR set to: 14
  5107                           ;dc_motor.c: 71:     LATGbits.LATG6=0;
  5108   006F5E  9C7F               	bcf	127,6,c	;volatile
  5109   006F60                     
  5110                           ; BSR set to: 14
  5111   006F60  0012               	return		;funcret
  5112   006F62                     __end_of_initDCmotorsPWM:
  5113                           	callstack 0
  5114                           
  5115 ;; *************** function _inch_forward *****************
  5116 ;; Defined at:
  5117 ;;		line 227 in file "dc_motor.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  5120 ;;		 -> main@motorL(9), 
  5121 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  5122 ;;		 -> main@motorR(9), 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1    wreg      void 
  5127 ;; Registers used:
  5128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5136 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5137 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5138 ;;Total ram usage:        6 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; Hardware stack levels required when called: 5
  5141 ;; This function calls:
  5142 ;;		_setMotorPWM
  5143 ;;		_stop
  5144 ;; This function is called by:
  5145 ;;		_main
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text21
  5150   006AEC                     __ptext21:
  5151                           	callstack 0
  5152   006AEC                     _inch_forward:
  5153                           	callstack 25
  5154   006AEC                     
  5155                           ;dc_motor.c: 228:     mL->direction = 0;
  5156   006AEC  EE20 F001          	lfsr	2,1
  5157   006AF0  5019               	movf	inch_forward@mL^0,w,c
  5158   006AF2  26D9               	addwf	fsr2l,f,c
  5159   006AF4  501A               	movf	(inch_forward@mL+1)^0,w,c
  5160   006AF6  22DA               	addwfc	fsr2h,f,c
  5161   006AF8  6ADF               	clrf	indf2,c
  5162                           
  5163                           ;dc_motor.c: 229:     mR->direction = 0;
  5164   006AFA  EE20 F001          	lfsr	2,1
  5165   006AFE  501B               	movf	inch_forward@mR^0,w,c
  5166   006B00  26D9               	addwf	fsr2l,f,c
  5167   006B02  501C               	movf	(inch_forward@mR+1)^0,w,c
  5168   006B04  22DA               	addwfc	fsr2h,f,c
  5169   006B06  6ADF               	clrf	indf2,c
  5170                           
  5171                           ;dc_motor.c: 231:     while ((mL->power) < 20 || (mR->power) < 20){
  5172   006B08  EFBC  F035         	goto	l262
  5173   006B0C                     l5413:
  5174                           
  5175                           ;dc_motor.c: 232:         if ((mL->power) < 20) (mL->power) += 1;
  5176   006B0C  C019  FFD9         	movff	inch_forward@mL,fsr2l
  5177   006B10  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  5178   006B14  0E14               	movlw	20
  5179   006B16  60DF               	cpfslt	indf2,c
  5180   006B18  EF90  F035         	goto	u5541
  5181   006B1C  EF92  F035         	goto	u5540
  5182   006B20                     u5541:
  5183   006B20  EF97  F035         	goto	l5417
  5184   006B24                     u5540:
  5185   006B24  C019  FFD9         	movff	inch_forward@mL,fsr2l
  5186   006B28  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  5187   006B2C  2ADF               	incf	indf2,f,c
  5188   006B2E                     l5417:
  5189                           
  5190                           ;dc_motor.c: 233:         if ((mR->power) < 20) (mR->power) += 1;
  5191   006B2E  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  5192   006B32  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  5193   006B36  0E14               	movlw	20
  5194   006B38  60DF               	cpfslt	indf2,c
  5195   006B3A  EFA1  F035         	goto	u5551
  5196   006B3E  EFA3  F035         	goto	u5550
  5197   006B42                     u5551:
  5198   006B42  EFA8  F035         	goto	l5421
  5199   006B46                     u5550:
  5200   006B46  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  5201   006B4A  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  5202   006B4E  2ADF               	incf	indf2,f,c
  5203   006B50                     l5421:
  5204                           
  5205                           ;dc_motor.c: 235:         setMotorPWM(mL);
  5206   006B50  C019  F00F         	movff	inch_forward@mL,setMotorPWM@m
  5207   006B54  C01A  F010         	movff	inch_forward@mL+1,setMotorPWM@m+1
  5208   006B58  EC64  F031         	call	_setMotorPWM	;wreg free
  5209   006B5C                     
  5210                           ;dc_motor.c: 236:         setMotorPWM(mR);
  5211   006B5C  C01B  F00F         	movff	inch_forward@mR,setMotorPWM@m
  5212   006B60  C01C  F010         	movff	inch_forward@mR+1,setMotorPWM@m+1
  5213   006B64  EC64  F031         	call	_setMotorPWM	;wreg free
  5214   006B68                     
  5215                           ;dc_motor.c: 237:         _delay((unsigned long)((1)*(64000000/4000.0)));
  5216   006B68  0E15               	movlw	21
  5217   006B6A  6E1D               	movwf	??_inch_forward^0,c
  5218   006B6C  0EC6               	movlw	198
  5219   006B6E                     u8127:
  5220   006B6E  2EE8               	decfsz	wreg,f,c
  5221   006B70  D7FE               	bra	u8127
  5222   006B72  2E1D               	decfsz	??_inch_forward^0,f,c
  5223   006B74  D7FC               	bra	u8127
  5224   006B76  D000               	nop2	
  5225   006B78                     l262:
  5226                           
  5227                           ;dc_motor.c: 231:     while ((mL->power) < 20 || (mR->power) < 20){
  5228   006B78  C019  FFD9         	movff	inch_forward@mL,fsr2l
  5229   006B7C  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  5230   006B80  0E13               	movlw	19
  5231   006B82  64DF               	cpfsgt	indf2,c
  5232   006B84  EFC6  F035         	goto	u5561
  5233   006B88  EFC8  F035         	goto	u5560
  5234   006B8C                     u5561:
  5235   006B8C  EF86  F035         	goto	l5413
  5236   006B90                     u5560:
  5237   006B90  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  5238   006B94  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  5239   006B98  0E13               	movlw	19
  5240   006B9A  64DF               	cpfsgt	indf2,c
  5241   006B9C  EFD2  F035         	goto	u5571
  5242   006BA0  EFD4  F035         	goto	u5570
  5243   006BA4                     u5571:
  5244   006BA4  EF86  F035         	goto	l5413
  5245   006BA8                     u5570:
  5246   006BA8                     
  5247                           ;dc_motor.c: 239:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5248   006BA8  0E05               	movlw	5
  5249   006BAA  6E1E               	movwf	(??_inch_forward+1)^0,c
  5250   006BAC  0E0F               	movlw	15
  5251   006BAE  6E1D               	movwf	??_inch_forward^0,c
  5252   006BB0  0EF1               	movlw	241
  5253   006BB2                     u8137:
  5254   006BB2  2EE8               	decfsz	wreg,f,c
  5255   006BB4  D7FE               	bra	u8137
  5256   006BB6  2E1D               	decfsz	??_inch_forward^0,f,c
  5257   006BB8  D7FC               	bra	u8137
  5258   006BBA  2E1E               	decfsz	(??_inch_forward+1)^0,f,c
  5259   006BBC  D7FA               	bra	u8137
  5260   006BBE  0000               	nop	
  5261   006BC0                     
  5262                           ;dc_motor.c: 240:     stop(mL, mR);
  5263   006BC0  C019  F015         	movff	inch_forward@mL,stop@mL
  5264   006BC4  C01A  F016         	movff	inch_forward@mL+1,stop@mL+1
  5265   006BC8  C01B  F017         	movff	inch_forward@mR,stop@mR
  5266   006BCC  C01C  F018         	movff	inch_forward@mR+1,stop@mR+1
  5267   006BD0  ECB1  F037         	call	_stop	;wreg free
  5268   006BD4  0012               	return		;funcret
  5269   006BD6                     __end_of_inch_forward:
  5270                           	callstack 0
  5271                           
  5272 ;; *************** function _stop *****************
  5273 ;; Defined at:
  5274 ;;		line 114 in file "dc_motor.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  5277 ;;		 -> main@motorL(9), 
  5278 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  5279 ;;		 -> main@motorR(9), 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;		None
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      void 
  5284 ;; Registers used:
  5285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5294 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5295 ;;Total ram usage:        4 bytes
  5296 ;; Hardware stack levels used: 1
  5297 ;; Hardware stack levels required when called: 4
  5298 ;; This function calls:
  5299 ;;		_setMotorPWM
  5300 ;; This function is called by:
  5301 ;;		_turn_left_90
  5302 ;;		_turn_right_90
  5303 ;;		_turn_left_135
  5304 ;;		_turn_right_135
  5305 ;;		_reverse_after_read
  5306 ;;		_reverse_one_square
  5307 ;;		_inch_forward
  5308 ;;		_main
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text22
  5313   006F62                     __ptext22:
  5314                           	callstack 0
  5315   006F62                     _stop:
  5316                           	callstack 25
  5317   006F62                     
  5318                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  5319   006F62  EFE5  F037         	goto	l4999
  5320   006F66                     l4985:
  5321                           
  5322                           ;dc_motor.c: 116:         if ((mL->power) > 0) (mL->power) -= 1;
  5323   006F66  C015  FFD9         	movff	stop@mL,fsr2l
  5324   006F6A  C016  FFDA         	movff	stop@mL+1,fsr2h
  5325   006F6E  50DF               	movf	indf2,w,c
  5326   006F70  B4D8               	btfsc	status,2,c
  5327   006F72  EFBD  F037         	goto	u5091
  5328   006F76  EFBF  F037         	goto	u5090
  5329   006F7A                     u5091:
  5330   006F7A  EFC4  F037         	goto	l4989
  5331   006F7E                     u5090:
  5332   006F7E  C015  FFD9         	movff	stop@mL,fsr2l
  5333   006F82  C016  FFDA         	movff	stop@mL+1,fsr2h
  5334   006F86  06DF               	decf	indf2,f,c
  5335   006F88                     l4989:
  5336                           
  5337                           ;dc_motor.c: 117:         if ((mR->power) > 0) (mR->power) -= 1;
  5338   006F88  C017  FFD9         	movff	stop@mR,fsr2l
  5339   006F8C  C018  FFDA         	movff	stop@mR+1,fsr2h
  5340   006F90  50DF               	movf	indf2,w,c
  5341   006F92  B4D8               	btfsc	status,2,c
  5342   006F94  EFCE  F037         	goto	u5101
  5343   006F98  EFD0  F037         	goto	u5100
  5344   006F9C                     u5101:
  5345   006F9C  EFD5  F037         	goto	l4993
  5346   006FA0                     u5100:
  5347   006FA0  C017  FFD9         	movff	stop@mR,fsr2l
  5348   006FA4  C018  FFDA         	movff	stop@mR+1,fsr2h
  5349   006FA8  06DF               	decf	indf2,f,c
  5350   006FAA                     l4993:
  5351                           
  5352                           ;dc_motor.c: 119:         setMotorPWM(mL);
  5353   006FAA  C015  F00F         	movff	stop@mL,setMotorPWM@m
  5354   006FAE  C016  F010         	movff	stop@mL+1,setMotorPWM@m+1
  5355   006FB2  EC64  F031         	call	_setMotorPWM	;wreg free
  5356   006FB6                     
  5357                           ;dc_motor.c: 120:         setMotorPWM(mR);
  5358   006FB6  C017  F00F         	movff	stop@mR,setMotorPWM@m
  5359   006FBA  C018  F010         	movff	stop@mR+1,setMotorPWM@m+1
  5360   006FBE  EC64  F031         	call	_setMotorPWM	;wreg free
  5361   006FC2                     
  5362                           ;dc_motor.c: 121:         _delay((unsigned long)((25)*(64000000/4000000.0)));
  5363   006FC2  0E85               	movlw	133
  5364   006FC4                     u8147:
  5365   006FC4  2EE8               	decfsz	wreg,f,c
  5366   006FC6  D7FE               	bra	u8147
  5367   006FC8  0000               	nop	
  5368   006FCA                     l4999:
  5369                           
  5370                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  5371   006FCA  C015  FFD9         	movff	stop@mL,fsr2l
  5372   006FCE  C016  FFDA         	movff	stop@mL+1,fsr2h
  5373   006FD2  50DF               	movf	indf2,w,c
  5374   006FD4  A4D8               	btfss	status,2,c
  5375   006FD6  EFEF  F037         	goto	u5111
  5376   006FDA  EFF1  F037         	goto	u5110
  5377   006FDE                     u5111:
  5378   006FDE  EFB3  F037         	goto	l4985
  5379   006FE2                     u5110:
  5380   006FE2  C017  FFD9         	movff	stop@mR,fsr2l
  5381   006FE6  C018  FFDA         	movff	stop@mR+1,fsr2h
  5382   006FEA  50DF               	movf	indf2,w,c
  5383   006FEC  A4D8               	btfss	status,2,c
  5384   006FEE  EFFB  F037         	goto	u5121
  5385   006FF2  EFFD  F037         	goto	u5120
  5386   006FF6                     u5121:
  5387   006FF6  EFB3  F037         	goto	l4985
  5388   006FFA                     u5120:
  5389   006FFA  0012               	return		;funcret
  5390   006FFC                     __end_of_stop:
  5391                           	callstack 0
  5392                           
  5393 ;; *************** function _get16bitTMR0val *****************
  5394 ;; Defined at:
  5395 ;;		line 27 in file "timers.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;		None
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  timer_val       2    5[COMRAM] unsigned int 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  2    1[COMRAM] unsigned int 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5411 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5412 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5413 ;;Total ram usage:        6 bytes
  5414 ;; Hardware stack levels used: 1
  5415 ;; Hardware stack levels required when called: 2
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_main
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text23
  5424   00756C                     __ptext23:
  5425                           	callstack 0
  5426   00756C                     _get16bitTMR0val:
  5427                           	callstack 28
  5428   00756C                     
  5429                           ;timers.c: 29:     unsigned int timer_val = TMR0L;
  5430   00756C  CFD3 F006          	movff	4051,get16bitTMR0val@timer_val	;volatile
  5431   007570  6A07               	clrf	(get16bitTMR0val@timer_val+1)^0,c
  5432   007572                     
  5433                           ;timers.c: 30:     timer_val |= (TMR0H << 8);
  5434   007572  50D4               	movf	212,w,c	;volatile
  5435   007574  6E05               	movwf	(??_get16bitTMR0val+1)^0,c
  5436   007576  6A04               	clrf	??_get16bitTMR0val^0,c
  5437   007578  5004               	movf	??_get16bitTMR0val^0,w,c
  5438   00757A  1206               	iorwf	get16bitTMR0val@timer_val^0,f,c
  5439   00757C  5005               	movf	(??_get16bitTMR0val+1)^0,w,c
  5440   00757E  1207               	iorwf	(get16bitTMR0val@timer_val+1)^0,f,c
  5441   007580                     
  5442                           ;timers.c: 31:     return timer_val;
  5443   007580  C006  F002         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  5444   007584  C007  F003         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  5445   007588  0012               	return		;funcret
  5446   00758A                     __end_of_get16bitTMR0val:
  5447                           	callstack 0
  5448                           
  5449 ;; *************** function _fullSpeedAhead *****************
  5450 ;; Defined at:
  5451 ;;		line 99 in file "dc_motor.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  5454 ;;		 -> main@motorL(9), 
  5455 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  5456 ;;		 -> main@motorR(9), 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1    wreg      void 
  5461 ;; Registers used:
  5462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5468 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5471 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5472 ;;Total ram usage:        5 bytes
  5473 ;; Hardware stack levels used: 1
  5474 ;; Hardware stack levels required when called: 4
  5475 ;; This function calls:
  5476 ;;		_setMotorPWM
  5477 ;; This function is called by:
  5478 ;;		_main
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           	psect	text24
  5483   006C9A                     __ptext24:
  5484                           	callstack 0
  5485   006C9A                     _fullSpeedAhead:
  5486                           	callstack 26
  5487   006C9A                     
  5488                           ;dc_motor.c: 100:     mL->direction = 0;
  5489   006C9A  EE20 F001          	lfsr	2,1
  5490   006C9E  5015               	movf	fullSpeedAhead@mL^0,w,c
  5491   006CA0  26D9               	addwf	fsr2l,f,c
  5492   006CA2  5016               	movf	(fullSpeedAhead@mL+1)^0,w,c
  5493   006CA4  22DA               	addwfc	fsr2h,f,c
  5494   006CA6  6ADF               	clrf	indf2,c
  5495                           
  5496                           ;dc_motor.c: 101:     mR->direction = 0;
  5497   006CA8  EE20 F001          	lfsr	2,1
  5498   006CAC  5017               	movf	fullSpeedAhead@mR^0,w,c
  5499   006CAE  26D9               	addwf	fsr2l,f,c
  5500   006CB0  5018               	movf	(fullSpeedAhead@mR+1)^0,w,c
  5501   006CB2  22DA               	addwfc	fsr2h,f,c
  5502   006CB4  6ADF               	clrf	indf2,c
  5503                           
  5504                           ;dc_motor.c: 103:     while ((mL->power) < 70 || (mR->power) < 70){
  5505   006CB6  EF92  F036         	goto	l198
  5506   006CBA                     l5259:
  5507                           
  5508                           ;dc_motor.c: 104:         if ((mL->power) < 70) (mL->power) += 1;
  5509   006CBA  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5510   006CBE  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5511   006CC2  0E46               	movlw	70
  5512   006CC4  60DF               	cpfslt	indf2,c
  5513   006CC6  EF67  F036         	goto	u5261
  5514   006CCA  EF69  F036         	goto	u5260
  5515   006CCE                     u5261:
  5516   006CCE  EF6E  F036         	goto	l5263
  5517   006CD2                     u5260:
  5518   006CD2  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5519   006CD6  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5520   006CDA  2ADF               	incf	indf2,f,c
  5521   006CDC                     l5263:
  5522                           
  5523                           ;dc_motor.c: 105:         if ((mR->power) < 70) (mR->power) += 1;
  5524   006CDC  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5525   006CE0  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5526   006CE4  0E46               	movlw	70
  5527   006CE6  60DF               	cpfslt	indf2,c
  5528   006CE8  EF78  F036         	goto	u5271
  5529   006CEC  EF7A  F036         	goto	u5270
  5530   006CF0                     u5271:
  5531   006CF0  EF7F  F036         	goto	l5267
  5532   006CF4                     u5270:
  5533   006CF4  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5534   006CF8  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5535   006CFC  2ADF               	incf	indf2,f,c
  5536   006CFE                     l5267:
  5537                           
  5538                           ;dc_motor.c: 107:         setMotorPWM(mL);
  5539   006CFE  C015  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  5540   006D02  C016  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  5541   006D06  EC64  F031         	call	_setMotorPWM	;wreg free
  5542   006D0A                     
  5543                           ;dc_motor.c: 108:         setMotorPWM(mR);
  5544   006D0A  C017  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  5545   006D0E  C018  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  5546   006D12  EC64  F031         	call	_setMotorPWM	;wreg free
  5547   006D16                     
  5548                           ;dc_motor.c: 109:         _delay((unsigned long)((2)*(64000000/4000.0)));
  5549   006D16  0E2A               	movlw	42
  5550   006D18  6E19               	movwf	??_fullSpeedAhead^0,c
  5551   006D1A  0E8E               	movlw	142
  5552   006D1C                     u8157:
  5553   006D1C  2EE8               	decfsz	wreg,f,c
  5554   006D1E  D7FE               	bra	u8157
  5555   006D20  2E19               	decfsz	??_fullSpeedAhead^0,f,c
  5556   006D22  D7FC               	bra	u8157
  5557   006D24                     l198:
  5558                           
  5559                           ;dc_motor.c: 103:     while ((mL->power) < 70 || (mR->power) < 70){
  5560   006D24  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5561   006D28  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5562   006D2C  0E45               	movlw	69
  5563   006D2E  64DF               	cpfsgt	indf2,c
  5564   006D30  EF9C  F036         	goto	u5281
  5565   006D34  EF9E  F036         	goto	u5280
  5566   006D38                     u5281:
  5567   006D38  EF5D  F036         	goto	l5259
  5568   006D3C                     u5280:
  5569   006D3C  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5570   006D40  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5571   006D44  0E45               	movlw	69
  5572   006D46  64DF               	cpfsgt	indf2,c
  5573   006D48  EFA8  F036         	goto	u5291
  5574   006D4C  EFAA  F036         	goto	u5290
  5575   006D50                     u5291:
  5576   006D50  EF5D  F036         	goto	l5259
  5577   006D54                     u5290:
  5578   006D54  0012               	return		;funcret
  5579   006D56                     __end_of_fullSpeedAhead:
  5580                           	callstack 0
  5581                           
  5582 ;; *************** function _setMotorPWM *****************
  5583 ;; Defined at:
  5584 ;;		line 76 in file "dc_motor.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  m               2   14[COMRAM] PTR struct DC_motor
  5587 ;;		 -> main@motorR(9), main@motorL(9), 
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;  negDuty         1   19[COMRAM] unsigned char 
  5590 ;;  posDuty         1   18[COMRAM] unsigned char 
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5602 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5603 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5604 ;;Total ram usage:        6 bytes
  5605 ;; Hardware stack levels used: 1
  5606 ;; Hardware stack levels required when called: 3
  5607 ;; This function calls:
  5608 ;;		___lwdiv
  5609 ;;		___wmul
  5610 ;; This function is called by:
  5611 ;;		_fullSpeedAhead
  5612 ;;		_stop
  5613 ;;		_turn_left_90
  5614 ;;		_turn_right_90
  5615 ;;		_turn_left_135
  5616 ;;		_turn_right_135
  5617 ;;		_reverse_after_read
  5618 ;;		_reverse_one_square
  5619 ;;		_inch_forward
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text25
  5624   0062C8                     __ptext25:
  5625                           	callstack 0
  5626   0062C8                     _setMotorPWM:
  5627                           	callstack 25
  5628   0062C8                     
  5629                           ;dc_motor.c: 76: void setMotorPWM(struct DC_motor *m);dc_motor.c: 77: {;dc_motor.c: 78: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 80:     if(m->brakemode) {
  5630   0062C8  EE20 F002          	lfsr	2,2
  5631   0062CC  500F               	movf	setMotorPWM@m^0,w,c
  5632   0062CE  26D9               	addwf	fsr2l,f,c
  5633   0062D0  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5634   0062D2  22DA               	addwfc	fsr2h,f,c
  5635   0062D4  50DF               	movf	indf2,w,c
  5636   0062D6  B4D8               	btfsc	status,2,c
  5637   0062D8  EF70  F031         	goto	u3911
  5638   0062DC  EF72  F031         	goto	u3910
  5639   0062E0                     u3911:
  5640   0062E0  EFA6  F031         	goto	l4207
  5641   0062E4                     u3910:
  5642   0062E4                     
  5643                           ;dc_motor.c: 81:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  5644   0062E4  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  5645   0062E8  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5646   0062EC  50DF               	movf	indf2,w,c
  5647   0062EE  6E11               	movwf	??_setMotorPWM^0,c
  5648   0062F0  5011               	movf	??_setMotorPWM^0,w,c
  5649   0062F2  6E02               	movwf	___wmul@multiplier^0,c
  5650   0062F4  6A03               	clrf	(___wmul@multiplier+1)^0,c
  5651   0062F6  EE20 F003          	lfsr	2,3
  5652   0062FA  500F               	movf	setMotorPWM@m^0,w,c
  5653   0062FC  26D9               	addwf	fsr2l,f,c
  5654   0062FE  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5655   006300  22DA               	addwfc	fsr2h,f,c
  5656   006302  CFDE F004          	movff	postinc2,___wmul@multiplicand
  5657   006306  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  5658   00630A  EC74  F03A         	call	___wmul	;wreg free
  5659   00630E  C002  F008         	movff	?___wmul,___lwdiv@dividend
  5660   006312  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  5661   006316  0E00               	movlw	0
  5662   006318  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  5663   00631A  0E64               	movlw	100
  5664   00631C  6E0A               	movwf	___lwdiv@divisor^0,c
  5665   00631E  EC48  F038         	call	___lwdiv	;wreg free
  5666   006322  EE20 F003          	lfsr	2,3
  5667   006326  500F               	movf	setMotorPWM@m^0,w,c
  5668   006328  26D9               	addwf	fsr2l,f,c
  5669   00632A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5670   00632C  22DA               	addwfc	fsr2h,f,c
  5671   00632E  50DF               	movf	indf2,w,c
  5672   006330  6E12               	movwf	(??_setMotorPWM+1)^0,c
  5673   006332  5008               	movf	?___lwdiv^0,w,c
  5674   006334  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  5675   006336  6E13               	movwf	setMotorPWM@posDuty^0,c
  5676   006338                     
  5677                           ;dc_motor.c: 82:         negDuty=m->PWMperiod;
  5678   006338  EE20 F003          	lfsr	2,3
  5679   00633C  500F               	movf	setMotorPWM@m^0,w,c
  5680   00633E  26D9               	addwf	fsr2l,f,c
  5681   006340  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5682   006342  22DA               	addwfc	fsr2h,f,c
  5683   006344  50DF               	movf	indf2,w,c
  5684   006346  6E14               	movwf	setMotorPWM@negDuty^0,c
  5685                           
  5686                           ;dc_motor.c: 83:     }
  5687   006348  EFC9  F031         	goto	l4211
  5688   00634C                     l4207:
  5689                           
  5690                           ;dc_motor.c: 85:         posDuty=0;
  5691   00634C  0E00               	movlw	0
  5692   00634E  6E13               	movwf	setMotorPWM@posDuty^0,c
  5693   006350                     
  5694                           ;dc_motor.c: 86:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  5695   006350  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  5696   006354  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5697   006358  50DF               	movf	indf2,w,c
  5698   00635A  6E11               	movwf	??_setMotorPWM^0,c
  5699   00635C  5011               	movf	??_setMotorPWM^0,w,c
  5700   00635E  6E02               	movwf	___wmul@multiplier^0,c
  5701   006360  6A03               	clrf	(___wmul@multiplier+1)^0,c
  5702   006362  EE20 F003          	lfsr	2,3
  5703   006366  500F               	movf	setMotorPWM@m^0,w,c
  5704   006368  26D9               	addwf	fsr2l,f,c
  5705   00636A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5706   00636C  22DA               	addwfc	fsr2h,f,c
  5707   00636E  CFDE F004          	movff	postinc2,___wmul@multiplicand
  5708   006372  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  5709   006376  EC74  F03A         	call	___wmul	;wreg free
  5710   00637A  C002  F008         	movff	?___wmul,___lwdiv@dividend
  5711   00637E  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  5712   006382  0E00               	movlw	0
  5713   006384  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  5714   006386  0E64               	movlw	100
  5715   006388  6E0A               	movwf	___lwdiv@divisor^0,c
  5716   00638A  EC48  F038         	call	___lwdiv	;wreg free
  5717   00638E  5008               	movf	?___lwdiv^0,w,c
  5718   006390  6E14               	movwf	setMotorPWM@negDuty^0,c
  5719   006392                     l4211:
  5720                           
  5721                           ;dc_motor.c: 89:     if (m->direction) {
  5722   006392  EE20 F001          	lfsr	2,1
  5723   006396  500F               	movf	setMotorPWM@m^0,w,c
  5724   006398  26D9               	addwf	fsr2l,f,c
  5725   00639A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5726   00639C  22DA               	addwfc	fsr2h,f,c
  5727   00639E  50DF               	movf	indf2,w,c
  5728   0063A0  B4D8               	btfsc	status,2,c
  5729   0063A2  EFD5  F031         	goto	u3921
  5730   0063A6  EFD7  F031         	goto	u3920
  5731   0063AA                     u3921:
  5732   0063AA  EFF9  F031         	goto	l4215
  5733   0063AE                     u3920:
  5734   0063AE                     
  5735                           ;dc_motor.c: 90:         *(m->posDutyHighByte)=posDuty;
  5736   0063AE  EE20 F005          	lfsr	2,5
  5737   0063B2  500F               	movf	setMotorPWM@m^0,w,c
  5738   0063B4  26D9               	addwf	fsr2l,f,c
  5739   0063B6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5740   0063B8  22DA               	addwfc	fsr2h,f,c
  5741   0063BA  CFDE F011          	movff	postinc2,??_setMotorPWM
  5742   0063BE  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5743   0063C2  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5744   0063C6  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5745   0063CA  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  5746                           
  5747                           ;dc_motor.c: 91:         *(m->negDutyHighByte)=negDuty;
  5748   0063CE  EE20 F007          	lfsr	2,7
  5749   0063D2  500F               	movf	setMotorPWM@m^0,w,c
  5750   0063D4  26D9               	addwf	fsr2l,f,c
  5751   0063D6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5752   0063D8  22DA               	addwfc	fsr2h,f,c
  5753   0063DA  CFDE F011          	movff	postinc2,??_setMotorPWM
  5754   0063DE  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5755   0063E2  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5756   0063E6  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5757   0063EA  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  5758                           
  5759                           ;dc_motor.c: 92:     } else {
  5760   0063EE  EF19  F032         	goto	l195
  5761   0063F2                     l4215:
  5762                           
  5763                           ;dc_motor.c: 93:         *(m->posDutyHighByte)=negDuty;
  5764   0063F2  EE20 F005          	lfsr	2,5
  5765   0063F6  500F               	movf	setMotorPWM@m^0,w,c
  5766   0063F8  26D9               	addwf	fsr2l,f,c
  5767   0063FA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5768   0063FC  22DA               	addwfc	fsr2h,f,c
  5769   0063FE  CFDE F011          	movff	postinc2,??_setMotorPWM
  5770   006402  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5771   006406  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5772   00640A  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5773   00640E  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  5774                           
  5775                           ;dc_motor.c: 94:         *(m->negDutyHighByte)=posDuty;
  5776   006412  EE20 F007          	lfsr	2,7
  5777   006416  500F               	movf	setMotorPWM@m^0,w,c
  5778   006418  26D9               	addwf	fsr2l,f,c
  5779   00641A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5780   00641C  22DA               	addwfc	fsr2h,f,c
  5781   00641E  CFDE F011          	movff	postinc2,??_setMotorPWM
  5782   006422  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5783   006426  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5784   00642A  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5785   00642E  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  5786   006432                     l195:
  5787   006432  0012               	return		;funcret
  5788   006434                     __end_of_setMotorPWM:
  5789                           	callstack 0
  5790                           
  5791 ;; *************** function ___wmul *****************
  5792 ;; Defined at:
  5793 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  multiplier      2    1[COMRAM] unsigned int 
  5796 ;;  multiplicand    2    3[COMRAM] unsigned int 
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;  product         2    5[COMRAM] unsigned int 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  2    1[COMRAM] unsigned int 
  5801 ;; Registers used:
  5802 ;;		wreg, status,2, status,0, prodl, prodh
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5809 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5811 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5812 ;;Total ram usage:        6 bytes
  5813 ;; Hardware stack levels used: 1
  5814 ;; Hardware stack levels required when called: 2
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_setMotorPWM
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text26
  5823   0074E8                     __ptext26:
  5824                           	callstack 0
  5825   0074E8                     ___wmul:
  5826                           	callstack 25
  5827   0074E8  5002               	movf	___wmul@multiplier^0,w,c
  5828   0074EA  0204               	mulwf	___wmul@multiplicand^0,c
  5829   0074EC  CFF3 F006          	movff	prodl,___wmul@product
  5830   0074F0  CFF4 F007          	movff	prodh,___wmul@product+1
  5831   0074F4  5002               	movf	___wmul@multiplier^0,w,c
  5832   0074F6  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  5833   0074F8  50F3               	movf	243,w,c
  5834   0074FA  2607               	addwf	(___wmul@product+1)^0,f,c
  5835   0074FC  5003               	movf	(___wmul@multiplier+1)^0,w,c
  5836   0074FE  0204               	mulwf	___wmul@multiplicand^0,c
  5837   007500  50F3               	movf	243,w,c
  5838   007502  2607               	addwf	(___wmul@product+1)^0,f,c
  5839   007504  C006  F002         	movff	___wmul@product,?___wmul
  5840   007508  C007  F003         	movff	___wmul@product+1,?___wmul+1
  5841   00750C  0012               	return		;funcret
  5842   00750E                     __end_of___wmul:
  5843                           	callstack 0
  5844                           
  5845 ;; *************** function ___lwdiv *****************
  5846 ;; Defined at:
  5847 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;  dividend        2    7[COMRAM] unsigned int 
  5850 ;;  divisor         2    9[COMRAM] unsigned int 
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  quotient        2   11[COMRAM] unsigned int 
  5853 ;;  counter         1   13[COMRAM] unsigned char 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  2    7[COMRAM] unsigned int 
  5856 ;; Registers used:
  5857 ;;		wreg, status,2, status,0
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5863 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5864 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5866 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5867 ;;Total ram usage:        7 bytes
  5868 ;; Hardware stack levels used: 1
  5869 ;; Hardware stack levels required when called: 2
  5870 ;; This function calls:
  5871 ;;		Nothing
  5872 ;; This function is called by:
  5873 ;;		_setMotorPWM
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text27
  5878   007090                     __ptext27:
  5879                           	callstack 0
  5880   007090                     ___lwdiv:
  5881                           	callstack 25
  5882   007090  0E00               	movlw	0
  5883   007092  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  5884   007094  0E00               	movlw	0
  5885   007096  6E0C               	movwf	___lwdiv@quotient^0,c
  5886   007098  500A               	movf	___lwdiv@divisor^0,w,c
  5887   00709A  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5888   00709C  B4D8               	btfsc	status,2,c
  5889   00709E  EF53  F038         	goto	u3691
  5890   0070A2  EF55  F038         	goto	u3690
  5891   0070A6                     u3691:
  5892   0070A6  EF7D  F038         	goto	l1056
  5893   0070AA                     u3690:
  5894   0070AA  0E01               	movlw	1
  5895   0070AC  6E0E               	movwf	___lwdiv@counter^0,c
  5896   0070AE  EF5D  F038         	goto	l4091
  5897   0070B2                     l4089:
  5898   0070B2  90D8               	bcf	status,0,c
  5899   0070B4  360A               	rlcf	___lwdiv@divisor^0,f,c
  5900   0070B6  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5901   0070B8  2A0E               	incf	___lwdiv@counter^0,f,c
  5902   0070BA                     l4091:
  5903   0070BA  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  5904   0070BC  EF62  F038         	goto	u3701
  5905   0070C0  EF64  F038         	goto	u3700
  5906   0070C4                     u3701:
  5907   0070C4  EF59  F038         	goto	l4089
  5908   0070C8                     u3700:
  5909   0070C8                     l4093:
  5910   0070C8  90D8               	bcf	status,0,c
  5911   0070CA  360C               	rlcf	___lwdiv@quotient^0,f,c
  5912   0070CC  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5913   0070CE  500A               	movf	___lwdiv@divisor^0,w,c
  5914   0070D0  5C08               	subwf	___lwdiv@dividend^0,w,c
  5915   0070D2  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  5916   0070D4  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5917   0070D6  A0D8               	btfss	status,0,c
  5918   0070D8  EF70  F038         	goto	u3711
  5919   0070DC  EF72  F038         	goto	u3710
  5920   0070E0                     u3711:
  5921   0070E0  EF77  F038         	goto	l4101
  5922   0070E4                     u3710:
  5923   0070E4  500A               	movf	___lwdiv@divisor^0,w,c
  5924   0070E6  5E08               	subwf	___lwdiv@dividend^0,f,c
  5925   0070E8  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  5926   0070EA  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5927   0070EC  800C               	bsf	___lwdiv@quotient^0,0,c
  5928   0070EE                     l4101:
  5929   0070EE  90D8               	bcf	status,0,c
  5930   0070F0  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5931   0070F2  320A               	rrcf	___lwdiv@divisor^0,f,c
  5932   0070F4  2E0E               	decfsz	___lwdiv@counter^0,f,c
  5933   0070F6  EF64  F038         	goto	l4093
  5934   0070FA                     l1056:
  5935   0070FA  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  5936   0070FE  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5937   007102  0012               	return		;funcret
  5938   007104                     __end_of___lwdiv:
  5939                           	callstack 0
  5940                           
  5941 ;; *************** function _decide_action *****************
  5942 ;; Defined at:
  5943 ;;		line 114 in file "color.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  red_unsigned    2   17[BANK0 ] unsigned int 
  5946 ;;  green_unsign    2   19[BANK0 ] unsigned int 
  5947 ;;  blue_unsigne    2   21[BANK0 ] unsigned int 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  i               1  127[BANK2 ] unsigned char 
  5950 ;;  rgb_comp       32   90[BANK2 ] float [8]
  5951 ;;  blue_val       20   60[BANK2 ] unsigned char [20]
  5952 ;;  green_val      20   40[BANK2 ] unsigned char [20]
  5953 ;;  red_val        20   20[BANK2 ] unsigned char [20]
  5954 ;;  clear_val      20    0[BANK2 ] unsigned char [20]
  5955 ;;  blue_r          4  148[BANK2 ] float 
  5956 ;;  green_r         4  144[BANK2 ] float 
  5957 ;;  red_r           4  140[BANK2 ] float 
  5958 ;;  blue            4  136[BANK2 ] float 
  5959 ;;  green           4  132[BANK2 ] float 
  5960 ;;  red             4  128[BANK2 ] float 
  5961 ;;  total           4  123[BANK2 ] float 
  5962 ;;  pgreen_val      2   84[BANK2 ] PTR unsigned char 
  5963 ;;		 -> decide_action@green_val(20), 
  5964 ;;  pblue_val       2   82[BANK2 ] PTR unsigned char 
  5965 ;;		 -> decide_action@blue_val(20), 
  5966 ;;  pred_val        2   80[BANK2 ] PTR unsigned char 
  5967 ;;		 -> decide_action@red_val(20), 
  5968 ;;  pclear_val      2    0        PTR unsigned char 
  5969 ;;		 -> decide_action@clear_val(20), 
  5970 ;;  action          1  122[BANK2 ] unsigned char 
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  1    wreg      unsigned char 
  5973 ;; Registers used:
  5974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5980 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5981 ;;      Locals:         0       0       0     180       0       0       0       0       0       0       0       0       
      +0       0       0
  5982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5983 ;;      Totals:         0       6       0     180       0       0       0       0       0       0       0       0       
      +0       0       0
  5984 ;;Total ram usage:      186 bytes
  5985 ;; Hardware stack levels used: 1
  5986 ;; Hardware stack levels required when called: 5
  5987 ;; This function calls:
  5988 ;;		___fladd
  5989 ;;		___fldiv
  5990 ;;		___flge
  5991 ;;		___flsub
  5992 ;;		___xxtofl
  5993 ;;		_color_writetoaddr
  5994 ;;		_powf
  5995 ;;		_sqrtf
  5996 ;; This function is called by:
  5997 ;;		_main
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text28
  6002   003302                     __ptext28:
  6003                           	callstack 0
  6004   003302                     _decide_action:
  6005                           	callstack 25
  6006   003302                     
  6007                           ;color.c: 126:     pred_val = &red_val[0];
  6008   003302  0E14               	movlw	low decide_action@red_val
  6009   003304  0102               	movlb	2	; () banked
  6010   003306  6F50               	movwf	decide_action@pred_val& (0+255),b
  6011   003308  0E02               	movlw	high decide_action@red_val
  6012   00330A  6F51               	movwf	(decide_action@pred_val+1)& (0+255),b
  6013                           
  6014                           ;color.c: 127:     pgreen_val = &green_val[0];
  6015   00330C  0E28               	movlw	low decide_action@green_val
  6016   00330E  6F54               	movwf	decide_action@pgreen_val& (0+255),b
  6017   003310  0E02               	movlw	high decide_action@green_val
  6018   003312  6F55               	movwf	(decide_action@pgreen_val+1)& (0+255),b
  6019                           
  6020                           ;color.c: 128:     pblue_val = &blue_val[0];
  6021   003314  0E3C               	movlw	low decide_action@blue_val
  6022   003316  6F52               	movwf	decide_action@pblue_val& (0+255),b
  6023   003318  0E02               	movlw	high decide_action@blue_val
  6024   00331A  6F53               	movwf	(decide_action@pblue_val+1)& (0+255),b
  6025   00331C                     
  6026                           ; BSR set to: 2
  6027                           ;color.c: 130:     float red, green, blue;;color.c: 131:     float red_r, green_r, blue_
      +                          r;;color.c: 132:     float rgb_comp[8];;color.c: 133:     char action;;color.c: 135:    
      +                           red = (float)red_unsigned;
  6028   00331C  C0EB  F002         	movff	decide_action@red_unsigned,___xxtofl@val
  6029   003320  C0EC  F003         	movff	decide_action@red_unsigned+1,___xxtofl@val+1
  6030   003324  6A04               	clrf	(___xxtofl@val+2)^0,c
  6031   003326  6A05               	clrf	(___xxtofl@val+3)^0,c
  6032   003328  0E00               	movlw	0
  6033   00332A  EC8A  F030         	call	___xxtofl
  6034   00332E  C002  F280         	movff	?___xxtofl,decide_action@red
  6035   003332  C003  F281         	movff	?___xxtofl+1,decide_action@red+1
  6036   003336  C004  F282         	movff	?___xxtofl+2,decide_action@red+2
  6037   00333A  C005  F283         	movff	?___xxtofl+3,decide_action@red+3
  6038   00333E                     
  6039                           ;color.c: 136:     green = (float)green_unsigned;
  6040   00333E  C0ED  F002         	movff	decide_action@green_unsigned,___xxtofl@val
  6041   003342  C0EE  F003         	movff	decide_action@green_unsigned+1,___xxtofl@val+1
  6042   003346  6A04               	clrf	(___xxtofl@val+2)^0,c
  6043   003348  6A05               	clrf	(___xxtofl@val+3)^0,c
  6044   00334A  0E00               	movlw	0
  6045   00334C  EC8A  F030         	call	___xxtofl
  6046   003350  C002  F284         	movff	?___xxtofl,decide_action@green
  6047   003354  C003  F285         	movff	?___xxtofl+1,decide_action@green+1
  6048   003358  C004  F286         	movff	?___xxtofl+2,decide_action@green+2
  6049   00335C  C005  F287         	movff	?___xxtofl+3,decide_action@green+3
  6050   003360                     
  6051                           ;color.c: 137:     blue = (float)blue_unsigned;
  6052   003360  C0EF  F002         	movff	decide_action@blue_unsigned,___xxtofl@val
  6053   003364  C0F0  F003         	movff	decide_action@blue_unsigned+1,___xxtofl@val+1
  6054   003368  6A04               	clrf	(___xxtofl@val+2)^0,c
  6055   00336A  6A05               	clrf	(___xxtofl@val+3)^0,c
  6056   00336C  0E00               	movlw	0
  6057   00336E  EC8A  F030         	call	___xxtofl
  6058   003372  C002  F288         	movff	?___xxtofl,decide_action@blue
  6059   003376  C003  F289         	movff	?___xxtofl+1,decide_action@blue+1
  6060   00337A  C004  F28A         	movff	?___xxtofl+2,decide_action@blue+2
  6061   00337E  C005  F28B         	movff	?___xxtofl+3,decide_action@blue+3
  6062   003382                     
  6063                           ;color.c: 140:     if(red < 666){red = 0;} else{red -= 699;}
  6064   003382  C280  F04C         	movff	decide_action@red,___flge@ff1
  6065   003386  C281  F04D         	movff	decide_action@red+1,___flge@ff1+1
  6066   00338A  C282  F04E         	movff	decide_action@red+2,___flge@ff1+2
  6067   00338E  C283  F04F         	movff	decide_action@red+3,___flge@ff1+3
  6068   003392  0E00               	movlw	0
  6069   003394  6E50               	movwf	___flge@ff2^0,c
  6070   003396  0E80               	movlw	128
  6071   003398  6E51               	movwf	(___flge@ff2+1)^0,c
  6072   00339A  0E26               	movlw	38
  6073   00339C  6E52               	movwf	(___flge@ff2+2)^0,c
  6074   00339E  0E44               	movlw	68
  6075   0033A0  6E53               	movwf	(___flge@ff2+3)^0,c
  6076   0033A2  EC9D  F032         	call	___flge	;wreg free
  6077   0033A6  B0D8               	btfsc	status,0,c
  6078   0033A8  EFD8  F019         	goto	u7611
  6079   0033AC  EFDA  F019         	goto	u7610
  6080   0033B0                     u7611:
  6081   0033B0  EFE5  F019         	goto	l7457
  6082   0033B4                     u7610:
  6083   0033B4  0E00               	movlw	0
  6084   0033B6  0102               	movlb	2	; () banked
  6085   0033B8  6F80               	movwf	decide_action@red& (0+255),b
  6086   0033BA  0E00               	movlw	0
  6087   0033BC  6F81               	movwf	(decide_action@red+1)& (0+255),b
  6088   0033BE  0E00               	movlw	0
  6089   0033C0  6F82               	movwf	(decide_action@red+2)& (0+255),b
  6090   0033C2  0E00               	movlw	0
  6091   0033C4  6F83               	movwf	(decide_action@red+3)& (0+255),b
  6092   0033C6  EFFF  F019         	goto	l69
  6093   0033CA                     l7457:
  6094   0033CA  C280  F044         	movff	decide_action@red,___flsub@b
  6095   0033CE  C281  F045         	movff	decide_action@red+1,___flsub@b+1
  6096   0033D2  C282  F046         	movff	decide_action@red+2,___flsub@b+2
  6097   0033D6  C283  F047         	movff	decide_action@red+3,___flsub@b+3
  6098   0033DA  0E00               	movlw	0
  6099   0033DC  6E48               	movwf	___flsub@a^0,c
  6100   0033DE  0EC0               	movlw	192
  6101   0033E0  6E49               	movwf	(___flsub@a+1)^0,c
  6102   0033E2  0E2E               	movlw	46
  6103   0033E4  6E4A               	movwf	(___flsub@a+2)^0,c
  6104   0033E6  0E44               	movlw	68
  6105   0033E8  6E4B               	movwf	(___flsub@a+3)^0,c
  6106   0033EA  EC7A  F039         	call	___flsub	;wreg free
  6107   0033EE  C044  F280         	movff	?___flsub,decide_action@red
  6108   0033F2  C045  F281         	movff	?___flsub+1,decide_action@red+1
  6109   0033F6  C046  F282         	movff	?___flsub+2,decide_action@red+2
  6110   0033FA  C047  F283         	movff	?___flsub+3,decide_action@red+3
  6111   0033FE                     l69:
  6112                           
  6113                           ;color.c: 141:     if(green < 446){green = 0;} else{green -= 443;}
  6114   0033FE  C284  F04C         	movff	decide_action@green,___flge@ff1
  6115   003402  C285  F04D         	movff	decide_action@green+1,___flge@ff1+1
  6116   003406  C286  F04E         	movff	decide_action@green+2,___flge@ff1+2
  6117   00340A  C287  F04F         	movff	decide_action@green+3,___flge@ff1+3
  6118   00340E  0E00               	movlw	0
  6119   003410  6E50               	movwf	___flge@ff2^0,c
  6120   003412  0E00               	movlw	0
  6121   003414  6E51               	movwf	(___flge@ff2+1)^0,c
  6122   003416  0EDF               	movlw	223
  6123   003418  6E52               	movwf	(___flge@ff2+2)^0,c
  6124   00341A  0E43               	movlw	67
  6125   00341C  6E53               	movwf	(___flge@ff2+3)^0,c
  6126   00341E  EC9D  F032         	call	___flge	;wreg free
  6127   003422  B0D8               	btfsc	status,0,c
  6128   003424  EF16  F01A         	goto	u7621
  6129   003428  EF18  F01A         	goto	u7620
  6130   00342C                     u7621:
  6131   00342C  EF23  F01A         	goto	l7461
  6132   003430                     u7620:
  6133   003430  0E00               	movlw	0
  6134   003432  0102               	movlb	2	; () banked
  6135   003434  6F84               	movwf	decide_action@green& (0+255),b
  6136   003436  0E00               	movlw	0
  6137   003438  6F85               	movwf	(decide_action@green+1)& (0+255),b
  6138   00343A  0E00               	movlw	0
  6139   00343C  6F86               	movwf	(decide_action@green+2)& (0+255),b
  6140   00343E  0E00               	movlw	0
  6141   003440  6F87               	movwf	(decide_action@green+3)& (0+255),b
  6142   003442  EF3D  F01A         	goto	l71
  6143   003446                     l7461:
  6144   003446  C284  F044         	movff	decide_action@green,___flsub@b
  6145   00344A  C285  F045         	movff	decide_action@green+1,___flsub@b+1
  6146   00344E  C286  F046         	movff	decide_action@green+2,___flsub@b+2
  6147   003452  C287  F047         	movff	decide_action@green+3,___flsub@b+3
  6148   003456  0E00               	movlw	0
  6149   003458  6E48               	movwf	___flsub@a^0,c
  6150   00345A  0E80               	movlw	128
  6151   00345C  6E49               	movwf	(___flsub@a+1)^0,c
  6152   00345E  0EDD               	movlw	221
  6153   003460  6E4A               	movwf	(___flsub@a+2)^0,c
  6154   003462  0E43               	movlw	67
  6155   003464  6E4B               	movwf	(___flsub@a+3)^0,c
  6156   003466  EC7A  F039         	call	___flsub	;wreg free
  6157   00346A  C044  F284         	movff	?___flsub,decide_action@green
  6158   00346E  C045  F285         	movff	?___flsub+1,decide_action@green+1
  6159   003472  C046  F286         	movff	?___flsub+2,decide_action@green+2
  6160   003476  C047  F287         	movff	?___flsub+3,decide_action@green+3
  6161   00347A                     l71:
  6162                           
  6163                           ;color.c: 142:     if(blue < 295){blue = 0;} else{blue -= 315;}
  6164   00347A  C288  F04C         	movff	decide_action@blue,___flge@ff1
  6165   00347E  C289  F04D         	movff	decide_action@blue+1,___flge@ff1+1
  6166   003482  C28A  F04E         	movff	decide_action@blue+2,___flge@ff1+2
  6167   003486  C28B  F04F         	movff	decide_action@blue+3,___flge@ff1+3
  6168   00348A  0E00               	movlw	0
  6169   00348C  6E50               	movwf	___flge@ff2^0,c
  6170   00348E  0E80               	movlw	128
  6171   003490  6E51               	movwf	(___flge@ff2+1)^0,c
  6172   003492  0E93               	movlw	147
  6173   003494  6E52               	movwf	(___flge@ff2+2)^0,c
  6174   003496  0E43               	movlw	67
  6175   003498  6E53               	movwf	(___flge@ff2+3)^0,c
  6176   00349A  EC9D  F032         	call	___flge	;wreg free
  6177   00349E  B0D8               	btfsc	status,0,c
  6178   0034A0  EF54  F01A         	goto	u7631
  6179   0034A4  EF56  F01A         	goto	u7630
  6180   0034A8                     u7631:
  6181   0034A8  EF61  F01A         	goto	l7465
  6182   0034AC                     u7630:
  6183   0034AC  0E00               	movlw	0
  6184   0034AE  0102               	movlb	2	; () banked
  6185   0034B0  6F88               	movwf	decide_action@blue& (0+255),b
  6186   0034B2  0E00               	movlw	0
  6187   0034B4  6F89               	movwf	(decide_action@blue+1)& (0+255),b
  6188   0034B6  0E00               	movlw	0
  6189   0034B8  6F8A               	movwf	(decide_action@blue+2)& (0+255),b
  6190   0034BA  0E00               	movlw	0
  6191   0034BC  6F8B               	movwf	(decide_action@blue+3)& (0+255),b
  6192   0034BE  EF7B  F01A         	goto	l73
  6193   0034C2                     l7465:
  6194   0034C2  C288  F044         	movff	decide_action@blue,___flsub@b
  6195   0034C6  C289  F045         	movff	decide_action@blue+1,___flsub@b+1
  6196   0034CA  C28A  F046         	movff	decide_action@blue+2,___flsub@b+2
  6197   0034CE  C28B  F047         	movff	decide_action@blue+3,___flsub@b+3
  6198   0034D2  0E00               	movlw	0
  6199   0034D4  6E48               	movwf	___flsub@a^0,c
  6200   0034D6  0E80               	movlw	128
  6201   0034D8  6E49               	movwf	(___flsub@a+1)^0,c
  6202   0034DA  0E9D               	movlw	157
  6203   0034DC  6E4A               	movwf	(___flsub@a+2)^0,c
  6204   0034DE  0E43               	movlw	67
  6205   0034E0  6E4B               	movwf	(___flsub@a+3)^0,c
  6206   0034E2  EC7A  F039         	call	___flsub	;wreg free
  6207   0034E6  C044  F288         	movff	?___flsub,decide_action@blue
  6208   0034EA  C045  F289         	movff	?___flsub+1,decide_action@blue+1
  6209   0034EE  C046  F28A         	movff	?___flsub+2,decide_action@blue+2
  6210   0034F2  C047  F28B         	movff	?___flsub+3,decide_action@blue+3
  6211   0034F6                     l73:
  6212                           
  6213                           ;color.c: 144:     red = red/1621;
  6214   0034F6  C280  F02B         	movff	decide_action@red,___fldiv@b
  6215   0034FA  C281  F02C         	movff	decide_action@red+1,___fldiv@b+1
  6216   0034FE  C282  F02D         	movff	decide_action@red+2,___fldiv@b+2
  6217   003502  C283  F02E         	movff	decide_action@red+3,___fldiv@b+3
  6218   003506  0E00               	movlw	0
  6219   003508  6E2F               	movwf	___fldiv@a^0,c
  6220   00350A  0EA0               	movlw	160
  6221   00350C  6E30               	movwf	(___fldiv@a+1)^0,c
  6222   00350E  0ECA               	movlw	202
  6223   003510  6E31               	movwf	(___fldiv@a+2)^0,c
  6224   003512  0E44               	movlw	68
  6225   003514  6E32               	movwf	(___fldiv@a+3)^0,c
  6226   003516  ECBE  F02C         	call	___fldiv	;wreg free
  6227   00351A  C02B  F280         	movff	?___fldiv,decide_action@red
  6228   00351E  C02C  F281         	movff	?___fldiv+1,decide_action@red+1
  6229   003522  C02D  F282         	movff	?___fldiv+2,decide_action@red+2
  6230   003526  C02E  F283         	movff	?___fldiv+3,decide_action@red+3
  6231                           
  6232                           ;color.c: 145:     green = green/1191;
  6233   00352A  C284  F02B         	movff	decide_action@green,___fldiv@b
  6234   00352E  C285  F02C         	movff	decide_action@green+1,___fldiv@b+1
  6235   003532  C286  F02D         	movff	decide_action@green+2,___fldiv@b+2
  6236   003536  C287  F02E         	movff	decide_action@green+3,___fldiv@b+3
  6237   00353A  0E00               	movlw	0
  6238   00353C  6E2F               	movwf	___fldiv@a^0,c
  6239   00353E  0EE0               	movlw	224
  6240   003540  6E30               	movwf	(___fldiv@a+1)^0,c
  6241   003542  0E94               	movlw	148
  6242   003544  6E31               	movwf	(___fldiv@a+2)^0,c
  6243   003546  0E44               	movlw	68
  6244   003548  6E32               	movwf	(___fldiv@a+3)^0,c
  6245   00354A  ECBE  F02C         	call	___fldiv	;wreg free
  6246   00354E  C02B  F284         	movff	?___fldiv,decide_action@green
  6247   003552  C02C  F285         	movff	?___fldiv+1,decide_action@green+1
  6248   003556  C02D  F286         	movff	?___fldiv+2,decide_action@green+2
  6249   00355A  C02E  F287         	movff	?___fldiv+3,decide_action@green+3
  6250                           
  6251                           ;color.c: 146:     blue = blue/885;
  6252   00355E  C288  F02B         	movff	decide_action@blue,___fldiv@b
  6253   003562  C289  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  6254   003566  C28A  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  6255   00356A  C28B  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  6256   00356E  0E00               	movlw	0
  6257   003570  6E2F               	movwf	___fldiv@a^0,c
  6258   003572  0E40               	movlw	64
  6259   003574  6E30               	movwf	(___fldiv@a+1)^0,c
  6260   003576  0E5D               	movlw	93
  6261   003578  6E31               	movwf	(___fldiv@a+2)^0,c
  6262   00357A  0E44               	movlw	68
  6263   00357C  6E32               	movwf	(___fldiv@a+3)^0,c
  6264   00357E  ECBE  F02C         	call	___fldiv	;wreg free
  6265   003582  C02B  F288         	movff	?___fldiv,decide_action@blue
  6266   003586  C02C  F289         	movff	?___fldiv+1,decide_action@blue+1
  6267   00358A  C02D  F28A         	movff	?___fldiv+2,decide_action@blue+2
  6268   00358E  C02E  F28B         	movff	?___fldiv+3,decide_action@blue+3
  6269                           
  6270                           ;color.c: 148:     float total = red + green + blue;
  6271   003592  C284  F006         	movff	decide_action@green,___fladd@a
  6272   003596  C285  F007         	movff	decide_action@green+1,___fladd@a+1
  6273   00359A  C286  F008         	movff	decide_action@green+2,___fladd@a+2
  6274   00359E  C287  F009         	movff	decide_action@green+3,___fladd@a+3
  6275   0035A2  C280  F002         	movff	decide_action@red,___fladd@b
  6276   0035A6  C281  F003         	movff	decide_action@red+1,___fladd@b+1
  6277   0035AA  C282  F004         	movff	decide_action@red+2,___fladd@b+2
  6278   0035AE  C283  F005         	movff	decide_action@red+3,___fladd@b+3
  6279   0035B2  EC5A  F026         	call	___fladd	;wreg free
  6280   0035B6  C002  F256         	movff	?___fladd,_decide_action$3065
  6281   0035BA  C003  F257         	movff	?___fladd+1,_decide_action$3065+1
  6282   0035BE  C004  F258         	movff	?___fladd+2,_decide_action$3065+2
  6283   0035C2  C005  F259         	movff	?___fladd+3,_decide_action$3065+3
  6284                           
  6285                           ;color.c: 148:     float total = red + green + blue;
  6286   0035C6  C256  F002         	movff	_decide_action$3065,___fladd@b
  6287   0035CA  C257  F003         	movff	_decide_action$3065+1,___fladd@b+1
  6288   0035CE  C258  F004         	movff	_decide_action$3065+2,___fladd@b+2
  6289   0035D2  C259  F005         	movff	_decide_action$3065+3,___fladd@b+3
  6290   0035D6  C288  F006         	movff	decide_action@blue,___fladd@a
  6291   0035DA  C289  F007         	movff	decide_action@blue+1,___fladd@a+1
  6292   0035DE  C28A  F008         	movff	decide_action@blue+2,___fladd@a+2
  6293   0035E2  C28B  F009         	movff	decide_action@blue+3,___fladd@a+3
  6294   0035E6  EC5A  F026         	call	___fladd	;wreg free
  6295   0035EA  C002  F27B         	movff	?___fladd,decide_action@total
  6296   0035EE  C003  F27C         	movff	?___fladd+1,decide_action@total+1
  6297   0035F2  C004  F27D         	movff	?___fladd+2,decide_action@total+2
  6298   0035F6  C005  F27E         	movff	?___fladd+3,decide_action@total+3
  6299                           
  6300                           ;color.c: 150:     red_r = red / total;
  6301   0035FA  C280  F02B         	movff	decide_action@red,___fldiv@b
  6302   0035FE  C281  F02C         	movff	decide_action@red+1,___fldiv@b+1
  6303   003602  C282  F02D         	movff	decide_action@red+2,___fldiv@b+2
  6304   003606  C283  F02E         	movff	decide_action@red+3,___fldiv@b+3
  6305   00360A  C27B  F02F         	movff	decide_action@total,___fldiv@a
  6306   00360E  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  6307   003612  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  6308   003616  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  6309   00361A  ECBE  F02C         	call	___fldiv	;wreg free
  6310   00361E  C02B  F28C         	movff	?___fldiv,decide_action@red_r
  6311   003622  C02C  F28D         	movff	?___fldiv+1,decide_action@red_r+1
  6312   003626  C02D  F28E         	movff	?___fldiv+2,decide_action@red_r+2
  6313   00362A  C02E  F28F         	movff	?___fldiv+3,decide_action@red_r+3
  6314                           
  6315                           ;color.c: 151:     green_r = green / total;
  6316   00362E  C284  F02B         	movff	decide_action@green,___fldiv@b
  6317   003632  C285  F02C         	movff	decide_action@green+1,___fldiv@b+1
  6318   003636  C286  F02D         	movff	decide_action@green+2,___fldiv@b+2
  6319   00363A  C287  F02E         	movff	decide_action@green+3,___fldiv@b+3
  6320   00363E  C27B  F02F         	movff	decide_action@total,___fldiv@a
  6321   003642  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  6322   003646  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  6323   00364A  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  6324   00364E  ECBE  F02C         	call	___fldiv	;wreg free
  6325   003652  C02B  F290         	movff	?___fldiv,decide_action@green_r
  6326   003656  C02C  F291         	movff	?___fldiv+1,decide_action@green_r+1
  6327   00365A  C02D  F292         	movff	?___fldiv+2,decide_action@green_r+2
  6328   00365E  C02E  F293         	movff	?___fldiv+3,decide_action@green_r+3
  6329                           
  6330                           ;color.c: 152:     blue_r = blue / total;
  6331   003662  C288  F02B         	movff	decide_action@blue,___fldiv@b
  6332   003666  C289  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  6333   00366A  C28A  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  6334   00366E  C28B  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  6335   003672  C27B  F02F         	movff	decide_action@total,___fldiv@a
  6336   003676  C27C  F030         	movff	decide_action@total+1,___fldiv@a+1
  6337   00367A  C27D  F031         	movff	decide_action@total+2,___fldiv@a+2
  6338   00367E  C27E  F032         	movff	decide_action@total+3,___fldiv@a+3
  6339   003682  ECBE  F02C         	call	___fldiv	;wreg free
  6340   003686  C02B  F294         	movff	?___fldiv,decide_action@blue_r
  6341   00368A  C02C  F295         	movff	?___fldiv+1,decide_action@blue_r+1
  6342   00368E  C02D  F296         	movff	?___fldiv+2,decide_action@blue_r+2
  6343   003692  C02E  F297         	movff	?___fldiv+3,decide_action@blue_r+3
  6344                           
  6345                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6346   003696  0E73               	movlw	115
  6347   003698  6E06               	movwf	___fladd@a^0,c
  6348   00369A  0E68               	movlw	104
  6349   00369C  6E07               	movwf	(___fladd@a+1)^0,c
  6350   00369E  0E91               	movlw	145
  6351   0036A0  6E08               	movwf	(___fladd@a+2)^0,c
  6352   0036A2  0EBD               	movlw	189
  6353   0036A4  6E09               	movwf	(___fladd@a+3)^0,c
  6354   0036A6  C290  F002         	movff	decide_action@green_r,___fladd@b
  6355   0036AA  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6356   0036AE  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6357   0036B2  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6358   0036B6  EC5A  F026         	call	___fladd	;wreg free
  6359   0036BA  C002  F298         	movff	?___fladd,_decide_action$3066
  6360   0036BE  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  6361   0036C2  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  6362   0036C6  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  6363                           
  6364                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6365   0036CA  0E64               	movlw	100
  6366   0036CC  6E06               	movwf	___fladd@a^0,c
  6367   0036CE  0E3B               	movlw	59
  6368   0036D0  6E07               	movwf	(___fladd@a+1)^0,c
  6369   0036D2  0E3F               	movlw	63
  6370   0036D4  6E08               	movwf	(___fladd@a+2)^0,c
  6371   0036D6  0EBF               	movlw	191
  6372   0036D8  6E09               	movwf	(___fladd@a+3)^0,c
  6373   0036DA  C28C  F002         	movff	decide_action@red_r,___fladd@b
  6374   0036DE  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6375   0036E2  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6376   0036E6  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6377   0036EA  EC5A  F026         	call	___fladd	;wreg free
  6378   0036EE  C002  F29C         	movff	?___fladd,_decide_action$3067
  6379   0036F2  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  6380   0036F6  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  6381   0036FA  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  6382   0036FE                     
  6383                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6384   0036FE  0E00               	movlw	0
  6385   003700  0100               	movlb	0	; () banked
  6386   003702  6FDE               	movwf	powf@y& (0+255),b
  6387   003704  0E00               	movlw	0
  6388   003706  6FDF               	movwf	(powf@y+1)& (0+255),b
  6389   003708  0E00               	movlw	0
  6390   00370A  6FE0               	movwf	(powf@y+2)& (0+255),b
  6391   00370C  0E40               	movlw	64
  6392   00370E  6FE1               	movwf	(powf@y+3)& (0+255),b
  6393   003710  C298  F0DA         	movff	_decide_action$3066,powf@x
  6394   003714  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  6395   003718  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  6396   00371C  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  6397   003720  EC41  F007         	call	_powf	;wreg free
  6398   003724  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  6399   003728  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  6400   00372C  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  6401   003730  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  6402   003734                     
  6403                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6404   003734  0E00               	movlw	0
  6405   003736  0100               	movlb	0	; () banked
  6406   003738  6FDE               	movwf	powf@y& (0+255),b
  6407   00373A  0E00               	movlw	0
  6408   00373C  6FDF               	movwf	(powf@y+1)& (0+255),b
  6409   00373E  0E00               	movlw	0
  6410   003740  6FE0               	movwf	(powf@y+2)& (0+255),b
  6411   003742  0E40               	movlw	64
  6412   003744  6FE1               	movwf	(powf@y+3)& (0+255),b
  6413   003746  C29C  F0DA         	movff	_decide_action$3067,powf@x
  6414   00374A  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  6415   00374E  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  6416   003752  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  6417   003756  EC41  F007         	call	_powf	;wreg free
  6418   00375A  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  6419   00375E  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  6420   003762  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  6421   003766  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  6422                           
  6423                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6424   00376A  0E35               	movlw	53
  6425   00376C  6E06               	movwf	___fladd@a^0,c
  6426   00376E  0E5E               	movlw	94
  6427   003770  6E07               	movwf	(___fladd@a+1)^0,c
  6428   003772  0E3A               	movlw	58
  6429   003774  6E08               	movwf	(___fladd@a+2)^0,c
  6430   003776  0EBE               	movlw	190
  6431   003778  6E09               	movwf	(___fladd@a+3)^0,c
  6432   00377A  C294  F002         	movff	decide_action@blue_r,___fladd@b
  6433   00377E  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6434   003782  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6435   003786  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6436   00378A  EC5A  F026         	call	___fladd	;wreg free
  6437   00378E  C002  F2A8         	movff	?___fladd,_decide_action$3070
  6438   003792  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  6439   003796  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  6440   00379A  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  6441                           
  6442                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6443   00379E  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  6444   0037A2  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  6445   0037A6  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  6446   0037AA  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  6447   0037AE  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  6448   0037B2  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  6449   0037B6  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  6450   0037BA  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  6451   0037BE  EC5A  F026         	call	___fladd	;wreg free
  6452   0037C2  C002  F2AC         	movff	?___fladd,_decide_action$3071
  6453   0037C6  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  6454   0037CA  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  6455   0037CE  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  6456   0037D2                     
  6457                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6458   0037D2  0E00               	movlw	0
  6459   0037D4  0100               	movlb	0	; () banked
  6460   0037D6  6FDE               	movwf	powf@y& (0+255),b
  6461   0037D8  0E00               	movlw	0
  6462   0037DA  6FDF               	movwf	(powf@y+1)& (0+255),b
  6463   0037DC  0E00               	movlw	0
  6464   0037DE  6FE0               	movwf	(powf@y+2)& (0+255),b
  6465   0037E0  0E40               	movlw	64
  6466   0037E2  6FE1               	movwf	(powf@y+3)& (0+255),b
  6467   0037E4  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  6468   0037E8  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  6469   0037EC  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  6470   0037F0  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  6471   0037F4  EC41  F007         	call	_powf	;wreg free
  6472   0037F8  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  6473   0037FC  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  6474   003800  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  6475   003804  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  6476   003808                     
  6477                           ;color.c: 155:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6478   003808  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  6479   00380C  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  6480   003810  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  6481   003814  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  6482   003818  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  6483   00381C  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  6484   003820  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  6485   003824  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  6486   003828  EC5A  F026         	call	___fladd	;wreg free
  6487   00382C  C002  F012         	movff	?___fladd,sqrtf@x
  6488   003830  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6489   003834  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6490   003838  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6491   00383C  ECCF  F02A         	call	_sqrtf	;wreg free
  6492   003840  C012  F25A         	movff	?_sqrtf,decide_action@rgb_comp
  6493   003844  C013  F25B         	movff	?_sqrtf+1,decide_action@rgb_comp+1
  6494   003848  C014  F25C         	movff	?_sqrtf+2,decide_action@rgb_comp+2
  6495   00384C  C015  F25D         	movff	?_sqrtf+3,decide_action@rgb_comp+3
  6496   003850                     
  6497                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6498   003850  0E35               	movlw	53
  6499   003852  6E06               	movwf	___fladd@a^0,c
  6500   003854  0E5E               	movlw	94
  6501   003856  6E07               	movwf	(___fladd@a+1)^0,c
  6502   003858  0EFA               	movlw	250
  6503   00385A  6E08               	movwf	(___fladd@a+2)^0,c
  6504   00385C  0EBE               	movlw	190
  6505   00385E  6E09               	movwf	(___fladd@a+3)^0,c
  6506   003860  C290  F002         	movff	decide_action@green_r,___fladd@b
  6507   003864  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6508   003868  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6509   00386C  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6510   003870  EC5A  F026         	call	___fladd	;wreg free
  6511   003874  C002  F298         	movff	?___fladd,_decide_action$3066
  6512   003878  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  6513   00387C  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  6514   003880  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  6515   003884                     
  6516                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6517   003884  0E2B               	movlw	43
  6518   003886  6E06               	movwf	___fladd@a^0,c
  6519   003888  0E87               	movlw	135
  6520   00388A  6E07               	movwf	(___fladd@a+1)^0,c
  6521   00388C  0E16               	movlw	22
  6522   00388E  6E08               	movwf	(___fladd@a+2)^0,c
  6523   003890  0EBE               	movlw	190
  6524   003892  6E09               	movwf	(___fladd@a+3)^0,c
  6525   003894  C28C  F002         	movff	decide_action@red_r,___fladd@b
  6526   003898  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6527   00389C  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6528   0038A0  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6529   0038A4  EC5A  F026         	call	___fladd	;wreg free
  6530   0038A8  C002  F29C         	movff	?___fladd,_decide_action$3067
  6531   0038AC  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  6532   0038B0  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  6533   0038B4  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  6534                           
  6535                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6536   0038B8  0E00               	movlw	0
  6537   0038BA  0100               	movlb	0	; () banked
  6538   0038BC  6FDE               	movwf	powf@y& (0+255),b
  6539   0038BE  0E00               	movlw	0
  6540   0038C0  6FDF               	movwf	(powf@y+1)& (0+255),b
  6541   0038C2  0E00               	movlw	0
  6542   0038C4  6FE0               	movwf	(powf@y+2)& (0+255),b
  6543   0038C6  0E40               	movlw	64
  6544   0038C8  6FE1               	movwf	(powf@y+3)& (0+255),b
  6545   0038CA  C298  F0DA         	movff	_decide_action$3066,powf@x
  6546   0038CE  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  6547   0038D2  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  6548   0038D6  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  6549   0038DA  EC41  F007         	call	_powf	;wreg free
  6550   0038DE  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  6551   0038E2  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  6552   0038E6  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  6553   0038EA  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  6554                           
  6555                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6556   0038EE  0E00               	movlw	0
  6557   0038F0  0100               	movlb	0	; () banked
  6558   0038F2  6FDE               	movwf	powf@y& (0+255),b
  6559   0038F4  0E00               	movlw	0
  6560   0038F6  6FDF               	movwf	(powf@y+1)& (0+255),b
  6561   0038F8  0E00               	movlw	0
  6562   0038FA  6FE0               	movwf	(powf@y+2)& (0+255),b
  6563   0038FC  0E40               	movlw	64
  6564   0038FE  6FE1               	movwf	(powf@y+3)& (0+255),b
  6565   003900  C29C  F0DA         	movff	_decide_action$3067,powf@x
  6566   003904  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  6567   003908  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  6568   00390C  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  6569   003910  EC41  F007         	call	_powf	;wreg free
  6570   003914  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  6571   003918  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  6572   00391C  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  6573   003920  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  6574   003924                     
  6575                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6576   003924  0E23               	movlw	35
  6577   003926  6E06               	movwf	___fladd@a^0,c
  6578   003928  0EDB               	movlw	219
  6579   00392A  6E07               	movwf	(___fladd@a+1)^0,c
  6580   00392C  0EB9               	movlw	185
  6581   00392E  6E08               	movwf	(___fladd@a+2)^0,c
  6582   003930  0EBE               	movlw	190
  6583   003932  6E09               	movwf	(___fladd@a+3)^0,c
  6584   003934  C294  F002         	movff	decide_action@blue_r,___fladd@b
  6585   003938  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6586   00393C  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6587   003940  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6588   003944  EC5A  F026         	call	___fladd	;wreg free
  6589   003948  C002  F2A8         	movff	?___fladd,_decide_action$3070
  6590   00394C  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  6591   003950  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  6592   003954  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  6593   003958                     
  6594                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6595   003958  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  6596   00395C  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  6597   003960  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  6598   003964  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  6599   003968  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  6600   00396C  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  6601   003970  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  6602   003974  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  6603   003978  EC5A  F026         	call	___fladd	;wreg free
  6604   00397C  C002  F2AC         	movff	?___fladd,_decide_action$3071
  6605   003980  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  6606   003984  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  6607   003988  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  6608                           
  6609                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6610   00398C  0E00               	movlw	0
  6611   00398E  0100               	movlb	0	; () banked
  6612   003990  6FDE               	movwf	powf@y& (0+255),b
  6613   003992  0E00               	movlw	0
  6614   003994  6FDF               	movwf	(powf@y+1)& (0+255),b
  6615   003996  0E00               	movlw	0
  6616   003998  6FE0               	movwf	(powf@y+2)& (0+255),b
  6617   00399A  0E40               	movlw	64
  6618   00399C  6FE1               	movwf	(powf@y+3)& (0+255),b
  6619   00399E  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  6620   0039A2  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  6621   0039A6  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  6622   0039AA  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  6623   0039AE  EC41  F007         	call	_powf	;wreg free
  6624   0039B2  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  6625   0039B6  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  6626   0039BA  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  6627   0039BE  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  6628   0039C2                     
  6629                           ;color.c: 156:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6630   0039C2  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  6631   0039C6  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  6632   0039CA  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  6633   0039CE  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  6634   0039D2  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  6635   0039D6  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  6636   0039DA  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  6637   0039DE  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  6638   0039E2  EC5A  F026         	call	___fladd	;wreg free
  6639   0039E6  C002  F012         	movff	?___fladd,sqrtf@x
  6640   0039EA  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6641   0039EE  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6642   0039F2  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6643   0039F6  ECCF  F02A         	call	_sqrtf	;wreg free
  6644   0039FA  C012  F25E         	movff	?_sqrtf,decide_action@rgb_comp+4
  6645   0039FE  C013  F25F         	movff	?_sqrtf+1,decide_action@rgb_comp+5
  6646   003A02  C014  F260         	movff	?_sqrtf+2,decide_action@rgb_comp+6
  6647   003A06  C015  F261         	movff	?_sqrtf+3,decide_action@rgb_comp+7
  6648   003A0A                     
  6649                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6650   003A0A  0E50               	movlw	80
  6651   003A0C  6E06               	movwf	___fladd@a^0,c
  6652   003A0E  0E8D               	movlw	141
  6653   003A10  6E07               	movwf	(___fladd@a+1)^0,c
  6654   003A12  0ED7               	movlw	215
  6655   003A14  6E08               	movwf	(___fladd@a+2)^0,c
  6656   003A16  0EBE               	movlw	190
  6657   003A18  6E09               	movwf	(___fladd@a+3)^0,c
  6658   003A1A  C290  F002         	movff	decide_action@green_r,___fladd@b
  6659   003A1E  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6660   003A22  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6661   003A26  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6662   003A2A  EC5A  F026         	call	___fladd	;wreg free
  6663   003A2E  C002  F298         	movff	?___fladd,_decide_action$3066
  6664   003A32  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  6665   003A36  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  6666   003A3A  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  6667   003A3E                     
  6668                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6669   003A3E  0EAE               	movlw	174
  6670   003A40  6E06               	movwf	___fladd@a^0,c
  6671   003A42  0E47               	movlw	71
  6672   003A44  6E07               	movwf	(___fladd@a+1)^0,c
  6673   003A46  0EE1               	movlw	225
  6674   003A48  6E08               	movwf	(___fladd@a+2)^0,c
  6675   003A4A  0EBD               	movlw	189
  6676   003A4C  6E09               	movwf	(___fladd@a+3)^0,c
  6677   003A4E  C28C  F002         	movff	decide_action@red_r,___fladd@b
  6678   003A52  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6679   003A56  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6680   003A5A  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6681   003A5E  EC5A  F026         	call	___fladd	;wreg free
  6682   003A62  C002  F29C         	movff	?___fladd,_decide_action$3067
  6683   003A66  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  6684   003A6A  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  6685   003A6E  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  6686   003A72                     
  6687                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6688   003A72  0E00               	movlw	0
  6689   003A74  0100               	movlb	0	; () banked
  6690   003A76  6FDE               	movwf	powf@y& (0+255),b
  6691   003A78  0E00               	movlw	0
  6692   003A7A  6FDF               	movwf	(powf@y+1)& (0+255),b
  6693   003A7C  0E00               	movlw	0
  6694   003A7E  6FE0               	movwf	(powf@y+2)& (0+255),b
  6695   003A80  0E40               	movlw	64
  6696   003A82  6FE1               	movwf	(powf@y+3)& (0+255),b
  6697   003A84  C298  F0DA         	movff	_decide_action$3066,powf@x
  6698   003A88  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  6699   003A8C  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  6700   003A90  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  6701   003A94  EC41  F007         	call	_powf	;wreg free
  6702   003A98  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  6703   003A9C  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  6704   003AA0  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  6705   003AA4  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  6706   003AA8                     
  6707                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6708   003AA8  0E00               	movlw	0
  6709   003AAA  0100               	movlb	0	; () banked
  6710   003AAC  6FDE               	movwf	powf@y& (0+255),b
  6711   003AAE  0E00               	movlw	0
  6712   003AB0  6FDF               	movwf	(powf@y+1)& (0+255),b
  6713   003AB2  0E00               	movlw	0
  6714   003AB4  6FE0               	movwf	(powf@y+2)& (0+255),b
  6715   003AB6  0E40               	movlw	64
  6716   003AB8  6FE1               	movwf	(powf@y+3)& (0+255),b
  6717   003ABA  C29C  F0DA         	movff	_decide_action$3067,powf@x
  6718   003ABE  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  6719   003AC2  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  6720   003AC6  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  6721   003ACA  EC41  F007         	call	_powf	;wreg free
  6722   003ACE  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  6723   003AD2  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  6724   003AD6  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  6725   003ADA  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  6726   003ADE                     
  6727                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6728   003ADE  0EC5               	movlw	197
  6729   003AE0  6E06               	movwf	___fladd@a^0,c
  6730   003AE2  0E20               	movlw	32
  6731   003AE4  6E07               	movwf	(___fladd@a+1)^0,c
  6732   003AE6  0EF0               	movlw	240
  6733   003AE8  6E08               	movwf	(___fladd@a+2)^0,c
  6734   003AEA  0EBE               	movlw	190
  6735   003AEC  6E09               	movwf	(___fladd@a+3)^0,c
  6736   003AEE  C294  F002         	movff	decide_action@blue_r,___fladd@b
  6737   003AF2  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6738   003AF6  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6739   003AFA  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6740   003AFE  EC5A  F026         	call	___fladd	;wreg free
  6741   003B02  C002  F2A8         	movff	?___fladd,_decide_action$3070
  6742   003B06  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  6743   003B0A  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  6744   003B0E  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  6745   003B12                     
  6746                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6747   003B12  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  6748   003B16  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  6749   003B1A  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  6750   003B1E  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  6751   003B22  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  6752   003B26  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  6753   003B2A  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  6754   003B2E  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  6755   003B32  EC5A  F026         	call	___fladd	;wreg free
  6756   003B36  C002  F2AC         	movff	?___fladd,_decide_action$3071
  6757   003B3A  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  6758   003B3E  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  6759   003B42  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  6760   003B46                     
  6761                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6762   003B46  0E00               	movlw	0
  6763   003B48  0100               	movlb	0	; () banked
  6764   003B4A  6FDE               	movwf	powf@y& (0+255),b
  6765   003B4C  0E00               	movlw	0
  6766   003B4E  6FDF               	movwf	(powf@y+1)& (0+255),b
  6767   003B50  0E00               	movlw	0
  6768   003B52  6FE0               	movwf	(powf@y+2)& (0+255),b
  6769   003B54  0E40               	movlw	64
  6770   003B56  6FE1               	movwf	(powf@y+3)& (0+255),b
  6771   003B58  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  6772   003B5C  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  6773   003B60  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  6774   003B64  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  6775   003B68  EC41  F007         	call	_powf	;wreg free
  6776   003B6C  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  6777   003B70  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  6778   003B74  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  6779   003B78  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  6780                           
  6781                           ;color.c: 157:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6782   003B7C  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  6783   003B80  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  6784   003B84  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  6785   003B88  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  6786   003B8C  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  6787   003B90  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  6788   003B94  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  6789   003B98  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  6790   003B9C  EC5A  F026         	call	___fladd	;wreg free
  6791   003BA0  C002  F012         	movff	?___fladd,sqrtf@x
  6792   003BA4  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6793   003BA8  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6794   003BAC  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6795   003BB0  ECCF  F02A         	call	_sqrtf	;wreg free
  6796   003BB4  C012  F262         	movff	?_sqrtf,decide_action@rgb_comp+8
  6797   003BB8  C013  F263         	movff	?_sqrtf+1,decide_action@rgb_comp+9
  6798   003BBC  C014  F264         	movff	?_sqrtf+2,decide_action@rgb_comp+10
  6799   003BC0  C015  F265         	movff	?_sqrtf+3,decide_action@rgb_comp+11
  6800                           
  6801                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6802   003BC4  0E66               	movlw	102
  6803   003BC6  6E06               	movwf	___fladd@a^0,c
  6804   003BC8  0E66               	movlw	102
  6805   003BCA  6E07               	movwf	(___fladd@a+1)^0,c
  6806   003BCC  0EA6               	movlw	166
  6807   003BCE  6E08               	movwf	(___fladd@a+2)^0,c
  6808   003BD0  0EBE               	movlw	190
  6809   003BD2  6E09               	movwf	(___fladd@a+3)^0,c
  6810   003BD4  C290  F002         	movff	decide_action@green_r,___fladd@b
  6811   003BD8  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6812   003BDC  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6813   003BE0  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6814   003BE4  EC5A  F026         	call	___fladd	;wreg free
  6815   003BE8  C002  F298         	movff	?___fladd,_decide_action$3066
  6816   003BEC  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  6817   003BF0  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  6818   003BF4  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  6819                           
  6820                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6821   003BF8  0E75               	movlw	117
  6822   003BFA  6E06               	movwf	___fladd@a^0,c
  6823   003BFC  0E93               	movlw	147
  6824   003BFE  6E07               	movwf	(___fladd@a+1)^0,c
  6825   003C00  0ED8               	movlw	216
  6826   003C02  6E08               	movwf	(___fladd@a+2)^0,c
  6827   003C04  0EBE               	movlw	190
  6828   003C06  6E09               	movwf	(___fladd@a+3)^0,c
  6829   003C08  C28C  F002         	movff	decide_action@red_r,___fladd@b
  6830   003C0C  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6831   003C10  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6832   003C14  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6833   003C18  EC5A  F026         	call	___fladd	;wreg free
  6834   003C1C  C002  F29C         	movff	?___fladd,_decide_action$3067
  6835   003C20  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  6836   003C24  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  6837   003C28  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  6838   003C2C                     
  6839                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6840   003C2C  0E00               	movlw	0
  6841   003C2E  0100               	movlb	0	; () banked
  6842   003C30  6FDE               	movwf	powf@y& (0+255),b
  6843   003C32  0E00               	movlw	0
  6844   003C34  6FDF               	movwf	(powf@y+1)& (0+255),b
  6845   003C36  0E00               	movlw	0
  6846   003C38  6FE0               	movwf	(powf@y+2)& (0+255),b
  6847   003C3A  0E40               	movlw	64
  6848   003C3C  6FE1               	movwf	(powf@y+3)& (0+255),b
  6849   003C3E  C298  F0DA         	movff	_decide_action$3066,powf@x
  6850   003C42  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  6851   003C46  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  6852   003C4A  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  6853   003C4E  EC41  F007         	call	_powf	;wreg free
  6854   003C52  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  6855   003C56  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  6856   003C5A  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  6857   003C5E  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  6858   003C62                     
  6859                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6860   003C62  0E00               	movlw	0
  6861   003C64  0100               	movlb	0	; () banked
  6862   003C66  6FDE               	movwf	powf@y& (0+255),b
  6863   003C68  0E00               	movlw	0
  6864   003C6A  6FDF               	movwf	(powf@y+1)& (0+255),b
  6865   003C6C  0E00               	movlw	0
  6866   003C6E  6FE0               	movwf	(powf@y+2)& (0+255),b
  6867   003C70  0E40               	movlw	64
  6868   003C72  6FE1               	movwf	(powf@y+3)& (0+255),b
  6869   003C74  C29C  F0DA         	movff	_decide_action$3067,powf@x
  6870   003C78  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  6871   003C7C  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  6872   003C80  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  6873   003C84  EC41  F007         	call	_powf	;wreg free
  6874   003C88  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  6875   003C8C  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  6876   003C90  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  6877   003C94  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  6878                           
  6879                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6880   003C98  0E25               	movlw	37
  6881   003C9A  6E06               	movwf	___fladd@a^0,c
  6882   003C9C  0E06               	movlw	6
  6883   003C9E  6E07               	movwf	(___fladd@a+1)^0,c
  6884   003CA0  0E81               	movlw	129
  6885   003CA2  6E08               	movwf	(___fladd@a+2)^0,c
  6886   003CA4  0EBE               	movlw	190
  6887   003CA6  6E09               	movwf	(___fladd@a+3)^0,c
  6888   003CA8  C294  F002         	movff	decide_action@blue_r,___fladd@b
  6889   003CAC  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6890   003CB0  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6891   003CB4  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6892   003CB8  EC5A  F026         	call	___fladd	;wreg free
  6893   003CBC  C002  F2A8         	movff	?___fladd,_decide_action$3070
  6894   003CC0  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  6895   003CC4  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  6896   003CC8  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  6897                           
  6898                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6899   003CCC  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  6900   003CD0  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  6901   003CD4  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  6902   003CD8  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  6903   003CDC  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  6904   003CE0  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  6905   003CE4  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  6906   003CE8  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  6907   003CEC  EC5A  F026         	call	___fladd	;wreg free
  6908   003CF0  C002  F2AC         	movff	?___fladd,_decide_action$3071
  6909   003CF4  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  6910   003CF8  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  6911   003CFC  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  6912   003D00                     
  6913                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6914   003D00  0E00               	movlw	0
  6915   003D02  0100               	movlb	0	; () banked
  6916   003D04  6FDE               	movwf	powf@y& (0+255),b
  6917   003D06  0E00               	movlw	0
  6918   003D08  6FDF               	movwf	(powf@y+1)& (0+255),b
  6919   003D0A  0E00               	movlw	0
  6920   003D0C  6FE0               	movwf	(powf@y+2)& (0+255),b
  6921   003D0E  0E40               	movlw	64
  6922   003D10  6FE1               	movwf	(powf@y+3)& (0+255),b
  6923   003D12  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  6924   003D16  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  6925   003D1A  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  6926   003D1E  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  6927   003D22  EC41  F007         	call	_powf	;wreg free
  6928   003D26  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  6929   003D2A  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  6930   003D2E  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  6931   003D32  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  6932   003D36                     
  6933                           ;color.c: 158:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6934   003D36  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  6935   003D3A  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  6936   003D3E  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  6937   003D42  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  6938   003D46  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  6939   003D4A  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  6940   003D4E  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  6941   003D52  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  6942   003D56  EC5A  F026         	call	___fladd	;wreg free
  6943   003D5A  C002  F012         	movff	?___fladd,sqrtf@x
  6944   003D5E  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6945   003D62  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6946   003D66  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6947   003D6A  ECCF  F02A         	call	_sqrtf	;wreg free
  6948   003D6E  C012  F266         	movff	?_sqrtf,decide_action@rgb_comp+12
  6949   003D72  C013  F267         	movff	?_sqrtf+1,decide_action@rgb_comp+13
  6950   003D76  C014  F268         	movff	?_sqrtf+2,decide_action@rgb_comp+14
  6951   003D7A  C015  F269         	movff	?_sqrtf+3,decide_action@rgb_comp+15
  6952   003D7E                     
  6953                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  6954   003D7E  0EF0               	movlw	240
  6955   003D80  6E06               	movwf	___fladd@a^0,c
  6956   003D82  0EA7               	movlw	167
  6957   003D84  6E07               	movwf	(___fladd@a+1)^0,c
  6958   003D86  0E86               	movlw	134
  6959   003D88  6E08               	movwf	(___fladd@a+2)^0,c
  6960   003D8A  0EBE               	movlw	190
  6961   003D8C  6E09               	movwf	(___fladd@a+3)^0,c
  6962   003D8E  C290  F002         	movff	decide_action@green_r,___fladd@b
  6963   003D92  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6964   003D96  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6965   003D9A  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6966   003D9E  EC5A  F026         	call	___fladd	;wreg free
  6967   003DA2  C002  F298         	movff	?___fladd,_decide_action$3066
  6968   003DA6  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  6969   003DAA  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  6970   003DAE  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  6971   003DB2                     
  6972                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  6973   003DB2  0E08               	movlw	8
  6974   003DB4  6E06               	movwf	___fladd@a^0,c
  6975   003DB6  0EAC               	movlw	172
  6976   003DB8  6E07               	movwf	(___fladd@a+1)^0,c
  6977   003DBA  0EDC               	movlw	220
  6978   003DBC  6E08               	movwf	(___fladd@a+2)^0,c
  6979   003DBE  0EBE               	movlw	190
  6980   003DC0  6E09               	movwf	(___fladd@a+3)^0,c
  6981   003DC2  C28C  F002         	movff	decide_action@red_r,___fladd@b
  6982   003DC6  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6983   003DCA  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6984   003DCE  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6985   003DD2  EC5A  F026         	call	___fladd	;wreg free
  6986   003DD6  C002  F29C         	movff	?___fladd,_decide_action$3067
  6987   003DDA  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  6988   003DDE  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  6989   003DE2  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  6990                           
  6991                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  6992   003DE6  0E00               	movlw	0
  6993   003DE8  0100               	movlb	0	; () banked
  6994   003DEA  6FDE               	movwf	powf@y& (0+255),b
  6995   003DEC  0E00               	movlw	0
  6996   003DEE  6FDF               	movwf	(powf@y+1)& (0+255),b
  6997   003DF0  0E00               	movlw	0
  6998   003DF2  6FE0               	movwf	(powf@y+2)& (0+255),b
  6999   003DF4  0E40               	movlw	64
  7000   003DF6  6FE1               	movwf	(powf@y+3)& (0+255),b
  7001   003DF8  C298  F0DA         	movff	_decide_action$3066,powf@x
  7002   003DFC  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  7003   003E00  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  7004   003E04  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  7005   003E08  EC41  F007         	call	_powf	;wreg free
  7006   003E0C  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  7007   003E10  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  7008   003E14  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  7009   003E18  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  7010                           
  7011                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7012   003E1C  0E00               	movlw	0
  7013   003E1E  0100               	movlb	0	; () banked
  7014   003E20  6FDE               	movwf	powf@y& (0+255),b
  7015   003E22  0E00               	movlw	0
  7016   003E24  6FDF               	movwf	(powf@y+1)& (0+255),b
  7017   003E26  0E00               	movlw	0
  7018   003E28  6FE0               	movwf	(powf@y+2)& (0+255),b
  7019   003E2A  0E40               	movlw	64
  7020   003E2C  6FE1               	movwf	(powf@y+3)& (0+255),b
  7021   003E2E  C29C  F0DA         	movff	_decide_action$3067,powf@x
  7022   003E32  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  7023   003E36  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  7024   003E3A  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  7025   003E3E  EC41  F007         	call	_powf	;wreg free
  7026   003E42  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  7027   003E46  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  7028   003E4A  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  7029   003E4E  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  7030   003E52                     
  7031                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7032   003E52  0E08               	movlw	8
  7033   003E54  6E06               	movwf	___fladd@a^0,c
  7034   003E56  0EAC               	movlw	172
  7035   003E58  6E07               	movwf	(___fladd@a+1)^0,c
  7036   003E5A  0E9C               	movlw	156
  7037   003E5C  6E08               	movwf	(___fladd@a+2)^0,c
  7038   003E5E  0EBE               	movlw	190
  7039   003E60  6E09               	movwf	(___fladd@a+3)^0,c
  7040   003E62  C294  F002         	movff	decide_action@blue_r,___fladd@b
  7041   003E66  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7042   003E6A  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7043   003E6E  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7044   003E72  EC5A  F026         	call	___fladd	;wreg free
  7045   003E76  C002  F2A8         	movff	?___fladd,_decide_action$3070
  7046   003E7A  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  7047   003E7E  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  7048   003E82  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  7049   003E86                     
  7050                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7051   003E86  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  7052   003E8A  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  7053   003E8E  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  7054   003E92  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  7055   003E96  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  7056   003E9A  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  7057   003E9E  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  7058   003EA2  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  7059   003EA6  EC5A  F026         	call	___fladd	;wreg free
  7060   003EAA  C002  F2AC         	movff	?___fladd,_decide_action$3071
  7061   003EAE  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  7062   003EB2  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  7063   003EB6  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  7064                           
  7065                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7066   003EBA  0E00               	movlw	0
  7067   003EBC  0100               	movlb	0	; () banked
  7068   003EBE  6FDE               	movwf	powf@y& (0+255),b
  7069   003EC0  0E00               	movlw	0
  7070   003EC2  6FDF               	movwf	(powf@y+1)& (0+255),b
  7071   003EC4  0E00               	movlw	0
  7072   003EC6  6FE0               	movwf	(powf@y+2)& (0+255),b
  7073   003EC8  0E40               	movlw	64
  7074   003ECA  6FE1               	movwf	(powf@y+3)& (0+255),b
  7075   003ECC  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  7076   003ED0  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  7077   003ED4  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  7078   003ED8  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  7079   003EDC  EC41  F007         	call	_powf	;wreg free
  7080   003EE0  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  7081   003EE4  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  7082   003EE8  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  7083   003EEC  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  7084   003EF0                     
  7085                           ;color.c: 159:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7086   003EF0  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  7087   003EF4  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  7088   003EF8  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  7089   003EFC  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  7090   003F00  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  7091   003F04  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  7092   003F08  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  7093   003F0C  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  7094   003F10  EC5A  F026         	call	___fladd	;wreg free
  7095   003F14  C002  F012         	movff	?___fladd,sqrtf@x
  7096   003F18  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7097   003F1C  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7098   003F20  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7099   003F24  ECCF  F02A         	call	_sqrtf	;wreg free
  7100   003F28  C012  F26A         	movff	?_sqrtf,decide_action@rgb_comp+16
  7101   003F2C  C013  F26B         	movff	?_sqrtf+1,decide_action@rgb_comp+17
  7102   003F30  C014  F26C         	movff	?_sqrtf+2,decide_action@rgb_comp+18
  7103   003F34  C015  F26D         	movff	?_sqrtf+3,decide_action@rgb_comp+19
  7104   003F38                     
  7105                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7106   003F38  0EBA               	movlw	186
  7107   003F3A  6E06               	movwf	___fladd@a^0,c
  7108   003F3C  0E49               	movlw	73
  7109   003F3E  6E07               	movwf	(___fladd@a+1)^0,c
  7110   003F40  0E0C               	movlw	12
  7111   003F42  6E08               	movwf	(___fladd@a+2)^0,c
  7112   003F44  0EBE               	movlw	190
  7113   003F46  6E09               	movwf	(___fladd@a+3)^0,c
  7114   003F48  C290  F002         	movff	decide_action@green_r,___fladd@b
  7115   003F4C  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7116   003F50  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7117   003F54  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7118   003F58  EC5A  F026         	call	___fladd	;wreg free
  7119   003F5C  C002  F298         	movff	?___fladd,_decide_action$3066
  7120   003F60  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  7121   003F64  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  7122   003F68  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  7123   003F6C                     
  7124                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7125   003F6C  0EE7               	movlw	231
  7126   003F6E  6E06               	movwf	___fladd@a^0,c
  7127   003F70  0EFB               	movlw	251
  7128   003F72  6E07               	movwf	(___fladd@a+1)^0,c
  7129   003F74  0E29               	movlw	41
  7130   003F76  6E08               	movwf	(___fladd@a+2)^0,c
  7131   003F78  0EBF               	movlw	191
  7132   003F7A  6E09               	movwf	(___fladd@a+3)^0,c
  7133   003F7C  C28C  F002         	movff	decide_action@red_r,___fladd@b
  7134   003F80  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7135   003F84  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7136   003F88  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7137   003F8C  EC5A  F026         	call	___fladd	;wreg free
  7138   003F90  C002  F29C         	movff	?___fladd,_decide_action$3067
  7139   003F94  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  7140   003F98  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  7141   003F9C  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  7142   003FA0                     
  7143                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7144   003FA0  0E00               	movlw	0
  7145   003FA2  0100               	movlb	0	; () banked
  7146   003FA4  6FDE               	movwf	powf@y& (0+255),b
  7147   003FA6  0E00               	movlw	0
  7148   003FA8  6FDF               	movwf	(powf@y+1)& (0+255),b
  7149   003FAA  0E00               	movlw	0
  7150   003FAC  6FE0               	movwf	(powf@y+2)& (0+255),b
  7151   003FAE  0E40               	movlw	64
  7152   003FB0  6FE1               	movwf	(powf@y+3)& (0+255),b
  7153   003FB2  C298  F0DA         	movff	_decide_action$3066,powf@x
  7154   003FB6  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  7155   003FBA  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  7156   003FBE  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  7157   003FC2  EC41  F007         	call	_powf	;wreg free
  7158   003FC6  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  7159   003FCA  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  7160   003FCE  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  7161   003FD2  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  7162   003FD6                     
  7163                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7164   003FD6  0E00               	movlw	0
  7165   003FD8  0100               	movlb	0	; () banked
  7166   003FDA  6FDE               	movwf	powf@y& (0+255),b
  7167   003FDC  0E00               	movlw	0
  7168   003FDE  6FDF               	movwf	(powf@y+1)& (0+255),b
  7169   003FE0  0E00               	movlw	0
  7170   003FE2  6FE0               	movwf	(powf@y+2)& (0+255),b
  7171   003FE4  0E40               	movlw	64
  7172   003FE6  6FE1               	movwf	(powf@y+3)& (0+255),b
  7173   003FE8  C29C  F0DA         	movff	_decide_action$3067,powf@x
  7174   003FEC  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  7175   003FF0  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  7176   003FF4  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  7177   003FF8  EC41  F007         	call	_powf	;wreg free
  7178   003FFC  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  7179   004000  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  7180   004004  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  7181   004008  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  7182   00400C                     
  7183                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7184   00400C  0E83               	movlw	131
  7185   00400E  6E06               	movwf	___fladd@a^0,c
  7186   004010  0EC0               	movlw	192
  7187   004012  6E07               	movwf	(___fladd@a+1)^0,c
  7188   004014  0E4A               	movlw	74
  7189   004016  6E08               	movwf	(___fladd@a+2)^0,c
  7190   004018  0EBE               	movlw	190
  7191   00401A  6E09               	movwf	(___fladd@a+3)^0,c
  7192   00401C  C294  F002         	movff	decide_action@blue_r,___fladd@b
  7193   004020  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7194   004024  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7195   004028  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7196   00402C  EC5A  F026         	call	___fladd	;wreg free
  7197   004030  C002  F2A8         	movff	?___fladd,_decide_action$3070
  7198   004034  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  7199   004038  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  7200   00403C  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  7201   004040                     
  7202                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7203   004040  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  7204   004044  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  7205   004048  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  7206   00404C  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  7207   004050  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  7208   004054  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  7209   004058  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  7210   00405C  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  7211   004060  EC5A  F026         	call	___fladd	;wreg free
  7212   004064  C002  F2AC         	movff	?___fladd,_decide_action$3071
  7213   004068  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  7214   00406C  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  7215   004070  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  7216   004074                     
  7217                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7218   004074  0E00               	movlw	0
  7219   004076  0100               	movlb	0	; () banked
  7220   004078  6FDE               	movwf	powf@y& (0+255),b
  7221   00407A  0E00               	movlw	0
  7222   00407C  6FDF               	movwf	(powf@y+1)& (0+255),b
  7223   00407E  0E00               	movlw	0
  7224   004080  6FE0               	movwf	(powf@y+2)& (0+255),b
  7225   004082  0E40               	movlw	64
  7226   004084  6FE1               	movwf	(powf@y+3)& (0+255),b
  7227   004086  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  7228   00408A  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  7229   00408E  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  7230   004092  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  7231   004096  EC41  F007         	call	_powf	;wreg free
  7232   00409A  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  7233   00409E  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  7234   0040A2  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  7235   0040A6  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  7236                           
  7237                           ;color.c: 160:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7238   0040AA  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  7239   0040AE  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  7240   0040B2  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  7241   0040B6  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  7242   0040BA  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  7243   0040BE  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  7244   0040C2  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  7245   0040C6  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  7246   0040CA  EC5A  F026         	call	___fladd	;wreg free
  7247   0040CE  C002  F012         	movff	?___fladd,sqrtf@x
  7248   0040D2  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7249   0040D6  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7250   0040DA  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7251   0040DE  ECCF  F02A         	call	_sqrtf	;wreg free
  7252   0040E2  C012  F26E         	movff	?_sqrtf,decide_action@rgb_comp+20
  7253   0040E6  C013  F26F         	movff	?_sqrtf+1,decide_action@rgb_comp+21
  7254   0040EA  C014  F270         	movff	?_sqrtf+2,decide_action@rgb_comp+22
  7255   0040EE  C015  F271         	movff	?_sqrtf+3,decide_action@rgb_comp+23
  7256                           
  7257                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7258   0040F2  0E5A               	movlw	90
  7259   0040F4  6E06               	movwf	___fladd@a^0,c
  7260   0040F6  0E64               	movlw	100
  7261   0040F8  6E07               	movwf	(___fladd@a+1)^0,c
  7262   0040FA  0EBB               	movlw	187
  7263   0040FC  6E08               	movwf	(___fladd@a+2)^0,c
  7264   0040FE  0EBE               	movlw	190
  7265   004100  6E09               	movwf	(___fladd@a+3)^0,c
  7266   004102  C290  F002         	movff	decide_action@green_r,___fladd@b
  7267   004106  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7268   00410A  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7269   00410E  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7270   004112  EC5A  F026         	call	___fladd	;wreg free
  7271   004116  C002  F298         	movff	?___fladd,_decide_action$3066
  7272   00411A  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  7273   00411E  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  7274   004122  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  7275                           
  7276                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7277   004126  0E83               	movlw	131
  7278   004128  6E06               	movwf	___fladd@a^0,c
  7279   00412A  0EC0               	movlw	192
  7280   00412C  6E07               	movwf	(___fladd@a+1)^0,c
  7281   00412E  0E8A               	movlw	138
  7282   004130  6E08               	movwf	(___fladd@a+2)^0,c
  7283   004132  0EBE               	movlw	190
  7284   004134  6E09               	movwf	(___fladd@a+3)^0,c
  7285   004136  C28C  F002         	movff	decide_action@red_r,___fladd@b
  7286   00413A  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7287   00413E  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7288   004142  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7289   004146  EC5A  F026         	call	___fladd	;wreg free
  7290   00414A  C002  F29C         	movff	?___fladd,_decide_action$3067
  7291   00414E  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  7292   004152  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  7293   004156  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  7294   00415A                     
  7295                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7296   00415A  0E00               	movlw	0
  7297   00415C  0100               	movlb	0	; () banked
  7298   00415E  6FDE               	movwf	powf@y& (0+255),b
  7299   004160  0E00               	movlw	0
  7300   004162  6FDF               	movwf	(powf@y+1)& (0+255),b
  7301   004164  0E00               	movlw	0
  7302   004166  6FE0               	movwf	(powf@y+2)& (0+255),b
  7303   004168  0E40               	movlw	64
  7304   00416A  6FE1               	movwf	(powf@y+3)& (0+255),b
  7305   00416C  C298  F0DA         	movff	_decide_action$3066,powf@x
  7306   004170  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  7307   004174  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  7308   004178  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  7309   00417C  EC41  F007         	call	_powf	;wreg free
  7310   004180  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  7311   004184  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  7312   004188  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  7313   00418C  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  7314   004190                     
  7315                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7316   004190  0E00               	movlw	0
  7317   004192  0100               	movlb	0	; () banked
  7318   004194  6FDE               	movwf	powf@y& (0+255),b
  7319   004196  0E00               	movlw	0
  7320   004198  6FDF               	movwf	(powf@y+1)& (0+255),b
  7321   00419A  0E00               	movlw	0
  7322   00419C  6FE0               	movwf	(powf@y+2)& (0+255),b
  7323   00419E  0E40               	movlw	64
  7324   0041A0  6FE1               	movwf	(powf@y+3)& (0+255),b
  7325   0041A2  C29C  F0DA         	movff	_decide_action$3067,powf@x
  7326   0041A6  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  7327   0041AA  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  7328   0041AE  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  7329   0041B2  EC41  F007         	call	_powf	;wreg free
  7330   0041B6  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  7331   0041BA  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  7332   0041BE  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  7333   0041C2  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  7334                           
  7335                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7336   0041C6  0E23               	movlw	35
  7337   0041C8  6E06               	movwf	___fladd@a^0,c
  7338   0041CA  0EDB               	movlw	219
  7339   0041CC  6E07               	movwf	(___fladd@a+1)^0,c
  7340   0041CE  0EB9               	movlw	185
  7341   0041D0  6E08               	movwf	(___fladd@a+2)^0,c
  7342   0041D2  0EBE               	movlw	190
  7343   0041D4  6E09               	movwf	(___fladd@a+3)^0,c
  7344   0041D6  C294  F002         	movff	decide_action@blue_r,___fladd@b
  7345   0041DA  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7346   0041DE  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7347   0041E2  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7348   0041E6  EC5A  F026         	call	___fladd	;wreg free
  7349   0041EA  C002  F2A8         	movff	?___fladd,_decide_action$3070
  7350   0041EE  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  7351   0041F2  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  7352   0041F6  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  7353                           
  7354                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7355   0041FA  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  7356   0041FE  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  7357   004202  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  7358   004206  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  7359   00420A  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  7360   00420E  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  7361   004212  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  7362   004216  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  7363   00421A  EC5A  F026         	call	___fladd	;wreg free
  7364   00421E  C002  F2AC         	movff	?___fladd,_decide_action$3071
  7365   004222  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  7366   004226  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  7367   00422A  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  7368   00422E                     
  7369                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7370   00422E  0E00               	movlw	0
  7371   004230  0100               	movlb	0	; () banked
  7372   004232  6FDE               	movwf	powf@y& (0+255),b
  7373   004234  0E00               	movlw	0
  7374   004236  6FDF               	movwf	(powf@y+1)& (0+255),b
  7375   004238  0E00               	movlw	0
  7376   00423A  6FE0               	movwf	(powf@y+2)& (0+255),b
  7377   00423C  0E40               	movlw	64
  7378   00423E  6FE1               	movwf	(powf@y+3)& (0+255),b
  7379   004240  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  7380   004244  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  7381   004248  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  7382   00424C  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  7383   004250  EC41  F007         	call	_powf	;wreg free
  7384   004254  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  7385   004258  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  7386   00425C  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  7387   004260  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  7388   004264                     
  7389                           ;color.c: 161:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7390   004264  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  7391   004268  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  7392   00426C  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  7393   004270  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  7394   004274  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  7395   004278  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  7396   00427C  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  7397   004280  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  7398   004284  EC5A  F026         	call	___fladd	;wreg free
  7399   004288  C002  F012         	movff	?___fladd,sqrtf@x
  7400   00428C  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7401   004290  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7402   004294  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7403   004298  ECCF  F02A         	call	_sqrtf	;wreg free
  7404   00429C  C012  F272         	movff	?_sqrtf,decide_action@rgb_comp+24
  7405   0042A0  C013  F273         	movff	?_sqrtf+1,decide_action@rgb_comp+25
  7406   0042A4  C014  F274         	movff	?_sqrtf+2,decide_action@rgb_comp+26
  7407   0042A8  C015  F275         	movff	?_sqrtf+3,decide_action@rgb_comp+27
  7408   0042AC                     
  7409                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7410   0042AC  0E1F               	movlw	31
  7411   0042AE  6E06               	movwf	___fladd@a^0,c
  7412   0042B0  0E85               	movlw	133
  7413   0042B2  6E07               	movwf	(___fladd@a+1)^0,c
  7414   0042B4  0EAB               	movlw	171
  7415   0042B6  6E08               	movwf	(___fladd@a+2)^0,c
  7416   0042B8  0EBE               	movlw	190
  7417   0042BA  6E09               	movwf	(___fladd@a+3)^0,c
  7418   0042BC  C290  F002         	movff	decide_action@green_r,___fladd@b
  7419   0042C0  C291  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7420   0042C4  C292  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7421   0042C8  C293  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7422   0042CC  EC5A  F026         	call	___fladd	;wreg free
  7423   0042D0  C002  F298         	movff	?___fladd,_decide_action$3066
  7424   0042D4  C003  F299         	movff	?___fladd+1,_decide_action$3066+1
  7425   0042D8  C004  F29A         	movff	?___fladd+2,_decide_action$3066+2
  7426   0042DC  C005  F29B         	movff	?___fladd+3,_decide_action$3066+3
  7427   0042E0                     
  7428                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7429   0042E0  0EB0               	movlw	176
  7430   0042E2  6E06               	movwf	___fladd@a^0,c
  7431   0042E4  0E72               	movlw	114
  7432   0042E6  6E07               	movwf	(___fladd@a+1)^0,c
  7433   0042E8  0EA8               	movlw	168
  7434   0042EA  6E08               	movwf	(___fladd@a+2)^0,c
  7435   0042EC  0EBE               	movlw	190
  7436   0042EE  6E09               	movwf	(___fladd@a+3)^0,c
  7437   0042F0  C28C  F002         	movff	decide_action@red_r,___fladd@b
  7438   0042F4  C28D  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7439   0042F8  C28E  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7440   0042FC  C28F  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7441   004300  EC5A  F026         	call	___fladd	;wreg free
  7442   004304  C002  F29C         	movff	?___fladd,_decide_action$3067
  7443   004308  C003  F29D         	movff	?___fladd+1,_decide_action$3067+1
  7444   00430C  C004  F29E         	movff	?___fladd+2,_decide_action$3067+2
  7445   004310  C005  F29F         	movff	?___fladd+3,_decide_action$3067+3
  7446                           
  7447                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7448   004314  0E00               	movlw	0
  7449   004316  0100               	movlb	0	; () banked
  7450   004318  6FDE               	movwf	powf@y& (0+255),b
  7451   00431A  0E00               	movlw	0
  7452   00431C  6FDF               	movwf	(powf@y+1)& (0+255),b
  7453   00431E  0E00               	movlw	0
  7454   004320  6FE0               	movwf	(powf@y+2)& (0+255),b
  7455   004322  0E40               	movlw	64
  7456   004324  6FE1               	movwf	(powf@y+3)& (0+255),b
  7457   004326  C298  F0DA         	movff	_decide_action$3066,powf@x
  7458   00432A  C299  F0DB         	movff	_decide_action$3066+1,powf@x+1
  7459   00432E  C29A  F0DC         	movff	_decide_action$3066+2,powf@x+2
  7460   004332  C29B  F0DD         	movff	_decide_action$3066+3,powf@x+3
  7461   004336  EC41  F007         	call	_powf	;wreg free
  7462   00433A  C0DA  F2A0         	movff	?_powf,_decide_action$3068
  7463   00433E  C0DB  F2A1         	movff	?_powf+1,_decide_action$3068+1
  7464   004342  C0DC  F2A2         	movff	?_powf+2,_decide_action$3068+2
  7465   004346  C0DD  F2A3         	movff	?_powf+3,_decide_action$3068+3
  7466                           
  7467                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7468   00434A  0E00               	movlw	0
  7469   00434C  0100               	movlb	0	; () banked
  7470   00434E  6FDE               	movwf	powf@y& (0+255),b
  7471   004350  0E00               	movlw	0
  7472   004352  6FDF               	movwf	(powf@y+1)& (0+255),b
  7473   004354  0E00               	movlw	0
  7474   004356  6FE0               	movwf	(powf@y+2)& (0+255),b
  7475   004358  0E40               	movlw	64
  7476   00435A  6FE1               	movwf	(powf@y+3)& (0+255),b
  7477   00435C  C29C  F0DA         	movff	_decide_action$3067,powf@x
  7478   004360  C29D  F0DB         	movff	_decide_action$3067+1,powf@x+1
  7479   004364  C29E  F0DC         	movff	_decide_action$3067+2,powf@x+2
  7480   004368  C29F  F0DD         	movff	_decide_action$3067+3,powf@x+3
  7481   00436C  EC41  F007         	call	_powf	;wreg free
  7482   004370  C0DA  F2A4         	movff	?_powf,_decide_action$3069
  7483   004374  C0DB  F2A5         	movff	?_powf+1,_decide_action$3069+1
  7484   004378  C0DC  F2A6         	movff	?_powf+2,_decide_action$3069+2
  7485   00437C  C0DD  F2A7         	movff	?_powf+3,_decide_action$3069+3
  7486   004380                     
  7487                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7488   004380  0E1F               	movlw	31
  7489   004382  6E06               	movwf	___fladd@a^0,c
  7490   004384  0E85               	movlw	133
  7491   004386  6E07               	movwf	(___fladd@a+1)^0,c
  7492   004388  0EAB               	movlw	171
  7493   00438A  6E08               	movwf	(___fladd@a+2)^0,c
  7494   00438C  0EBE               	movlw	190
  7495   00438E  6E09               	movwf	(___fladd@a+3)^0,c
  7496   004390  C294  F002         	movff	decide_action@blue_r,___fladd@b
  7497   004394  C295  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7498   004398  C296  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7499   00439C  C297  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7500   0043A0  EC5A  F026         	call	___fladd	;wreg free
  7501   0043A4  C002  F2A8         	movff	?___fladd,_decide_action$3070
  7502   0043A8  C003  F2A9         	movff	?___fladd+1,_decide_action$3070+1
  7503   0043AC  C004  F2AA         	movff	?___fladd+2,_decide_action$3070+2
  7504   0043B0  C005  F2AB         	movff	?___fladd+3,_decide_action$3070+3
  7505   0043B4                     
  7506                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7507   0043B4  C2A0  F006         	movff	_decide_action$3068,___fladd@a
  7508   0043B8  C2A1  F007         	movff	_decide_action$3068+1,___fladd@a+1
  7509   0043BC  C2A2  F008         	movff	_decide_action$3068+2,___fladd@a+2
  7510   0043C0  C2A3  F009         	movff	_decide_action$3068+3,___fladd@a+3
  7511   0043C4  C2A4  F002         	movff	_decide_action$3069,___fladd@b
  7512   0043C8  C2A5  F003         	movff	_decide_action$3069+1,___fladd@b+1
  7513   0043CC  C2A6  F004         	movff	_decide_action$3069+2,___fladd@b+2
  7514   0043D0  C2A7  F005         	movff	_decide_action$3069+3,___fladd@b+3
  7515   0043D4  EC5A  F026         	call	___fladd	;wreg free
  7516   0043D8  C002  F2AC         	movff	?___fladd,_decide_action$3071
  7517   0043DC  C003  F2AD         	movff	?___fladd+1,_decide_action$3071+1
  7518   0043E0  C004  F2AE         	movff	?___fladd+2,_decide_action$3071+2
  7519   0043E4  C005  F2AF         	movff	?___fladd+3,_decide_action$3071+3
  7520                           
  7521                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7522   0043E8  0E00               	movlw	0
  7523   0043EA  0100               	movlb	0	; () banked
  7524   0043EC  6FDE               	movwf	powf@y& (0+255),b
  7525   0043EE  0E00               	movlw	0
  7526   0043F0  6FDF               	movwf	(powf@y+1)& (0+255),b
  7527   0043F2  0E00               	movlw	0
  7528   0043F4  6FE0               	movwf	(powf@y+2)& (0+255),b
  7529   0043F6  0E40               	movlw	64
  7530   0043F8  6FE1               	movwf	(powf@y+3)& (0+255),b
  7531   0043FA  C2A8  F0DA         	movff	_decide_action$3070,powf@x
  7532   0043FE  C2A9  F0DB         	movff	_decide_action$3070+1,powf@x+1
  7533   004402  C2AA  F0DC         	movff	_decide_action$3070+2,powf@x+2
  7534   004406  C2AB  F0DD         	movff	_decide_action$3070+3,powf@x+3
  7535   00440A  EC41  F007         	call	_powf	;wreg free
  7536   00440E  C0DA  F2B0         	movff	?_powf,_decide_action$3072
  7537   004412  C0DB  F2B1         	movff	?_powf+1,_decide_action$3072+1
  7538   004416  C0DC  F2B2         	movff	?_powf+2,_decide_action$3072+2
  7539   00441A  C0DD  F2B3         	movff	?_powf+3,_decide_action$3072+3
  7540   00441E                     
  7541                           ;color.c: 162:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7542   00441E  C2AC  F002         	movff	_decide_action$3071,___fladd@b
  7543   004422  C2AD  F003         	movff	_decide_action$3071+1,___fladd@b+1
  7544   004426  C2AE  F004         	movff	_decide_action$3071+2,___fladd@b+2
  7545   00442A  C2AF  F005         	movff	_decide_action$3071+3,___fladd@b+3
  7546   00442E  C2B0  F006         	movff	_decide_action$3072,___fladd@a
  7547   004432  C2B1  F007         	movff	_decide_action$3072+1,___fladd@a+1
  7548   004436  C2B2  F008         	movff	_decide_action$3072+2,___fladd@a+2
  7549   00443A  C2B3  F009         	movff	_decide_action$3072+3,___fladd@a+3
  7550   00443E  EC5A  F026         	call	___fladd	;wreg free
  7551   004442  C002  F012         	movff	?___fladd,sqrtf@x
  7552   004446  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7553   00444A  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7554   00444E  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7555   004452  ECCF  F02A         	call	_sqrtf	;wreg free
  7556   004456  C012  F276         	movff	?_sqrtf,decide_action@rgb_comp+28
  7557   00445A  C013  F277         	movff	?_sqrtf+1,decide_action@rgb_comp+29
  7558   00445E  C014  F278         	movff	?_sqrtf+2,decide_action@rgb_comp+30
  7559   004462  C015  F279         	movff	?_sqrtf+3,decide_action@rgb_comp+31
  7560   004466                     
  7561                           ;color.c: 164:     action = 0;
  7562   004466  0E00               	movlw	0
  7563   004468  0102               	movlb	2	; () banked
  7564   00446A  6F7A               	movwf	decide_action@action& (0+255),b
  7565   00446C                     
  7566                           ; BSR set to: 2
  7567                           ;color.c: 165:     for(char i = 0; i < 8; i +=1){
  7568   00446C  0E00               	movlw	0
  7569   00446E  6F7F               	movwf	decide_action@i& (0+255),b
  7570   004470                     l7553:
  7571                           
  7572                           ; BSR set to: 2
  7573   004470  0E07               	movlw	7
  7574   004472  657F               	cpfsgt	decide_action@i& (0+255),b
  7575   004474  EF3E  F022         	goto	u7641
  7576   004478  EF40  F022         	goto	u7640
  7577   00447C                     u7641:
  7578   00447C  EF42  F022         	goto	l7557
  7579   004480                     u7640:
  7580   004480  EF71  F022         	goto	l7565
  7581   004484                     l7557:
  7582                           
  7583                           ; BSR set to: 2
  7584                           ;color.c: 166:         if(rgb_comp[i] < rgb_comp[action]){
  7585   004484  517F               	movf	decide_action@i& (0+255),w,b
  7586   004486  0D04               	mullw	4
  7587   004488  0E5A               	movlw	low decide_action@rgb_comp
  7588   00448A  24F3               	addwf	243,w,c
  7589   00448C  6ED9               	movwf	fsr2l,c
  7590   00448E  0E02               	movlw	high decide_action@rgb_comp
  7591   004490  20F4               	addwfc	prodh,w,c
  7592   004492  6EDA               	movwf	fsr2h,c
  7593   004494  CFDE F04C          	movff	postinc2,___flge@ff1
  7594   004498  CFDE F04D          	movff	postinc2,___flge@ff1+1
  7595   00449C  CFDE F04E          	movff	postinc2,___flge@ff1+2
  7596   0044A0  CFDE F04F          	movff	postinc2,___flge@ff1+3
  7597   0044A4  517A               	movf	decide_action@action& (0+255),w,b
  7598   0044A6  0D04               	mullw	4
  7599   0044A8  0E5A               	movlw	low decide_action@rgb_comp
  7600   0044AA  24F3               	addwf	243,w,c
  7601   0044AC  6ED9               	movwf	fsr2l,c
  7602   0044AE  0E02               	movlw	high decide_action@rgb_comp
  7603   0044B0  20F4               	addwfc	prodh,w,c
  7604   0044B2  6EDA               	movwf	fsr2h,c
  7605   0044B4  CFDE F050          	movff	postinc2,___flge@ff2
  7606   0044B8  CFDE F051          	movff	postinc2,___flge@ff2+1
  7607   0044BC  CFDE F052          	movff	postinc2,___flge@ff2+2
  7608   0044C0  CFDE F053          	movff	postinc2,___flge@ff2+3
  7609   0044C4  EC9D  F032         	call	___flge	;wreg free
  7610   0044C8  B0D8               	btfsc	status,0,c
  7611   0044CA  EF69  F022         	goto	u7651
  7612   0044CE  EF6B  F022         	goto	u7650
  7613   0044D2                     u7651:
  7614   0044D2  EF6D  F022         	goto	l7561
  7615   0044D6                     u7650:
  7616   0044D6                     
  7617                           ;color.c: 167:             action = i;
  7618   0044D6  C27F  F27A         	movff	decide_action@i,decide_action@action
  7619   0044DA                     l7561:
  7620                           
  7621                           ;color.c: 169:     }
  7622   0044DA  0102               	movlb	2	; () banked
  7623   0044DC  2B7F               	incf	decide_action@i& (0+255),f,b
  7624   0044DE  EF38  F022         	goto	l7553
  7625   0044E2                     l7565:
  7626                           
  7627                           ; BSR set to: 2
  7628                           ;color.c: 172:     color_writetoaddr(0x01, 0xFF);
  7629   0044E2  0EFF               	movlw	255
  7630   0044E4  6E04               	movwf	color_writetoaddr@value^0,c
  7631   0044E6  0E01               	movlw	1
  7632   0044E8  EC87  F03A         	call	_color_writetoaddr
  7633                           
  7634                           ;color.c: 173:     color_writetoaddr(0x03, 0xFF);
  7635   0044EC  0EFF               	movlw	255
  7636   0044EE  6E04               	movwf	color_writetoaddr@value^0,c
  7637   0044F0  0E03               	movlw	3
  7638   0044F2  EC87  F03A         	call	_color_writetoaddr
  7639   0044F6                     
  7640                           ;color.c: 175:     return action;
  7641   0044F6  0102               	movlb	2	; () banked
  7642   0044F8  517A               	movf	decide_action@action& (0+255),w,b
  7643   0044FA                     
  7644                           ; BSR set to: 2
  7645   0044FA  0012               	return		;funcret
  7646   0044FC                     __end_of_decide_action:
  7647                           	callstack 0
  7648                           
  7649 ;; *************** function _powf *****************
  7650 ;; Defined at:
  7651 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\powf.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;  x               4    0[BANK0 ] float 
  7654 ;;  y               4    4[BANK0 ] float 
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;  s2              4  144[BANK1 ] float 
  7657 ;;  s_h             4  116[BANK1 ] struct fui
  7658 ;;  t_h             4  112[BANK1 ] struct fui
  7659 ;;  t_l             4   52[BANK1 ] float 
  7660 ;;  s_l             4   48[BANK1 ] float 
  7661 ;;  z               4  180[BANK1 ] struct fui
  7662 ;;  t               4  176[BANK1 ] struct fui
  7663 ;;  ix              4  172[BANK1 ] struct fui
  7664 ;;  j               4  168[BANK1 ] long 
  7665 ;;  k               4  164[BANK1 ] long 
  7666 ;;  p_h             4  160[BANK1 ] struct fui
  7667 ;;  is              4  152[BANK1 ] struct fui
  7668 ;;  iy              4  148[BANK1 ] long 
  7669 ;;  t1              4  140[BANK1 ] struct fui
  7670 ;;  n               4  136[BANK1 ] long 
  7671 ;;  hy              4  132[BANK1 ] struct fui
  7672 ;;  v               4  128[BANK1 ] float 
  7673 ;;  u               4  124[BANK1 ] float 
  7674 ;;  ax              4  120[BANK1 ] struct fui
  7675 ;;  p_l             4  108[BANK1 ] float 
  7676 ;;  hx              4  104[BANK1 ] struct fui
  7677 ;;  sn              4  100[BANK1 ] unsigned long 
  7678 ;;  s               4   88[BANK1 ] float 
  7679 ;;  yisint          4   84[BANK1 ] long 
  7680 ;;  r               4   80[BANK1 ] float 
  7681 ;;  w               4   68[BANK1 ] float 
  7682 ;;  y1              4   44[BANK1 ] struct fui
  7683 ;;  i               4   40[BANK1 ] long 
  7684 ;;  z_l             4   36[BANK1 ] float 
  7685 ;;  z_h             4   32[BANK1 ] float 
  7686 ;;  t2              4   28[BANK1 ] float 
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  4    0[BANK0 ] float 
  7689 ;; Registers used:
  7690 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7696 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7697 ;;      Locals:         0       0     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7698 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7699 ;;      Totals:         0      17     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7700 ;;Total ram usage:      201 bytes
  7701 ;; Hardware stack levels used: 1
  7702 ;; Hardware stack levels required when called: 4
  7703 ;; This function calls:
  7704 ;;		___fladd
  7705 ;;		___fldiv
  7706 ;;		___flge
  7707 ;;		___flmul
  7708 ;;		___flneg
  7709 ;;		___flsub
  7710 ;;		___xxtofl
  7711 ;;		_scalbnf
  7712 ;;		_sqrtf
  7713 ;; This function is called by:
  7714 ;;		_decide_action
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           	psect	text29
  7719   000E82                     __ptext29:
  7720                           	callstack 0
  7721   000E82                     _powf:
  7722                           	callstack 25
  7723   000E82  C0DA  F168         	movff	powf@x,powf@hx
  7724   000E86  C0DB  F169         	movff	powf@x+1,powf@hx+1
  7725   000E8A  C0DC  F16A         	movff	powf@x+2,powf@hx+2
  7726   000E8E  C0DD  F16B         	movff	powf@x+3,powf@hx+3
  7727   000E92  C0DE  F184         	movff	powf@y,powf@hy
  7728   000E96  C0DF  F185         	movff	powf@y+1,powf@hy+1
  7729   000E9A  C0E0  F186         	movff	powf@y+2,powf@hy+2
  7730   000E9E  C0E1  F187         	movff	powf@y+3,powf@hy+3
  7731   000EA2  0EFF               	movlw	255
  7732   000EA4  0101               	movlb	1	; () banked
  7733   000EA6  1568               	andwf	powf@hx& (0+255),w,b
  7734   000EA8  6FAC               	movwf	powf@ix& (0+255),b
  7735   000EAA  0EFF               	movlw	255
  7736   000EAC  1569               	andwf	(powf@hx+1)& (0+255),w,b
  7737   000EAE  6FAD               	movwf	(powf@ix+1)& (0+255),b
  7738   000EB0  0EFF               	movlw	255
  7739   000EB2  156A               	andwf	(powf@hx+2)& (0+255),w,b
  7740   000EB4  6FAE               	movwf	(powf@ix+2)& (0+255),b
  7741   000EB6  0E7F               	movlw	127
  7742   000EB8  156B               	andwf	(powf@hx+3)& (0+255),w,b
  7743   000EBA  6FAF               	movwf	(powf@ix+3)& (0+255),b
  7744   000EBC  0EFF               	movlw	255
  7745   000EBE  1584               	andwf	powf@hy& (0+255),w,b
  7746   000EC0  6F94               	movwf	powf@iy& (0+255),b
  7747   000EC2  0EFF               	movlw	255
  7748   000EC4  1585               	andwf	(powf@hy+1)& (0+255),w,b
  7749   000EC6  6F95               	movwf	(powf@iy+1)& (0+255),b
  7750   000EC8  0EFF               	movlw	255
  7751   000ECA  1586               	andwf	(powf@hy+2)& (0+255),w,b
  7752   000ECC  6F96               	movwf	(powf@iy+2)& (0+255),b
  7753   000ECE  0E7F               	movlw	127
  7754   000ED0  1587               	andwf	(powf@hy+3)& (0+255),w,b
  7755   000ED2  6F97               	movwf	(powf@iy+3)& (0+255),b
  7756   000ED4  5194               	movf	powf@iy& (0+255),w,b
  7757   000ED6  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  7758   000ED8  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  7759   000EDA  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  7760   000EDC  A4D8               	btfss	status,2,c
  7761   000EDE  EF73  F007         	goto	u7031
  7762   000EE2  EF75  F007         	goto	u7030
  7763   000EE6                     u7031:
  7764   000EE6  EF80  F007         	goto	l7031
  7765   000EEA                     u7030:
  7766   000EEA                     
  7767                           ; BSR set to: 1
  7768   000EEA  0E00               	movlw	0
  7769   000EEC  0100               	movlb	0	; () banked
  7770   000EEE  6FDA               	movwf	?_powf& (0+255),b
  7771   000EF0  0E00               	movlw	0
  7772   000EF2  6FDB               	movwf	(?_powf+1)& (0+255),b
  7773   000EF4  0E80               	movlw	128
  7774   000EF6  6FDC               	movwf	(?_powf+2)& (0+255),b
  7775   000EF8  0E3F               	movlw	63
  7776   000EFA  6FDD               	movwf	(?_powf+3)& (0+255),b
  7777   000EFC  EF80  F019         	goto	l1374
  7778   000F00                     l7031:
  7779                           
  7780                           ; BSR set to: 1
  7781   000F00  0E80               	movlw	128
  7782   000F02  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  7783   000F04  E109               	bnz	u7041
  7784   000F06  0E3F               	movlw	63
  7785   000F08  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  7786   000F0A  1168               	iorwf	powf@hx& (0+255),w,b
  7787   000F0C  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  7788   000F0E  A4D8               	btfss	status,2,c
  7789   000F10  EF8C  F007         	goto	u7041
  7790   000F14  EF8E  F007         	goto	u7040
  7791   000F18                     u7041:
  7792   000F18  EF99  F007         	goto	l7037
  7793   000F1C                     u7040:
  7794   000F1C                     
  7795                           ; BSR set to: 1
  7796   000F1C  0E00               	movlw	0
  7797   000F1E  0100               	movlb	0	; () banked
  7798   000F20  6FDA               	movwf	?_powf& (0+255),b
  7799   000F22  0E00               	movlw	0
  7800   000F24  6FDB               	movwf	(?_powf+1)& (0+255),b
  7801   000F26  0E80               	movlw	128
  7802   000F28  6FDC               	movwf	(?_powf+2)& (0+255),b
  7803   000F2A  0E3F               	movlw	63
  7804   000F2C  6FDD               	movwf	(?_powf+3)& (0+255),b
  7805   000F2E  EF80  F019         	goto	l1374
  7806   000F32                     l7037:
  7807                           
  7808                           ; BSR set to: 1
  7809   000F32  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  7810   000F34  EFAA  F007         	goto	u7050
  7811   000F38  05AC               	decf	powf@ix& (0+255),w,b
  7812   000F3A  0E00               	movlw	0
  7813   000F3C  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  7814   000F3E  0E80               	movlw	128
  7815   000F40  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  7816   000F42  0E7F               	movlw	127
  7817   000F44  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  7818   000F46  B0D8               	btfsc	status,0,c
  7819   000F48  EFA8  F007         	goto	u7051
  7820   000F4C  EFAA  F007         	goto	u7050
  7821   000F50                     u7051:
  7822   000F50  EFBB  F007         	goto	l7041
  7823   000F54                     u7050:
  7824   000F54                     
  7825                           ; BSR set to: 1
  7826   000F54  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7827   000F56  EFB9  F007         	goto	u7061
  7828   000F5A  0594               	decf	powf@iy& (0+255),w,b
  7829   000F5C  0E00               	movlw	0
  7830   000F5E  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  7831   000F60  0E80               	movlw	128
  7832   000F62  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  7833   000F64  0E7F               	movlw	127
  7834   000F66  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7835   000F68  A0D8               	btfss	status,0,c
  7836   000F6A  EFB9  F007         	goto	u7061
  7837   000F6E  EFBB  F007         	goto	u7060
  7838   000F72                     u7061:
  7839   000F72  EFD7  F007         	goto	l7045
  7840   000F76                     u7060:
  7841   000F76                     l7041:
  7842                           
  7843                           ; BSR set to: 1
  7844   000F76  C0DA  F002         	movff	powf@x,___fladd@b
  7845   000F7A  C0DB  F003         	movff	powf@x+1,___fladd@b+1
  7846   000F7E  C0DC  F004         	movff	powf@x+2,___fladd@b+2
  7847   000F82  C0DD  F005         	movff	powf@x+3,___fladd@b+3
  7848   000F86  C0DE  F006         	movff	powf@y,___fladd@a
  7849   000F8A  C0DF  F007         	movff	powf@y+1,___fladd@a+1
  7850   000F8E  C0E0  F008         	movff	powf@y+2,___fladd@a+2
  7851   000F92  C0E1  F009         	movff	powf@y+3,___fladd@a+3
  7852   000F96  EC5A  F026         	call	___fladd	;wreg free
  7853   000F9A  C002  F0DA         	movff	?___fladd,?_powf
  7854   000F9E  C003  F0DB         	movff	?___fladd+1,?_powf+1
  7855   000FA2  C004  F0DC         	movff	?___fladd+2,?_powf+2
  7856   000FA6  C005  F0DD         	movff	?___fladd+3,?_powf+3
  7857   000FAA  EF80  F019         	goto	l1374
  7858   000FAE                     l7045:
  7859                           
  7860                           ; BSR set to: 1
  7861   000FAE  0E00               	movlw	0
  7862   000FB0  6F54               	movwf	powf@yisint& (0+255),b
  7863   000FB2  0E00               	movlw	0
  7864   000FB4  6F55               	movwf	(powf@yisint+1)& (0+255),b
  7865   000FB6  0E00               	movlw	0
  7866   000FB8  6F56               	movwf	(powf@yisint+2)& (0+255),b
  7867   000FBA  0E00               	movlw	0
  7868   000FBC  6F57               	movwf	(powf@yisint+3)& (0+255),b
  7869   000FBE                     
  7870                           ; BSR set to: 1
  7871   000FBE  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  7872   000FC0  EFE6  F007         	goto	u7070
  7873   000FC4  EFE4  F007         	goto	u7071
  7874   000FC8                     u7071:
  7875   000FC8  EFB2  F008         	goto	l1379
  7876   000FCC                     u7070:
  7877   000FCC                     
  7878                           ; BSR set to: 1
  7879   000FCC  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7880   000FCE  EFF2  F007         	goto	u7081
  7881   000FD2  0E80               	movlw	128
  7882   000FD4  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  7883   000FD6  0E4B               	movlw	75
  7884   000FD8  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7885   000FDA  A0D8               	btfss	status,0,c
  7886   000FDC  EFF2  F007         	goto	u7081
  7887   000FE0  EFF4  F007         	goto	u7080
  7888   000FE4                     u7081:
  7889   000FE4  EFFE  F007         	goto	l7053
  7890   000FE8                     u7080:
  7891   000FE8                     
  7892                           ; BSR set to: 1
  7893   000FE8  0E02               	movlw	2
  7894   000FEA  6F54               	movwf	powf@yisint& (0+255),b
  7895   000FEC  0E00               	movlw	0
  7896   000FEE  6F55               	movwf	(powf@yisint+1)& (0+255),b
  7897   000FF0  0E00               	movlw	0
  7898   000FF2  6F56               	movwf	(powf@yisint+2)& (0+255),b
  7899   000FF4  0E00               	movlw	0
  7900   000FF6  6F57               	movwf	(powf@yisint+3)& (0+255),b
  7901   000FF8  EFB2  F008         	goto	l1379
  7902   000FFC                     l7053:
  7903                           
  7904                           ; BSR set to: 1
  7905   000FFC  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7906   000FFE  EF0A  F008         	goto	u7091
  7907   001002  0E80               	movlw	128
  7908   001004  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  7909   001006  0E3F               	movlw	63
  7910   001008  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7911   00100A  A0D8               	btfss	status,0,c
  7912   00100C  EF0A  F008         	goto	u7091
  7913   001010  EF0C  F008         	goto	u7090
  7914   001014                     u7091:
  7915   001014  EFB2  F008         	goto	l1379
  7916   001018                     u7090:
  7917   001018                     
  7918                           ; BSR set to: 1
  7919   001018  0E17               	movlw	23
  7920   00101A  0100               	movlb	0	; () banked
  7921   00101C  6FE2               	movwf	??_powf& (0+255),b
  7922   00101E  C194  F0E3         	movff	powf@iy,??_powf+1
  7923   001022  C195  F0E4         	movff	powf@iy+1,??_powf+2
  7924   001026  C196  F0E5         	movff	powf@iy+2,??_powf+3
  7925   00102A  C197  F0E6         	movff	powf@iy+3,??_powf+4
  7926   00102E                     u7105:
  7927   00102E  67E2               	tstfsz	??_powf& (0+255),b
  7928   001030  EF1C  F008         	goto	u7106
  7929   001034  EF24  F008         	goto	u7107
  7930   001038                     u7106:
  7931   001038  35E6               	rlcf	(??_powf+4)& (0+255),w,b
  7932   00103A  33E6               	rrcf	(??_powf+4)& (0+255),f,b
  7933   00103C  33E5               	rrcf	(??_powf+3)& (0+255),f,b
  7934   00103E  33E4               	rrcf	(??_powf+2)& (0+255),f,b
  7935   001040  33E3               	rrcf	(??_powf+1)& (0+255),f,b
  7936   001042  2FE2               	decfsz	??_powf& (0+255),f,b
  7937   001044  EF17  F008         	goto	u7105
  7938   001048                     u7107:
  7939   001048  0E81               	movlw	129
  7940   00104A  0100               	movlb	0	; () banked
  7941   00104C  25E3               	addwf	(??_powf+1)& (0+255),w,b
  7942   00104E  0101               	movlb	1	; () banked
  7943   001050  6FA4               	movwf	powf@k& (0+255),b
  7944   001052  0EFF               	movlw	255
  7945   001054  0100               	movlb	0	; () banked
  7946   001056  21E4               	addwfc	(??_powf+2)& (0+255),w,b
  7947   001058  0101               	movlb	1	; () banked
  7948   00105A  6FA5               	movwf	(powf@k+1)& (0+255),b
  7949   00105C  0EFF               	movlw	255
  7950   00105E  0100               	movlb	0	; () banked
  7951   001060  21E5               	addwfc	(??_powf+3)& (0+255),w,b
  7952   001062  0101               	movlb	1	; () banked
  7953   001064  6FA6               	movwf	(powf@k+2)& (0+255),b
  7954   001066  0EFF               	movlw	255
  7955   001068  0100               	movlb	0	; () banked
  7956   00106A  21E6               	addwfc	(??_powf+4)& (0+255),w,b
  7957   00106C  0101               	movlb	1	; () banked
  7958   00106E  6FA7               	movwf	(powf@k+3)& (0+255),b
  7959   001070  51A4               	movf	powf@k& (0+255),w,b
  7960   001072  0817               	sublw	23
  7961   001074  0100               	movlb	0	; () banked
  7962   001076  6FE2               	movwf	??_powf& (0+255),b
  7963   001078  C194  F0E3         	movff	powf@iy,??_powf+1
  7964   00107C  C195  F0E4         	movff	powf@iy+1,??_powf+2
  7965   001080  C196  F0E5         	movff	powf@iy+2,??_powf+3
  7966   001084  C197  F0E6         	movff	powf@iy+3,??_powf+4
  7967   001088                     u7115:
  7968   001088  67E2               	tstfsz	??_powf& (0+255),b
  7969   00108A  EF49  F008         	goto	u7116
  7970   00108E  EF51  F008         	goto	u7117
  7971   001092                     u7116:
  7972   001092  35E6               	rlcf	(??_powf+4)& (0+255),w,b
  7973   001094  33E6               	rrcf	(??_powf+4)& (0+255),f,b
  7974   001096  33E5               	rrcf	(??_powf+3)& (0+255),f,b
  7975   001098  33E4               	rrcf	(??_powf+2)& (0+255),f,b
  7976   00109A  33E3               	rrcf	(??_powf+1)& (0+255),f,b
  7977   00109C  2FE2               	decfsz	??_powf& (0+255),f,b
  7978   00109E  EF44  F008         	goto	u7115
  7979   0010A2                     u7117:
  7980   0010A2  C0E3  F1A8         	movff	??_powf+1,powf@j
  7981   0010A6  C0E4  F1A9         	movff	??_powf+2,powf@j+1
  7982   0010AA  C0E5  F1AA         	movff	??_powf+3,powf@j+2
  7983   0010AE  C0E6  F1AB         	movff	??_powf+4,powf@j+3
  7984   0010B2  0101               	movlb	1	; () banked
  7985   0010B4  51A4               	movf	powf@k& (0+255),w,b
  7986   0010B6  0817               	sublw	23
  7987   0010B8  0100               	movlb	0	; () banked
  7988   0010BA  6FE2               	movwf	??_powf& (0+255),b
  7989   0010BC  C1A8  F0E3         	movff	powf@j,??_powf+1
  7990   0010C0  C1A9  F0E4         	movff	powf@j+1,??_powf+2
  7991   0010C4  C1AA  F0E5         	movff	powf@j+2,??_powf+3
  7992   0010C8  C1AB  F0E6         	movff	powf@j+3,??_powf+4
  7993   0010CC  2BE2               	incf	??_powf& (0+255),f,b
  7994   0010CE  EF6E  F008         	goto	u7120
  7995   0010D2                     u7125:
  7996   0010D2  90D8               	bcf	status,0,c
  7997   0010D4  37E3               	rlcf	(??_powf+1)& (0+255),f,b
  7998   0010D6  37E4               	rlcf	(??_powf+2)& (0+255),f,b
  7999   0010D8  37E5               	rlcf	(??_powf+3)& (0+255),f,b
  8000   0010DA  37E6               	rlcf	(??_powf+4)& (0+255),f,b
  8001   0010DC                     u7120:
  8002   0010DC  2FE2               	decfsz	??_powf& (0+255),f,b
  8003   0010DE  EF69  F008         	goto	u7125
  8004   0010E2  0101               	movlb	1	; () banked
  8005   0010E4  5194               	movf	powf@iy& (0+255),w,b
  8006   0010E6  0100               	movlb	0	; () banked
  8007   0010E8  19E3               	xorwf	(??_powf+1)& (0+255),w,b
  8008   0010EA  E113               	bnz	u7131
  8009   0010EC  0101               	movlb	1	; () banked
  8010   0010EE  5195               	movf	(powf@iy+1)& (0+255),w,b
  8011   0010F0  0100               	movlb	0	; () banked
  8012   0010F2  19E4               	xorwf	(??_powf+2)& (0+255),w,b
  8013   0010F4  E10E               	bnz	u7131
  8014   0010F6  0101               	movlb	1	; () banked
  8015   0010F8  5196               	movf	(powf@iy+2)& (0+255),w,b
  8016   0010FA  0100               	movlb	0	; () banked
  8017   0010FC  19E5               	xorwf	(??_powf+3)& (0+255),w,b
  8018   0010FE  E109               	bnz	u7131
  8019   001100  0101               	movlb	1	; () banked
  8020   001102  5197               	movf	(powf@iy+3)& (0+255),w,b
  8021   001104  0100               	movlb	0	; () banked
  8022   001106  19E6               	xorwf	(??_powf+4)& (0+255),w,b
  8023   001108  A4D8               	btfss	status,2,c
  8024   00110A  EF89  F008         	goto	u7131
  8025   00110E  EF8B  F008         	goto	u7130
  8026   001112                     u7131:
  8027   001112  EFB2  F008         	goto	l1379
  8028   001116                     u7130:
  8029   001116                     
  8030                           ; BSR set to: 0
  8031   001116  0E01               	movlw	1
  8032   001118  0101               	movlb	1	; () banked
  8033   00111A  15A8               	andwf	powf@j& (0+255),w,b
  8034   00111C  0100               	movlb	0	; () banked
  8035   00111E  6FE2               	movwf	??_powf& (0+255),b
  8036   001120  0E00               	movlw	0
  8037   001122  0101               	movlb	1	; () banked
  8038   001124  15A9               	andwf	(powf@j+1)& (0+255),w,b
  8039   001126  0100               	movlb	0	; () banked
  8040   001128  6FE3               	movwf	(??_powf+1)& (0+255),b
  8041   00112A  0E00               	movlw	0
  8042   00112C  0101               	movlb	1	; () banked
  8043   00112E  15AA               	andwf	(powf@j+2)& (0+255),w,b
  8044   001130  0100               	movlb	0	; () banked
  8045   001132  6FE4               	movwf	(??_powf+2)& (0+255),b
  8046   001134  0E00               	movlw	0
  8047   001136  0101               	movlb	1	; () banked
  8048   001138  15AB               	andwf	(powf@j+3)& (0+255),w,b
  8049   00113A  0100               	movlb	0	; () banked
  8050   00113C  6FE5               	movwf	(??_powf+3)& (0+255),b
  8051   00113E  51E2               	movf	??_powf& (0+255),w,b
  8052   001140  0802               	sublw	2
  8053   001142  0101               	movlb	1	; () banked
  8054   001144  6F54               	movwf	powf@yisint& (0+255),b
  8055   001146  0E00               	movlw	0
  8056   001148  0100               	movlb	0	; () banked
  8057   00114A  55E3               	subfwb	(??_powf+1)& (0+255),w,b
  8058   00114C  0101               	movlb	1	; () banked
  8059   00114E  6F55               	movwf	(powf@yisint+1)& (0+255),b
  8060   001150  0E00               	movlw	0
  8061   001152  0100               	movlb	0	; () banked
  8062   001154  55E4               	subfwb	(??_powf+2)& (0+255),w,b
  8063   001156  0101               	movlb	1	; () banked
  8064   001158  6F56               	movwf	(powf@yisint+2)& (0+255),b
  8065   00115A  0E00               	movlw	0
  8066   00115C  0100               	movlb	0	; () banked
  8067   00115E  55E5               	subfwb	(??_powf+3)& (0+255),w,b
  8068   001160  0101               	movlb	1	; () banked
  8069   001162  6F57               	movwf	(powf@yisint+3)& (0+255),b
  8070   001164                     l1379:
  8071   001164  0E80               	movlw	128
  8072   001166  0101               	movlb	1	; () banked
  8073   001168  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  8074   00116A  E109               	bnz	u7141
  8075   00116C  0E7F               	movlw	127
  8076   00116E  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  8077   001170  1194               	iorwf	powf@iy& (0+255),w,b
  8078   001172  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  8079   001174  A4D8               	btfss	status,2,c
  8080   001176  EFBF  F008         	goto	u7141
  8081   00117A  EFC1  F008         	goto	u7140
  8082   00117E                     u7141:
  8083   00117E  EF2D  F009         	goto	l7083
  8084   001182                     u7140:
  8085   001182                     
  8086                           ; BSR set to: 1
  8087   001182  0E80               	movlw	128
  8088   001184  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  8089   001186  E109               	bnz	u7151
  8090   001188  0E3F               	movlw	63
  8091   00118A  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  8092   00118C  11AC               	iorwf	powf@ix& (0+255),w,b
  8093   00118E  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8094   001190  A4D8               	btfss	status,2,c
  8095   001192  EFCD  F008         	goto	u7151
  8096   001196  EFCF  F008         	goto	u7150
  8097   00119A                     u7151:
  8098   00119A  EFDA  F008         	goto	l7067
  8099   00119E                     u7150:
  8100   00119E                     
  8101                           ; BSR set to: 1
  8102   00119E  0E00               	movlw	0
  8103   0011A0  0100               	movlb	0	; () banked
  8104   0011A2  6FDA               	movwf	?_powf& (0+255),b
  8105   0011A4  0E00               	movlw	0
  8106   0011A6  6FDB               	movwf	(?_powf+1)& (0+255),b
  8107   0011A8  0E80               	movlw	128
  8108   0011AA  6FDC               	movwf	(?_powf+2)& (0+255),b
  8109   0011AC  0E3F               	movlw	63
  8110   0011AE  6FDD               	movwf	(?_powf+3)& (0+255),b
  8111   0011B0  EF80  F019         	goto	l1374
  8112   0011B4                     l7067:
  8113                           
  8114                           ; BSR set to: 1
  8115   0011B4  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8116   0011B6  EFE9  F008         	goto	u7161
  8117   0011BA  05AC               	decf	powf@ix& (0+255),w,b
  8118   0011BC  0E00               	movlw	0
  8119   0011BE  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  8120   0011C0  0E80               	movlw	128
  8121   0011C2  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  8122   0011C4  0E3F               	movlw	63
  8123   0011C6  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  8124   0011C8  A0D8               	btfss	status,0,c
  8125   0011CA  EFE9  F008         	goto	u7161
  8126   0011CE  EFEB  F008         	goto	u7160
  8127   0011D2                     u7161:
  8128   0011D2  EF07  F009         	goto	l7075
  8129   0011D6                     u7160:
  8130   0011D6                     
  8131                           ; BSR set to: 1
  8132   0011D6  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8133   0011D8  EFF2  F008         	goto	u7170
  8134   0011DC  EFF0  F008         	goto	u7171
  8135   0011E0                     u7171:
  8136   0011E0  EFFD  F008         	goto	l1389
  8137   0011E4                     u7170:
  8138   0011E4                     
  8139                           ; BSR set to: 1
  8140   0011E4  0E00               	movlw	0
  8141   0011E6  0100               	movlb	0	; () banked
  8142   0011E8  6FDA               	movwf	?_powf& (0+255),b
  8143   0011EA  0E00               	movlw	0
  8144   0011EC  6FDB               	movwf	(?_powf+1)& (0+255),b
  8145   0011EE  0E00               	movlw	0
  8146   0011F0  6FDC               	movwf	(?_powf+2)& (0+255),b
  8147   0011F2  0E00               	movlw	0
  8148   0011F4  6FDD               	movwf	(?_powf+3)& (0+255),b
  8149   0011F6  EF80  F019         	goto	l1374
  8150   0011FA                     l1389:
  8151                           
  8152                           ; BSR set to: 1
  8153   0011FA  C0DE  F0DA         	movff	powf@y,?_powf
  8154   0011FE  C0DF  F0DB         	movff	powf@y+1,?_powf+1
  8155   001202  C0E0  F0DC         	movff	powf@y+2,?_powf+2
  8156   001206  C0E1  F0DD         	movff	powf@y+3,?_powf+3
  8157   00120A  EF80  F019         	goto	l1374
  8158   00120E                     l7075:
  8159                           
  8160                           ; BSR set to: 1
  8161   00120E  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8162   001210  EF0E  F009         	goto	u7180
  8163   001214  EF0C  F009         	goto	u7181
  8164   001218                     u7181:
  8165   001218  EF22  F009         	goto	l7079
  8166   00121C                     u7180:
  8167   00121C                     
  8168                           ; BSR set to: 1
  8169   00121C  C0DE  F002         	movff	powf@y,___flneg@f1
  8170   001220  C0DF  F003         	movff	powf@y+1,___flneg@f1+1
  8171   001224  C0E0  F004         	movff	powf@y+2,___flneg@f1+2
  8172   001228  C0E1  F005         	movff	powf@y+3,___flneg@f1+3
  8173   00122C  ECFD  F039         	call	___flneg	;wreg free
  8174   001230  C002  F0DA         	movff	?___flneg,?_powf
  8175   001234  C003  F0DB         	movff	?___flneg+1,?_powf+1
  8176   001238  C004  F0DC         	movff	?___flneg+2,?_powf+2
  8177   00123C  C005  F0DD         	movff	?___flneg+3,?_powf+3
  8178   001240  EF80  F019         	goto	l1374
  8179   001244                     l7079:
  8180                           
  8181                           ; BSR set to: 1
  8182   001244  0E00               	movlw	0
  8183   001246  0100               	movlb	0	; () banked
  8184   001248  6FDA               	movwf	?_powf& (0+255),b
  8185   00124A  0E00               	movlw	0
  8186   00124C  6FDB               	movwf	(?_powf+1)& (0+255),b
  8187   00124E  0E00               	movlw	0
  8188   001250  6FDC               	movwf	(?_powf+2)& (0+255),b
  8189   001252  0E00               	movlw	0
  8190   001254  6FDD               	movwf	(?_powf+3)& (0+255),b
  8191   001256  EF80  F019         	goto	l1374
  8192   00125A                     l7083:
  8193                           
  8194                           ; BSR set to: 1
  8195   00125A  0E80               	movlw	128
  8196   00125C  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  8197   00125E  E109               	bnz	u7191
  8198   001260  0E3F               	movlw	63
  8199   001262  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  8200   001264  1194               	iorwf	powf@iy& (0+255),w,b
  8201   001266  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  8202   001268  A4D8               	btfss	status,2,c
  8203   00126A  EF39  F009         	goto	u7191
  8204   00126E  EF3B  F009         	goto	u7190
  8205   001272                     u7191:
  8206   001272  EF68  F009         	goto	l7089
  8207   001276                     u7190:
  8208   001276                     
  8209                           ; BSR set to: 1
  8210   001276  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8211   001278  EF42  F009         	goto	u7200
  8212   00127C  EF40  F009         	goto	u7201
  8213   001280                     u7201:
  8214   001280  EF5E  F009         	goto	l1399
  8215   001284                     u7200:
  8216   001284                     
  8217                           ; BSR set to: 1
  8218   001284  0E00               	movlw	0
  8219   001286  6E2B               	movwf	___fldiv@b^0,c
  8220   001288  0E00               	movlw	0
  8221   00128A  6E2C               	movwf	(___fldiv@b+1)^0,c
  8222   00128C  0E80               	movlw	128
  8223   00128E  6E2D               	movwf	(___fldiv@b+2)^0,c
  8224   001290  0E3F               	movlw	63
  8225   001292  6E2E               	movwf	(___fldiv@b+3)^0,c
  8226   001294  C0DA  F02F         	movff	powf@x,___fldiv@a
  8227   001298  C0DB  F030         	movff	powf@x+1,___fldiv@a+1
  8228   00129C  C0DC  F031         	movff	powf@x+2,___fldiv@a+2
  8229   0012A0  C0DD  F032         	movff	powf@x+3,___fldiv@a+3
  8230   0012A4  ECBE  F02C         	call	___fldiv	;wreg free
  8231   0012A8  C02B  F0DA         	movff	?___fldiv,?_powf
  8232   0012AC  C02C  F0DB         	movff	?___fldiv+1,?_powf+1
  8233   0012B0  C02D  F0DC         	movff	?___fldiv+2,?_powf+2
  8234   0012B4  C02E  F0DD         	movff	?___fldiv+3,?_powf+3
  8235   0012B8  EF80  F019         	goto	l1374
  8236   0012BC                     l1399:
  8237                           
  8238                           ; BSR set to: 1
  8239   0012BC  C0DA  F0DA         	movff	powf@x,?_powf
  8240   0012C0  C0DB  F0DB         	movff	powf@x+1,?_powf+1
  8241   0012C4  C0DC  F0DC         	movff	powf@x+2,?_powf+2
  8242   0012C8  C0DD  F0DD         	movff	powf@x+3,?_powf+3
  8243   0012CC  EF80  F019         	goto	l1374
  8244   0012D0                     l7089:
  8245                           
  8246                           ; BSR set to: 1
  8247   0012D0  0E40               	movlw	64
  8248   0012D2  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  8249   0012D4  1184               	iorwf	powf@hy& (0+255),w,b
  8250   0012D6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  8251   0012D8  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  8252   0012DA  A4D8               	btfss	status,2,c
  8253   0012DC  EF72  F009         	goto	u7211
  8254   0012E0  EF74  F009         	goto	u7210
  8255   0012E4                     u7211:
  8256   0012E4  EF90  F009         	goto	l7095
  8257   0012E8                     u7210:
  8258   0012E8                     
  8259                           ; BSR set to: 1
  8260   0012E8  C0DA  F012         	movff	powf@x,___flmul@b
  8261   0012EC  C0DB  F013         	movff	powf@x+1,___flmul@b+1
  8262   0012F0  C0DC  F014         	movff	powf@x+2,___flmul@b+2
  8263   0012F4  C0DD  F015         	movff	powf@x+3,___flmul@b+3
  8264   0012F8  C0DA  F016         	movff	powf@x,___flmul@a
  8265   0012FC  C0DB  F017         	movff	powf@x+1,___flmul@a+1
  8266   001300  C0DC  F018         	movff	powf@x+2,___flmul@a+2
  8267   001304  C0DD  F019         	movff	powf@x+3,___flmul@a+3
  8268   001308  ECBA  F028         	call	___flmul	;wreg free
  8269   00130C  C012  F0DA         	movff	?___flmul,?_powf
  8270   001310  C013  F0DB         	movff	?___flmul+1,?_powf+1
  8271   001314  C014  F0DC         	movff	?___flmul+2,?_powf+2
  8272   001318  C015  F0DD         	movff	?___flmul+3,?_powf+3
  8273   00131C  EF80  F019         	goto	l1374
  8274   001320                     l7095:
  8275                           
  8276                           ; BSR set to: 1
  8277   001320  0E3F               	movlw	63
  8278   001322  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  8279   001324  1184               	iorwf	powf@hy& (0+255),w,b
  8280   001326  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  8281   001328  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  8282   00132A  A4D8               	btfss	status,2,c
  8283   00132C  EF9A  F009         	goto	u7221
  8284   001330  EF9C  F009         	goto	u7220
  8285   001334                     u7221:
  8286   001334  EFB7  F009         	goto	l1403
  8287   001338                     u7220:
  8288   001338                     
  8289                           ; BSR set to: 1
  8290   001338  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  8291   00133A  EFA1  F009         	goto	u7231
  8292   00133E  EFA3  F009         	goto	u7230
  8293   001342                     u7231:
  8294   001342  EFB7  F009         	goto	l1403
  8295   001346                     u7230:
  8296   001346                     
  8297                           ; BSR set to: 1
  8298   001346  C0DA  F012         	movff	powf@x,sqrtf@x
  8299   00134A  C0DB  F013         	movff	powf@x+1,sqrtf@x+1
  8300   00134E  C0DC  F014         	movff	powf@x+2,sqrtf@x+2
  8301   001352  C0DD  F015         	movff	powf@x+3,sqrtf@x+3
  8302   001356  ECCF  F02A         	call	_sqrtf	;wreg free
  8303   00135A  C012  F0DA         	movff	?_sqrtf,?_powf
  8304   00135E  C013  F0DB         	movff	?_sqrtf+1,?_powf+1
  8305   001362  C014  F0DC         	movff	?_sqrtf+2,?_powf+2
  8306   001366  C015  F0DD         	movff	?_sqrtf+3,?_powf+3
  8307   00136A  EF80  F019         	goto	l1374
  8308   00136E                     l1403:
  8309                           
  8310                           ; BSR set to: 1
  8311   00136E  C1AC  F178         	movff	powf@ix,powf@ax
  8312   001372  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  8313   001376  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  8314   00137A  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  8315   00137E                     
  8316                           ; BSR set to: 1
  8317   00137E  0E80               	movlw	128
  8318   001380  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  8319   001382  E10B               	bnz	u7240
  8320   001384  0E7F               	movlw	127
  8321   001386  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  8322   001388  11AC               	iorwf	powf@ix& (0+255),w,b
  8323   00138A  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8324   00138C  B4D8               	btfsc	status,2,c
  8325   00138E  EFCB  F009         	goto	u7241
  8326   001392  EFCD  F009         	goto	u7240
  8327   001396                     u7241:
  8328   001396  EFE6  F009         	goto	l1407
  8329   00139A                     u7240:
  8330   00139A                     
  8331                           ; BSR set to: 1
  8332   00139A  51AC               	movf	powf@ix& (0+255),w,b
  8333   00139C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8334   00139E  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  8335   0013A0  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  8336   0013A2  B4D8               	btfsc	status,2,c
  8337   0013A4  EFD6  F009         	goto	u7251
  8338   0013A8  EFD8  F009         	goto	u7250
  8339   0013AC                     u7251:
  8340   0013AC  EFE6  F009         	goto	l1407
  8341   0013B0                     u7250:
  8342   0013B0                     
  8343                           ; BSR set to: 1
  8344   0013B0  0E80               	movlw	128
  8345   0013B2  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  8346   0013B4  E109               	bnz	u7261
  8347   0013B6  0E3F               	movlw	63
  8348   0013B8  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  8349   0013BA  11AC               	iorwf	powf@ix& (0+255),w,b
  8350   0013BC  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8351   0013BE  A4D8               	btfss	status,2,c
  8352   0013C0  EFE4  F009         	goto	u7261
  8353   0013C4  EFE6  F009         	goto	u7260
  8354   0013C8                     u7261:
  8355   0013C8  EF81  F00A         	goto	l7127
  8356   0013CC                     u7260:
  8357   0013CC                     l1407:
  8358                           
  8359                           ; BSR set to: 1
  8360   0013CC  C178  F1B4         	movff	powf@ax,powf@z
  8361   0013D0  C179  F1B5         	movff	powf@ax+1,powf@z+1
  8362   0013D4  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  8363   0013D8  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  8364   0013DC                     
  8365                           ; BSR set to: 1
  8366   0013DC  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8367   0013DE  EFF5  F009         	goto	u7270
  8368   0013E2  EFF3  F009         	goto	u7271
  8369   0013E6                     u7271:
  8370   0013E6  EF0F  F00A         	goto	l7113
  8371   0013EA                     u7270:
  8372   0013EA                     
  8373                           ; BSR set to: 1
  8374   0013EA  0E00               	movlw	0
  8375   0013EC  6E2B               	movwf	___fldiv@b^0,c
  8376   0013EE  0E00               	movlw	0
  8377   0013F0  6E2C               	movwf	(___fldiv@b+1)^0,c
  8378   0013F2  0E80               	movlw	128
  8379   0013F4  6E2D               	movwf	(___fldiv@b+2)^0,c
  8380   0013F6  0E3F               	movlw	63
  8381   0013F8  6E2E               	movwf	(___fldiv@b+3)^0,c
  8382   0013FA  C1B4  F02F         	movff	powf@z,___fldiv@a
  8383   0013FE  C1B5  F030         	movff	powf@z+1,___fldiv@a+1
  8384   001402  C1B6  F031         	movff	powf@z+2,___fldiv@a+2
  8385   001406  C1B7  F032         	movff	powf@z+3,___fldiv@a+3
  8386   00140A  ECBE  F02C         	call	___fldiv	;wreg free
  8387   00140E  C02B  F1B4         	movff	?___fldiv,powf@z
  8388   001412  C02C  F1B5         	movff	?___fldiv+1,powf@z+1
  8389   001416  C02D  F1B6         	movff	?___fldiv+2,powf@z+2
  8390   00141A  C02E  F1B7         	movff	?___fldiv+3,powf@z+3
  8391   00141E                     l7113:
  8392   00141E  0101               	movlb	1	; () banked
  8393   001420  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  8394   001422  EF17  F00A         	goto	u7280
  8395   001426  EF15  F00A         	goto	u7281
  8396   00142A                     u7281:
  8397   00142A  EF77  F00A         	goto	l7123
  8398   00142E                     u7280:
  8399   00142E                     
  8400                           ; BSR set to: 1
  8401   00142E  0E00               	movlw	0
  8402   001430  25AC               	addwf	powf@ix& (0+255),w,b
  8403   001432  0100               	movlb	0	; () banked
  8404   001434  6FE2               	movwf	??_powf& (0+255),b
  8405   001436  0E00               	movlw	0
  8406   001438  0101               	movlb	1	; () banked
  8407   00143A  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  8408   00143C  0100               	movlb	0	; () banked
  8409   00143E  6FE3               	movwf	(??_powf+1)& (0+255),b
  8410   001440  0E80               	movlw	128
  8411   001442  0101               	movlb	1	; () banked
  8412   001444  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  8413   001446  0100               	movlb	0	; () banked
  8414   001448  6FE4               	movwf	(??_powf+2)& (0+255),b
  8415   00144A  0EC0               	movlw	192
  8416   00144C  0101               	movlb	1	; () banked
  8417   00144E  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  8418   001450  0100               	movlb	0	; () banked
  8419   001452  6FE5               	movwf	(??_powf+3)& (0+255),b
  8420   001454  0101               	movlb	1	; () banked
  8421   001456  5154               	movf	powf@yisint& (0+255),w,b
  8422   001458  0100               	movlb	0	; () banked
  8423   00145A  11E2               	iorwf	??_powf& (0+255),w,b
  8424   00145C  6FE6               	movwf	(??_powf+4)& (0+255),b
  8425   00145E  0101               	movlb	1	; () banked
  8426   001460  5155               	movf	(powf@yisint+1)& (0+255),w,b
  8427   001462  0100               	movlb	0	; () banked
  8428   001464  11E3               	iorwf	(??_powf+1)& (0+255),w,b
  8429   001466  6FE7               	movwf	(??_powf+5)& (0+255),b
  8430   001468  0101               	movlb	1	; () banked
  8431   00146A  5156               	movf	(powf@yisint+2)& (0+255),w,b
  8432   00146C  0100               	movlb	0	; () banked
  8433   00146E  11E4               	iorwf	(??_powf+2)& (0+255),w,b
  8434   001470  6FE8               	movwf	(??_powf+6)& (0+255),b
  8435   001472  0101               	movlb	1	; () banked
  8436   001474  5157               	movf	(powf@yisint+3)& (0+255),w,b
  8437   001476  0100               	movlb	0	; () banked
  8438   001478  11E5               	iorwf	(??_powf+3)& (0+255),w,b
  8439   00147A  6FE9               	movwf	(??_powf+7)& (0+255),b
  8440   00147C  51E6               	movf	(??_powf+4)& (0+255),w,b
  8441   00147E  11E7               	iorwf	(??_powf+5)& (0+255),w,b
  8442   001480  11E8               	iorwf	(??_powf+6)& (0+255),w,b
  8443   001482  11E9               	iorwf	(??_powf+7)& (0+255),w,b
  8444   001484  A4D8               	btfss	status,2,c
  8445   001486  EF47  F00A         	goto	u7291
  8446   00148A  EF49  F00A         	goto	u7290
  8447   00148E                     u7291:
  8448   00148E  EF59  F00A         	goto	l7119
  8449   001492                     u7290:
  8450   001492                     l7117:
  8451   001492  0E00               	movlw	0
  8452   001494  0100               	movlb	0	; () banked
  8453   001496  6FD1               	movwf	(_errno+1)& (0+255),b
  8454   001498  0E21               	movlw	33
  8455   00149A  6FD0               	movwf	_errno& (0+255),b
  8456   00149C  0EFF               	movlw	255
  8457   00149E  0101               	movlb	1	; () banked
  8458   0014A0  6FB4               	movwf	powf@z& (0+255),b
  8459   0014A2  0EFF               	movlw	255
  8460   0014A4  6FB5               	movwf	(powf@z+1)& (0+255),b
  8461   0014A6  0EFF               	movlw	255
  8462   0014A8  6FB6               	movwf	(powf@z+2)& (0+255),b
  8463   0014AA  0E7F               	movlw	127
  8464   0014AC  6FB7               	movwf	(powf@z+3)& (0+255),b
  8465   0014AE  EF77  F00A         	goto	l7123
  8466   0014B2                     l7119:
  8467                           
  8468                           ; BSR set to: 0
  8469   0014B2  0101               	movlb	1	; () banked
  8470   0014B4  0554               	decf	powf@yisint& (0+255),w,b
  8471   0014B6  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  8472   0014B8  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  8473   0014BA  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  8474   0014BC  A4D8               	btfss	status,2,c
  8475   0014BE  EF63  F00A         	goto	u7301
  8476   0014C2  EF65  F00A         	goto	u7300
  8477   0014C6                     u7301:
  8478   0014C6  EF77  F00A         	goto	l7123
  8479   0014CA                     u7300:
  8480   0014CA                     
  8481                           ; BSR set to: 1
  8482   0014CA  C1B4  F002         	movff	powf@z,___flneg@f1
  8483   0014CE  C1B5  F003         	movff	powf@z+1,___flneg@f1+1
  8484   0014D2  C1B6  F004         	movff	powf@z+2,___flneg@f1+2
  8485   0014D6  C1B7  F005         	movff	powf@z+3,___flneg@f1+3
  8486   0014DA  ECFD  F039         	call	___flneg	;wreg free
  8487   0014DE  C002  F1B4         	movff	?___flneg,powf@z
  8488   0014E2  C003  F1B5         	movff	?___flneg+1,powf@z+1
  8489   0014E6  C004  F1B6         	movff	?___flneg+2,powf@z+2
  8490   0014EA  C005  F1B7         	movff	?___flneg+3,powf@z+3
  8491   0014EE                     l7123:
  8492   0014EE  C1B4  F0DA         	movff	powf@z,?_powf
  8493   0014F2  C1B5  F0DB         	movff	powf@z+1,?_powf+1
  8494   0014F6  C1B6  F0DC         	movff	powf@z+2,?_powf+2
  8495   0014FA  C1B7  F0DD         	movff	powf@z+3,?_powf+3
  8496   0014FE  EF80  F019         	goto	l1374
  8497   001502                     l7127:
  8498                           
  8499                           ; BSR set to: 1
  8500   001502  0E00               	movlw	0
  8501   001504  6F64               	movwf	powf@sn& (0+255),b
  8502   001506  0E00               	movlw	0
  8503   001508  6F65               	movwf	(powf@sn+1)& (0+255),b
  8504   00150A  0E00               	movlw	0
  8505   00150C  6F66               	movwf	(powf@sn+2)& (0+255),b
  8506   00150E  0E00               	movlw	0
  8507   001510  6F67               	movwf	(powf@sn+3)& (0+255),b
  8508   001512                     
  8509                           ; BSR set to: 1
  8510   001512  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  8511   001514  EF90  F00A         	goto	u7310
  8512   001518  EF8E  F00A         	goto	u7311
  8513   00151C                     u7311:
  8514   00151C  EFB0  F00A         	goto	l7143
  8515   001520                     u7310:
  8516   001520                     
  8517                           ; BSR set to: 1
  8518   001520  5154               	movf	powf@yisint& (0+255),w,b
  8519   001522  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  8520   001524  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  8521   001526  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  8522   001528  A4D8               	btfss	status,2,c
  8523   00152A  EF99  F00A         	goto	u7321
  8524   00152E  EF9B  F00A         	goto	u7320
  8525   001532                     u7321:
  8526   001532  EF9D  F00A         	goto	l7139
  8527   001536                     u7320:
  8528   001536  EF49  F00A         	goto	l7117
  8529   00153A                     l7139:
  8530                           
  8531                           ; BSR set to: 1
  8532   00153A  0554               	decf	powf@yisint& (0+255),w,b
  8533   00153C  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  8534   00153E  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  8535   001540  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  8536   001542  A4D8               	btfss	status,2,c
  8537   001544  EFA6  F00A         	goto	u7331
  8538   001548  EFA8  F00A         	goto	u7330
  8539   00154C                     u7331:
  8540   00154C  EFB0  F00A         	goto	l7143
  8541   001550                     u7330:
  8542   001550                     
  8543                           ; BSR set to: 1
  8544   001550  0E00               	movlw	0
  8545   001552  6F64               	movwf	powf@sn& (0+255),b
  8546   001554  0E00               	movlw	0
  8547   001556  6F65               	movwf	(powf@sn+1)& (0+255),b
  8548   001558  0E00               	movlw	0
  8549   00155A  6F66               	movwf	(powf@sn+2)& (0+255),b
  8550   00155C  0E80               	movlw	128
  8551   00155E  6F67               	movwf	(powf@sn+3)& (0+255),b
  8552   001560                     l7143:
  8553                           
  8554                           ; BSR set to: 1
  8555   001560  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  8556   001562  EFBF  F00A         	goto	u7341
  8557   001566  0594               	decf	powf@iy& (0+255),w,b
  8558   001568  0E00               	movlw	0
  8559   00156A  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  8560   00156C  0E00               	movlw	0
  8561   00156E  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  8562   001570  0E4D               	movlw	77
  8563   001572  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  8564   001574  A0D8               	btfss	status,0,c
  8565   001576  EFBF  F00A         	goto	u7341
  8566   00157A  EFC1  F00A         	goto	u7340
  8567   00157E                     u7341:
  8568   00157E  EF85  F00C         	goto	l7199
  8569   001582                     u7340:
  8570   001582                     
  8571                           ; BSR set to: 1
  8572   001582  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8573   001584  EFD3  F00A         	goto	u7350
  8574   001588  0EF8               	movlw	248
  8575   00158A  5DAC               	subwf	powf@ix& (0+255),w,b
  8576   00158C  0EFF               	movlw	255
  8577   00158E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  8578   001590  0E7F               	movlw	127
  8579   001592  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  8580   001594  0E3F               	movlw	63
  8581   001596  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  8582   001598  B0D8               	btfsc	status,0,c
  8583   00159A  EFD1  F00A         	goto	u7351
  8584   00159E  EFD3  F00A         	goto	u7350
  8585   0015A2                     u7351:
  8586   0015A2  EFF4  F00A         	goto	l7161
  8587   0015A6                     u7350:
  8588   0015A6                     
  8589                           ; BSR set to: 1
  8590   0015A6  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8591   0015A8  EFDA  F00A         	goto	u7360
  8592   0015AC  EFD8  F00A         	goto	u7361
  8593   0015B0                     u7361:
  8594   0015B0  EFE9  F00A         	goto	l7157
  8595   0015B4                     u7360:
  8596   0015B4                     l7149:
  8597   0015B4  0E00               	movlw	0
  8598   0015B6  0101               	movlb	1	; () banked
  8599   0015B8  1164               	iorwf	powf@sn& (0+255),w,b
  8600   0015BA  6FB4               	movwf	powf@z& (0+255),b
  8601   0015BC  0E00               	movlw	0
  8602   0015BE  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  8603   0015C0  6FB5               	movwf	(powf@z+1)& (0+255),b
  8604   0015C2  0E80               	movlw	128
  8605   0015C4  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  8606   0015C6  6FB6               	movwf	(powf@z+2)& (0+255),b
  8607   0015C8  0E7F               	movlw	127
  8608   0015CA  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  8609   0015CC  6FB7               	movwf	(powf@z+3)& (0+255),b
  8610   0015CE  EF77  F00A         	goto	l7123
  8611   0015D2                     l7157:
  8612                           
  8613                           ; BSR set to: 1
  8614   0015D2  0E00               	movlw	0
  8615   0015D4  0100               	movlb	0	; () banked
  8616   0015D6  6FDA               	movwf	?_powf& (0+255),b
  8617   0015D8  0E00               	movlw	0
  8618   0015DA  6FDB               	movwf	(?_powf+1)& (0+255),b
  8619   0015DC  0E00               	movlw	0
  8620   0015DE  6FDC               	movwf	(?_powf+2)& (0+255),b
  8621   0015E0  0E00               	movlw	0
  8622   0015E2  6FDD               	movwf	(?_powf+3)& (0+255),b
  8623   0015E4  EF80  F019         	goto	l1374
  8624   0015E8                     l7161:
  8625                           
  8626                           ; BSR set to: 1
  8627   0015E8  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8628   0015EA  EF04  F00B         	goto	u7371
  8629   0015EE  0E08               	movlw	8
  8630   0015F0  5DAC               	subwf	powf@ix& (0+255),w,b
  8631   0015F2  0E00               	movlw	0
  8632   0015F4  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  8633   0015F6  0E80               	movlw	128
  8634   0015F8  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  8635   0015FA  0E3F               	movlw	63
  8636   0015FC  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  8637   0015FE  A0D8               	btfss	status,0,c
  8638   001600  EF04  F00B         	goto	u7371
  8639   001604  EF06  F00B         	goto	u7370
  8640   001608                     u7371:
  8641   001608  EF22  F00B         	goto	l7177
  8642   00160C                     u7370:
  8643   00160C                     
  8644                           ; BSR set to: 1
  8645   00160C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8646   00160E  EF13  F00B         	goto	u7381
  8647   001612  5187               	movf	(powf@hy+3)& (0+255),w,b
  8648   001614  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  8649   001616  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  8650   001618  E108               	bnz	u7380
  8651   00161A  0584               	decf	powf@hy& (0+255),w,b
  8652   00161C  A0D8               	btfss	status,0,c
  8653   00161E  EF13  F00B         	goto	u7381
  8654   001622  EF15  F00B         	goto	u7380
  8655   001626                     u7381:
  8656   001626  EF17  F00B         	goto	l7173
  8657   00162A                     u7380:
  8658   00162A  EFDA  F00A         	goto	l7149
  8659   00162E                     l7173:
  8660                           
  8661                           ; BSR set to: 1
  8662   00162E  0E00               	movlw	0
  8663   001630  0100               	movlb	0	; () banked
  8664   001632  6FDA               	movwf	?_powf& (0+255),b
  8665   001634  0E00               	movlw	0
  8666   001636  6FDB               	movwf	(?_powf+1)& (0+255),b
  8667   001638  0E00               	movlw	0
  8668   00163A  6FDC               	movwf	(?_powf+2)& (0+255),b
  8669   00163C  0E00               	movlw	0
  8670   00163E  6FDD               	movwf	(?_powf+3)& (0+255),b
  8671   001640  EF80  F019         	goto	l1374
  8672   001644                     l7177:
  8673                           
  8674                           ; BSR set to: 1
  8675   001644  C178  F002         	movff	powf@ax,___fladd@b
  8676   001648  C179  F003         	movff	powf@ax+1,___fladd@b+1
  8677   00164C  C17A  F004         	movff	powf@ax+2,___fladd@b+2
  8678   001650  C17B  F005         	movff	powf@ax+3,___fladd@b+3
  8679   001654  0E00               	movlw	0
  8680   001656  6E06               	movwf	___fladd@a^0,c
  8681   001658  0E00               	movlw	0
  8682   00165A  6E07               	movwf	(___fladd@a+1)^0,c
  8683   00165C  0E80               	movlw	128
  8684   00165E  6E08               	movwf	(___fladd@a+2)^0,c
  8685   001660  0EBF               	movlw	191
  8686   001662  6E09               	movwf	(___fladd@a+3)^0,c
  8687   001664  EC5A  F026         	call	___fladd	;wreg free
  8688   001668  C002  F1B0         	movff	?___fladd,powf@t
  8689   00166C  C003  F1B1         	movff	?___fladd+1,powf@t+1
  8690   001670  C004  F1B2         	movff	?___fladd+2,powf@t+2
  8691   001674  C005  F1B3         	movff	?___fladd+3,powf@t+3
  8692   001678  0E00               	movlw	0
  8693   00167A  6E16               	movwf	___flmul@a^0,c
  8694   00167C  0E00               	movlw	0
  8695   00167E  6E17               	movwf	(___flmul@a+1)^0,c
  8696   001680  0E80               	movlw	128
  8697   001682  6E18               	movwf	(___flmul@a+2)^0,c
  8698   001684  0E3E               	movlw	62
  8699   001686  6E19               	movwf	(___flmul@a+3)^0,c
  8700   001688  C1B0  F012         	movff	powf@t,___flmul@b
  8701   00168C  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8702   001690  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8703   001694  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8704   001698  ECBA  F028         	call	___flmul	;wreg free
  8705   00169C  C012  F048         	movff	?___flmul,___flsub@a
  8706   0016A0  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8707   0016A4  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8708   0016A8  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8709   0016AC  0EAB               	movlw	171
  8710   0016AE  6E44               	movwf	___flsub@b^0,c
  8711   0016B0  0EAA               	movlw	170
  8712   0016B2  6E45               	movwf	(___flsub@b+1)^0,c
  8713   0016B4  0EAA               	movlw	170
  8714   0016B6  6E46               	movwf	(___flsub@b+2)^0,c
  8715   0016B8  0E3E               	movlw	62
  8716   0016BA  6E47               	movwf	(___flsub@b+3)^0,c
  8717   0016BC  EC7A  F039         	call	___flsub	;wreg free
  8718   0016C0  C044  F148         	movff	?___flsub,_powf$3073
  8719   0016C4  C045  F149         	movff	?___flsub+1,_powf$3073+1
  8720   0016C8  C046  F14A         	movff	?___flsub+2,_powf$3073+2
  8721   0016CC  C047  F14B         	movff	?___flsub+3,_powf$3073+3
  8722   0016D0  C1B0  F016         	movff	powf@t,___flmul@a
  8723   0016D4  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  8724   0016D8  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  8725   0016DC  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  8726   0016E0  C1B0  F012         	movff	powf@t,___flmul@b
  8727   0016E4  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8728   0016E8  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8729   0016EC  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8730   0016F0  ECBA  F028         	call	___flmul	;wreg free
  8731   0016F4  C012  F15C         	movff	?___flmul,_powf$3074
  8732   0016F8  C013  F15D         	movff	?___flmul+1,_powf$3074+1
  8733   0016FC  C014  F15E         	movff	?___flmul+2,_powf$3074+2
  8734   001700  C015  F15F         	movff	?___flmul+3,_powf$3074+3
  8735   001704  C1B0  F016         	movff	powf@t,___flmul@a
  8736   001708  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  8737   00170C  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  8738   001710  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  8739   001714  C148  F012         	movff	_powf$3073,___flmul@b
  8740   001718  C149  F013         	movff	_powf$3073+1,___flmul@b+1
  8741   00171C  C14A  F014         	movff	_powf$3073+2,___flmul@b+2
  8742   001720  C14B  F015         	movff	_powf$3073+3,___flmul@b+3
  8743   001724  ECBA  F028         	call	___flmul	;wreg free
  8744   001728  C012  F048         	movff	?___flmul,___flsub@a
  8745   00172C  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8746   001730  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8747   001734  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8748   001738  0E00               	movlw	0
  8749   00173A  6E44               	movwf	___flsub@b^0,c
  8750   00173C  0E00               	movlw	0
  8751   00173E  6E45               	movwf	(___flsub@b+1)^0,c
  8752   001740  0E00               	movlw	0
  8753   001742  6E46               	movwf	(___flsub@b+2)^0,c
  8754   001744  0E3F               	movlw	63
  8755   001746  6E47               	movwf	(___flsub@b+3)^0,c
  8756   001748  EC7A  F039         	call	___flsub	;wreg free
  8757   00174C  C044  F14C         	movff	?___flsub,_powf$3075
  8758   001750  C045  F14D         	movff	?___flsub+1,_powf$3075+1
  8759   001754  C046  F14E         	movff	?___flsub+2,_powf$3075+2
  8760   001758  C047  F14F         	movff	?___flsub+3,_powf$3075+3
  8761   00175C  C15C  F012         	movff	_powf$3074,___flmul@b
  8762   001760  C15D  F013         	movff	_powf$3074+1,___flmul@b+1
  8763   001764  C15E  F014         	movff	_powf$3074+2,___flmul@b+2
  8764   001768  C15F  F015         	movff	_powf$3074+3,___flmul@b+3
  8765   00176C  C14C  F016         	movff	_powf$3075,___flmul@a
  8766   001770  C14D  F017         	movff	_powf$3075+1,___flmul@a+1
  8767   001774  C14E  F018         	movff	_powf$3075+2,___flmul@a+2
  8768   001778  C14F  F019         	movff	_powf$3075+3,___flmul@a+3
  8769   00177C  ECBA  F028         	call	___flmul	;wreg free
  8770   001780  C012  F144         	movff	?___flmul,powf@w
  8771   001784  C013  F145         	movff	?___flmul+1,powf@w+1
  8772   001788  C014  F146         	movff	?___flmul+2,powf@w+2
  8773   00178C  C015  F147         	movff	?___flmul+3,powf@w+3
  8774   001790  C1B0  F012         	movff	powf@t,___flmul@b
  8775   001794  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8776   001798  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8777   00179C  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8778   0017A0  0E00               	movlw	0
  8779   0017A2  6E16               	movwf	___flmul@a^0,c
  8780   0017A4  0EAA               	movlw	170
  8781   0017A6  6E17               	movwf	(___flmul@a+1)^0,c
  8782   0017A8  0EB8               	movlw	184
  8783   0017AA  6E18               	movwf	(___flmul@a+2)^0,c
  8784   0017AC  0E3F               	movlw	63
  8785   0017AE  6E19               	movwf	(___flmul@a+3)^0,c
  8786   0017B0  ECBA  F028         	call	___flmul	;wreg free
  8787   0017B4  C012  F17C         	movff	?___flmul,powf@u
  8788   0017B8  C013  F17D         	movff	?___flmul+1,powf@u+1
  8789   0017BC  C014  F17E         	movff	?___flmul+2,powf@u+2
  8790   0017C0  C015  F17F         	movff	?___flmul+3,powf@u+3
  8791   0017C4  0E70               	movlw	112
  8792   0017C6  6E16               	movwf	___flmul@a^0,c
  8793   0017C8  0EA5               	movlw	165
  8794   0017CA  6E17               	movwf	(___flmul@a+1)^0,c
  8795   0017CC  0EEC               	movlw	236
  8796   0017CE  6E18               	movwf	(___flmul@a+2)^0,c
  8797   0017D0  0E36               	movlw	54
  8798   0017D2  6E19               	movwf	(___flmul@a+3)^0,c
  8799   0017D4  C1B0  F012         	movff	powf@t,___flmul@b
  8800   0017D8  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8801   0017DC  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8802   0017E0  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8803   0017E4  ECBA  F028         	call	___flmul	;wreg free
  8804   0017E8  C012  F044         	movff	?___flmul,___flsub@b
  8805   0017EC  C013  F045         	movff	?___flmul+1,___flsub@b+1
  8806   0017F0  C014  F046         	movff	?___flmul+2,___flsub@b+2
  8807   0017F4  C015  F047         	movff	?___flmul+3,___flsub@b+3
  8808   0017F8  0E3B               	movlw	59
  8809   0017FA  6E16               	movwf	___flmul@a^0,c
  8810   0017FC  0EAA               	movlw	170
  8811   0017FE  6E17               	movwf	(___flmul@a+1)^0,c
  8812   001800  0EB8               	movlw	184
  8813   001802  6E18               	movwf	(___flmul@a+2)^0,c
  8814   001804  0E3F               	movlw	63
  8815   001806  6E19               	movwf	(___flmul@a+3)^0,c
  8816   001808  C144  F012         	movff	powf@w,___flmul@b
  8817   00180C  C145  F013         	movff	powf@w+1,___flmul@b+1
  8818   001810  C146  F014         	movff	powf@w+2,___flmul@b+2
  8819   001814  C147  F015         	movff	powf@w+3,___flmul@b+3
  8820   001818  ECBA  F028         	call	___flmul	;wreg free
  8821   00181C  C012  F048         	movff	?___flmul,___flsub@a
  8822   001820  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8823   001824  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8824   001828  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8825   00182C  EC7A  F039         	call	___flsub	;wreg free
  8826   001830  C044  F180         	movff	?___flsub,powf@v
  8827   001834  C045  F181         	movff	?___flsub+1,powf@v+1
  8828   001838  C046  F182         	movff	?___flsub+2,powf@v+2
  8829   00183C  C047  F183         	movff	?___flsub+3,powf@v+3
  8830   001840  C17C  F002         	movff	powf@u,___fladd@b
  8831   001844  C17D  F003         	movff	powf@u+1,___fladd@b+1
  8832   001848  C17E  F004         	movff	powf@u+2,___fladd@b+2
  8833   00184C  C17F  F005         	movff	powf@u+3,___fladd@b+3
  8834   001850  C180  F006         	movff	powf@v,___fladd@a
  8835   001854  C181  F007         	movff	powf@v+1,___fladd@a+1
  8836   001858  C182  F008         	movff	powf@v+2,___fladd@a+2
  8837   00185C  C183  F009         	movff	powf@v+3,___fladd@a+3
  8838   001860  EC5A  F026         	call	___fladd	;wreg free
  8839   001864  C002  F18C         	movff	?___fladd,powf@t1
  8840   001868  C003  F18D         	movff	?___fladd+1,powf@t1+1
  8841   00186C  C004  F18E         	movff	?___fladd+2,powf@t1+2
  8842   001870  C005  F18F         	movff	?___fladd+3,powf@t1+3
  8843   001874  C18C  F198         	movff	powf@t1,powf@is
  8844   001878  C18D  F199         	movff	powf@t1+1,powf@is+1
  8845   00187C  C18E  F19A         	movff	powf@t1+2,powf@is+2
  8846   001880  C18F  F19B         	movff	powf@t1+3,powf@is+3
  8847   001884  0E00               	movlw	0
  8848   001886  0101               	movlb	1	; () banked
  8849   001888  1598               	andwf	powf@is& (0+255),w,b
  8850   00188A  6F8C               	movwf	powf@t1& (0+255),b
  8851   00188C  0EF0               	movlw	240
  8852   00188E  1599               	andwf	(powf@is+1)& (0+255),w,b
  8853   001890  6F8D               	movwf	(powf@t1+1)& (0+255),b
  8854   001892  0EFF               	movlw	255
  8855   001894  159A               	andwf	(powf@is+2)& (0+255),w,b
  8856   001896  6F8E               	movwf	(powf@t1+2)& (0+255),b
  8857   001898  0EFF               	movlw	255
  8858   00189A  159B               	andwf	(powf@is+3)& (0+255),w,b
  8859   00189C  6F8F               	movwf	(powf@t1+3)& (0+255),b
  8860   00189E                     
  8861                           ; BSR set to: 1
  8862   00189E  C17C  F048         	movff	powf@u,___flsub@a
  8863   0018A2  C17D  F049         	movff	powf@u+1,___flsub@a+1
  8864   0018A6  C17E  F04A         	movff	powf@u+2,___flsub@a+2
  8865   0018AA  C17F  F04B         	movff	powf@u+3,___flsub@a+3
  8866   0018AE  C18C  F044         	movff	powf@t1,___flsub@b
  8867   0018B2  C18D  F045         	movff	powf@t1+1,___flsub@b+1
  8868   0018B6  C18E  F046         	movff	powf@t1+2,___flsub@b+2
  8869   0018BA  C18F  F047         	movff	powf@t1+3,___flsub@b+3
  8870   0018BE  EC7A  F039         	call	___flsub	;wreg free
  8871   0018C2  C044  F19C         	movff	?___flsub,_powf$3076
  8872   0018C6  C045  F19D         	movff	?___flsub+1,_powf$3076+1
  8873   0018CA  C046  F19E         	movff	?___flsub+2,_powf$3076+2
  8874   0018CE  C047  F19F         	movff	?___flsub+3,_powf$3076+3
  8875   0018D2  C180  F044         	movff	powf@v,___flsub@b
  8876   0018D6  C181  F045         	movff	powf@v+1,___flsub@b+1
  8877   0018DA  C182  F046         	movff	powf@v+2,___flsub@b+2
  8878   0018DE  C183  F047         	movff	powf@v+3,___flsub@b+3
  8879   0018E2  C19C  F048         	movff	_powf$3076,___flsub@a
  8880   0018E6  C19D  F049         	movff	_powf$3076+1,___flsub@a+1
  8881   0018EA  C19E  F04A         	movff	_powf$3076+2,___flsub@a+2
  8882   0018EE  C19F  F04B         	movff	_powf$3076+3,___flsub@a+3
  8883   0018F2  EC7A  F039         	call	___flsub	;wreg free
  8884   0018F6  C044  F11C         	movff	?___flsub,powf@t2
  8885   0018FA  C045  F11D         	movff	?___flsub+1,powf@t2+1
  8886   0018FE  C046  F11E         	movff	?___flsub+2,powf@t2+2
  8887   001902  C047  F11F         	movff	?___flsub+3,powf@t2+3
  8888   001906  EF79  F013         	goto	l7327
  8889   00190A                     l7199:
  8890                           
  8891                           ; BSR set to: 1
  8892   00190A  0E00               	movlw	0
  8893   00190C  6F88               	movwf	powf@n& (0+255),b
  8894   00190E  0E00               	movlw	0
  8895   001910  6F89               	movwf	(powf@n+1)& (0+255),b
  8896   001912  0E00               	movlw	0
  8897   001914  6F8A               	movwf	(powf@n+2)& (0+255),b
  8898   001916  0E00               	movlw	0
  8899   001918  6F8B               	movwf	(powf@n+3)& (0+255),b
  8900   00191A                     
  8901                           ; BSR set to: 1
  8902   00191A  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8903   00191C  EF9B  F00C         	goto	u7390
  8904   001920  51AF               	movf	(powf@ix+3)& (0+255),w,b
  8905   001922  E107               	bnz	u7391
  8906   001924  0E80               	movlw	128
  8907   001926  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
  8908   001928  B0D8               	btfsc	status,0,c
  8909   00192A  EF99  F00C         	goto	u7391
  8910   00192E  EF9B  F00C         	goto	u7390
  8911   001932                     u7391:
  8912   001932  EFC6  F00C         	goto	l7209
  8913   001936                     u7390:
  8914   001936                     
  8915                           ; BSR set to: 1
  8916   001936  C178  F012         	movff	powf@ax,___flmul@b
  8917   00193A  C179  F013         	movff	powf@ax+1,___flmul@b+1
  8918   00193E  C17A  F014         	movff	powf@ax+2,___flmul@b+2
  8919   001942  C17B  F015         	movff	powf@ax+3,___flmul@b+3
  8920   001946  0E00               	movlw	0
  8921   001948  6E16               	movwf	___flmul@a^0,c
  8922   00194A  0E00               	movlw	0
  8923   00194C  6E17               	movwf	(___flmul@a+1)^0,c
  8924   00194E  0E80               	movlw	128
  8925   001950  6E18               	movwf	(___flmul@a+2)^0,c
  8926   001952  0E4B               	movlw	75
  8927   001954  6E19               	movwf	(___flmul@a+3)^0,c
  8928   001956  ECBA  F028         	call	___flmul	;wreg free
  8929   00195A  C012  F178         	movff	?___flmul,powf@ax
  8930   00195E  C013  F179         	movff	?___flmul+1,powf@ax+1
  8931   001962  C014  F17A         	movff	?___flmul+2,powf@ax+2
  8932   001966  C015  F17B         	movff	?___flmul+3,powf@ax+3
  8933   00196A  0EE8               	movlw	232
  8934   00196C  0101               	movlb	1	; () banked
  8935   00196E  2788               	addwf	powf@n& (0+255),f,b
  8936   001970  0EFF               	movlw	255
  8937   001972  2389               	addwfc	(powf@n+1)& (0+255),f,b
  8938   001974  0EFF               	movlw	255
  8939   001976  238A               	addwfc	(powf@n+2)& (0+255),f,b
  8940   001978  0EFF               	movlw	255
  8941   00197A  238B               	addwfc	(powf@n+3)& (0+255),f,b
  8942   00197C                     
  8943                           ; BSR set to: 1
  8944   00197C  C178  F1AC         	movff	powf@ax,powf@ix
  8945   001980  C179  F1AD         	movff	powf@ax+1,powf@ix+1
  8946   001984  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
  8947   001988  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
  8948   00198C                     l7209:
  8949                           
  8950                           ; BSR set to: 1
  8951   00198C  0E17               	movlw	23
  8952   00198E  0100               	movlb	0	; () banked
  8953   001990  6FE2               	movwf	??_powf& (0+255),b
  8954   001992  C1AC  F0E3         	movff	powf@ix,??_powf+1
  8955   001996  C1AD  F0E4         	movff	powf@ix+1,??_powf+2
  8956   00199A  C1AE  F0E5         	movff	powf@ix+2,??_powf+3
  8957   00199E  C1AF  F0E6         	movff	powf@ix+3,??_powf+4
  8958   0019A2                     u7405:
  8959   0019A2  67E2               	tstfsz	??_powf& (0+255),b
  8960   0019A4  EFD6  F00C         	goto	u7406
  8961   0019A8  EFDE  F00C         	goto	u7407
  8962   0019AC                     u7406:
  8963   0019AC  35E6               	rlcf	(??_powf+4)& (0+255),w,b
  8964   0019AE  33E6               	rrcf	(??_powf+4)& (0+255),f,b
  8965   0019B0  33E5               	rrcf	(??_powf+3)& (0+255),f,b
  8966   0019B2  33E4               	rrcf	(??_powf+2)& (0+255),f,b
  8967   0019B4  33E3               	rrcf	(??_powf+1)& (0+255),f,b
  8968   0019B6  2FE2               	decfsz	??_powf& (0+255),f,b
  8969   0019B8  EFD1  F00C         	goto	u7405
  8970   0019BC                     u7407:
  8971   0019BC  0E81               	movlw	129
  8972   0019BE  0100               	movlb	0	; () banked
  8973   0019C0  25E3               	addwf	(??_powf+1)& (0+255),w,b
  8974   0019C2  6FE7               	movwf	(??_powf+5)& (0+255),b
  8975   0019C4  0EFF               	movlw	255
  8976   0019C6  21E4               	addwfc	(??_powf+2)& (0+255),w,b
  8977   0019C8  6FE8               	movwf	(??_powf+6)& (0+255),b
  8978   0019CA  0EFF               	movlw	255
  8979   0019CC  21E5               	addwfc	(??_powf+3)& (0+255),w,b
  8980   0019CE  6FE9               	movwf	(??_powf+7)& (0+255),b
  8981   0019D0  0EFF               	movlw	255
  8982   0019D2  21E6               	addwfc	(??_powf+4)& (0+255),w,b
  8983   0019D4  6FEA               	movwf	(??_powf+8)& (0+255),b
  8984   0019D6  51E7               	movf	(??_powf+5)& (0+255),w,b
  8985   0019D8  0101               	movlb	1	; () banked
  8986   0019DA  2788               	addwf	powf@n& (0+255),f,b
  8987   0019DC  0100               	movlb	0	; () banked
  8988   0019DE  51E8               	movf	(??_powf+6)& (0+255),w,b
  8989   0019E0  0101               	movlb	1	; () banked
  8990   0019E2  2389               	addwfc	(powf@n+1)& (0+255),f,b
  8991   0019E4  0100               	movlb	0	; () banked
  8992   0019E6  51E9               	movf	(??_powf+7)& (0+255),w,b
  8993   0019E8  0101               	movlb	1	; () banked
  8994   0019EA  238A               	addwfc	(powf@n+2)& (0+255),f,b
  8995   0019EC  0100               	movlb	0	; () banked
  8996   0019EE  51EA               	movf	(??_powf+8)& (0+255),w,b
  8997   0019F0  0101               	movlb	1	; () banked
  8998   0019F2  238B               	addwfc	(powf@n+3)& (0+255),f,b
  8999   0019F4                     
  9000                           ; BSR set to: 1
  9001   0019F4  0EFF               	movlw	255
  9002   0019F6  15AC               	andwf	powf@ix& (0+255),w,b
  9003   0019F8  6FA8               	movwf	powf@j& (0+255),b
  9004   0019FA  0EFF               	movlw	255
  9005   0019FC  15AD               	andwf	(powf@ix+1)& (0+255),w,b
  9006   0019FE  6FA9               	movwf	(powf@j+1)& (0+255),b
  9007   001A00  0E7F               	movlw	127
  9008   001A02  15AE               	andwf	(powf@ix+2)& (0+255),w,b
  9009   001A04  6FAA               	movwf	(powf@j+2)& (0+255),b
  9010   001A06  0E00               	movlw	0
  9011   001A08  15AF               	andwf	(powf@ix+3)& (0+255),w,b
  9012   001A0A  6FAB               	movwf	(powf@j+3)& (0+255),b
  9013   001A0C                     
  9014                           ; BSR set to: 1
  9015   001A0C  0E00               	movlw	0
  9016   001A0E  6FA4               	movwf	powf@k& (0+255),b
  9017   001A10  0E00               	movlw	0
  9018   001A12  6FA5               	movwf	(powf@k+1)& (0+255),b
  9019   001A14  0E00               	movlw	0
  9020   001A16  6FA6               	movwf	(powf@k+2)& (0+255),b
  9021   001A18  0E00               	movlw	0
  9022   001A1A  6FA7               	movwf	(powf@k+3)& (0+255),b
  9023   001A1C                     
  9024                           ; BSR set to: 1
  9025   001A1C  0E00               	movlw	0
  9026   001A1E  11A8               	iorwf	powf@j& (0+255),w,b
  9027   001A20  6FAC               	movwf	powf@ix& (0+255),b
  9028   001A22  0E00               	movlw	0
  9029   001A24  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  9030   001A26  6FAD               	movwf	(powf@ix+1)& (0+255),b
  9031   001A28  0E80               	movlw	128
  9032   001A2A  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  9033   001A2C  6FAE               	movwf	(powf@ix+2)& (0+255),b
  9034   001A2E  0E3F               	movlw	63
  9035   001A30  11AB               	iorwf	(powf@j+3)& (0+255),w,b
  9036   001A32  6FAF               	movwf	(powf@ix+3)& (0+255),b
  9037   001A34                     
  9038                           ; BSR set to: 1
  9039   001A34  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  9040   001A36  EF2C  F00D         	goto	u7410
  9041   001A3A  51AB               	movf	(powf@j+3)& (0+255),w,b
  9042   001A3C  E10B               	bnz	u7411
  9043   001A3E  0E72               	movlw	114
  9044   001A40  5DA8               	subwf	powf@j& (0+255),w,b
  9045   001A42  0EC4               	movlw	196
  9046   001A44  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  9047   001A46  0E1C               	movlw	28
  9048   001A48  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  9049   001A4A  B0D8               	btfsc	status,0,c
  9050   001A4C  EF2A  F00D         	goto	u7411
  9051   001A50  EF2C  F00D         	goto	u7410
  9052   001A54                     u7411:
  9053   001A54  EF2E  F00D         	goto	l7221
  9054   001A58                     u7410:
  9055   001A58  EF58  F00D         	goto	l7227
  9056   001A5C                     l7221:
  9057                           
  9058                           ; BSR set to: 1
  9059   001A5C  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  9060   001A5E  EF40  F00D         	goto	u7420
  9061   001A62  51AB               	movf	(powf@j+3)& (0+255),w,b
  9062   001A64  E10B               	bnz	u7421
  9063   001A66  0ED7               	movlw	215
  9064   001A68  5DA8               	subwf	powf@j& (0+255),w,b
  9065   001A6A  0EB3               	movlw	179
  9066   001A6C  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  9067   001A6E  0E5D               	movlw	93
  9068   001A70  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  9069   001A72  B0D8               	btfsc	status,0,c
  9070   001A74  EF3E  F00D         	goto	u7421
  9071   001A78  EF40  F00D         	goto	u7420
  9072   001A7C                     u7421:
  9073   001A7C  EF4A  F00D         	goto	l7225
  9074   001A80                     u7420:
  9075   001A80                     
  9076                           ; BSR set to: 1
  9077   001A80  0E01               	movlw	1
  9078   001A82  6FA4               	movwf	powf@k& (0+255),b
  9079   001A84  0E00               	movlw	0
  9080   001A86  6FA5               	movwf	(powf@k+1)& (0+255),b
  9081   001A88  0E00               	movlw	0
  9082   001A8A  6FA6               	movwf	(powf@k+2)& (0+255),b
  9083   001A8C  0E00               	movlw	0
  9084   001A8E  6FA7               	movwf	(powf@k+3)& (0+255),b
  9085   001A90  EF58  F00D         	goto	l7227
  9086   001A94                     l7225:
  9087                           
  9088                           ; BSR set to: 1
  9089   001A94  0E01               	movlw	1
  9090   001A96  2788               	addwf	powf@n& (0+255),f,b
  9091   001A98  0E00               	movlw	0
  9092   001A9A  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9093   001A9C  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9094   001A9E  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9095   001AA0  0E00               	movlw	0
  9096   001AA2  27AC               	addwf	powf@ix& (0+255),f,b
  9097   001AA4  0E00               	movlw	0
  9098   001AA6  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
  9099   001AA8  0E80               	movlw	128
  9100   001AAA  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
  9101   001AAC  0EFF               	movlw	255
  9102   001AAE  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
  9103   001AB0                     l7227:
  9104                           
  9105                           ; BSR set to: 1
  9106   001AB0  C1AC  F178         	movff	powf@ix,powf@ax
  9107   001AB4  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  9108   001AB8  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  9109   001ABC  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  9110   001AC0                     
  9111                           ; BSR set to: 1
  9112   001AC0  C178  F044         	movff	powf@ax,___flsub@b
  9113   001AC4  C179  F045         	movff	powf@ax+1,___flsub@b+1
  9114   001AC8  C17A  F046         	movff	powf@ax+2,___flsub@b+2
  9115   001ACC  C17B  F047         	movff	powf@ax+3,___flsub@b+3
  9116   001AD0  51A4               	movf	powf@k& (0+255),w,b
  9117   001AD2  0D04               	mullw	4
  9118   001AD4  50F3               	movf	243,w,c
  9119   001AD6  0F11               	addlw	low _bp
  9120   001AD8  0100               	movlb	0	; () banked
  9121   001ADA  6FE2               	movwf	??_powf& (0+255),b
  9122   001ADC  C0E2  FFF6         	movff	??_powf,tblptrl
  9123   001AE0                     	if	1	;There is more than 1 active tblptr byte
  9124   001AE0  0E0E               	movlw	high __smallconst
  9125   001AE2  6EF7               	movwf	tblptrh,c
  9126   001AE4                     	endif
  9127   001AE4                     	if	0	;tblptru may be non-zero
  9128   001AE4                     	endif
  9129   001AE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9130   001AE4  0E00               	movlw	low (__smallconst shr (0+16))
  9131   001AE6  6EF8               	movwf	tblptru,c
  9132   001AE8                     	endif
  9133   001AE8  0009               	tblrd		*+
  9134   001AEA  CFF5 F048          	movff	tablat,___flsub@a
  9135   001AEE  0009               	tblrd		*+
  9136   001AF0  CFF5 F049          	movff	tablat,___flsub@a+1
  9137   001AF4  0009               	tblrd		*+
  9138   001AF6  CFF5 F04A          	movff	tablat,___flsub@a+2
  9139   001AFA  000A               	tblrd		*-
  9140   001AFC  CFF5 F04B          	movff	tablat,___flsub@a+3
  9141   001B00  EC7A  F039         	call	___flsub	;wreg free
  9142   001B04  C044  F17C         	movff	?___flsub,powf@u
  9143   001B08  C045  F17D         	movff	?___flsub+1,powf@u+1
  9144   001B0C  C046  F17E         	movff	?___flsub+2,powf@u+2
  9145   001B10  C047  F17F         	movff	?___flsub+3,powf@u+3
  9146   001B14  0E00               	movlw	0
  9147   001B16  6E2B               	movwf	___fldiv@b^0,c
  9148   001B18  0E00               	movlw	0
  9149   001B1A  6E2C               	movwf	(___fldiv@b+1)^0,c
  9150   001B1C  0E80               	movlw	128
  9151   001B1E  6E2D               	movwf	(___fldiv@b+2)^0,c
  9152   001B20  0E3F               	movlw	63
  9153   001B22  6E2E               	movwf	(___fldiv@b+3)^0,c
  9154   001B24  C178  F006         	movff	powf@ax,___fladd@a
  9155   001B28  C179  F007         	movff	powf@ax+1,___fladd@a+1
  9156   001B2C  C17A  F008         	movff	powf@ax+2,___fladd@a+2
  9157   001B30  C17B  F009         	movff	powf@ax+3,___fladd@a+3
  9158   001B34  0101               	movlb	1	; () banked
  9159   001B36  51A4               	movf	powf@k& (0+255),w,b
  9160   001B38  0D04               	mullw	4
  9161   001B3A  50F3               	movf	243,w,c
  9162   001B3C  0F11               	addlw	low _bp
  9163   001B3E  0100               	movlb	0	; () banked
  9164   001B40  6FE2               	movwf	??_powf& (0+255),b
  9165   001B42  C0E2  FFF6         	movff	??_powf,tblptrl
  9166   001B46                     	if	1	;There is more than 1 active tblptr byte
  9167   001B46  0E0E               	movlw	high __smallconst
  9168   001B48  6EF7               	movwf	tblptrh,c
  9169   001B4A                     	endif
  9170   001B4A                     	if	0	;tblptru may be non-zero
  9171   001B4A                     	endif
  9172   001B4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9173   001B4A  0E00               	movlw	low (__smallconst shr (0+16))
  9174   001B4C  6EF8               	movwf	tblptru,c
  9175   001B4E                     	endif
  9176   001B4E  0009               	tblrd		*+
  9177   001B50  CFF5 F002          	movff	tablat,___fladd@b
  9178   001B54  0009               	tblrd		*+
  9179   001B56  CFF5 F003          	movff	tablat,___fladd@b+1
  9180   001B5A  0009               	tblrd		*+
  9181   001B5C  CFF5 F004          	movff	tablat,___fladd@b+2
  9182   001B60  000A               	tblrd		*-
  9183   001B62  CFF5 F005          	movff	tablat,___fladd@b+3
  9184   001B66  EC5A  F026         	call	___fladd	;wreg free
  9185   001B6A  C002  F02F         	movff	?___fladd,___fldiv@a
  9186   001B6E  C003  F030         	movff	?___fladd+1,___fldiv@a+1
  9187   001B72  C004  F031         	movff	?___fladd+2,___fldiv@a+2
  9188   001B76  C005  F032         	movff	?___fladd+3,___fldiv@a+3
  9189   001B7A  ECBE  F02C         	call	___fldiv	;wreg free
  9190   001B7E  C02B  F180         	movff	?___fldiv,powf@v
  9191   001B82  C02C  F181         	movff	?___fldiv+1,powf@v+1
  9192   001B86  C02D  F182         	movff	?___fldiv+2,powf@v+2
  9193   001B8A  C02E  F183         	movff	?___fldiv+3,powf@v+3
  9194   001B8E  C17C  F012         	movff	powf@u,___flmul@b
  9195   001B92  C17D  F013         	movff	powf@u+1,___flmul@b+1
  9196   001B96  C17E  F014         	movff	powf@u+2,___flmul@b+2
  9197   001B9A  C17F  F015         	movff	powf@u+3,___flmul@b+3
  9198   001B9E  C180  F016         	movff	powf@v,___flmul@a
  9199   001BA2  C181  F017         	movff	powf@v+1,___flmul@a+1
  9200   001BA6  C182  F018         	movff	powf@v+2,___flmul@a+2
  9201   001BAA  C183  F019         	movff	powf@v+3,___flmul@a+3
  9202   001BAE  ECBA  F028         	call	___flmul	;wreg free
  9203   001BB2  C012  F158         	movff	?___flmul,powf@s
  9204   001BB6  C013  F159         	movff	?___flmul+1,powf@s+1
  9205   001BBA  C014  F15A         	movff	?___flmul+2,powf@s+2
  9206   001BBE  C015  F15B         	movff	?___flmul+3,powf@s+3
  9207   001BC2  C158  F174         	movff	powf@s,powf@s_h
  9208   001BC6  C159  F175         	movff	powf@s+1,powf@s_h+1
  9209   001BCA  C15A  F176         	movff	powf@s+2,powf@s_h+2
  9210   001BCE  C15B  F177         	movff	powf@s+3,powf@s_h+3
  9211   001BD2  C174  F198         	movff	powf@s_h,powf@is
  9212   001BD6  C175  F199         	movff	powf@s_h+1,powf@is+1
  9213   001BDA  C176  F19A         	movff	powf@s_h+2,powf@is+2
  9214   001BDE  C177  F19B         	movff	powf@s_h+3,powf@is+3
  9215   001BE2  0E00               	movlw	0
  9216   001BE4  0101               	movlb	1	; () banked
  9217   001BE6  1598               	andwf	powf@is& (0+255),w,b
  9218   001BE8  6F74               	movwf	powf@s_h& (0+255),b
  9219   001BEA  0EF0               	movlw	240
  9220   001BEC  1599               	andwf	(powf@is+1)& (0+255),w,b
  9221   001BEE  6F75               	movwf	(powf@s_h+1)& (0+255),b
  9222   001BF0  0EFF               	movlw	255
  9223   001BF2  159A               	andwf	(powf@is+2)& (0+255),w,b
  9224   001BF4  6F76               	movwf	(powf@s_h+2)& (0+255),b
  9225   001BF6  0EFF               	movlw	255
  9226   001BF8  159B               	andwf	(powf@is+3)& (0+255),w,b
  9227   001BFA  6F77               	movwf	(powf@s_h+3)& (0+255),b
  9228   001BFC                     
  9229                           ; BSR set to: 1
  9230   001BFC  C1AC  F0E2         	movff	powf@ix,??_powf
  9231   001C00  C1AD  F0E3         	movff	powf@ix+1,??_powf+1
  9232   001C04  C1AE  F0E4         	movff	powf@ix+2,??_powf+2
  9233   001C08  C1AF  F0E5         	movff	powf@ix+3,??_powf+3
  9234   001C0C  0100               	movlb	0	; () banked
  9235   001C0E  35E5               	rlcf	(??_powf+3)& (0+255),w,b
  9236   001C10  33E5               	rrcf	(??_powf+3)& (0+255),f,b
  9237   001C12  33E4               	rrcf	(??_powf+2)& (0+255),f,b
  9238   001C14  33E3               	rrcf	(??_powf+1)& (0+255),f,b
  9239   001C16  33E2               	rrcf	??_powf& (0+255),f,b
  9240   001C18  0E00               	movlw	0
  9241   001C1A  15E2               	andwf	??_powf& (0+255),w,b
  9242   001C1C  6FE6               	movwf	(??_powf+4)& (0+255),b
  9243   001C1E  0EF0               	movlw	240
  9244   001C20  15E3               	andwf	(??_powf+1)& (0+255),w,b
  9245   001C22  6FE7               	movwf	(??_powf+5)& (0+255),b
  9246   001C24  0EFF               	movlw	255
  9247   001C26  15E4               	andwf	(??_powf+2)& (0+255),w,b
  9248   001C28  6FE8               	movwf	(??_powf+6)& (0+255),b
  9249   001C2A  0EFF               	movlw	255
  9250   001C2C  15E5               	andwf	(??_powf+3)& (0+255),w,b
  9251   001C2E  6FE9               	movwf	(??_powf+7)& (0+255),b
  9252   001C30  0E00               	movlw	0
  9253   001C32  11E6               	iorwf	(??_powf+4)& (0+255),w,b
  9254   001C34  0101               	movlb	1	; () banked
  9255   001C36  6F98               	movwf	powf@is& (0+255),b
  9256   001C38  0E00               	movlw	0
  9257   001C3A  0100               	movlb	0	; () banked
  9258   001C3C  11E7               	iorwf	(??_powf+5)& (0+255),w,b
  9259   001C3E  0101               	movlb	1	; () banked
  9260   001C40  6F99               	movwf	(powf@is+1)& (0+255),b
  9261   001C42  0E00               	movlw	0
  9262   001C44  0100               	movlb	0	; () banked
  9263   001C46  11E8               	iorwf	(??_powf+6)& (0+255),w,b
  9264   001C48  0101               	movlb	1	; () banked
  9265   001C4A  6F9A               	movwf	(powf@is+2)& (0+255),b
  9266   001C4C  0E20               	movlw	32
  9267   001C4E  0100               	movlb	0	; () banked
  9268   001C50  11E9               	iorwf	(??_powf+7)& (0+255),w,b
  9269   001C52  0101               	movlb	1	; () banked
  9270   001C54  6F9B               	movwf	(powf@is+3)& (0+255),b
  9271   001C56                     
  9272                           ; BSR set to: 1
  9273   001C56  C1A4  F0E2         	movff	powf@k,??_powf
  9274   001C5A  C1A5  F0E3         	movff	powf@k+1,??_powf+1
  9275   001C5E  C1A6  F0E4         	movff	powf@k+2,??_powf+2
  9276   001C62  C1A7  F0E5         	movff	powf@k+3,??_powf+3
  9277   001C66  0E15               	movlw	21
  9278   001C68                     u7435:
  9279   001C68  90D8               	bcf	status,0,c
  9280   001C6A  0100               	movlb	0	; () banked
  9281   001C6C  37E2               	rlcf	??_powf& (0+255),f,b
  9282   001C6E  37E3               	rlcf	(??_powf+1)& (0+255),f,b
  9283   001C70  37E4               	rlcf	(??_powf+2)& (0+255),f,b
  9284   001C72  37E5               	rlcf	(??_powf+3)& (0+255),f,b
  9285   001C74  2EE8               	decfsz	wreg,f,c
  9286   001C76  EF34  F00E         	goto	u7435
  9287   001C7A  0101               	movlb	1	; () banked
  9288   001C7C  5198               	movf	powf@is& (0+255),w,b
  9289   001C7E  0100               	movlb	0	; () banked
  9290   001C80  25E2               	addwf	??_powf& (0+255),w,b
  9291   001C82  6FE6               	movwf	(??_powf+4)& (0+255),b
  9292   001C84  0101               	movlb	1	; () banked
  9293   001C86  5199               	movf	(powf@is+1)& (0+255),w,b
  9294   001C88  0100               	movlb	0	; () banked
  9295   001C8A  21E3               	addwfc	(??_powf+1)& (0+255),w,b
  9296   001C8C  6FE7               	movwf	(??_powf+5)& (0+255),b
  9297   001C8E  0101               	movlb	1	; () banked
  9298   001C90  519A               	movf	(powf@is+2)& (0+255),w,b
  9299   001C92  0100               	movlb	0	; () banked
  9300   001C94  21E4               	addwfc	(??_powf+2)& (0+255),w,b
  9301   001C96  6FE8               	movwf	(??_powf+6)& (0+255),b
  9302   001C98  0101               	movlb	1	; () banked
  9303   001C9A  519B               	movf	(powf@is+3)& (0+255),w,b
  9304   001C9C  0100               	movlb	0	; () banked
  9305   001C9E  21E5               	addwfc	(??_powf+3)& (0+255),w,b
  9306   001CA0  6FE9               	movwf	(??_powf+7)& (0+255),b
  9307   001CA2  0E00               	movlw	0
  9308   001CA4  25E6               	addwf	(??_powf+4)& (0+255),w,b
  9309   001CA6  0101               	movlb	1	; () banked
  9310   001CA8  6F70               	movwf	powf@t_h& (0+255),b
  9311   001CAA  0E00               	movlw	0
  9312   001CAC  0100               	movlb	0	; () banked
  9313   001CAE  21E7               	addwfc	(??_powf+5)& (0+255),w,b
  9314   001CB0  0101               	movlb	1	; () banked
  9315   001CB2  6F71               	movwf	(powf@t_h+1)& (0+255),b
  9316   001CB4  0E40               	movlw	64
  9317   001CB6  0100               	movlb	0	; () banked
  9318   001CB8  21E8               	addwfc	(??_powf+6)& (0+255),w,b
  9319   001CBA  0101               	movlb	1	; () banked
  9320   001CBC  6F72               	movwf	(powf@t_h+2)& (0+255),b
  9321   001CBE  0E00               	movlw	0
  9322   001CC0  0100               	movlb	0	; () banked
  9323   001CC2  21E9               	addwfc	(??_powf+7)& (0+255),w,b
  9324   001CC4  0101               	movlb	1	; () banked
  9325   001CC6  6F73               	movwf	(powf@t_h+3)& (0+255),b
  9326   001CC8                     
  9327                           ; BSR set to: 1
  9328   001CC8  51A4               	movf	powf@k& (0+255),w,b
  9329   001CCA  0D04               	mullw	4
  9330   001CCC  50F3               	movf	243,w,c
  9331   001CCE  0F11               	addlw	low _bp
  9332   001CD0  0100               	movlb	0	; () banked
  9333   001CD2  6FE2               	movwf	??_powf& (0+255),b
  9334   001CD4  C0E2  FFF6         	movff	??_powf,tblptrl
  9335   001CD8                     	if	1	;There is more than 1 active tblptr byte
  9336   001CD8  0E0E               	movlw	high __smallconst
  9337   001CDA  6EF7               	movwf	tblptrh,c
  9338   001CDC                     	endif
  9339   001CDC                     	if	0	;tblptru may be non-zero
  9340   001CDC                     	endif
  9341   001CDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9342   001CDC  0E00               	movlw	low (__smallconst shr (0+16))
  9343   001CDE  6EF8               	movwf	tblptru,c
  9344   001CE0                     	endif
  9345   001CE0  0009               	tblrd		*+
  9346   001CE2  CFF5 F048          	movff	tablat,___flsub@a
  9347   001CE6  0009               	tblrd		*+
  9348   001CE8  CFF5 F049          	movff	tablat,___flsub@a+1
  9349   001CEC  0009               	tblrd		*+
  9350   001CEE  CFF5 F04A          	movff	tablat,___flsub@a+2
  9351   001CF2  000A               	tblrd		*-
  9352   001CF4  CFF5 F04B          	movff	tablat,___flsub@a+3
  9353   001CF8  C170  F044         	movff	powf@t_h,___flsub@b
  9354   001CFC  C171  F045         	movff	powf@t_h+1,___flsub@b+1
  9355   001D00  C172  F046         	movff	powf@t_h+2,___flsub@b+2
  9356   001D04  C173  F047         	movff	powf@t_h+3,___flsub@b+3
  9357   001D08  EC7A  F039         	call	___flsub	;wreg free
  9358   001D0C  C044  F19C         	movff	?___flsub,_powf$3076
  9359   001D10  C045  F19D         	movff	?___flsub+1,_powf$3076+1
  9360   001D14  C046  F19E         	movff	?___flsub+2,_powf$3076+2
  9361   001D18  C047  F19F         	movff	?___flsub+3,_powf$3076+3
  9362   001D1C  C178  F044         	movff	powf@ax,___flsub@b
  9363   001D20  C179  F045         	movff	powf@ax+1,___flsub@b+1
  9364   001D24  C17A  F046         	movff	powf@ax+2,___flsub@b+2
  9365   001D28  C17B  F047         	movff	powf@ax+3,___flsub@b+3
  9366   001D2C  C19C  F048         	movff	_powf$3076,___flsub@a
  9367   001D30  C19D  F049         	movff	_powf$3076+1,___flsub@a+1
  9368   001D34  C19E  F04A         	movff	_powf$3076+2,___flsub@a+2
  9369   001D38  C19F  F04B         	movff	_powf$3076+3,___flsub@a+3
  9370   001D3C  EC7A  F039         	call	___flsub	;wreg free
  9371   001D40  C044  F134         	movff	?___flsub,powf@t_l
  9372   001D44  C045  F135         	movff	?___flsub+1,powf@t_l+1
  9373   001D48  C046  F136         	movff	?___flsub+2,powf@t_l+2
  9374   001D4C  C047  F137         	movff	?___flsub+3,powf@t_l+3
  9375   001D50  C170  F016         	movff	powf@t_h,___flmul@a
  9376   001D54  C171  F017         	movff	powf@t_h+1,___flmul@a+1
  9377   001D58  C172  F018         	movff	powf@t_h+2,___flmul@a+2
  9378   001D5C  C173  F019         	movff	powf@t_h+3,___flmul@a+3
  9379   001D60  C174  F012         	movff	powf@s_h,___flmul@b
  9380   001D64  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9381   001D68  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9382   001D6C  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9383   001D70  ECBA  F028         	call	___flmul	;wreg free
  9384   001D74  C012  F048         	movff	?___flmul,___flsub@a
  9385   001D78  C013  F049         	movff	?___flmul+1,___flsub@a+1
  9386   001D7C  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  9387   001D80  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  9388   001D84  C17C  F044         	movff	powf@u,___flsub@b
  9389   001D88  C17D  F045         	movff	powf@u+1,___flsub@b+1
  9390   001D8C  C17E  F046         	movff	powf@u+2,___flsub@b+2
  9391   001D90  C17F  F047         	movff	powf@u+3,___flsub@b+3
  9392   001D94  EC7A  F039         	call	___flsub	;wreg free
  9393   001D98  C044  F19C         	movff	?___flsub,_powf$3076
  9394   001D9C  C045  F19D         	movff	?___flsub+1,_powf$3076+1
  9395   001DA0  C046  F19E         	movff	?___flsub+2,_powf$3076+2
  9396   001DA4  C047  F19F         	movff	?___flsub+3,_powf$3076+3
  9397   001DA8  C134  F016         	movff	powf@t_l,___flmul@a
  9398   001DAC  C135  F017         	movff	powf@t_l+1,___flmul@a+1
  9399   001DB0  C136  F018         	movff	powf@t_l+2,___flmul@a+2
  9400   001DB4  C137  F019         	movff	powf@t_l+3,___flmul@a+3
  9401   001DB8  C174  F012         	movff	powf@s_h,___flmul@b
  9402   001DBC  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9403   001DC0  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9404   001DC4  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9405   001DC8  ECBA  F028         	call	___flmul	;wreg free
  9406   001DCC  C012  F048         	movff	?___flmul,___flsub@a
  9407   001DD0  C013  F049         	movff	?___flmul+1,___flsub@a+1
  9408   001DD4  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  9409   001DD8  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  9410   001DDC  C19C  F044         	movff	_powf$3076,___flsub@b
  9411   001DE0  C19D  F045         	movff	_powf$3076+1,___flsub@b+1
  9412   001DE4  C19E  F046         	movff	_powf$3076+2,___flsub@b+2
  9413   001DE8  C19F  F047         	movff	_powf$3076+3,___flsub@b+3
  9414   001DEC  EC7A  F039         	call	___flsub	;wreg free
  9415   001DF0  C044  F15C         	movff	?___flsub,_powf$3074
  9416   001DF4  C045  F15D         	movff	?___flsub+1,_powf$3074+1
  9417   001DF8  C046  F15E         	movff	?___flsub+2,_powf$3074+2
  9418   001DFC  C047  F15F         	movff	?___flsub+3,_powf$3074+3
  9419   001E00  C15C  F012         	movff	_powf$3074,___flmul@b
  9420   001E04  C15D  F013         	movff	_powf$3074+1,___flmul@b+1
  9421   001E08  C15E  F014         	movff	_powf$3074+2,___flmul@b+2
  9422   001E0C  C15F  F015         	movff	_powf$3074+3,___flmul@b+3
  9423   001E10  C180  F016         	movff	powf@v,___flmul@a
  9424   001E14  C181  F017         	movff	powf@v+1,___flmul@a+1
  9425   001E18  C182  F018         	movff	powf@v+2,___flmul@a+2
  9426   001E1C  C183  F019         	movff	powf@v+3,___flmul@a+3
  9427   001E20  ECBA  F028         	call	___flmul	;wreg free
  9428   001E24  C012  F130         	movff	?___flmul,powf@s_l
  9429   001E28  C013  F131         	movff	?___flmul+1,powf@s_l+1
  9430   001E2C  C014  F132         	movff	?___flmul+2,powf@s_l+2
  9431   001E30  C015  F133         	movff	?___flmul+3,powf@s_l+3
  9432   001E34  C158  F012         	movff	powf@s,___flmul@b
  9433   001E38  C159  F013         	movff	powf@s+1,___flmul@b+1
  9434   001E3C  C15A  F014         	movff	powf@s+2,___flmul@b+2
  9435   001E40  C15B  F015         	movff	powf@s+3,___flmul@b+3
  9436   001E44  C158  F016         	movff	powf@s,___flmul@a
  9437   001E48  C159  F017         	movff	powf@s+1,___flmul@a+1
  9438   001E4C  C15A  F018         	movff	powf@s+2,___flmul@a+2
  9439   001E50  C15B  F019         	movff	powf@s+3,___flmul@a+3
  9440   001E54  ECBA  F028         	call	___flmul	;wreg free
  9441   001E58  C012  F190         	movff	?___flmul,powf@s2
  9442   001E5C  C013  F191         	movff	?___flmul+1,powf@s2+1
  9443   001E60  C014  F192         	movff	?___flmul+2,powf@s2+2
  9444   001E64  C015  F193         	movff	?___flmul+3,powf@s2+3
  9445   001E68  0E55               	movlw	85
  9446   001E6A  6E06               	movwf	___fladd@a^0,c
  9447   001E6C  0E32               	movlw	50
  9448   001E6E  6E07               	movwf	(___fladd@a+1)^0,c
  9449   001E70  0E6C               	movlw	108
  9450   001E72  6E08               	movwf	(___fladd@a+2)^0,c
  9451   001E74  0E3E               	movlw	62
  9452   001E76  6E09               	movwf	(___fladd@a+3)^0,c
  9453   001E78  0E42               	movlw	66
  9454   001E7A  6E16               	movwf	___flmul@a^0,c
  9455   001E7C  0EF1               	movlw	241
  9456   001E7E  6E17               	movwf	(___flmul@a+1)^0,c
  9457   001E80  0E53               	movlw	83
  9458   001E82  6E18               	movwf	(___flmul@a+2)^0,c
  9459   001E84  0E3E               	movlw	62
  9460   001E86  6E19               	movwf	(___flmul@a+3)^0,c
  9461   001E88  C190  F012         	movff	powf@s2,___flmul@b
  9462   001E8C  C191  F013         	movff	powf@s2+1,___flmul@b+1
  9463   001E90  C192  F014         	movff	powf@s2+2,___flmul@b+2
  9464   001E94  C193  F015         	movff	powf@s2+3,___flmul@b+3
  9465   001E98  ECBA  F028         	call	___flmul	;wreg free
  9466   001E9C  C012  F002         	movff	?___flmul,___fladd@b
  9467   001EA0  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9468   001EA4  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9469   001EA8  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9470   001EAC  EC5A  F026         	call	___fladd	;wreg free
  9471   001EB0  C002  F148         	movff	?___fladd,_powf$3073
  9472   001EB4  C003  F149         	movff	?___fladd+1,_powf$3073+1
  9473   001EB8  C004  F14A         	movff	?___fladd+2,_powf$3073+2
  9474   001EBC  C005  F14B         	movff	?___fladd+3,_powf$3073+3
  9475   001EC0  0E05               	movlw	5
  9476   001EC2  6E06               	movwf	___fladd@a^0,c
  9477   001EC4  0EA3               	movlw	163
  9478   001EC6  6E07               	movwf	(___fladd@a+1)^0,c
  9479   001EC8  0E8B               	movlw	139
  9480   001ECA  6E08               	movwf	(___fladd@a+2)^0,c
  9481   001ECC  0E3E               	movlw	62
  9482   001ECE  6E09               	movwf	(___fladd@a+3)^0,c
  9483   001ED0  C190  F016         	movff	powf@s2,___flmul@a
  9484   001ED4  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9485   001ED8  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9486   001EDC  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9487   001EE0  C148  F012         	movff	_powf$3073,___flmul@b
  9488   001EE4  C149  F013         	movff	_powf$3073+1,___flmul@b+1
  9489   001EE8  C14A  F014         	movff	_powf$3073+2,___flmul@b+2
  9490   001EEC  C14B  F015         	movff	_powf$3073+3,___flmul@b+3
  9491   001EF0  ECBA  F028         	call	___flmul	;wreg free
  9492   001EF4  C012  F002         	movff	?___flmul,___fladd@b
  9493   001EF8  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9494   001EFC  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9495   001F00  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9496   001F04  EC5A  F026         	call	___fladd	;wreg free
  9497   001F08  C002  F15C         	movff	?___fladd,_powf$3074
  9498   001F0C  C003  F15D         	movff	?___fladd+1,_powf$3074+1
  9499   001F10  C004  F15E         	movff	?___fladd+2,_powf$3074+2
  9500   001F14  C005  F15F         	movff	?___fladd+3,_powf$3074+3
  9501   001F18  0EAB               	movlw	171
  9502   001F1A  6E06               	movwf	___fladd@a^0,c
  9503   001F1C  0EAA               	movlw	170
  9504   001F1E  6E07               	movwf	(___fladd@a+1)^0,c
  9505   001F20  0EAA               	movlw	170
  9506   001F22  6E08               	movwf	(___fladd@a+2)^0,c
  9507   001F24  0E3E               	movlw	62
  9508   001F26  6E09               	movwf	(___fladd@a+3)^0,c
  9509   001F28  C190  F016         	movff	powf@s2,___flmul@a
  9510   001F2C  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9511   001F30  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9512   001F34  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9513   001F38  C15C  F012         	movff	_powf$3074,___flmul@b
  9514   001F3C  C15D  F013         	movff	_powf$3074+1,___flmul@b+1
  9515   001F40  C15E  F014         	movff	_powf$3074+2,___flmul@b+2
  9516   001F44  C15F  F015         	movff	_powf$3074+3,___flmul@b+3
  9517   001F48  ECBA  F028         	call	___flmul	;wreg free
  9518   001F4C  C012  F002         	movff	?___flmul,___fladd@b
  9519   001F50  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9520   001F54  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9521   001F58  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9522   001F5C  EC5A  F026         	call	___fladd	;wreg free
  9523   001F60  C002  F14C         	movff	?___fladd,_powf$3075
  9524   001F64  C003  F14D         	movff	?___fladd+1,_powf$3075+1
  9525   001F68  C004  F14E         	movff	?___fladd+2,_powf$3075+2
  9526   001F6C  C005  F14F         	movff	?___fladd+3,_powf$3075+3
  9527   001F70  0EB7               	movlw	183
  9528   001F72  6E06               	movwf	___fladd@a^0,c
  9529   001F74  0E6D               	movlw	109
  9530   001F76  6E07               	movwf	(___fladd@a+1)^0,c
  9531   001F78  0EDB               	movlw	219
  9532   001F7A  6E08               	movwf	(___fladd@a+2)^0,c
  9533   001F7C  0E3E               	movlw	62
  9534   001F7E  6E09               	movwf	(___fladd@a+3)^0,c
  9535   001F80  C190  F016         	movff	powf@s2,___flmul@a
  9536   001F84  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9537   001F88  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9538   001F8C  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9539   001F90  C14C  F012         	movff	_powf$3075,___flmul@b
  9540   001F94  C14D  F013         	movff	_powf$3075+1,___flmul@b+1
  9541   001F98  C14E  F014         	movff	_powf$3075+2,___flmul@b+2
  9542   001F9C  C14F  F015         	movff	_powf$3075+3,___flmul@b+3
  9543   001FA0  ECBA  F028         	call	___flmul	;wreg free
  9544   001FA4  C012  F002         	movff	?___flmul,___fladd@b
  9545   001FA8  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9546   001FAC  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9547   001FB0  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9548   001FB4  EC5A  F026         	call	___fladd	;wreg free
  9549   001FB8  C002  F138         	movff	?___fladd,_powf$3077
  9550   001FBC  C003  F139         	movff	?___fladd+1,_powf$3077+1
  9551   001FC0  C004  F13A         	movff	?___fladd+2,_powf$3077+2
  9552   001FC4  C005  F13B         	movff	?___fladd+3,_powf$3077+3
  9553   001FC8  0E9A               	movlw	154
  9554   001FCA  6E06               	movwf	___fladd@a^0,c
  9555   001FCC  0E99               	movlw	153
  9556   001FCE  6E07               	movwf	(___fladd@a+1)^0,c
  9557   001FD0  0E19               	movlw	25
  9558   001FD2  6E08               	movwf	(___fladd@a+2)^0,c
  9559   001FD4  0E3F               	movlw	63
  9560   001FD6  6E09               	movwf	(___fladd@a+3)^0,c
  9561   001FD8  C190  F016         	movff	powf@s2,___flmul@a
  9562   001FDC  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9563   001FE0  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9564   001FE4  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9565   001FE8  C138  F012         	movff	_powf$3077,___flmul@b
  9566   001FEC  C139  F013         	movff	_powf$3077+1,___flmul@b+1
  9567   001FF0  C13A  F014         	movff	_powf$3077+2,___flmul@b+2
  9568   001FF4  C13B  F015         	movff	_powf$3077+3,___flmul@b+3
  9569   001FF8  ECBA  F028         	call	___flmul	;wreg free
  9570   001FFC  C012  F002         	movff	?___flmul,___fladd@b
  9571   002000  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9572   002004  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9573   002008  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9574   00200C  EC5A  F026         	call	___fladd	;wreg free
  9575   002010  C002  F100         	movff	?___fladd,_powf$3078
  9576   002014  C003  F101         	movff	?___fladd+1,_powf$3078+1
  9577   002018  C004  F102         	movff	?___fladd+2,_powf$3078+2
  9578   00201C  C005  F103         	movff	?___fladd+3,_powf$3078+3
  9579   002020  C190  F016         	movff	powf@s2,___flmul@a
  9580   002024  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9581   002028  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9582   00202C  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9583   002030  C190  F012         	movff	powf@s2,___flmul@b
  9584   002034  C191  F013         	movff	powf@s2+1,___flmul@b+1
  9585   002038  C192  F014         	movff	powf@s2+2,___flmul@b+2
  9586   00203C  C193  F015         	movff	powf@s2+3,___flmul@b+3
  9587   002040  ECBA  F028         	call	___flmul	;wreg free
  9588   002044  C012  F104         	movff	?___flmul,_powf$3079
  9589   002048  C013  F105         	movff	?___flmul+1,_powf$3079+1
  9590   00204C  C014  F106         	movff	?___flmul+2,_powf$3079+2
  9591   002050  C015  F107         	movff	?___flmul+3,_powf$3079+3
  9592   002054  C100  F012         	movff	_powf$3078,___flmul@b
  9593   002058  C101  F013         	movff	_powf$3078+1,___flmul@b+1
  9594   00205C  C102  F014         	movff	_powf$3078+2,___flmul@b+2
  9595   002060  C103  F015         	movff	_powf$3078+3,___flmul@b+3
  9596   002064  C104  F016         	movff	_powf$3079,___flmul@a
  9597   002068  C105  F017         	movff	_powf$3079+1,___flmul@a+1
  9598   00206C  C106  F018         	movff	_powf$3079+2,___flmul@a+2
  9599   002070  C107  F019         	movff	_powf$3079+3,___flmul@a+3
  9600   002074  ECBA  F028         	call	___flmul	;wreg free
  9601   002078  C012  F150         	movff	?___flmul,powf@r
  9602   00207C  C013  F151         	movff	?___flmul+1,powf@r+1
  9603   002080  C014  F152         	movff	?___flmul+2,powf@r+2
  9604   002084  C015  F153         	movff	?___flmul+3,powf@r+3
  9605   002088  C130  F016         	movff	powf@s_l,___flmul@a
  9606   00208C  C131  F017         	movff	powf@s_l+1,___flmul@a+1
  9607   002090  C132  F018         	movff	powf@s_l+2,___flmul@a+2
  9608   002094  C133  F019         	movff	powf@s_l+3,___flmul@a+3
  9609   002098  C158  F006         	movff	powf@s,___fladd@a
  9610   00209C  C159  F007         	movff	powf@s+1,___fladd@a+1
  9611   0020A0  C15A  F008         	movff	powf@s+2,___fladd@a+2
  9612   0020A4  C15B  F009         	movff	powf@s+3,___fladd@a+3
  9613   0020A8  C174  F002         	movff	powf@s_h,___fladd@b
  9614   0020AC  C175  F003         	movff	powf@s_h+1,___fladd@b+1
  9615   0020B0  C176  F004         	movff	powf@s_h+2,___fladd@b+2
  9616   0020B4  C177  F005         	movff	powf@s_h+3,___fladd@b+3
  9617   0020B8  EC5A  F026         	call	___fladd	;wreg free
  9618   0020BC  C002  F012         	movff	?___fladd,___flmul@b
  9619   0020C0  C003  F013         	movff	?___fladd+1,___flmul@b+1
  9620   0020C4  C004  F014         	movff	?___fladd+2,___flmul@b+2
  9621   0020C8  C005  F015         	movff	?___fladd+3,___flmul@b+3
  9622   0020CC  ECBA  F028         	call	___flmul	;wreg free
  9623   0020D0  C012  F160         	movff	?___flmul,_powf$3080
  9624   0020D4  C013  F161         	movff	?___flmul+1,_powf$3080+1
  9625   0020D8  C014  F162         	movff	?___flmul+2,_powf$3080+2
  9626   0020DC  C015  F163         	movff	?___flmul+3,_powf$3080+3
  9627   0020E0  C150  F002         	movff	powf@r,___fladd@b
  9628   0020E4  C151  F003         	movff	powf@r+1,___fladd@b+1
  9629   0020E8  C152  F004         	movff	powf@r+2,___fladd@b+2
  9630   0020EC  C153  F005         	movff	powf@r+3,___fladd@b+3
  9631   0020F0  C160  F006         	movff	_powf$3080,___fladd@a
  9632   0020F4  C161  F007         	movff	_powf$3080+1,___fladd@a+1
  9633   0020F8  C162  F008         	movff	_powf$3080+2,___fladd@a+2
  9634   0020FC  C163  F009         	movff	_powf$3080+3,___fladd@a+3
  9635   002100  EC5A  F026         	call	___fladd	;wreg free
  9636   002104  C002  F150         	movff	?___fladd,powf@r
  9637   002108  C003  F151         	movff	?___fladd+1,powf@r+1
  9638   00210C  C004  F152         	movff	?___fladd+2,powf@r+2
  9639   002110  C005  F153         	movff	?___fladd+3,powf@r+3
  9640   002114  C174  F012         	movff	powf@s_h,___flmul@b
  9641   002118  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9642   00211C  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9643   002120  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9644   002124  C174  F016         	movff	powf@s_h,___flmul@a
  9645   002128  C175  F017         	movff	powf@s_h+1,___flmul@a+1
  9646   00212C  C176  F018         	movff	powf@s_h+2,___flmul@a+2
  9647   002130  C177  F019         	movff	powf@s_h+3,___flmul@a+3
  9648   002134  ECBA  F028         	call	___flmul	;wreg free
  9649   002138  C012  F190         	movff	?___flmul,powf@s2
  9650   00213C  C013  F191         	movff	?___flmul+1,powf@s2+1
  9651   002140  C014  F192         	movff	?___flmul+2,powf@s2+2
  9652   002144  C015  F193         	movff	?___flmul+3,powf@s2+3
  9653   002148  0E00               	movlw	0
  9654   00214A  6E06               	movwf	___fladd@a^0,c
  9655   00214C  0E00               	movlw	0
  9656   00214E  6E07               	movwf	(___fladd@a+1)^0,c
  9657   002150  0E40               	movlw	64
  9658   002152  6E08               	movwf	(___fladd@a+2)^0,c
  9659   002154  0E40               	movlw	64
  9660   002156  6E09               	movwf	(___fladd@a+3)^0,c
  9661   002158  C190  F002         	movff	powf@s2,___fladd@b
  9662   00215C  C191  F003         	movff	powf@s2+1,___fladd@b+1
  9663   002160  C192  F004         	movff	powf@s2+2,___fladd@b+2
  9664   002164  C193  F005         	movff	powf@s2+3,___fladd@b+3
  9665   002168  EC5A  F026         	call	___fladd	;wreg free
  9666   00216C  C002  F160         	movff	?___fladd,_powf$3080
  9667   002170  C003  F161         	movff	?___fladd+1,_powf$3080+1
  9668   002174  C004  F162         	movff	?___fladd+2,_powf$3080+2
  9669   002178  C005  F163         	movff	?___fladd+3,_powf$3080+3
  9670   00217C  C160  F002         	movff	_powf$3080,___fladd@b
  9671   002180  C161  F003         	movff	_powf$3080+1,___fladd@b+1
  9672   002184  C162  F004         	movff	_powf$3080+2,___fladd@b+2
  9673   002188  C163  F005         	movff	_powf$3080+3,___fladd@b+3
  9674   00218C  C150  F006         	movff	powf@r,___fladd@a
  9675   002190  C151  F007         	movff	powf@r+1,___fladd@a+1
  9676   002194  C152  F008         	movff	powf@r+2,___fladd@a+2
  9677   002198  C153  F009         	movff	powf@r+3,___fladd@a+3
  9678   00219C  EC5A  F026         	call	___fladd	;wreg free
  9679   0021A0  C002  F170         	movff	?___fladd,powf@t_h
  9680   0021A4  C003  F171         	movff	?___fladd+1,powf@t_h+1
  9681   0021A8  C004  F172         	movff	?___fladd+2,powf@t_h+2
  9682   0021AC  C005  F173         	movff	?___fladd+3,powf@t_h+3
  9683   0021B0  C170  F198         	movff	powf@t_h,powf@is
  9684   0021B4  C171  F199         	movff	powf@t_h+1,powf@is+1
  9685   0021B8  C172  F19A         	movff	powf@t_h+2,powf@is+2
  9686   0021BC  C173  F19B         	movff	powf@t_h+3,powf@is+3
  9687   0021C0  0E00               	movlw	0
  9688   0021C2  0101               	movlb	1	; () banked
  9689   0021C4  1598               	andwf	powf@is& (0+255),w,b
  9690   0021C6  6F70               	movwf	powf@t_h& (0+255),b
  9691   0021C8  0EF0               	movlw	240
  9692   0021CA  1599               	andwf	(powf@is+1)& (0+255),w,b
  9693   0021CC  6F71               	movwf	(powf@t_h+1)& (0+255),b
  9694   0021CE  0EFF               	movlw	255
  9695   0021D0  159A               	andwf	(powf@is+2)& (0+255),w,b
  9696   0021D2  6F72               	movwf	(powf@t_h+2)& (0+255),b
  9697   0021D4  0EFF               	movlw	255
  9698   0021D6  159B               	andwf	(powf@is+3)& (0+255),w,b
  9699   0021D8  6F73               	movwf	(powf@t_h+3)& (0+255),b
  9700   0021DA                     
  9701                           ; BSR set to: 1
  9702   0021DA  0E00               	movlw	0
  9703   0021DC  6E06               	movwf	___fladd@a^0,c
  9704   0021DE  0E00               	movlw	0
  9705   0021E0  6E07               	movwf	(___fladd@a+1)^0,c
  9706   0021E2  0E40               	movlw	64
  9707   0021E4  6E08               	movwf	(___fladd@a+2)^0,c
  9708   0021E6  0EC0               	movlw	192
  9709   0021E8  6E09               	movwf	(___fladd@a+3)^0,c
  9710   0021EA  C170  F002         	movff	powf@t_h,___fladd@b
  9711   0021EE  C171  F003         	movff	powf@t_h+1,___fladd@b+1
  9712   0021F2  C172  F004         	movff	powf@t_h+2,___fladd@b+2
  9713   0021F6  C173  F005         	movff	powf@t_h+3,___fladd@b+3
  9714   0021FA  EC5A  F026         	call	___fladd	;wreg free
  9715   0021FE  C002  F13C         	movff	?___fladd,_powf$3081
  9716   002202  C003  F13D         	movff	?___fladd+1,_powf$3081+1
  9717   002206  C004  F13E         	movff	?___fladd+2,_powf$3081+2
  9718   00220A  C005  F13F         	movff	?___fladd+3,_powf$3081+3
  9719   00220E  C190  F048         	movff	powf@s2,___flsub@a
  9720   002212  C191  F049         	movff	powf@s2+1,___flsub@a+1
  9721   002216  C192  F04A         	movff	powf@s2+2,___flsub@a+2
  9722   00221A  C193  F04B         	movff	powf@s2+3,___flsub@a+3
  9723   00221E  C13C  F044         	movff	_powf$3081,___flsub@b
  9724   002222  C13D  F045         	movff	_powf$3081+1,___flsub@b+1
  9725   002226  C13E  F046         	movff	_powf$3081+2,___flsub@b+2
  9726   00222A  C13F  F047         	movff	_powf$3081+3,___flsub@b+3
  9727   00222E  EC7A  F039         	call	___flsub	;wreg free
  9728   002232  C044  F140         	movff	?___flsub,_powf$3082
  9729   002236  C045  F141         	movff	?___flsub+1,_powf$3082+1
  9730   00223A  C046  F142         	movff	?___flsub+2,_powf$3082+2
  9731   00223E  C047  F143         	movff	?___flsub+3,_powf$3082+3
  9732   002242  C150  F044         	movff	powf@r,___flsub@b
  9733   002246  C151  F045         	movff	powf@r+1,___flsub@b+1
  9734   00224A  C152  F046         	movff	powf@r+2,___flsub@b+2
  9735   00224E  C153  F047         	movff	powf@r+3,___flsub@b+3
  9736   002252  C140  F048         	movff	_powf$3082,___flsub@a
  9737   002256  C141  F049         	movff	_powf$3082+1,___flsub@a+1
  9738   00225A  C142  F04A         	movff	_powf$3082+2,___flsub@a+2
  9739   00225E  C143  F04B         	movff	_powf$3082+3,___flsub@a+3
  9740   002262  EC7A  F039         	call	___flsub	;wreg free
  9741   002266  C044  F134         	movff	?___flsub,powf@t_l
  9742   00226A  C045  F135         	movff	?___flsub+1,powf@t_l+1
  9743   00226E  C046  F136         	movff	?___flsub+2,powf@t_l+2
  9744   002272  C047  F137         	movff	?___flsub+3,powf@t_l+3
  9745   002276  C174  F012         	movff	powf@s_h,___flmul@b
  9746   00227A  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9747   00227E  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9748   002282  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9749   002286  C170  F016         	movff	powf@t_h,___flmul@a
  9750   00228A  C171  F017         	movff	powf@t_h+1,___flmul@a+1
  9751   00228E  C172  F018         	movff	powf@t_h+2,___flmul@a+2
  9752   002292  C173  F019         	movff	powf@t_h+3,___flmul@a+3
  9753   002296  ECBA  F028         	call	___flmul	;wreg free
  9754   00229A  C012  F17C         	movff	?___flmul,powf@u
  9755   00229E  C013  F17D         	movff	?___flmul+1,powf@u+1
  9756   0022A2  C014  F17E         	movff	?___flmul+2,powf@u+2
  9757   0022A6  C015  F17F         	movff	?___flmul+3,powf@u+3
  9758   0022AA  C130  F016         	movff	powf@s_l,___flmul@a
  9759   0022AE  C131  F017         	movff	powf@s_l+1,___flmul@a+1
  9760   0022B2  C132  F018         	movff	powf@s_l+2,___flmul@a+2
  9761   0022B6  C133  F019         	movff	powf@s_l+3,___flmul@a+3
  9762   0022BA  C170  F012         	movff	powf@t_h,___flmul@b
  9763   0022BE  C171  F013         	movff	powf@t_h+1,___flmul@b+1
  9764   0022C2  C172  F014         	movff	powf@t_h+2,___flmul@b+2
  9765   0022C6  C173  F015         	movff	powf@t_h+3,___flmul@b+3
  9766   0022CA  ECBA  F028         	call	___flmul	;wreg free
  9767   0022CE  C012  F002         	movff	?___flmul,___fladd@b
  9768   0022D2  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9769   0022D6  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9770   0022DA  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9771   0022DE  C158  F016         	movff	powf@s,___flmul@a
  9772   0022E2  C159  F017         	movff	powf@s+1,___flmul@a+1
  9773   0022E6  C15A  F018         	movff	powf@s+2,___flmul@a+2
  9774   0022EA  C15B  F019         	movff	powf@s+3,___flmul@a+3
  9775   0022EE  C134  F012         	movff	powf@t_l,___flmul@b
  9776   0022F2  C135  F013         	movff	powf@t_l+1,___flmul@b+1
  9777   0022F6  C136  F014         	movff	powf@t_l+2,___flmul@b+2
  9778   0022FA  C137  F015         	movff	powf@t_l+3,___flmul@b+3
  9779   0022FE  ECBA  F028         	call	___flmul	;wreg free
  9780   002302  C012  F006         	movff	?___flmul,___fladd@a
  9781   002306  C013  F007         	movff	?___flmul+1,___fladd@a+1
  9782   00230A  C014  F008         	movff	?___flmul+2,___fladd@a+2
  9783   00230E  C015  F009         	movff	?___flmul+3,___fladd@a+3
  9784   002312  EC5A  F026         	call	___fladd	;wreg free
  9785   002316  C002  F180         	movff	?___fladd,powf@v
  9786   00231A  C003  F181         	movff	?___fladd+1,powf@v+1
  9787   00231E  C004  F182         	movff	?___fladd+2,powf@v+2
  9788   002322  C005  F183         	movff	?___fladd+3,powf@v+3
  9789   002326  C17C  F002         	movff	powf@u,___fladd@b
  9790   00232A  C17D  F003         	movff	powf@u+1,___fladd@b+1
  9791   00232E  C17E  F004         	movff	powf@u+2,___fladd@b+2
  9792   002332  C17F  F005         	movff	powf@u+3,___fladd@b+3
  9793   002336  C180  F006         	movff	powf@v,___fladd@a
  9794   00233A  C181  F007         	movff	powf@v+1,___fladd@a+1
  9795   00233E  C182  F008         	movff	powf@v+2,___fladd@a+2
  9796   002342  C183  F009         	movff	powf@v+3,___fladd@a+3
  9797   002346  EC5A  F026         	call	___fladd	;wreg free
  9798   00234A  C002  F1A0         	movff	?___fladd,powf@p_h
  9799   00234E  C003  F1A1         	movff	?___fladd+1,powf@p_h+1
  9800   002352  C004  F1A2         	movff	?___fladd+2,powf@p_h+2
  9801   002356  C005  F1A3         	movff	?___fladd+3,powf@p_h+3
  9802   00235A  C1A0  F198         	movff	powf@p_h,powf@is
  9803   00235E  C1A1  F199         	movff	powf@p_h+1,powf@is+1
  9804   002362  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
  9805   002366  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
  9806   00236A  0E00               	movlw	0
  9807   00236C  0101               	movlb	1	; () banked
  9808   00236E  1598               	andwf	powf@is& (0+255),w,b
  9809   002370  6FA0               	movwf	powf@p_h& (0+255),b
  9810   002372  0EF0               	movlw	240
  9811   002374  1599               	andwf	(powf@is+1)& (0+255),w,b
  9812   002376  6FA1               	movwf	(powf@p_h+1)& (0+255),b
  9813   002378  0EFF               	movlw	255
  9814   00237A  159A               	andwf	(powf@is+2)& (0+255),w,b
  9815   00237C  6FA2               	movwf	(powf@p_h+2)& (0+255),b
  9816   00237E  0EFF               	movlw	255
  9817   002380  159B               	andwf	(powf@is+3)& (0+255),w,b
  9818   002382  6FA3               	movwf	(powf@p_h+3)& (0+255),b
  9819   002384                     
  9820                           ; BSR set to: 1
  9821   002384  C17C  F048         	movff	powf@u,___flsub@a
  9822   002388  C17D  F049         	movff	powf@u+1,___flsub@a+1
  9823   00238C  C17E  F04A         	movff	powf@u+2,___flsub@a+2
  9824   002390  C17F  F04B         	movff	powf@u+3,___flsub@a+3
  9825   002394  C1A0  F044         	movff	powf@p_h,___flsub@b
  9826   002398  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
  9827   00239C  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
  9828   0023A0  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
  9829   0023A4  EC7A  F039         	call	___flsub	;wreg free
  9830   0023A8  C044  F19C         	movff	?___flsub,_powf$3076
  9831   0023AC  C045  F19D         	movff	?___flsub+1,_powf$3076+1
  9832   0023B0  C046  F19E         	movff	?___flsub+2,_powf$3076+2
  9833   0023B4  C047  F19F         	movff	?___flsub+3,_powf$3076+3
  9834   0023B8  C180  F044         	movff	powf@v,___flsub@b
  9835   0023BC  C181  F045         	movff	powf@v+1,___flsub@b+1
  9836   0023C0  C182  F046         	movff	powf@v+2,___flsub@b+2
  9837   0023C4  C183  F047         	movff	powf@v+3,___flsub@b+3
  9838   0023C8  C19C  F048         	movff	_powf$3076,___flsub@a
  9839   0023CC  C19D  F049         	movff	_powf$3076+1,___flsub@a+1
  9840   0023D0  C19E  F04A         	movff	_powf$3076+2,___flsub@a+2
  9841   0023D4  C19F  F04B         	movff	_powf$3076+3,___flsub@a+3
  9842   0023D8  EC7A  F039         	call	___flsub	;wreg free
  9843   0023DC  C044  F16C         	movff	?___flsub,powf@p_l
  9844   0023E0  C045  F16D         	movff	?___flsub+1,powf@p_l+1
  9845   0023E4  C046  F16E         	movff	?___flsub+2,powf@p_l+2
  9846   0023E8  C047  F16F         	movff	?___flsub+3,powf@p_l+3
  9847   0023EC  C1A0  F012         	movff	powf@p_h,___flmul@b
  9848   0023F0  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
  9849   0023F4  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
  9850   0023F8  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
  9851   0023FC  0E00               	movlw	0
  9852   0023FE  6E16               	movwf	___flmul@a^0,c
  9853   002400  0E40               	movlw	64
  9854   002402  6E17               	movwf	(___flmul@a+1)^0,c
  9855   002404  0E76               	movlw	118
  9856   002406  6E18               	movwf	(___flmul@a+2)^0,c
  9857   002408  0E3F               	movlw	63
  9858   00240A  6E19               	movwf	(___flmul@a+3)^0,c
  9859   00240C  ECBA  F028         	call	___flmul	;wreg free
  9860   002410  C012  F120         	movff	?___flmul,powf@z_h
  9861   002414  C013  F121         	movff	?___flmul+1,powf@z_h+1
  9862   002418  C014  F122         	movff	?___flmul+2,powf@z_h+2
  9863   00241C  C015  F123         	movff	?___flmul+3,powf@z_h+3
  9864   002420  0E4F               	movlw	79
  9865   002422  6E16               	movwf	___flmul@a^0,c
  9866   002424  0E38               	movlw	56
  9867   002426  6E17               	movwf	(___flmul@a+1)^0,c
  9868   002428  0E76               	movlw	118
  9869   00242A  6E18               	movwf	(___flmul@a+2)^0,c
  9870   00242C  0E3F               	movlw	63
  9871   00242E  6E19               	movwf	(___flmul@a+3)^0,c
  9872   002430  C16C  F012         	movff	powf@p_l,___flmul@b
  9873   002434  C16D  F013         	movff	powf@p_l+1,___flmul@b+1
  9874   002438  C16E  F014         	movff	powf@p_l+2,___flmul@b+2
  9875   00243C  C16F  F015         	movff	powf@p_l+3,___flmul@b+3
  9876   002440  ECBA  F028         	call	___flmul	;wreg free
  9877   002444  C012  F006         	movff	?___flmul,___fladd@a
  9878   002448  C013  F007         	movff	?___flmul+1,___fladd@a+1
  9879   00244C  C014  F008         	movff	?___flmul+2,___fladd@a+2
  9880   002450  C015  F009         	movff	?___flmul+3,___fladd@a+3
  9881   002454  0EC6               	movlw	198
  9882   002456  6E16               	movwf	___flmul@a^0,c
  9883   002458  0E23               	movlw	35
  9884   00245A  6E17               	movwf	(___flmul@a+1)^0,c
  9885   00245C  0EF6               	movlw	246
  9886   00245E  6E18               	movwf	(___flmul@a+2)^0,c
  9887   002460  0EB8               	movlw	184
  9888   002462  6E19               	movwf	(___flmul@a+3)^0,c
  9889   002464  C1A0  F012         	movff	powf@p_h,___flmul@b
  9890   002468  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
  9891   00246C  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
  9892   002470  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
  9893   002474  ECBA  F028         	call	___flmul	;wreg free
  9894   002478  C012  F002         	movff	?___flmul,___fladd@b
  9895   00247C  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9896   002480  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9897   002484  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9898   002488  EC5A  F026         	call	___fladd	;wreg free
  9899   00248C  C002  F160         	movff	?___fladd,_powf$3080
  9900   002490  C003  F161         	movff	?___fladd+1,_powf$3080+1
  9901   002494  C004  F162         	movff	?___fladd+2,_powf$3080+2
  9902   002498  C005  F163         	movff	?___fladd+3,_powf$3080+3
  9903   00249C  C160  F002         	movff	_powf$3080,___fladd@b
  9904   0024A0  C161  F003         	movff	_powf$3080+1,___fladd@b+1
  9905   0024A4  C162  F004         	movff	_powf$3080+2,___fladd@b+2
  9906   0024A8  C163  F005         	movff	_powf$3080+3,___fladd@b+3
  9907   0024AC  0101               	movlb	1	; () banked
  9908   0024AE  51A4               	movf	powf@k& (0+255),w,b
  9909   0024B0  0D04               	mullw	4
  9910   0024B2  50F3               	movf	243,w,c
  9911   0024B4  0F01               	addlw	low _dp_l
  9912   0024B6  0100               	movlb	0	; () banked
  9913   0024B8  6FE2               	movwf	??_powf& (0+255),b
  9914   0024BA  C0E2  FFF6         	movff	??_powf,tblptrl
  9915   0024BE                     	if	1	;There is more than 1 active tblptr byte
  9916   0024BE  0E0E               	movlw	high __smallconst
  9917   0024C0  6EF7               	movwf	tblptrh,c
  9918   0024C2                     	endif
  9919   0024C2                     	if	0	;tblptru may be non-zero
  9920   0024C2                     	endif
  9921   0024C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9922   0024C2  0E00               	movlw	low (__smallconst shr (0+16))
  9923   0024C4  6EF8               	movwf	tblptru,c
  9924   0024C6                     	endif
  9925   0024C6  0009               	tblrd		*+
  9926   0024C8  CFF5 F006          	movff	tablat,___fladd@a
  9927   0024CC  0009               	tblrd		*+
  9928   0024CE  CFF5 F007          	movff	tablat,___fladd@a+1
  9929   0024D2  0009               	tblrd		*+
  9930   0024D4  CFF5 F008          	movff	tablat,___fladd@a+2
  9931   0024D8  000A               	tblrd		*-
  9932   0024DA  CFF5 F009          	movff	tablat,___fladd@a+3
  9933   0024DE  EC5A  F026         	call	___fladd	;wreg free
  9934   0024E2  C002  F124         	movff	?___fladd,powf@z_l
  9935   0024E6  C003  F125         	movff	?___fladd+1,powf@z_l+1
  9936   0024EA  C004  F126         	movff	?___fladd+2,powf@z_l+2
  9937   0024EE  C005  F127         	movff	?___fladd+3,powf@z_l+3
  9938   0024F2  C188  F002         	movff	powf@n,___xxtofl@val
  9939   0024F6  C189  F003         	movff	powf@n+1,___xxtofl@val+1
  9940   0024FA  C18A  F004         	movff	powf@n+2,___xxtofl@val+2
  9941   0024FE  C18B  F005         	movff	powf@n+3,___xxtofl@val+3
  9942   002502  0E01               	movlw	1
  9943   002504  EC8A  F030         	call	___xxtofl
  9944   002508  C002  F1B0         	movff	?___xxtofl,powf@t
  9945   00250C  C003  F1B1         	movff	?___xxtofl+1,powf@t+1
  9946   002510  C004  F1B2         	movff	?___xxtofl+2,powf@t+2
  9947   002514  C005  F1B3         	movff	?___xxtofl+3,powf@t+3
  9948   002518  C124  F006         	movff	powf@z_l,___fladd@a
  9949   00251C  C125  F007         	movff	powf@z_l+1,___fladd@a+1
  9950   002520  C126  F008         	movff	powf@z_l+2,___fladd@a+2
  9951   002524  C127  F009         	movff	powf@z_l+3,___fladd@a+3
  9952   002528  C120  F002         	movff	powf@z_h,___fladd@b
  9953   00252C  C121  F003         	movff	powf@z_h+1,___fladd@b+1
  9954   002530  C122  F004         	movff	powf@z_h+2,___fladd@b+2
  9955   002534  C123  F005         	movff	powf@z_h+3,___fladd@b+3
  9956   002538  EC5A  F026         	call	___fladd	;wreg free
  9957   00253C  C002  F160         	movff	?___fladd,_powf$3080
  9958   002540  C003  F161         	movff	?___fladd+1,_powf$3080+1
  9959   002544  C004  F162         	movff	?___fladd+2,_powf$3080+2
  9960   002548  C005  F163         	movff	?___fladd+3,_powf$3080+3
  9961   00254C  0101               	movlb	1	; () banked
  9962   00254E  51A4               	movf	powf@k& (0+255),w,b
  9963   002550  0D04               	mullw	4
  9964   002552  50F3               	movf	243,w,c
  9965   002554  0F09               	addlw	low _dp_h
  9966   002556  0100               	movlb	0	; () banked
  9967   002558  6FE2               	movwf	??_powf& (0+255),b
  9968   00255A  C0E2  FFF6         	movff	??_powf,tblptrl
  9969   00255E                     	if	1	;There is more than 1 active tblptr byte
  9970   00255E  0E0E               	movlw	high __smallconst
  9971   002560  6EF7               	movwf	tblptrh,c
  9972   002562                     	endif
  9973   002562                     	if	0	;tblptru may be non-zero
  9974   002562                     	endif
  9975   002562                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9976   002562  0E00               	movlw	low (__smallconst shr (0+16))
  9977   002564  6EF8               	movwf	tblptru,c
  9978   002566                     	endif
  9979   002566  0009               	tblrd		*+
  9980   002568  CFF5 F006          	movff	tablat,___fladd@a
  9981   00256C  0009               	tblrd		*+
  9982   00256E  CFF5 F007          	movff	tablat,___fladd@a+1
  9983   002572  0009               	tblrd		*+
  9984   002574  CFF5 F008          	movff	tablat,___fladd@a+2
  9985   002578  000A               	tblrd		*-
  9986   00257A  CFF5 F009          	movff	tablat,___fladd@a+3
  9987   00257E  C160  F002         	movff	_powf$3080,___fladd@b
  9988   002582  C161  F003         	movff	_powf$3080+1,___fladd@b+1
  9989   002586  C162  F004         	movff	_powf$3080+2,___fladd@b+2
  9990   00258A  C163  F005         	movff	_powf$3080+3,___fladd@b+3
  9991   00258E  EC5A  F026         	call	___fladd	;wreg free
  9992   002592  C002  F108         	movff	?___fladd,_powf$3083
  9993   002596  C003  F109         	movff	?___fladd+1,_powf$3083+1
  9994   00259A  C004  F10A         	movff	?___fladd+2,_powf$3083+2
  9995   00259E  C005  F10B         	movff	?___fladd+3,_powf$3083+3
  9996   0025A2  C108  F002         	movff	_powf$3083,___fladd@b
  9997   0025A6  C109  F003         	movff	_powf$3083+1,___fladd@b+1
  9998   0025AA  C10A  F004         	movff	_powf$3083+2,___fladd@b+2
  9999   0025AE  C10B  F005         	movff	_powf$3083+3,___fladd@b+3
 10000   0025B2  C1B0  F006         	movff	powf@t,___fladd@a
 10001   0025B6  C1B1  F007         	movff	powf@t+1,___fladd@a+1
 10002   0025BA  C1B2  F008         	movff	powf@t+2,___fladd@a+2
 10003   0025BE  C1B3  F009         	movff	powf@t+3,___fladd@a+3
 10004   0025C2  EC5A  F026         	call	___fladd	;wreg free
 10005   0025C6  C002  F18C         	movff	?___fladd,powf@t1
 10006   0025CA  C003  F18D         	movff	?___fladd+1,powf@t1+1
 10007   0025CE  C004  F18E         	movff	?___fladd+2,powf@t1+2
 10008   0025D2  C005  F18F         	movff	?___fladd+3,powf@t1+3
 10009   0025D6  C18C  F198         	movff	powf@t1,powf@is
 10010   0025DA  C18D  F199         	movff	powf@t1+1,powf@is+1
 10011   0025DE  C18E  F19A         	movff	powf@t1+2,powf@is+2
 10012   0025E2  C18F  F19B         	movff	powf@t1+3,powf@is+3
 10013   0025E6  0E00               	movlw	0
 10014   0025E8  0101               	movlb	1	; () banked
 10015   0025EA  1598               	andwf	powf@is& (0+255),w,b
 10016   0025EC  6F8C               	movwf	powf@t1& (0+255),b
 10017   0025EE  0EF0               	movlw	240
 10018   0025F0  1599               	andwf	(powf@is+1)& (0+255),w,b
 10019   0025F2  6F8D               	movwf	(powf@t1+1)& (0+255),b
 10020   0025F4  0EFF               	movlw	255
 10021   0025F6  159A               	andwf	(powf@is+2)& (0+255),w,b
 10022   0025F8  6F8E               	movwf	(powf@t1+2)& (0+255),b
 10023   0025FA  0EFF               	movlw	255
 10024   0025FC  159B               	andwf	(powf@is+3)& (0+255),w,b
 10025   0025FE  6F8F               	movwf	(powf@t1+3)& (0+255),b
 10026   002600                     
 10027                           ; BSR set to: 1
 10028   002600  C1B0  F048         	movff	powf@t,___flsub@a
 10029   002604  C1B1  F049         	movff	powf@t+1,___flsub@a+1
 10030   002608  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
 10031   00260C  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
 10032   002610  C18C  F044         	movff	powf@t1,___flsub@b
 10033   002614  C18D  F045         	movff	powf@t1+1,___flsub@b+1
 10034   002618  C18E  F046         	movff	powf@t1+2,___flsub@b+2
 10035   00261C  C18F  F047         	movff	powf@t1+3,___flsub@b+3
 10036   002620  EC7A  F039         	call	___flsub	;wreg free
 10037   002624  C044  F19C         	movff	?___flsub,_powf$3076
 10038   002628  C045  F19D         	movff	?___flsub+1,_powf$3076+1
 10039   00262C  C046  F19E         	movff	?___flsub+2,_powf$3076+2
 10040   002630  C047  F19F         	movff	?___flsub+3,_powf$3076+3
 10041   002634  0101               	movlb	1	; () banked
 10042   002636  51A4               	movf	powf@k& (0+255),w,b
 10043   002638  0D04               	mullw	4
 10044   00263A  50F3               	movf	243,w,c
 10045   00263C  0F09               	addlw	low _dp_h
 10046   00263E  0100               	movlb	0	; () banked
 10047   002640  6FE2               	movwf	??_powf& (0+255),b
 10048   002642  C0E2  FFF6         	movff	??_powf,tblptrl
 10049   002646                     	if	1	;There is more than 1 active tblptr byte
 10050   002646  0E0E               	movlw	high __smallconst
 10051   002648  6EF7               	movwf	tblptrh,c
 10052   00264A                     	endif
 10053   00264A                     	if	0	;tblptru may be non-zero
 10054   00264A                     	endif
 10055   00264A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10056   00264A  0E00               	movlw	low (__smallconst shr (0+16))
 10057   00264C  6EF8               	movwf	tblptru,c
 10058   00264E                     	endif
 10059   00264E  0009               	tblrd		*+
 10060   002650  CFF5 F048          	movff	tablat,___flsub@a
 10061   002654  0009               	tblrd		*+
 10062   002656  CFF5 F049          	movff	tablat,___flsub@a+1
 10063   00265A  0009               	tblrd		*+
 10064   00265C  CFF5 F04A          	movff	tablat,___flsub@a+2
 10065   002660  000A               	tblrd		*-
 10066   002662  CFF5 F04B          	movff	tablat,___flsub@a+3
 10067   002666  C19C  F044         	movff	_powf$3076,___flsub@b
 10068   00266A  C19D  F045         	movff	_powf$3076+1,___flsub@b+1
 10069   00266E  C19E  F046         	movff	_powf$3076+2,___flsub@b+2
 10070   002672  C19F  F047         	movff	_powf$3076+3,___flsub@b+3
 10071   002676  EC7A  F039         	call	___flsub	;wreg free
 10072   00267A  C044  F140         	movff	?___flsub,_powf$3082
 10073   00267E  C045  F141         	movff	?___flsub+1,_powf$3082+1
 10074   002682  C046  F142         	movff	?___flsub+2,_powf$3082+2
 10075   002686  C047  F143         	movff	?___flsub+3,_powf$3082+3
 10076   00268A  C120  F048         	movff	powf@z_h,___flsub@a
 10077   00268E  C121  F049         	movff	powf@z_h+1,___flsub@a+1
 10078   002692  C122  F04A         	movff	powf@z_h+2,___flsub@a+2
 10079   002696  C123  F04B         	movff	powf@z_h+3,___flsub@a+3
 10080   00269A  C140  F044         	movff	_powf$3082,___flsub@b
 10081   00269E  C141  F045         	movff	_powf$3082+1,___flsub@b+1
 10082   0026A2  C142  F046         	movff	_powf$3082+2,___flsub@b+2
 10083   0026A6  C143  F047         	movff	_powf$3082+3,___flsub@b+3
 10084   0026AA  EC7A  F039         	call	___flsub	;wreg free
 10085   0026AE  C044  F10C         	movff	?___flsub,_powf$3084
 10086   0026B2  C045  F10D         	movff	?___flsub+1,_powf$3084+1
 10087   0026B6  C046  F10E         	movff	?___flsub+2,_powf$3084+2
 10088   0026BA  C047  F10F         	movff	?___flsub+3,_powf$3084+3
 10089   0026BE  C124  F044         	movff	powf@z_l,___flsub@b
 10090   0026C2  C125  F045         	movff	powf@z_l+1,___flsub@b+1
 10091   0026C6  C126  F046         	movff	powf@z_l+2,___flsub@b+2
 10092   0026CA  C127  F047         	movff	powf@z_l+3,___flsub@b+3
 10093   0026CE  C10C  F048         	movff	_powf$3084,___flsub@a
 10094   0026D2  C10D  F049         	movff	_powf$3084+1,___flsub@a+1
 10095   0026D6  C10E  F04A         	movff	_powf$3084+2,___flsub@a+2
 10096   0026DA  C10F  F04B         	movff	_powf$3084+3,___flsub@a+3
 10097   0026DE  EC7A  F039         	call	___flsub	;wreg free
 10098   0026E2  C044  F11C         	movff	?___flsub,powf@t2
 10099   0026E6  C045  F11D         	movff	?___flsub+1,powf@t2+1
 10100   0026EA  C046  F11E         	movff	?___flsub+2,powf@t2+2
 10101   0026EE  C047  F11F         	movff	?___flsub+3,powf@t2+3
 10102   0026F2                     l7327:
 10103   0026F2  C0DE  F198         	movff	powf@y,powf@is
 10104   0026F6  C0DF  F199         	movff	powf@y+1,powf@is+1
 10105   0026FA  C0E0  F19A         	movff	powf@y+2,powf@is+2
 10106   0026FE  C0E1  F19B         	movff	powf@y+3,powf@is+3
 10107   002702  0E00               	movlw	0
 10108   002704  0101               	movlb	1	; () banked
 10109   002706  1598               	andwf	powf@is& (0+255),w,b
 10110   002708  6F2C               	movwf	powf@y1& (0+255),b
 10111   00270A  0EF0               	movlw	240
 10112   00270C  1599               	andwf	(powf@is+1)& (0+255),w,b
 10113   00270E  6F2D               	movwf	(powf@y1+1)& (0+255),b
 10114   002710  0EFF               	movlw	255
 10115   002712  159A               	andwf	(powf@is+2)& (0+255),w,b
 10116   002714  6F2E               	movwf	(powf@y1+2)& (0+255),b
 10117   002716  0EFF               	movlw	255
 10118   002718  159B               	andwf	(powf@is+3)& (0+255),w,b
 10119   00271A  6F2F               	movwf	(powf@y1+3)& (0+255),b
 10120   00271C                     
 10121                           ; BSR set to: 1
 10122   00271C  C18C  F016         	movff	powf@t1,___flmul@a
 10123   002720  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 10124   002724  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 10125   002728  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 10126   00272C  C12C  F048         	movff	powf@y1,___flsub@a
 10127   002730  C12D  F049         	movff	powf@y1+1,___flsub@a+1
 10128   002734  C12E  F04A         	movff	powf@y1+2,___flsub@a+2
 10129   002738  C12F  F04B         	movff	powf@y1+3,___flsub@a+3
 10130   00273C  C0DE  F044         	movff	powf@y,___flsub@b
 10131   002740  C0DF  F045         	movff	powf@y+1,___flsub@b+1
 10132   002744  C0E0  F046         	movff	powf@y+2,___flsub@b+2
 10133   002748  C0E1  F047         	movff	powf@y+3,___flsub@b+3
 10134   00274C  EC7A  F039         	call	___flsub	;wreg free
 10135   002750  C044  F012         	movff	?___flsub,___flmul@b
 10136   002754  C045  F013         	movff	?___flsub+1,___flmul@b+1
 10137   002758  C046  F014         	movff	?___flsub+2,___flmul@b+2
 10138   00275C  C047  F015         	movff	?___flsub+3,___flmul@b+3
 10139   002760  ECBA  F028         	call	___flmul	;wreg free
 10140   002764  C012  F110         	movff	?___flmul,_powf$3085
 10141   002768  C013  F111         	movff	?___flmul+1,_powf$3085+1
 10142   00276C  C014  F112         	movff	?___flmul+2,_powf$3085+2
 10143   002770  C015  F113         	movff	?___flmul+3,_powf$3085+3
 10144   002774  C110  F002         	movff	_powf$3085,___fladd@b
 10145   002778  C111  F003         	movff	_powf$3085+1,___fladd@b+1
 10146   00277C  C112  F004         	movff	_powf$3085+2,___fladd@b+2
 10147   002780  C113  F005         	movff	_powf$3085+3,___fladd@b+3
 10148   002784  C11C  F016         	movff	powf@t2,___flmul@a
 10149   002788  C11D  F017         	movff	powf@t2+1,___flmul@a+1
 10150   00278C  C11E  F018         	movff	powf@t2+2,___flmul@a+2
 10151   002790  C11F  F019         	movff	powf@t2+3,___flmul@a+3
 10152   002794  C0DE  F012         	movff	powf@y,___flmul@b
 10153   002798  C0DF  F013         	movff	powf@y+1,___flmul@b+1
 10154   00279C  C0E0  F014         	movff	powf@y+2,___flmul@b+2
 10155   0027A0  C0E1  F015         	movff	powf@y+3,___flmul@b+3
 10156   0027A4  ECBA  F028         	call	___flmul	;wreg free
 10157   0027A8  C012  F006         	movff	?___flmul,___fladd@a
 10158   0027AC  C013  F007         	movff	?___flmul+1,___fladd@a+1
 10159   0027B0  C014  F008         	movff	?___flmul+2,___fladd@a+2
 10160   0027B4  C015  F009         	movff	?___flmul+3,___fladd@a+3
 10161   0027B8  EC5A  F026         	call	___fladd	;wreg free
 10162   0027BC  C002  F16C         	movff	?___fladd,powf@p_l
 10163   0027C0  C003  F16D         	movff	?___fladd+1,powf@p_l+1
 10164   0027C4  C004  F16E         	movff	?___fladd+2,powf@p_l+2
 10165   0027C8  C005  F16F         	movff	?___fladd+3,powf@p_l+3
 10166   0027CC  C12C  F012         	movff	powf@y1,___flmul@b
 10167   0027D0  C12D  F013         	movff	powf@y1+1,___flmul@b+1
 10168   0027D4  C12E  F014         	movff	powf@y1+2,___flmul@b+2
 10169   0027D8  C12F  F015         	movff	powf@y1+3,___flmul@b+3
 10170   0027DC  C18C  F016         	movff	powf@t1,___flmul@a
 10171   0027E0  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 10172   0027E4  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 10173   0027E8  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 10174   0027EC  ECBA  F028         	call	___flmul	;wreg free
 10175   0027F0  C012  F1A0         	movff	?___flmul,powf@p_h
 10176   0027F4  C013  F1A1         	movff	?___flmul+1,powf@p_h+1
 10177   0027F8  C014  F1A2         	movff	?___flmul+2,powf@p_h+2
 10178   0027FC  C015  F1A3         	movff	?___flmul+3,powf@p_h+3
 10179   002800  C1A0  F002         	movff	powf@p_h,___fladd@b
 10180   002804  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
 10181   002808  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
 10182   00280C  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
 10183   002810  C16C  F006         	movff	powf@p_l,___fladd@a
 10184   002814  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
 10185   002818  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
 10186   00281C  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
 10187   002820  EC5A  F026         	call	___fladd	;wreg free
 10188   002824  C002  F1B4         	movff	?___fladd,powf@z
 10189   002828  C003  F1B5         	movff	?___fladd+1,powf@z+1
 10190   00282C  C004  F1B6         	movff	?___fladd+2,powf@z+2
 10191   002830  C005  F1B7         	movff	?___fladd+3,powf@z+3
 10192   002834  C1B4  F1A8         	movff	powf@z,powf@j
 10193   002838  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 10194   00283C  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 10195   002840  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 10196   002844  0101               	movlb	1	; () banked
 10197   002846  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 10198   002848  EF32  F014         	goto	u7441
 10199   00284C  05A8               	decf	powf@j& (0+255),w,b
 10200   00284E  0E00               	movlw	0
 10201   002850  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 10202   002852  0E00               	movlw	0
 10203   002854  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 10204   002856  0E43               	movlw	67
 10205   002858  59AB               	subwfb	(powf@j+3)& (0+255),w,b
 10206   00285A  A0D8               	btfss	status,0,c
 10207   00285C  EF32  F014         	goto	u7441
 10208   002860  EF34  F014         	goto	u7440
 10209   002864                     u7441:
 10210   002864  EF36  F014         	goto	l7349
 10211   002868                     u7440:
 10212   002868  EFDA  F00A         	goto	l7149
 10213   00286C                     l7349:
 10214                           
 10215                           ; BSR set to: 1
 10216   00286C  0E43               	movlw	67
 10217   00286E  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 10218   002870  11A8               	iorwf	powf@j& (0+255),w,b
 10219   002872  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 10220   002874  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 10221   002876  A4D8               	btfss	status,2,c
 10222   002878  EF40  F014         	goto	u7451
 10223   00287C  EF42  F014         	goto	u7450
 10224   002880                     u7451:
 10225   002880  EF81  F014         	goto	l7359
 10226   002884                     u7450:
 10227   002884                     
 10228                           ; BSR set to: 1
 10229   002884  C1A0  F048         	movff	powf@p_h,___flsub@a
 10230   002888  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 10231   00288C  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 10232   002890  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 10233   002894  C1B4  F044         	movff	powf@z,___flsub@b
 10234   002898  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10235   00289C  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10236   0028A0  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10237   0028A4  EC7A  F039         	call	___flsub	;wreg free
 10238   0028A8  C044  F04C         	movff	?___flsub,___flge@ff1
 10239   0028AC  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
 10240   0028B0  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
 10241   0028B4  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
 10242   0028B8  0E3C               	movlw	60
 10243   0028BA  6E06               	movwf	___fladd@a^0,c
 10244   0028BC  0EAA               	movlw	170
 10245   0028BE  6E07               	movwf	(___fladd@a+1)^0,c
 10246   0028C0  0E38               	movlw	56
 10247   0028C2  6E08               	movwf	(___fladd@a+2)^0,c
 10248   0028C4  0E33               	movlw	51
 10249   0028C6  6E09               	movwf	(___fladd@a+3)^0,c
 10250   0028C8  C16C  F002         	movff	powf@p_l,___fladd@b
 10251   0028CC  C16D  F003         	movff	powf@p_l+1,___fladd@b+1
 10252   0028D0  C16E  F004         	movff	powf@p_l+2,___fladd@b+2
 10253   0028D4  C16F  F005         	movff	powf@p_l+3,___fladd@b+3
 10254   0028D8  EC5A  F026         	call	___fladd	;wreg free
 10255   0028DC  C002  F050         	movff	?___fladd,___flge@ff2
 10256   0028E0  C003  F051         	movff	?___fladd+1,___flge@ff2+1
 10257   0028E4  C004  F052         	movff	?___fladd+2,___flge@ff2+2
 10258   0028E8  C005  F053         	movff	?___fladd+3,___flge@ff2+3
 10259   0028EC  EC9D  F032         	call	___flge	;wreg free
 10260   0028F0  B0D8               	btfsc	status,0,c
 10261   0028F2  EF7D  F014         	goto	u7461
 10262   0028F6  EF7F  F014         	goto	u7460
 10263   0028FA                     u7461:
 10264   0028FA  EFF4  F014         	goto	l7375
 10265   0028FE                     u7460:
 10266   0028FE  EFDA  F00A         	goto	l7149
 10267   002902                     l7359:
 10268                           
 10269                           ; BSR set to: 1
 10270   002902  0EFF               	movlw	255
 10271   002904  15A8               	andwf	powf@j& (0+255),w,b
 10272   002906  0100               	movlb	0	; () banked
 10273   002908  6FE2               	movwf	??_powf& (0+255),b
 10274   00290A  0EFF               	movlw	255
 10275   00290C  0101               	movlb	1	; () banked
 10276   00290E  15A9               	andwf	(powf@j+1)& (0+255),w,b
 10277   002910  0100               	movlb	0	; () banked
 10278   002912  6FE3               	movwf	(??_powf+1)& (0+255),b
 10279   002914  0EFF               	movlw	255
 10280   002916  0101               	movlb	1	; () banked
 10281   002918  15AA               	andwf	(powf@j+2)& (0+255),w,b
 10282   00291A  0100               	movlb	0	; () banked
 10283   00291C  6FE4               	movwf	(??_powf+2)& (0+255),b
 10284   00291E  0E7F               	movlw	127
 10285   002920  0101               	movlb	1	; () banked
 10286   002922  15AB               	andwf	(powf@j+3)& (0+255),w,b
 10287   002924  0100               	movlb	0	; () banked
 10288   002926  6FE5               	movwf	(??_powf+3)& (0+255),b
 10289   002928  BFE5               	btfsc	(??_powf+3)& (0+255),7,b
 10290   00292A  EFA3  F014         	goto	u7471
 10291   00292E  05E2               	decf	??_powf& (0+255),w,b
 10292   002930  0E00               	movlw	0
 10293   002932  59E3               	subwfb	(??_powf+1)& (0+255),w,b
 10294   002934  0E16               	movlw	22
 10295   002936  59E4               	subwfb	(??_powf+2)& (0+255),w,b
 10296   002938  0E43               	movlw	67
 10297   00293A  59E5               	subwfb	(??_powf+3)& (0+255),w,b
 10298   00293C  A0D8               	btfss	status,0,c
 10299   00293E  EFA3  F014         	goto	u7471
 10300   002942  EFA5  F014         	goto	u7470
 10301   002946                     u7471:
 10302   002946  EFAF  F014         	goto	l7367
 10303   00294A                     u7470:
 10304   00294A                     
 10305                           ; BSR set to: 0
 10306   00294A  0E00               	movlw	0
 10307   00294C  6FDA               	movwf	?_powf& (0+255),b
 10308   00294E  0E00               	movlw	0
 10309   002950  6FDB               	movwf	(?_powf+1)& (0+255),b
 10310   002952  0E00               	movlw	0
 10311   002954  6FDC               	movwf	(?_powf+2)& (0+255),b
 10312   002956  0E00               	movlw	0
 10313   002958  6FDD               	movwf	(?_powf+3)& (0+255),b
 10314   00295A  EF80  F019         	goto	l1374
 10315   00295E                     l7367:
 10316                           
 10317                           ; BSR set to: 0
 10318   00295E  0E16               	movlw	22
 10319   002960  0101               	movlb	1	; () banked
 10320   002962  19AA               	xorwf	(powf@j+2)& (0+255),w,b
 10321   002964  E109               	bnz	u7481
 10322   002966  0EC3               	movlw	195
 10323   002968  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 10324   00296A  11A8               	iorwf	powf@j& (0+255),w,b
 10325   00296C  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 10326   00296E  A4D8               	btfss	status,2,c
 10327   002970  EFBC  F014         	goto	u7481
 10328   002974  EFBE  F014         	goto	u7480
 10329   002978                     u7481:
 10330   002978  EFF4  F014         	goto	l7375
 10331   00297C                     u7480:
 10332   00297C                     
 10333                           ; BSR set to: 1
 10334   00297C  C1A0  F048         	movff	powf@p_h,___flsub@a
 10335   002980  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 10336   002984  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 10337   002988  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 10338   00298C  C1B4  F044         	movff	powf@z,___flsub@b
 10339   002990  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10340   002994  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10341   002998  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10342   00299C  EC7A  F039         	call	___flsub	;wreg free
 10343   0029A0  C044  F04C         	movff	?___flsub,___flge@ff1
 10344   0029A4  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
 10345   0029A8  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
 10346   0029AC  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
 10347   0029B0  C16C  F050         	movff	powf@p_l,___flge@ff2
 10348   0029B4  C16D  F051         	movff	powf@p_l+1,___flge@ff2+1
 10349   0029B8  C16E  F052         	movff	powf@p_l+2,___flge@ff2+2
 10350   0029BC  C16F  F053         	movff	powf@p_l+3,___flge@ff2+3
 10351   0029C0  EC9D  F032         	call	___flge	;wreg free
 10352   0029C4  A0D8               	btfss	status,0,c
 10353   0029C6  EFE7  F014         	goto	u7491
 10354   0029CA  EFE9  F014         	goto	u7490
 10355   0029CE                     u7491:
 10356   0029CE  EFF4  F014         	goto	l7375
 10357   0029D2                     u7490:
 10358   0029D2  0E00               	movlw	0
 10359   0029D4  0100               	movlb	0	; () banked
 10360   0029D6  6FDA               	movwf	?_powf& (0+255),b
 10361   0029D8  0E00               	movlw	0
 10362   0029DA  6FDB               	movwf	(?_powf+1)& (0+255),b
 10363   0029DC  0E00               	movlw	0
 10364   0029DE  6FDC               	movwf	(?_powf+2)& (0+255),b
 10365   0029E0  0E00               	movlw	0
 10366   0029E2  6FDD               	movwf	(?_powf+3)& (0+255),b
 10367   0029E4  EF80  F019         	goto	l1374
 10368   0029E8                     l7375:
 10369   0029E8  0EFF               	movlw	255
 10370   0029EA  0101               	movlb	1	; () banked
 10371   0029EC  15A8               	andwf	powf@j& (0+255),w,b
 10372   0029EE  6F28               	movwf	powf@i& (0+255),b
 10373   0029F0  0EFF               	movlw	255
 10374   0029F2  15A9               	andwf	(powf@j+1)& (0+255),w,b
 10375   0029F4  6F29               	movwf	(powf@i+1)& (0+255),b
 10376   0029F6  0EFF               	movlw	255
 10377   0029F8  15AA               	andwf	(powf@j+2)& (0+255),w,b
 10378   0029FA  6F2A               	movwf	(powf@i+2)& (0+255),b
 10379   0029FC  0E7F               	movlw	127
 10380   0029FE  15AB               	andwf	(powf@j+3)& (0+255),w,b
 10381   002A00  6F2B               	movwf	(powf@i+3)& (0+255),b
 10382   002A02  0E17               	movlw	23
 10383   002A04  0100               	movlb	0	; () banked
 10384   002A06  6FE2               	movwf	??_powf& (0+255),b
 10385   002A08  C128  F0E3         	movff	powf@i,??_powf+1
 10386   002A0C  C129  F0E4         	movff	powf@i+1,??_powf+2
 10387   002A10  C12A  F0E5         	movff	powf@i+2,??_powf+3
 10388   002A14  C12B  F0E6         	movff	powf@i+3,??_powf+4
 10389   002A18                     u7505:
 10390   002A18  67E2               	tstfsz	??_powf& (0+255),b
 10391   002A1A  EF11  F015         	goto	u7506
 10392   002A1E  EF19  F015         	goto	u7507
 10393   002A22                     u7506:
 10394   002A22  35E6               	rlcf	(??_powf+4)& (0+255),w,b
 10395   002A24  33E6               	rrcf	(??_powf+4)& (0+255),f,b
 10396   002A26  33E5               	rrcf	(??_powf+3)& (0+255),f,b
 10397   002A28  33E4               	rrcf	(??_powf+2)& (0+255),f,b
 10398   002A2A  33E3               	rrcf	(??_powf+1)& (0+255),f,b
 10399   002A2C  2FE2               	decfsz	??_powf& (0+255),f,b
 10400   002A2E  EF0C  F015         	goto	u7505
 10401   002A32                     u7507:
 10402   002A32  0E81               	movlw	129
 10403   002A34  0100               	movlb	0	; () banked
 10404   002A36  25E3               	addwf	(??_powf+1)& (0+255),w,b
 10405   002A38  0101               	movlb	1	; () banked
 10406   002A3A  6FA4               	movwf	powf@k& (0+255),b
 10407   002A3C  0EFF               	movlw	255
 10408   002A3E  0100               	movlb	0	; () banked
 10409   002A40  21E4               	addwfc	(??_powf+2)& (0+255),w,b
 10410   002A42  0101               	movlb	1	; () banked
 10411   002A44  6FA5               	movwf	(powf@k+1)& (0+255),b
 10412   002A46  0EFF               	movlw	255
 10413   002A48  0100               	movlb	0	; () banked
 10414   002A4A  21E5               	addwfc	(??_powf+3)& (0+255),w,b
 10415   002A4C  0101               	movlb	1	; () banked
 10416   002A4E  6FA6               	movwf	(powf@k+2)& (0+255),b
 10417   002A50  0EFF               	movlw	255
 10418   002A52  0100               	movlb	0	; () banked
 10419   002A54  21E6               	addwfc	(??_powf+4)& (0+255),w,b
 10420   002A56  0101               	movlb	1	; () banked
 10421   002A58  6FA7               	movwf	(powf@k+3)& (0+255),b
 10422   002A5A                     
 10423                           ; BSR set to: 1
 10424   002A5A  0E00               	movlw	0
 10425   002A5C  6F88               	movwf	powf@n& (0+255),b
 10426   002A5E  0E00               	movlw	0
 10427   002A60  6F89               	movwf	(powf@n+1)& (0+255),b
 10428   002A62  0E00               	movlw	0
 10429   002A64  6F8A               	movwf	(powf@n+2)& (0+255),b
 10430   002A66  0E00               	movlw	0
 10431   002A68  6F8B               	movwf	(powf@n+3)& (0+255),b
 10432   002A6A                     
 10433                           ; BSR set to: 1
 10434   002A6A  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
 10435   002A6C  EF44  F015         	goto	u7511
 10436   002A70  0528               	decf	powf@i& (0+255),w,b
 10437   002A72  0E00               	movlw	0
 10438   002A74  5929               	subwfb	(powf@i+1)& (0+255),w,b
 10439   002A76  0E00               	movlw	0
 10440   002A78  592A               	subwfb	(powf@i+2)& (0+255),w,b
 10441   002A7A  0E3F               	movlw	63
 10442   002A7C  592B               	subwfb	(powf@i+3)& (0+255),w,b
 10443   002A7E  A0D8               	btfss	status,0,c
 10444   002A80  EF44  F015         	goto	u7511
 10445   002A84  EF46  F015         	goto	u7510
 10446   002A88                     u7511:
 10447   002A88  EF42  F016         	goto	l7387
 10448   002A8C                     u7510:
 10449   002A8C                     
 10450                           ; BSR set to: 1
 10451   002A8C  C1A4  F0E2         	movff	powf@k,??_powf
 10452   002A90  0E01               	movlw	1
 10453   002A92  0100               	movlb	0	; () banked
 10454   002A94  27E2               	addwf	??_powf& (0+255),f,b
 10455   002A96  0E00               	movlw	0
 10456   002A98  6FE3               	movwf	(??_powf+1)& (0+255),b
 10457   002A9A  0E00               	movlw	0
 10458   002A9C  6FE4               	movwf	(??_powf+2)& (0+255),b
 10459   002A9E  0E80               	movlw	128
 10460   002AA0  6FE5               	movwf	(??_powf+3)& (0+255),b
 10461   002AA2  0E00               	movlw	0
 10462   002AA4  6FE6               	movwf	(??_powf+4)& (0+255),b
 10463   002AA6                     u7525:
 10464   002AA6  67E2               	tstfsz	??_powf& (0+255),b
 10465   002AA8  EF58  F015         	goto	u7526
 10466   002AAC  EF60  F015         	goto	u7527
 10467   002AB0                     u7526:
 10468   002AB0  35E6               	rlcf	(??_powf+4)& (0+255),w,b
 10469   002AB2  33E6               	rrcf	(??_powf+4)& (0+255),f,b
 10470   002AB4  33E5               	rrcf	(??_powf+3)& (0+255),f,b
 10471   002AB6  33E4               	rrcf	(??_powf+2)& (0+255),f,b
 10472   002AB8  33E3               	rrcf	(??_powf+1)& (0+255),f,b
 10473   002ABA  2FE2               	decfsz	??_powf& (0+255),f,b
 10474   002ABC  EF53  F015         	goto	u7525
 10475   002AC0                     u7527:
 10476   002AC0  0101               	movlb	1	; () banked
 10477   002AC2  51A8               	movf	powf@j& (0+255),w,b
 10478   002AC4  0100               	movlb	0	; () banked
 10479   002AC6  25E3               	addwf	(??_powf+1)& (0+255),w,b
 10480   002AC8  0101               	movlb	1	; () banked
 10481   002ACA  6F88               	movwf	powf@n& (0+255),b
 10482   002ACC  51A9               	movf	(powf@j+1)& (0+255),w,b
 10483   002ACE  0100               	movlb	0	; () banked
 10484   002AD0  21E4               	addwfc	(??_powf+2)& (0+255),w,b
 10485   002AD2  0101               	movlb	1	; () banked
 10486   002AD4  6F89               	movwf	(powf@n+1)& (0+255),b
 10487   002AD6  51AA               	movf	(powf@j+2)& (0+255),w,b
 10488   002AD8  0100               	movlb	0	; () banked
 10489   002ADA  21E5               	addwfc	(??_powf+3)& (0+255),w,b
 10490   002ADC  0101               	movlb	1	; () banked
 10491   002ADE  6F8A               	movwf	(powf@n+2)& (0+255),b
 10492   002AE0  51AB               	movf	(powf@j+3)& (0+255),w,b
 10493   002AE2  0100               	movlb	0	; () banked
 10494   002AE4  21E6               	addwfc	(??_powf+4)& (0+255),w,b
 10495   002AE6  0101               	movlb	1	; () banked
 10496   002AE8  6F8B               	movwf	(powf@n+3)& (0+255),b
 10497   002AEA  0E81               	movlw	129
 10498   002AEC  0100               	movlb	0	; () banked
 10499   002AEE  6FE2               	movwf	??_powf& (0+255),b
 10500   002AF0  0EFF               	movlw	255
 10501   002AF2  6FE3               	movwf	(??_powf+1)& (0+255),b
 10502   002AF4  0EFF               	movlw	255
 10503   002AF6  6FE4               	movwf	(??_powf+2)& (0+255),b
 10504   002AF8  0EFF               	movlw	255
 10505   002AFA  6FE5               	movwf	(??_powf+3)& (0+255),b
 10506   002AFC  0E17               	movlw	23
 10507   002AFE  6FE6               	movwf	(??_powf+4)& (0+255),b
 10508   002B00  C188  F0E7         	movff	powf@n,??_powf+5
 10509   002B04  C189  F0E8         	movff	powf@n+1,??_powf+6
 10510   002B08  C18A  F0E9         	movff	powf@n+2,??_powf+7
 10511   002B0C  C18B  F0EA         	movff	powf@n+3,??_powf+8
 10512   002B10                     u7535:
 10513   002B10  67E6               	tstfsz	(??_powf+4)& (0+255),b
 10514   002B12  EF8D  F015         	goto	u7536
 10515   002B16  EF95  F015         	goto	u7537
 10516   002B1A                     u7536:
 10517   002B1A  35EA               	rlcf	(??_powf+8)& (0+255),w,b
 10518   002B1C  33EA               	rrcf	(??_powf+8)& (0+255),f,b
 10519   002B1E  33E9               	rrcf	(??_powf+7)& (0+255),f,b
 10520   002B20  33E8               	rrcf	(??_powf+6)& (0+255),f,b
 10521   002B22  33E7               	rrcf	(??_powf+5)& (0+255),f,b
 10522   002B24  2FE6               	decfsz	(??_powf+4)& (0+255),f,b
 10523   002B26  EF88  F015         	goto	u7535
 10524   002B2A                     u7537:
 10525   002B2A  0100               	movlb	0	; () banked
 10526   002B2C  51E7               	movf	(??_powf+5)& (0+255),w,b
 10527   002B2E  25E2               	addwf	??_powf& (0+255),w,b
 10528   002B30  0101               	movlb	1	; () banked
 10529   002B32  6FA4               	movwf	powf@k& (0+255),b
 10530   002B34  0E00               	movlw	0
 10531   002B36  0100               	movlb	0	; () banked
 10532   002B38  21E3               	addwfc	(??_powf+1)& (0+255),w,b
 10533   002B3A  0101               	movlb	1	; () banked
 10534   002B3C  6FA5               	movwf	(powf@k+1)& (0+255),b
 10535   002B3E  0E00               	movlw	0
 10536   002B40  0100               	movlb	0	; () banked
 10537   002B42  21E4               	addwfc	(??_powf+2)& (0+255),w,b
 10538   002B44  0101               	movlb	1	; () banked
 10539   002B46  6FA6               	movwf	(powf@k+2)& (0+255),b
 10540   002B48  0E00               	movlw	0
 10541   002B4A  0100               	movlb	0	; () banked
 10542   002B4C  21E5               	addwfc	(??_powf+3)& (0+255),w,b
 10543   002B4E  0101               	movlb	1	; () banked
 10544   002B50  6FA7               	movwf	(powf@k+3)& (0+255),b
 10545   002B52  C1A4  F0E2         	movff	powf@k,??_powf
 10546   002B56  0EFF               	movlw	255
 10547   002B58  0100               	movlb	0	; () banked
 10548   002B5A  6FE3               	movwf	(??_powf+1)& (0+255),b
 10549   002B5C  0EFF               	movlw	255
 10550   002B5E  6FE4               	movwf	(??_powf+2)& (0+255),b
 10551   002B60  0E7F               	movlw	127
 10552   002B62  6FE5               	movwf	(??_powf+3)& (0+255),b
 10553   002B64  0E00               	movlw	0
 10554   002B66  6FE6               	movwf	(??_powf+4)& (0+255),b
 10555   002B68                     u7545:
 10556   002B68  67E2               	tstfsz	??_powf& (0+255),b
 10557   002B6A  EFB9  F015         	goto	u7546
 10558   002B6E  EFC1  F015         	goto	u7547
 10559   002B72                     u7546:
 10560   002B72  35E6               	rlcf	(??_powf+4)& (0+255),w,b
 10561   002B74  33E6               	rrcf	(??_powf+4)& (0+255),f,b
 10562   002B76  33E5               	rrcf	(??_powf+3)& (0+255),f,b
 10563   002B78  33E4               	rrcf	(??_powf+2)& (0+255),f,b
 10564   002B7A  33E3               	rrcf	(??_powf+1)& (0+255),f,b
 10565   002B7C  2FE2               	decfsz	??_powf& (0+255),f,b
 10566   002B7E  EFB4  F015         	goto	u7545
 10567   002B82                     u7547:
 10568   002B82  0100               	movlb	0	; () banked
 10569   002B84  1DE3               	comf	(??_powf+1)& (0+255),w,b
 10570   002B86  6FE7               	movwf	(??_powf+5)& (0+255),b
 10571   002B88  1DE4               	comf	(??_powf+2)& (0+255),w,b
 10572   002B8A  6FE8               	movwf	(??_powf+6)& (0+255),b
 10573   002B8C  1DE5               	comf	(??_powf+3)& (0+255),w,b
 10574   002B8E  6FE9               	movwf	(??_powf+7)& (0+255),b
 10575   002B90  1DE6               	comf	(??_powf+4)& (0+255),w,b
 10576   002B92  6FEA               	movwf	(??_powf+8)& (0+255),b
 10577   002B94  0101               	movlb	1	; () banked
 10578   002B96  5188               	movf	powf@n& (0+255),w,b
 10579   002B98  0100               	movlb	0	; () banked
 10580   002B9A  15E7               	andwf	(??_powf+5)& (0+255),w,b
 10581   002B9C  0101               	movlb	1	; () banked
 10582   002B9E  6FB0               	movwf	powf@t& (0+255),b
 10583   002BA0  5189               	movf	(powf@n+1)& (0+255),w,b
 10584   002BA2  0100               	movlb	0	; () banked
 10585   002BA4  15E8               	andwf	(??_powf+6)& (0+255),w,b
 10586   002BA6  0101               	movlb	1	; () banked
 10587   002BA8  6FB1               	movwf	(powf@t+1)& (0+255),b
 10588   002BAA  518A               	movf	(powf@n+2)& (0+255),w,b
 10589   002BAC  0100               	movlb	0	; () banked
 10590   002BAE  15E9               	andwf	(??_powf+7)& (0+255),w,b
 10591   002BB0  0101               	movlb	1	; () banked
 10592   002BB2  6FB2               	movwf	(powf@t+2)& (0+255),b
 10593   002BB4  518B               	movf	(powf@n+3)& (0+255),w,b
 10594   002BB6  0100               	movlb	0	; () banked
 10595   002BB8  15EA               	andwf	(??_powf+8)& (0+255),w,b
 10596   002BBA  0101               	movlb	1	; () banked
 10597   002BBC  6FB3               	movwf	(powf@t+3)& (0+255),b
 10598   002BBE  51A4               	movf	powf@k& (0+255),w,b
 10599   002BC0  0817               	sublw	23
 10600   002BC2  0100               	movlb	0	; () banked
 10601   002BC4  6FE2               	movwf	??_powf& (0+255),b
 10602   002BC6  0EFF               	movlw	255
 10603   002BC8  0101               	movlb	1	; () banked
 10604   002BCA  1588               	andwf	powf@n& (0+255),w,b
 10605   002BCC  0100               	movlb	0	; () banked
 10606   002BCE  6FE3               	movwf	(??_powf+1)& (0+255),b
 10607   002BD0  0EFF               	movlw	255
 10608   002BD2  0101               	movlb	1	; () banked
 10609   002BD4  1589               	andwf	(powf@n+1)& (0+255),w,b
 10610   002BD6  0100               	movlb	0	; () banked
 10611   002BD8  6FE4               	movwf	(??_powf+2)& (0+255),b
 10612   002BDA  0E7F               	movlw	127
 10613   002BDC  0101               	movlb	1	; () banked
 10614   002BDE  158A               	andwf	(powf@n+2)& (0+255),w,b
 10615   002BE0  0100               	movlb	0	; () banked
 10616   002BE2  6FE5               	movwf	(??_powf+3)& (0+255),b
 10617   002BE4  0E00               	movlw	0
 10618   002BE6  0101               	movlb	1	; () banked
 10619   002BE8  158B               	andwf	(powf@n+3)& (0+255),w,b
 10620   002BEA  0100               	movlb	0	; () banked
 10621   002BEC  6FE6               	movwf	(??_powf+4)& (0+255),b
 10622   002BEE  0E00               	movlw	0
 10623   002BF0  11E3               	iorwf	(??_powf+1)& (0+255),w,b
 10624   002BF2  6FE7               	movwf	(??_powf+5)& (0+255),b
 10625   002BF4  0E00               	movlw	0
 10626   002BF6  11E4               	iorwf	(??_powf+2)& (0+255),w,b
 10627   002BF8  6FE8               	movwf	(??_powf+6)& (0+255),b
 10628   002BFA  0E80               	movlw	128
 10629   002BFC  11E5               	iorwf	(??_powf+3)& (0+255),w,b
 10630   002BFE  6FE9               	movwf	(??_powf+7)& (0+255),b
 10631   002C00  0E00               	movlw	0
 10632   002C02  11E6               	iorwf	(??_powf+4)& (0+255),w,b
 10633   002C04  6FEA               	movwf	(??_powf+8)& (0+255),b
 10634   002C06                     u7555:
 10635   002C06  67E2               	tstfsz	??_powf& (0+255),b
 10636   002C08  EF08  F016         	goto	u7556
 10637   002C0C  EF10  F016         	goto	u7557
 10638   002C10                     u7556:
 10639   002C10  35EA               	rlcf	(??_powf+8)& (0+255),w,b
 10640   002C12  33EA               	rrcf	(??_powf+8)& (0+255),f,b
 10641   002C14  33E9               	rrcf	(??_powf+7)& (0+255),f,b
 10642   002C16  33E8               	rrcf	(??_powf+6)& (0+255),f,b
 10643   002C18  33E7               	rrcf	(??_powf+5)& (0+255),f,b
 10644   002C1A  2FE2               	decfsz	??_powf& (0+255),f,b
 10645   002C1C  EF03  F016         	goto	u7555
 10646   002C20                     u7557:
 10647   002C20  C0E7  F188         	movff	??_powf+5,powf@n
 10648   002C24  C0E8  F189         	movff	??_powf+6,powf@n+1
 10649   002C28  C0E9  F18A         	movff	??_powf+7,powf@n+2
 10650   002C2C  C0EA  F18B         	movff	??_powf+8,powf@n+3
 10651   002C30  0101               	movlb	1	; () banked
 10652   002C32  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 10653   002C34  EF20  F016         	goto	u7560
 10654   002C38  EF1E  F016         	goto	u7561
 10655   002C3C                     u7561:
 10656   002C3C  EF28  F016         	goto	l7385
 10657   002C40                     u7560:
 10658   002C40                     
 10659                           ; BSR set to: 1
 10660   002C40  1F8B               	comf	(powf@n+3)& (0+255),f,b
 10661   002C42  1F8A               	comf	(powf@n+2)& (0+255),f,b
 10662   002C44  1F89               	comf	(powf@n+1)& (0+255),f,b
 10663   002C46  6D88               	negf	powf@n& (0+255),b
 10664   002C48  0E00               	movlw	0
 10665   002C4A  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10666   002C4C  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10667   002C4E  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10668   002C50                     l7385:
 10669                           
 10670                           ; BSR set to: 1
 10671   002C50  C1A0  F044         	movff	powf@p_h,___flsub@b
 10672   002C54  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
 10673   002C58  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
 10674   002C5C  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
 10675   002C60  C1B0  F048         	movff	powf@t,___flsub@a
 10676   002C64  C1B1  F049         	movff	powf@t+1,___flsub@a+1
 10677   002C68  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
 10678   002C6C  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
 10679   002C70  EC7A  F039         	call	___flsub	;wreg free
 10680   002C74  C044  F1A0         	movff	?___flsub,powf@p_h
 10681   002C78  C045  F1A1         	movff	?___flsub+1,powf@p_h+1
 10682   002C7C  C046  F1A2         	movff	?___flsub+2,powf@p_h+2
 10683   002C80  C047  F1A3         	movff	?___flsub+3,powf@p_h+3
 10684   002C84                     l7387:
 10685   002C84  C1A0  F002         	movff	powf@p_h,___fladd@b
 10686   002C88  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
 10687   002C8C  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
 10688   002C90  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
 10689   002C94  C16C  F006         	movff	powf@p_l,___fladd@a
 10690   002C98  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
 10691   002C9C  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
 10692   002CA0  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
 10693   002CA4  EC5A  F026         	call	___fladd	;wreg free
 10694   002CA8  C002  F1B0         	movff	?___fladd,powf@t
 10695   002CAC  C003  F1B1         	movff	?___fladd+1,powf@t+1
 10696   002CB0  C004  F1B2         	movff	?___fladd+2,powf@t+2
 10697   002CB4  C005  F1B3         	movff	?___fladd+3,powf@t+3
 10698   002CB8  C1B0  F198         	movff	powf@t,powf@is
 10699   002CBC  C1B1  F199         	movff	powf@t+1,powf@is+1
 10700   002CC0  C1B2  F19A         	movff	powf@t+2,powf@is+2
 10701   002CC4  C1B3  F19B         	movff	powf@t+3,powf@is+3
 10702   002CC8  0E00               	movlw	0
 10703   002CCA  0101               	movlb	1	; () banked
 10704   002CCC  1598               	andwf	powf@is& (0+255),w,b
 10705   002CCE  6FB0               	movwf	powf@t& (0+255),b
 10706   002CD0  0E80               	movlw	128
 10707   002CD2  1599               	andwf	(powf@is+1)& (0+255),w,b
 10708   002CD4  6FB1               	movwf	(powf@t+1)& (0+255),b
 10709   002CD6  0EFF               	movlw	255
 10710   002CD8  159A               	andwf	(powf@is+2)& (0+255),w,b
 10711   002CDA  6FB2               	movwf	(powf@t+2)& (0+255),b
 10712   002CDC  0EFF               	movlw	255
 10713   002CDE  159B               	andwf	(powf@is+3)& (0+255),w,b
 10714   002CE0  6FB3               	movwf	(powf@t+3)& (0+255),b
 10715   002CE2                     
 10716                           ; BSR set to: 1
 10717   002CE2  C1B0  F012         	movff	powf@t,___flmul@b
 10718   002CE6  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10719   002CEA  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10720   002CEE  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10721   002CF2  0E00               	movlw	0
 10722   002CF4  6E16               	movwf	___flmul@a^0,c
 10723   002CF6  0E72               	movlw	114
 10724   002CF8  6E17               	movwf	(___flmul@a+1)^0,c
 10725   002CFA  0E31               	movlw	49
 10726   002CFC  6E18               	movwf	(___flmul@a+2)^0,c
 10727   002CFE  0E3F               	movlw	63
 10728   002D00  6E19               	movwf	(___flmul@a+3)^0,c
 10729   002D02  ECBA  F028         	call	___flmul	;wreg free
 10730   002D06  C012  F17C         	movff	?___flmul,powf@u
 10731   002D0A  C013  F17D         	movff	?___flmul+1,powf@u+1
 10732   002D0E  C014  F17E         	movff	?___flmul+2,powf@u+2
 10733   002D12  C015  F17F         	movff	?___flmul+3,powf@u+3
 10734   002D16  C1A0  F048         	movff	powf@p_h,___flsub@a
 10735   002D1A  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 10736   002D1E  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 10737   002D22  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 10738   002D26  C1B0  F044         	movff	powf@t,___flsub@b
 10739   002D2A  C1B1  F045         	movff	powf@t+1,___flsub@b+1
 10740   002D2E  C1B2  F046         	movff	powf@t+2,___flsub@b+2
 10741   002D32  C1B3  F047         	movff	powf@t+3,___flsub@b+3
 10742   002D36  EC7A  F039         	call	___flsub	;wreg free
 10743   002D3A  C044  F19C         	movff	?___flsub,_powf$3076
 10744   002D3E  C045  F19D         	movff	?___flsub+1,_powf$3076+1
 10745   002D42  C046  F19E         	movff	?___flsub+2,_powf$3076+2
 10746   002D46  C047  F19F         	movff	?___flsub+3,_powf$3076+3
 10747   002D4A  0E18               	movlw	24
 10748   002D4C  6E16               	movwf	___flmul@a^0,c
 10749   002D4E  0E72               	movlw	114
 10750   002D50  6E17               	movwf	(___flmul@a+1)^0,c
 10751   002D52  0E31               	movlw	49
 10752   002D54  6E18               	movwf	(___flmul@a+2)^0,c
 10753   002D56  0E3F               	movlw	63
 10754   002D58  6E19               	movwf	(___flmul@a+3)^0,c
 10755   002D5A  C19C  F048         	movff	_powf$3076,___flsub@a
 10756   002D5E  C19D  F049         	movff	_powf$3076+1,___flsub@a+1
 10757   002D62  C19E  F04A         	movff	_powf$3076+2,___flsub@a+2
 10758   002D66  C19F  F04B         	movff	_powf$3076+3,___flsub@a+3
 10759   002D6A  C16C  F044         	movff	powf@p_l,___flsub@b
 10760   002D6E  C16D  F045         	movff	powf@p_l+1,___flsub@b+1
 10761   002D72  C16E  F046         	movff	powf@p_l+2,___flsub@b+2
 10762   002D76  C16F  F047         	movff	powf@p_l+3,___flsub@b+3
 10763   002D7A  EC7A  F039         	call	___flsub	;wreg free
 10764   002D7E  C044  F012         	movff	?___flsub,___flmul@b
 10765   002D82  C045  F013         	movff	?___flsub+1,___flmul@b+1
 10766   002D86  C046  F014         	movff	?___flsub+2,___flmul@b+2
 10767   002D8A  C047  F015         	movff	?___flsub+3,___flmul@b+3
 10768   002D8E  ECBA  F028         	call	___flmul	;wreg free
 10769   002D92  C012  F114         	movff	?___flmul,_powf$3086
 10770   002D96  C013  F115         	movff	?___flmul+1,_powf$3086+1
 10771   002D9A  C014  F116         	movff	?___flmul+2,_powf$3086+2
 10772   002D9E  C015  F117         	movff	?___flmul+3,_powf$3086+3
 10773   002DA2  C114  F002         	movff	_powf$3086,___fladd@b
 10774   002DA6  C115  F003         	movff	_powf$3086+1,___fladd@b+1
 10775   002DAA  C116  F004         	movff	_powf$3086+2,___fladd@b+2
 10776   002DAE  C117  F005         	movff	_powf$3086+3,___fladd@b+3
 10777   002DB2  0E8C               	movlw	140
 10778   002DB4  6E16               	movwf	___flmul@a^0,c
 10779   002DB6  0EBE               	movlw	190
 10780   002DB8  6E17               	movwf	(___flmul@a+1)^0,c
 10781   002DBA  0EBF               	movlw	191
 10782   002DBC  6E18               	movwf	(___flmul@a+2)^0,c
 10783   002DBE  0E35               	movlw	53
 10784   002DC0  6E19               	movwf	(___flmul@a+3)^0,c
 10785   002DC2  C1B0  F012         	movff	powf@t,___flmul@b
 10786   002DC6  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10787   002DCA  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10788   002DCE  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10789   002DD2  ECBA  F028         	call	___flmul	;wreg free
 10790   002DD6  C012  F006         	movff	?___flmul,___fladd@a
 10791   002DDA  C013  F007         	movff	?___flmul+1,___fladd@a+1
 10792   002DDE  C014  F008         	movff	?___flmul+2,___fladd@a+2
 10793   002DE2  C015  F009         	movff	?___flmul+3,___fladd@a+3
 10794   002DE6  EC5A  F026         	call	___fladd	;wreg free
 10795   002DEA  C002  F180         	movff	?___fladd,powf@v
 10796   002DEE  C003  F181         	movff	?___fladd+1,powf@v+1
 10797   002DF2  C004  F182         	movff	?___fladd+2,powf@v+2
 10798   002DF6  C005  F183         	movff	?___fladd+3,powf@v+3
 10799   002DFA  C17C  F002         	movff	powf@u,___fladd@b
 10800   002DFE  C17D  F003         	movff	powf@u+1,___fladd@b+1
 10801   002E02  C17E  F004         	movff	powf@u+2,___fladd@b+2
 10802   002E06  C17F  F005         	movff	powf@u+3,___fladd@b+3
 10803   002E0A  C180  F006         	movff	powf@v,___fladd@a
 10804   002E0E  C181  F007         	movff	powf@v+1,___fladd@a+1
 10805   002E12  C182  F008         	movff	powf@v+2,___fladd@a+2
 10806   002E16  C183  F009         	movff	powf@v+3,___fladd@a+3
 10807   002E1A  EC5A  F026         	call	___fladd	;wreg free
 10808   002E1E  C002  F1B4         	movff	?___fladd,powf@z
 10809   002E22  C003  F1B5         	movff	?___fladd+1,powf@z+1
 10810   002E26  C004  F1B6         	movff	?___fladd+2,powf@z+2
 10811   002E2A  C005  F1B7         	movff	?___fladd+3,powf@z+3
 10812   002E2E  C17C  F048         	movff	powf@u,___flsub@a
 10813   002E32  C17D  F049         	movff	powf@u+1,___flsub@a+1
 10814   002E36  C17E  F04A         	movff	powf@u+2,___flsub@a+2
 10815   002E3A  C17F  F04B         	movff	powf@u+3,___flsub@a+3
 10816   002E3E  C1B4  F044         	movff	powf@z,___flsub@b
 10817   002E42  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10818   002E46  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10819   002E4A  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10820   002E4E  EC7A  F039         	call	___flsub	;wreg free
 10821   002E52  C044  F19C         	movff	?___flsub,_powf$3076
 10822   002E56  C045  F19D         	movff	?___flsub+1,_powf$3076+1
 10823   002E5A  C046  F19E         	movff	?___flsub+2,_powf$3076+2
 10824   002E5E  C047  F19F         	movff	?___flsub+3,_powf$3076+3
 10825   002E62  C180  F044         	movff	powf@v,___flsub@b
 10826   002E66  C181  F045         	movff	powf@v+1,___flsub@b+1
 10827   002E6A  C182  F046         	movff	powf@v+2,___flsub@b+2
 10828   002E6E  C183  F047         	movff	powf@v+3,___flsub@b+3
 10829   002E72  C19C  F048         	movff	_powf$3076,___flsub@a
 10830   002E76  C19D  F049         	movff	_powf$3076+1,___flsub@a+1
 10831   002E7A  C19E  F04A         	movff	_powf$3076+2,___flsub@a+2
 10832   002E7E  C19F  F04B         	movff	_powf$3076+3,___flsub@a+3
 10833   002E82  EC7A  F039         	call	___flsub	;wreg free
 10834   002E86  C044  F144         	movff	?___flsub,powf@w
 10835   002E8A  C045  F145         	movff	?___flsub+1,powf@w+1
 10836   002E8E  C046  F146         	movff	?___flsub+2,powf@w+2
 10837   002E92  C047  F147         	movff	?___flsub+3,powf@w+3
 10838   002E96  C1B4  F012         	movff	powf@z,___flmul@b
 10839   002E9A  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 10840   002E9E  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 10841   002EA2  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 10842   002EA6  C1B4  F016         	movff	powf@z,___flmul@a
 10843   002EAA  C1B5  F017         	movff	powf@z+1,___flmul@a+1
 10844   002EAE  C1B6  F018         	movff	powf@z+2,___flmul@a+2
 10845   002EB2  C1B7  F019         	movff	powf@z+3,___flmul@a+3
 10846   002EB6  ECBA  F028         	call	___flmul	;wreg free
 10847   002EBA  C012  F1B0         	movff	?___flmul,powf@t
 10848   002EBE  C013  F1B1         	movff	?___flmul+1,powf@t+1
 10849   002EC2  C014  F1B2         	movff	?___flmul+2,powf@t+2
 10850   002EC6  C015  F1B3         	movff	?___flmul+3,powf@t+3
 10851   002ECA  0E0E               	movlw	14
 10852   002ECC  6E06               	movwf	___fladd@a^0,c
 10853   002ECE  0EEA               	movlw	234
 10854   002ED0  6E07               	movwf	(___fladd@a+1)^0,c
 10855   002ED2  0EDD               	movlw	221
 10856   002ED4  6E08               	movwf	(___fladd@a+2)^0,c
 10857   002ED6  0EB5               	movlw	181
 10858   002ED8  6E09               	movwf	(___fladd@a+3)^0,c
 10859   002EDA  0E4C               	movlw	76
 10860   002EDC  6E16               	movwf	___flmul@a^0,c
 10861   002EDE  0EBB               	movlw	187
 10862   002EE0  6E17               	movwf	(___flmul@a+1)^0,c
 10863   002EE2  0E31               	movlw	49
 10864   002EE4  6E18               	movwf	(___flmul@a+2)^0,c
 10865   002EE6  0E33               	movlw	51
 10866   002EE8  6E19               	movwf	(___flmul@a+3)^0,c
 10867   002EEA  C1B0  F012         	movff	powf@t,___flmul@b
 10868   002EEE  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10869   002EF2  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10870   002EF6  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10871   002EFA  ECBA  F028         	call	___flmul	;wreg free
 10872   002EFE  C012  F002         	movff	?___flmul,___fladd@b
 10873   002F02  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10874   002F06  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10875   002F0A  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10876   002F0E  EC5A  F026         	call	___fladd	;wreg free
 10877   002F12  C002  F148         	movff	?___fladd,_powf$3073
 10878   002F16  C003  F149         	movff	?___fladd+1,_powf$3073+1
 10879   002F1A  C004  F14A         	movff	?___fladd+2,_powf$3073+2
 10880   002F1E  C005  F14B         	movff	?___fladd+3,_powf$3073+3
 10881   002F22  0E55               	movlw	85
 10882   002F24  6E06               	movwf	___fladd@a^0,c
 10883   002F26  0EB3               	movlw	179
 10884   002F28  6E07               	movwf	(___fladd@a+1)^0,c
 10885   002F2A  0E8A               	movlw	138
 10886   002F2C  6E08               	movwf	(___fladd@a+2)^0,c
 10887   002F2E  0E38               	movlw	56
 10888   002F30  6E09               	movwf	(___fladd@a+3)^0,c
 10889   002F32  C1B0  F016         	movff	powf@t,___flmul@a
 10890   002F36  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10891   002F3A  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10892   002F3E  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10893   002F42  C148  F012         	movff	_powf$3073,___flmul@b
 10894   002F46  C149  F013         	movff	_powf$3073+1,___flmul@b+1
 10895   002F4A  C14A  F014         	movff	_powf$3073+2,___flmul@b+2
 10896   002F4E  C14B  F015         	movff	_powf$3073+3,___flmul@b+3
 10897   002F52  ECBA  F028         	call	___flmul	;wreg free
 10898   002F56  C012  F002         	movff	?___flmul,___fladd@b
 10899   002F5A  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10900   002F5E  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10901   002F62  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10902   002F66  EC5A  F026         	call	___fladd	;wreg free
 10903   002F6A  C002  F15C         	movff	?___fladd,_powf$3074
 10904   002F6E  C003  F15D         	movff	?___fladd+1,_powf$3074+1
 10905   002F72  C004  F15E         	movff	?___fladd+2,_powf$3074+2
 10906   002F76  C005  F15F         	movff	?___fladd+3,_powf$3074+3
 10907   002F7A  0E61               	movlw	97
 10908   002F7C  6E06               	movwf	___fladd@a^0,c
 10909   002F7E  0E0B               	movlw	11
 10910   002F80  6E07               	movwf	(___fladd@a+1)^0,c
 10911   002F82  0E36               	movlw	54
 10912   002F84  6E08               	movwf	(___fladd@a+2)^0,c
 10913   002F86  0EBB               	movlw	187
 10914   002F88  6E09               	movwf	(___fladd@a+3)^0,c
 10915   002F8A  C1B0  F016         	movff	powf@t,___flmul@a
 10916   002F8E  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10917   002F92  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10918   002F96  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10919   002F9A  C15C  F012         	movff	_powf$3074,___flmul@b
 10920   002F9E  C15D  F013         	movff	_powf$3074+1,___flmul@b+1
 10921   002FA2  C15E  F014         	movff	_powf$3074+2,___flmul@b+2
 10922   002FA6  C15F  F015         	movff	_powf$3074+3,___flmul@b+3
 10923   002FAA  ECBA  F028         	call	___flmul	;wreg free
 10924   002FAE  C012  F002         	movff	?___flmul,___fladd@b
 10925   002FB2  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10926   002FB6  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10927   002FBA  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10928   002FBE  EC5A  F026         	call	___fladd	;wreg free
 10929   002FC2  C002  F14C         	movff	?___fladd,_powf$3075
 10930   002FC6  C003  F14D         	movff	?___fladd+1,_powf$3075+1
 10931   002FCA  C004  F14E         	movff	?___fladd+2,_powf$3075+2
 10932   002FCE  C005  F14F         	movff	?___fladd+3,_powf$3075+3
 10933   002FD2  0EAB               	movlw	171
 10934   002FD4  6E06               	movwf	___fladd@a^0,c
 10935   002FD6  0EAA               	movlw	170
 10936   002FD8  6E07               	movwf	(___fladd@a+1)^0,c
 10937   002FDA  0E2A               	movlw	42
 10938   002FDC  6E08               	movwf	(___fladd@a+2)^0,c
 10939   002FDE  0E3E               	movlw	62
 10940   002FE0  6E09               	movwf	(___fladd@a+3)^0,c
 10941   002FE2  C1B0  F016         	movff	powf@t,___flmul@a
 10942   002FE6  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10943   002FEA  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10944   002FEE  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10945   002FF2  C14C  F012         	movff	_powf$3075,___flmul@b
 10946   002FF6  C14D  F013         	movff	_powf$3075+1,___flmul@b+1
 10947   002FFA  C14E  F014         	movff	_powf$3075+2,___flmul@b+2
 10948   002FFE  C14F  F015         	movff	_powf$3075+3,___flmul@b+3
 10949   003002  ECBA  F028         	call	___flmul	;wreg free
 10950   003006  C012  F002         	movff	?___flmul,___fladd@b
 10951   00300A  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10952   00300E  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10953   003012  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10954   003016  EC5A  F026         	call	___fladd	;wreg free
 10955   00301A  C002  F138         	movff	?___fladd,_powf$3077
 10956   00301E  C003  F139         	movff	?___fladd+1,_powf$3077+1
 10957   003022  C004  F13A         	movff	?___fladd+2,_powf$3077+2
 10958   003026  C005  F13B         	movff	?___fladd+3,_powf$3077+3
 10959   00302A  C1B4  F044         	movff	powf@z,___flsub@b
 10960   00302E  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10961   003032  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10962   003036  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10963   00303A  C1B0  F016         	movff	powf@t,___flmul@a
 10964   00303E  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10965   003042  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10966   003046  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10967   00304A  C138  F012         	movff	_powf$3077,___flmul@b
 10968   00304E  C139  F013         	movff	_powf$3077+1,___flmul@b+1
 10969   003052  C13A  F014         	movff	_powf$3077+2,___flmul@b+2
 10970   003056  C13B  F015         	movff	_powf$3077+3,___flmul@b+3
 10971   00305A  ECBA  F028         	call	___flmul	;wreg free
 10972   00305E  C012  F048         	movff	?___flmul,___flsub@a
 10973   003062  C013  F049         	movff	?___flmul+1,___flsub@a+1
 10974   003066  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 10975   00306A  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 10976   00306E  EC7A  F039         	call	___flsub	;wreg free
 10977   003072  C044  F18C         	movff	?___flsub,powf@t1
 10978   003076  C045  F18D         	movff	?___flsub+1,powf@t1+1
 10979   00307A  C046  F18E         	movff	?___flsub+2,powf@t1+2
 10980   00307E  C047  F18F         	movff	?___flsub+3,powf@t1+3
 10981   003082  0E00               	movlw	0
 10982   003084  6E06               	movwf	___fladd@a^0,c
 10983   003086  0E00               	movlw	0
 10984   003088  6E07               	movwf	(___fladd@a+1)^0,c
 10985   00308A  0E00               	movlw	0
 10986   00308C  6E08               	movwf	(___fladd@a+2)^0,c
 10987   00308E  0EC0               	movlw	192
 10988   003090  6E09               	movwf	(___fladd@a+3)^0,c
 10989   003092  C18C  F002         	movff	powf@t1,___fladd@b
 10990   003096  C18D  F003         	movff	powf@t1+1,___fladd@b+1
 10991   00309A  C18E  F004         	movff	powf@t1+2,___fladd@b+2
 10992   00309E  C18F  F005         	movff	powf@t1+3,___fladd@b+3
 10993   0030A2  EC5A  F026         	call	___fladd	;wreg free
 10994   0030A6  C002  F02F         	movff	?___fladd,___fldiv@a
 10995   0030AA  C003  F030         	movff	?___fladd+1,___fldiv@a+1
 10996   0030AE  C004  F031         	movff	?___fladd+2,___fldiv@a+2
 10997   0030B2  C005  F032         	movff	?___fladd+3,___fldiv@a+3
 10998   0030B6  C18C  F016         	movff	powf@t1,___flmul@a
 10999   0030BA  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 11000   0030BE  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 11001   0030C2  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 11002   0030C6  C1B4  F012         	movff	powf@z,___flmul@b
 11003   0030CA  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 11004   0030CE  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 11005   0030D2  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 11006   0030D6  ECBA  F028         	call	___flmul	;wreg free
 11007   0030DA  C012  F02B         	movff	?___flmul,___fldiv@b
 11008   0030DE  C013  F02C         	movff	?___flmul+1,___fldiv@b+1
 11009   0030E2  C014  F02D         	movff	?___flmul+2,___fldiv@b+2
 11010   0030E6  C015  F02E         	movff	?___flmul+3,___fldiv@b+3
 11011   0030EA  ECBE  F02C         	call	___fldiv	;wreg free
 11012   0030EE  C02B  F13C         	movff	?___fldiv,_powf$3081
 11013   0030F2  C02C  F13D         	movff	?___fldiv+1,_powf$3081+1
 11014   0030F6  C02D  F13E         	movff	?___fldiv+2,_powf$3081+2
 11015   0030FA  C02E  F13F         	movff	?___fldiv+3,_powf$3081+3
 11016   0030FE  C144  F006         	movff	powf@w,___fladd@a
 11017   003102  C145  F007         	movff	powf@w+1,___fladd@a+1
 11018   003106  C146  F008         	movff	powf@w+2,___fladd@a+2
 11019   00310A  C147  F009         	movff	powf@w+3,___fladd@a+3
 11020   00310E  C144  F016         	movff	powf@w,___flmul@a
 11021   003112  C145  F017         	movff	powf@w+1,___flmul@a+1
 11022   003116  C146  F018         	movff	powf@w+2,___flmul@a+2
 11023   00311A  C147  F019         	movff	powf@w+3,___flmul@a+3
 11024   00311E  C1B4  F012         	movff	powf@z,___flmul@b
 11025   003122  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 11026   003126  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 11027   00312A  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 11028   00312E  ECBA  F028         	call	___flmul	;wreg free
 11029   003132  C012  F002         	movff	?___flmul,___fladd@b
 11030   003136  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11031   00313A  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11032   00313E  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11033   003142  EC5A  F026         	call	___fladd	;wreg free
 11034   003146  C002  F118         	movff	?___fladd,_powf$3087
 11035   00314A  C003  F119         	movff	?___fladd+1,_powf$3087+1
 11036   00314E  C004  F11A         	movff	?___fladd+2,_powf$3087+2
 11037   003152  C005  F11B         	movff	?___fladd+3,_powf$3087+3
 11038   003156  C13C  F044         	movff	_powf$3081,___flsub@b
 11039   00315A  C13D  F045         	movff	_powf$3081+1,___flsub@b+1
 11040   00315E  C13E  F046         	movff	_powf$3081+2,___flsub@b+2
 11041   003162  C13F  F047         	movff	_powf$3081+3,___flsub@b+3
 11042   003166  C118  F048         	movff	_powf$3087,___flsub@a
 11043   00316A  C119  F049         	movff	_powf$3087+1,___flsub@a+1
 11044   00316E  C11A  F04A         	movff	_powf$3087+2,___flsub@a+2
 11045   003172  C11B  F04B         	movff	_powf$3087+3,___flsub@a+3
 11046   003176  EC7A  F039         	call	___flsub	;wreg free
 11047   00317A  C044  F150         	movff	?___flsub,powf@r
 11048   00317E  C045  F151         	movff	?___flsub+1,powf@r+1
 11049   003182  C046  F152         	movff	?___flsub+2,powf@r+2
 11050   003186  C047  F153         	movff	?___flsub+3,powf@r+3
 11051   00318A  C1B4  F048         	movff	powf@z,___flsub@a
 11052   00318E  C1B5  F049         	movff	powf@z+1,___flsub@a+1
 11053   003192  C1B6  F04A         	movff	powf@z+2,___flsub@a+2
 11054   003196  C1B7  F04B         	movff	powf@z+3,___flsub@a+3
 11055   00319A  C150  F044         	movff	powf@r,___flsub@b
 11056   00319E  C151  F045         	movff	powf@r+1,___flsub@b+1
 11057   0031A2  C152  F046         	movff	powf@r+2,___flsub@b+2
 11058   0031A6  C153  F047         	movff	powf@r+3,___flsub@b+3
 11059   0031AA  EC7A  F039         	call	___flsub	;wreg free
 11060   0031AE  C044  F19C         	movff	?___flsub,_powf$3076
 11061   0031B2  C045  F19D         	movff	?___flsub+1,_powf$3076+1
 11062   0031B6  C046  F19E         	movff	?___flsub+2,_powf$3076+2
 11063   0031BA  C047  F19F         	movff	?___flsub+3,_powf$3076+3
 11064   0031BE  0E00               	movlw	0
 11065   0031C0  6E44               	movwf	___flsub@b^0,c
 11066   0031C2  0E00               	movlw	0
 11067   0031C4  6E45               	movwf	(___flsub@b+1)^0,c
 11068   0031C6  0E80               	movlw	128
 11069   0031C8  6E46               	movwf	(___flsub@b+2)^0,c
 11070   0031CA  0E3F               	movlw	63
 11071   0031CC  6E47               	movwf	(___flsub@b+3)^0,c
 11072   0031CE  C19C  F048         	movff	_powf$3076,___flsub@a
 11073   0031D2  C19D  F049         	movff	_powf$3076+1,___flsub@a+1
 11074   0031D6  C19E  F04A         	movff	_powf$3076+2,___flsub@a+2
 11075   0031DA  C19F  F04B         	movff	_powf$3076+3,___flsub@a+3
 11076   0031DE  EC7A  F039         	call	___flsub	;wreg free
 11077   0031E2  C044  F1B4         	movff	?___flsub,powf@z
 11078   0031E6  C045  F1B5         	movff	?___flsub+1,powf@z+1
 11079   0031EA  C046  F1B6         	movff	?___flsub+2,powf@z+2
 11080   0031EE  C047  F1B7         	movff	?___flsub+3,powf@z+3
 11081   0031F2  C1B4  F1A8         	movff	powf@z,powf@j
 11082   0031F6  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 11083   0031FA  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 11084   0031FE  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 11085   003202  C188  F0E2         	movff	powf@n,??_powf
 11086   003206  C189  F0E3         	movff	powf@n+1,??_powf+1
 11087   00320A  C18A  F0E4         	movff	powf@n+2,??_powf+2
 11088   00320E  C18B  F0E5         	movff	powf@n+3,??_powf+3
 11089   003212  0E17               	movlw	23
 11090   003214                     u7575:
 11091   003214  90D8               	bcf	status,0,c
 11092   003216  0100               	movlb	0	; () banked
 11093   003218  37E2               	rlcf	??_powf& (0+255),f,b
 11094   00321A  37E3               	rlcf	(??_powf+1)& (0+255),f,b
 11095   00321C  37E4               	rlcf	(??_powf+2)& (0+255),f,b
 11096   00321E  37E5               	rlcf	(??_powf+3)& (0+255),f,b
 11097   003220  2EE8               	decfsz	wreg,f,c
 11098   003222  EF0A  F019         	goto	u7575
 11099   003226  51E2               	movf	??_powf& (0+255),w,b
 11100   003228  0101               	movlb	1	; () banked
 11101   00322A  27A8               	addwf	powf@j& (0+255),f,b
 11102   00322C  0100               	movlb	0	; () banked
 11103   00322E  51E3               	movf	(??_powf+1)& (0+255),w,b
 11104   003230  0101               	movlb	1	; () banked
 11105   003232  23A9               	addwfc	(powf@j+1)& (0+255),f,b
 11106   003234  0100               	movlb	0	; () banked
 11107   003236  51E4               	movf	(??_powf+2)& (0+255),w,b
 11108   003238  0101               	movlb	1	; () banked
 11109   00323A  23AA               	addwfc	(powf@j+2)& (0+255),f,b
 11110   00323C  0100               	movlb	0	; () banked
 11111   00323E  51E5               	movf	(??_powf+3)& (0+255),w,b
 11112   003240  0101               	movlb	1	; () banked
 11113   003242  23AB               	addwfc	(powf@j+3)& (0+255),f,b
 11114   003244                     
 11115                           ; BSR set to: 1
 11116   003244  0E17               	movlw	23
 11117   003246  0100               	movlb	0	; () banked
 11118   003248  6FE2               	movwf	??_powf& (0+255),b
 11119   00324A  C1A8  F0E3         	movff	powf@j,??_powf+1
 11120   00324E  C1A9  F0E4         	movff	powf@j+1,??_powf+2
 11121   003252  C1AA  F0E5         	movff	powf@j+2,??_powf+3
 11122   003256  C1AB  F0E6         	movff	powf@j+3,??_powf+4
 11123   00325A                     u7585:
 11124   00325A  67E2               	tstfsz	??_powf& (0+255),b
 11125   00325C  EF32  F019         	goto	u7586
 11126   003260  EF3A  F019         	goto	u7587
 11127   003264                     u7586:
 11128   003264  35E6               	rlcf	(??_powf+4)& (0+255),w,b
 11129   003266  33E6               	rrcf	(??_powf+4)& (0+255),f,b
 11130   003268  33E5               	rrcf	(??_powf+3)& (0+255),f,b
 11131   00326A  33E4               	rrcf	(??_powf+2)& (0+255),f,b
 11132   00326C  33E3               	rrcf	(??_powf+1)& (0+255),f,b
 11133   00326E  2FE2               	decfsz	??_powf& (0+255),f,b
 11134   003270  EF2D  F019         	goto	u7585
 11135   003274                     u7587:
 11136   003274  0100               	movlb	0	; () banked
 11137   003276  BFE6               	btfsc	(??_powf+4)& (0+255),7,b
 11138   003278  EF4A  F019         	goto	u7590
 11139   00327C  51E6               	movf	(??_powf+4)& (0+255),w,b
 11140   00327E  11E5               	iorwf	(??_powf+3)& (0+255),w,b
 11141   003280  11E4               	iorwf	(??_powf+2)& (0+255),w,b
 11142   003282  E106               	bnz	u7591
 11143   003284  05E3               	decf	(??_powf+1)& (0+255),w,b
 11144   003286  B0D8               	btfsc	status,0,c
 11145   003288  EF48  F019         	goto	u7591
 11146   00328C  EF4A  F019         	goto	u7590
 11147   003290                     u7591:
 11148   003290  EF62  F019         	goto	l1440
 11149   003294                     u7590:
 11150   003294                     
 11151                           ; BSR set to: 0
 11152   003294  C1B4  F02B         	movff	powf@z,scalbnf@x
 11153   003298  C1B5  F02C         	movff	powf@z+1,scalbnf@x+1
 11154   00329C  C1B6  F02D         	movff	powf@z+2,scalbnf@x+2
 11155   0032A0  C1B7  F02E         	movff	powf@z+3,scalbnf@x+3
 11156   0032A4  C188  F02F         	movff	powf@n,scalbnf@n
 11157   0032A8  C189  F030         	movff	powf@n+1,scalbnf@n+1
 11158   0032AC  EC8B  F02E         	call	_scalbnf	;wreg free
 11159   0032B0  C02B  F1B4         	movff	?_scalbnf,powf@z
 11160   0032B4  C02C  F1B5         	movff	?_scalbnf+1,powf@z+1
 11161   0032B8  C02D  F1B6         	movff	?_scalbnf+2,powf@z+2
 11162   0032BC  C02E  F1B7         	movff	?_scalbnf+3,powf@z+3
 11163   0032C0  EF6A  F019         	goto	l7437
 11164   0032C4                     l1440:
 11165                           
 11166                           ; BSR set to: 0
 11167   0032C4  C1A8  F1B4         	movff	powf@j,powf@z
 11168   0032C8  C1A9  F1B5         	movff	powf@j+1,powf@z+1
 11169   0032CC  C1AA  F1B6         	movff	powf@j+2,powf@z+2
 11170   0032D0  C1AB  F1B7         	movff	powf@j+3,powf@z+3
 11171   0032D4                     l7437:
 11172   0032D4  0101               	movlb	1	; () banked
 11173   0032D6  51B4               	movf	powf@z& (0+255),w,b
 11174   0032D8  11B5               	iorwf	(powf@z+1)& (0+255),w,b
 11175   0032DA  11B6               	iorwf	(powf@z+2)& (0+255),w,b
 11176   0032DC  11B7               	iorwf	(powf@z+3)& (0+255),w,b
 11177   0032DE  B4D8               	btfsc	status,2,c
 11178   0032E0  EF74  F019         	goto	u7601
 11179   0032E4  EF76  F019         	goto	u7600
 11180   0032E8                     u7601:
 11181   0032E8  EF77  F00A         	goto	l7123
 11182   0032EC                     u7600:
 11183   0032EC                     
 11184                           ; BSR set to: 1
 11185   0032EC  5164               	movf	powf@sn& (0+255),w,b
 11186   0032EE  1BB4               	xorwf	powf@z& (0+255),f,b
 11187   0032F0  5165               	movf	(powf@sn+1)& (0+255),w,b
 11188   0032F2  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
 11189   0032F4  5166               	movf	(powf@sn+2)& (0+255),w,b
 11190   0032F6  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
 11191   0032F8  5167               	movf	(powf@sn+3)& (0+255),w,b
 11192   0032FA  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
 11193   0032FC  EF77  F00A         	goto	l7123
 11194   003300                     l1374:
 11195   003300  0012               	return		;funcret
 11196   003302                     __end_of_powf:
 11197                           	callstack 0
 11198                           
 11199 ;; *************** function _sqrtf *****************
 11200 ;; Defined at:
 11201 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sqrtf.c"
 11202 ;; Parameters:    Size  Location     Type
 11203 ;;  x               4   17[COMRAM] float 
 11204 ;; Auto vars:     Size  Location     Type
 11205 ;;  ix              4   50[COMRAM] struct .
 11206 ;;  r               4   46[COMRAM] unsigned long 
 11207 ;;  m               4   42[COMRAM] long 
 11208 ;;  t               4   38[COMRAM] long 
 11209 ;;  q               4   34[COMRAM] long 
 11210 ;;  i               4   30[COMRAM] long 
 11211 ;;  s               4   26[COMRAM] long 
 11212 ;;  z               4    0        float 
 11213 ;; Return value:  Size  Location     Type
 11214 ;;                  4   17[COMRAM] float 
 11215 ;; Registers used:
 11216 ;;		wreg, status,2, status,0
 11217 ;; Tracked objects:
 11218 ;;		On entry : 0/0
 11219 ;;		On exit  : 0/0
 11220 ;;		Unchanged: 0/0
 11221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11222 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11223 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11224 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11225 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11226 ;;Total ram usage:       37 bytes
 11227 ;; Hardware stack levels used: 1
 11228 ;; Hardware stack levels required when called: 2
 11229 ;; This function calls:
 11230 ;;		Nothing
 11231 ;; This function is called by:
 11232 ;;		_decide_action
 11233 ;;		_powf
 11234 ;; This function uses a non-reentrant model
 11235 ;;
 11236                           
 11237                           	psect	text30
 11238   00559E                     __ptext30:
 11239                           	callstack 0
 11240   00559E                     _sqrtf:
 11241                           	callstack 27
 11242   00559E  C012  F033         	movff	sqrtf@x,sqrtf@ix
 11243   0055A2  C013  F034         	movff	sqrtf@x+1,sqrtf@ix+1
 11244   0055A6  C014  F035         	movff	sqrtf@x+2,sqrtf@ix+2
 11245   0055AA  C015  F036         	movff	sqrtf@x+3,sqrtf@ix+3
 11246   0055AE  0E00               	movlw	0
 11247   0055B0  1433               	andwf	sqrtf@ix^0,w,c
 11248   0055B2  6E16               	movwf	??_sqrtf^0,c
 11249   0055B4  0E00               	movlw	0
 11250   0055B6  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11251   0055B8  6E17               	movwf	(??_sqrtf+1)^0,c
 11252   0055BA  0E80               	movlw	128
 11253   0055BC  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11254   0055BE  6E18               	movwf	(??_sqrtf+2)^0,c
 11255   0055C0  0E7F               	movlw	127
 11256   0055C2  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11257   0055C4  6E19               	movwf	(??_sqrtf+3)^0,c
 11258   0055C6  0E80               	movlw	128
 11259   0055C8  1818               	xorwf	(??_sqrtf+2)^0,w,c
 11260   0055CA  E109               	bnz	u3771
 11261   0055CC  0E7F               	movlw	127
 11262   0055CE  1819               	xorwf	(??_sqrtf+3)^0,w,c
 11263   0055D0  1016               	iorwf	??_sqrtf^0,w,c
 11264   0055D2  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11265   0055D4  A4D8               	btfss	status,2,c
 11266   0055D6  EFEF  F02A         	goto	u3771
 11267   0055DA  EFF1  F02A         	goto	u3770
 11268   0055DE                     u3771:
 11269   0055DE  EF21  F02B         	goto	l4149
 11270   0055E2                     u3770:
 11271   0055E2  0EFF               	movlw	255
 11272   0055E4  1433               	andwf	sqrtf@ix^0,w,c
 11273   0055E6  6E16               	movwf	??_sqrtf^0,c
 11274   0055E8  0EFF               	movlw	255
 11275   0055EA  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11276   0055EC  6E17               	movwf	(??_sqrtf+1)^0,c
 11277   0055EE  0E7F               	movlw	127
 11278   0055F0  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11279   0055F2  6E18               	movwf	(??_sqrtf+2)^0,c
 11280   0055F4  0E00               	movlw	0
 11281   0055F6  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11282   0055F8  6E19               	movwf	(??_sqrtf+3)^0,c
 11283   0055FA  5016               	movf	??_sqrtf^0,w,c
 11284   0055FC  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11285   0055FE  1018               	iorwf	(??_sqrtf+2)^0,w,c
 11286   005600  1019               	iorwf	(??_sqrtf+3)^0,w,c
 11287   005602  A4D8               	btfss	status,2,c
 11288   005604  EF06  F02B         	goto	u3781
 11289   005608  EF08  F02B         	goto	u3780
 11290   00560C                     u3781:
 11291   00560C  EF0F  F02B         	goto	l4143
 11292   005610                     u3780:
 11293   005610  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 11294   005612  EF0F  F02B         	goto	u3790
 11295   005616  EF0D  F02B         	goto	u3791
 11296   00561A                     u3791:
 11297   00561A  EF17  F02B         	goto	l4145
 11298   00561E                     u3790:
 11299   00561E                     l4143:
 11300   00561E  0EFF               	movlw	255
 11301   005620  1233               	iorwf	sqrtf@ix^0,f,c
 11302   005622  0EFF               	movlw	255
 11303   005624  1234               	iorwf	(sqrtf@ix+1)^0,f,c
 11304   005626  0E7F               	movlw	127
 11305   005628  1235               	iorwf	(sqrtf@ix+2)^0,f,c
 11306   00562A  0E00               	movlw	0
 11307   00562C  1236               	iorwf	(sqrtf@ix+3)^0,f,c
 11308   00562E                     l4145:
 11309   00562E  C033  F012         	movff	sqrtf@ix,?_sqrtf
 11310   005632  C034  F013         	movff	sqrtf@ix+1,?_sqrtf+1
 11311   005636  C035  F014         	movff	sqrtf@ix+2,?_sqrtf+2
 11312   00563A  C036  F015         	movff	sqrtf@ix+3,?_sqrtf+3
 11313   00563E  EFBD  F02C         	goto	l1466
 11314   005642                     l4149:
 11315   005642  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 11316   005644  EF30  F02B         	goto	u3800
 11317   005648  5036               	movf	(sqrtf@ix+3)^0,w,c
 11318   00564A  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 11319   00564C  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 11320   00564E  E106               	bnz	u3801
 11321   005650  0433               	decf	sqrtf@ix^0,w,c
 11322   005652  B0D8               	btfsc	status,0,c
 11323   005654  EF2E  F02B         	goto	u3801
 11324   005658  EF30  F02B         	goto	u3800
 11325   00565C                     u3801:
 11326   00565C  EF67  F02B         	goto	l4165
 11327   005660                     u3800:
 11328   005660  0EFF               	movlw	255
 11329   005662  1433               	andwf	sqrtf@ix^0,w,c
 11330   005664  6E16               	movwf	??_sqrtf^0,c
 11331   005666  0EFF               	movlw	255
 11332   005668  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11333   00566A  6E17               	movwf	(??_sqrtf+1)^0,c
 11334   00566C  0EFF               	movlw	255
 11335   00566E  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11336   005670  6E18               	movwf	(??_sqrtf+2)^0,c
 11337   005672  0E7F               	movlw	127
 11338   005674  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11339   005676  6E19               	movwf	(??_sqrtf+3)^0,c
 11340   005678  5016               	movf	??_sqrtf^0,w,c
 11341   00567A  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11342   00567C  1018               	iorwf	(??_sqrtf+2)^0,w,c
 11343   00567E  1019               	iorwf	(??_sqrtf+3)^0,w,c
 11344   005680  A4D8               	btfss	status,2,c
 11345   005682  EF45  F02B         	goto	u3811
 11346   005686  EF47  F02B         	goto	u3810
 11347   00568A                     u3811:
 11348   00568A  EF51  F02B         	goto	l4157
 11349   00568E                     u3810:
 11350   00568E  0E00               	movlw	0
 11351   005690  6E12               	movwf	?_sqrtf^0,c
 11352   005692  0E00               	movlw	0
 11353   005694  6E13               	movwf	(?_sqrtf+1)^0,c
 11354   005696  0E00               	movlw	0
 11355   005698  6E14               	movwf	(?_sqrtf+2)^0,c
 11356   00569A  0E00               	movlw	0
 11357   00569C  6E15               	movwf	(?_sqrtf+3)^0,c
 11358   00569E  EFBD  F02C         	goto	l1466
 11359   0056A2                     l4157:
 11360   0056A2  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 11361   0056A4  EF58  F02B         	goto	u3820
 11362   0056A8  EF56  F02B         	goto	u3821
 11363   0056AC                     u3821:
 11364   0056AC  EF67  F02B         	goto	l4165
 11365   0056B0                     u3820:
 11366   0056B0  0E00               	movlw	0
 11367   0056B2  0100               	movlb	0	; () banked
 11368   0056B4  6FD1               	movwf	(_errno+1)& (0+255),b
 11369   0056B6  0E21               	movlw	33
 11370   0056B8  6FD0               	movwf	_errno& (0+255),b
 11371   0056BA  0EFF               	movlw	255
 11372   0056BC  6E33               	movwf	sqrtf@ix^0,c
 11373   0056BE  0EFF               	movlw	255
 11374   0056C0  6E34               	movwf	(sqrtf@ix+1)^0,c
 11375   0056C2  0EFF               	movlw	255
 11376   0056C4  6E35               	movwf	(sqrtf@ix+2)^0,c
 11377   0056C6  0E7F               	movlw	127
 11378   0056C8  6E36               	movwf	(sqrtf@ix+3)^0,c
 11379   0056CA  EF17  F02B         	goto	l4145
 11380   0056CE                     l4165:
 11381   0056CE  0E17               	movlw	23
 11382   0056D0  6E16               	movwf	??_sqrtf^0,c
 11383   0056D2  C033  F017         	movff	sqrtf@ix,??_sqrtf+1
 11384   0056D6  C034  F018         	movff	sqrtf@ix+1,??_sqrtf+2
 11385   0056DA  C035  F019         	movff	sqrtf@ix+2,??_sqrtf+3
 11386   0056DE  C036  F01A         	movff	sqrtf@ix+3,??_sqrtf+4
 11387   0056E2                     u3835:
 11388   0056E2  6616               	tstfsz	??_sqrtf^0,c
 11389   0056E4  EF76  F02B         	goto	u3836
 11390   0056E8  EF7E  F02B         	goto	u3837
 11391   0056EC                     u3836:
 11392   0056EC  341A               	rlcf	(??_sqrtf+4)^0,w,c
 11393   0056EE  321A               	rrcf	(??_sqrtf+4)^0,f,c
 11394   0056F0  3219               	rrcf	(??_sqrtf+3)^0,f,c
 11395   0056F2  3218               	rrcf	(??_sqrtf+2)^0,f,c
 11396   0056F4  3217               	rrcf	(??_sqrtf+1)^0,f,c
 11397   0056F6  2E16               	decfsz	??_sqrtf^0,f,c
 11398   0056F8  EF71  F02B         	goto	u3835
 11399   0056FC                     u3837:
 11400   0056FC  C017  F02B         	movff	??_sqrtf+1,sqrtf@m
 11401   005700  C018  F02C         	movff	??_sqrtf+2,sqrtf@m+1
 11402   005704  C019  F02D         	movff	??_sqrtf+3,sqrtf@m+2
 11403   005708  C01A  F02E         	movff	??_sqrtf+4,sqrtf@m+3
 11404   00570C  502B               	movf	sqrtf@m^0,w,c
 11405   00570E  102C               	iorwf	(sqrtf@m+1)^0,w,c
 11406   005710  102D               	iorwf	(sqrtf@m+2)^0,w,c
 11407   005712  102E               	iorwf	(sqrtf@m+3)^0,w,c
 11408   005714  A4D8               	btfss	status,2,c
 11409   005716  EF8F  F02B         	goto	u3841
 11410   00571A  EF91  F02B         	goto	u3840
 11411   00571E                     u3841:
 11412   00571E  EFC1  F02B         	goto	l1470
 11413   005722                     u3840:
 11414   005722  0E00               	movlw	0
 11415   005724  6E1F               	movwf	sqrtf@i^0,c
 11416   005726  0E00               	movlw	0
 11417   005728  6E20               	movwf	(sqrtf@i+1)^0,c
 11418   00572A  0E00               	movlw	0
 11419   00572C  6E21               	movwf	(sqrtf@i+2)^0,c
 11420   00572E  0E00               	movlw	0
 11421   005730  6E22               	movwf	(sqrtf@i+3)^0,c
 11422   005732  EFA6  F02B         	goto	l4173
 11423   005736                     l4169:
 11424   005736  90D8               	bcf	status,0,c
 11425   005738  3633               	rlcf	sqrtf@ix^0,f,c
 11426   00573A  3634               	rlcf	(sqrtf@ix+1)^0,f,c
 11427   00573C  3635               	rlcf	(sqrtf@ix+2)^0,f,c
 11428   00573E  3636               	rlcf	(sqrtf@ix+3)^0,f,c
 11429   005740  0E01               	movlw	1
 11430   005742  261F               	addwf	sqrtf@i^0,f,c
 11431   005744  0E00               	movlw	0
 11432   005746  2220               	addwfc	(sqrtf@i+1)^0,f,c
 11433   005748  2221               	addwfc	(sqrtf@i+2)^0,f,c
 11434   00574A  2222               	addwfc	(sqrtf@i+3)^0,f,c
 11435   00574C                     l4173:
 11436   00574C  AE35               	btfss	(sqrtf@ix+2)^0,7,c
 11437   00574E  EFAB  F02B         	goto	u3851
 11438   005752  EFAD  F02B         	goto	u3850
 11439   005756                     u3851:
 11440   005756  EF9B  F02B         	goto	l4169
 11441   00575A                     u3850:
 11442   00575A  0EFF               	movlw	255
 11443   00575C  241F               	addwf	sqrtf@i^0,w,c
 11444   00575E  6E16               	movwf	??_sqrtf^0,c
 11445   005760  0EFF               	movlw	255
 11446   005762  2020               	addwfc	(sqrtf@i+1)^0,w,c
 11447   005764  6E17               	movwf	(??_sqrtf+1)^0,c
 11448   005766  0EFF               	movlw	255
 11449   005768  2021               	addwfc	(sqrtf@i+2)^0,w,c
 11450   00576A  6E18               	movwf	(??_sqrtf+2)^0,c
 11451   00576C  0EFF               	movlw	255
 11452   00576E  2022               	addwfc	(sqrtf@i+3)^0,w,c
 11453   005770  6E19               	movwf	(??_sqrtf+3)^0,c
 11454   005772  5016               	movf	??_sqrtf^0,w,c
 11455   005774  5E2B               	subwf	sqrtf@m^0,f,c
 11456   005776  5017               	movf	(??_sqrtf+1)^0,w,c
 11457   005778  5A2C               	subwfb	(sqrtf@m+1)^0,f,c
 11458   00577A  5018               	movf	(??_sqrtf+2)^0,w,c
 11459   00577C  5A2D               	subwfb	(sqrtf@m+2)^0,f,c
 11460   00577E  5019               	movf	(??_sqrtf+3)^0,w,c
 11461   005780  5A2E               	subwfb	(sqrtf@m+3)^0,f,c
 11462   005782                     l1470:
 11463   005782  0E81               	movlw	129
 11464   005784  262B               	addwf	sqrtf@m^0,f,c
 11465   005786  0EFF               	movlw	255
 11466   005788  222C               	addwfc	(sqrtf@m+1)^0,f,c
 11467   00578A  0EFF               	movlw	255
 11468   00578C  222D               	addwfc	(sqrtf@m+2)^0,f,c
 11469   00578E  0EFF               	movlw	255
 11470   005790  222E               	addwfc	(sqrtf@m+3)^0,f,c
 11471   005792  0EFF               	movlw	255
 11472   005794  1433               	andwf	sqrtf@ix^0,w,c
 11473   005796  6E16               	movwf	??_sqrtf^0,c
 11474   005798  0EFF               	movlw	255
 11475   00579A  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11476   00579C  6E17               	movwf	(??_sqrtf+1)^0,c
 11477   00579E  0E7F               	movlw	127
 11478   0057A0  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11479   0057A2  6E18               	movwf	(??_sqrtf+2)^0,c
 11480   0057A4  0E00               	movlw	0
 11481   0057A6  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11482   0057A8  6E19               	movwf	(??_sqrtf+3)^0,c
 11483   0057AA  0E00               	movlw	0
 11484   0057AC  1016               	iorwf	??_sqrtf^0,w,c
 11485   0057AE  6E33               	movwf	sqrtf@ix^0,c
 11486   0057B0  0E00               	movlw	0
 11487   0057B2  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11488   0057B4  6E34               	movwf	(sqrtf@ix+1)^0,c
 11489   0057B6  0E80               	movlw	128
 11490   0057B8  1018               	iorwf	(??_sqrtf+2)^0,w,c
 11491   0057BA  6E35               	movwf	(sqrtf@ix+2)^0,c
 11492   0057BC  0E00               	movlw	0
 11493   0057BE  1019               	iorwf	(??_sqrtf+3)^0,w,c
 11494   0057C0  6E36               	movwf	(sqrtf@ix+3)^0,c
 11495   0057C2  A02B               	btfss	sqrtf@m^0,0,c
 11496   0057C4  EFE6  F02B         	goto	u3861
 11497   0057C8  EFE8  F02B         	goto	u3860
 11498   0057CC                     u3861:
 11499   0057CC  EFF0  F02B         	goto	l1474
 11500   0057D0                     u3860:
 11501   0057D0  5033               	movf	sqrtf@ix^0,w,c
 11502   0057D2  2633               	addwf	sqrtf@ix^0,f,c
 11503   0057D4  5034               	movf	(sqrtf@ix+1)^0,w,c
 11504   0057D6  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11505   0057D8  5035               	movf	(sqrtf@ix+2)^0,w,c
 11506   0057DA  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11507   0057DC  5036               	movf	(sqrtf@ix+3)^0,w,c
 11508   0057DE  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11509   0057E0                     l1474:
 11510   0057E0  342E               	rlcf	(sqrtf@m+3)^0,w,c
 11511   0057E2  322E               	rrcf	(sqrtf@m+3)^0,f,c
 11512   0057E4  322D               	rrcf	(sqrtf@m+2)^0,f,c
 11513   0057E6  322C               	rrcf	(sqrtf@m+1)^0,f,c
 11514   0057E8  322B               	rrcf	sqrtf@m^0,f,c
 11515   0057EA  5033               	movf	sqrtf@ix^0,w,c
 11516   0057EC  2633               	addwf	sqrtf@ix^0,f,c
 11517   0057EE  5034               	movf	(sqrtf@ix+1)^0,w,c
 11518   0057F0  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11519   0057F2  5035               	movf	(sqrtf@ix+2)^0,w,c
 11520   0057F4  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11521   0057F6  5036               	movf	(sqrtf@ix+3)^0,w,c
 11522   0057F8  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11523   0057FA  0E00               	movlw	0
 11524   0057FC  6E1B               	movwf	sqrtf@s^0,c
 11525   0057FE  0E00               	movlw	0
 11526   005800  6E1C               	movwf	(sqrtf@s+1)^0,c
 11527   005802  0E00               	movlw	0
 11528   005804  6E1D               	movwf	(sqrtf@s+2)^0,c
 11529   005806  0E00               	movlw	0
 11530   005808  6E1E               	movwf	(sqrtf@s+3)^0,c
 11531   00580A  C01B  F023         	movff	sqrtf@s,sqrtf@q
 11532   00580E  C01C  F024         	movff	sqrtf@s+1,sqrtf@q+1
 11533   005812  C01D  F025         	movff	sqrtf@s+2,sqrtf@q+2
 11534   005816  C01E  F026         	movff	sqrtf@s+3,sqrtf@q+3
 11535   00581A  0E00               	movlw	0
 11536   00581C  6E2F               	movwf	sqrtf@r^0,c
 11537   00581E  0E00               	movlw	0
 11538   005820  6E30               	movwf	(sqrtf@r+1)^0,c
 11539   005822  0E00               	movlw	0
 11540   005824  6E31               	movwf	(sqrtf@r+2)^0,c
 11541   005826  0E01               	movlw	1
 11542   005828  6E32               	movwf	(sqrtf@r+3)^0,c
 11543   00582A  EF5F  F02C         	goto	l4191
 11544   00582E                     l4185:
 11545   00582E  501B               	movf	sqrtf@s^0,w,c
 11546   005830  242F               	addwf	sqrtf@r^0,w,c
 11547   005832  6E27               	movwf	sqrtf@t^0,c
 11548   005834  501C               	movf	(sqrtf@s+1)^0,w,c
 11549   005836  2030               	addwfc	(sqrtf@r+1)^0,w,c
 11550   005838  6E28               	movwf	(sqrtf@t+1)^0,c
 11551   00583A  501D               	movf	(sqrtf@s+2)^0,w,c
 11552   00583C  2031               	addwfc	(sqrtf@r+2)^0,w,c
 11553   00583E  6E29               	movwf	(sqrtf@t+2)^0,c
 11554   005840  501E               	movf	(sqrtf@s+3)^0,w,c
 11555   005842  2032               	addwfc	(sqrtf@r+3)^0,w,c
 11556   005844  6E2A               	movwf	(sqrtf@t+3)^0,c
 11557   005846  5027               	movf	sqrtf@t^0,w,c
 11558   005848  5C33               	subwf	sqrtf@ix^0,w,c
 11559   00584A  5028               	movf	(sqrtf@t+1)^0,w,c
 11560   00584C  5834               	subwfb	(sqrtf@ix+1)^0,w,c
 11561   00584E  5029               	movf	(sqrtf@t+2)^0,w,c
 11562   005850  5835               	subwfb	(sqrtf@ix+2)^0,w,c
 11563   005852  5036               	movf	(sqrtf@ix+3)^0,w,c
 11564   005854  0A80               	xorlw	128
 11565   005856  6E16               	movwf	??_sqrtf^0,c
 11566   005858  502A               	movf	(sqrtf@t+3)^0,w,c
 11567   00585A  0A80               	xorlw	128
 11568   00585C  5816               	subwfb	??_sqrtf^0,w,c
 11569   00585E  A0D8               	btfss	status,0,c
 11570   005860  EF34  F02C         	goto	u3871
 11571   005864  EF36  F02C         	goto	u3870
 11572   005868                     u3871:
 11573   005868  EF52  F02C         	goto	l1477
 11574   00586C                     u3870:
 11575   00586C  5027               	movf	sqrtf@t^0,w,c
 11576   00586E  242F               	addwf	sqrtf@r^0,w,c
 11577   005870  6E1B               	movwf	sqrtf@s^0,c
 11578   005872  5028               	movf	(sqrtf@t+1)^0,w,c
 11579   005874  2030               	addwfc	(sqrtf@r+1)^0,w,c
 11580   005876  6E1C               	movwf	(sqrtf@s+1)^0,c
 11581   005878  5029               	movf	(sqrtf@t+2)^0,w,c
 11582   00587A  2031               	addwfc	(sqrtf@r+2)^0,w,c
 11583   00587C  6E1D               	movwf	(sqrtf@s+2)^0,c
 11584   00587E  502A               	movf	(sqrtf@t+3)^0,w,c
 11585   005880  2032               	addwfc	(sqrtf@r+3)^0,w,c
 11586   005882  6E1E               	movwf	(sqrtf@s+3)^0,c
 11587   005884  5027               	movf	sqrtf@t^0,w,c
 11588   005886  5E33               	subwf	sqrtf@ix^0,f,c
 11589   005888  5028               	movf	(sqrtf@t+1)^0,w,c
 11590   00588A  5A34               	subwfb	(sqrtf@ix+1)^0,f,c
 11591   00588C  5029               	movf	(sqrtf@t+2)^0,w,c
 11592   00588E  5A35               	subwfb	(sqrtf@ix+2)^0,f,c
 11593   005890  502A               	movf	(sqrtf@t+3)^0,w,c
 11594   005892  5A36               	subwfb	(sqrtf@ix+3)^0,f,c
 11595   005894  502F               	movf	sqrtf@r^0,w,c
 11596   005896  2623               	addwf	sqrtf@q^0,f,c
 11597   005898  5030               	movf	(sqrtf@r+1)^0,w,c
 11598   00589A  2224               	addwfc	(sqrtf@q+1)^0,f,c
 11599   00589C  5031               	movf	(sqrtf@r+2)^0,w,c
 11600   00589E  2225               	addwfc	(sqrtf@q+2)^0,f,c
 11601   0058A0  5032               	movf	(sqrtf@r+3)^0,w,c
 11602   0058A2  2226               	addwfc	(sqrtf@q+3)^0,f,c
 11603   0058A4                     l1477:
 11604   0058A4  5033               	movf	sqrtf@ix^0,w,c
 11605   0058A6  2633               	addwf	sqrtf@ix^0,f,c
 11606   0058A8  5034               	movf	(sqrtf@ix+1)^0,w,c
 11607   0058AA  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11608   0058AC  5035               	movf	(sqrtf@ix+2)^0,w,c
 11609   0058AE  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11610   0058B0  5036               	movf	(sqrtf@ix+3)^0,w,c
 11611   0058B2  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11612   0058B4  90D8               	bcf	status,0,c
 11613   0058B6  3232               	rrcf	(sqrtf@r+3)^0,f,c
 11614   0058B8  3231               	rrcf	(sqrtf@r+2)^0,f,c
 11615   0058BA  3230               	rrcf	(sqrtf@r+1)^0,f,c
 11616   0058BC  322F               	rrcf	sqrtf@r^0,f,c
 11617   0058BE                     l4191:
 11618   0058BE  502F               	movf	sqrtf@r^0,w,c
 11619   0058C0  1030               	iorwf	(sqrtf@r+1)^0,w,c
 11620   0058C2  1031               	iorwf	(sqrtf@r+2)^0,w,c
 11621   0058C4  1032               	iorwf	(sqrtf@r+3)^0,w,c
 11622   0058C6  A4D8               	btfss	status,2,c
 11623   0058C8  EF68  F02C         	goto	u3881
 11624   0058CC  EF6A  F02C         	goto	u3880
 11625   0058D0                     u3881:
 11626   0058D0  EF17  F02C         	goto	l4185
 11627   0058D4                     u3880:
 11628   0058D4  5033               	movf	sqrtf@ix^0,w,c
 11629   0058D6  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 11630   0058D8  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 11631   0058DA  1036               	iorwf	(sqrtf@ix+3)^0,w,c
 11632   0058DC  B4D8               	btfsc	status,2,c
 11633   0058DE  EF73  F02C         	goto	u3891
 11634   0058E2  EF75  F02C         	goto	u3890
 11635   0058E6                     u3891:
 11636   0058E6  EF89  F02C         	goto	l1479
 11637   0058EA                     u3890:
 11638   0058EA  0E01               	movlw	1
 11639   0058EC  1423               	andwf	sqrtf@q^0,w,c
 11640   0058EE  6E16               	movwf	??_sqrtf^0,c
 11641   0058F0  0E00               	movlw	0
 11642   0058F2  1424               	andwf	(sqrtf@q+1)^0,w,c
 11643   0058F4  6E17               	movwf	(??_sqrtf+1)^0,c
 11644   0058F6  0E00               	movlw	0
 11645   0058F8  1425               	andwf	(sqrtf@q+2)^0,w,c
 11646   0058FA  6E18               	movwf	(??_sqrtf+2)^0,c
 11647   0058FC  0E00               	movlw	0
 11648   0058FE  1426               	andwf	(sqrtf@q+3)^0,w,c
 11649   005900  6E19               	movwf	(??_sqrtf+3)^0,c
 11650   005902  5016               	movf	??_sqrtf^0,w,c
 11651   005904  2623               	addwf	sqrtf@q^0,f,c
 11652   005906  5017               	movf	(??_sqrtf+1)^0,w,c
 11653   005908  2224               	addwfc	(sqrtf@q+1)^0,f,c
 11654   00590A  5018               	movf	(??_sqrtf+2)^0,w,c
 11655   00590C  2225               	addwfc	(sqrtf@q+2)^0,f,c
 11656   00590E  5019               	movf	(??_sqrtf+3)^0,w,c
 11657   005910  2226               	addwfc	(sqrtf@q+3)^0,f,c
 11658   005912                     l1479:
 11659   005912  C023  F016         	movff	sqrtf@q,??_sqrtf
 11660   005916  C024  F017         	movff	sqrtf@q+1,??_sqrtf+1
 11661   00591A  C025  F018         	movff	sqrtf@q+2,??_sqrtf+2
 11662   00591E  C026  F019         	movff	sqrtf@q+3,??_sqrtf+3
 11663   005922  3419               	rlcf	(??_sqrtf+3)^0,w,c
 11664   005924  3219               	rrcf	(??_sqrtf+3)^0,f,c
 11665   005926  3218               	rrcf	(??_sqrtf+2)^0,f,c
 11666   005928  3217               	rrcf	(??_sqrtf+1)^0,f,c
 11667   00592A  3216               	rrcf	??_sqrtf^0,f,c
 11668   00592C  0E00               	movlw	0
 11669   00592E  2416               	addwf	??_sqrtf^0,w,c
 11670   005930  6E33               	movwf	sqrtf@ix^0,c
 11671   005932  0E00               	movlw	0
 11672   005934  2017               	addwfc	(??_sqrtf+1)^0,w,c
 11673   005936  6E34               	movwf	(sqrtf@ix+1)^0,c
 11674   005938  0E00               	movlw	0
 11675   00593A  2018               	addwfc	(??_sqrtf+2)^0,w,c
 11676   00593C  6E35               	movwf	(sqrtf@ix+2)^0,c
 11677   00593E  0E3F               	movlw	63
 11678   005940  2019               	addwfc	(??_sqrtf+3)^0,w,c
 11679   005942  6E36               	movwf	(sqrtf@ix+3)^0,c
 11680   005944  C02B  F016         	movff	sqrtf@m,??_sqrtf
 11681   005948  C02C  F017         	movff	sqrtf@m+1,??_sqrtf+1
 11682   00594C  C02D  F018         	movff	sqrtf@m+2,??_sqrtf+2
 11683   005950  C02E  F019         	movff	sqrtf@m+3,??_sqrtf+3
 11684   005954  0E17               	movlw	23
 11685   005956                     u3905:
 11686   005956  90D8               	bcf	status,0,c
 11687   005958  3616               	rlcf	??_sqrtf^0,f,c
 11688   00595A  3617               	rlcf	(??_sqrtf+1)^0,f,c
 11689   00595C  3618               	rlcf	(??_sqrtf+2)^0,f,c
 11690   00595E  3619               	rlcf	(??_sqrtf+3)^0,f,c
 11691   005960  2EE8               	decfsz	wreg,f,c
 11692   005962  EFAB  F02C         	goto	u3905
 11693   005966  5016               	movf	??_sqrtf^0,w,c
 11694   005968  2633               	addwf	sqrtf@ix^0,f,c
 11695   00596A  5017               	movf	(??_sqrtf+1)^0,w,c
 11696   00596C  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11697   00596E  5018               	movf	(??_sqrtf+2)^0,w,c
 11698   005970  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11699   005972  5019               	movf	(??_sqrtf+3)^0,w,c
 11700   005974  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11701   005976  EF17  F02B         	goto	l4145
 11702   00597A                     l1466:
 11703   00597A  0012               	return		;funcret
 11704   00597C                     __end_of_sqrtf:
 11705                           	callstack 0
 11706                           
 11707 ;; *************** function _scalbnf *****************
 11708 ;; Defined at:
 11709 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\scalbnf.c"
 11710 ;; Parameters:    Size  Location     Type
 11711 ;;  x               4   42[COMRAM] float 
 11712 ;;  n               2   46[COMRAM] int 
 11713 ;; Auto vars:     Size  Location     Type
 11714 ;;  y               4   56[COMRAM] float 
 11715 ;;  u               4   52[COMRAM] struct .
 11716 ;; Return value:  Size  Location     Type
 11717 ;;                  4   42[COMRAM] float 
 11718 ;; Registers used:
 11719 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11720 ;; Tracked objects:
 11721 ;;		On entry : 0/0
 11722 ;;		On exit  : 0/0
 11723 ;;		Unchanged: 0/0
 11724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11725 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11726 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11727 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11728 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11729 ;;Total ram usage:       18 bytes
 11730 ;; Hardware stack levels used: 1
 11731 ;; Hardware stack levels required when called: 3
 11732 ;; This function calls:
 11733 ;;		___flmul
 11734 ;; This function is called by:
 11735 ;;		_powf
 11736 ;; This function uses a non-reentrant model
 11737 ;;
 11738                           
 11739                           	psect	text31
 11740   005D16                     __ptext31:
 11741                           	callstack 0
 11742   005D16                     _scalbnf:
 11743                           	callstack 25
 11744   005D16  C02B  F039         	movff	scalbnf@x,scalbnf@y
 11745   005D1A  C02C  F03A         	movff	scalbnf@x+1,scalbnf@y+1
 11746   005D1E  C02D  F03B         	movff	scalbnf@x+2,scalbnf@y+2
 11747   005D22  C02E  F03C         	movff	scalbnf@x+3,scalbnf@y+3
 11748   005D26  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11749   005D28  EF9F  F02E         	goto	u4421
 11750   005D2C  5030               	movf	(scalbnf@n+1)^0,w,c
 11751   005D2E  E109               	bnz	u4420
 11752   005D30  0E80               	movlw	128
 11753   005D32  5C2F               	subwf	scalbnf@n^0,w,c
 11754   005D34  A0D8               	btfss	status,0,c
 11755   005D36  EF9F  F02E         	goto	u4421
 11756   005D3A  EFA1  F02E         	goto	u4420
 11757   005D3E                     u4421:
 11758   005D3E  EFFF  F02E         	goto	l4505
 11759   005D42                     u4420:
 11760   005D42  C039  F012         	movff	scalbnf@y,___flmul@b
 11761   005D46  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11762   005D4A  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11763   005D4E  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11764   005D52  0E00               	movlw	0
 11765   005D54  6E16               	movwf	___flmul@a^0,c
 11766   005D56  0E00               	movlw	0
 11767   005D58  6E17               	movwf	(___flmul@a+1)^0,c
 11768   005D5A  0E00               	movlw	0
 11769   005D5C  6E18               	movwf	(___flmul@a+2)^0,c
 11770   005D5E  0E7F               	movlw	127
 11771   005D60  6E19               	movwf	(___flmul@a+3)^0,c
 11772   005D62  ECBA  F028         	call	___flmul	;wreg free
 11773   005D66  C012  F039         	movff	?___flmul,scalbnf@y
 11774   005D6A  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11775   005D6E  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11776   005D72  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11777   005D76  0E81               	movlw	129
 11778   005D78  262F               	addwf	scalbnf@n^0,f,c
 11779   005D7A  0EFF               	movlw	255
 11780   005D7C  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11781   005D7E  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11782   005D80  EFCB  F02E         	goto	u4431
 11783   005D84  5030               	movf	(scalbnf@n+1)^0,w,c
 11784   005D86  E109               	bnz	u4430
 11785   005D88  0E80               	movlw	128
 11786   005D8A  5C2F               	subwf	scalbnf@n^0,w,c
 11787   005D8C  A0D8               	btfss	status,0,c
 11788   005D8E  EFCB  F02E         	goto	u4431
 11789   005D92  EFCD  F02E         	goto	u4430
 11790   005D96                     u4431:
 11791   005D96  EF69  F02F         	goto	l4521
 11792   005D9A                     u4430:
 11793   005D9A  C039  F012         	movff	scalbnf@y,___flmul@b
 11794   005D9E  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11795   005DA2  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11796   005DA6  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11797   005DAA  0E00               	movlw	0
 11798   005DAC  6E16               	movwf	___flmul@a^0,c
 11799   005DAE  0E00               	movlw	0
 11800   005DB0  6E17               	movwf	(___flmul@a+1)^0,c
 11801   005DB2  0E00               	movlw	0
 11802   005DB4  6E18               	movwf	(___flmul@a+2)^0,c
 11803   005DB6  0E7F               	movlw	127
 11804   005DB8  6E19               	movwf	(___flmul@a+3)^0,c
 11805   005DBA  ECBA  F028         	call	___flmul	;wreg free
 11806   005DBE  C012  F039         	movff	?___flmul,scalbnf@y
 11807   005DC2  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11808   005DC6  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11809   005DCA  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11810   005DCE  0E81               	movlw	129
 11811   005DD0  262F               	addwf	scalbnf@n^0,f,c
 11812   005DD2  0EFF               	movlw	255
 11813   005DD4  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11814   005DD6  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11815   005DD8  EFF7  F02E         	goto	u4441
 11816   005DDC  5030               	movf	(scalbnf@n+1)^0,w,c
 11817   005DDE  E109               	bnz	u4440
 11818   005DE0  0E80               	movlw	128
 11819   005DE2  5C2F               	subwf	scalbnf@n^0,w,c
 11820   005DE4  A0D8               	btfss	status,0,c
 11821   005DE6  EFF7  F02E         	goto	u4441
 11822   005DEA  EFF9  F02E         	goto	u4440
 11823   005DEE                     u4441:
 11824   005DEE  EF69  F02F         	goto	l4521
 11825   005DF2                     u4440:
 11826   005DF2  0E00               	movlw	0
 11827   005DF4  6E30               	movwf	(scalbnf@n+1)^0,c
 11828   005DF6  0E7F               	movlw	127
 11829   005DF8  6E2F               	movwf	scalbnf@n^0,c
 11830   005DFA  EF69  F02F         	goto	l4521
 11831   005DFE                     l4505:
 11832   005DFE  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11833   005E00  EF0B  F02F         	goto	u4451
 11834   005E04  0E82               	movlw	130
 11835   005E06  5C2F               	subwf	scalbnf@n^0,w,c
 11836   005E08  0EFF               	movlw	255
 11837   005E0A  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11838   005E0C  B0D8               	btfsc	status,0,c
 11839   005E0E  EF0B  F02F         	goto	u4451
 11840   005E12  EF0D  F02F         	goto	u4450
 11841   005E16                     u4451:
 11842   005E16  EF69  F02F         	goto	l4521
 11843   005E1A                     u4450:
 11844   005E1A  C039  F012         	movff	scalbnf@y,___flmul@b
 11845   005E1E  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11846   005E22  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11847   005E26  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11848   005E2A  0E00               	movlw	0
 11849   005E2C  6E16               	movwf	___flmul@a^0,c
 11850   005E2E  0E00               	movlw	0
 11851   005E30  6E17               	movwf	(___flmul@a+1)^0,c
 11852   005E32  0E80               	movlw	128
 11853   005E34  6E18               	movwf	(___flmul@a+2)^0,c
 11854   005E36  0E0C               	movlw	12
 11855   005E38  6E19               	movwf	(___flmul@a+3)^0,c
 11856   005E3A  ECBA  F028         	call	___flmul	;wreg free
 11857   005E3E  C012  F039         	movff	?___flmul,scalbnf@y
 11858   005E42  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11859   005E46  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11860   005E4A  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11861   005E4E  0E66               	movlw	102
 11862   005E50  262F               	addwf	scalbnf@n^0,f,c
 11863   005E52  0E00               	movlw	0
 11864   005E54  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11865   005E56  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11866   005E58  EF37  F02F         	goto	u4461
 11867   005E5C  0E82               	movlw	130
 11868   005E5E  5C2F               	subwf	scalbnf@n^0,w,c
 11869   005E60  0EFF               	movlw	255
 11870   005E62  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11871   005E64  B0D8               	btfsc	status,0,c
 11872   005E66  EF37  F02F         	goto	u4461
 11873   005E6A  EF39  F02F         	goto	u4460
 11874   005E6E                     u4461:
 11875   005E6E  EF69  F02F         	goto	l4521
 11876   005E72                     u4460:
 11877   005E72  C039  F012         	movff	scalbnf@y,___flmul@b
 11878   005E76  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11879   005E7A  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11880   005E7E  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11881   005E82  0E00               	movlw	0
 11882   005E84  6E16               	movwf	___flmul@a^0,c
 11883   005E86  0E00               	movlw	0
 11884   005E88  6E17               	movwf	(___flmul@a+1)^0,c
 11885   005E8A  0E80               	movlw	128
 11886   005E8C  6E18               	movwf	(___flmul@a+2)^0,c
 11887   005E8E  0E0C               	movlw	12
 11888   005E90  6E19               	movwf	(___flmul@a+3)^0,c
 11889   005E92  ECBA  F028         	call	___flmul	;wreg free
 11890   005E96  C012  F039         	movff	?___flmul,scalbnf@y
 11891   005E9A  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11892   005E9E  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11893   005EA2  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11894   005EA6  0E66               	movlw	102
 11895   005EA8  262F               	addwf	scalbnf@n^0,f,c
 11896   005EAA  0E00               	movlw	0
 11897   005EAC  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11898   005EAE  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11899   005EB0  EF63  F02F         	goto	u4471
 11900   005EB4  0E82               	movlw	130
 11901   005EB6  5C2F               	subwf	scalbnf@n^0,w,c
 11902   005EB8  0EFF               	movlw	255
 11903   005EBA  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11904   005EBC  B0D8               	btfsc	status,0,c
 11905   005EBE  EF63  F02F         	goto	u4471
 11906   005EC2  EF65  F02F         	goto	u4470
 11907   005EC6                     u4471:
 11908   005EC6  EF69  F02F         	goto	l4521
 11909   005ECA                     u4470:
 11910   005ECA  0EFF               	movlw	255
 11911   005ECC  6E30               	movwf	(scalbnf@n+1)^0,c
 11912   005ECE  0E82               	movlw	130
 11913   005ED0  6E2F               	movwf	scalbnf@n^0,c
 11914   005ED2                     l4521:
 11915   005ED2  0E7F               	movlw	127
 11916   005ED4  242F               	addwf	scalbnf@n^0,w,c
 11917   005ED6  6E31               	movwf	??_scalbnf^0,c
 11918   005ED8  0E00               	movlw	0
 11919   005EDA  2030               	addwfc	(scalbnf@n+1)^0,w,c
 11920   005EDC  6E32               	movwf	(??_scalbnf+1)^0,c
 11921   005EDE  6A33               	clrf	(??_scalbnf+2)^0,c
 11922   005EE0  6A34               	clrf	(??_scalbnf+3)^0,c
 11923   005EE2  0E17               	movlw	23
 11924   005EE4                     u4485:
 11925   005EE4  90D8               	bcf	status,0,c
 11926   005EE6  3631               	rlcf	??_scalbnf^0,f,c
 11927   005EE8  3632               	rlcf	(??_scalbnf+1)^0,f,c
 11928   005EEA  3633               	rlcf	(??_scalbnf+2)^0,f,c
 11929   005EEC  3634               	rlcf	(??_scalbnf+3)^0,f,c
 11930   005EEE  2EE8               	decfsz	wreg,f,c
 11931   005EF0  EF72  F02F         	goto	u4485
 11932   005EF4  C031  F035         	movff	??_scalbnf,scalbnf@u
 11933   005EF8  C032  F036         	movff	??_scalbnf+1,scalbnf@u+1
 11934   005EFC  C033  F037         	movff	??_scalbnf+2,scalbnf@u+2
 11935   005F00  C034  F038         	movff	??_scalbnf+3,scalbnf@u+3
 11936   005F04  C035  F012         	movff	scalbnf@u,___flmul@b
 11937   005F08  C036  F013         	movff	scalbnf@u+1,___flmul@b+1
 11938   005F0C  C037  F014         	movff	scalbnf@u+2,___flmul@b+2
 11939   005F10  C038  F015         	movff	scalbnf@u+3,___flmul@b+3
 11940   005F14  C039  F016         	movff	scalbnf@y,___flmul@a
 11941   005F18  C03A  F017         	movff	scalbnf@y+1,___flmul@a+1
 11942   005F1C  C03B  F018         	movff	scalbnf@y+2,___flmul@a+2
 11943   005F20  C03C  F019         	movff	scalbnf@y+3,___flmul@a+3
 11944   005F24  ECBA  F028         	call	___flmul	;wreg free
 11945   005F28  C012  F02B         	movff	?___flmul,scalbnf@x
 11946   005F2C  C013  F02C         	movff	?___flmul+1,scalbnf@x+1
 11947   005F30  C014  F02D         	movff	?___flmul+2,scalbnf@x+2
 11948   005F34  C015  F02E         	movff	?___flmul+3,scalbnf@x+3
 11949   005F38  C02B  F02B         	movff	scalbnf@x,?_scalbnf
 11950   005F3C  C02C  F02C         	movff	scalbnf@x+1,?_scalbnf+1
 11951   005F40  C02D  F02D         	movff	scalbnf@x+2,?_scalbnf+2
 11952   005F44  C02E  F02E         	movff	scalbnf@x+3,?_scalbnf+3
 11953   005F48  0012               	return		;funcret
 11954   005F4A                     __end_of_scalbnf:
 11955                           	callstack 0
 11956                           
 11957 ;; *************** function ___flmul *****************
 11958 ;; Defined at:
 11959 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 11960 ;; Parameters:    Size  Location     Type
 11961 ;;  b               4   17[COMRAM] float 
 11962 ;;  a               4   21[COMRAM] float 
 11963 ;; Auto vars:     Size  Location     Type
 11964 ;;  prod            4   36[COMRAM] struct .
 11965 ;;  grs             4   30[COMRAM] unsigned long 
 11966 ;;  temp            2   40[COMRAM] struct .
 11967 ;;  bexp            1   35[COMRAM] unsigned char 
 11968 ;;  aexp            1   34[COMRAM] unsigned char 
 11969 ;;  sign            1   29[COMRAM] unsigned char 
 11970 ;; Return value:  Size  Location     Type
 11971 ;;                  4   17[COMRAM] unsigned char 
 11972 ;; Registers used:
 11973 ;;		wreg, status,2, status,0, prodl, prodh
 11974 ;; Tracked objects:
 11975 ;;		On entry : 0/0
 11976 ;;		On exit  : 0/0
 11977 ;;		Unchanged: 0/0
 11978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11979 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11980 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11981 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11982 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11983 ;;Total ram usage:       25 bytes
 11984 ;; Hardware stack levels used: 1
 11985 ;; Hardware stack levels required when called: 2
 11986 ;; This function calls:
 11987 ;;		Nothing
 11988 ;; This function is called by:
 11989 ;;		_powf
 11990 ;;		_scalbnf
 11991 ;; This function uses a non-reentrant model
 11992 ;;
 11993                           
 11994                           	psect	text32
 11995   005174                     __ptext32:
 11996                           	callstack 0
 11997   005174                     ___flmul:
 11998                           	callstack 25
 11999   005174  5015               	movf	(___flmul@b+3)^0,w,c
 12000   005176  0B80               	andlw	128
 12001   005178  6E1E               	movwf	___flmul@sign^0,c
 12002   00517A  5015               	movf	(___flmul@b+3)^0,w,c
 12003   00517C  2415               	addwf	(___flmul@b+3)^0,w,c
 12004   00517E  6E24               	movwf	___flmul@bexp^0,c
 12005   005180  AE14               	btfss	(___flmul@b+2)^0,7,c
 12006   005182  EFC5  F028         	goto	u3381
 12007   005186  EFC7  F028         	goto	u3380
 12008   00518A                     u3381:
 12009   00518A  EFC8  F028         	goto	l3879
 12010   00518E                     u3380:
 12011   00518E  8024               	bsf	___flmul@bexp^0,0,c
 12012   005190                     l3879:
 12013   005190  5024               	movf	___flmul@bexp^0,w,c
 12014   005192  B4D8               	btfsc	status,2,c
 12015   005194  EFCE  F028         	goto	u3391
 12016   005198  EFD0  F028         	goto	u3390
 12017   00519C                     u3391:
 12018   00519C  EFE3  F028         	goto	l3887
 12019   0051A0                     u3390:
 12020   0051A0  2824               	incf	___flmul@bexp^0,w,c
 12021   0051A2  A4D8               	btfss	status,2,c
 12022   0051A4  EFD6  F028         	goto	u3401
 12023   0051A8  EFD8  F028         	goto	u3400
 12024   0051AC                     u3401:
 12025   0051AC  EFE0  F028         	goto	l3885
 12026   0051B0                     u3400:
 12027   0051B0  0E00               	movlw	0
 12028   0051B2  6E12               	movwf	___flmul@b^0,c
 12029   0051B4  0E00               	movlw	0
 12030   0051B6  6E13               	movwf	(___flmul@b+1)^0,c
 12031   0051B8  0E00               	movlw	0
 12032   0051BA  6E14               	movwf	(___flmul@b+2)^0,c
 12033   0051BC  0E00               	movlw	0
 12034   0051BE  6E15               	movwf	(___flmul@b+3)^0,c
 12035   0051C0                     l3885:
 12036   0051C0  8E14               	bsf	(___flmul@b+2)^0,7,c
 12037   0051C2  EFEB  F028         	goto	l3889
 12038   0051C6                     l3887:
 12039   0051C6  0E00               	movlw	0
 12040   0051C8  6E12               	movwf	___flmul@b^0,c
 12041   0051CA  0E00               	movlw	0
 12042   0051CC  6E13               	movwf	(___flmul@b+1)^0,c
 12043   0051CE  0E00               	movlw	0
 12044   0051D0  6E14               	movwf	(___flmul@b+2)^0,c
 12045   0051D2  0E00               	movlw	0
 12046   0051D4  6E15               	movwf	(___flmul@b+3)^0,c
 12047   0051D6                     l3889:
 12048   0051D6  5019               	movf	(___flmul@a+3)^0,w,c
 12049   0051D8  0B80               	andlw	128
 12050   0051DA  1A1E               	xorwf	___flmul@sign^0,f,c
 12051   0051DC  5019               	movf	(___flmul@a+3)^0,w,c
 12052   0051DE  2419               	addwf	(___flmul@a+3)^0,w,c
 12053   0051E0  6E23               	movwf	___flmul@aexp^0,c
 12054   0051E2  AE18               	btfss	(___flmul@a+2)^0,7,c
 12055   0051E4  EFF6  F028         	goto	u3411
 12056   0051E8  EFF8  F028         	goto	u3410
 12057   0051EC                     u3411:
 12058   0051EC  EFF9  F028         	goto	l3897
 12059   0051F0                     u3410:
 12060   0051F0  8023               	bsf	___flmul@aexp^0,0,c
 12061   0051F2                     l3897:
 12062   0051F2  5023               	movf	___flmul@aexp^0,w,c
 12063   0051F4  B4D8               	btfsc	status,2,c
 12064   0051F6  EFFF  F028         	goto	u3421
 12065   0051FA  EF01  F029         	goto	u3420
 12066   0051FE                     u3421:
 12067   0051FE  EF14  F029         	goto	l3905
 12068   005202                     u3420:
 12069   005202  2823               	incf	___flmul@aexp^0,w,c
 12070   005204  A4D8               	btfss	status,2,c
 12071   005206  EF07  F029         	goto	u3431
 12072   00520A  EF09  F029         	goto	u3430
 12073   00520E                     u3431:
 12074   00520E  EF11  F029         	goto	l3903
 12075   005212                     u3430:
 12076   005212  0E00               	movlw	0
 12077   005214  6E16               	movwf	___flmul@a^0,c
 12078   005216  0E00               	movlw	0
 12079   005218  6E17               	movwf	(___flmul@a+1)^0,c
 12080   00521A  0E00               	movlw	0
 12081   00521C  6E18               	movwf	(___flmul@a+2)^0,c
 12082   00521E  0E00               	movlw	0
 12083   005220  6E19               	movwf	(___flmul@a+3)^0,c
 12084   005222                     l3903:
 12085   005222  8E18               	bsf	(___flmul@a+2)^0,7,c
 12086   005224  EF1C  F029         	goto	l1179
 12087   005228                     l3905:
 12088   005228  0E00               	movlw	0
 12089   00522A  6E16               	movwf	___flmul@a^0,c
 12090   00522C  0E00               	movlw	0
 12091   00522E  6E17               	movwf	(___flmul@a+1)^0,c
 12092   005230  0E00               	movlw	0
 12093   005232  6E18               	movwf	(___flmul@a+2)^0,c
 12094   005234  0E00               	movlw	0
 12095   005236  6E19               	movwf	(___flmul@a+3)^0,c
 12096   005238                     l1179:
 12097   005238  5023               	movf	___flmul@aexp^0,w,c
 12098   00523A  B4D8               	btfsc	status,2,c
 12099   00523C  EF22  F029         	goto	u3441
 12100   005240  EF24  F029         	goto	u3440
 12101   005244                     u3441:
 12102   005244  EF2C  F029         	goto	l3909
 12103   005248                     u3440:
 12104   005248  5024               	movf	___flmul@bexp^0,w,c
 12105   00524A  A4D8               	btfss	status,2,c
 12106   00524C  EF2A  F029         	goto	u3451
 12107   005250  EF2C  F029         	goto	u3450
 12108   005254                     u3451:
 12109   005254  EF36  F029         	goto	l3913
 12110   005258                     u3450:
 12111   005258                     l3909:
 12112   005258  0E00               	movlw	0
 12113   00525A  6E12               	movwf	?___flmul^0,c
 12114   00525C  0E00               	movlw	0
 12115   00525E  6E13               	movwf	(?___flmul+1)^0,c
 12116   005260  0E00               	movlw	0
 12117   005262  6E14               	movwf	(?___flmul+2)^0,c
 12118   005264  0E00               	movlw	0
 12119   005266  6E15               	movwf	(?___flmul+3)^0,c
 12120   005268  EFCE  F02A         	goto	l1183
 12121   00526C                     l3913:
 12122   00526C  5018               	movf	(___flmul@a+2)^0,w,c
 12123   00526E  0212               	mulwf	___flmul@b^0,c
 12124   005270  CFF3 F029          	movff	prodl,___flmul@temp
 12125   005274  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12126   005278  5029               	movf	___flmul@temp^0,w,c
 12127   00527A  6E1F               	movwf	___flmul@grs^0,c
 12128   00527C  6A20               	clrf	(___flmul@grs+1)^0,c
 12129   00527E  6A21               	clrf	(___flmul@grs+2)^0,c
 12130   005280  6A22               	clrf	(___flmul@grs+3)^0,c
 12131   005282  502A               	movf	(___flmul@temp+1)^0,w,c
 12132   005284  6E25               	movwf	___flmul@prod^0,c
 12133   005286  6A26               	clrf	(___flmul@prod+1)^0,c
 12134   005288  6A27               	clrf	(___flmul@prod+2)^0,c
 12135   00528A  6A28               	clrf	(___flmul@prod+3)^0,c
 12136   00528C  5017               	movf	(___flmul@a+1)^0,w,c
 12137   00528E  0213               	mulwf	(___flmul@b+1)^0,c
 12138   005290  CFF3 F029          	movff	prodl,___flmul@temp
 12139   005294  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12140   005298  5029               	movf	___flmul@temp^0,w,c
 12141   00529A  261F               	addwf	___flmul@grs^0,f,c
 12142   00529C  0E00               	movlw	0
 12143   00529E  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12144   0052A0  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12145   0052A2  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12146   0052A4  502A               	movf	(___flmul@temp+1)^0,w,c
 12147   0052A6  2625               	addwf	___flmul@prod^0,f,c
 12148   0052A8  0E00               	movlw	0
 12149   0052AA  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12150   0052AC  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12151   0052AE  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12152   0052B0  5016               	movf	___flmul@a^0,w,c
 12153   0052B2  0214               	mulwf	(___flmul@b+2)^0,c
 12154   0052B4  CFF3 F029          	movff	prodl,___flmul@temp
 12155   0052B8  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12156   0052BC  5029               	movf	___flmul@temp^0,w,c
 12157   0052BE  261F               	addwf	___flmul@grs^0,f,c
 12158   0052C0  0E00               	movlw	0
 12159   0052C2  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12160   0052C4  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12161   0052C6  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12162   0052C8  502A               	movf	(___flmul@temp+1)^0,w,c
 12163   0052CA  2625               	addwf	___flmul@prod^0,f,c
 12164   0052CC  0E00               	movlw	0
 12165   0052CE  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12166   0052D0  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12167   0052D2  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12168   0052D4  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12169   0052D8  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12170   0052DC  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12171   0052E0  6A1F               	clrf	___flmul@grs^0,c
 12172   0052E2  5016               	movf	___flmul@a^0,w,c
 12173   0052E4  0213               	mulwf	(___flmul@b+1)^0,c
 12174   0052E6  CFF3 F029          	movff	prodl,___flmul@temp
 12175   0052EA  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12176   0052EE  5029               	movf	___flmul@temp^0,w,c
 12177   0052F0  261F               	addwf	___flmul@grs^0,f,c
 12178   0052F2  502A               	movf	(___flmul@temp+1)^0,w,c
 12179   0052F4  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12180   0052F6  0E00               	movlw	0
 12181   0052F8  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12182   0052FA  0E00               	movlw	0
 12183   0052FC  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12184   0052FE  5017               	movf	(___flmul@a+1)^0,w,c
 12185   005300  0212               	mulwf	___flmul@b^0,c
 12186   005302  CFF3 F029          	movff	prodl,___flmul@temp
 12187   005306  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12188   00530A  5029               	movf	___flmul@temp^0,w,c
 12189   00530C  261F               	addwf	___flmul@grs^0,f,c
 12190   00530E  502A               	movf	(___flmul@temp+1)^0,w,c
 12191   005310  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12192   005312  0E00               	movlw	0
 12193   005314  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12194   005316  0E00               	movlw	0
 12195   005318  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12196   00531A  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12197   00531E  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12198   005322  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12199   005326  6A1F               	clrf	___flmul@grs^0,c
 12200   005328  5016               	movf	___flmul@a^0,w,c
 12201   00532A  0212               	mulwf	___flmul@b^0,c
 12202   00532C  CFF3 F029          	movff	prodl,___flmul@temp
 12203   005330  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12204   005334  5029               	movf	___flmul@temp^0,w,c
 12205   005336  261F               	addwf	___flmul@grs^0,f,c
 12206   005338  502A               	movf	(___flmul@temp+1)^0,w,c
 12207   00533A  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12208   00533C  0E00               	movlw	0
 12209   00533E  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12210   005340  0E00               	movlw	0
 12211   005342  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12212   005344  5018               	movf	(___flmul@a+2)^0,w,c
 12213   005346  0213               	mulwf	(___flmul@b+1)^0,c
 12214   005348  CFF3 F029          	movff	prodl,___flmul@temp
 12215   00534C  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12216   005350  5029               	movf	___flmul@temp^0,w,c
 12217   005352  2625               	addwf	___flmul@prod^0,f,c
 12218   005354  502A               	movf	(___flmul@temp+1)^0,w,c
 12219   005356  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12220   005358  0E00               	movlw	0
 12221   00535A  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12222   00535C  0E00               	movlw	0
 12223   00535E  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12224   005360  5017               	movf	(___flmul@a+1)^0,w,c
 12225   005362  0214               	mulwf	(___flmul@b+2)^0,c
 12226   005364  CFF3 F029          	movff	prodl,___flmul@temp
 12227   005368  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12228   00536C  5029               	movf	___flmul@temp^0,w,c
 12229   00536E  2625               	addwf	___flmul@prod^0,f,c
 12230   005370  502A               	movf	(___flmul@temp+1)^0,w,c
 12231   005372  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12232   005374  0E00               	movlw	0
 12233   005376  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12234   005378  0E00               	movlw	0
 12235   00537A  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12236   00537C  5018               	movf	(___flmul@a+2)^0,w,c
 12237   00537E  0214               	mulwf	(___flmul@b+2)^0,c
 12238   005380  CFF3 F029          	movff	prodl,___flmul@temp
 12239   005384  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12240   005388  5029               	movf	___flmul@temp^0,w,c
 12241   00538A  6E1A               	movwf	??___flmul^0,c
 12242   00538C  502A               	movf	(___flmul@temp+1)^0,w,c
 12243   00538E  6E1B               	movwf	(??___flmul+1)^0,c
 12244   005390  6A1C               	clrf	(??___flmul+2)^0,c
 12245   005392  6A1D               	clrf	(??___flmul+3)^0,c
 12246   005394  C01C  F01D         	movff	??___flmul+2,??___flmul+3
 12247   005398  C01B  F01C         	movff	??___flmul+1,??___flmul+2
 12248   00539C  C01A  F01B         	movff	??___flmul,??___flmul+1
 12249   0053A0  6A1A               	clrf	??___flmul^0,c
 12250   0053A2  501A               	movf	??___flmul^0,w,c
 12251   0053A4  2625               	addwf	___flmul@prod^0,f,c
 12252   0053A6  501B               	movf	(??___flmul+1)^0,w,c
 12253   0053A8  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12254   0053AA  501C               	movf	(??___flmul+2)^0,w,c
 12255   0053AC  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12256   0053AE  501D               	movf	(??___flmul+3)^0,w,c
 12257   0053B0  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12258   0053B2  C01F  F01A         	movff	___flmul@grs,??___flmul
 12259   0053B6  C020  F01B         	movff	___flmul@grs+1,??___flmul+1
 12260   0053BA  C021  F01C         	movff	___flmul@grs+2,??___flmul+2
 12261   0053BE  C022  F01D         	movff	___flmul@grs+3,??___flmul+3
 12262   0053C2  0E19               	movlw	25
 12263   0053C4  EFE9  F029         	goto	u3460
 12264   0053C8                     u3465:
 12265   0053C8  90D8               	bcf	status,0,c
 12266   0053CA  321D               	rrcf	(??___flmul+3)^0,f,c
 12267   0053CC  321C               	rrcf	(??___flmul+2)^0,f,c
 12268   0053CE  321B               	rrcf	(??___flmul+1)^0,f,c
 12269   0053D0  321A               	rrcf	??___flmul^0,f,c
 12270   0053D2                     u3460:
 12271   0053D2  2EE8               	decfsz	wreg,f,c
 12272   0053D4  EFE4  F029         	goto	u3465
 12273   0053D8  501A               	movf	??___flmul^0,w,c
 12274   0053DA  2625               	addwf	___flmul@prod^0,f,c
 12275   0053DC  501B               	movf	(??___flmul+1)^0,w,c
 12276   0053DE  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12277   0053E0  501C               	movf	(??___flmul+2)^0,w,c
 12278   0053E2  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12279   0053E4  501D               	movf	(??___flmul+3)^0,w,c
 12280   0053E6  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12281   0053E8  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12282   0053EC  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12283   0053F0  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12284   0053F4  6A1F               	clrf	___flmul@grs^0,c
 12285   0053F6  5023               	movf	___flmul@aexp^0,w,c
 12286   0053F8  C024  F01A         	movff	___flmul@bexp,??___flmul
 12287   0053FC  6A1B               	clrf	(??___flmul+1)^0,c
 12288   0053FE  261A               	addwf	??___flmul^0,f,c
 12289   005400  0E00               	movlw	0
 12290   005402  221B               	addwfc	(??___flmul+1)^0,f,c
 12291   005404  0E82               	movlw	130
 12292   005406  241A               	addwf	??___flmul^0,w,c
 12293   005408  6E29               	movwf	___flmul@temp^0,c
 12294   00540A  0EFF               	movlw	255
 12295   00540C  201B               	addwfc	(??___flmul+1)^0,w,c
 12296   00540E  6E2A               	movwf	(___flmul@temp+1)^0,c
 12297   005410  EF1F  F02A         	goto	l3961
 12298   005414                     l3955:
 12299   005414  90D8               	bcf	status,0,c
 12300   005416  3625               	rlcf	___flmul@prod^0,f,c
 12301   005418  3626               	rlcf	(___flmul@prod+1)^0,f,c
 12302   00541A  3627               	rlcf	(___flmul@prod+2)^0,f,c
 12303   00541C  3628               	rlcf	(___flmul@prod+3)^0,f,c
 12304   00541E  AE22               	btfss	(___flmul@grs+3)^0,7,c
 12305   005420  EF14  F02A         	goto	u3471
 12306   005424  EF16  F02A         	goto	u3470
 12307   005428                     u3471:
 12308   005428  EF17  F02A         	goto	l1186
 12309   00542C                     u3470:
 12310   00542C  8025               	bsf	___flmul@prod^0,0,c
 12311   00542E                     l1186:
 12312   00542E  90D8               	bcf	status,0,c
 12313   005430  361F               	rlcf	___flmul@grs^0,f,c
 12314   005432  3620               	rlcf	(___flmul@grs+1)^0,f,c
 12315   005434  3621               	rlcf	(___flmul@grs+2)^0,f,c
 12316   005436  3622               	rlcf	(___flmul@grs+3)^0,f,c
 12317   005438  0629               	decf	___flmul@temp^0,f,c
 12318   00543A  A0D8               	btfss	status,0,c
 12319   00543C  062A               	decf	(___flmul@temp+1)^0,f,c
 12320   00543E                     l3961:
 12321   00543E  AE27               	btfss	(___flmul@prod+2)^0,7,c
 12322   005440  EF24  F02A         	goto	u3481
 12323   005444  EF26  F02A         	goto	u3480
 12324   005448                     u3481:
 12325   005448  EF0A  F02A         	goto	l3955
 12326   00544C                     u3480:
 12327   00544C  0E00               	movlw	0
 12328   00544E  6E23               	movwf	___flmul@aexp^0,c
 12329   005450  AE22               	btfss	(___flmul@grs+3)^0,7,c
 12330   005452  EF2D  F02A         	goto	u3491
 12331   005456  EF2F  F02A         	goto	u3490
 12332   00545A                     u3491:
 12333   00545A  EF53  F02A         	goto	l1188
 12334   00545E                     u3490:
 12335   00545E  0EFF               	movlw	255
 12336   005460  141F               	andwf	___flmul@grs^0,w,c
 12337   005462  6E1A               	movwf	??___flmul^0,c
 12338   005464  0EFF               	movlw	255
 12339   005466  1420               	andwf	(___flmul@grs+1)^0,w,c
 12340   005468  6E1B               	movwf	(??___flmul+1)^0,c
 12341   00546A  0EFF               	movlw	255
 12342   00546C  1421               	andwf	(___flmul@grs+2)^0,w,c
 12343   00546E  6E1C               	movwf	(??___flmul+2)^0,c
 12344   005470  0E7F               	movlw	127
 12345   005472  1422               	andwf	(___flmul@grs+3)^0,w,c
 12346   005474  6E1D               	movwf	(??___flmul+3)^0,c
 12347   005476  501A               	movf	??___flmul^0,w,c
 12348   005478  101B               	iorwf	(??___flmul+1)^0,w,c
 12349   00547A  101C               	iorwf	(??___flmul+2)^0,w,c
 12350   00547C  101D               	iorwf	(??___flmul+3)^0,w,c
 12351   00547E  B4D8               	btfsc	status,2,c
 12352   005480  EF44  F02A         	goto	u3501
 12353   005484  EF46  F02A         	goto	u3500
 12354   005488                     u3501:
 12355   005488  EF4A  F02A         	goto	l1189
 12356   00548C                     u3500:
 12357   00548C                     l3969:
 12358   00548C  0E01               	movlw	1
 12359   00548E  6E23               	movwf	___flmul@aexp^0,c
 12360   005490  EF53  F02A         	goto	l1188
 12361   005494                     l1189:
 12362   005494  A025               	btfss	___flmul@prod^0,0,c
 12363   005496  EF4F  F02A         	goto	u3511
 12364   00549A  EF51  F02A         	goto	u3510
 12365   00549E                     u3511:
 12366   00549E  EF53  F02A         	goto	l1188
 12367   0054A2                     u3510:
 12368   0054A2  EF46  F02A         	goto	l3969
 12369   0054A6                     l1188:
 12370   0054A6  5023               	movf	___flmul@aexp^0,w,c
 12371   0054A8  B4D8               	btfsc	status,2,c
 12372   0054AA  EF59  F02A         	goto	u3521
 12373   0054AE  EF5B  F02A         	goto	u3520
 12374   0054B2                     u3521:
 12375   0054B2  EF7F  F02A         	goto	l3981
 12376   0054B6                     u3520:
 12377   0054B6  0E01               	movlw	1
 12378   0054B8  2625               	addwf	___flmul@prod^0,f,c
 12379   0054BA  0E00               	movlw	0
 12380   0054BC  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12381   0054BE  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12382   0054C0  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12383   0054C2  A028               	btfss	(___flmul@prod+3)^0,0,c
 12384   0054C4  EF66  F02A         	goto	u3531
 12385   0054C8  EF68  F02A         	goto	u3530
 12386   0054CC                     u3531:
 12387   0054CC  EF7F  F02A         	goto	l3981
 12388   0054D0                     u3530:
 12389   0054D0  C025  F01A         	movff	___flmul@prod,??___flmul
 12390   0054D4  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
 12391   0054D8  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
 12392   0054DC  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
 12393   0054E0  341D               	rlcf	(??___flmul+3)^0,w,c
 12394   0054E2  321D               	rrcf	(??___flmul+3)^0,f,c
 12395   0054E4  321C               	rrcf	(??___flmul+2)^0,f,c
 12396   0054E6  321B               	rrcf	(??___flmul+1)^0,f,c
 12397   0054E8  321A               	rrcf	??___flmul^0,f,c
 12398   0054EA  C01A  F025         	movff	??___flmul,___flmul@prod
 12399   0054EE  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
 12400   0054F2  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
 12401   0054F6  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
 12402   0054FA  4A29               	infsnz	___flmul@temp^0,f,c
 12403   0054FC  2A2A               	incf	(___flmul@temp+1)^0,f,c
 12404   0054FE                     l3981:
 12405   0054FE  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 12406   005500  EF8A  F02A         	goto	u3541
 12407   005504  502A               	movf	(___flmul@temp+1)^0,w,c
 12408   005506  E108               	bnz	u3540
 12409   005508  2829               	incf	___flmul@temp^0,w,c
 12410   00550A  A0D8               	btfss	status,0,c
 12411   00550C  EF8A  F02A         	goto	u3541
 12412   005510  EF8C  F02A         	goto	u3540
 12413   005514                     u3541:
 12414   005514  EF96  F02A         	goto	l3985
 12415   005518                     u3540:
 12416   005518  0E00               	movlw	0
 12417   00551A  6E25               	movwf	___flmul@prod^0,c
 12418   00551C  0E00               	movlw	0
 12419   00551E  6E26               	movwf	(___flmul@prod+1)^0,c
 12420   005520  0E80               	movlw	128
 12421   005522  6E27               	movwf	(___flmul@prod+2)^0,c
 12422   005524  0E7F               	movlw	127
 12423   005526  6E28               	movwf	(___flmul@prod+3)^0,c
 12424   005528  EFC4  F02A         	goto	l3997
 12425   00552C                     l3985:
 12426   00552C  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 12427   00552E  EFA3  F02A         	goto	u3550
 12428   005532  502A               	movf	(___flmul@temp+1)^0,w,c
 12429   005534  E106               	bnz	u3551
 12430   005536  0429               	decf	___flmul@temp^0,w,c
 12431   005538  B0D8               	btfsc	status,0,c
 12432   00553A  EFA1  F02A         	goto	u3551
 12433   00553E  EFA3  F02A         	goto	u3550
 12434   005542                     u3551:
 12435   005542  EFAF  F02A         	goto	l1196
 12436   005546                     u3550:
 12437   005546  0E00               	movlw	0
 12438   005548  6E25               	movwf	___flmul@prod^0,c
 12439   00554A  0E00               	movlw	0
 12440   00554C  6E26               	movwf	(___flmul@prod+1)^0,c
 12441   00554E  0E00               	movlw	0
 12442   005550  6E27               	movwf	(___flmul@prod+2)^0,c
 12443   005552  0E00               	movlw	0
 12444   005554  6E28               	movwf	(___flmul@prod+3)^0,c
 12445   005556  0E00               	movlw	0
 12446   005558  6E1E               	movwf	___flmul@sign^0,c
 12447   00555A  EFC4  F02A         	goto	l3997
 12448   00555E                     l1196:
 12449   00555E  C029  F024         	movff	___flmul@temp,___flmul@bexp
 12450   005562  0EFF               	movlw	255
 12451   005564  1625               	andwf	___flmul@prod^0,f,c
 12452   005566  0EFF               	movlw	255
 12453   005568  1626               	andwf	(___flmul@prod+1)^0,f,c
 12454   00556A  0E7F               	movlw	127
 12455   00556C  1627               	andwf	(___flmul@prod+2)^0,f,c
 12456   00556E  0E00               	movlw	0
 12457   005570  1628               	andwf	(___flmul@prod+3)^0,f,c
 12458   005572  A024               	btfss	___flmul@bexp^0,0,c
 12459   005574  EFBE  F02A         	goto	u3561
 12460   005578  EFC0  F02A         	goto	u3560
 12461   00557C                     u3561:
 12462   00557C  EFC1  F02A         	goto	l3995
 12463   005580                     u3560:
 12464   005580  8E27               	bsf	(___flmul@prod+2)^0,7,c
 12465   005582                     l3995:
 12466   005582  90D8               	bcf	status,0,c
 12467   005584  3024               	rrcf	___flmul@bexp^0,w,c
 12468   005586  6E28               	movwf	(___flmul@prod+3)^0,c
 12469   005588                     l3997:
 12470   005588  501E               	movf	___flmul@sign^0,w,c
 12471   00558A  1228               	iorwf	(___flmul@prod+3)^0,f,c
 12472   00558C  C025  F012         	movff	___flmul@prod,?___flmul
 12473   005590  C026  F013         	movff	___flmul@prod+1,?___flmul+1
 12474   005594  C027  F014         	movff	___flmul@prod+2,?___flmul+2
 12475   005598  C028  F015         	movff	___flmul@prod+3,?___flmul+3
 12476   00559C                     l1183:
 12477   00559C  0012               	return		;funcret
 12478   00559E                     __end_of___flmul:
 12479                           	callstack 0
 12480                           
 12481 ;; *************** function ___xxtofl *****************
 12482 ;; Defined at:
 12483 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 12484 ;; Parameters:    Size  Location     Type
 12485 ;;  sign            1    wreg     unsigned char 
 12486 ;;  val             4    1[COMRAM] long 
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;  sign            1    9[COMRAM] unsigned char 
 12489 ;;  arg             4   11[COMRAM] unsigned long 
 12490 ;;  exp             1   10[COMRAM] unsigned char 
 12491 ;; Return value:  Size  Location     Type
 12492 ;;                  4    1[COMRAM] unsigned char 
 12493 ;; Registers used:
 12494 ;;		wreg, status,2, status,0
 12495 ;; Tracked objects:
 12496 ;;		On entry : 0/0
 12497 ;;		On exit  : 0/0
 12498 ;;		Unchanged: 0/0
 12499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12501 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12502 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12503 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12504 ;;Total ram usage:       14 bytes
 12505 ;; Hardware stack levels used: 1
 12506 ;; Hardware stack levels required when called: 2
 12507 ;; This function calls:
 12508 ;;		Nothing
 12509 ;; This function is called by:
 12510 ;;		_decide_action
 12511 ;;		_powf
 12512 ;; This function uses a non-reentrant model
 12513 ;;
 12514                           
 12515                           	psect	text33
 12516   006114                     __ptext33:
 12517                           	callstack 0
 12518   006114                     ___xxtofl:
 12519                           	callstack 26
 12520                           
 12521                           ;incstack = 0
 12522                           ;___xxtofl@sign stored from wreg
 12523   006114  6E0A               	movwf	___xxtofl@sign^0,c
 12524   006116  500A               	movf	___xxtofl@sign^0,w,c
 12525   006118  B4D8               	btfsc	status,2,c
 12526   00611A  EF91  F030         	goto	u4221
 12527   00611E  EF93  F030         	goto	u4220
 12528   006122                     u4221:
 12529   006122  EFB5  F030         	goto	l1220
 12530   006126                     u4220:
 12531   006126  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 12532   006128  EF9A  F030         	goto	u4230
 12533   00612C  EF98  F030         	goto	u4231
 12534   006130                     u4231:
 12535   006130  EFB5  F030         	goto	l1220
 12536   006134                     u4230:
 12537   006134  C002  F006         	movff	___xxtofl@val,??___xxtofl
 12538   006138  C003  F007         	movff	___xxtofl@val+1,??___xxtofl+1
 12539   00613C  C004  F008         	movff	___xxtofl@val+2,??___xxtofl+2
 12540   006140  C005  F009         	movff	___xxtofl@val+3,??___xxtofl+3
 12541   006144  1E06               	comf	??___xxtofl^0,f,c
 12542   006146  1E07               	comf	(??___xxtofl+1)^0,f,c
 12543   006148  1E08               	comf	(??___xxtofl+2)^0,f,c
 12544   00614A  1E09               	comf	(??___xxtofl+3)^0,f,c
 12545   00614C  2A06               	incf	??___xxtofl^0,f,c
 12546   00614E  0E00               	movlw	0
 12547   006150  2207               	addwfc	(??___xxtofl+1)^0,f,c
 12548   006152  2208               	addwfc	(??___xxtofl+2)^0,f,c
 12549   006154  2209               	addwfc	(??___xxtofl+3)^0,f,c
 12550   006156  C006  F00C         	movff	??___xxtofl,___xxtofl@arg
 12551   00615A  C007  F00D         	movff	??___xxtofl+1,___xxtofl@arg+1
 12552   00615E  C008  F00E         	movff	??___xxtofl+2,___xxtofl@arg+2
 12553   006162  C009  F00F         	movff	??___xxtofl+3,___xxtofl@arg+3
 12554   006166  EFBD  F030         	goto	l4397
 12555   00616A                     l1220:
 12556   00616A  C002  F00C         	movff	___xxtofl@val,___xxtofl@arg
 12557   00616E  C003  F00D         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12558   006172  C004  F00E         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12559   006176  C005  F00F         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12560   00617A                     l4397:
 12561   00617A  5002               	movf	___xxtofl@val^0,w,c
 12562   00617C  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 12563   00617E  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 12564   006180  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 12565   006182  A4D8               	btfss	status,2,c
 12566   006184  EFC6  F030         	goto	u4241
 12567   006188  EFC8  F030         	goto	u4240
 12568   00618C                     u4241:
 12569   00618C  EFD2  F030         	goto	l4403
 12570   006190                     u4240:
 12571   006190  0E00               	movlw	0
 12572   006192  6E02               	movwf	?___xxtofl^0,c
 12573   006194  0E00               	movlw	0
 12574   006196  6E03               	movwf	(?___xxtofl+1)^0,c
 12575   006198  0E00               	movlw	0
 12576   00619A  6E04               	movwf	(?___xxtofl+2)^0,c
 12577   00619C  0E00               	movlw	0
 12578   00619E  6E05               	movwf	(?___xxtofl+3)^0,c
 12579   0061A0  EF63  F031         	goto	l1223
 12580   0061A4                     l4403:
 12581   0061A4  0E96               	movlw	150
 12582   0061A6  6E0B               	movwf	___xxtofl@exp^0,c
 12583   0061A8  EFDC  F030         	goto	l4407
 12584   0061AC                     l4405:
 12585   0061AC  2A0B               	incf	___xxtofl@exp^0,f,c
 12586   0061AE  90D8               	bcf	status,0,c
 12587   0061B0  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 12588   0061B2  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 12589   0061B4  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 12590   0061B6  320C               	rrcf	___xxtofl@arg^0,f,c
 12591   0061B8                     l4407:
 12592   0061B8  0E00               	movlw	0
 12593   0061BA  140C               	andwf	___xxtofl@arg^0,w,c
 12594   0061BC  6E06               	movwf	??___xxtofl^0,c
 12595   0061BE  0E00               	movlw	0
 12596   0061C0  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 12597   0061C2  6E07               	movwf	(??___xxtofl+1)^0,c
 12598   0061C4  0E00               	movlw	0
 12599   0061C6  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 12600   0061C8  6E08               	movwf	(??___xxtofl+2)^0,c
 12601   0061CA  0EFE               	movlw	254
 12602   0061CC  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 12603   0061CE  6E09               	movwf	(??___xxtofl+3)^0,c
 12604   0061D0  5006               	movf	??___xxtofl^0,w,c
 12605   0061D2  1007               	iorwf	(??___xxtofl+1)^0,w,c
 12606   0061D4  1008               	iorwf	(??___xxtofl+2)^0,w,c
 12607   0061D6  1009               	iorwf	(??___xxtofl+3)^0,w,c
 12608   0061D8  A4D8               	btfss	status,2,c
 12609   0061DA  EFF1  F030         	goto	u4251
 12610   0061DE  EFF3  F030         	goto	u4250
 12611   0061E2                     u4251:
 12612   0061E2  EFD6  F030         	goto	l4405
 12613   0061E6                     u4250:
 12614   0061E6  EF01  F031         	goto	l1227
 12615   0061EA                     l4409:
 12616   0061EA  2A0B               	incf	___xxtofl@exp^0,f,c
 12617   0061EC  0E01               	movlw	1
 12618   0061EE  260C               	addwf	___xxtofl@arg^0,f,c
 12619   0061F0  0E00               	movlw	0
 12620   0061F2  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 12621   0061F4  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 12622   0061F6  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 12623   0061F8  90D8               	bcf	status,0,c
 12624   0061FA  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 12625   0061FC  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 12626   0061FE  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 12627   006200  320C               	rrcf	___xxtofl@arg^0,f,c
 12628   006202                     l1227:
 12629   006202  0E00               	movlw	0
 12630   006204  140C               	andwf	___xxtofl@arg^0,w,c
 12631   006206  6E06               	movwf	??___xxtofl^0,c
 12632   006208  0E00               	movlw	0
 12633   00620A  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 12634   00620C  6E07               	movwf	(??___xxtofl+1)^0,c
 12635   00620E  0E00               	movlw	0
 12636   006210  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 12637   006212  6E08               	movwf	(??___xxtofl+2)^0,c
 12638   006214  0EFF               	movlw	255
 12639   006216  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 12640   006218  6E09               	movwf	(??___xxtofl+3)^0,c
 12641   00621A  5006               	movf	??___xxtofl^0,w,c
 12642   00621C  1007               	iorwf	(??___xxtofl+1)^0,w,c
 12643   00621E  1008               	iorwf	(??___xxtofl+2)^0,w,c
 12644   006220  1009               	iorwf	(??___xxtofl+3)^0,w,c
 12645   006222  A4D8               	btfss	status,2,c
 12646   006224  EF16  F031         	goto	u4261
 12647   006228  EF18  F031         	goto	u4260
 12648   00622C                     u4261:
 12649   00622C  EFF5  F030         	goto	l4409
 12650   006230                     u4260:
 12651   006230  EF20  F031         	goto	l4417
 12652   006234                     l4415:
 12653   006234  060B               	decf	___xxtofl@exp^0,f,c
 12654   006236  90D8               	bcf	status,0,c
 12655   006238  360C               	rlcf	___xxtofl@arg^0,f,c
 12656   00623A  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 12657   00623C  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 12658   00623E  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 12659   006240                     l4417:
 12660   006240  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 12661   006242  EF25  F031         	goto	u4271
 12662   006246  EF27  F031         	goto	u4270
 12663   00624A                     u4271:
 12664   00624A  EF2F  F031         	goto	l1234
 12665   00624E                     u4270:
 12666   00624E  0E02               	movlw	2
 12667   006250  600B               	cpfslt	___xxtofl@exp^0,c
 12668   006252  EF2D  F031         	goto	u4281
 12669   006256  EF2F  F031         	goto	u4280
 12670   00625A                     u4281:
 12671   00625A  EF1A  F031         	goto	l4415
 12672   00625E                     u4280:
 12673   00625E                     l1234:
 12674   00625E  B00B               	btfsc	___xxtofl@exp^0,0,c
 12675   006260  EF34  F031         	goto	u4291
 12676   006264  EF36  F031         	goto	u4290
 12677   006268                     u4291:
 12678   006268  EF37  F031         	goto	l4423
 12679   00626C                     u4290:
 12680   00626C  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 12681   00626E                     l4423:
 12682   00626E  90D8               	bcf	status,0,c
 12683   006270  320B               	rrcf	___xxtofl@exp^0,f,c
 12684   006272  C00B  F006         	movff	___xxtofl@exp,??___xxtofl
 12685   006276  6A07               	clrf	(??___xxtofl+1)^0,c
 12686   006278  6A08               	clrf	(??___xxtofl+2)^0,c
 12687   00627A  6A09               	clrf	(??___xxtofl+3)^0,c
 12688   00627C  C006  F009         	movff	??___xxtofl,??___xxtofl+3
 12689   006280  6A08               	clrf	(??___xxtofl+2)^0,c
 12690   006282  6A07               	clrf	(??___xxtofl+1)^0,c
 12691   006284  6A06               	clrf	??___xxtofl^0,c
 12692   006286  5006               	movf	??___xxtofl^0,w,c
 12693   006288  120C               	iorwf	___xxtofl@arg^0,f,c
 12694   00628A  5007               	movf	(??___xxtofl+1)^0,w,c
 12695   00628C  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 12696   00628E  5008               	movf	(??___xxtofl+2)^0,w,c
 12697   006290  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 12698   006292  5009               	movf	(??___xxtofl+3)^0,w,c
 12699   006294  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 12700   006296  500A               	movf	___xxtofl@sign^0,w,c
 12701   006298  B4D8               	btfsc	status,2,c
 12702   00629A  EF51  F031         	goto	u4301
 12703   00629E  EF53  F031         	goto	u4300
 12704   0062A2                     u4301:
 12705   0062A2  EF5B  F031         	goto	l4433
 12706   0062A6                     u4300:
 12707   0062A6  BE05               	btfsc	(___xxtofl@val+3)^0,7,c
 12708   0062A8  EF5A  F031         	goto	u4310
 12709   0062AC  EF58  F031         	goto	u4311
 12710   0062B0                     u4311:
 12711   0062B0  EF5B  F031         	goto	l4433
 12712   0062B4                     u4310:
 12713   0062B4  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 12714   0062B6                     l4433:
 12715   0062B6  C00C  F002         	movff	___xxtofl@arg,?___xxtofl
 12716   0062BA  C00D  F003         	movff	___xxtofl@arg+1,?___xxtofl+1
 12717   0062BE  C00E  F004         	movff	___xxtofl@arg+2,?___xxtofl+2
 12718   0062C2  C00F  F005         	movff	___xxtofl@arg+3,?___xxtofl+3
 12719   0062C6                     l1223:
 12720   0062C6  0012               	return		;funcret
 12721   0062C8                     __end_of___xxtofl:
 12722                           	callstack 0
 12723                           
 12724 ;; *************** function ___flsub *****************
 12725 ;; Defined at:
 12726 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 12727 ;; Parameters:    Size  Location     Type
 12728 ;;  b               4   67[COMRAM] unsigned char 
 12729 ;;  a               4   71[COMRAM] unsigned char 
 12730 ;; Auto vars:     Size  Location     Type
 12731 ;;		None
 12732 ;; Return value:  Size  Location     Type
 12733 ;;                  4   67[COMRAM] unsigned char 
 12734 ;; Registers used:
 12735 ;;		wreg, status,2, status,0, cstack
 12736 ;; Tracked objects:
 12737 ;;		On entry : 0/0
 12738 ;;		On exit  : 0/0
 12739 ;;		Unchanged: 0/0
 12740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12741 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12744 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12745 ;;Total ram usage:        8 bytes
 12746 ;; Hardware stack levels used: 1
 12747 ;; Hardware stack levels required when called: 3
 12748 ;; This function calls:
 12749 ;;		___fladd
 12750 ;; This function is called by:
 12751 ;;		_decide_action
 12752 ;;		_powf
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755                           
 12756                           	psect	text34
 12757   0072F4                     __ptext34:
 12758                           	callstack 0
 12759   0072F4                     ___flsub:
 12760                           	callstack 25
 12761   0072F4  0E00               	movlw	0
 12762   0072F6  1A48               	xorwf	___flsub@a^0,f,c
 12763   0072F8  0E00               	movlw	0
 12764   0072FA  1A49               	xorwf	(___flsub@a+1)^0,f,c
 12765   0072FC  0E00               	movlw	0
 12766   0072FE  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 12767   007300  0E80               	movlw	128
 12768   007302  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 12769   007304  C044  F002         	movff	___flsub@b,___fladd@b
 12770   007308  C045  F003         	movff	___flsub@b+1,___fladd@b+1
 12771   00730C  C046  F004         	movff	___flsub@b+2,___fladd@b+2
 12772   007310  C047  F005         	movff	___flsub@b+3,___fladd@b+3
 12773   007314  C048  F006         	movff	___flsub@a,___fladd@a
 12774   007318  C049  F007         	movff	___flsub@a+1,___fladd@a+1
 12775   00731C  C04A  F008         	movff	___flsub@a+2,___fladd@a+2
 12776   007320  C04B  F009         	movff	___flsub@a+3,___fladd@a+3
 12777   007324  EC5A  F026         	call	___fladd	;wreg free
 12778   007328  C002  F044         	movff	?___fladd,?___flsub
 12779   00732C  C003  F045         	movff	?___fladd+1,?___flsub+1
 12780   007330  C004  F046         	movff	?___fladd+2,?___flsub+2
 12781   007334  C005  F047         	movff	?___fladd+3,?___flsub+3
 12782   007338  0012               	return		;funcret
 12783   00733A                     __end_of___flsub:
 12784                           	callstack 0
 12785                           
 12786 ;; *************** function ___fladd *****************
 12787 ;; Defined at:
 12788 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 12789 ;; Parameters:    Size  Location     Type
 12790 ;;  b               4    1[COMRAM] unsigned char 
 12791 ;;  a               4    5[COMRAM] unsigned char 
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;  grs             1   16[COMRAM] unsigned char 
 12794 ;;  bexp            1   15[COMRAM] unsigned char 
 12795 ;;  aexp            1   14[COMRAM] unsigned char 
 12796 ;;  signs           1   13[COMRAM] unsigned char 
 12797 ;; Return value:  Size  Location     Type
 12798 ;;                  4    1[COMRAM] unsigned char 
 12799 ;; Registers used:
 12800 ;;		wreg, status,2, status,0
 12801 ;; Tracked objects:
 12802 ;;		On entry : 0/0
 12803 ;;		On exit  : 0/0
 12804 ;;		Unchanged: 0/0
 12805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12806 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12807 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12808 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12809 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12810 ;;Total ram usage:       16 bytes
 12811 ;; Hardware stack levels used: 1
 12812 ;; Hardware stack levels required when called: 2
 12813 ;; This function calls:
 12814 ;;		Nothing
 12815 ;; This function is called by:
 12816 ;;		_decide_action
 12817 ;;		___flsub
 12818 ;;		_powf
 12819 ;; This function uses a non-reentrant model
 12820 ;;
 12821                           
 12822                           	psect	text35
 12823   004CB4                     __ptext35:
 12824                           	callstack 0
 12825   004CB4                     ___fladd:
 12826                           	callstack 25
 12827   004CB4  5005               	movf	(___fladd@b+3)^0,w,c
 12828   004CB6  0B80               	andlw	128
 12829   004CB8  6E0E               	movwf	___fladd@signs^0,c
 12830   004CBA  5005               	movf	(___fladd@b+3)^0,w,c
 12831   004CBC  2405               	addwf	(___fladd@b+3)^0,w,c
 12832   004CBE  6E10               	movwf	___fladd@bexp^0,c
 12833   004CC0  AE04               	btfss	(___fladd@b+2)^0,7,c
 12834   004CC2  EF65  F026         	goto	u2991
 12835   004CC6  EF67  F026         	goto	u2990
 12836   004CCA                     u2991:
 12837   004CCA  EF68  F026         	goto	l3677
 12838   004CCE                     u2990:
 12839   004CCE  8010               	bsf	___fladd@bexp^0,0,c
 12840   004CD0                     l3677:
 12841   004CD0  5010               	movf	___fladd@bexp^0,w,c
 12842   004CD2  B4D8               	btfsc	status,2,c
 12843   004CD4  EF6E  F026         	goto	u3001
 12844   004CD8  EF70  F026         	goto	u3000
 12845   004CDC                     u3001:
 12846   004CDC  EF85  F026         	goto	l3687
 12847   004CE0                     u3000:
 12848   004CE0  2810               	incf	___fladd@bexp^0,w,c
 12849   004CE2  A4D8               	btfss	status,2,c
 12850   004CE4  EF76  F026         	goto	u3011
 12851   004CE8  EF78  F026         	goto	u3010
 12852   004CEC                     u3011:
 12853   004CEC  EF80  F026         	goto	l3683
 12854   004CF0                     u3010:
 12855   004CF0  0E00               	movlw	0
 12856   004CF2  6E02               	movwf	___fladd@b^0,c
 12857   004CF4  0E00               	movlw	0
 12858   004CF6  6E03               	movwf	(___fladd@b+1)^0,c
 12859   004CF8  0E00               	movlw	0
 12860   004CFA  6E04               	movwf	(___fladd@b+2)^0,c
 12861   004CFC  0E00               	movlw	0
 12862   004CFE  6E05               	movwf	(___fladd@b+3)^0,c
 12863   004D00                     l3683:
 12864   004D00  8E04               	bsf	(___fladd@b+2)^0,7,c
 12865   004D02  0E00               	movlw	0
 12866   004D04  6E05               	movwf	(___fladd@b+3)^0,c
 12867   004D06  EF8D  F026         	goto	l3689
 12868   004D0A                     l3687:
 12869   004D0A  0E00               	movlw	0
 12870   004D0C  6E02               	movwf	___fladd@b^0,c
 12871   004D0E  0E00               	movlw	0
 12872   004D10  6E03               	movwf	(___fladd@b+1)^0,c
 12873   004D12  0E00               	movlw	0
 12874   004D14  6E04               	movwf	(___fladd@b+2)^0,c
 12875   004D16  0E00               	movlw	0
 12876   004D18  6E05               	movwf	(___fladd@b+3)^0,c
 12877   004D1A                     l3689:
 12878   004D1A  5009               	movf	(___fladd@a+3)^0,w,c
 12879   004D1C  0B80               	andlw	128
 12880   004D1E  6E0F               	movwf	___fladd@aexp^0,c
 12881   004D20  500E               	movf	___fladd@signs^0,w,c
 12882   004D22  180F               	xorwf	___fladd@aexp^0,w,c
 12883   004D24  B4D8               	btfsc	status,2,c
 12884   004D26  EF97  F026         	goto	u3021
 12885   004D2A  EF99  F026         	goto	u3020
 12886   004D2E                     u3021:
 12887   004D2E  EF9A  F026         	goto	l3695
 12888   004D32                     u3020:
 12889   004D32  8C0E               	bsf	___fladd@signs^0,6,c
 12890   004D34                     l3695:
 12891   004D34  5009               	movf	(___fladd@a+3)^0,w,c
 12892   004D36  2409               	addwf	(___fladd@a+3)^0,w,c
 12893   004D38  6E0F               	movwf	___fladd@aexp^0,c
 12894   004D3A  AE08               	btfss	(___fladd@a+2)^0,7,c
 12895   004D3C  EFA2  F026         	goto	u3031
 12896   004D40  EFA4  F026         	goto	u3030
 12897   004D44                     u3031:
 12898   004D44  EFA5  F026         	goto	l3701
 12899   004D48                     u3030:
 12900   004D48  800F               	bsf	___fladd@aexp^0,0,c
 12901   004D4A                     l3701:
 12902   004D4A  500F               	movf	___fladd@aexp^0,w,c
 12903   004D4C  B4D8               	btfsc	status,2,c
 12904   004D4E  EFAB  F026         	goto	u3041
 12905   004D52  EFAD  F026         	goto	u3040
 12906   004D56                     u3041:
 12907   004D56  EFC2  F026         	goto	l3711
 12908   004D5A                     u3040:
 12909   004D5A  280F               	incf	___fladd@aexp^0,w,c
 12910   004D5C  A4D8               	btfss	status,2,c
 12911   004D5E  EFB3  F026         	goto	u3051
 12912   004D62  EFB5  F026         	goto	u3050
 12913   004D66                     u3051:
 12914   004D66  EFBD  F026         	goto	l3707
 12915   004D6A                     u3050:
 12916   004D6A  0E00               	movlw	0
 12917   004D6C  6E06               	movwf	___fladd@a^0,c
 12918   004D6E  0E00               	movlw	0
 12919   004D70  6E07               	movwf	(___fladd@a+1)^0,c
 12920   004D72  0E00               	movlw	0
 12921   004D74  6E08               	movwf	(___fladd@a+2)^0,c
 12922   004D76  0E00               	movlw	0
 12923   004D78  6E09               	movwf	(___fladd@a+3)^0,c
 12924   004D7A                     l3707:
 12925   004D7A  8E08               	bsf	(___fladd@a+2)^0,7,c
 12926   004D7C  0E00               	movlw	0
 12927   004D7E  6E09               	movwf	(___fladd@a+3)^0,c
 12928   004D80  EFCA  F026         	goto	l3713
 12929   004D84                     l3711:
 12930   004D84  0E00               	movlw	0
 12931   004D86  6E06               	movwf	___fladd@a^0,c
 12932   004D88  0E00               	movlw	0
 12933   004D8A  6E07               	movwf	(___fladd@a+1)^0,c
 12934   004D8C  0E00               	movlw	0
 12935   004D8E  6E08               	movwf	(___fladd@a+2)^0,c
 12936   004D90  0E00               	movlw	0
 12937   004D92  6E09               	movwf	(___fladd@a+3)^0,c
 12938   004D94                     l3713:
 12939   004D94  5010               	movf	___fladd@bexp^0,w,c
 12940   004D96  5C0F               	subwf	___fladd@aexp^0,w,c
 12941   004D98  B0D8               	btfsc	status,0,c
 12942   004D9A  EFD1  F026         	goto	u3061
 12943   004D9E  EFD3  F026         	goto	u3060
 12944   004DA2                     u3061:
 12945   004DA2  EFFA  F026         	goto	l3749
 12946   004DA6                     u3060:
 12947   004DA6  AC0E               	btfss	___fladd@signs^0,6,c
 12948   004DA8  EFD8  F026         	goto	u3071
 12949   004DAC  EFDA  F026         	goto	u3070
 12950   004DB0                     u3071:
 12951   004DB0  EFDC  F026         	goto	l3719
 12952   004DB4                     u3070:
 12953   004DB4  0E80               	movlw	128
 12954   004DB6  1A0E               	xorwf	___fladd@signs^0,f,c
 12955   004DB8                     l3719:
 12956   004DB8  C010  F011         	movff	___fladd@bexp,___fladd@grs
 12957   004DBC  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 12958   004DC0  C011  F00F         	movff	___fladd@grs,___fladd@aexp
 12959   004DC4  C002  F011         	movff	___fladd@b,___fladd@grs
 12960   004DC8  C006  F002         	movff	___fladd@a,___fladd@b
 12961   004DCC  C011  F006         	movff	___fladd@grs,___fladd@a
 12962   004DD0  C003  F011         	movff	___fladd@b+1,___fladd@grs
 12963   004DD4  C007  F003         	movff	___fladd@a+1,___fladd@b+1
 12964   004DD8  C011  F007         	movff	___fladd@grs,___fladd@a+1
 12965   004DDC  C004  F011         	movff	___fladd@b+2,___fladd@grs
 12966   004DE0  C008  F004         	movff	___fladd@a+2,___fladd@b+2
 12967   004DE4  C011  F008         	movff	___fladd@grs,___fladd@a+2
 12968   004DE8  C005  F011         	movff	___fladd@b+3,___fladd@grs
 12969   004DEC  C009  F005         	movff	___fladd@a+3,___fladd@b+3
 12970   004DF0  C011  F009         	movff	___fladd@grs,___fladd@a+3
 12971   004DF4                     l3749:
 12972   004DF4  0E00               	movlw	0
 12973   004DF6  6E11               	movwf	___fladd@grs^0,c
 12974   004DF8  5010               	movf	___fladd@bexp^0,w,c
 12975   004DFA  C00F  F00A         	movff	___fladd@aexp,??___fladd
 12976   004DFE  6A0B               	clrf	(??___fladd+1)^0,c
 12977   004E00  5E0A               	subwf	??___fladd^0,f,c
 12978   004E02  0E00               	movlw	0
 12979   004E04  5A0B               	subwfb	(??___fladd+1)^0,f,c
 12980   004E06  BE0B               	btfsc	(??___fladd+1)^0,7,c
 12981   004E08  EF0F  F027         	goto	u3081
 12982   004E0C  500B               	movf	(??___fladd+1)^0,w,c
 12983   004E0E  E109               	bnz	u3080
 12984   004E10  0E1A               	movlw	26
 12985   004E12  5C0A               	subwf	??___fladd^0,w,c
 12986   004E14  A0D8               	btfss	status,0,c
 12987   004E16  EF0F  F027         	goto	u3081
 12988   004E1A  EF11  F027         	goto	u3080
 12989   004E1E                     u3081:
 12990   004E1E  EF48  F027         	goto	l1094
 12991   004E22                     u3080:
 12992   004E22  5002               	movf	___fladd@b^0,w,c
 12993   004E24  1003               	iorwf	(___fladd@b+1)^0,w,c
 12994   004E26  1004               	iorwf	(___fladd@b+2)^0,w,c
 12995   004E28  1005               	iorwf	(___fladd@b+3)^0,w,c
 12996   004E2A  A4D8               	btfss	status,2,c
 12997   004E2C  EF1A  F027         	goto	u3091
 12998   004E30  EF1D  F027         	goto	u3090
 12999   004E34                     u3091:
 13000   004E34  0E01               	movlw	1
 13001   004E36  EF1E  F027         	goto	u3100
 13002   004E3A                     u3090:
 13003   004E3A  0E00               	movlw	0
 13004   004E3C                     u3100:
 13005   004E3C  6E11               	movwf	___fladd@grs^0,c
 13006   004E3E  0E00               	movlw	0
 13007   004E40  6E02               	movwf	___fladd@b^0,c
 13008   004E42  0E00               	movlw	0
 13009   004E44  6E03               	movwf	(___fladd@b+1)^0,c
 13010   004E46  0E00               	movlw	0
 13011   004E48  6E04               	movwf	(___fladd@b+2)^0,c
 13012   004E4A  0E00               	movlw	0
 13013   004E4C  6E05               	movwf	(___fladd@b+3)^0,c
 13014   004E4E  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 13015   004E52  EF51  F027         	goto	l1093
 13016   004E56                     l1095:
 13017   004E56  A011               	btfss	___fladd@grs^0,0,c
 13018   004E58  EF30  F027         	goto	u3111
 13019   004E5C  EF32  F027         	goto	u3110
 13020   004E60                     u3111:
 13021   004E60  EF38  F027         	goto	l3761
 13022   004E64                     u3110:
 13023   004E64  90D8               	bcf	status,0,c
 13024   004E66  3011               	rrcf	___fladd@grs^0,w,c
 13025   004E68  0901               	iorlw	1
 13026   004E6A  6E11               	movwf	___fladd@grs^0,c
 13027   004E6C  EF3A  F027         	goto	l3763
 13028   004E70                     l3761:
 13029   004E70  90D8               	bcf	status,0,c
 13030   004E72  3211               	rrcf	___fladd@grs^0,f,c
 13031   004E74                     l3763:
 13032   004E74  A002               	btfss	___fladd@b^0,0,c
 13033   004E76  EF3F  F027         	goto	u3121
 13034   004E7A  EF41  F027         	goto	u3120
 13035   004E7E                     u3121:
 13036   004E7E  EF42  F027         	goto	l3767
 13037   004E82                     u3120:
 13038   004E82  8E11               	bsf	___fladd@grs^0,7,c
 13039   004E84                     l3767:
 13040   004E84  3405               	rlcf	(___fladd@b+3)^0,w,c
 13041   004E86  3205               	rrcf	(___fladd@b+3)^0,f,c
 13042   004E88  3204               	rrcf	(___fladd@b+2)^0,f,c
 13043   004E8A  3203               	rrcf	(___fladd@b+1)^0,f,c
 13044   004E8C  3202               	rrcf	___fladd@b^0,f,c
 13045   004E8E  2A10               	incf	___fladd@bexp^0,f,c
 13046   004E90                     l1094:
 13047   004E90  500F               	movf	___fladd@aexp^0,w,c
 13048   004E92  5C10               	subwf	___fladd@bexp^0,w,c
 13049   004E94  A0D8               	btfss	status,0,c
 13050   004E96  EF4F  F027         	goto	u3131
 13051   004E9A  EF51  F027         	goto	u3130
 13052   004E9E                     u3131:
 13053   004E9E  EF2B  F027         	goto	l1095
 13054   004EA2                     u3130:
 13055   004EA2                     l1093:
 13056   004EA2  BC0E               	btfsc	___fladd@signs^0,6,c
 13057   004EA4  EF56  F027         	goto	u3141
 13058   004EA8  EF58  F027         	goto	u3140
 13059   004EAC                     u3141:
 13060   004EAC  EF98  F027         	goto	l3795
 13061   004EB0                     u3140:
 13062   004EB0  5010               	movf	___fladd@bexp^0,w,c
 13063   004EB2  A4D8               	btfss	status,2,c
 13064   004EB4  EF5E  F027         	goto	u3151
 13065   004EB8  EF60  F027         	goto	u3150
 13066   004EBC                     u3151:
 13067   004EBC  EF6A  F027         	goto	l3777
 13068   004EC0                     u3150:
 13069   004EC0  0E00               	movlw	0
 13070   004EC2  6E02               	movwf	?___fladd^0,c
 13071   004EC4  0E00               	movlw	0
 13072   004EC6  6E03               	movwf	(?___fladd+1)^0,c
 13073   004EC8  0E00               	movlw	0
 13074   004ECA  6E04               	movwf	(?___fladd+2)^0,c
 13075   004ECC  0E00               	movlw	0
 13076   004ECE  6E05               	movwf	(?___fladd+3)^0,c
 13077   004ED0  EFB9  F028         	goto	l1102
 13078   004ED4                     l3777:
 13079   004ED4  5006               	movf	___fladd@a^0,w,c
 13080   004ED6  2602               	addwf	___fladd@b^0,f,c
 13081   004ED8  5007               	movf	(___fladd@a+1)^0,w,c
 13082   004EDA  2203               	addwfc	(___fladd@b+1)^0,f,c
 13083   004EDC  5008               	movf	(___fladd@a+2)^0,w,c
 13084   004EDE  2204               	addwfc	(___fladd@b+2)^0,f,c
 13085   004EE0  5009               	movf	(___fladd@a+3)^0,w,c
 13086   004EE2  2205               	addwfc	(___fladd@b+3)^0,f,c
 13087   004EE4  A005               	btfss	(___fladd@b+3)^0,0,c
 13088   004EE6  EF77  F027         	goto	u3161
 13089   004EEA  EF79  F027         	goto	u3160
 13090   004EEE                     u3161:
 13091   004EEE  EF25  F028         	goto	l3831
 13092   004EF2                     u3160:
 13093   004EF2  A011               	btfss	___fladd@grs^0,0,c
 13094   004EF4  EF7E  F027         	goto	u3171
 13095   004EF8  EF80  F027         	goto	u3170
 13096   004EFC                     u3171:
 13097   004EFC  EF86  F027         	goto	l3785
 13098   004F00                     u3170:
 13099   004F00  90D8               	bcf	status,0,c
 13100   004F02  3011               	rrcf	___fladd@grs^0,w,c
 13101   004F04  0901               	iorlw	1
 13102   004F06  6E11               	movwf	___fladd@grs^0,c
 13103   004F08  EF88  F027         	goto	l3787
 13104   004F0C                     l3785:
 13105   004F0C  90D8               	bcf	status,0,c
 13106   004F0E  3211               	rrcf	___fladd@grs^0,f,c
 13107   004F10                     l3787:
 13108   004F10  A002               	btfss	___fladd@b^0,0,c
 13109   004F12  EF8D  F027         	goto	u3181
 13110   004F16  EF8F  F027         	goto	u3180
 13111   004F1A                     u3181:
 13112   004F1A  EF90  F027         	goto	l3791
 13113   004F1E                     u3180:
 13114   004F1E  8E11               	bsf	___fladd@grs^0,7,c
 13115   004F20                     l3791:
 13116   004F20  3405               	rlcf	(___fladd@b+3)^0,w,c
 13117   004F22  3205               	rrcf	(___fladd@b+3)^0,f,c
 13118   004F24  3204               	rrcf	(___fladd@b+2)^0,f,c
 13119   004F26  3203               	rrcf	(___fladd@b+1)^0,f,c
 13120   004F28  3202               	rrcf	___fladd@b^0,f,c
 13121   004F2A  2A10               	incf	___fladd@bexp^0,f,c
 13122   004F2C  EF25  F028         	goto	l3831
 13123   004F30                     l3795:
 13124   004F30  5006               	movf	___fladd@a^0,w,c
 13125   004F32  5C02               	subwf	___fladd@b^0,w,c
 13126   004F34  5007               	movf	(___fladd@a+1)^0,w,c
 13127   004F36  5803               	subwfb	(___fladd@b+1)^0,w,c
 13128   004F38  5008               	movf	(___fladd@a+2)^0,w,c
 13129   004F3A  5804               	subwfb	(___fladd@b+2)^0,w,c
 13130   004F3C  5005               	movf	(___fladd@b+3)^0,w,c
 13131   004F3E  0A80               	xorlw	128
 13132   004F40  6E0A               	movwf	??___fladd^0,c
 13133   004F42  5009               	movf	(___fladd@a+3)^0,w,c
 13134   004F44  0A80               	xorlw	128
 13135   004F46  580A               	subwfb	??___fladd^0,w,c
 13136   004F48  B0D8               	btfsc	status,0,c
 13137   004F4A  EFA9  F027         	goto	u3191
 13138   004F4E  EFAB  F027         	goto	u3190
 13139   004F52                     u3191:
 13140   004F52  EFD6  F027         	goto	l3805
 13141   004F56                     u3190:
 13142   004F56  5002               	movf	___fladd@b^0,w,c
 13143   004F58  5C06               	subwf	___fladd@a^0,w,c
 13144   004F5A  6E0A               	movwf	??___fladd^0,c
 13145   004F5C  5003               	movf	(___fladd@b+1)^0,w,c
 13146   004F5E  5807               	subwfb	(___fladd@a+1)^0,w,c
 13147   004F60  6E0B               	movwf	(??___fladd+1)^0,c
 13148   004F62  5004               	movf	(___fladd@b+2)^0,w,c
 13149   004F64  5808               	subwfb	(___fladd@a+2)^0,w,c
 13150   004F66  6E0C               	movwf	(??___fladd+2)^0,c
 13151   004F68  5005               	movf	(___fladd@b+3)^0,w,c
 13152   004F6A  5809               	subwfb	(___fladd@a+3)^0,w,c
 13153   004F6C  6E0D               	movwf	(??___fladd+3)^0,c
 13154   004F6E  0EFF               	movlw	255
 13155   004F70  240A               	addwf	??___fladd^0,w,c
 13156   004F72  6E02               	movwf	___fladd@b^0,c
 13157   004F74  0EFF               	movlw	255
 13158   004F76  200B               	addwfc	(??___fladd+1)^0,w,c
 13159   004F78  6E03               	movwf	(___fladd@b+1)^0,c
 13160   004F7A  0EFF               	movlw	255
 13161   004F7C  200C               	addwfc	(??___fladd+2)^0,w,c
 13162   004F7E  6E04               	movwf	(___fladd@b+2)^0,c
 13163   004F80  0EFF               	movlw	255
 13164   004F82  200D               	addwfc	(??___fladd+3)^0,w,c
 13165   004F84  6E05               	movwf	(___fladd@b+3)^0,c
 13166   004F86  0E80               	movlw	128
 13167   004F88  1A0E               	xorwf	___fladd@signs^0,f,c
 13168   004F8A  6C11               	negf	___fladd@grs^0,c
 13169   004F8C  5011               	movf	___fladd@grs^0,w,c
 13170   004F8E  A4D8               	btfss	status,2,c
 13171   004F90  EFCC  F027         	goto	u3201
 13172   004F94  EFCE  F027         	goto	u3200
 13173   004F98                     u3201:
 13174   004F98  EFDE  F027         	goto	l1110
 13175   004F9C                     u3200:
 13176   004F9C  0E01               	movlw	1
 13177   004F9E  2602               	addwf	___fladd@b^0,f,c
 13178   004FA0  0E00               	movlw	0
 13179   004FA2  2203               	addwfc	(___fladd@b+1)^0,f,c
 13180   004FA4  2204               	addwfc	(___fladd@b+2)^0,f,c
 13181   004FA6  2205               	addwfc	(___fladd@b+3)^0,f,c
 13182   004FA8  EFDE  F027         	goto	l1110
 13183   004FAC                     l3805:
 13184   004FAC  5006               	movf	___fladd@a^0,w,c
 13185   004FAE  5E02               	subwf	___fladd@b^0,f,c
 13186   004FB0  5007               	movf	(___fladd@a+1)^0,w,c
 13187   004FB2  5A03               	subwfb	(___fladd@b+1)^0,f,c
 13188   004FB4  5008               	movf	(___fladd@a+2)^0,w,c
 13189   004FB6  5A04               	subwfb	(___fladd@b+2)^0,f,c
 13190   004FB8  5009               	movf	(___fladd@a+3)^0,w,c
 13191   004FBA  5A05               	subwfb	(___fladd@b+3)^0,f,c
 13192   004FBC                     l1110:
 13193   004FBC  5002               	movf	___fladd@b^0,w,c
 13194   004FBE  1003               	iorwf	(___fladd@b+1)^0,w,c
 13195   004FC0  1004               	iorwf	(___fladd@b+2)^0,w,c
 13196   004FC2  1005               	iorwf	(___fladd@b+3)^0,w,c
 13197   004FC4  A4D8               	btfss	status,2,c
 13198   004FC6  EFE7  F027         	goto	u3211
 13199   004FCA  EFE9  F027         	goto	u3210
 13200   004FCE                     u3211:
 13201   004FCE  EF1E  F028         	goto	l3829
 13202   004FD2                     u3210:
 13203   004FD2  5011               	movf	___fladd@grs^0,w,c
 13204   004FD4  A4D8               	btfss	status,2,c
 13205   004FD6  EFEF  F027         	goto	u3221
 13206   004FDA  EFF1  F027         	goto	u3220
 13207   004FDE                     u3221:
 13208   004FDE  EF1E  F028         	goto	l3829
 13209   004FE2                     u3220:
 13210   004FE2  0E00               	movlw	0
 13211   004FE4  6E02               	movwf	?___fladd^0,c
 13212   004FE6  0E00               	movlw	0
 13213   004FE8  6E03               	movwf	(?___fladd+1)^0,c
 13214   004FEA  0E00               	movlw	0
 13215   004FEC  6E04               	movwf	(?___fladd+2)^0,c
 13216   004FEE  0E00               	movlw	0
 13217   004FF0  6E05               	movwf	(?___fladd+3)^0,c
 13218   004FF2  EFB9  F028         	goto	l1102
 13219   004FF6                     l3813:
 13220   004FF6  90D8               	bcf	status,0,c
 13221   004FF8  3602               	rlcf	___fladd@b^0,f,c
 13222   004FFA  3603               	rlcf	(___fladd@b+1)^0,f,c
 13223   004FFC  3604               	rlcf	(___fladd@b+2)^0,f,c
 13224   004FFE  3605               	rlcf	(___fladd@b+3)^0,f,c
 13225   005000  AE11               	btfss	___fladd@grs^0,7,c
 13226   005002  EF05  F028         	goto	u3231
 13227   005006  EF07  F028         	goto	u3230
 13228   00500A                     u3231:
 13229   00500A  EF08  F028         	goto	l3819
 13230   00500E                     u3230:
 13231   00500E  8002               	bsf	___fladd@b^0,0,c
 13232   005010                     l3819:
 13233   005010  A011               	btfss	___fladd@grs^0,0,c
 13234   005012  EF0D  F028         	goto	u3241
 13235   005016  EF0F  F028         	goto	u3240
 13236   00501A                     u3241:
 13237   00501A  EF13  F028         	goto	l3823
 13238   00501E                     u3240:
 13239   00501E  80D8               	bsf	status,0,c
 13240   005020  3611               	rlcf	___fladd@grs^0,f,c
 13241   005022  EF15  F028         	goto	l3825
 13242   005026                     l3823:
 13243   005026  90D8               	bcf	status,0,c
 13244   005028  3611               	rlcf	___fladd@grs^0,f,c
 13245   00502A                     l3825:
 13246   00502A  5010               	movf	___fladd@bexp^0,w,c
 13247   00502C  B4D8               	btfsc	status,2,c
 13248   00502E  EF1B  F028         	goto	u3251
 13249   005032  EF1D  F028         	goto	u3250
 13250   005036                     u3251:
 13251   005036  EF1E  F028         	goto	l3829
 13252   00503A                     u3250:
 13253   00503A  0610               	decf	___fladd@bexp^0,f,c
 13254   00503C                     l3829:
 13255   00503C  AE04               	btfss	(___fladd@b+2)^0,7,c
 13256   00503E  EF23  F028         	goto	u3261
 13257   005042  EF25  F028         	goto	u3260
 13258   005046                     u3261:
 13259   005046  EFFB  F027         	goto	l3813
 13260   00504A                     u3260:
 13261   00504A                     l3831:
 13262   00504A  0E00               	movlw	0
 13263   00504C  6E0F               	movwf	___fladd@aexp^0,c
 13264   00504E  AE11               	btfss	___fladd@grs^0,7,c
 13265   005050  EF2C  F028         	goto	u3271
 13266   005054  EF2E  F028         	goto	u3270
 13267   005058                     u3271:
 13268   005058  EF46  F028         	goto	l1119
 13269   00505C                     u3270:
 13270   00505C  C011  F00A         	movff	___fladd@grs,??___fladd
 13271   005060  0E7F               	movlw	127
 13272   005062  160A               	andwf	??___fladd^0,f,c
 13273   005064  B4D8               	btfsc	status,2,c
 13274   005066  EF37  F028         	goto	u3281
 13275   00506A  EF39  F028         	goto	u3280
 13276   00506E                     u3281:
 13277   00506E  EF3D  F028         	goto	l1120
 13278   005072                     u3280:
 13279   005072                     l3837:
 13280   005072  0E01               	movlw	1
 13281   005074  6E0F               	movwf	___fladd@aexp^0,c
 13282   005076  EF46  F028         	goto	l1119
 13283   00507A                     l1120:
 13284   00507A  A002               	btfss	___fladd@b^0,0,c
 13285   00507C  EF42  F028         	goto	u3291
 13286   005080  EF44  F028         	goto	u3290
 13287   005084                     u3291:
 13288   005084  EF46  F028         	goto	l1119
 13289   005088                     u3290:
 13290   005088  EF39  F028         	goto	l3837
 13291   00508C                     l1119:
 13292   00508C  500F               	movf	___fladd@aexp^0,w,c
 13293   00508E  B4D8               	btfsc	status,2,c
 13294   005090  EF4C  F028         	goto	u3301
 13295   005094  EF4E  F028         	goto	u3300
 13296   005098                     u3301:
 13297   005098  EF79  F028         	goto	l3849
 13298   00509C                     u3300:
 13299   00509C  0E01               	movlw	1
 13300   00509E  2602               	addwf	___fladd@b^0,f,c
 13301   0050A0  0E00               	movlw	0
 13302   0050A2  2203               	addwfc	(___fladd@b+1)^0,f,c
 13303   0050A4  2204               	addwfc	(___fladd@b+2)^0,f,c
 13304   0050A6  2205               	addwfc	(___fladd@b+3)^0,f,c
 13305   0050A8  A005               	btfss	(___fladd@b+3)^0,0,c
 13306   0050AA  EF59  F028         	goto	u3311
 13307   0050AE  EF5B  F028         	goto	u3310
 13308   0050B2                     u3311:
 13309   0050B2  EF79  F028         	goto	l3849
 13310   0050B6                     u3310:
 13311   0050B6  C002  F00A         	movff	___fladd@b,??___fladd
 13312   0050BA  C003  F00B         	movff	___fladd@b+1,??___fladd+1
 13313   0050BE  C004  F00C         	movff	___fladd@b+2,??___fladd+2
 13314   0050C2  C005  F00D         	movff	___fladd@b+3,??___fladd+3
 13315   0050C6  340D               	rlcf	(??___fladd+3)^0,w,c
 13316   0050C8  320D               	rrcf	(??___fladd+3)^0,f,c
 13317   0050CA  320C               	rrcf	(??___fladd+2)^0,f,c
 13318   0050CC  320B               	rrcf	(??___fladd+1)^0,f,c
 13319   0050CE  320A               	rrcf	??___fladd^0,f,c
 13320   0050D0  C00A  F002         	movff	??___fladd,___fladd@b
 13321   0050D4  C00B  F003         	movff	??___fladd+1,___fladd@b+1
 13322   0050D8  C00C  F004         	movff	??___fladd+2,___fladd@b+2
 13323   0050DC  C00D  F005         	movff	??___fladd+3,___fladd@b+3
 13324   0050E0  2810               	incf	___fladd@bexp^0,w,c
 13325   0050E2  B4D8               	btfsc	status,2,c
 13326   0050E4  EF76  F028         	goto	u3321
 13327   0050E8  EF78  F028         	goto	u3320
 13328   0050EC                     u3321:
 13329   0050EC  EF79  F028         	goto	l3849
 13330   0050F0                     u3320:
 13331   0050F0  2A10               	incf	___fladd@bexp^0,f,c
 13332   0050F2                     l3849:
 13333   0050F2  2810               	incf	___fladd@bexp^0,w,c
 13334   0050F4  B4D8               	btfsc	status,2,c
 13335   0050F6  EF7F  F028         	goto	u3331
 13336   0050FA  EF81  F028         	goto	u3330
 13337   0050FE                     u3331:
 13338   0050FE  EF89  F028         	goto	l3853
 13339   005102                     u3330:
 13340   005102  5010               	movf	___fladd@bexp^0,w,c
 13341   005104  A4D8               	btfss	status,2,c
 13342   005106  EF87  F028         	goto	u3341
 13343   00510A  EF89  F028         	goto	u3340
 13344   00510E                     u3341:
 13345   00510E  EF9B  F028         	goto	l3857
 13346   005112                     u3340:
 13347   005112                     l3853:
 13348   005112  0E00               	movlw	0
 13349   005114  6E02               	movwf	___fladd@b^0,c
 13350   005116  0E00               	movlw	0
 13351   005118  6E03               	movwf	(___fladd@b+1)^0,c
 13352   00511A  0E00               	movlw	0
 13353   00511C  6E04               	movwf	(___fladd@b+2)^0,c
 13354   00511E  0E00               	movlw	0
 13355   005120  6E05               	movwf	(___fladd@b+3)^0,c
 13356   005122  5010               	movf	___fladd@bexp^0,w,c
 13357   005124  A4D8               	btfss	status,2,c
 13358   005126  EF97  F028         	goto	u3351
 13359   00512A  EF99  F028         	goto	u3350
 13360   00512E                     u3351:
 13361   00512E  EF9B  F028         	goto	l3857
 13362   005132                     u3350:
 13363   005132  0E00               	movlw	0
 13364   005134  6E0E               	movwf	___fladd@signs^0,c
 13365   005136                     l3857:
 13366   005136  A010               	btfss	___fladd@bexp^0,0,c
 13367   005138  EFA0  F028         	goto	u3361
 13368   00513C  EFA2  F028         	goto	u3360
 13369   005140                     u3361:
 13370   005140  EFA5  F028         	goto	l3861
 13371   005144                     u3360:
 13372   005144  8E04               	bsf	(___fladd@b+2)^0,7,c
 13373   005146  EFA6  F028         	goto	l3863
 13374   00514A                     l3861:
 13375   00514A  9E04               	bcf	(___fladd@b+2)^0,7,c
 13376   00514C                     l3863:
 13377   00514C  90D8               	bcf	status,0,c
 13378   00514E  3010               	rrcf	___fladd@bexp^0,w,c
 13379   005150  6E05               	movwf	(___fladd@b+3)^0,c
 13380   005152  AE0E               	btfss	___fladd@signs^0,7,c
 13381   005154  EFAE  F028         	goto	u3371
 13382   005158  EFB0  F028         	goto	u3370
 13383   00515C                     u3371:
 13384   00515C  EFB1  F028         	goto	l3869
 13385   005160                     u3370:
 13386   005160  8E05               	bsf	(___fladd@b+3)^0,7,c
 13387   005162                     l3869:
 13388   005162  C002  F002         	movff	___fladd@b,?___fladd
 13389   005166  C003  F003         	movff	___fladd@b+1,?___fladd+1
 13390   00516A  C004  F004         	movff	___fladd@b+2,?___fladd+2
 13391   00516E  C005  F005         	movff	___fladd@b+3,?___fladd+3
 13392   005172                     l1102:
 13393   005172  0012               	return		;funcret
 13394   005174                     __end_of___fladd:
 13395                           	callstack 0
 13396                           
 13397 ;; *************** function ___flneg *****************
 13398 ;; Defined at:
 13399 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
 13400 ;; Parameters:    Size  Location     Type
 13401 ;;  f1              4    1[COMRAM] unsigned char 
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;		None
 13404 ;; Return value:  Size  Location     Type
 13405 ;;                  4    1[COMRAM] unsigned char 
 13406 ;; Registers used:
 13407 ;;		wreg, status,2, status,0
 13408 ;; Tracked objects:
 13409 ;;		On entry : 0/0
 13410 ;;		On exit  : 0/0
 13411 ;;		Unchanged: 0/0
 13412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13416 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13417 ;;Total ram usage:        4 bytes
 13418 ;; Hardware stack levels used: 1
 13419 ;; Hardware stack levels required when called: 2
 13420 ;; This function calls:
 13421 ;;		Nothing
 13422 ;; This function is called by:
 13423 ;;		_powf
 13424 ;; This function uses a non-reentrant model
 13425 ;;
 13426                           
 13427                           	psect	text36
 13428   0073FA                     __ptext36:
 13429                           	callstack 0
 13430   0073FA                     ___flneg:
 13431                           	callstack 26
 13432   0073FA  5002               	movf	___flneg@f1^0,w,c
 13433   0073FC  1003               	iorwf	(___flneg@f1+1)^0,w,c
 13434   0073FE  1004               	iorwf	(___flneg@f1+2)^0,w,c
 13435   007400  1005               	iorwf	(___flneg@f1+3)^0,w,c
 13436   007402  B4D8               	btfsc	status,2,c
 13437   007404  EF06  F03A         	goto	u4211
 13438   007408  EF08  F03A         	goto	u4210
 13439   00740C                     u4211:
 13440   00740C  EF10  F03A         	goto	l4387
 13441   007410                     u4210:
 13442   007410  0E00               	movlw	0
 13443   007412  1A02               	xorwf	___flneg@f1^0,f,c
 13444   007414  0E00               	movlw	0
 13445   007416  1A03               	xorwf	(___flneg@f1+1)^0,f,c
 13446   007418  0E00               	movlw	0
 13447   00741A  1A04               	xorwf	(___flneg@f1+2)^0,f,c
 13448   00741C  0E80               	movlw	128
 13449   00741E  1A05               	xorwf	(___flneg@f1+3)^0,f,c
 13450   007420                     l4387:
 13451   007420  C002  F002         	movff	___flneg@f1,?___flneg
 13452   007424  C003  F003         	movff	___flneg@f1+1,?___flneg+1
 13453   007428  C004  F004         	movff	___flneg@f1+2,?___flneg+2
 13454   00742C  C005  F005         	movff	___flneg@f1+3,?___flneg+3
 13455   007430  0012               	return		;funcret
 13456   007432                     __end_of___flneg:
 13457                           	callstack 0
 13458                           
 13459 ;; *************** function ___flge *****************
 13460 ;; Defined at:
 13461 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 13462 ;; Parameters:    Size  Location     Type
 13463 ;;  ff1             4   75[COMRAM] unsigned char 
 13464 ;;  ff2             4   79[COMRAM] unsigned char 
 13465 ;; Auto vars:     Size  Location     Type
 13466 ;;		None
 13467 ;; Return value:  Size  Location     Type
 13468 ;;		None               void
 13469 ;; Registers used:
 13470 ;;		wreg, status,2, status,0
 13471 ;; Tracked objects:
 13472 ;;		On entry : 0/0
 13473 ;;		On exit  : 0/0
 13474 ;;		Unchanged: 0/0
 13475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13476 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13478 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13479 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13480 ;;Total ram usage:       12 bytes
 13481 ;; Hardware stack levels used: 1
 13482 ;; Hardware stack levels required when called: 2
 13483 ;; This function calls:
 13484 ;;		Nothing
 13485 ;; This function is called by:
 13486 ;;		_decide_action
 13487 ;;		_powf
 13488 ;; This function uses a non-reentrant model
 13489 ;;
 13490                           
 13491                           	psect	text37
 13492   00653A                     __ptext37:
 13493                           	callstack 0
 13494   00653A                     ___flge:
 13495                           	callstack 26
 13496   00653A  0E00               	movlw	0
 13497   00653C  144C               	andwf	___flge@ff1^0,w,c
 13498   00653E  6E54               	movwf	??___flge^0,c
 13499   006540  0E00               	movlw	0
 13500   006542  144D               	andwf	(___flge@ff1+1)^0,w,c
 13501   006544  6E55               	movwf	(??___flge+1)^0,c
 13502   006546  0E80               	movlw	128
 13503   006548  144E               	andwf	(___flge@ff1+2)^0,w,c
 13504   00654A  6E56               	movwf	(??___flge+2)^0,c
 13505   00654C  0E7F               	movlw	127
 13506   00654E  144F               	andwf	(___flge@ff1+3)^0,w,c
 13507   006550  6E57               	movwf	(??___flge+3)^0,c
 13508   006552  5054               	movf	??___flge^0,w,c
 13509   006554  1055               	iorwf	(??___flge+1)^0,w,c
 13510   006556  1056               	iorwf	(??___flge+2)^0,w,c
 13511   006558  1057               	iorwf	(??___flge+3)^0,w,c
 13512   00655A  A4D8               	btfss	status,2,c
 13513   00655C  EFB2  F032         	goto	u4161
 13514   006560  EFB4  F032         	goto	u4160
 13515   006564                     u4161:
 13516   006564  EFBC  F032         	goto	l4365
 13517   006568                     u4160:
 13518   006568  0E00               	movlw	0
 13519   00656A  6E4C               	movwf	___flge@ff1^0,c
 13520   00656C  0E00               	movlw	0
 13521   00656E  6E4D               	movwf	(___flge@ff1+1)^0,c
 13522   006570  0E00               	movlw	0
 13523   006572  6E4E               	movwf	(___flge@ff1+2)^0,c
 13524   006574  0E00               	movlw	0
 13525   006576  6E4F               	movwf	(___flge@ff1+3)^0,c
 13526   006578                     l4365:
 13527   006578  0E00               	movlw	0
 13528   00657A  1450               	andwf	___flge@ff2^0,w,c
 13529   00657C  6E54               	movwf	??___flge^0,c
 13530   00657E  0E00               	movlw	0
 13531   006580  1451               	andwf	(___flge@ff2+1)^0,w,c
 13532   006582  6E55               	movwf	(??___flge+1)^0,c
 13533   006584  0E80               	movlw	128
 13534   006586  1452               	andwf	(___flge@ff2+2)^0,w,c
 13535   006588  6E56               	movwf	(??___flge+2)^0,c
 13536   00658A  0E7F               	movlw	127
 13537   00658C  1453               	andwf	(___flge@ff2+3)^0,w,c
 13538   00658E  6E57               	movwf	(??___flge+3)^0,c
 13539   006590  5054               	movf	??___flge^0,w,c
 13540   006592  1055               	iorwf	(??___flge+1)^0,w,c
 13541   006594  1056               	iorwf	(??___flge+2)^0,w,c
 13542   006596  1057               	iorwf	(??___flge+3)^0,w,c
 13543   006598  A4D8               	btfss	status,2,c
 13544   00659A  EFD1  F032         	goto	u4171
 13545   00659E  EFD3  F032         	goto	u4170
 13546   0065A2                     u4171:
 13547   0065A2  EFDB  F032         	goto	l4369
 13548   0065A6                     u4170:
 13549   0065A6  0E00               	movlw	0
 13550   0065A8  6E50               	movwf	___flge@ff2^0,c
 13551   0065AA  0E00               	movlw	0
 13552   0065AC  6E51               	movwf	(___flge@ff2+1)^0,c
 13553   0065AE  0E00               	movlw	0
 13554   0065B0  6E52               	movwf	(___flge@ff2+2)^0,c
 13555   0065B2  0E00               	movlw	0
 13556   0065B4  6E53               	movwf	(___flge@ff2+3)^0,c
 13557   0065B6                     l4369:
 13558   0065B6  AE4F               	btfss	(___flge@ff1+3)^0,7,c
 13559   0065B8  EFE0  F032         	goto	u4181
 13560   0065BC  EFE2  F032         	goto	u4180
 13561   0065C0                     u4181:
 13562   0065C0  EFEB  F032         	goto	l4373
 13563   0065C4                     u4180:
 13564   0065C4  6C4C               	negf	___flge@ff1^0,c
 13565   0065C6  1E4D               	comf	(___flge@ff1+1)^0,f,c
 13566   0065C8  B0D8               	btfsc	status,0,c
 13567   0065CA  2A4D               	incf	(___flge@ff1+1)^0,f,c
 13568   0065CC  1E4E               	comf	(___flge@ff1+2)^0,f,c
 13569   0065CE  B0D8               	btfsc	status,0,c
 13570   0065D0  2A4E               	incf	(___flge@ff1+2)^0,f,c
 13571   0065D2  0E80               	movlw	128
 13572   0065D4  564F               	subfwb	(___flge@ff1+3)^0,f,c
 13573   0065D6                     l4373:
 13574   0065D6  AE53               	btfss	(___flge@ff2+3)^0,7,c
 13575   0065D8  EFF0  F032         	goto	u4191
 13576   0065DC  EFF2  F032         	goto	u4190
 13577   0065E0                     u4191:
 13578   0065E0  EFFB  F032         	goto	l830
 13579   0065E4                     u4190:
 13580   0065E4  6C50               	negf	___flge@ff2^0,c
 13581   0065E6  1E51               	comf	(___flge@ff2+1)^0,f,c
 13582   0065E8  B0D8               	btfsc	status,0,c
 13583   0065EA  2A51               	incf	(___flge@ff2+1)^0,f,c
 13584   0065EC  1E52               	comf	(___flge@ff2+2)^0,f,c
 13585   0065EE  B0D8               	btfsc	status,0,c
 13586   0065F0  2A52               	incf	(___flge@ff2+2)^0,f,c
 13587   0065F2  0E80               	movlw	128
 13588   0065F4  5653               	subfwb	(___flge@ff2+3)^0,f,c
 13589   0065F6                     l830:
 13590   0065F6  0E00               	movlw	0
 13591   0065F8  1A4C               	xorwf	___flge@ff1^0,f,c
 13592   0065FA  0E00               	movlw	0
 13593   0065FC  1A4D               	xorwf	(___flge@ff1+1)^0,f,c
 13594   0065FE  0E00               	movlw	0
 13595   006600  1A4E               	xorwf	(___flge@ff1+2)^0,f,c
 13596   006602  0E80               	movlw	128
 13597   006604  1A4F               	xorwf	(___flge@ff1+3)^0,f,c
 13598   006606  0E00               	movlw	0
 13599   006608  1A50               	xorwf	___flge@ff2^0,f,c
 13600   00660A  0E00               	movlw	0
 13601   00660C  1A51               	xorwf	(___flge@ff2+1)^0,f,c
 13602   00660E  0E00               	movlw	0
 13603   006610  1A52               	xorwf	(___flge@ff2+2)^0,f,c
 13604   006612  0E80               	movlw	128
 13605   006614  1A53               	xorwf	(___flge@ff2+3)^0,f,c
 13606   006616  5050               	movf	___flge@ff2^0,w,c
 13607   006618  5C4C               	subwf	___flge@ff1^0,w,c
 13608   00661A  5051               	movf	(___flge@ff2+1)^0,w,c
 13609   00661C  584D               	subwfb	(___flge@ff1+1)^0,w,c
 13610   00661E  5052               	movf	(___flge@ff2+2)^0,w,c
 13611   006620  584E               	subwfb	(___flge@ff1+2)^0,w,c
 13612   006622  5053               	movf	(___flge@ff2+3)^0,w,c
 13613   006624  584F               	subwfb	(___flge@ff1+3)^0,w,c
 13614   006626  B0D8               	btfsc	status,0,c
 13615   006628  EF18  F033         	goto	u4201
 13616   00662C  EF1A  F033         	goto	u4200
 13617   006630                     u4201:
 13618   006630  EF1D  F033         	goto	l4379
 13619   006634                     u4200:
 13620   006634  90D8               	bcf	status,0,c
 13621   006636  EF1E  F033         	goto	l835
 13622   00663A                     l4379:
 13623   00663A  80D8               	bsf	status,0,c
 13624   00663C                     l835:
 13625   00663C  0012               	return		;funcret
 13626   00663E                     __end_of___flge:
 13627                           	callstack 0
 13628                           
 13629 ;; *************** function ___fldiv *****************
 13630 ;; Defined at:
 13631 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 13632 ;; Parameters:    Size  Location     Type
 13633 ;;  b               4   42[COMRAM] unsigned char 
 13634 ;;  a               4   46[COMRAM] unsigned char 
 13635 ;; Auto vars:     Size  Location     Type
 13636 ;;  grs             4   61[COMRAM] unsigned long 
 13637 ;;  rem             4   54[COMRAM] unsigned long 
 13638 ;;  new_exp         2   59[COMRAM] short 
 13639 ;;  aexp            1   66[COMRAM] unsigned char 
 13640 ;;  bexp            1   65[COMRAM] unsigned char 
 13641 ;;  sign            1   58[COMRAM] unsigned char 
 13642 ;; Return value:  Size  Location     Type
 13643 ;;                  4   42[COMRAM] unsigned char 
 13644 ;; Registers used:
 13645 ;;		wreg, status,2, status,0
 13646 ;; Tracked objects:
 13647 ;;		On entry : 0/0
 13648 ;;		On exit  : 0/0
 13649 ;;		Unchanged: 0/0
 13650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13651 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13652 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13653 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13654 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13655 ;;Total ram usage:       25 bytes
 13656 ;; Hardware stack levels used: 1
 13657 ;; Hardware stack levels required when called: 2
 13658 ;; This function calls:
 13659 ;;		Nothing
 13660 ;; This function is called by:
 13661 ;;		_decide_action
 13662 ;;		_powf
 13663 ;; This function uses a non-reentrant model
 13664 ;;
 13665                           
 13666                           	psect	text38
 13667   00597C                     __ptext38:
 13668                           	callstack 0
 13669   00597C                     ___fldiv:
 13670                           	callstack 26
 13671   00597C  502E               	movf	(___fldiv@b+3)^0,w,c
 13672   00597E  0B80               	andlw	128
 13673   005980  6E3B               	movwf	___fldiv@sign^0,c
 13674   005982  502E               	movf	(___fldiv@b+3)^0,w,c
 13675   005984  242E               	addwf	(___fldiv@b+3)^0,w,c
 13676   005986  6E42               	movwf	___fldiv@bexp^0,c
 13677   005988  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 13678   00598A  EFC9  F02C         	goto	u3931
 13679   00598E  EFCB  F02C         	goto	u3930
 13680   005992                     u3931:
 13681   005992  EFCC  F02C         	goto	l4223
 13682   005996                     u3930:
 13683   005996  8042               	bsf	___fldiv@bexp^0,0,c
 13684   005998                     l4223:
 13685   005998  5042               	movf	___fldiv@bexp^0,w,c
 13686   00599A  B4D8               	btfsc	status,2,c
 13687   00599C  EFD2  F02C         	goto	u3941
 13688   0059A0  EFD4  F02C         	goto	u3940
 13689   0059A4                     u3941:
 13690   0059A4  EFE9  F02C         	goto	l4233
 13691   0059A8                     u3940:
 13692   0059A8  2842               	incf	___fldiv@bexp^0,w,c
 13693   0059AA  A4D8               	btfss	status,2,c
 13694   0059AC  EFDA  F02C         	goto	u3951
 13695   0059B0  EFDC  F02C         	goto	u3950
 13696   0059B4                     u3951:
 13697   0059B4  EFE4  F02C         	goto	l4229
 13698   0059B8                     u3950:
 13699   0059B8  0E00               	movlw	0
 13700   0059BA  6E2B               	movwf	___fldiv@b^0,c
 13701   0059BC  0E00               	movlw	0
 13702   0059BE  6E2C               	movwf	(___fldiv@b+1)^0,c
 13703   0059C0  0E00               	movlw	0
 13704   0059C2  6E2D               	movwf	(___fldiv@b+2)^0,c
 13705   0059C4  0E00               	movlw	0
 13706   0059C6  6E2E               	movwf	(___fldiv@b+3)^0,c
 13707   0059C8                     l4229:
 13708   0059C8  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 13709   0059CA  0E00               	movlw	0
 13710   0059CC  6E2E               	movwf	(___fldiv@b+3)^0,c
 13711   0059CE  EFF1  F02C         	goto	l4235
 13712   0059D2                     l4233:
 13713   0059D2  0E00               	movlw	0
 13714   0059D4  6E2B               	movwf	___fldiv@b^0,c
 13715   0059D6  0E00               	movlw	0
 13716   0059D8  6E2C               	movwf	(___fldiv@b+1)^0,c
 13717   0059DA  0E00               	movlw	0
 13718   0059DC  6E2D               	movwf	(___fldiv@b+2)^0,c
 13719   0059DE  0E00               	movlw	0
 13720   0059E0  6E2E               	movwf	(___fldiv@b+3)^0,c
 13721   0059E2                     l4235:
 13722   0059E2  5032               	movf	(___fldiv@a+3)^0,w,c
 13723   0059E4  0B80               	andlw	128
 13724   0059E6  1A3B               	xorwf	___fldiv@sign^0,f,c
 13725   0059E8  5032               	movf	(___fldiv@a+3)^0,w,c
 13726   0059EA  2432               	addwf	(___fldiv@a+3)^0,w,c
 13727   0059EC  6E43               	movwf	___fldiv@aexp^0,c
 13728   0059EE  AE31               	btfss	(___fldiv@a+2)^0,7,c
 13729   0059F0  EFFC  F02C         	goto	u3961
 13730   0059F4  EFFE  F02C         	goto	u3960
 13731   0059F8                     u3961:
 13732   0059F8  EFFF  F02C         	goto	l4243
 13733   0059FC                     u3960:
 13734   0059FC  8043               	bsf	___fldiv@aexp^0,0,c
 13735   0059FE                     l4243:
 13736   0059FE  5043               	movf	___fldiv@aexp^0,w,c
 13737   005A00  B4D8               	btfsc	status,2,c
 13738   005A02  EF05  F02D         	goto	u3971
 13739   005A06  EF07  F02D         	goto	u3970
 13740   005A0A                     u3971:
 13741   005A0A  EF1C  F02D         	goto	l4253
 13742   005A0E                     u3970:
 13743   005A0E  2843               	incf	___fldiv@aexp^0,w,c
 13744   005A10  A4D8               	btfss	status,2,c
 13745   005A12  EF0D  F02D         	goto	u3981
 13746   005A16  EF0F  F02D         	goto	u3980
 13747   005A1A                     u3981:
 13748   005A1A  EF17  F02D         	goto	l4249
 13749   005A1E                     u3980:
 13750   005A1E  0E00               	movlw	0
 13751   005A20  6E2F               	movwf	___fldiv@a^0,c
 13752   005A22  0E00               	movlw	0
 13753   005A24  6E30               	movwf	(___fldiv@a+1)^0,c
 13754   005A26  0E00               	movlw	0
 13755   005A28  6E31               	movwf	(___fldiv@a+2)^0,c
 13756   005A2A  0E00               	movlw	0
 13757   005A2C  6E32               	movwf	(___fldiv@a+3)^0,c
 13758   005A2E                     l4249:
 13759   005A2E  8E31               	bsf	(___fldiv@a+2)^0,7,c
 13760   005A30  0E00               	movlw	0
 13761   005A32  6E32               	movwf	(___fldiv@a+3)^0,c
 13762   005A34  EF24  F02D         	goto	l4255
 13763   005A38                     l4253:
 13764   005A38  0E00               	movlw	0
 13765   005A3A  6E2F               	movwf	___fldiv@a^0,c
 13766   005A3C  0E00               	movlw	0
 13767   005A3E  6E30               	movwf	(___fldiv@a+1)^0,c
 13768   005A40  0E00               	movlw	0
 13769   005A42  6E31               	movwf	(___fldiv@a+2)^0,c
 13770   005A44  0E00               	movlw	0
 13771   005A46  6E32               	movwf	(___fldiv@a+3)^0,c
 13772   005A48                     l4255:
 13773   005A48  502F               	movf	___fldiv@a^0,w,c
 13774   005A4A  1030               	iorwf	(___fldiv@a+1)^0,w,c
 13775   005A4C  1031               	iorwf	(___fldiv@a+2)^0,w,c
 13776   005A4E  1032               	iorwf	(___fldiv@a+3)^0,w,c
 13777   005A50  A4D8               	btfss	status,2,c
 13778   005A52  EF2D  F02D         	goto	u3991
 13779   005A56  EF2F  F02D         	goto	u3990
 13780   005A5A                     u3991:
 13781   005A5A  EF47  F02D         	goto	l4267
 13782   005A5E                     u3990:
 13783   005A5E  0E00               	movlw	0
 13784   005A60  6E2B               	movwf	___fldiv@b^0,c
 13785   005A62  0E00               	movlw	0
 13786   005A64  6E2C               	movwf	(___fldiv@b+1)^0,c
 13787   005A66  0E00               	movlw	0
 13788   005A68  6E2D               	movwf	(___fldiv@b+2)^0,c
 13789   005A6A  0E00               	movlw	0
 13790   005A6C  6E2E               	movwf	(___fldiv@b+3)^0,c
 13791   005A6E  0E80               	movlw	128
 13792   005A70  122D               	iorwf	(___fldiv@b+2)^0,f,c
 13793   005A72  0E7F               	movlw	127
 13794   005A74  122E               	iorwf	(___fldiv@b+3)^0,f,c
 13795   005A76                     l4261:
 13796   005A76  503B               	movf	___fldiv@sign^0,w,c
 13797   005A78  122E               	iorwf	(___fldiv@b+3)^0,f,c
 13798   005A7A  C02B  F02B         	movff	___fldiv@b,?___fldiv
 13799   005A7E  C02C  F02C         	movff	___fldiv@b+1,?___fldiv+1
 13800   005A82  C02D  F02D         	movff	___fldiv@b+2,?___fldiv+2
 13801   005A86  C02E  F02E         	movff	___fldiv@b+3,?___fldiv+3
 13802   005A8A  EF8A  F02E         	goto	l1147
 13803   005A8E                     l4267:
 13804   005A8E  5042               	movf	___fldiv@bexp^0,w,c
 13805   005A90  A4D8               	btfss	status,2,c
 13806   005A92  EF4D  F02D         	goto	u4001
 13807   005A96  EF4F  F02D         	goto	u4000
 13808   005A9A                     u4001:
 13809   005A9A  EF59  F02D         	goto	l4275
 13810   005A9E                     u4000:
 13811   005A9E  0E00               	movlw	0
 13812   005AA0  6E2B               	movwf	?___fldiv^0,c
 13813   005AA2  0E00               	movlw	0
 13814   005AA4  6E2C               	movwf	(?___fldiv+1)^0,c
 13815   005AA6  0E00               	movlw	0
 13816   005AA8  6E2D               	movwf	(?___fldiv+2)^0,c
 13817   005AAA  0E00               	movlw	0
 13818   005AAC  6E2E               	movwf	(?___fldiv+3)^0,c
 13819   005AAE  EF8A  F02E         	goto	l1147
 13820   005AB2                     l4275:
 13821   005AB2  5043               	movf	___fldiv@aexp^0,w,c
 13822   005AB4  C042  F033         	movff	___fldiv@bexp,??___fldiv
 13823   005AB8  6A34               	clrf	(??___fldiv+1)^0,c
 13824   005ABA  5E33               	subwf	??___fldiv^0,f,c
 13825   005ABC  0E00               	movlw	0
 13826   005ABE  5A34               	subwfb	(??___fldiv+1)^0,f,c
 13827   005AC0  0E7F               	movlw	127
 13828   005AC2  2433               	addwf	??___fldiv^0,w,c
 13829   005AC4  6E3C               	movwf	___fldiv@new_exp^0,c
 13830   005AC6  0E00               	movlw	0
 13831   005AC8  2034               	addwfc	(??___fldiv+1)^0,w,c
 13832   005ACA  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 13833   005ACC  C02B  F037         	movff	___fldiv@b,___fldiv@rem
 13834   005AD0  C02C  F038         	movff	___fldiv@b+1,___fldiv@rem+1
 13835   005AD4  C02D  F039         	movff	___fldiv@b+2,___fldiv@rem+2
 13836   005AD8  C02E  F03A         	movff	___fldiv@b+3,___fldiv@rem+3
 13837   005ADC  0E00               	movlw	0
 13838   005ADE  6E2B               	movwf	___fldiv@b^0,c
 13839   005AE0  0E00               	movlw	0
 13840   005AE2  6E2C               	movwf	(___fldiv@b+1)^0,c
 13841   005AE4  0E00               	movlw	0
 13842   005AE6  6E2D               	movwf	(___fldiv@b+2)^0,c
 13843   005AE8  0E00               	movlw	0
 13844   005AEA  6E2E               	movwf	(___fldiv@b+3)^0,c
 13845   005AEC  0E00               	movlw	0
 13846   005AEE  6E3E               	movwf	___fldiv@grs^0,c
 13847   005AF0  0E00               	movlw	0
 13848   005AF2  6E3F               	movwf	(___fldiv@grs+1)^0,c
 13849   005AF4  0E00               	movlw	0
 13850   005AF6  6E40               	movwf	(___fldiv@grs+2)^0,c
 13851   005AF8  0E00               	movlw	0
 13852   005AFA  6E41               	movwf	(___fldiv@grs+3)^0,c
 13853   005AFC  0E00               	movlw	0
 13854   005AFE  6E43               	movwf	___fldiv@aexp^0,c
 13855   005B00  EFBA  F02D         	goto	l1149
 13856   005B04                     l4285:
 13857   005B04  5043               	movf	___fldiv@aexp^0,w,c
 13858   005B06  B4D8               	btfsc	status,2,c
 13859   005B08  EF88  F02D         	goto	u4011
 13860   005B0C  EF8A  F02D         	goto	u4010
 13861   005B10                     u4011:
 13862   005B10  EFA1  F02D         	goto	l4293
 13863   005B14                     u4010:
 13864   005B14  90D8               	bcf	status,0,c
 13865   005B16  3637               	rlcf	___fldiv@rem^0,f,c
 13866   005B18  3638               	rlcf	(___fldiv@rem+1)^0,f,c
 13867   005B1A  3639               	rlcf	(___fldiv@rem+2)^0,f,c
 13868   005B1C  363A               	rlcf	(___fldiv@rem+3)^0,f,c
 13869   005B1E  90D8               	bcf	status,0,c
 13870   005B20  362B               	rlcf	___fldiv@b^0,f,c
 13871   005B22  362C               	rlcf	(___fldiv@b+1)^0,f,c
 13872   005B24  362D               	rlcf	(___fldiv@b+2)^0,f,c
 13873   005B26  362E               	rlcf	(___fldiv@b+3)^0,f,c
 13874   005B28  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 13875   005B2A  EF99  F02D         	goto	u4021
 13876   005B2E  EF9B  F02D         	goto	u4020
 13877   005B32                     u4021:
 13878   005B32  EF9C  F02D         	goto	l1152
 13879   005B36                     u4020:
 13880   005B36  802B               	bsf	___fldiv@b^0,0,c
 13881   005B38                     l1152:
 13882   005B38  90D8               	bcf	status,0,c
 13883   005B3A  363E               	rlcf	___fldiv@grs^0,f,c
 13884   005B3C  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 13885   005B3E  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 13886   005B40  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 13887   005B42                     l4293:
 13888   005B42  502F               	movf	___fldiv@a^0,w,c
 13889   005B44  5C37               	subwf	___fldiv@rem^0,w,c
 13890   005B46  5030               	movf	(___fldiv@a+1)^0,w,c
 13891   005B48  5838               	subwfb	(___fldiv@rem+1)^0,w,c
 13892   005B4A  5031               	movf	(___fldiv@a+2)^0,w,c
 13893   005B4C  5839               	subwfb	(___fldiv@rem+2)^0,w,c
 13894   005B4E  5032               	movf	(___fldiv@a+3)^0,w,c
 13895   005B50  583A               	subwfb	(___fldiv@rem+3)^0,w,c
 13896   005B52  A0D8               	btfss	status,0,c
 13897   005B54  EFAE  F02D         	goto	u4031
 13898   005B58  EFB0  F02D         	goto	u4030
 13899   005B5C                     u4031:
 13900   005B5C  EFB9  F02D         	goto	l4299
 13901   005B60                     u4030:
 13902   005B60  8C41               	bsf	(___fldiv@grs+3)^0,6,c
 13903   005B62  502F               	movf	___fldiv@a^0,w,c
 13904   005B64  5E37               	subwf	___fldiv@rem^0,f,c
 13905   005B66  5030               	movf	(___fldiv@a+1)^0,w,c
 13906   005B68  5A38               	subwfb	(___fldiv@rem+1)^0,f,c
 13907   005B6A  5031               	movf	(___fldiv@a+2)^0,w,c
 13908   005B6C  5A39               	subwfb	(___fldiv@rem+2)^0,f,c
 13909   005B6E  5032               	movf	(___fldiv@a+3)^0,w,c
 13910   005B70  5A3A               	subwfb	(___fldiv@rem+3)^0,f,c
 13911   005B72                     l4299:
 13912   005B72  2A43               	incf	___fldiv@aexp^0,f,c
 13913   005B74                     l1149:
 13914   005B74  0E19               	movlw	25
 13915   005B76  6443               	cpfsgt	___fldiv@aexp^0,c
 13916   005B78  EFC0  F02D         	goto	u4041
 13917   005B7C  EFC2  F02D         	goto	u4040
 13918   005B80                     u4041:
 13919   005B80  EF82  F02D         	goto	l4285
 13920   005B84                     u4040:
 13921   005B84  5037               	movf	___fldiv@rem^0,w,c
 13922   005B86  1038               	iorwf	(___fldiv@rem+1)^0,w,c
 13923   005B88  1039               	iorwf	(___fldiv@rem+2)^0,w,c
 13924   005B8A  103A               	iorwf	(___fldiv@rem+3)^0,w,c
 13925   005B8C  B4D8               	btfsc	status,2,c
 13926   005B8E  EFCB  F02D         	goto	u4051
 13927   005B92  EFCD  F02D         	goto	u4050
 13928   005B96                     u4051:
 13929   005B96  EFE5  F02D         	goto	l4311
 13930   005B9A                     u4050:
 13931   005B9A  803E               	bsf	___fldiv@grs^0,0,c
 13932   005B9C  EFE5  F02D         	goto	l4311
 13933   005BA0                     l4305:
 13934   005BA0  90D8               	bcf	status,0,c
 13935   005BA2  362B               	rlcf	___fldiv@b^0,f,c
 13936   005BA4  362C               	rlcf	(___fldiv@b+1)^0,f,c
 13937   005BA6  362D               	rlcf	(___fldiv@b+2)^0,f,c
 13938   005BA8  362E               	rlcf	(___fldiv@b+3)^0,f,c
 13939   005BAA  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 13940   005BAC  EFDA  F02D         	goto	u4061
 13941   005BB0  EFDC  F02D         	goto	u4060
 13942   005BB4                     u4061:
 13943   005BB4  EFDD  F02D         	goto	l1158
 13944   005BB8                     u4060:
 13945   005BB8  802B               	bsf	___fldiv@b^0,0,c
 13946   005BBA                     l1158:
 13947   005BBA  90D8               	bcf	status,0,c
 13948   005BBC  363E               	rlcf	___fldiv@grs^0,f,c
 13949   005BBE  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 13950   005BC0  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 13951   005BC2  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 13952   005BC4  063C               	decf	___fldiv@new_exp^0,f,c
 13953   005BC6  A0D8               	btfss	status,0,c
 13954   005BC8  063D               	decf	(___fldiv@new_exp+1)^0,f,c
 13955   005BCA                     l4311:
 13956   005BCA  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 13957   005BCC  EFEA  F02D         	goto	u4071
 13958   005BD0  EFEC  F02D         	goto	u4070
 13959   005BD4                     u4071:
 13960   005BD4  EFD0  F02D         	goto	l4305
 13961   005BD8                     u4070:
 13962   005BD8  0E00               	movlw	0
 13963   005BDA  6E43               	movwf	___fldiv@aexp^0,c
 13964   005BDC  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 13965   005BDE  EFF3  F02D         	goto	u4081
 13966   005BE2  EFF5  F02D         	goto	u4080
 13967   005BE6                     u4081:
 13968   005BE6  EF19  F02E         	goto	l1160
 13969   005BEA                     u4080:
 13970   005BEA  0EFF               	movlw	255
 13971   005BEC  143E               	andwf	___fldiv@grs^0,w,c
 13972   005BEE  6E33               	movwf	??___fldiv^0,c
 13973   005BF0  0EFF               	movlw	255
 13974   005BF2  143F               	andwf	(___fldiv@grs+1)^0,w,c
 13975   005BF4  6E34               	movwf	(??___fldiv+1)^0,c
 13976   005BF6  0EFF               	movlw	255
 13977   005BF8  1440               	andwf	(___fldiv@grs+2)^0,w,c
 13978   005BFA  6E35               	movwf	(??___fldiv+2)^0,c
 13979   005BFC  0E7F               	movlw	127
 13980   005BFE  1441               	andwf	(___fldiv@grs+3)^0,w,c
 13981   005C00  6E36               	movwf	(??___fldiv+3)^0,c
 13982   005C02  5033               	movf	??___fldiv^0,w,c
 13983   005C04  1034               	iorwf	(??___fldiv+1)^0,w,c
 13984   005C06  1035               	iorwf	(??___fldiv+2)^0,w,c
 13985   005C08  1036               	iorwf	(??___fldiv+3)^0,w,c
 13986   005C0A  B4D8               	btfsc	status,2,c
 13987   005C0C  EF0A  F02E         	goto	u4091
 13988   005C10  EF0C  F02E         	goto	u4090
 13989   005C14                     u4091:
 13990   005C14  EF10  F02E         	goto	l1161
 13991   005C18                     u4090:
 13992   005C18                     l4319:
 13993   005C18  0E01               	movlw	1
 13994   005C1A  6E43               	movwf	___fldiv@aexp^0,c
 13995   005C1C  EF19  F02E         	goto	l1160
 13996   005C20                     l1161:
 13997   005C20  A02B               	btfss	___fldiv@b^0,0,c
 13998   005C22  EF15  F02E         	goto	u4101
 13999   005C26  EF17  F02E         	goto	u4100
 14000   005C2A                     u4101:
 14001   005C2A  EF19  F02E         	goto	l1160
 14002   005C2E                     u4100:
 14003   005C2E  EF0C  F02E         	goto	l4319
 14004   005C32                     l1160:
 14005   005C32  5043               	movf	___fldiv@aexp^0,w,c
 14006   005C34  B4D8               	btfsc	status,2,c
 14007   005C36  EF1F  F02E         	goto	u4111
 14008   005C3A  EF21  F02E         	goto	u4110
 14009   005C3E                     u4111:
 14010   005C3E  EF45  F02E         	goto	l4331
 14011   005C42                     u4110:
 14012   005C42  0E01               	movlw	1
 14013   005C44  262B               	addwf	___fldiv@b^0,f,c
 14014   005C46  0E00               	movlw	0
 14015   005C48  222C               	addwfc	(___fldiv@b+1)^0,f,c
 14016   005C4A  222D               	addwfc	(___fldiv@b+2)^0,f,c
 14017   005C4C  222E               	addwfc	(___fldiv@b+3)^0,f,c
 14018   005C4E  A02E               	btfss	(___fldiv@b+3)^0,0,c
 14019   005C50  EF2C  F02E         	goto	u4121
 14020   005C54  EF2E  F02E         	goto	u4120
 14021   005C58                     u4121:
 14022   005C58  EF45  F02E         	goto	l4331
 14023   005C5C                     u4120:
 14024   005C5C  C02B  F033         	movff	___fldiv@b,??___fldiv
 14025   005C60  C02C  F034         	movff	___fldiv@b+1,??___fldiv+1
 14026   005C64  C02D  F035         	movff	___fldiv@b+2,??___fldiv+2
 14027   005C68  C02E  F036         	movff	___fldiv@b+3,??___fldiv+3
 14028   005C6C  3436               	rlcf	(??___fldiv+3)^0,w,c
 14029   005C6E  3236               	rrcf	(??___fldiv+3)^0,f,c
 14030   005C70  3235               	rrcf	(??___fldiv+2)^0,f,c
 14031   005C72  3234               	rrcf	(??___fldiv+1)^0,f,c
 14032   005C74  3233               	rrcf	??___fldiv^0,f,c
 14033   005C76  C033  F02B         	movff	??___fldiv,___fldiv@b
 14034   005C7A  C034  F02C         	movff	??___fldiv+1,___fldiv@b+1
 14035   005C7E  C035  F02D         	movff	??___fldiv+2,___fldiv@b+2
 14036   005C82  C036  F02E         	movff	??___fldiv+3,___fldiv@b+3
 14037   005C86  4A3C               	infsnz	___fldiv@new_exp^0,f,c
 14038   005C88  2A3D               	incf	(___fldiv@new_exp+1)^0,f,c
 14039   005C8A                     l4331:
 14040   005C8A  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14041   005C8C  EF50  F02E         	goto	u4131
 14042   005C90  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 14043   005C92  E108               	bnz	u4130
 14044   005C94  283C               	incf	___fldiv@new_exp^0,w,c
 14045   005C96  A0D8               	btfss	status,0,c
 14046   005C98  EF50  F02E         	goto	u4131
 14047   005C9C  EF52  F02E         	goto	u4130
 14048   005CA0                     u4131:
 14049   005CA0  EF5D  F02E         	goto	l4335
 14050   005CA4                     u4130:
 14051   005CA4  0E00               	movlw	0
 14052   005CA6  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 14053   005CA8  683C               	setf	___fldiv@new_exp^0,c
 14054   005CAA  0E00               	movlw	0
 14055   005CAC  6E2B               	movwf	___fldiv@b^0,c
 14056   005CAE  0E00               	movlw	0
 14057   005CB0  6E2C               	movwf	(___fldiv@b+1)^0,c
 14058   005CB2  0E00               	movlw	0
 14059   005CB4  6E2D               	movwf	(___fldiv@b+2)^0,c
 14060   005CB6  0E00               	movlw	0
 14061   005CB8  6E2E               	movwf	(___fldiv@b+3)^0,c
 14062   005CBA                     l4335:
 14063   005CBA  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14064   005CBC  EF6A  F02E         	goto	u4140
 14065   005CC0  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 14066   005CC2  E106               	bnz	u4141
 14067   005CC4  043C               	decf	___fldiv@new_exp^0,w,c
 14068   005CC6  B0D8               	btfsc	status,0,c
 14069   005CC8  EF68  F02E         	goto	u4141
 14070   005CCC  EF6A  F02E         	goto	u4140
 14071   005CD0                     u4141:
 14072   005CD0  EF78  F02E         	goto	l4339
 14073   005CD4                     u4140:
 14074   005CD4  0E00               	movlw	0
 14075   005CD6  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 14076   005CD8  0E00               	movlw	0
 14077   005CDA  6E3C               	movwf	___fldiv@new_exp^0,c
 14078   005CDC  0E00               	movlw	0
 14079   005CDE  6E2B               	movwf	___fldiv@b^0,c
 14080   005CE0  0E00               	movlw	0
 14081   005CE2  6E2C               	movwf	(___fldiv@b+1)^0,c
 14082   005CE4  0E00               	movlw	0
 14083   005CE6  6E2D               	movwf	(___fldiv@b+2)^0,c
 14084   005CE8  0E00               	movlw	0
 14085   005CEA  6E2E               	movwf	(___fldiv@b+3)^0,c
 14086   005CEC  0E00               	movlw	0
 14087   005CEE  6E3B               	movwf	___fldiv@sign^0,c
 14088   005CF0                     l4339:
 14089   005CF0  C03C  F042         	movff	___fldiv@new_exp,___fldiv@bexp
 14090   005CF4  A042               	btfss	___fldiv@bexp^0,0,c
 14091   005CF6  EF7F  F02E         	goto	u4151
 14092   005CFA  EF81  F02E         	goto	u4150
 14093   005CFE                     u4151:
 14094   005CFE  EF84  F02E         	goto	l4345
 14095   005D02                     u4150:
 14096   005D02  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 14097   005D04  EF85  F02E         	goto	l4347
 14098   005D08                     l4345:
 14099   005D08  9E2D               	bcf	(___fldiv@b+2)^0,7,c
 14100   005D0A                     l4347:
 14101   005D0A  90D8               	bcf	status,0,c
 14102   005D0C  3042               	rrcf	___fldiv@bexp^0,w,c
 14103   005D0E  6E2E               	movwf	(___fldiv@b+3)^0,c
 14104   005D10  EF3B  F02D         	goto	l4261
 14105   005D14                     l1147:
 14106   005D14  0012               	return		;funcret
 14107   005D16                     __end_of___fldiv:
 14108                           	callstack 0
 14109                           
 14110 ;; *************** function _color_read_Red *****************
 14111 ;; Defined at:
 14112 ;;		line 68 in file "color.c"
 14113 ;; Parameters:    Size  Location     Type
 14114 ;;		None
 14115 ;; Auto vars:     Size  Location     Type
 14116 ;;  tmp             2   10[COMRAM] unsigned int 
 14117 ;; Return value:  Size  Location     Type
 14118 ;;                  2    5[COMRAM] unsigned int 
 14119 ;; Registers used:
 14120 ;;		wreg, status,2, status,0, cstack
 14121 ;; Tracked objects:
 14122 ;;		On entry : 0/0
 14123 ;;		On exit  : 0/0
 14124 ;;		Unchanged: 0/0
 14125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14127 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14128 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14129 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14130 ;;Total ram usage:        7 bytes
 14131 ;; Hardware stack levels used: 1
 14132 ;; Hardware stack levels required when called: 4
 14133 ;; This function calls:
 14134 ;;		_I2C_2_Master_Read
 14135 ;;		_I2C_2_Master_RepStart
 14136 ;;		_I2C_2_Master_Start
 14137 ;;		_I2C_2_Master_Stop
 14138 ;;		_I2C_2_Master_Write
 14139 ;; This function is called by:
 14140 ;;		_main
 14141 ;; This function uses a non-reentrant model
 14142 ;;
 14143                           
 14144                           	psect	text39
 14145   00716A                     __ptext39:
 14146                           	callstack 0
 14147   00716A                     _color_read_Red:
 14148                           	callstack 26
 14149   00716A                     
 14150                           ;color.c: 69:  unsigned int tmp;;color.c: 70:  I2C_2_Master_Start();
 14151   00716A  EC11  F03B         	call	_I2C_2_Master_Start	;wreg free
 14152                           
 14153                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x00);
 14154   00716E  0E52               	movlw	82
 14155   007170  ECF6  F03A         	call	_I2C_2_Master_Write
 14156                           
 14157                           ;color.c: 72:  I2C_2_Master_Write(0xA0 | 0x16);
 14158   007174  0EB6               	movlw	182
 14159   007176  ECF6  F03A         	call	_I2C_2_Master_Write
 14160                           
 14161                           ;color.c: 73:  I2C_2_Master_RepStart();
 14162   00717A  EC07  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14163                           
 14164                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x01);
 14165   00717E  0E53               	movlw	83
 14166   007180  ECF6  F03A         	call	_I2C_2_Master_Write
 14167                           
 14168                           ;color.c: 75:  tmp=I2C_2_Master_Read(1);
 14169   007184  0E01               	movlw	1
 14170   007186  ECBE  F039         	call	_I2C_2_Master_Read
 14171   00718A  6E08               	movwf	??_color_read_Red^0,c
 14172   00718C  5008               	movf	??_color_read_Red^0,w,c
 14173   00718E  6E0B               	movwf	color_read_Red@tmp^0,c
 14174   007190  6A0C               	clrf	(color_read_Red@tmp+1)^0,c
 14175                           
 14176                           ;color.c: 76:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14177   007192  0E00               	movlw	0
 14178   007194  ECBE  F039         	call	_I2C_2_Master_Read
 14179   007198  6E08               	movwf	??_color_read_Red^0,c
 14180   00719A  5008               	movf	??_color_read_Red^0,w,c
 14181   00719C  6E0A               	movwf	(??_color_read_Red+2)^0,c
 14182   00719E  6A09               	clrf	(??_color_read_Red+1)^0,c
 14183   0071A0  500B               	movf	color_read_Red@tmp^0,w,c
 14184   0071A2  1009               	iorwf	(??_color_read_Red+1)^0,w,c
 14185   0071A4  6E0B               	movwf	color_read_Red@tmp^0,c
 14186   0071A6  500C               	movf	(color_read_Red@tmp+1)^0,w,c
 14187   0071A8  100A               	iorwf	(??_color_read_Red+2)^0,w,c
 14188   0071AA  6E0C               	movwf	(color_read_Red@tmp+1)^0,c
 14189                           
 14190                           ;color.c: 77:  I2C_2_Master_Stop();
 14191   0071AC  EC0C  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14192   0071B0                     
 14193                           ;color.c: 78:  return tmp;
 14194   0071B0  C00B  F006         	movff	color_read_Red@tmp,?_color_read_Red
 14195   0071B4  C00C  F007         	movff	color_read_Red@tmp+1,?_color_read_Red+1
 14196   0071B8  0012               	return		;funcret
 14197   0071BA                     __end_of_color_read_Red:
 14198                           	callstack 0
 14199                           
 14200 ;; *************** function _color_read_Green *****************
 14201 ;; Defined at:
 14202 ;;		line 81 in file "color.c"
 14203 ;; Parameters:    Size  Location     Type
 14204 ;;		None
 14205 ;; Auto vars:     Size  Location     Type
 14206 ;;  tmp             2   10[COMRAM] unsigned int 
 14207 ;; Return value:  Size  Location     Type
 14208 ;;                  2    5[COMRAM] unsigned int 
 14209 ;; Registers used:
 14210 ;;		wreg, status,2, status,0, cstack
 14211 ;; Tracked objects:
 14212 ;;		On entry : 0/0
 14213 ;;		On exit  : 0/0
 14214 ;;		Unchanged: 0/0
 14215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14217 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14218 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14219 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14220 ;;Total ram usage:        7 bytes
 14221 ;; Hardware stack levels used: 1
 14222 ;; Hardware stack levels required when called: 4
 14223 ;; This function calls:
 14224 ;;		_I2C_2_Master_Read
 14225 ;;		_I2C_2_Master_RepStart
 14226 ;;		_I2C_2_Master_Start
 14227 ;;		_I2C_2_Master_Stop
 14228 ;;		_I2C_2_Master_Write
 14229 ;; This function is called by:
 14230 ;;		_main
 14231 ;; This function uses a non-reentrant model
 14232 ;;
 14233                           
 14234                           	psect	text40
 14235   0071BA                     __ptext40:
 14236                           	callstack 0
 14237   0071BA                     _color_read_Green:
 14238                           	callstack 26
 14239   0071BA                     
 14240                           ;color.c: 82:  unsigned int tmp;;color.c: 83:  I2C_2_Master_Start();
 14241   0071BA  EC11  F03B         	call	_I2C_2_Master_Start	;wreg free
 14242                           
 14243                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x00);
 14244   0071BE  0E52               	movlw	82
 14245   0071C0  ECF6  F03A         	call	_I2C_2_Master_Write
 14246                           
 14247                           ;color.c: 85:  I2C_2_Master_Write(0xA0 | 0x18);
 14248   0071C4  0EB8               	movlw	184
 14249   0071C6  ECF6  F03A         	call	_I2C_2_Master_Write
 14250                           
 14251                           ;color.c: 86:  I2C_2_Master_RepStart();
 14252   0071CA  EC07  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14253                           
 14254                           ;color.c: 87:  I2C_2_Master_Write(0x52 | 0x01);
 14255   0071CE  0E53               	movlw	83
 14256   0071D0  ECF6  F03A         	call	_I2C_2_Master_Write
 14257                           
 14258                           ;color.c: 88:  tmp=I2C_2_Master_Read(1);
 14259   0071D4  0E01               	movlw	1
 14260   0071D6  ECBE  F039         	call	_I2C_2_Master_Read
 14261   0071DA  6E08               	movwf	??_color_read_Green^0,c
 14262   0071DC  5008               	movf	??_color_read_Green^0,w,c
 14263   0071DE  6E0B               	movwf	color_read_Green@tmp^0,c
 14264   0071E0  6A0C               	clrf	(color_read_Green@tmp+1)^0,c
 14265                           
 14266                           ;color.c: 89:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14267   0071E2  0E00               	movlw	0
 14268   0071E4  ECBE  F039         	call	_I2C_2_Master_Read
 14269   0071E8  6E08               	movwf	??_color_read_Green^0,c
 14270   0071EA  5008               	movf	??_color_read_Green^0,w,c
 14271   0071EC  6E0A               	movwf	(??_color_read_Green+2)^0,c
 14272   0071EE  6A09               	clrf	(??_color_read_Green+1)^0,c
 14273   0071F0  500B               	movf	color_read_Green@tmp^0,w,c
 14274   0071F2  1009               	iorwf	(??_color_read_Green+1)^0,w,c
 14275   0071F4  6E0B               	movwf	color_read_Green@tmp^0,c
 14276   0071F6  500C               	movf	(color_read_Green@tmp+1)^0,w,c
 14277   0071F8  100A               	iorwf	(??_color_read_Green+2)^0,w,c
 14278   0071FA  6E0C               	movwf	(color_read_Green@tmp+1)^0,c
 14279                           
 14280                           ;color.c: 90:  I2C_2_Master_Stop();
 14281   0071FC  EC0C  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14282   007200                     
 14283                           ;color.c: 91:  return tmp;
 14284   007200  C00B  F006         	movff	color_read_Green@tmp,?_color_read_Green
 14285   007204  C00C  F007         	movff	color_read_Green@tmp+1,?_color_read_Green+1
 14286   007208  0012               	return		;funcret
 14287   00720A                     __end_of_color_read_Green:
 14288                           	callstack 0
 14289                           
 14290 ;; *************** function _color_read_Clear *****************
 14291 ;; Defined at:
 14292 ;;		line 55 in file "color.c"
 14293 ;; Parameters:    Size  Location     Type
 14294 ;;		None
 14295 ;; Auto vars:     Size  Location     Type
 14296 ;;  tmp             2   10[COMRAM] unsigned int 
 14297 ;; Return value:  Size  Location     Type
 14298 ;;                  2    5[COMRAM] unsigned int 
 14299 ;; Registers used:
 14300 ;;		wreg, status,2, status,0, cstack
 14301 ;; Tracked objects:
 14302 ;;		On entry : 0/0
 14303 ;;		On exit  : 0/0
 14304 ;;		Unchanged: 0/0
 14305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14308 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14309 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14310 ;;Total ram usage:        7 bytes
 14311 ;; Hardware stack levels used: 1
 14312 ;; Hardware stack levels required when called: 4
 14313 ;; This function calls:
 14314 ;;		_I2C_2_Master_Read
 14315 ;;		_I2C_2_Master_RepStart
 14316 ;;		_I2C_2_Master_Start
 14317 ;;		_I2C_2_Master_Stop
 14318 ;;		_I2C_2_Master_Write
 14319 ;; This function is called by:
 14320 ;;		_main
 14321 ;; This function uses a non-reentrant model
 14322 ;;
 14323                           
 14324                           	psect	text41
 14325   00720A                     __ptext41:
 14326                           	callstack 0
 14327   00720A                     _color_read_Clear:
 14328                           	callstack 26
 14329   00720A                     
 14330                           ;color.c: 56:  unsigned int tmp;;color.c: 57:  I2C_2_Master_Start();
 14331   00720A  EC11  F03B         	call	_I2C_2_Master_Start	;wreg free
 14332                           
 14333                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
 14334   00720E  0E52               	movlw	82
 14335   007210  ECF6  F03A         	call	_I2C_2_Master_Write
 14336                           
 14337                           ;color.c: 59:  I2C_2_Master_Write(0xA0 | 0x14);
 14338   007214  0EB4               	movlw	180
 14339   007216  ECF6  F03A         	call	_I2C_2_Master_Write
 14340                           
 14341                           ;color.c: 60:  I2C_2_Master_RepStart();
 14342   00721A  EC07  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14343                           
 14344                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
 14345   00721E  0E53               	movlw	83
 14346   007220  ECF6  F03A         	call	_I2C_2_Master_Write
 14347                           
 14348                           ;color.c: 62:  tmp=I2C_2_Master_Read(1);
 14349   007224  0E01               	movlw	1
 14350   007226  ECBE  F039         	call	_I2C_2_Master_Read
 14351   00722A  6E08               	movwf	??_color_read_Clear^0,c
 14352   00722C  5008               	movf	??_color_read_Clear^0,w,c
 14353   00722E  6E0B               	movwf	color_read_Clear@tmp^0,c
 14354   007230  6A0C               	clrf	(color_read_Clear@tmp+1)^0,c
 14355                           
 14356                           ;color.c: 63:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14357   007232  0E00               	movlw	0
 14358   007234  ECBE  F039         	call	_I2C_2_Master_Read
 14359   007238  6E08               	movwf	??_color_read_Clear^0,c
 14360   00723A  5008               	movf	??_color_read_Clear^0,w,c
 14361   00723C  6E0A               	movwf	(??_color_read_Clear+2)^0,c
 14362   00723E  6A09               	clrf	(??_color_read_Clear+1)^0,c
 14363   007240  500B               	movf	color_read_Clear@tmp^0,w,c
 14364   007242  1009               	iorwf	(??_color_read_Clear+1)^0,w,c
 14365   007244  6E0B               	movwf	color_read_Clear@tmp^0,c
 14366   007246  500C               	movf	(color_read_Clear@tmp+1)^0,w,c
 14367   007248  100A               	iorwf	(??_color_read_Clear+2)^0,w,c
 14368   00724A  6E0C               	movwf	(color_read_Clear@tmp+1)^0,c
 14369                           
 14370                           ;color.c: 64:  I2C_2_Master_Stop();
 14371   00724C  EC0C  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14372   007250                     
 14373                           ;color.c: 65:  return tmp;
 14374   007250  C00B  F006         	movff	color_read_Clear@tmp,?_color_read_Clear
 14375   007254  C00C  F007         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 14376   007258  0012               	return		;funcret
 14377   00725A                     __end_of_color_read_Clear:
 14378                           	callstack 0
 14379                           
 14380 ;; *************** function _color_read_Blue *****************
 14381 ;; Defined at:
 14382 ;;		line 94 in file "color.c"
 14383 ;; Parameters:    Size  Location     Type
 14384 ;;		None
 14385 ;; Auto vars:     Size  Location     Type
 14386 ;;  tmp             2   10[COMRAM] unsigned int 
 14387 ;; Return value:  Size  Location     Type
 14388 ;;                  2    5[COMRAM] unsigned int 
 14389 ;; Registers used:
 14390 ;;		wreg, status,2, status,0, cstack
 14391 ;; Tracked objects:
 14392 ;;		On entry : 0/0
 14393 ;;		On exit  : 0/0
 14394 ;;		Unchanged: 0/0
 14395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14397 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14398 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14399 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14400 ;;Total ram usage:        7 bytes
 14401 ;; Hardware stack levels used: 1
 14402 ;; Hardware stack levels required when called: 4
 14403 ;; This function calls:
 14404 ;;		_I2C_2_Master_Read
 14405 ;;		_I2C_2_Master_RepStart
 14406 ;;		_I2C_2_Master_Start
 14407 ;;		_I2C_2_Master_Stop
 14408 ;;		_I2C_2_Master_Write
 14409 ;; This function is called by:
 14410 ;;		_main
 14411 ;; This function uses a non-reentrant model
 14412 ;;
 14413                           
 14414                           	psect	text42
 14415   00725A                     __ptext42:
 14416                           	callstack 0
 14417   00725A                     _color_read_Blue:
 14418                           	callstack 26
 14419   00725A                     
 14420                           ;color.c: 95:  unsigned int tmp;;color.c: 96:  I2C_2_Master_Start();
 14421   00725A  EC11  F03B         	call	_I2C_2_Master_Start	;wreg free
 14422                           
 14423                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x00);
 14424   00725E  0E52               	movlw	82
 14425   007260  ECF6  F03A         	call	_I2C_2_Master_Write
 14426                           
 14427                           ;color.c: 98:  I2C_2_Master_Write(0xA0 | 0x1A);
 14428   007264  0EBA               	movlw	186
 14429   007266  ECF6  F03A         	call	_I2C_2_Master_Write
 14430                           
 14431                           ;color.c: 99:  I2C_2_Master_RepStart();
 14432   00726A  EC07  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14433                           
 14434                           ;color.c: 100:  I2C_2_Master_Write(0x52 | 0x01);
 14435   00726E  0E53               	movlw	83
 14436   007270  ECF6  F03A         	call	_I2C_2_Master_Write
 14437                           
 14438                           ;color.c: 101:  tmp=I2C_2_Master_Read(1);
 14439   007274  0E01               	movlw	1
 14440   007276  ECBE  F039         	call	_I2C_2_Master_Read
 14441   00727A  6E08               	movwf	??_color_read_Blue^0,c
 14442   00727C  5008               	movf	??_color_read_Blue^0,w,c
 14443   00727E  6E0B               	movwf	color_read_Blue@tmp^0,c
 14444   007280  6A0C               	clrf	(color_read_Blue@tmp+1)^0,c
 14445                           
 14446                           ;color.c: 102:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14447   007282  0E00               	movlw	0
 14448   007284  ECBE  F039         	call	_I2C_2_Master_Read
 14449   007288  6E08               	movwf	??_color_read_Blue^0,c
 14450   00728A  5008               	movf	??_color_read_Blue^0,w,c
 14451   00728C  6E0A               	movwf	(??_color_read_Blue+2)^0,c
 14452   00728E  6A09               	clrf	(??_color_read_Blue+1)^0,c
 14453   007290  500B               	movf	color_read_Blue@tmp^0,w,c
 14454   007292  1009               	iorwf	(??_color_read_Blue+1)^0,w,c
 14455   007294  6E0B               	movwf	color_read_Blue@tmp^0,c
 14456   007296  500C               	movf	(color_read_Blue@tmp+1)^0,w,c
 14457   007298  100A               	iorwf	(??_color_read_Blue+2)^0,w,c
 14458   00729A  6E0C               	movwf	(color_read_Blue@tmp+1)^0,c
 14459                           
 14460                           ;color.c: 103:  I2C_2_Master_Stop();
 14461   00729C  EC0C  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14462   0072A0                     
 14463                           ;color.c: 104:  return tmp;
 14464   0072A0  C00B  F006         	movff	color_read_Blue@tmp,?_color_read_Blue
 14465   0072A4  C00C  F007         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
 14466   0072A8  0012               	return		;funcret
 14467   0072AA                     __end_of_color_read_Blue:
 14468                           	callstack 0
 14469                           
 14470 ;; *************** function _I2C_2_Master_RepStart *****************
 14471 ;; Defined at:
 14472 ;;		line 30 in file "i2c.c"
 14473 ;; Parameters:    Size  Location     Type
 14474 ;;		None
 14475 ;; Auto vars:     Size  Location     Type
 14476 ;;		None
 14477 ;; Return value:  Size  Location     Type
 14478 ;;                  1    wreg      void 
 14479 ;; Registers used:
 14480 ;;		wreg, status,2, status,0, cstack
 14481 ;; Tracked objects:
 14482 ;;		On entry : 0/0
 14483 ;;		On exit  : 0/0
 14484 ;;		Unchanged: 0/0
 14485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14490 ;;Total ram usage:        0 bytes
 14491 ;; Hardware stack levels used: 1
 14492 ;; Hardware stack levels required when called: 3
 14493 ;; This function calls:
 14494 ;;		_I2C_2_Master_Idle
 14495 ;; This function is called by:
 14496 ;;		_color_read_Clear
 14497 ;;		_color_read_Red
 14498 ;;		_color_read_Green
 14499 ;;		_color_read_Blue
 14500 ;; This function uses a non-reentrant model
 14501 ;;
 14502                           
 14503                           	psect	text43
 14504   00760E                     __ptext43:
 14505                           	callstack 0
 14506   00760E                     _I2C_2_Master_RepStart:
 14507                           	callstack 26
 14508   00760E                     
 14509                           ;i2c.c: 31:   I2C_2_Master_Idle();
 14510   00760E  EC60  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14511   007612                     
 14512                           ;i2c.c: 32:   SSP2CON2bits.RSEN = 1;
 14513   007612  010E               	movlb	14	; () banked
 14514   007614  83DA               	bsf	218,1,b	;volatile
 14515   007616                     
 14516                           ; BSR set to: 14
 14517   007616  0012               	return		;funcret
 14518   007618                     __end_of_I2C_2_Master_RepStart:
 14519                           	callstack 0
 14520                           
 14521 ;; *************** function _I2C_2_Master_Read *****************
 14522 ;; Defined at:
 14523 ;;		line 45 in file "i2c.c"
 14524 ;; Parameters:    Size  Location     Type
 14525 ;;  ack             1    wreg     unsigned char 
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;  ack             1    3[COMRAM] unsigned char 
 14528 ;;  tmp             1    4[COMRAM] unsigned char 
 14529 ;; Return value:  Size  Location     Type
 14530 ;;                  1    wreg      unsigned char 
 14531 ;; Registers used:
 14532 ;;		wreg, status,2, status,0, cstack
 14533 ;; Tracked objects:
 14534 ;;		On entry : 0/0
 14535 ;;		On exit  : 0/0
 14536 ;;		Unchanged: 0/0
 14537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14540 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14541 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14542 ;;Total ram usage:        3 bytes
 14543 ;; Hardware stack levels used: 1
 14544 ;; Hardware stack levels required when called: 3
 14545 ;; This function calls:
 14546 ;;		_I2C_2_Master_Idle
 14547 ;; This function is called by:
 14548 ;;		_color_read_Clear
 14549 ;;		_color_read_Red
 14550 ;;		_color_read_Green
 14551 ;;		_color_read_Blue
 14552 ;; This function uses a non-reentrant model
 14553 ;;
 14554                           
 14555                           	psect	text44
 14556   00737C                     __ptext44:
 14557                           	callstack 0
 14558   00737C                     _I2C_2_Master_Read:
 14559                           	callstack 26
 14560                           
 14561                           ; BSR set to: 14
 14562                           ;incstack = 0
 14563                           ;I2C_2_Master_Read@ack stored from wreg
 14564   00737C  6E04               	movwf	I2C_2_Master_Read@ack^0,c
 14565   00737E                     
 14566                           ;i2c.c: 46:   unsigned char tmp;;i2c.c: 47:   I2C_2_Master_Idle();
 14567   00737E  EC60  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14568   007382                     
 14569                           ;i2c.c: 48:   SSP2CON2bits.RCEN = 1;
 14570   007382  010E               	movlb	14	; () banked
 14571   007384  87DA               	bsf	218,3,b	;volatile
 14572                           
 14573                           ;i2c.c: 49:   I2C_2_Master_Idle();
 14574   007386  EC60  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14575   00738A                     
 14576                           ;i2c.c: 50:   tmp = SSP2BUF;
 14577   00738A  CED5 F005          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 14578                           
 14579                           ;i2c.c: 51:   I2C_2_Master_Idle();
 14580   00738E  EC60  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14581   007392                     
 14582                           ;i2c.c: 52:   SSP2CON2bits.ACKDT = !ack;
 14583   007392  5004               	movf	I2C_2_Master_Read@ack^0,w,c
 14584   007394  B4D8               	btfsc	status,2,c
 14585   007396  EFCF  F039         	goto	u4491
 14586   00739A  EFD3  F039         	goto	u4490
 14587   00739E                     u4491:
 14588   00739E  6A03               	clrf	??_I2C_2_Master_Read^0,c
 14589   0073A0  2A03               	incf	??_I2C_2_Master_Read^0,f,c
 14590   0073A2  EFD4  F039         	goto	u4508
 14591   0073A6                     u4490:
 14592   0073A6  6A03               	clrf	??_I2C_2_Master_Read^0,c
 14593   0073A8                     u4508:
 14594   0073A8  3A03               	swapf	??_I2C_2_Master_Read^0,f,c
 14595   0073AA  4603               	rlncf	??_I2C_2_Master_Read^0,f,c
 14596   0073AC  010E               	movlb	14	; () banked
 14597   0073AE  51DA               	movf	218,w,b	;volatile
 14598   0073B0  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 14599   0073B2  0BDF               	andlw	-33
 14600   0073B4  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 14601   0073B6  6FDA               	movwf	218,b	;volatile
 14602   0073B8                     
 14603                           ; BSR set to: 14
 14604                           ;i2c.c: 53:   SSP2CON2bits.ACKEN = 1;
 14605   0073B8  89DA               	bsf	218,4,b	;volatile
 14606   0073BA                     
 14607                           ; BSR set to: 14
 14608                           ;i2c.c: 54:   return tmp;
 14609   0073BA  5005               	movf	I2C_2_Master_Read@tmp^0,w,c
 14610   0073BC                     
 14611                           ; BSR set to: 14
 14612   0073BC  0012               	return		;funcret
 14613   0073BE                     __end_of_I2C_2_Master_Read:
 14614                           	callstack 0
 14615                           
 14616 ;; *************** function _color_click_toggleLED *****************
 14617 ;; Defined at:
 14618 ;;		line 108 in file "color.c"
 14619 ;; Parameters:    Size  Location     Type
 14620 ;;		None
 14621 ;; Auto vars:     Size  Location     Type
 14622 ;;		None
 14623 ;; Return value:  Size  Location     Type
 14624 ;;                  1    wreg      void 
 14625 ;; Registers used:
 14626 ;;		wreg, status,2, status,0
 14627 ;; Tracked objects:
 14628 ;;		On entry : 0/0
 14629 ;;		On exit  : 0/0
 14630 ;;		Unchanged: 0/0
 14631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14636 ;;Total ram usage:        1 bytes
 14637 ;; Hardware stack levels used: 1
 14638 ;; Hardware stack levels required when called: 2
 14639 ;; This function calls:
 14640 ;;		Nothing
 14641 ;; This function is called by:
 14642 ;;		_main
 14643 ;; This function uses a non-reentrant model
 14644 ;;
 14645                           
 14646                           	psect	text45
 14647   007104                     __ptext45:
 14648                           	callstack 0
 14649   007104                     _color_click_toggleLED:
 14650                           	callstack 28
 14651   007104                     
 14652                           ;color.c: 109:     LATGbits.LATG0 = !LATGbits.LATG0;
 14653   007104  A07F               	btfss	127,0,c	;volatile
 14654   007106  EF87  F038         	goto	u5151
 14655   00710A  EF8B  F038         	goto	u5150
 14656   00710E                     u5151:
 14657   00710E  6A02               	clrf	??_color_click_toggleLED^0,c
 14658   007110  2A02               	incf	??_color_click_toggleLED^0,f,c
 14659   007112  EF8C  F038         	goto	u5168
 14660   007116                     u5150:
 14661   007116  6A02               	clrf	??_color_click_toggleLED^0,c
 14662   007118                     u5168:
 14663   007118  507F               	movf	127,w,c	;volatile
 14664   00711A  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14665   00711C  0BFE               	andlw	-2
 14666   00711E  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14667   007120  6E7F               	movwf	127,c	;volatile
 14668                           
 14669                           ;color.c: 110:     LATAbits.LATA3 = !LATAbits.LATA3;
 14670   007122  A679               	btfss	121,3,c	;volatile
 14671   007124  EF96  F038         	goto	u5171
 14672   007128  EF9A  F038         	goto	u5170
 14673   00712C                     u5171:
 14674   00712C  6A02               	clrf	??_color_click_toggleLED^0,c
 14675   00712E  2A02               	incf	??_color_click_toggleLED^0,f,c
 14676   007130  EF9B  F038         	goto	u5188
 14677   007134                     u5170:
 14678   007134  6A02               	clrf	??_color_click_toggleLED^0,c
 14679   007136                     u5188:
 14680   007136  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14681   007138  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14682   00713A  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14683   00713C  5079               	movf	121,w,c	;volatile
 14684   00713E  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14685   007140  0BF7               	andlw	-9
 14686   007142  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14687   007144  6E79               	movwf	121,c	;volatile
 14688                           
 14689                           ;color.c: 111:     LATEbits.LATE7 = !LATEbits.LATE7;
 14690   007146  AE7D               	btfss	125,7,c	;volatile
 14691   007148  EFA8  F038         	goto	u5191
 14692   00714C  EFAC  F038         	goto	u5190
 14693   007150                     u5191:
 14694   007150  6A02               	clrf	??_color_click_toggleLED^0,c
 14695   007152  2A02               	incf	??_color_click_toggleLED^0,f,c
 14696   007154  EFAD  F038         	goto	u5208
 14697   007158                     u5190:
 14698   007158  6A02               	clrf	??_color_click_toggleLED^0,c
 14699   00715A                     u5208:
 14700   00715A  3202               	rrcf	??_color_click_toggleLED^0,f,c
 14701   00715C  3202               	rrcf	??_color_click_toggleLED^0,f,c
 14702   00715E  507D               	movf	125,w,c	;volatile
 14703   007160  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14704   007162  0B7F               	andlw	-129
 14705   007164  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14706   007166  6E7D               	movwf	125,c	;volatile
 14707   007168  0012               	return		;funcret
 14708   00716A                     __end_of_color_click_toggleLED:
 14709                           	callstack 0
 14710                           
 14711 ;; *************** function _color_click_init *****************
 14712 ;; Defined at:
 14713 ;;		line 8 in file "color.c"
 14714 ;; Parameters:    Size  Location     Type
 14715 ;;		None
 14716 ;; Auto vars:     Size  Location     Type
 14717 ;;		None
 14718 ;; Return value:  Size  Location     Type
 14719 ;;                  1    wreg      void 
 14720 ;; Registers used:
 14721 ;;		wreg, status,2, status,0, cstack
 14722 ;; Tracked objects:
 14723 ;;		On entry : 0/0
 14724 ;;		On exit  : 0/0
 14725 ;;		Unchanged: 0/0
 14726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14729 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14730 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14731 ;;Total ram usage:        1 bytes
 14732 ;; Hardware stack levels used: 1
 14733 ;; Hardware stack levels required when called: 5
 14734 ;; This function calls:
 14735 ;;		_I2C_2_Master_Init
 14736 ;;		_color_writetoaddr
 14737 ;; This function is called by:
 14738 ;;		_main
 14739 ;; This function uses a non-reentrant model
 14740 ;;
 14741                           
 14742                           	psect	text46
 14743   0072AA                     __ptext46:
 14744                           	callstack 0
 14745   0072AA                     _color_click_init:
 14746                           	callstack 25
 14747   0072AA                     
 14748                           ;color.c: 10:     I2C_2_Master_Init();
 14749   0072AA  EC4B  F03A         	call	_I2C_2_Master_Init	;wreg free
 14750   0072AE                     
 14751                           ;color.c: 11:  color_writetoaddr(0x00, 0x01);
 14752   0072AE  0E01               	movlw	1
 14753   0072B0  6E04               	movwf	color_writetoaddr@value^0,c
 14754   0072B2  0E00               	movlw	0
 14755   0072B4  EC87  F03A         	call	_color_writetoaddr
 14756   0072B8                     
 14757                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
 14758   0072B8  0E3F               	movlw	63
 14759   0072BA  6E06               	movwf	??_color_click_init^0,c
 14760   0072BC  0E55               	movlw	85
 14761   0072BE                     u8167:
 14762   0072BE  2EE8               	decfsz	wreg,f,c
 14763   0072C0  D7FE               	bra	u8167
 14764   0072C2  2E06               	decfsz	??_color_click_init^0,f,c
 14765   0072C4  D7FC               	bra	u8167
 14766   0072C6  0000               	nop	
 14767   0072C8                     
 14768                           ;color.c: 13:  color_writetoaddr(0x00, 0x03);
 14769   0072C8  0E03               	movlw	3
 14770   0072CA  6E04               	movwf	color_writetoaddr@value^0,c
 14771   0072CC  0E00               	movlw	0
 14772   0072CE  EC87  F03A         	call	_color_writetoaddr
 14773   0072D2                     
 14774                           ;color.c: 14:  color_writetoaddr(0x01, 0xFF);
 14775   0072D2  0EFF               	movlw	255
 14776   0072D4  6E04               	movwf	color_writetoaddr@value^0,c
 14777   0072D6  0E01               	movlw	1
 14778   0072D8  EC87  F03A         	call	_color_writetoaddr
 14779   0072DC                     
 14780                           ;color.c: 15:     color_writetoaddr(0x03, 0xFF);
 14781   0072DC  0EFF               	movlw	255
 14782   0072DE  6E04               	movwf	color_writetoaddr@value^0,c
 14783   0072E0  0E03               	movlw	3
 14784   0072E2  EC87  F03A         	call	_color_writetoaddr
 14785   0072E6                     
 14786                           ;color.c: 27:     LATGbits.LATG0=0;
 14787   0072E6  907F               	bcf	127,0,c	;volatile
 14788   0072E8                     
 14789                           ;color.c: 28:     LATAbits.LATA3=0;
 14790   0072E8  9679               	bcf	121,3,c	;volatile
 14791   0072EA                     
 14792                           ;color.c: 29:     LATEbits.LATE7=0;
 14793   0072EA  9E7D               	bcf	125,7,c	;volatile
 14794   0072EC                     
 14795                           ;color.c: 32:     TRISGbits.TRISG0=0;
 14796   0072EC  9087               	bcf	135,0,c	;volatile
 14797   0072EE                     
 14798                           ;color.c: 33:     TRISAbits.TRISA3=0;
 14799   0072EE  9681               	bcf	129,3,c	;volatile
 14800   0072F0                     
 14801                           ;color.c: 34:     TRISEbits.TRISE7=0;
 14802   0072F0  9E85               	bcf	133,7,c	;volatile
 14803   0072F2  0012               	return		;funcret
 14804   0072F4                     __end_of_color_click_init:
 14805                           	callstack 0
 14806                           
 14807 ;; *************** function _color_writetoaddr *****************
 14808 ;; Defined at:
 14809 ;;		line 38 in file "color.c"
 14810 ;; Parameters:    Size  Location     Type
 14811 ;;  address         1    wreg     unsigned char 
 14812 ;;  value           1    3[COMRAM] unsigned char 
 14813 ;; Auto vars:     Size  Location     Type
 14814 ;;  address         1    4[COMRAM] unsigned char 
 14815 ;; Return value:  Size  Location     Type
 14816 ;;                  1    wreg      void 
 14817 ;; Registers used:
 14818 ;;		wreg, status,2, status,0, cstack
 14819 ;; Tracked objects:
 14820 ;;		On entry : 0/0
 14821 ;;		On exit  : 0/0
 14822 ;;		Unchanged: 0/0
 14823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14824 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14828 ;;Total ram usage:        2 bytes
 14829 ;; Hardware stack levels used: 1
 14830 ;; Hardware stack levels required when called: 4
 14831 ;; This function calls:
 14832 ;;		_I2C_2_Master_Start
 14833 ;;		_I2C_2_Master_Stop
 14834 ;;		_I2C_2_Master_Write
 14835 ;; This function is called by:
 14836 ;;		_color_click_init
 14837 ;;		_decide_action
 14838 ;;		_main
 14839 ;; This function uses a non-reentrant model
 14840 ;;
 14841                           
 14842                           	psect	text47
 14843   00750E                     __ptext47:
 14844                           	callstack 0
 14845   00750E                     _color_writetoaddr:
 14846                           	callstack 25
 14847                           
 14848                           ;incstack = 0
 14849                           ;color_writetoaddr@address stored from wreg
 14850   00750E  6E05               	movwf	color_writetoaddr@address^0,c
 14851   007510                     
 14852                           ;color.c: 39:     I2C_2_Master_Start();
 14853   007510  EC11  F03B         	call	_I2C_2_Master_Start	;wreg free
 14854                           
 14855                           ;color.c: 40:     I2C_2_Master_Write(0x52 | 0x00);
 14856   007514  0E52               	movlw	82
 14857   007516  ECF6  F03A         	call	_I2C_2_Master_Write
 14858                           
 14859                           ;color.c: 41:     I2C_2_Master_Write(0x80 | address);
 14860   00751A  5005               	movf	color_writetoaddr@address^0,w,c
 14861   00751C  0980               	iorlw	128
 14862   00751E  ECF6  F03A         	call	_I2C_2_Master_Write
 14863                           
 14864                           ;color.c: 42:     I2C_2_Master_Write(value);
 14865   007522  5004               	movf	color_writetoaddr@value^0,w,c
 14866   007524  ECF6  F03A         	call	_I2C_2_Master_Write
 14867                           
 14868                           ;color.c: 43:     I2C_2_Master_Stop();
 14869   007528  EC0C  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14870   00752C  0012               	return		;funcret
 14871   00752E                     __end_of_color_writetoaddr:
 14872                           	callstack 0
 14873                           
 14874 ;; *************** function _I2C_2_Master_Write *****************
 14875 ;; Defined at:
 14876 ;;		line 40 in file "i2c.c"
 14877 ;; Parameters:    Size  Location     Type
 14878 ;;  data_byte       1    wreg     unsigned char 
 14879 ;; Auto vars:     Size  Location     Type
 14880 ;;  data_byte       1    2[COMRAM] unsigned char 
 14881 ;; Return value:  Size  Location     Type
 14882 ;;                  1    wreg      void 
 14883 ;; Registers used:
 14884 ;;		wreg, status,2, status,0, cstack
 14885 ;; Tracked objects:
 14886 ;;		On entry : 0/0
 14887 ;;		On exit  : 0/0
 14888 ;;		Unchanged: 0/0
 14889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14893 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14894 ;;Total ram usage:        1 bytes
 14895 ;; Hardware stack levels used: 1
 14896 ;; Hardware stack levels required when called: 3
 14897 ;; This function calls:
 14898 ;;		_I2C_2_Master_Idle
 14899 ;; This function is called by:
 14900 ;;		_color_writetoaddr
 14901 ;;		_color_read_Clear
 14902 ;;		_color_read_Red
 14903 ;;		_color_read_Green
 14904 ;;		_color_read_Blue
 14905 ;; This function uses a non-reentrant model
 14906 ;;
 14907                           
 14908                           	psect	text48
 14909   0075EC                     __ptext48:
 14910                           	callstack 0
 14911   0075EC                     _I2C_2_Master_Write:
 14912                           	callstack 25
 14913                           
 14914                           ;incstack = 0
 14915                           ;I2C_2_Master_Write@data_byte stored from wreg
 14916   0075EC  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
 14917   0075EE                     
 14918                           ;i2c.c: 41:   I2C_2_Master_Idle();
 14919   0075EE  EC60  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14920   0075F2                     
 14921                           ;i2c.c: 42:   SSP2BUF = data_byte;
 14922   0075F2  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 14923   0075F6  0012               	return		;funcret
 14924   0075F8                     __end_of_I2C_2_Master_Write:
 14925                           	callstack 0
 14926                           
 14927 ;; *************** function _I2C_2_Master_Stop *****************
 14928 ;; Defined at:
 14929 ;;		line 35 in file "i2c.c"
 14930 ;; Parameters:    Size  Location     Type
 14931 ;;		None
 14932 ;; Auto vars:     Size  Location     Type
 14933 ;;		None
 14934 ;; Return value:  Size  Location     Type
 14935 ;;                  1    wreg      void 
 14936 ;; Registers used:
 14937 ;;		wreg, status,2, status,0, cstack
 14938 ;; Tracked objects:
 14939 ;;		On entry : 0/0
 14940 ;;		On exit  : 0/0
 14941 ;;		Unchanged: 0/0
 14942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14947 ;;Total ram usage:        0 bytes
 14948 ;; Hardware stack levels used: 1
 14949 ;; Hardware stack levels required when called: 3
 14950 ;; This function calls:
 14951 ;;		_I2C_2_Master_Idle
 14952 ;; This function is called by:
 14953 ;;		_color_writetoaddr
 14954 ;;		_color_read_Clear
 14955 ;;		_color_read_Red
 14956 ;;		_color_read_Green
 14957 ;;		_color_read_Blue
 14958 ;; This function uses a non-reentrant model
 14959 ;;
 14960                           
 14961                           	psect	text49
 14962   007618                     __ptext49:
 14963                           	callstack 0
 14964   007618                     _I2C_2_Master_Stop:
 14965                           	callstack 25
 14966   007618                     
 14967                           ;i2c.c: 36:   I2C_2_Master_Idle();
 14968   007618  EC60  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14969   00761C                     
 14970                           ;i2c.c: 37:   SSP2CON2bits.PEN = 1;
 14971   00761C  010E               	movlb	14	; () banked
 14972   00761E  85DA               	bsf	218,2,b	;volatile
 14973   007620                     
 14974                           ; BSR set to: 14
 14975   007620  0012               	return		;funcret
 14976   007622                     __end_of_I2C_2_Master_Stop:
 14977                           	callstack 0
 14978                           
 14979 ;; *************** function _I2C_2_Master_Start *****************
 14980 ;; Defined at:
 14981 ;;		line 25 in file "i2c.c"
 14982 ;; Parameters:    Size  Location     Type
 14983 ;;		None
 14984 ;; Auto vars:     Size  Location     Type
 14985 ;;		None
 14986 ;; Return value:  Size  Location     Type
 14987 ;;                  1    wreg      void 
 14988 ;; Registers used:
 14989 ;;		wreg, status,2, status,0, cstack
 14990 ;; Tracked objects:
 14991 ;;		On entry : 0/0
 14992 ;;		On exit  : 0/0
 14993 ;;		Unchanged: 0/0
 14994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14999 ;;Total ram usage:        0 bytes
 15000 ;; Hardware stack levels used: 1
 15001 ;; Hardware stack levels required when called: 3
 15002 ;; This function calls:
 15003 ;;		_I2C_2_Master_Idle
 15004 ;; This function is called by:
 15005 ;;		_color_writetoaddr
 15006 ;;		_color_read_Clear
 15007 ;;		_color_read_Red
 15008 ;;		_color_read_Green
 15009 ;;		_color_read_Blue
 15010 ;; This function uses a non-reentrant model
 15011 ;;
 15012                           
 15013                           	psect	text50
 15014   007622                     __ptext50:
 15015                           	callstack 0
 15016   007622                     _I2C_2_Master_Start:
 15017                           	callstack 25
 15018   007622                     
 15019                           ;i2c.c: 26:   I2C_2_Master_Idle();
 15020   007622  EC60  F03A         	call	_I2C_2_Master_Idle	;wreg free
 15021   007626                     
 15022                           ;i2c.c: 27:   SSP2CON2bits.SEN = 1;
 15023   007626  010E               	movlb	14	; () banked
 15024   007628  81DA               	bsf	218,0,b	;volatile
 15025   00762A                     
 15026                           ; BSR set to: 14
 15027   00762A  0012               	return		;funcret
 15028   00762C                     __end_of_I2C_2_Master_Start:
 15029                           	callstack 0
 15030                           
 15031 ;; *************** function _I2C_2_Master_Idle *****************
 15032 ;; Defined at:
 15033 ;;		line 21 in file "i2c.c"
 15034 ;; Parameters:    Size  Location     Type
 15035 ;;		None
 15036 ;; Auto vars:     Size  Location     Type
 15037 ;;		None
 15038 ;; Return value:  Size  Location     Type
 15039 ;;                  1    wreg      void 
 15040 ;; Registers used:
 15041 ;;		wreg, status,2, status,0
 15042 ;; Tracked objects:
 15043 ;;		On entry : 0/0
 15044 ;;		On exit  : 0/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15049 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15050 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15051 ;;Total ram usage:        1 bytes
 15052 ;; Hardware stack levels used: 1
 15053 ;; Hardware stack levels required when called: 2
 15054 ;; This function calls:
 15055 ;;		Nothing
 15056 ;; This function is called by:
 15057 ;;		_I2C_2_Master_Start
 15058 ;;		_I2C_2_Master_RepStart
 15059 ;;		_I2C_2_Master_Stop
 15060 ;;		_I2C_2_Master_Write
 15061 ;;		_I2C_2_Master_Read
 15062 ;; This function uses a non-reentrant model
 15063 ;;
 15064                           
 15065                           	psect	text51
 15066   0074C0                     __ptext51:
 15067                           	callstack 0
 15068   0074C0                     _I2C_2_Master_Idle:
 15069                           	callstack 25
 15070   0074C0                     l119:
 15071   0074C0  010E               	movlb	14	; () banked
 15072   0074C2  B5D8               	btfsc	216,2,b	;volatile
 15073   0074C4  EF66  F03A         	goto	u2971
 15074   0074C8  EF68  F03A         	goto	u2970
 15075   0074CC                     u2971:
 15076   0074CC  EF60  F03A         	goto	l119
 15077   0074D0                     u2970:
 15078   0074D0                     
 15079                           ; BSR set to: 14
 15080   0074D0  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
 15081   0074D4  0E1F               	movlw	31
 15082   0074D6  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
 15083   0074D8  A4D8               	btfss	status,2,c
 15084   0074DA  EF71  F03A         	goto	u2981
 15085   0074DE  EF73  F03A         	goto	u2980
 15086   0074E2                     u2981:
 15087   0074E2  EF60  F03A         	goto	l119
 15088   0074E6                     u2980:
 15089   0074E6                     
 15090                           ; BSR set to: 14
 15091   0074E6  0012               	return		;funcret
 15092   0074E8                     __end_of_I2C_2_Master_Idle:
 15093                           	callstack 0
 15094                           
 15095 ;; *************** function _I2C_2_Master_Init *****************
 15096 ;; Defined at:
 15097 ;;		line 4 in file "i2c.c"
 15098 ;; Parameters:    Size  Location     Type
 15099 ;;		None
 15100 ;; Auto vars:     Size  Location     Type
 15101 ;;		None
 15102 ;; Return value:  Size  Location     Type
 15103 ;;                  1    wreg      void 
 15104 ;; Registers used:
 15105 ;;		wreg, status,2
 15106 ;; Tracked objects:
 15107 ;;		On entry : 0/0
 15108 ;;		On exit  : 0/0
 15109 ;;		Unchanged: 0/0
 15110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15115 ;;Total ram usage:        0 bytes
 15116 ;; Hardware stack levels used: 1
 15117 ;; Hardware stack levels required when called: 2
 15118 ;; This function calls:
 15119 ;;		Nothing
 15120 ;; This function is called by:
 15121 ;;		_color_click_init
 15122 ;;		_main
 15123 ;; This function uses a non-reentrant model
 15124 ;;
 15125                           
 15126                           	psect	text52
 15127   007496                     __ptext52:
 15128                           	callstack 0
 15129   007496                     _I2C_2_Master_Init:
 15130                           	callstack 27
 15131   007496                     
 15132                           ;i2c.c: 6:   SSP2CON1bits.SSPM= 0b1000;
 15133   007496  010E               	movlb	14	; () banked
 15134   007498  51D9               	movf	217,w,b	;volatile
 15135   00749A  0BF0               	andlw	-16
 15136   00749C  0908               	iorlw	8
 15137   00749E  6FD9               	movwf	217,b	;volatile
 15138   0074A0                     
 15139                           ; BSR set to: 14
 15140                           ;i2c.c: 7:   SSP2CON1bits.SSPEN = 1;
 15141   0074A0  8BD9               	bsf	217,5,b	;volatile
 15142                           
 15143                           ;i2c.c: 8:   SSP2ADD = (64000000/(4*100000))-1;
 15144   0074A2  0E9F               	movlw	159
 15145   0074A4  6FD6               	movwf	214,b	;volatile
 15146   0074A6                     
 15147                           ; BSR set to: 14
 15148                           ;i2c.c: 11:   TRISDbits.TRISD5 = 1;
 15149   0074A6  8A84               	bsf	132,5,c	;volatile
 15150   0074A8                     
 15151                           ; BSR set to: 14
 15152                           ;i2c.c: 12:   TRISDbits.TRISD6 = 1;
 15153   0074A8  8C84               	bsf	132,6,c	;volatile
 15154   0074AA                     
 15155                           ; BSR set to: 14
 15156                           ;i2c.c: 13:   ANSELDbits.ANSELD5=0;
 15157   0074AA  9BA7               	bcf	167,5,b	;volatile
 15158   0074AC                     
 15159                           ; BSR set to: 14
 15160                           ;i2c.c: 14:   ANSELDbits.ANSELD6=0;
 15161   0074AC  9DA7               	bcf	167,6,b	;volatile
 15162                           
 15163                           ;i2c.c: 15:   SSP2DATPPS=0x1D;
 15164   0074AE  0E1D               	movlw	29
 15165   0074B0  6F1D               	movwf	29,b	;volatile
 15166                           
 15167                           ;i2c.c: 16:   SSP2CLKPPS=0x1E;
 15168   0074B2  0E1E               	movlw	30
 15169   0074B4  6F1C               	movwf	28,b	;volatile
 15170                           
 15171                           ;i2c.c: 17:   RD5PPS=0x1C;
 15172   0074B6  0E1C               	movlw	28
 15173   0074B8  6F6F               	movwf	111,b	;volatile
 15174                           
 15175                           ;i2c.c: 18:   RD6PPS=0x1B;
 15176   0074BA  0E1B               	movlw	27
 15177   0074BC  6F70               	movwf	112,b	;volatile
 15178   0074BE                     
 15179                           ; BSR set to: 14
 15180   0074BE  0012               	return		;funcret
 15181   0074C0                     __end_of_I2C_2_Master_Init:
 15182                           	callstack 0
 15183                           
 15184 ;; *************** function _Timer0_init *****************
 15185 ;; Defined at:
 15186 ;;		line 7 in file "timers.c"
 15187 ;; Parameters:    Size  Location     Type
 15188 ;;		None
 15189 ;; Auto vars:     Size  Location     Type
 15190 ;;		None
 15191 ;; Return value:  Size  Location     Type
 15192 ;;                  1    wreg      void 
 15193 ;; Registers used:
 15194 ;;		wreg, status,2
 15195 ;; Tracked objects:
 15196 ;;		On entry : 0/0
 15197 ;;		On exit  : 0/0
 15198 ;;		Unchanged: 0/0
 15199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15204 ;;Total ram usage:        0 bytes
 15205 ;; Hardware stack levels used: 1
 15206 ;; Hardware stack levels required when called: 2
 15207 ;; This function calls:
 15208 ;;		Nothing
 15209 ;; This function is called by:
 15210 ;;		_main
 15211 ;; This function uses a non-reentrant model
 15212 ;;
 15213                           
 15214                           	psect	text53
 15215   00752E                     __ptext53:
 15216                           	callstack 0
 15217   00752E                     _Timer0_init:
 15218                           	callstack 28
 15219   00752E                     
 15220                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 15221   00752E  50D6               	movf	214,w,c	;volatile
 15222   007530  0B1F               	andlw	-225
 15223   007532  0940               	iorlw	64
 15224   007534  6ED6               	movwf	214,c	;volatile
 15225   007536                     
 15226                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 15227   007536  88D6               	bsf	214,4,c	;volatile
 15228                           
 15229                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1111;
 15230   007538  0E0F               	movlw	15
 15231   00753A  12D6               	iorwf	214,f,c	;volatile
 15232                           
 15233                           ;timers.c: 12:     T0CON0bits.T0OUTPS=0b000;
 15234   00753C  0EF0               	movlw	-16
 15235   00753E  16D5               	andwf	213,f,c	;volatile
 15236   007540                     
 15237                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
 15238   007540  88D5               	bsf	213,4,c	;volatile
 15239                           
 15240                           ;timers.c: 17:     TMR0H=0b00001011;
 15241   007542  0E0B               	movlw	11
 15242   007544  6ED4               	movwf	212,c	;volatile
 15243                           
 15244                           ;timers.c: 18:     TMR0L=0b11011011;
 15245   007546  0EDB               	movlw	219
 15246   007548  6ED3               	movwf	211,c	;volatile
 15247   00754A                     
 15248                           ;timers.c: 20:     T0CON0bits.T0EN=1;
 15249   00754A  8ED5               	bsf	213,7,c	;volatile
 15250   00754C  0012               	return		;funcret
 15251   00754E                     __end_of_Timer0_init:
 15252                           	callstack 0
 15253                           
 15254 ;; *************** function _Interrupts_init *****************
 15255 ;; Defined at:
 15256 ;;		line 7 in file "interrupts.c"
 15257 ;; Parameters:    Size  Location     Type
 15258 ;;		None
 15259 ;; Auto vars:     Size  Location     Type
 15260 ;;		None
 15261 ;; Return value:  Size  Location     Type
 15262 ;;                  1    wreg      void 
 15263 ;; Registers used:
 15264 ;;		None
 15265 ;; Tracked objects:
 15266 ;;		On entry : 0/0
 15267 ;;		On exit  : 0/0
 15268 ;;		Unchanged: 0/0
 15269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15274 ;;Total ram usage:        0 bytes
 15275 ;; Hardware stack levels used: 1
 15276 ;; Hardware stack levels required when called: 2
 15277 ;; This function calls:
 15278 ;;		Nothing
 15279 ;; This function is called by:
 15280 ;;		_main
 15281 ;; This function uses a non-reentrant model
 15282 ;;
 15283                           
 15284                           	psect	text54
 15285   0075F8                     __ptext54:
 15286                           	callstack 0
 15287   0075F8                     _Interrupts_init:
 15288                           	callstack 28
 15289   0075F8                     
 15290                           ;interrupts.c: 9:     INTCONbits.PEIE=1;
 15291   0075F8  8CF2               	bsf	242,6,c	;volatile
 15292                           
 15293                           ;interrupts.c: 10:     PIE2bits.C1IE=1;
 15294   0075FA  010E               	movlb	14	; () banked
 15295   0075FC  812B               	bsf	43,0,b	;volatile
 15296                           
 15297                           ;interrupts.c: 14:     PIE0bits.IOCIE=1;
 15298   0075FE  8929               	bsf	41,4,b	;volatile
 15299                           
 15300                           ;interrupts.c: 15:     INTCONbits.GIE=1;
 15301   007600  8EF2               	bsf	242,7,c	;volatile
 15302   007602                     
 15303                           ; BSR set to: 14
 15304   007602  0012               	return		;funcret
 15305   007604                     __end_of_Interrupts_init:
 15306                           	callstack 0
 15307                           
 15308 ;; *************** function _ADC_init *****************
 15309 ;; Defined at:
 15310 ;;		line 9 in file "ADC.c"
 15311 ;; Parameters:    Size  Location     Type
 15312 ;;		None
 15313 ;; Auto vars:     Size  Location     Type
 15314 ;;		None
 15315 ;; Return value:  Size  Location     Type
 15316 ;;                  1    wreg      void 
 15317 ;; Registers used:
 15318 ;;		wreg, status,2
 15319 ;; Tracked objects:
 15320 ;;		On entry : 0/0
 15321 ;;		On exit  : 0/0
 15322 ;;		Unchanged: 0/0
 15323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15328 ;;Total ram usage:        0 bytes
 15329 ;; Hardware stack levels used: 1
 15330 ;; Hardware stack levels required when called: 2
 15331 ;; This function calls:
 15332 ;;		Nothing
 15333 ;; This function is called by:
 15334 ;;		_main
 15335 ;; This function uses a non-reentrant model
 15336 ;;
 15337                           
 15338                           	psect	text55
 15339   00758A                     __ptext55:
 15340                           	callstack 0
 15341   00758A                     _ADC_init:
 15342                           	callstack 28
 15343   00758A                     
 15344                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
 15345   00758A  8C86               	bsf	134,6,c	;volatile
 15346                           
 15347                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
 15348   00758C  010E               	movlb	14	; () banked
 15349   00758E  8DB4               	bsf	180,6,b	;volatile
 15350                           
 15351                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
 15352   007590  010F               	movlb	15	; () banked
 15353   007592  9958               	bcf	88,4,b	;volatile
 15354   007594                     
 15355                           ; BSR set to: 15
 15356                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
 15357   007594  0EFC               	movlw	-4
 15358   007596  1758               	andwf	88,f,b	;volatile
 15359                           
 15360                           ;ADC.c: 17:     ADPCH=0b101110;
 15361   007598  0E2E               	movlw	46
 15362   00759A  6F5F               	movwf	95,b	;volatile
 15363   00759C                     
 15364                           ; BSR set to: 15
 15365                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
 15366   00759C  9460               	bcf	96,2,c	;volatile
 15367   00759E                     
 15368                           ; BSR set to: 15
 15369                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
 15370   00759E  8860               	bsf	96,4,c	;volatile
 15371   0075A0                     
 15372                           ; BSR set to: 15
 15373                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
 15374   0075A0  8E60               	bsf	96,7,c	;volatile
 15375   0075A2                     
 15376                           ; BSR set to: 15
 15377   0075A2  0012               	return		;funcret
 15378   0075A4                     __end_of_ADC_init:
 15379                           	callstack 0
 15380                           
 15381 ;; *************** function _HighISR *****************
 15382 ;; Defined at:
 15383 ;;		line 23 in file "interrupts.c"
 15384 ;; Parameters:    Size  Location     Type
 15385 ;;		None
 15386 ;; Auto vars:     Size  Location     Type
 15387 ;;		None
 15388 ;; Return value:  Size  Location     Type
 15389 ;;                  1    wreg      void 
 15390 ;; Registers used:
 15391 ;;		wreg, cstack
 15392 ;; Tracked objects:
 15393 ;;		On entry : 0/0
 15394 ;;		On exit  : 0/0
 15395 ;;		Unchanged: 0/0
 15396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15401 ;;Total ram usage:        0 bytes
 15402 ;; Hardware stack levels used: 1
 15403 ;; Hardware stack levels required when called: 1
 15404 ;; This function calls:
 15405 ;;		i2_sendCharSerial4
 15406 ;; This function is called by:
 15407 ;;		Interrupt level 2
 15408 ;; This function uses a non-reentrant model
 15409 ;;
 15410                           
 15411                           	psect	intcode
 15412   000008                     __pintcode:
 15413                           	callstack 0
 15414   000008                     _HighISR:
 15415                           	callstack 24
 15416                           
 15417                           ; BSR set to: 15
 15418                           ;incstack = 0
 15419   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15420   00000A                     
 15421                           ;interrupts.c: 48:     if (PORTBbits.RB0){
 15422   00000A  A08A               	btfss	138,0,c	;volatile
 15423   00000C  EF0A  F000         	goto	i2u585_41
 15424   000010  EF0C  F000         	goto	i2u585_40
 15425   000014                     i2u585_41:
 15426   000014  EF10  F000         	goto	i2l454
 15427   000018                     i2u585_40:
 15428   000018                     
 15429                           ;interrupts.c: 49:         LATHbits.LATH3 = 0;
 15430   000018  9680               	bcf	128,3,c	;volatile
 15431   00001A                     
 15432                           ;interrupts.c: 50:         sendCharSerial4('a');
 15433   00001A  0E61               	movlw	97
 15434   00001C  ECEA  F03A         	call	i2_sendCharSerial4
 15435   000020                     i2l454:
 15436   000020  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15437   000022  0011               	retfie		f
 15438   000024                     __end_of_HighISR:
 15439                           	callstack 0
 15440                           
 15441 ;; *************** function i2_sendCharSerial4 *****************
 15442 ;; Defined at:
 15443 ;;		line 31 in file "serial.c"
 15444 ;; Parameters:    Size  Location     Type
 15445 ;;  charToSend      1    wreg     unsigned char 
 15446 ;; Auto vars:     Size  Location     Type
 15447 ;;  charToSend      1    0[COMRAM] unsigned char 
 15448 ;; Return value:  Size  Location     Type
 15449 ;;                  1    wreg      void 
 15450 ;; Registers used:
 15451 ;;		wreg
 15452 ;; Tracked objects:
 15453 ;;		On entry : 0/0
 15454 ;;		On exit  : 0/0
 15455 ;;		Unchanged: 0/0
 15456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15460 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15461 ;;Total ram usage:        1 bytes
 15462 ;; Hardware stack levels used: 1
 15463 ;; This function calls:
 15464 ;;		Nothing
 15465 ;; This function is called by:
 15466 ;;		_HighISR
 15467 ;; This function uses a non-reentrant model
 15468 ;;
 15469                           
 15470                           	psect	text57
 15471   0075D4                     __ptext57:
 15472                           	callstack 0
 15473   0075D4                     i2_sendCharSerial4:
 15474                           	callstack 24
 15475                           
 15476                           ;incstack = 0
 15477                           ;i2sendCharSerial4@charToSend stored from wreg
 15478   0075D4  6E01               	movwf	i2sendCharSerial4@charToSend^0,c
 15479   0075D6                     i2l500:
 15480   0075D6  010E               	movlb	14	; () banked
 15481   0075D8  A537               	btfss	55,2,b	;volatile
 15482   0075DA  EFF1  F03A         	goto	i2u562_41
 15483   0075DE  EFF3  F03A         	goto	i2u562_40
 15484   0075E2                     i2u562_41:
 15485   0075E2  EFEB  F03A         	goto	i2l500
 15486   0075E6                     i2u562_40:
 15487   0075E6                     
 15488                           ; BSR set to: 14
 15489                           ;serial.c: 33:     TX4REG = charToSend;
 15490   0075E6  C001  FEE4         	movff	i2sendCharSerial4@charToSend,3812	;volatile
 15491   0075EA                     
 15492                           ; BSR set to: 14
 15493   0075EA  0012               	return		;funcret
 15494   0075EC                     __end_ofi2_sendCharSerial4:
 15495                           	callstack 0
 15496                           
 15497                           	psect	rparam
 15498   000000                     
 15499                           	psect	temp
 15500   00005E                     btemp:
 15501                           	callstack 0
 15502   00005E                     	ds	1
 15503   000000                     int$flags	set	btemp
 15504   000000                     wtemp8	set	btemp+1
 15505   000000                     ttemp5	set	btemp+1
 15506   000000                     ttemp6	set	btemp+4
 15507   000000                     ttemp7	set	btemp+8
 15508                           
 15509                           	psect	config
 15510                           
 15511                           ;Config register CONFIG1L @ 0x300000
 15512                           ;	External Oscillator mode Selection bits
 15513                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15514                           ;	Power-up default value for COSC bits
 15515                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15516   300000                     	org	3145728
 15517   300000  AA                 	db	170
 15518                           
 15519                           ;Config register CONFIG1H @ 0x300001
 15520                           ;	unspecified, using default values
 15521                           ;	Clock Out Enable bit
 15522                           ;	CLKOUTEN = 0x1, unprogrammed default
 15523                           ;	Clock Switch Enable bit
 15524                           ;	CSWEN = 0x1, unprogrammed default
 15525                           ;	Fail-Safe Clock Monitor Enable bit
 15526                           ;	FCMEN = 0x1, unprogrammed default
 15527   300001                     	org	3145729
 15528   300001  FF                 	db	255
 15529                           
 15530                           ;Config register CONFIG3L @ 0x300004
 15531                           ;	WDT Period Select bits
 15532                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15533                           ;	WDT operating mode
 15534                           ;	WDTE = OFF, WDT Disabled
 15535   300004                     	org	3145732
 15536   300004  9F                 	db	159
 15537                           
 15538                           ;Config register CONFIG3H @ 0x300005
 15539                           ;	unspecified, using default values
 15540                           ;	WDT Window Select bits
 15541                           ;	WDTCWS = 0x7, unprogrammed default
 15542                           ;	WDT input clock selector
 15543                           ;	WDTCCS = 0x7, unprogrammed default
 15544   300005                     	org	3145733
 15545   300005  FF                 	db	255
 15546                           tosu	equ	0xFFF
 15547                           tosh	equ	0xFFE
 15548                           tosl	equ	0xFFD
 15549                           stkptr	equ	0xFFC
 15550                           pclatu	equ	0xFFB
 15551                           pclath	equ	0xFFA
 15552                           pcl	equ	0xFF9
 15553                           tblptru	equ	0xFF8
 15554                           tblptrh	equ	0xFF7
 15555                           tblptrl	equ	0xFF6
 15556                           tablat	equ	0xFF5
 15557                           prodh	equ	0xFF4
 15558                           prodl	equ	0xFF3
 15559                           indf0	equ	0xFEF
 15560                           postinc0	equ	0xFEE
 15561                           postdec0	equ	0xFED
 15562                           preinc0	equ	0xFEC
 15563                           plusw0	equ	0xFEB
 15564                           fsr0h	equ	0xFEA
 15565                           fsr0l	equ	0xFE9
 15566                           wreg	equ	0xFE8
 15567                           indf1	equ	0xFE7
 15568                           postinc1	equ	0xFE6
 15569                           postdec1	equ	0xFE5
 15570                           preinc1	equ	0xFE4
 15571                           plusw1	equ	0xFE3
 15572                           fsr1h	equ	0xFE2
 15573                           fsr1l	equ	0xFE1
 15574                           bsr	equ	0xFE0
 15575                           indf2	equ	0xFDF
 15576                           postinc2	equ	0xFDE
 15577                           postdec2	equ	0xFDD
 15578                           preinc2	equ	0xFDC
 15579                           plusw2	equ	0xFDB
 15580                           fsr2h	equ	0xFDA
 15581                           fsr2l	equ	0xFD9
 15582                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    112
    Data        0
    BSS         123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      93
    BANK0           160     23     145
    BANK1           256    184     184
    BANK2           256    180     180
    BANK3           256    202     202
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    decide_action@pblue_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@blue_val(BANK2[20]), 

    decide_action@pclear_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@clear_val(BANK2[20]), 

    decide_action@pgreen_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@green_val(BANK2[20]), 

    decide_action@pred_val	PTR unsigned char  size(2) Largest target is 20
		 -> decide_action@red_val(BANK2[20]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    inch_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    inch_forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    inch_forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    inch_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    inch_forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    inch_forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pblue_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@blue_val(BANK3[20]), 

    main@pclear_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK3[20]), 

    main@pgreen_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@green_val(BANK3[20]), 

    main@pmL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    main@pmL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pmR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    main@pmR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pred_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@red_val(BANK3[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    reverse_after_read@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    reverse_after_read@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    reverse_one_square@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    reverse_one_square@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S1069DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    S1069DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S2553$buffer	PTR unsigned char  size(2) Largest target is 0

    S2553$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK3[20]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), main@motorR(BANK3[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK3[20]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_left_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_left_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_left_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_left_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_right_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_right_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK3[9]), 

    turn_right_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK3[9]), 

    turn_right_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _turn_right_90->_stop
    _turn_right_135->_stop
    _turn_left_90->_stop
    _turn_left_135->_stop
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _reverse_one_square->_stop
    _reverse_after_read->_stop
    _inch_forward->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _decide_action->___flge
    _powf->___flge
    _sqrtf->___fladd
    _scalbnf->___flmul
    ___flmul->___fladd
    ___flsub->___fldiv
    ___flge->___flsub
    ___fldiv->___flmul
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_sendCharSerial4

Critical Paths under _main in BANK0

    _main->_decide_action
    _decide_action->_powf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _decide_action->_powf

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_decide_action

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               218   218      0  194953
                                             87 COMRAM     5     5      0
                                              0 BANK3    202   202      0
                           _ADC_init
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
              _color_click_toggleLED
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _color_writetoaddr
                      _decide_action
                     _fullSpeedAhead
                    _get16bitTMR0val
                       _inch_forward
                    _initDCmotorsPWM
                         _initUSART4
                      _invert_action
                        _resetTimer0
                 _reverse_after_read
                 _reverse_one_square
                  _sendStringSerial4
                            _sprintf
                               _stop
                      _turn_left_135
                       _turn_left_90
                     _turn_right_135
                      _turn_right_90
 ---------------------------------------------------------------------------------
 (1) _turn_right_90                                        6     2      4    8202
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_right_135                                       6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_90                                         6     2      4    7290
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_135                                        6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    15      5    3439
                                             26 COMRAM    18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2936
                                             22 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    2586
                                             11 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              2 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reverse_one_square                                   6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse_after_read                                   6     2      4    8050
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _resetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _invert_action                                        4     4      0      51
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _inch_forward                                         6     2      4    6986
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    4133
                                             20 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _get16bitTMR0val                                      6     4      2      24
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    2961
                                             20 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          6     4      2    2437
                                             14 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              7 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _decide_action                                      188   182      6  121545
                                             17 BANK0      6     0      6
                                              0 BANK2    180   180      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flsub
                           ___xxtofl
                  _color_writetoaddr
                               _powf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   74453
                                              0 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sqrtf                                               41    37      4    1413
                                             17 COMRAM    37    33      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6    9383
                                             42 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    8888
                                             17 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8   18849
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8   13662
                                              1 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1094
                                             75 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2767
                                             42 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              2 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_toggleLED                                1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     674
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     674
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0      22
                  i2_sendCharSerial4
 ---------------------------------------------------------------------------------
 (7) i2_sendCharSerial4                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_click_toggleLED
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_writetoaddr
   _decide_action
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
     ___flge
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
     ___flsub
     ___xxtofl
     _color_writetoaddr
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
         ___fladd (ARG)
     _sqrtf
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _get16bitTMR0val
   _inch_forward
     _setMotorPWM
     _stop
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _invert_action
   _resetTimer0
   _reverse_after_read
     _setMotorPWM
     _stop
   _reverse_one_square
     _setMotorPWM
     _stop
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch
   _stop
   _turn_left_135
     _setMotorPWM
     _stop
   _turn_left_90
     _setMotorPWM
     _stop
   _turn_right_135
     _setMotorPWM
     _stop
   _turn_right_90
     _setMotorPWM
     _stop

 _HighISR (ROOT)
   i2_sendCharSerial4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      68        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     CA      CA      11       78.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100     B4      B4       9       70.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B8      B8       7       71.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     17      91       5       90.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5D       1       98.9%
BITBIGSFRllhllh     37      0       0      49        0.0%
BITBIGSFRllhhl      31      0       0      47        0.0%
BITBIGSFRlllllh     2A      0       0      60        0.0%
BITBIGSFRllllll     26      0       0      66        0.0%
BITBIGSFRllllhh     20      0       0      52        0.0%
BITBIGSFRlllllh     1E      0       0      54        0.0%
BITBIGSFRhhlllh     1B      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      44        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      53        0.0%
BITBIGSFRlllllh      B      0       0      64        0.0%
BITBIGSFRlllllh      9      0       0      61        0.0%
BITBIGSFRllhlll      8      0       0      50        0.0%
BITBIGSFRllhhhl      6      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      65        0.0%
BITBIGSFRlllllh      6      0       0      59        0.0%
BITBIGSFRlllllh      5      0       0      58        0.0%
BITBIGSFRllhhhh      3      0       0      45        0.0%
BITBIGSFRlllllh      3      0       0      57        0.0%
BITBIGSFRllhlh       2      0       0      48        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRlllllh      1      0       0      62        0.0%
BITBIGSFRlhlh        1      0       0      42        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      51        0.0%
BITBIGSFRhlhl        1      0       0      40        0.0%
BITBIGSFRhhllll      1      0       0      39        0.0%
BITBIGSFRlhh         1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     324      67        0.0%
DATA                 0      0     324       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Mar 14 17:31:00 2024

               _color_read_Red 716A                   ___fldiv@aexp 0043                   ___fldiv@bexp 0042  
                 ___fldiv@sign 003B                _color_read_Blue 725A                             _L1 0E5D  
                           _L2 0E59                             _L3 0E55                             _L4 0E51  
                           _L5 0E4D                             l50 752C                             _L6 0E49  
                           l53 7258                             _P1 0E45                             l62 72A8  
                           _P2 0E41                             l47 72F2                             l71 347A  
                           _P3 0E3D                             l56 71B8                             _P4 0E39  
                           l65 7168                             l73 34F6                             _P5 0E35  
                           l59 7208                             l77 44FA                             l69 33FE  
                           l89 708E                   ___awdiv@sign 0007                             _bp 0E11  
                           _cp 0E21            ___wmul@multiplicand 0004          __end_of_invert_action 7090  
             _color_read_Clear 720A               _color_read_Green 71BA              ??_Interrupts_init 0002  
                          l122 74E6                            l131 7620                            l203 6D54  
                          l211 6FFA                            l116 74BE                            l125 762A  
                          l134 75F6                            l230 68BA                            l214 6A90  
                          l222 69A6                            l119 74C0                            l128 7616  
                          l137 73BC                            l251 6538                            l235 6916  
                          l219 6AEA                            l243 682A                            l227 6A00  
                          l500 75BE                            l404 4CB0                            l421 760C  
                          l262 6B78                            l246 64C4                            l254 66CA  
                          l238 67CE                            l415 754C                            l503 75D2  
                          l418 7588                            l195 6432                            l267 6BD4  
                          l259 673E                            l188 6F60                            l509 7494  
                          l198 6D24                            l375 49C4                            l448 7602  
                          l491 756A                            l556 75A2                            l565 750C  
                          l397 4C3A                            l830 65F6                            l809 6EBE  
                          l835 663C                            l839 7430                            l796 6C98  
                          _lg2 0E31                            _abs 7432                            _ovt 0E25  
                 ___awmod@sign 0007                            prod 0FF3                            wreg 0FE8  
                 ___flmul@aexp 0023                   ___flmul@bexp 0024                   ___flmul@sign 001E  
                 ___flmul@temp 0029                   ___flmul@prod 0025                    main@actions 033C  
                         l1110 4FBC                           l1102 5172                           l1120 507A  
                         ?_abs 0008                           l1220 616A                           l1119 508C  
                         l1135 7338                           l1223 62C6                           l1063 7102  
                         l1160 5C32                           l1152 5B38                           l1056 70FA  
                         l1161 5C20                           l1234 625E                           l1306 6E0E  
                         l1147 5D14                           l1227 6202                           l1403 136E  
                         l1243 73F8                           l1149 5B74                           l1093 4EA2  
                         l1158 5BBA                           l1094 4E90                           l1095 4E56  
                         l1183 559C                           l1407 13CC                           l1440 32C4  
                         l1281 6112                           l1186 542E                           l1179 5238  
                         l4011 6BF4                           l4003 6BD6                           l1291 744C  
                         l1196 555E                           l1188 54A6                           l1189 5494  
                         l4101 70EE                           l4021 6C28                           l4013 6C02  
                         l4005 6BDA                           l1470 5782                           l1374 3300  
                         l1294 7464                           l4103 70F4                           l4031 6C62  
                         l4023 6C30                           l4015 6C0A                           l4007 6BE8  
                         l1447 762C                           l4111 6D80                           l1287 737A  
                         l1457 5F48                           l4201 62C8                           l5001 6FE2  
                         l4041 6C88                           l4033 6C6A                           l4025 6C38  
                         l4017 6C0E                           l4009 6BF0                           l4121 7440  
                         l4113 6D9C                           l4105 6D56                           l1474 57E0  
                         l1466 597A                           l4123 7622                           l4131 7618  
                         l1379 1164                           l4211 6392                           l4203 62E4  
                         l5003 75BE                           l4043 6C90                           l4035 6C6C  
                         l4027 6C46                           l4019 6C16                           l4051 6E22  
                         l4115 6DCE                           l4107 6D66                           l5011 7352  
                         l4125 7626                           l4133 761C                           l5021 72B8  
                         l4301 5B84                           l4221 5996                           l1477 58A4  
                         l4141 5610                           l1389 11FA                           l4213 63AE  
                         l4205 6338                           l5005 75CE                           l4037 6C72  
                         l4029 6C4C                           l4061 6E56                           l4053 6E2A  
                         l4109 6D76                           l5013 7372                           l4127 75EE  
                         l5031 72E8                           l5023 72C8                           l4303 5B9A  
                         l4311 5BCA                           l4231 59CA                           l4223 5998  
                         l1479 5912                           l4151 5660                           l4143 561E  
                         l4135 559E                           l1399 12BC                           l4215 63F2  
                         l4207 634C                           l4039 6C78                           l4071 6E92  
                         l4063 6E5E                           l4055 6E2E                           l4047 6E10  
                         l4119 7432                           l5007 733A                           l4129 75F2  
                         l5033 72EA                           l5025 72D2                           l5017 72AA  
                         l5041 720A                           l4313 5BD8                           l4305 5BA0  
                         l4241 59FC                           l4225 59A8                           l4233 59D2  
                         l4217 597C                           l4153 568E                           l4145 562E  
                         l4137 55AE                           l4209 6350                           l5201 701A  
                         l4073 6E98                           l4065 6E66                           l4057 6E3C  
                         l4049 6E14                           l5009 7342                           l5035 72EC  
                         l5027 72DC                           l5019 72AE                           l5043 7250  
                         l4323 5C42                           l4331 5C8A                           l4315 5BDC  
                         l4307 5BAA                           l4251 5A30                           l4243 59FE  
                         l4235 59E2                           l4227 59B8                           l4219 5988  
                         l4411 61EC                           l4403 61A4                           l4171 5740  
                         l4139 55E2                           l4091 70BA                           l4083 7090  
                         l5203 7022                           l5211 703A                           l4067 6E74  
                         l4075 6E9E                           l4059 6E44                           l5037 72EE  
                         l5029 72E6                           l5061 72A0                           l5053 71BA  
                         l4341 5CF4                           l4333 5CA4                           l4325 5C4E  
                         l4317 5BEA                           l4309 5BB8                           l4261 5A76  
                         l4245 5A0E                           l4253 5A38                           l4237 59E8  
                         l4229 59C8                           l3701 4D4A                           l4421 626C  
                         l4413 61F8                           l4405 61AC                           l4501 5DD6  
                         l4181 57FA                           l4173 574C                           l4157 56A2  
                         l4165 56CE                           l4149 5642                           l4093 70C8  
                         l4085 7098                           l5221 6EC0                           l5205 702A  
                         l5213 708C                           l4077 6EAE                           l4069 6E8A  
                         l5301 6952                           l5039 72F0                           l5055 7200  
                         l5047 716A                           l4343 5D02                           l4335 5CBA  
                         l4327 5C5C                           l4319 5C18                           l4271 5A9E  
                         l4263 5A7A                           l4255 5A48                           l4247 5A1E  
                         l4239 59EE                           l3703 4D5A                           l3711 4D84  
                         l4431 62B4                           l4423 626E                           l4415 6234  
                         l4407 61B8                           l4511 5E56                           l4503 5DF2  
                         l4191 58BE                           l4183 581A                           l4175 575A  
                         l4167 5722                           l4159 56B0                           l4095 70CE  
                         l4087 70AA                           l5231 6F24                           l5223 6EEA  
                         l5207 7032                           l4079 6EB6                           l5311 6996  
                         l5303 695C                           l5065 7104                           l5049 71B0  
                         l4345 5D08                           l4337 5CD4                           l4329 5C86  
                         l4281 5AEC                           l4257 5A5E                           l4249 5A2E  
                         l4361 653A                           l3801 4F8C                           l3721 4DBC  
                         l3713 4D94                           l3705 4D6A                           l4433 62B6  
                         l4425 6272                           l4417 6240                           l4409 61EA  
                         l4513 5E72                           l4521 5ED2                           l4505 5DFE  
                         l4193 58D4                           l4185 582E                           l4177 57C2  
                         l4169 5736                           l4097 70E4                           l4089 70B2  
                         l5241 6F50                           l5233 6F26                           l5225 6F0E  
                         l5401 66BA                           l4441 5F78                           l5321 684E  
                         l5313 69BE                           l5305 6974                           l4531 74A0  
                         l5059 725A                           l4347 5D0A                           l4339 5CF0  
                         l4291 5B36                           l4283 5AFC                           l4275 5AB2  
                         l4259 5A6E                           l4267 5A8E                           l4371 65C4  
                         l4363 6568                           l3803 4F9C                           l3731 4DD0  
                         l3723 4DC0                           l3715 4DA6                           l3707 4D7A  
                         l4355 72F4                           l4427 6296                           l4419 624E  
                         l4523 5F04                           l4515 5EA6                           l4507 5E1A  
                         l4195 58EA                           l4187 586C                           l4179 57D0  
                         l4099 70EC                           l5411 6AEC                           l5251 6F5A  
                         l5243 6F52                           l5235 6F30                           l5227 6F18  
                         l5403 66E2                           l4451 5FD4                           l4443 5F86  
                         l5331 689E                           l5323 6866                           l5315 69D6  
                         l5307 697E                           l4533 74A6                           l3661 74C0  
                         l4541 7510                           l4293 5B42                           l4285 5B04  
                         l4277 5ACC                           l4269 5A9E                           l4373 65D6  
                         l4365 6578                           l3821 501E                           l3813 4FF6  
                         l3805 4FAC                           l3741 4DE4                           l3733 4DD4  
                         l3725 4DC4                           l3717 4DB4                           l3709 4D7C  
                         l4357 7304                           l4429 62A6                           l3901 5212  
                         l4525 5F38                           l4517 5EAE                           l4509 5E4E  
                         l4189 58B4                           l5261 6CD2                           l5421 6B50  
                         l5413 6B0C                           l5253 6F5C                           l5245 6F54  
                         l5237 6F32                           l5229 6F1A                           l5405 66FA  
                         l4461 605A                           l4453 5FEC                           l4445 5F8A  
                         l4437 5F4A                           l5333 68AA                           l5325 6870  
                         l5341 6740                           l5317 69EC                           l5309 698A  
                         l4535 74A8                           l3663 74D0                           l4551 738A  
                         l4543 760E                           l4295 5B60                           l4287 5B14  
                         l4279 5ADC                           l4375 65E4                           l4367 65A6  
                         l4383 73FA                           l3823 5026                           l3815 5000  
                         l3807 4FD2                           l3831 504A                           l3751 4DF8  
                         l3743 4DE8                           l3735 4DD8                           l3727 4DC8  
                         l3719 4DB8                           l3671 4CB4                           l4391 6116  
                         l3903 5222                           l4519 5ECA                           l7111 13EA  
                         l7103 137E                           l7031 0F00                           l7023 0E82  
                         l5271 6D16                           l5263 6CDC                           l5431 6BC0  
                         l5423 6B5C                           l5415 6B24                           l5255 6F5E  
                         l5247 6F56                           l5239 6F3C                           l5407 6712  
                         l4471 60AE                           l4463 606C                           l4455 5FF6  
                         l4447 5F94                           l4439 5F70                           l5335 68D2  
                         l5327 6888                           l5319 682C                           l5351 67A6  
                         l5343 6762                           l5441 758A                           l5433 752E  
                         l4537 74AA                           l4529 7496                           l4553 7392  
                         l4545 7612                           l4297 5B62                           l4289 5B28  
                         l4377 6634                           l4369 65B6                           l4385 7410  
                         l3841 509C                           l3833 504E                           l3825 502A  
                         l3817 500E                           l3809 4FE2                           l3761 4E70  
                         l3753 4E22                           l3745 4DEC                           l3737 4DDC  
                         l3729 4DCC                           l3681 4CF0                           l3673 4CC0  
                         l4393 6126                           l3921 52A4                           l3913 526C  
                         l3905 5228                           l7201 191A                           l7121 14CA  
                         l7113 141E                           l7105 139A                           l7041 0F76  
                         l7033 0F1C                           l7025 0EA2                           l3665 74E8  
                         l5273 6D3C                           l5265 6CF4                           l5257 6C9A  
                         l5425 6B68                           l5417 6B2E                           l5249 6F58  
                         l5193 6FFE                           l5409 6726                           l4473 60C8  
                         l4465 607C                           l4457 600E                           l4449 5FB4  
                         l4481 60EC                           l5337 68EA                           l5329 6892  
                         l5281 6A46                           l5361 6816                           l5353 67B2  
                         l5345 677A                           l5443 7594                           l5451 75F8  
                         l5435 7536                           l4539 74AC                           l4555 73B8  
                         l4547 737E                           l4299 5B72                           l4379 663A  
                         l4387 7420                           l3851 5102                           l3843 50A8  
                         l3835 505C                           l3827 503A                           l3819 5010  
                         l3771 4EB0                           l3763 4E74                           l3755 4E3E  
                         l3747 4DF0                           l3739 4DE0                           l3691 4D20  
                         l3683 4D00                           l3675 4CCE                           l4395 6134  
                         l3931 52EE                           l3923 52BC                           l3915 5278  
                         l3907 5248                           l4491 5D42                           l7211 19F4  
                         l7203 1936                           l7131 1520                           l7115 142E  
                         l7123 14EE                           l7107 13B0                           l7051 0FE8  
                         l7027 0EEA                           l3667 7504                           l5267 6CFE  
                         l5259 6CBA                           l5427 6B90                           l5419 6B46  
                         l5195 7002                           l5371 6492                           l5363 6434  
                         l4467 608C                           l4475 60CA                           l4459 603E  
                         l5339 6902                           l5291 6AA8                           l5283 6A5E  
                         l5275 6A02                           l5355 67BE                           l5347 6784  
                         l5445 759C                           l5437 7540                           l4557 73BA  
                         l4549 7382                           l3861 514A                           l3853 5112  
                         l3845 50B6                           l3837 5072                           l3829 503C  
                         l3781 4EF2                           l3773 4EC0                           l3765 4E82  
                         l3757 4E4E                           l3749 4DF4                           l3693 4D32  
                         l3685 4D02                           l3677 4CD0                           l4397 617A  
                         l3941 5344                           l3933 52FE                           l3925 52C8  
                         l3917 5282                           l3909 5258                           l4493 5D76  
                         l7301 2384                           l7221 1A5C                           l7213 1A0C  
                         l7205 196A                           l7141 1550                           l7117 1492  
                         l7109 13DC                           l7061 119E                           l7053 0FFC  
                         l7045 0FAE                           l7037 0F32                           l5269 6D0A  
                         l5429 6BA8                           l5461 7566                           l5453 754E  
                         l5197 700A                           l5381 64F4                           l5373 649C  
                         l5365 6458                           l4469 609C                           l4477 60E0  
                         l5293 6AC0                           l5285 6A68                           l5277 6A24  
                         l5357 67E6                           l5349 679C                           l5447 759E  
                         l5439 754A                           l3863 514C                           l3855 5132  
                         l3847 50F0                           l3791 4F20                           l3783 4F00  
                         l3767 4E84                           l3759 4E64                           l3695 4D34  
                         l3679 4CE0                           l3687 4D0A                           l4399 6190  
                         l3951 53E8                           l3943 5360                           l3935 530A  
                         l3927 52D4                           l3919 5298                           l4495 5D7E  
                         l4487 5D16                           l7311 2518                           l7303 23B8  
                         l7231 1B14                           l7223 1A80                           l7215 1A1C  
                         l7207 197C                           l7143 1560                           l7119 14B2  
                         l7127 1502                           l7071 11E4                           l7055 1018  
                         l7047 0FBE                           l7039 0F54                           l5471 7580  
                         l5463 7568                           l5455 7558                           l5199 7012  
                         l5383 650C                           l5375 64A8                           l5367 6470  
                         l5391 6676                           l5295 6AD6                           l5287 6A74  
                         l5279 6A3C                           l5359 67FE                           l5449 75A0  
                         l3865 5152                           l3857 5136                           l3849 50F2  
                         l3793 4F2A                           l3785 4F0C                           l3777 4ED4  
                         l3769 4E8E                           l3697 4D3A                           l3689 4D1A  
                         l3961 543E                           l3953 53F6                           l3945 536C  
                         l3937 531A                           l3929 52E2                           l3881 51A0  
                         l3873 5174                           l4497 5D9A                           l4489 5D26  
                         l7401 2DFA                           l7321 2634                           l7313 25A2  
                         l7305 23EC                           l7241 1BFC                           l7233 1B8E  
                         l7225 1A94                           l7217 1A34                           l7209 198C  
                         l7161 15E8                           l7145 1582                           l7129 1512  
                         l7057 1116                           l7049 0FCC                           l5457 755A  
                         l5465 7604                           l5385 6520                           l5377 64B4  
                         l5369 647A                           l5393 6680                           l5481 73DA  
                         l5289 6A80                           l5297 6918                           l3867 5160  
                         l3859 5144                           l3787 4F10                           l3779 4EE4  
                         l3795 4F30                           l3699 4D48                           l3963 544C  
                         l3955 5414                           l3947 5388                           l3939 5334  
                         l3891 51DC                           l3883 51B0                           l3875 5180  
                         l4499 5DCE                           l7411 2F22                           l7403 2E2E  
                         l7331 2774                           l7323 268A                           l7315 25D6  
                         l7307 2420                           l7251 1DA8                           l7243 1C56  
                         l7235 1BC2                           l7227 1AB0                           l7163 160C  
                         l7147 15A6                           l7139 153A                           l7091 12E8  
                         l7075 120E                           l7067 11B4                           l7059 1182  
                         l7083 125A                           l5467 756C                           l5459 7564  
                         l5379 64DC                           l5395 6698                           l5387 663E  
                         l5491 7478                           l5483 73EA                           l5475 73BE  
                         l5299 693A                           l3869 5162                           l3797 4F56  
                         l3789 4F1E                           l3973 54B6                           l3981 54FE  
                         l3965 5450                           l3957 541E                           l3949 53B2  
                         l3893 51E2                           l3885 51C0                           l3877 518E  
                         l7421 30FE                           l7413 2F7A                           l7405 2E62  
                         l7333 27CC                           l7325 26BE                           l7317 25E6  
                         l7309 24F2                           l7261 1F18                           l7253 1E00  
                         l7245 1CC8                           l7237 1BD2                           l7229 1AC0  
                         l7181 16D0                           l7173 162E                           l7149 15B4  
                         l7157 15D2                           l7085 1276                           l7077 121C  
                         l7069 11D6                           l7501 3C62                           l5469 7572  
                         l5397 66A2                           l5389 665E                           l5493 747C  
                         l5477 73CA                           l3799 4F8A                           l3991 5572  
                         l3983 5518                           l3975 54C2                           l3967 545E  
                         l3959 542C                           l3895 51F0                           l3887 51C6  
                         l3879 5190                           l7431 3202                           l7423 3156  
                         l7415 2FD2                           l7407 2E96                           l7351 2884  
                         l7335 2800                           l7319 2600                           l7271 2088  
                         l7263 1F70                           l7255 1E34                           l7247 1D1C  
                         l7239 1BE2                           l7327 26F2                           l7191 1874  
                         l7183 1704                           l7095 1320                           l7087 1284  
                         l7079 1244                           l7511 3E52                           l7503 3D00  
                         l5399 66AE                           l5487 7466                           l5479 73D2  
                         l3993 5580                           l3985 552C                           l3977 54D0  
                         l3969 548C                           l3897 51F2                           l3889 51D6  
                         l7433 3244                           l7425 318A                           l7417 302A  
                         l7409 2ECA                           l7361 294A                           l7337 2834  
                         l7329 271C                           l7281 21B0                           l7273 20E0  
                         l7265 1FC8                           l7257 1E68                           l7249 1D50  
                         l7193 1884                           l7185 175C                           l7177 1644  
                         l7097 1338                           l7089 12D0                           l7521 3FA0  
                         l7513 3E86                           l7505 3D36                           l5489 746A  
                         l7601 453C                           l3995 5582                           l3987 5546  
                         l3979 54FA                           l3899 5202                           l7435 3294  
                         l7427 31BE                           l7419 3082                           l7371 29D2  
                         l7339 2844                           l7291 2276                           l7283 21C0  
                         l7275 2114                           l7267 2020                           l7259 1EC0  
                         l7195 189E                           l7187 1790                           l7179 1678  
                         l7099 1346                           l7531 415A                           l7523 3FD6  
                         l7515 3EF0                           l7507 3D7E                           l7451 3360  
                         l7611 455C                           l7603 4544                           l3989 5562  
                         l3997 5588                           l7437 32D4                           l7429 31F2  
                         l7381 2A8C                           l7349 286C                           l7293 22AA  
                         l7285 21DA                           l7277 2148                           l7269 2054  
                         l7197 18D2                           l7189 17C4                           l7541 42E0  
                         l7533 4190                           l7525 400C                           l7517 3F38  
                         l7509 3DB2                           l7461 3446                           l7453 3382  
                         l7445 3302                           l7701 4830                           l7621 4580  
                         l7613 4560                           l7605 454C                           l3999 558C  
                         l7439 32EC                           l7391 2CC8                           l7383 2C40  
                         l7367 295E                           l7375 29E8                           l7359 2902  
                         l7295 2326                           l7287 220E                           l7279 217C  
                         l7199 190A                           l7551 446C                           l7543 4380  
                         l7535 422E                           l7527 4040                           l7519 3F6C  
                         l7471 37D2                           l7463 34AC                           l7455 33B4  
                         l7447 331C                           l4991 6FA0                           l4983 6F62  
                         l7711 48EC                           l7703 4844                           l7631 4590  
                         l7623 4588                           l7615 4568                           l7607 4554  
                         l7393 2CE2                           l7385 2C50                           l7377 2A5A  
                         l7369 297C                           l7297 235A                           l7289 2242  
                         l7561 44DA                           l7553 4470                           l7545 43B4  
                         l7537 4264                           l7529 4074                           l7481 3958  
                         l7473 3808                           l7465 34C2                           l7457 33CA  
                         l7449 333E                           l4993 6FAA                           l4985 6F66  
                         l7801 4C3A                           l7721 4994                           l7713 4918  
                         l7705 4884                           l7641 45CE                           l7633 4594  
                         l7625 4590                           l7617 4570                           l7609 4558  
                         l7395 2D16                           l7387 2C84                           l7379 2A6A  
                         l7299 236A                           l7547 441E                           l7539 42AC  
                         l7491 3AA8                           l7483 39C2                           l7475 3850  
                         l7467 36FE                           l7459 3430                           l4995 6FB6  
                         l4987 6F7E                           l7803 4C52                           l7811 4C8C  
                         l7731 4A00                           l7723 49AC                           l7715 492C  
                         l7707 4898                           l7651 460A                           l7643 45E0  
                         l7635 459C                           l7627 4590                           l7619 4578  
                         l7571 44FC                           l7397 2D4A                           l7389 2CB8  
                         l7565 44E2                           l7557 4484                           l7549 4466  
                         l7493 3ADE                           l7485 3A0A                           l7477 3884  
                         l7469 3734                           l4997 6FC2                           l4989 6F88  
                         l7813 4C9C                           l7805 4C6A                           l7733 4A14  
                         l7717 4958                           l7709 48D8                           l7725 49C4  
                         l7661 4666                           l7653 4622                           l7645 45E4  
                         l7637 45B4                           l7629 4590                           l7581 451C  
                         l7573 4504                           l7399 2DA2                           l7567 44F6  
                         l7559 44D6                           l7495 3B12                           l7487 3A3E  
                         l7479 3924                           l4999 6FCA                           l7807 4C76  
                         l7743 4A38                           l7735 4A1C                           l7727 49DC  
                         l7719 496C                           l7671 46CC                           l7663 467E  
                         l7655 462E                           l7647 45F8                           l7639 45C0  
                         l7591 452A                           l7583 4520                           l7575 4508  
                         l7497 3B46                           l7489 3A72                           l7809 4C7E  
                         l7761 4AAC                           l7753 4A7E                           l7745 4A50  
                         l7737 4A20                           l7729 49F4                           l7681 4710  
                         l7673 46D6                           l7665 4692                           l7657 4642  
                         l7649 45FE                           l7593 452E                           l7585 4524  
                         l7577 450C                           l7499 3C2C                           l7835 704E  
                         l7771 4B32                           l7763 4AB8                           l7755 4A8E  
                         l7747 4A60                           l7739 4A24                           l7691 4772  
                         l7683 471C                           l7675 46E0                           l7667 46AE  
                         l7659 465A                           l7595 452E                           l7587 4526  
                         l7579 4510                           l7781 4B9A                           l7773 4B44  
                         l7765 4AE2                           l7757 4A92                           l7749 4A78  
                         l7693 479E                           l7685 4742                           l7677 46F8  
                         l7669 46B2                           l7597 4534                           l7589 4528  
                         l7791 4BF6                           l7783 4BAE                           l7775 4B5C  
                         l7767 4AF6                           l7759 4AA6                           l7695 47B0  
                         l7687 475C                           l7679 4704                           l7599 4538  
                         l7793 4C0A                           l7777 4B6E                           l7769 4AFC  
                         l7697 47DC                           l7689 4760                           l7795 4C22  
                         l7787 4BCA                           l7779 4B86                           l7699 47F0  
                         l7789 4BDE                           STR_1 0E71                           STR_2 0E71  
                         u3000 4CE0                           u3001 4CDC                           u3010 4CF0  
                         u3011 4CEC                           u3100 4E3C                           u3020 4D32  
                         u3021 4D2E                           u3110 4E64                           u3030 4D48  
                         u3111 4E60                           u3031 4D44                           u4000 5A9E  
                         u3200 4F9C                           u3120 4E82                           u3040 4D5A  
                 _BAUD4CONbits 0EE9                           u4001 5A9A                           u3201 4F98  
                         u3121 4E7E                           u3041 4D56                           u4010 5B14  
                         u3210 4FD2                           u3130 4EA2                           u3050 4D6A  
                         u4011 5B10                           u3211 4FCE                           u3131 4E9E  
                         u3051 4D66                           u4100 5C2E                           u4020 5B36  
                         u3300 509C                           u3220 4FE2                           u3140 4EB0  
                         u3060 4DA6                           u4101 5C2A                           u4021 5B32  
                         u3301 5098                           u3221 4FDE                           u3141 4EAC  
                         u3061 4DA2                           u4110 5C42                           u4030 5B60  
                         u3310 50B6                           u3230 500E                           u3150 4EC0  
                         u3070 4DB4                           u4111 5C3E                           u4031 5B5C  
                         u3311 50B2                           u3231 500A                           u3151 4EBC  
                         u3071 4DB0                           u4120 5C5C                           u4040 5B84  
                         u4200 6634                           u3320 50F0                           u3240 501E  
                         u3160 4EF2                           u3080 4E22                           u3400 51B0  
                         u4121 5C58                           u4041 5B80                           u4201 6630  
                         u3321 50EC                           u3241 501A                           u3161 4EEE  
                         u3081 4E1E                           u3401 51AC                           u4130 5CA4  
                         u4050 5B9A                           u4210 7410                           u3330 5102  
                         u3250 503A                           u3170 4F00                           u3090 4E3A  
                         u3410 51F0                           _T2PR 0FBC                           u4131 5CA0  
                         u4051 5B96                           u4211 740C                           u3331 50FE  
                         u3251 5036                           u3171 4EFC                           u3091 4E34  
                         u3411 51EC                           u4140 5CD4                           u4060 5BB8  
                         u3340 5112                           u3260 504A                           u3180 4F1E  
                         u4300 62A6                           u4220 6126                           u3500 548C  
                         u3420 5202                           u5100 6FA0                           u4141 5CD0  
                         u4061 5BB4                           u3341 510E                           u3261 5046  
                         u3181 4F1A                           u4301 62A2                           u4221 6122  
                         u3501 5488                           u3421 51FE                           u5101 6F9C  
                         u4150 5D02                           u4070 5BD8                           u3350 5132  
                         u3270 505C                           u3190 4F56                           u4310 62B4  
                         u4230 6134                           u3510 54A2                           u3430 5212  
                         u5110 6FE2                           u4151 5CFE                           u4071 5BD4  
                         u3351 512E                           u3271 5058                           u3191 4F52  
                         u4311 62B0                           u4231 6130                           u3511 549E  
                         u3431 520E                           u5111 6FDE                           u4080 5BEA  
                         u4160 6568                           u3360 5144                           u3280 5072  
                         u4240 6190                           u3520 54B6                           u3440 5248  
                         u5120 6FFA                           u3600 6C46                           u4400 609C  
                         u4320 5F70                           u4081 5BE6                           u4161 6564  
                         u3361 5140                           u3281 506E                           u4241 618C  
                         u3521 54B2                           u3441 5244                           u5121 6FF6  
                         u3601 6C42                           u4401 6098                           u4321 5F6C  
                         u4090 5C18                           u4170 65A6                           u3370 5160  
                         u3290 5088                           u4250 61E6                           u3530 54D0  
                         u3450 5258                           u5130 75CE                           u3610 6C62  
                         u4410 60DC                           u4330 5FB4                           u4091 5C14  
                         u4171 65A2                           u3371 515C                           u3291 5084  
                         u4251 61E2                           u3531 54CC                           u3451 5254  
                         u5131 75CA                           u3611 6C5E                           u4411 60D8  
                         u4331 5FB0                           u4180 65C4                           u4260 6230  
                         u3540 5518                           u3460 53D2                           u3380 518E  
                         u4420 5D42                           u3700 70C8                           u3620 6C88  
                         u4340 5FD4                           u5140 7372                           u5300 6A3C  
                         u4181 65C0                           u4261 622C                           u3541 5514  
                         u3381 518A                           u4421 5D3E                           u3701 70C4  
                         u3621 6C84                           u4341 5FD0                           u5141 736E  
                         u5301 6A38                           u5150 7116                           u4190 65E4  
                         u4270 624E                           u3550 5546                           u3470 542C  
                         u3390 51A0                           u4430 5D9A                           u3710 70E4  
                         u3630 6E22                           u4350 600A                           u5310 6A5E  
                         u5151 710E                           u4191 65E0                           u4271 624A  
                         u3551 5542                           u3471 5428                           u3391 519C  
                         u4431 5D96                           u3711 70E0                           u3631 6E1E  
                         u4351 6004                           u5311 6A5A                           u5208 715A  
                         u4280 625E                           u3560 5580                           u3480 544C  
                         u4440 5DF2                           u3800 5660                           u3640 6E3C  
                         u3720 6D66                           u4360 600C                           u5400 68D2  
                         u5320 6AA8                           u4281 625A                           u3561 557C  
                         u3481 5448                           u3465 53C8                           u4441 5DEE  
                         u3801 565C                           u3641 6E38                           u3721 6D62  
                         u5401 68CE                           u5321 6AA4                           u5170 7134  
                         u4290 626C                           u3490 545E                           u4450 5E1A  
                         u3810 568E                           u5090 6F7E                           u3570 6BE8  
                         u3650 6E56                           u3730 6D76                           u4370 606C  
                         u5410 68EA                           u5330 6AC0                           u5171 712C  
                         u4291 6268                           u3491 545A                           u4451 5E16  
                         u3811 568A                           u5091 6F7A                           u3571 6BE4  
                         u3651 6E52                           u3731 6D72                           u4371 6068  
                         u5411 68E6                           u5331 6ABC                           u4508 73A8  
                         u4460 5E72                           u3820 56B0                           u5260 6CD2  
                         u5500 6676                           u3580 6C02                           u3660 6E74  
                         u3740 6D9C                           u4380 607C                           u5420 677A  
                         u5340 6952                           u4461 5E6E                           u3821 56AC  
                         u5261 6CCE                           u5501 6672                           u3581 6BFE  
                         u3661 6E70                           u3741 6D98                           u4381 6078  
                         u5421 6776                           u5341 694E                           u5190 7158  
                         u4470 5ECA                           u7030 0EEA                           u3910 62E4  
                         u5270 6CF4                           u5510 6698                           u3590 6C28  
                         u3670 6E8A                           u3750 6DCE                           u4390 608C  
                         u5430 679C                           u5350 6974                           u5191 7150  
                         u4471 5EC6                           u7031 0EE6                           u3911 62E0  
                         u5271 6CF0                           u5511 6694                           u3591 6C24  
                         u3671 6E86                           u3751 6DCA                           u4391 6088  
                         u5431 6798                           u5351 6970                           u5168 7118  
                         u3840 5722                           u7200 1284                           u7120 10DC  
                         u7040 0F1C                           u3920 63AE                           u5280 6D3C  
                         u5520 66E2                           u3680 6EAE                           u3760 7440  
                         u5440 67E6                           u5360 69BE                           u3905 5956  
                         u3841 571E                           u7201 1280                           u7105 102E  
                         u7041 0F18                           u3921 63AA                           u5281 6D38  
                         u5521 66DE                           u3681 6EAA                           u3761 743C  
                         u5441 67E2                           u5361 69BA                           u2970 74D0  
                         u4490 73A6                           u3930 5996                           u3850 575A  
                         u3770 55E2                           u7210 12E8                           u7130 1116  
                         u7106 1038                           u7050 0F54                           u3690 70AA  
                         u5290 6D54                           u5530 66FA                           u5450 67FE  
                         u5370 69D6                           u2971 74CC                           u4491 739E  
                         u3931 5992                           u3851 5756                           u3835 56E2  
                         u3771 55DE                           u7211 12E4                           u7131 1112  
                         u7115 1088                           u7107 1048                           u7051 0F50  
                         u3691 70A6                           u5291 6D50                           u5531 66F6  
                         u5451 67FA                           u5371 69D2                           u2980 74E6  
                         u5188 7136                           u3940 59A8                           u3860 57D0  
                         u3836 56EC                           u3780 5610                           u7300 14CA  
                         u7220 1338                           u7140 1182                           u7116 1092  
                         u7060 0F76                           u5540 6B24                           u5460 6470  
                         u5380 6866                           u2981 74E2                           u3941 59A4  
                         u4485 5EE4                           u3861 57CC                           u3837 56FC  
                         u3781 560C                           u7301 14C6                           u7221 1334  
                         u7141 117E                           u7125 10D2                           u7117 10A2  
                         u7061 0F72                           u5541 6B20                           u5461 646C  
                         u5381 6862                           u3950 59B8                           u2990 4CCE  
                         u3870 586C                           u3790 561E                           u7310 1520  
                         u7230 1346                           u7150 119E                           u7070 0FCC  
                         u5550 6B46                           u5470 6492                           u5390 6888  
                         u3951 59B4                           u2991 4CCA                           u3871 5868  
                         u3791 561A                           u7311 151C                           u7231 1342  
                         u7151 119A                           u7071 0FC8                           u5551 6B42  
                         u5471 648E                           u5391 6884                           u8007 67C4  
                         u3960 59FC                           u3880 58D4                           u7320 1536  
                         u7240 139A                           u7160 11D6                           u7080 0FE8  
                         u5560 6B90                           u5480 64DC                           u3961 59F8  
                         u3881 58D0                           u7321 1532                           u7241 1396  
                         u7161 11D2                           u7081 0FE4                           u5561 6B8C  
                         u5481 64D8                           u8017 6808                           u3970 5A0E  
                         u3890 58EA                           u7410 1A58                           u7330 1550  
                         u7250 13B0                           u7170 11E4                           u7090 1018  
                         u5570 6BA8                           u5490 64F4                           u3971 5A0A  
                         u3891 58E6                           u7411 1A54                           u7331 154C  
                         u7251 13AC                           u7171 11E0                           u7091 1014  
                         u5571 6BA4                           u8107 64FE                           u5491 64F0  
                         u8027 6A86                           u3980 5A1E                           u7420 1A80  
                         u7340 1582                           u7260 13CC                           u7180 121C  
                         u5580 7494                           u3981 5A1A                           u7421 1A7C  
                         u7405 19A2                           u7341 157E                           u7261 13C8  
                         u7181 1218                           u8117 652A                           u5581 7490  
                         u8037 6ACA                           u3990 5A5E                           u7510 2A8C  
                         u7406 19AC                           u7350 15A6                           u7270 13EA  
                         u7190 1276                           u3991 5A5A                           u7511 2A88  
                         u7407 19BC                           u7351 15A2                           u7271 13E6  
                         u7191 1272                           u8127 6B6E                           u8047 68B0  
                         u7600 32EC                           u7440 2868                           u7360 15B4  
                         u7280 142E                           u7601 32E8                           u7505 2A18  
                         u7441 2864                           u7361 15B0                           u7281 142A  
                         u8137 6BB2                           u8057 68F4                           u7506 2A22  
                         u7450 2884                           u7370 160C                           u7290 1492  
                         u7610 33B4                           u7507 2A32                           u7451 2880  
                         u7435 1C68                           u7371 1608                           u7291 148E  
                         u7611 33B0                           u8147 6FC4                           u8067 66C0  
                         u7460 28FE                           u7380 162A                           u7620 3430  
                         u7700 47B0                           u7525 2AA6                           u7461 28FA  
                         u7381 1626                           u7621 342C                           u8157 6D1C  
                         u8077 6704                           u7701 47AC                           u7526 2AB0  
                         u7470 294A                           u7390 1936                           u7630 34AC  
                         u7710 47F0                           u8167 72BE                           u7535 2B10  
                         u7527 2AC0                           u7471 2946                           u7391 1932  
                         u7631 34A8                           u8087 6730                           u7711 47EC  
                         u7560 2C40                           u7536 2B1A                           u7480 297C  
                         u7640 4480                           u7800 4AE2                           u7720 4844  
                         u7561 2C3C                           u7545 2B68                           u7537 2B2A  
                         u7481 2978                           u7641 447C                           u8097 64BA  
                         u7801 4ADE                           u7721 4840                           u7546 2B72  
                         u7490 29D2                           u7650 44D6                           u7810 4B44  
                         u7730 4898                           u7555 2C06                           u7547 2B82  
                         u7491 29CE                           u7651 44D2                           u7811 4B40  
                         u7731 4894                           u7556 2C10                           u7820 4B6E  
                         u7740 48EC                           u7660 45E0                           u7557 2C20  
                         u7821 4B6A                           u7741 48E8                           u7661 45DC  
                         u7590 3294                           u7830 4B9A                           u7750 492C  
                         u7670 4622                           u7591 3290                           u7575 3214  
                         u7831 4B96                           u7751 4928                           u7671 461E  
                         u7840 4BDE                           u7760 496C                           u7680 467E  
                         u7585 325A                           u7841 4BDA                           u7761 4968  
                         u7681 467A                           u7586 3264                           u7850 4C0A  
                         u7770 4A34                           u7690 4772                           u7587 3274  
                         u7851 4C06                           u7771 4A30                           u7691 476E  
                         u7907 469C                           u7860 4C36                           u7780 4A60  
                         u7861 4C32                           u7781 4A5C                           u7917 46EA  
                         u7870 4C9C                           u7790 4A8E                           u7871 4C98  
                         u7791 4A8A                           u7927 499E                           u7937 49CE  
                         u7947 4A06                           u7957 4BB8                           u7967 4C44  
                         u7887 45A6                           u7977 4C84                           u7897 464C  
                         u7987 699C                           u7997 69E0                    main@red_val 0300  
                         abs@a 0008                           _dbuf 009C                           _cp_h 0E6D  
                         _cp_l 0E69                           _dp_h 0E09                           _dp_l 0E01  
                         _main 44FC                           _prec 00D4                           _powf 0E82  
                         fsr1h 0FE2                           fsr2h 0FDA                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           btemp 005E  
                         _stop 6F62                    main@timings 0378     __end_of_reverse_after_read 653A  
                         prodh 0FF4                           prodl 0FF3                           start 0024  
             __end_of_ADC_init 75A4                ___fldiv@new_exp 003C         __end_of_color_read_Red 71BA  
              __end_of_HighISR 0024                   ___param_bank 0000      invert_action@input_action 0004  
               turn_left_90@mL 0019                 turn_left_90@mR 001B                          ??_abs 000A  
                 main@blue_val 0328                  ?_inch_forward 0019                __end_of___fladd 5174  
                        ?_main 0001                          _ADPCH 0F5F                __end_of___fldiv 5D16  
              __end_of___awdiv 6C9A                __end_of___flneg 7432                __end_of___awmod 6EC0  
              __end_of___flmul 559E                          ?_powf 00DA                __end_of___flsub 733A  
                        ?_stop 0015                ___awdiv@divisor 0004                __end_of___lwdiv 7104  
                        i2l500 75D6                          i2l503 75EA                          i2l454 0020  
              ___awdiv@counter 0006                   vfpfcnvrt@fmt 000D                          _TMR0H 0FD4  
                        _TMR0L 0FD3        __end_of_sendCharSerial4 75D4     __end_of_I2C_2_Master_Start 762C  
   __end_of_I2C_2_Master_Write 75F8                          _lg2_h 0E2D                          _lg2_l 0E29  
                        _flags 00D6  __end_of_color_click_toggleLED 716A                          _errno 00D0  
                        _ivln2 0E1D                          _fputc 6D56                __end_of_ivln2_h 0E69  
              __end_of_ivln2_l 0E1D                          _two24 0E61                __end_of_scalbnf 5F4A  
                        _width 00D2                          _putch 762C                          main@i 03AF  
                        _sqrtf 559E                          tablat 0FF5                          powf@i 0128  
                        powf@j 01A8                          powf@k 01A4                          powf@n 0188  
                        powf@r 0150                          powf@s 0158                          powf@t 01B0  
                        powf@u 017C                          powf@v 0180                          powf@w 0144  
                        powf@x 00DA                          powf@y 00DE                          powf@z 01B4  
                        ttemp5 005F                          ttemp6 0062                          ttemp7 0066  
                        status 0FD8                          wtemp8 005F                __end_of_sprintf 73FA  
      __end_of_color_read_Blue 72AA          _I2C_2_Master_RepStart 760E                ?_color_read_Red 0006  
              __initialization 75A4                   __end_of_cp_h 0E71                   __end_of_cp_l 0E6D  
                 __end_of_dp_h 0E11                   __end_of_dp_l 0E09                   __end_of_main 4CB4  
                 __end_of_powf 3302                   __end_of_stop 6FFC                turn_left_135@mL 0019  
              turn_left_135@mR 001B               main@action_to_do 03B2                 ??_inch_forward 001D  
                main@clear_val 0364                _get16bitTMR0val 756C                         ??_main 0058  
                       ??_powf 00E2                         ??_stop 0019                  __activetblptr 0003  
            decide_action@blue 0288                   ?_setMotorPWM 000F                         ?_fputc 0002  
                       _ADRESH 0F64                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0002  
                       ?_putch 0001                         ?_sqrtf 0012     __end_of_reverse_one_square 6740  
                       _RC0PPS 0E62                         _RC4REG 0EE3                         _RE2PPS 0E74  
                       _RD5PPS 0E6F                         _RC7PPS 0E69                         _RE4PPS 0E76  
                       _RD6PPS 0E70                  main@green_val 0314                         i2l5507 75D6  
                       _RG6PPS 0E88                         i2l5509 75E6                         i2l5755 000A  
                       i2l5757 0018                         i2l5759 001A               ??_turn_right_135 001D  
                vfpfcnvrt@done 0010                      ??_HighISR 0002       __end_of_color_click_init 72F4  
                       _RX4PPS 0E15                         _TX4REG 0EE4               __end_of___xxtofl 62C8  
                 ?_resetTimer0 0001                   _turn_left_90 6A02                  ??_Timer0_init 0002  
                 _CCPTMRS0bits 0FAD                   vfprintf@cfmt 001A                         ___flge 653A  
                    ??___fladd 000A                         ___wmul 74E8                      ??___fldiv 0033  
                    ??___awdiv 0006                      ??___flneg 0006                      ??___awmod 0006  
                    ??___flmul 001A                      ??___flsub 004C                      ??___lwdiv 000C  
                       clear_0 75AA               ___awdiv@quotient 0008                ___awmod@divisor 0004  
                       isa$std 0001                ___awmod@counter 0006                         fputc@c 0002  
                    ??_scalbnf 0031                   __mediumconst 0000                         powf@s2 0190  
                       powf@t1 018C                         powf@t2 011C                         tblptrh 0FF7  
                       tblptrl 0FF6                         powf@y1 012C                         tblptru 0FF8  
                       powf@ax 0178                         powf@is 0198                         powf@hx 0168  
                    ?_ADC_init 0001                         powf@hy 0184                         powf@ix 01AC  
                       powf@iy 0194               ?_sendCharSerial4 0001                         powf@sn 0164  
                       putch@c 0001               __end_of_vfprintf 737C                         stop@mL 0015  
                       stop@mR 0017                         sqrtf@i 001F                         sqrtf@m 002B  
                       sqrtf@q 0023                         sqrtf@r 002F                         sqrtf@s 001B  
                       sqrtf@t 0027              ??_initDCmotorsPWM 0004                         sqrtf@x 0012  
                    ??_sprintf 0020                     ___flge@ff1 004C                     ___flge@ff2 0050  
                 ___xxtofl@arg 000C                   ___xxtofl@exp 000B                   ___xxtofl@val 0002  
                   __accesstop 0060        __end_of__initialization 75B2       __end_of_color_read_Clear 725A  
                   ___flneg@f1 0002       __end_of_color_read_Green 720A         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 0001               ?_color_read_Blue 0006                _Interrupts_init 75F8  
               __pcstackCOMRAM 0001        __end_of_get16bitTMR0val 758A                  __end_of_lg2_h 0E31  
                __end_of_lg2_l 0E2D       get16bitTMR0val@timer_val 0006                  __end_of_ivln2 0E21  
                __end_of_fputc 6E10                  __end_of_two24 0E65                  __end_of_putch 762E  
                __end_of_sqrtf 597C                     __end_of_L1 0E61                     __end_of_L2 0E5D  
                   __end_of_L3 0E59                     __end_of_L4 0E55                     __end_of_L5 0E51  
                   __end_of_L6 0E4D                     __end_of_P1 0E49                     __end_of_P2 0E45  
                   __end_of_P3 0E41                     __end_of_P4 0E3D                     __end_of_P5 0E39  
          __end_of_Timer0_init 754E                     __end_of_bp 0E19                     __end_of_cp 0E25  
                   ??_ADC_init 0002                turn_right_90@mL 0019                turn_right_90@mR 001B  
                      ??_fputc 0005                        ??_putch 0002                        ??_sqrtf 0016  
                   __pbssBANK0 0060           __end_of_inch_forward 6BD6              _color_writetoaddr 750E  
         reverse_one_square@mL 0019           reverse_one_square@mR 001B                   _T2CLKCONbits 0FBF  
           decide_action@green 0284                        ?___flge 004C             decide_action@red_r 028C  
           ?_color_writetoaddr 0004                        ?___wmul 0002             decide_action@total 027B  
         decide_action@green_r 0290             _reverse_after_read 6434           decide_action@red_val 0214  
       decide_action@clear_val 0200            ??_color_writetoaddr 0005                      ?___xxtofl 0002  
                      _SP4BRGH 0EE6                        _SP4BRGL 0EE5            ?_reverse_after_read 0019  
         reverse_after_read@mL 0019           reverse_after_read@mR 001B                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5        __end_of_Interrupts_init 7604         color_writetoaddr@value 0004  
             ??_color_read_Red 0008                  _turn_left_135 682C         decide_action@green_val 0228  
                      _HighISR 0008                 main@pclear_val 03A8      __end_of_color_writetoaddr 752E  
                    _ADREFbits 0F58             _I2C_2_Master_Start 7622                     _initUSART4 754E  
           _I2C_2_Master_Write 75EC                 decide_action@i 027F                        __Hparam 0000  
         ??_reverse_after_read 001D                        __Lparam 0000              color_read_Red@tmp 000B  
                  _Timer0_init 752E         decide_action@pblue_val 0252        sendStringSerial4@string 0003  
                _turn_right_90 6918               ?_get16bitTMR0val 0002                        ___fladd 4CB4  
                      ___fldiv 597C                        ___awdiv 6BD6                        ___flneg 73FA  
                      ___awmod 6E10                        ___flmul 5174                        ___flsub 72F4  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 7090            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 0017                   __psmallconst 0E00                        __pcinit 75A4  
                      __ramtop 0E00                        __ptext0 44FC                        __ptext1 6918  
                      __ptext2 6740                        __ptext3 6A02                        __ptext4 682C  
                      __ptext5 73BE                        __ptext6 733A                        __ptext7 5F4A  
                      __ptext8 6D56                        __ptext9 762C                      _T2CONbits 0FBD  
                      _ivln2_h 0E65                        _ivln2_l 0E19                     ??___xxtofl 0006  
                      _scalbnf 5D16               ___awmod@dividend 0002                      _T2HLTbits 0FBE  
                _RxBufWriteCnt 00D9                        main@pmL 03C6                        main@pmR 03C8  
                      _sprintf 73BE                        main@lum 03AC           ??_I2C_2_Master_Start 0003  
         ??_I2C_2_Master_Write 0003           end_of_initialization 75B2     invert_action@output_action 0005  
               ?_turn_left_135 0019          _color_click_toggleLED 7104                        fputc@fp 0004  
            ?_color_click_init 0001             ??_color_click_init 0006              main@lum_threshold 03A0  
                _decide_action 3302                 ?_turn_right_90 0019                        powf@p_h 01A0  
                      powf@p_l 016C                        powf@s_h 0174                        powf@t_h 0170  
                      powf@s_l 0130                        powf@t_l 0134                        powf@z_h 0120  
                      powf@z_l 0124              __end_of_vfpfcnvrt 6114             _reverse_one_square 663E  
                      postdec2 0FDD                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 0012                     ??_vfprintf 001A  
                      sqrtf@ix 0033                _initDCmotorsPWM 6EC0                      _PORTBbits 0F8A  
                _invert_action 6FFC            ?_reverse_one_square 0019             setMotorPWM@negDuty 0014  
                  ___fladd@grs 0011                  ___xxtofl@sign 000A                      _TRISAbits 0F81  
           setMotorPWM@posDuty 0013                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88                    ___fldiv@grs 003E                    ___fldiv@rem 0037  
             fullSpeedAhead@mL 0015               fullSpeedAhead@mR 0017       color_writetoaddr@address 0005  
      ??_I2C_2_Master_RepStart 0003               ?_Interrupts_init 0001                    ___flmul@grs 001F  
         ??_reverse_one_square 001D                    _CCP1CONbits 0FAB              ?_color_read_Clear 0006  
                 _EUSART4RXbuf 00BC                   _EUSART4TXbuf 0060                    _CCP2CONbits 0FA7  
                   main@greenm 03A4              ?_color_read_Green 0006                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0002  
               ?_decide_action 00EB                     main@motorL 03B4                     main@motorR 03BD  
           ??_color_read_Clear 0008             ??_color_read_Green 0008                 __end_of___flge 663E  
               _fullSpeedAhead 6C9A                    vfpfcnvrt@ap 000E                    vfpfcnvrt@cp 0011  
                  vfpfcnvrt@fp 000C                 __end_of___wmul 750E                 ?_invert_action 0001  
                 _inch_forward 6AEC            color_read_Clear@tmp 000B            start_initialization 75A4  
                  __end_of_lg2 0E35                    __end_of_abs 7466                    __end_of_ovt 0E29  
                _TxBufWriteCnt 005D                ??_turn_left_135 001D         ?_color_click_toggleLED 0001  
             decide_action@red 0280                ??_turn_right_90 001D            color_read_Green@tmp 000B  
      __end_of_initDCmotorsPWM 6F62                    vfprintf@fmt 0018         __end_of_fullSpeedAhead 6D56  
                     ??___flge 0054               turn_right_135@mL 0019               turn_right_135@mR 001B  
                     ??___wmul 0006                      ___fladd@a 0006                      ___fladd@b 0002  
                    ___fldiv@a 002F                      ___fldiv@b 002B                      ___flmul@a 0016  
                    ___flmul@b 0012                    __pbssCOMRAM 005D     decide_action@blue_unsigned 00EF  
                    ___flsub@a 0048                      ___flsub@b 0044                  __pcstackBANK0 00DA  
                __pcstackBANK1 0100                  __pcstackBANK2 0200                  __pcstackBANK3 0300  
                     ?_HighISR 0001                ??_decide_action 0058              i2_sendCharSerial4 75D4  
           ?i2_sendCharSerial4 0001               ___lwdiv@dividend 0008                   ?_Timer0_init 0001  
          decide_action@action 027A                ?_fullSpeedAhead 0015                      __pintcode 0008  
          decide_action@blue_r 0294                       ?___fladd 0002                       ?___fldiv 002B  
                     ?___awdiv 0002                       ?___flneg 0002                       ?___awmod 0002  
                     ?___flmul 0012                       ?___flsub 0044                ??_invert_action 0002  
                     ?___lwdiv 0008            ??i2_sendCharSerial4 0001          decide_action@blue_val 023C  
         I2C_2_Master_Read@ack 0004           I2C_2_Master_Read@tmp 0005                    __smallconst 0E00  
            _I2C_2_Master_Idle 74C0              _I2C_2_Master_Init 7496                       ?_scalbnf 002B  
            _I2C_2_Master_Read 737C              _I2C_2_Master_Stop 7618          decide_action@rgb_comp 025A  
                 _RxBufReadCnt 00D8                       _ADC_init 758A             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0011  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000C       initDCmotorsPWM@PWMperiod 0002  
                     ?_sprintf 001B          decide_action@pred_val 0250      __end_ofi2_sendCharSerial4 75EC  
                    _powf$3080 0160                      _powf$3073 0148                      _powf$3081 013C  
                    _powf$3074 015C                      _powf$3082 0140                      _powf$3075 014C  
                    _powf$3083 0108                      _powf$3076 019C                      _powf$3084 010C  
                    _powf$3077 0138                      _powf$3085 0110                      _powf$3086 0114  
                    _powf$3078 0100                      _powf$3087 0118                      _powf$3079 0104  
            _sendStringSerial4 7466            ??_I2C_2_Master_Idle 0002            ??_I2C_2_Master_Init 0002  
          ??_I2C_2_Master_Read 0003                 ___wmul@product 0006                       _LATAbits 0F79  
                ??_resetTimer0 0002            ??_I2C_2_Master_Stop 0003                       _LATCbits 0F7B  
                     _LATEbits 0F7D                       _LATGbits 0F7F                       _LATHbits 0F80  
                ?_turn_left_90 0019                       _PIE0bits 0E29                       _PIE2bits 0E2B  
           ?_sendStringSerial4 0003                       _PIE4bits 0E2D                       _PIR4bits 0E37  
                     i2u562_40 75E6                       i2u562_41 75E2                       i2u585_40 0018  
                     i2u585_41 0014               ?_initDCmotorsPWM 0002              ??_sendCharSerial4 0002  
                     _SSP2CON2 0EDA            ??_sendStringSerial4 0005                       _SSP2STAT 0ED8  
                   powf@yisint 0154                      _vfpfcnvrt 5F4A                     _ADCON0bits 0F60  
    __end_of_I2C_2_Master_Idle 74E8      __end_of_I2C_2_Master_Init 74C0      __end_of_I2C_2_Master_Read 73BE  
            ___wmul@multiplier 0002      __end_of_I2C_2_Master_Stop 7622                   setMotorPWM@m 000F  
  I2C_2_Master_Write@data_byte 0003                      main@bluem 03A6          main@actions_completed 03B0  
            ??_color_read_Blue 0008                   _TxBufReadCnt 00D7                     vfpfcnvrt@c 0016  
    __end_of_sendStringSerial4 7496  __end_of_I2C_2_Master_RepStart 7618             color_read_Blue@tmp 000B  
               ??_turn_left_90 001D            __end_of_setMotorPWM 6434                   ??_initUSART4 0002  
                     __Hrparam 0000                     vfprintf@ap 0019                       __Lrparam 0000  
                   vfprintf@fp 0017                 _turn_right_135 6740            __end_of_resetTimer0 760E  
    decide_action@red_unsigned 00EB                     ?_vfpfcnvrt 000C                     _ANSELDbits 0EA7  
      decide_action@pgreen_val 0254                     _ANSELFbits 0EB4             _decide_action$3070 02A8  
           _decide_action$3071 02AC             _decide_action$3072 02B0             _decide_action$3065 0256  
           _decide_action$3066 0298             _decide_action$3067 029C             _decide_action$3068 02A0  
           _decide_action$3069 02A4                     sprintf@fmt 001D                       ___xxtofl 6114  
                   _T0CON0bits 0FD5                     _T0CON1bits 0FD6        ??_color_click_toggleLED 0002  
              ___lwdiv@divisor 000A             __end_of_initUSART4 756C                ___lwdiv@counter 000E  
                     __ptext10 7432                       __ptext11 6E10                       __ptext20 6EC0  
                     __ptext12 6BD6                       __ptext21 6AEC                       __ptext13 7466  
                     __ptext30 559E                       __ptext22 6F62                       __ptext14 75BC  
                     __ptext31 5D16                       __ptext23 756C                       __ptext15 663E  
                     __ptext40 71BA                       __ptext32 5174                       __ptext24 6C9A  
                     __ptext16 6434                       __ptext41 720A                       __ptext33 6114  
                     __ptext25 62C8                       __ptext17 7604                       __ptext50 7622  
                     __ptext42 725A                       __ptext34 72F4                       __ptext26 74E8  
                     __ptext18 6FFC                       __ptext51 74C0                       __ptext43 760E  
                     __ptext35 4CB4                       __ptext27 7090                       __ptext19 754E  
                     __ptext52 7496                       __ptext44 737C                       __ptext36 73FA  
                     __ptext28 3302                       __ptext53 752E                       __ptext45 7104  
                     __ptext37 653A                       __ptext29 0E82                       __ptext54 75F8  
                     __ptext46 72AA                       __ptext38 597C                       __ptext55 758A  
                     __ptext47 750E                       __ptext39 716A                       __ptext48 75EC  
                     __ptext57 75D4                       __ptext49 7618                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA    decide_action@green_unsigned 00ED         __end_of_turn_right_135 682C  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       int$flags 005E  
                     _vfprintf 733A                       main@redm 03A2                     _INTCONbits 0FF2  
            main@going_forward 03AE                    _setMotorPWM 62C8              ??_get16bitTMR0val 0004  
                     scalbnf@n 002F                       scalbnf@u 0035                       scalbnf@x 002B  
                     scalbnf@y 0039                       intlevel2 0000          __end_of_turn_left_135 6918  
                    sprintf@ap 0020               ??_fullSpeedAhead 0019                    _resetTimer0 7604  
              ?_turn_right_135 0019          __end_of_turn_right_90 6A02                    ??_vfpfcnvrt 000F  
             _color_click_init 72AA                       sprintf@f 0021                       sprintf@s 001B  
         __end_of_turn_left_90 6AEC                     _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C  
            main@measured_time 03AA                 inch_forward@mL 0019                 inch_forward@mR 001B  
                ___fladd@signs 000E                     _TX4STAbits 0EE8                _sendCharSerial4 75BC  
                 ___fladd@aexp 000F                   ___fladd@bexp 0010    i2sendCharSerial4@charToSend 0001  
        __end_of_decide_action 44FC  
