

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Mar 15 00:23:21 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77   000000                     
    78                           ; Generated 21/07/2023 GMT
    79                           ; 
    80                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F67K40 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	smallconst
   114   000E00                     __psmallconst:
   115                           	callstack 0
   116   000E00  00                 	db	0
   117   000E01                     _dp_l:
   118                           	callstack 0
   119   000E01  0000               	dw	0
   120   000E03  0000               	dw	0
   121   000E05  CFDC               	dw	53212
   122   000E07  35D1               	dw	13777
   123   000E09                     __end_of_dp_l:
   124                           	callstack 0
   125   000E09                     _dp_h:
   126                           	callstack 0
   127   000E09  0000               	dw	0
   128   000E0B  0000               	dw	0
   129   000E0D  C000               	dw	49152
   130   000E0F  3F15               	dw	16149
   131   000E11                     __end_of_dp_h:
   132                           	callstack 0
   133   000E11                     _bp:
   134                           	callstack 0
   135   000E11  0000               	dw	0
   136   000E13  3F80               	dw	16256
   137   000E15  0000               	dw	0
   138   000E17  3FC0               	dw	16320
   139   000E19                     __end_of_bp:
   140                           	callstack 0
   141   000E19  A570               	dw	42352
   142   000E1B  36EC               	dw	14060
   143   000E1D                     __end_of_ivln2_l:
   144                           	callstack 0
   145   000E1D  AA3B               	dw	43579
   146   000E1F  3FB8               	dw	16312
   147   000E21                     __end_of_ivln2:
   148                           	callstack 0
   149   000E21  384F               	dw	14415
   150   000E23  3F76               	dw	16246
   151   000E25                     __end_of_cp:
   152                           	callstack 0
   153   000E25  AA3C               	dw	43580
   154   000E27  3338               	dw	13112
   155   000E29                     __end_of_ovt:
   156                           	callstack 0
   157   000E29  BE8C               	dw	48780
   158   000E2B  35BF               	dw	13759
   159   000E2D                     __end_of_lg2_l:
   160                           	callstack 0
   161   000E2D  7200               	dw	29184
   162   000E2F  3F31               	dw	16177
   163   000E31                     __end_of_lg2_h:
   164                           	callstack 0
   165   000E31  7218               	dw	29208
   166   000E33  3F31               	dw	16177
   167   000E35                     __end_of_lg2:
   168                           	callstack 0
   169   000E35  BB4C               	dw	47948
   170   000E37  3331               	dw	13105
   171   000E39                     __end_of_P5:
   172                           	callstack 0
   173   000E39  EA0E               	dw	59918
   174   000E3B  B5DD               	dw	46557
   175   000E3D                     __end_of_P4:
   176                           	callstack 0
   177   000E3D  B355               	dw	45909
   178   000E3F  388A               	dw	14474
   179   000E41                     __end_of_P3:
   180                           	callstack 0
   181   000E41  0B61               	dw	2913
   182   000E43  BB36               	dw	47926
   183   000E45                     __end_of_P2:
   184                           	callstack 0
   185   000E45  AAAB               	dw	43691
   186   000E47  3E2A               	dw	15914
   187   000E49                     __end_of_P1:
   188                           	callstack 0
   189   000E49  F142               	dw	61762
   190   000E4B  3E53               	dw	15955
   191   000E4D                     __end_of_L6:
   192                           	callstack 0
   193   000E4D  3255               	dw	12885
   194   000E4F  3E6C               	dw	15980
   195   000E51                     __end_of_L5:
   196                           	callstack 0
   197   000E51  A305               	dw	41733
   198   000E53  3E8B               	dw	16011
   199   000E55                     __end_of_L4:
   200                           	callstack 0
   201   000E55  AAAB               	dw	43691
   202   000E57  3EAA               	dw	16042
   203   000E59                     __end_of_L3:
   204                           	callstack 0
   205   000E59  6DB7               	dw	28087
   206   000E5B  3EDB               	dw	16091
   207   000E5D                     __end_of_L2:
   208                           	callstack 0
   209   000E5D  999A               	dw	39322
   210   000E5F  3F19               	dw	16153
   211   000E61                     __end_of_L1:
   212                           	callstack 0
   213   000E61  0000               	dw	0
   214   000E63  4B80               	dw	19328
   215   000E65                     __end_of_two24:
   216                           	callstack 0
   217   000E65  AA00               	dw	43520
   218   000E67  3FB8               	dw	16312
   219   000E69                     __end_of_ivln2_h:
   220                           	callstack 0
   221   000E69  23C6               	dw	9158
   222   000E6B  B8F6               	dw	47350
   223   000E6D                     __end_of_cp_l:
   224                           	callstack 0
   225   000E6D  4000               	dw	16384
   226   000E6F  3F76               	dw	16246
   227   000E71                     __end_of_cp_h:
   228                           	callstack 0
   229   000000                     _TX4REG	set	3812
   230   000000                     _RC4STAbits	set	3815
   231   000000                     _SP4BRGH	set	3814
   232   000000                     _TRISFbits	set	3974
   233   000000                     _LATHbits	set	3968
   234   000000                     _TRISAbits	set	3969
   235   000000                     _TRISGbits	set	3975
   236   000000                     _SSP2CON2bits	set	3802
   237   000000                     _RX4PPS	set	3605
   238   000000                     _SSP2CLKPPS	set	3612
   239   000000                     _SSP2DATPPS	set	3613
   240   000000                     _ANSELDbits	set	3751
   241   000000                     _SSP2ADD	set	3798
   242   000000                     _SSP2CON1bits	set	3801
   243   000000                     _LATAbits	set	3961
   244   000000                     _LATGbits	set	3967
   245   000000                     _LATCbits	set	3963
   246   000000                     _LATEbits	set	3965
   247   000000                     _PORTBbits	set	3978
   248   000000                     _TRISHbits	set	3976
   249   000000                     _T2PR	set	4028
   250   000000                     _T2CONbits	set	4029
   251   000000                     _CCPR2H	set	4006
   252   000000                     _CCPR1H	set	4010
   253   000000                     _TRISCbits	set	3971
   254   000000                     _TRISDbits	set	3972
   255   000000                     _TRISEbits	set	3973
   256   000000                     _RC4REG	set	3811
   257   000000                     _SP4BRGL	set	3813
   258   000000                     _TX4STAbits	set	3816
   259   000000                     _BAUD4CONbits	set	3817
   260   000000                     _SSP2CON2	set	3802
   261   000000                     _CCPR4H	set	3873
   262   000000                     _CCPR3H	set	3877
   263   000000                     _SSP2STAT	set	3800
   264   000000                     _ANSELFbits	set	3764
   265   000000                     _SSP2BUF	set	3797
   266   000000                     _PIE0bits	set	3625
   267   000000                     _PIE2bits	set	3627
   268   000000                     _RC7PPS	set	3689
   269   000000                     _RD5PPS	set	3695
   270   000000                     _RE2PPS	set	3700
   271   000000                     _RD6PPS	set	3696
   272   000000                     _RE4PPS	set	3702
   273   000000                     _RG6PPS	set	3720
   274   000000                     _TMR0L	set	4051
   275   000000                     _TMR0H	set	4052
   276   000000                     _T0CON0bits	set	4053
   277   000000                     _T0CON1bits	set	4054
   278   000000                     _T2CLKCONbits	set	4031
   279   000000                     _T2HLTbits	set	4030
   280   000000                     _CCP1CONbits	set	4011
   281   000000                     _CCPTMRS0bits	set	4013
   282   000000                     _CCP2CONbits	set	4007
   283   000000                     _ADREFbits	set	3928
   284   000000                     _CCP3CONbits	set	3878
   285   000000                     _CCP4CONbits	set	3874
   286   000000                     _INTCONbits	set	4082
   287   000000                     _PIE4bits	set	3629
   288   000000                     _PIR4bits	set	3639
   289   000000                     _RC0PPS	set	3682
   290   000000                     _ADPCH	set	3935
   291   000000                     _ADRESH	set	3940
   292   000000                     _ADCON0bits	set	3936
   293   000E71                     STR_1:
   294                           
   295                           ; BSR set to: 14
   296   000E71  61                 	db	97	;'a'
   297   000E72  63                 	db	99	;'c'
   298   000E73  74                 	db	116	;'t'
   299   000E74  69                 	db	105	;'i'
   300   000E75  6F                 	db	111	;'o'
   301   000E76  6E                 	db	110	;'n'
   302   000E77  20                 	db	32
   303   000E78  3D                 	db	61	;'='
   304   000E79  20                 	db	32
   305   000E7A  25                 	db	37
   306   000E7B  64                 	db	100	;'d'
   307   000E7C  20                 	db	32
   308   000E7D  0D                 	db	13
   309   000E7E  0A                 	db	10
   310   000E7F  00                 	db	0
   311   000E80  00                 	db	0	; dummy byte at the end
   312   000000                     
   313                           ; #config settings
   314                           
   315                           	psect	cinit
   316   00744C                     __pcinit:
   317                           	callstack 0
   318   00744C                     start_initialization:
   319                           	callstack 0
   320   00744C                     __initialization:
   321                           	callstack 0
   322                           
   323                           ; Clear objects allocated to BANK3 (60 bytes)
   324   00744C  EE03  F000         	lfsr	0,__pbssBANK3
   325   007450  0E3C               	movlw	60
   326   007452                     clear_0:
   327   007452  6AEE               	clrf	postinc0,c
   328   007454  06E8               	decf	wreg,f,c
   329   007456  E1FD               	bnz	clear_0
   330                           
   331                           ; Clear objects allocated to BANK1 (32 bytes)
   332   007458  EE01  F0B8         	lfsr	0,__pbssBANK1
   333   00745C  0E20               	movlw	32
   334   00745E                     clear_1:
   335   00745E  6AEE               	clrf	postinc0,c
   336   007460  06E8               	decf	wreg,f,c
   337   007462  E1FD               	bnz	clear_1
   338                           
   339                           ; Clear objects allocated to BANK0 (26 bytes)
   340   007464  EE00  F0D6         	lfsr	0,__pbssBANK0
   341   007468  0E1A               	movlw	26
   342   00746A                     clear_2:
   343   00746A  6AEE               	clrf	postinc0,c
   344   00746C  06E8               	decf	wreg,f,c
   345   00746E  E1FD               	bnz	clear_2
   346                           
   347                           ; Clear objects allocated to COMRAM (5 bytes)
   348   007470  6A5C               	clrf	(__pbssCOMRAM+4)& (0+255),c
   349   007472  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   350   007474  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   351   007476  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   352   007478  6A58               	clrf	__pbssCOMRAM& (0+255),c
   353   00747A                     end_of_initialization:
   354                           	callstack 0
   355   00747A                     __end_of__initialization:
   356                           	callstack 0
   357   00747A  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   358   00747C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   359   00747E  0100               	movlb	0
   360   007480  EF88  F022         	goto	_main	;jump to C main() function
   361                           
   362                           	psect	bssCOMRAM
   363   000058                     __pbssCOMRAM:
   364                           	callstack 0
   365   000058                     _flags:
   366                           	callstack 0
   367   000058                     	ds	1
   368   000059                     _TxBufReadCnt:
   369                           	callstack 0
   370   000059                     	ds	1
   371   00005A                     _TxBufWriteCnt:
   372                           	callstack 0
   373   00005A                     	ds	1
   374   00005B                     _RxBufReadCnt:
   375                           	callstack 0
   376   00005B                     	ds	1
   377   00005C                     _RxBufWriteCnt:
   378                           	callstack 0
   379   00005C                     	ds	1
   380                           
   381                           	psect	bssBANK0
   382   0000D6                     __pbssBANK0:
   383                           	callstack 0
   384   0000D6                     _EUSART4RXbuf:
   385                           	callstack 0
   386   0000D6                     	ds	20
   387   0000EA                     _errno:
   388                           	callstack 0
   389   0000EA                     	ds	2
   390   0000EC                     _width:
   391                           	callstack 0
   392   0000EC                     	ds	2
   393   0000EE                     _prec:
   394                           	callstack 0
   395   0000EE                     	ds	2
   396                           
   397                           	psect	bssBANK1
   398   0001B8                     __pbssBANK1:
   399                           	callstack 0
   400   0001B8                     _dbuf:
   401                           	callstack 0
   402   0001B8                     	ds	32
   403                           
   404                           	psect	bssBANK3
   405   000300                     __pbssBANK3:
   406                           	callstack 0
   407   000300                     _EUSART4TXbuf:
   408                           	callstack 0
   409   000300                     	ds	60
   410                           
   411                           	psect	cstackBANK2
   412   000200                     __pcstackBANK2:
   413                           	callstack 0
   414   000200                     main@red_val:
   415                           	callstack 0
   416                           
   417                           ; 20 bytes @ 0x0
   418   000200                     	ds	20
   419   000214                     main@green_val:
   420                           	callstack 0
   421                           
   422                           ; 20 bytes @ 0x14
   423   000214                     	ds	20
   424   000228                     main@blue_val:
   425                           	callstack 0
   426                           
   427                           ; 20 bytes @ 0x28
   428   000228                     	ds	20
   429   00023C                     main@clear_val:
   430                           	callstack 0
   431                           
   432                           ; 20 bytes @ 0x3C
   433   00023C                     	ds	20
   434   000250                     main@actions:
   435                           	callstack 0
   436                           
   437                           ; 40 bytes @ 0x50
   438   000250                     	ds	40
   439   000278                     main@timings:
   440                           	callstack 0
   441                           
   442                           ; 40 bytes @ 0x78
   443   000278                     	ds	40
   444   0002A0                     main@pclear_val:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0xA0
   448   0002A0                     	ds	2
   449   0002A2                     main@lum_threshold:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0xA2
   453   0002A2                     	ds	2
   454   0002A4                     main@lost_detection:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0xA4
   458   0002A4                     	ds	2
   459   0002A6                     main@measured_time:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0xA6
   463   0002A6                     	ds	2
   464   0002A8                     main@lum:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0xA8
   468   0002A8                     	ds	2
   469   0002AA                     main@going_forward:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0xAA
   473   0002AA                     	ds	1
   474   0002AB                     main@i:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0xAB
   478   0002AB                     	ds	1
   479   0002AC                     main@actions_completed:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0xAC
   483   0002AC                     	ds	2
   484   0002AE                     main@motorL:
   485                           	callstack 0
   486                           
   487                           ; 9 bytes @ 0xAE
   488   0002AE                     	ds	9
   489   0002B7                     main@motorR:
   490                           	callstack 0
   491                           
   492                           ; 9 bytes @ 0xB7
   493   0002B7                     	ds	9
   494   0002C0                     main@action_to_do:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0xC0
   498   0002C0                     	ds	2
   499   0002C2                     main@pmL:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0xC2
   503   0002C2                     	ds	2
   504   0002C4                     main@pmR:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xC4
   508   0002C4                     	ds	2
   509                           
   510                           	psect	cstackBANK1
   511   000100                     __pcstackBANK1:
   512                           	callstack 0
   513   000100                     _powf$3063:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x0
   517   000100                     	ds	4
   518   000104                     _powf$3064:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x4
   522   000104                     	ds	4
   523   000108                     _powf$3068:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x8
   527   000108                     	ds	4
   528   00010C                     _powf$3069:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0xC
   532   00010C                     	ds	4
   533   000110                     _powf$3070:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x10
   537   000110                     	ds	4
   538   000114                     _powf$3071:
   539                           	callstack 0
   540                           
   541                           ; 4 bytes @ 0x14
   542   000114                     	ds	4
   543   000118                     _powf$3072:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0x18
   547   000118                     	ds	4
   548   00011C                     powf@t2:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0x1C
   552   00011C                     	ds	4
   553   000120                     powf@z_h:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0x20
   557   000120                     	ds	4
   558   000124                     powf@z_l:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x24
   562   000124                     	ds	4
   563   000128                     powf@i:
   564                           	callstack 0
   565                           
   566                           ; 4 bytes @ 0x28
   567   000128                     	ds	4
   568   00012C                     powf@y1:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0x2C
   572   00012C                     	ds	4
   573   000130                     powf@s_l:
   574                           	callstack 0
   575                           
   576                           ; 4 bytes @ 0x30
   577   000130                     	ds	4
   578   000134                     powf@t_l:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x34
   582   000134                     	ds	4
   583   000138                     _powf$3062:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x38
   587   000138                     	ds	4
   588   00013C                     _powf$3066:
   589                           	callstack 0
   590                           
   591                           ; 4 bytes @ 0x3C
   592   00013C                     	ds	4
   593   000140                     _powf$3067:
   594                           	callstack 0
   595                           
   596                           ; 4 bytes @ 0x40
   597   000140                     	ds	4
   598   000144                     powf@w:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0x44
   602   000144                     	ds	4
   603   000148                     _powf$3058:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x48
   607   000148                     	ds	4
   608   00014C                     _powf$3060:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x4C
   612   00014C                     	ds	4
   613   000150                     powf@r:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x50
   617   000150                     	ds	4
   618   000154                     powf@yisint:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0x54
   622   000154                     	ds	4
   623   000158                     powf@s:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x58
   627   000158                     	ds	4
   628   00015C                     _powf$3059:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x5C
   632   00015C                     	ds	4
   633   000160                     _powf$3065:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x60
   637   000160                     	ds	4
   638   000164                     powf@sn:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x64
   642   000164                     	ds	4
   643   000168                     powf@hx:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x68
   647   000168                     	ds	4
   648   00016C                     powf@p_l:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x6C
   652   00016C                     	ds	4
   653   000170                     powf@t_h:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x70
   657   000170                     	ds	4
   658   000174                     powf@s_h:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x74
   662   000174                     	ds	4
   663   000178                     powf@ax:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x78
   667   000178                     	ds	4
   668   00017C                     powf@u:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0x7C
   672   00017C                     	ds	4
   673   000180                     powf@v:
   674                           	callstack 0
   675                           
   676                           ; 4 bytes @ 0x80
   677   000180                     	ds	4
   678   000184                     powf@hy:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x84
   682   000184                     	ds	4
   683   000188                     powf@n:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x88
   687   000188                     	ds	4
   688   00018C                     powf@t1:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x8C
   692   00018C                     	ds	4
   693   000190                     powf@s2:
   694                           	callstack 0
   695                           
   696                           ; 4 bytes @ 0x90
   697   000190                     	ds	4
   698   000194                     powf@iy:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x94
   702   000194                     	ds	4
   703   000198                     powf@is:
   704                           	callstack 0
   705                           
   706                           ; 4 bytes @ 0x98
   707   000198                     	ds	4
   708   00019C                     _powf$3061:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x9C
   712   00019C                     	ds	4
   713   0001A0                     powf@p_h:
   714                           	callstack 0
   715                           
   716                           ; 4 bytes @ 0xA0
   717   0001A0                     	ds	4
   718   0001A4                     powf@k:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0xA4
   722   0001A4                     	ds	4
   723   0001A8                     powf@j:
   724                           	callstack 0
   725                           
   726                           ; 4 bytes @ 0xA8
   727   0001A8                     	ds	4
   728   0001AC                     powf@ix:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0xAC
   732   0001AC                     	ds	4
   733   0001B0                     powf@t:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0xB0
   737   0001B0                     	ds	4
   738   0001B4                     powf@z:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0xB4
   742   0001B4                     	ds	4
   743                           
   744                           	psect	cstackBANK0
   745   000060                     __pcstackBANK0:
   746                           	callstack 0
   747   000060                     ?_powf:
   748                           	callstack 0
   749   000060                     powf@x:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x0
   753   000060                     	ds	4
   754   000064                     powf@y:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0x4
   758   000064                     	ds	4
   759   000068                     ??_powf:
   760                           
   761                           ; 1 bytes @ 0x8
   762   000068                     	ds	9
   763   000071                     ??_decide_action:
   764                           
   765                           ; 1 bytes @ 0x11
   766   000071                     	ds	2
   767   000073                     _decide_action$3050:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x13
   771   000073                     	ds	4
   772   000077                     decide_action@rgb_comp:
   773                           	callstack 0
   774                           
   775                           ; 32 bytes @ 0x17
   776   000077                     	ds	32
   777   000097                     decide_action@action:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x37
   781   000097                     	ds	1
   782   000098                     decide_action@total:
   783                           	callstack 0
   784                           
   785                           ; 4 bytes @ 0x38
   786   000098                     	ds	4
   787   00009C                     decide_action@i:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x3C
   791   00009C                     	ds	1
   792   00009D                     decide_action@red:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x3D
   796   00009D                     	ds	4
   797   0000A1                     decide_action@green:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x41
   801   0000A1                     	ds	4
   802   0000A5                     decide_action@blue:
   803                           	callstack 0
   804                           
   805                           ; 4 bytes @ 0x45
   806   0000A5                     	ds	4
   807   0000A9                     decide_action@red_r:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x49
   811   0000A9                     	ds	4
   812   0000AD                     decide_action@green_r:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x4D
   816   0000AD                     	ds	4
   817   0000B1                     decide_action@blue_r:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0x51
   821   0000B1                     	ds	4
   822   0000B5                     _decide_action$3051:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x55
   826   0000B5                     	ds	4
   827   0000B9                     _decide_action$3052:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0x59
   831   0000B9                     	ds	4
   832   0000BD                     _decide_action$3053:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x5D
   836   0000BD                     	ds	4
   837   0000C1                     _decide_action$3054:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0x61
   841   0000C1                     	ds	4
   842   0000C5                     _decide_action$3055:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0x65
   846   0000C5                     	ds	4
   847   0000C9                     _decide_action$3056:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x69
   851   0000C9                     	ds	4
   852   0000CD                     _decide_action$3057:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0x6D
   856   0000CD                     	ds	4
   857   0000D1                     ??_main:
   858                           
   859                           ; 1 bytes @ 0x71
   860   0000D1                     	ds	5
   861                           
   862                           	psect	cstackCOMRAM
   863   000001                     __pcstackCOMRAM:
   864                           	callstack 0
   865   000001                     i2sendCharSerial4@charToSend:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x0
   869   000001                     	ds	1
   870   000002                     ??_color_click_toggleLED:
   871   000002                     ??_invert_action:
   872   000002                     ??_I2C_2_Master_Idle:
   873   000002                     ?_get16bitTMR0val:
   874                           	callstack 0
   875   000002                     ?___wmul:
   876                           	callstack 0
   877   000002                     ?___awdiv:
   878                           	callstack 0
   879   000002                     ?___awmod:
   880                           	callstack 0
   881   000002                     ?___fladd:
   882                           	callstack 0
   883   000002                     ?___flneg:
   884                           	callstack 0
   885   000002                     sendCharSerial4@charToSend:
   886                           	callstack 0
   887   000002                     initDCmotorsPWM@PWMperiod:
   888                           	callstack 0
   889   000002                     ___wmul@multiplier:
   890                           	callstack 0
   891   000002                     ___awdiv@dividend:
   892                           	callstack 0
   893   000002                     ___awmod@dividend:
   894                           	callstack 0
   895   000002                     fputc@c:
   896                           	callstack 0
   897   000002                     ___flneg@f1:
   898                           	callstack 0
   899   000002                     ___fladd@b:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0x1
   903   000002                     	ds	1
   904   000003                     ??_I2C_2_Master_Read:
   905   000003                     I2C_2_Master_Write@data_byte:
   906                           	callstack 0
   907   000003                     sendStringSerial4@string:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x2
   911   000003                     	ds	1
   912   000004                     ??_get16bitTMR0val:
   913   000004                     color_writetoaddr@value:
   914                           	callstack 0
   915   000004                     invert_action@input_action:
   916                           	callstack 0
   917   000004                     I2C_2_Master_Read@ack:
   918                           	callstack 0
   919   000004                     fputc@fp:
   920                           	callstack 0
   921   000004                     ___wmul@multiplicand:
   922                           	callstack 0
   923   000004                     ___awdiv@divisor:
   924                           	callstack 0
   925   000004                     ___awmod@divisor:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x3
   929   000004                     	ds	1
   930   000005                     ??_fputc:
   931   000005                     color_writetoaddr@address:
   932                           	callstack 0
   933   000005                     invert_action@output_action:
   934                           	callstack 0
   935   000005                     I2C_2_Master_Read@tmp:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x4
   939   000005                     	ds	1
   940   000006                     ??_color_click_init:
   941   000006                     ?_color_read_Clear:
   942                           	callstack 0
   943   000006                     ?_color_read_Red:
   944                           	callstack 0
   945   000006                     ?_color_read_Green:
   946                           	callstack 0
   947   000006                     ?_color_read_Blue:
   948                           	callstack 0
   949   000006                     ___awdiv@counter:
   950                           	callstack 0
   951   000006                     ___awmod@counter:
   952                           	callstack 0
   953   000006                     get16bitTMR0val@timer_val:
   954                           	callstack 0
   955   000006                     ___wmul@product:
   956                           	callstack 0
   957   000006                     ___fladd@a:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x5
   961   000006                     	ds	1
   962   000007                     ___awdiv@sign:
   963                           	callstack 0
   964   000007                     ___awmod@sign:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x6
   968   000007                     	ds	1
   969   000008                     ??_color_read_Clear:
   970   000008                     ??_color_read_Red:
   971   000008                     ??_color_read_Green:
   972   000008                     ??_color_read_Blue:
   973   000008                     ?_abs:
   974                           	callstack 0
   975   000008                     ?___lwdiv:
   976                           	callstack 0
   977   000008                     ___awdiv@quotient:
   978                           	callstack 0
   979   000008                     ___lwdiv@dividend:
   980                           	callstack 0
   981   000008                     abs@a:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x7
   985   000008                     	ds	2
   986   00000A                     ??___fladd:
   987   00000A                     ??_abs:
   988   00000A                     ___lwdiv@divisor:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x9
   992   00000A                     	ds	1
   993   00000B                     color_read_Clear@tmp:
   994                           	callstack 0
   995   00000B                     color_read_Red@tmp:
   996                           	callstack 0
   997   00000B                     color_read_Green@tmp:
   998                           	callstack 0
   999   00000B                     color_read_Blue@tmp:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0xA
  1003   00000B                     	ds	1
  1004   00000C                     vfpfcnvrt@fp:
  1005                           	callstack 0
  1006   00000C                     ___lwdiv@quotient:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0xB
  1010   00000C                     	ds	1
  1011   00000D                     ?___xxtofl:
  1012                           	callstack 0
  1013   00000D                     vfpfcnvrt@fmt:
  1014                           	callstack 0
  1015   00000D                     ___xxtofl@val:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0xC
  1019   00000D                     	ds	1
  1020   00000E                     ___lwdiv@counter:
  1021                           	callstack 0
  1022   00000E                     ___fladd@signs:
  1023                           	callstack 0
  1024   00000E                     vfpfcnvrt@ap:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0xD
  1028   00000E                     	ds	1
  1029   00000F                     ??_vfpfcnvrt:
  1030   00000F                     ___fladd@aexp:
  1031                           	callstack 0
  1032   00000F                     setMotorPWM@m:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0xE
  1036   00000F                     	ds	1
  1037   000010                     ___fladd@bexp:
  1038                           	callstack 0
  1039   000010                     vfpfcnvrt@done:
  1040                           	callstack 0
  1041                           
  1042                           ; 1 bytes @ 0xF
  1043   000010                     	ds	1
  1044   000011                     ??_setMotorPWM:
  1045   000011                     ??___xxtofl:
  1046   000011                     ___fladd@grs:
  1047                           	callstack 0
  1048   000011                     vfpfcnvrt@cp:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x10
  1052   000011                     	ds	1
  1053   000012                     ?_sqrtf:
  1054                           	callstack 0
  1055   000012                     ?___flmul:
  1056                           	callstack 0
  1057   000012                     ___flmul@b:
  1058                           	callstack 0
  1059   000012                     vfpfcnvrt@convarg:
  1060                           	callstack 0
  1061   000012                     sqrtf@x:
  1062                           	callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x11
  1065   000012                     	ds	1
  1066   000013                     setMotorPWM@posDuty:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x12
  1070   000013                     	ds	1
  1071   000014                     setMotorPWM@negDuty:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x13
  1075   000014                     	ds	1
  1076   000015                     ___xxtofl@sign:
  1077                           	callstack 0
  1078   000015                     fullSpeedAhead@mL:
  1079                           	callstack 0
  1080   000015                     stop@mL:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x14
  1084   000015                     	ds	1
  1085   000016                     ??_sqrtf:
  1086   000016                     ___xxtofl@exp:
  1087                           	callstack 0
  1088   000016                     vfpfcnvrt@c:
  1089                           	callstack 0
  1090   000016                     ___flmul@a:
  1091                           	callstack 0
  1092                           
  1093                           ; 4 bytes @ 0x15
  1094   000016                     	ds	1
  1095   000017                     ?_vfprintf:
  1096                           	callstack 0
  1097   000017                     vfprintf@fp:
  1098                           	callstack 0
  1099   000017                     fullSpeedAhead@mR:
  1100                           	callstack 0
  1101   000017                     stop@mR:
  1102                           	callstack 0
  1103   000017                     ___xxtofl@arg:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x16
  1107   000017                     	ds	1
  1108   000018                     vfprintf@fmt:
  1109                           	callstack 0
  1110                           
  1111                           ; 1 bytes @ 0x17
  1112   000018                     	ds	1
  1113   000019                     ??_fullSpeedAhead:
  1114   000019                     vfprintf@ap:
  1115                           	callstack 0
  1116   000019                     turn_left_90@mL:
  1117                           	callstack 0
  1118   000019                     turn_right_90@mL:
  1119                           	callstack 0
  1120   000019                     turn_left_135@mL:
  1121                           	callstack 0
  1122   000019                     turn_right_135@mL:
  1123                           	callstack 0
  1124   000019                     reverse_after_read@mL:
  1125                           	callstack 0
  1126   000019                     reverse_one_square@mL:
  1127                           	callstack 0
  1128   000019                     inch_forward@mL:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x18
  1132   000019                     	ds	1
  1133   00001A                     ??___flmul:
  1134   00001A                     vfprintf@cfmt:
  1135                           	callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x19
  1138   00001A                     	ds	1
  1139   00001B                     ?_sprintf:
  1140                           	callstack 0
  1141   00001B                     turn_left_90@mR:
  1142                           	callstack 0
  1143   00001B                     turn_right_90@mR:
  1144                           	callstack 0
  1145   00001B                     turn_left_135@mR:
  1146                           	callstack 0
  1147   00001B                     turn_right_135@mR:
  1148                           	callstack 0
  1149   00001B                     reverse_after_read@mR:
  1150                           	callstack 0
  1151   00001B                     reverse_one_square@mR:
  1152                           	callstack 0
  1153   00001B                     inch_forward@mR:
  1154                           	callstack 0
  1155   00001B                     sprintf@s:
  1156                           	callstack 0
  1157   00001B                     sqrtf@s:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x1A
  1161   00001B                     	ds	2
  1162   00001D                     ??_turn_left_90:
  1163   00001D                     ??_turn_right_90:
  1164   00001D                     ??_turn_left_135:
  1165   00001D                     ??_turn_right_135:
  1166   00001D                     ??_reverse_after_read:
  1167   00001D                     ??_reverse_one_square:
  1168   00001D                     ??_inch_forward:
  1169   00001D                     sprintf@fmt:
  1170                           	callstack 0
  1171                           
  1172                           ; 1 bytes @ 0x1C
  1173   00001D                     	ds	1
  1174   00001E                     ___flmul@sign:
  1175                           	callstack 0
  1176                           
  1177                           ; 1 bytes @ 0x1D
  1178   00001E                     	ds	1
  1179   00001F                     ___flmul@grs:
  1180                           	callstack 0
  1181   00001F                     sqrtf@i:
  1182                           	callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x1E
  1185   00001F                     	ds	1
  1186   000020                     sprintf@ap:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x1F
  1190   000020                     	ds	1
  1191   000021                     sprintf@f:
  1192                           	callstack 0
  1193                           
  1194                           ; 12 bytes @ 0x20
  1195   000021                     	ds	2
  1196   000023                     ___flmul@aexp:
  1197                           	callstack 0
  1198   000023                     sqrtf@q:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x22
  1202   000023                     	ds	1
  1203   000024                     ___flmul@bexp:
  1204                           	callstack 0
  1205                           
  1206                           ; 1 bytes @ 0x23
  1207   000024                     	ds	1
  1208   000025                     ___flmul@prod:
  1209                           	callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x24
  1212   000025                     	ds	2
  1213   000027                     sqrtf@t:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x26
  1217   000027                     	ds	2
  1218   000029                     ___flmul@temp:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x28
  1222   000029                     	ds	2
  1223   00002B                     ?___fldiv:
  1224                           	callstack 0
  1225   00002B                     ?_scalbnf:
  1226                           	callstack 0
  1227   00002B                     ___fldiv@b:
  1228                           	callstack 0
  1229   00002B                     scalbnf@x:
  1230                           	callstack 0
  1231   00002B                     sqrtf@m:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x2A
  1235   00002B                     	ds	4
  1236   00002F                     scalbnf@n:
  1237                           	callstack 0
  1238   00002F                     ___fldiv@a:
  1239                           	callstack 0
  1240   00002F                     sqrtf@r:
  1241                           	callstack 0
  1242                           
  1243                           ; 4 bytes @ 0x2E
  1244   00002F                     	ds	2
  1245   000031                     ??_scalbnf:
  1246                           
  1247                           ; 1 bytes @ 0x30
  1248   000031                     	ds	2
  1249   000033                     ??___fldiv:
  1250   000033                     sqrtf@ix:
  1251                           	callstack 0
  1252                           
  1253                           ; 4 bytes @ 0x32
  1254   000033                     	ds	2
  1255   000035                     scalbnf@u:
  1256                           	callstack 0
  1257                           
  1258                           ; 4 bytes @ 0x34
  1259   000035                     	ds	2
  1260   000037                     ___fldiv@rem:
  1261                           	callstack 0
  1262                           
  1263                           ; 4 bytes @ 0x36
  1264   000037                     	ds	2
  1265   000039                     scalbnf@y:
  1266                           	callstack 0
  1267                           
  1268                           ; 4 bytes @ 0x38
  1269   000039                     	ds	2
  1270   00003B                     ___fldiv@sign:
  1271                           	callstack 0
  1272                           
  1273                           ; 1 bytes @ 0x3A
  1274   00003B                     	ds	1
  1275   00003C                     ___fldiv@new_exp:
  1276                           	callstack 0
  1277                           
  1278                           ; 2 bytes @ 0x3B
  1279   00003C                     	ds	2
  1280   00003E                     ___fldiv@grs:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x3D
  1284   00003E                     	ds	4
  1285   000042                     ___fldiv@bexp:
  1286                           	callstack 0
  1287                           
  1288                           ; 1 bytes @ 0x41
  1289   000042                     	ds	1
  1290   000043                     ___fldiv@aexp:
  1291                           	callstack 0
  1292                           
  1293                           ; 1 bytes @ 0x42
  1294   000043                     	ds	1
  1295   000044                     ?___flsub:
  1296                           	callstack 0
  1297   000044                     ___flsub@b:
  1298                           	callstack 0
  1299                           
  1300                           ; 4 bytes @ 0x43
  1301   000044                     	ds	4
  1302   000048                     ___flsub@a:
  1303                           	callstack 0
  1304                           
  1305                           ; 4 bytes @ 0x47
  1306   000048                     	ds	4
  1307   00004C                     ___flge@ff1:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x4B
  1311   00004C                     	ds	4
  1312   000050                     ___flge@ff2:
  1313                           	callstack 0
  1314                           
  1315                           ; 4 bytes @ 0x4F
  1316   000050                     	ds	4
  1317   000054                     ??___flge:
  1318                           
  1319                           ; 1 bytes @ 0x53
  1320   000054                     	ds	4
  1321                           
  1322 ;;
  1323 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1324 ;;
  1325 ;; *************** function _main *****************
  1326 ;; Defined at:
  1327 ;;		line 23 in file "main.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  i               1  171[BANK2 ] unsigned char 
  1332 ;;  timings        40  120[BANK2 ] unsigned int [20]
  1333 ;;  actions        40   80[BANK2 ] int [20]
  1334 ;;  clear_val      20   60[BANK2 ] unsigned char [20]
  1335 ;;  blue_val       20   40[BANK2 ] unsigned char [20]
  1336 ;;  green_val      20   20[BANK2 ] unsigned char [20]
  1337 ;;  red_val        20    0[BANK2 ] unsigned char [20]
  1338 ;;  motorR          9  183[BANK2 ] struct DC_motor
  1339 ;;  motorL          9  174[BANK2 ] struct DC_motor
  1340 ;;  pmR             2  196[BANK2 ] PTR struct DC_motor
  1341 ;;		 -> main@motorR(9), 
  1342 ;;  pmL             2  194[BANK2 ] PTR struct DC_motor
  1343 ;;		 -> main@motorL(9), 
  1344 ;;  action_to_do    2  192[BANK2 ] int 
  1345 ;;  actions_comp    2  172[BANK2 ] int 
  1346 ;;  lum             2  168[BANK2 ] unsigned int 
  1347 ;;  measured_tim    2  166[BANK2 ] unsigned int 
  1348 ;;  PWMcycle        2    0        unsigned int 
  1349 ;;  lost_detecti    2  164[BANK2 ] unsigned int 
  1350 ;;  lum_threshol    2  162[BANK2 ] unsigned int 
  1351 ;;  pclear_val      2  160[BANK2 ] PTR unsigned char 
  1352 ;;		 -> main@clear_val(20), 
  1353 ;;  pgreen_val      2    0        PTR unsigned char 
  1354 ;;		 -> main@green_val(20), 
  1355 ;;  pblue_val       2    0        PTR unsigned char 
  1356 ;;		 -> main@blue_val(20), 
  1357 ;;  pred_val        2    0        PTR unsigned char 
  1358 ;;		 -> main@red_val(20), 
  1359 ;;  previously_m    2    0        unsigned int 
  1360 ;;  bluem           2    0        unsigned int 
  1361 ;;  greenm          2    0        unsigned int 
  1362 ;;  redm            2    0        unsigned int 
  1363 ;;  going_forwar    1  170[BANK2 ] _Bool 
  1364 ;;  action          1    0        unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1375 ;;      Locals:         0       0       0     198       0       0       0       0       0       0       0       0       
      +0       0       0
  1376 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1377 ;;      Totals:         0       5       0     198       0       0       0       0       0       0       0       0       
      +0       0       0
  1378 ;;Total ram usage:      203 bytes
  1379 ;; Hardware stack levels required when called: 7
  1380 ;; This function calls:
  1381 ;;		_ADC_init
  1382 ;;		_I2C_2_Master_Init
  1383 ;;		_Interrupts_init
  1384 ;;		_Timer0_init
  1385 ;;		_color_click_init
  1386 ;;		_color_click_toggleLED
  1387 ;;		_color_read_Clear
  1388 ;;		_decide_action
  1389 ;;		_fullSpeedAhead
  1390 ;;		_get16bitTMR0val
  1391 ;;		_inch_forward
  1392 ;;		_initDCmotorsPWM
  1393 ;;		_initUSART4
  1394 ;;		_invert_action
  1395 ;;		_resetTimer0
  1396 ;;		_reverse_after_read
  1397 ;;		_reverse_one_square
  1398 ;;		_sendStringSerial4
  1399 ;;		_sprintf
  1400 ;;		_stop
  1401 ;;		_turn_left_135
  1402 ;;		_turn_left_90
  1403 ;;		_turn_right_135
  1404 ;;		_turn_right_90
  1405 ;; This function is called by:
  1406 ;;		Startup code after reset
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text0
  1411   004510                     __ptext0:
  1412                           	callstack 0
  1413   004510                     _main:
  1414                           	callstack 24
  1415   004510                     
  1416                           ;main.c: 25:     Timer0_init();
  1417   004510  ECDC  F03A         	call	_Timer0_init	;wreg free
  1418                           
  1419                           ;main.c: 26:     ADC_init();
  1420   004514  EC0A  F03B         	call	_ADC_init	;wreg free
  1421   004518                     
  1422                           ;main.c: 27:     Interrupts_init();
  1423   004518  EC35  F03B         	call	_Interrupts_init	;wreg free
  1424   00451C                     
  1425                           ;main.c: 28:     I2C_2_Master_Init();
  1426   00451C  EC90  F03A         	call	_I2C_2_Master_Init	;wreg free
  1427   004520                     
  1428                           ;main.c: 29:     color_click_init();
  1429   004520  EC7E  F039         	call	_color_click_init	;wreg free
  1430   004524                     
  1431                           ;main.c: 30:     initDCmotorsPWM(99);
  1432   004524  0E00               	movlw	0
  1433   004526  6E03               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1434   004528  0E63               	movlw	99
  1435   00452A  6E02               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1436   00452C  EC89  F037         	call	_initDCmotorsPWM	;wreg free
  1437   004530                     
  1438                           ;main.c: 31:     initUSART4();
  1439   004530  ECEC  F03A         	call	_initUSART4	;wreg free
  1440   004534                     
  1441                           ;main.c: 34:     color_click_toggleLED();
  1442   004534  ECAB  F038         	call	_color_click_toggleLED	;wreg free
  1443   004538                     
  1444                           ;main.c: 37:     LATHbits.LATH3=1;
  1445   004538  8680               	bsf	128,3,c	;volatile
  1446   00453A                     
  1447                           ;main.c: 38:     TRISHbits.TRISH3=0;
  1448   00453A  9688               	bcf	136,3,c	;volatile
  1449   00453C                     
  1450                           ;main.c: 41:     TRISFbits.TRISF2=1;
  1451   00453C  8486               	bsf	134,2,c	;volatile
  1452   00453E                     
  1453                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1454   00453E  010E               	movlb	14	; () banked
  1455   004540  95B4               	bcf	180,2,b	;volatile
  1456   004542                     
  1457                           ; BSR set to: 14
  1458                           ;main.c: 48:     motorL.power=0;
  1459   004542  0E00               	movlw	0
  1460   004544  0102               	movlb	2	; () banked
  1461   004546  6FAE               	movwf	main@motorL& (0+255),b
  1462   004548                     
  1463                           ; BSR set to: 2
  1464                           ;main.c: 49:     motorL.direction=1;
  1465   004548  0E01               	movlw	1
  1466   00454A  6FAF               	movwf	(main@motorL+1)& (0+255),b
  1467   00454C                     
  1468                           ; BSR set to: 2
  1469                           ;main.c: 50:     motorL.brakemode=1;
  1470   00454C  0E01               	movlw	1
  1471   00454E  6FB0               	movwf	(main@motorL+2)& (0+255),b
  1472   004550                     
  1473                           ; BSR set to: 2
  1474                           ;main.c: 51:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1475   004550  0EAA               	movlw	170
  1476   004552  6FB3               	movwf	(main@motorL+5)& (0+255),b
  1477   004554  0E0F               	movlw	15
  1478   004556  6FB4               	movwf	(main@motorL+6)& (0+255),b
  1479   004558                     
  1480                           ; BSR set to: 2
  1481                           ;main.c: 52:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1482   004558  0EA6               	movlw	166
  1483   00455A  6FB5               	movwf	(main@motorL+7)& (0+255),b
  1484   00455C  0E0F               	movlw	15
  1485   00455E  6FB6               	movwf	(main@motorL+8)& (0+255),b
  1486   004560                     
  1487                           ; BSR set to: 2
  1488                           ;main.c: 53:     motorL.PWMperiod=PWMcycle;
  1489   004560  0E00               	movlw	0
  1490   004562  6FB2               	movwf	(main@motorL+4)& (0+255),b
  1491   004564  0E63               	movlw	99
  1492   004566  6FB1               	movwf	(main@motorL+3)& (0+255),b
  1493   004568                     
  1494                           ; BSR set to: 2
  1495                           ;main.c: 55:     motorR.power=0;
  1496   004568  0E00               	movlw	0
  1497   00456A  6FB7               	movwf	main@motorR& (0+255),b
  1498   00456C                     
  1499                           ; BSR set to: 2
  1500                           ;main.c: 56:     motorR.direction=1;
  1501   00456C  0E01               	movlw	1
  1502   00456E  6FB8               	movwf	(main@motorR+1)& (0+255),b
  1503   004570                     
  1504                           ; BSR set to: 2
  1505                           ;main.c: 57:     motorR.brakemode=1;
  1506   004570  0E01               	movlw	1
  1507   004572  6FB9               	movwf	(main@motorR+2)& (0+255),b
  1508   004574                     
  1509                           ; BSR set to: 2
  1510                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1511   004574  0E25               	movlw	37
  1512   004576  6FBC               	movwf	(main@motorR+5)& (0+255),b
  1513   004578  0E0F               	movlw	15
  1514   00457A  6FBD               	movwf	(main@motorR+6)& (0+255),b
  1515   00457C                     
  1516                           ; BSR set to: 2
  1517                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1518   00457C  0E21               	movlw	33
  1519   00457E  6FBE               	movwf	(main@motorR+7)& (0+255),b
  1520   004580  0E0F               	movlw	15
  1521   004582  6FBF               	movwf	(main@motorR+8)& (0+255),b
  1522   004584                     
  1523                           ; BSR set to: 2
  1524                           ;main.c: 60:     motorR.PWMperiod=PWMcycle;
  1525   004584  0E00               	movlw	0
  1526   004586  6FBB               	movwf	(main@motorR+4)& (0+255),b
  1527   004588  0E63               	movlw	99
  1528   00458A  6FBA               	movwf	(main@motorR+3)& (0+255),b
  1529   00458C                     
  1530                           ; BSR set to: 2
  1531                           ;main.c: 63:     struct DC_motor *pmL= &motorL;
  1532   00458C  0EAE               	movlw	low main@motorL
  1533   00458E  6FC2               	movwf	main@pmL& (0+255),b
  1534   004590  0E02               	movlw	high main@motorL
  1535   004592  6FC3               	movwf	(main@pmL+1)& (0+255),b
  1536   004594                     
  1537                           ; BSR set to: 2
  1538                           ;main.c: 64:     struct DC_motor *pmR= &motorR;
  1539   004594  0EB7               	movlw	low main@motorR
  1540   004596  6FC4               	movwf	main@pmR& (0+255),b
  1541   004598  0E02               	movlw	high main@motorR
  1542   00459A  6FC5               	movwf	(main@pmR+1)& (0+255),b
  1543   00459C                     
  1544                           ; BSR set to: 2
  1545                           ;main.c: 67:     char clear_val[20];;main.c: 68:     char red_val[20];;main.c: 69:     c
      +                          har green_val[20];;main.c: 70:     char blue_val[20];;main.c: 71:     char *pclear_val;;
      +                          main.c: 72:     char *pred_val;;main.c: 73:     char *pblue_val;;main.c: 74:     char *p
      +                          green_val;;main.c: 75:     pclear_val = &clear_val[0];
  1546   00459C  0E3C               	movlw	low main@clear_val
  1547   00459E  6FA0               	movwf	main@pclear_val& (0+255),b
  1548   0045A0  0E02               	movlw	high main@clear_val
  1549   0045A2  6FA1               	movwf	(main@pclear_val+1)& (0+255),b
  1550   0045A4                     
  1551                           ; BSR set to: 2
  1552                           ;main.c: 80:     unsigned int lum;;main.c: 81:     unsigned int lum_threshold;;main.c: 8
      +                          2:     unsigned int redm, greenm, bluem;;main.c: 83:     char action;;main.c: 84:     _B
      +                          ool going_forward = 0;
  1553   0045A4  0E00               	movlw	0
  1554   0045A6  6FAA               	movwf	main@going_forward& (0+255),b
  1555   0045A8                     
  1556                           ; BSR set to: 2
  1557                           ;main.c: 85:     unsigned int previously_measured_time, measured_time;;main.c: 86:     i
      +                          nt action_to_do;;main.c: 87:     unsigned int timings[20];;main.c: 88:     int actions[2
      +                          0];;main.c: 89:     int actions_completed = 0;
  1558   0045A8  0E00               	movlw	0
  1559   0045AA  6FAD               	movwf	(main@actions_completed+1)& (0+255),b
  1560   0045AC  0E00               	movlw	0
  1561   0045AE  6FAC               	movwf	main@actions_completed& (0+255),b
  1562   0045B0                     
  1563                           ; BSR set to: 2
  1564                           ;main.c: 102:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1565   0045B0  0EA3               	movlw	163
  1566   0045B2  0100               	movlb	0	; () banked
  1567   0045B4  6FD2               	movwf	(??_main+1)& (0+255),b
  1568   0045B6  0E57               	movlw	87
  1569   0045B8  6FD1               	movwf	??_main& (0+255),b
  1570   0045BA  0E02               	movlw	2
  1571   0045BC                     u8107:
  1572   0045BC  2EE8               	decfsz	wreg,f,c
  1573   0045BE  D7FE               	bra	u8107
  1574   0045C0  2FD1               	decfsz	??_main& (0+255),f,b
  1575   0045C2  D7FC               	bra	u8107
  1576   0045C4  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1577   0045C6  D7FA               	bra	u8107
  1578   0045C8  0000               	nop	
  1579   0045CA                     
  1580                           ;main.c: 104:     lum = color_read_Clear();
  1581   0045CA  EC56  F039         	call	_color_read_Clear	;wreg free
  1582   0045CE  C006  F2A8         	movff	?_color_read_Clear,main@lum
  1583   0045D2  C007  F2A9         	movff	?_color_read_Clear+1,main@lum+1
  1584   0045D6                     
  1585                           ;main.c: 105:     lum_threshold = lum + 10;
  1586   0045D6  0E0A               	movlw	10
  1587   0045D8  0102               	movlb	2	; () banked
  1588   0045DA  25A8               	addwf	main@lum& (0+255),w,b
  1589   0045DC  6FA2               	movwf	main@lum_threshold& (0+255),b
  1590   0045DE  0E00               	movlw	0
  1591   0045E0  21A9               	addwfc	(main@lum+1)& (0+255),w,b
  1592   0045E2  6FA3               	movwf	(main@lum_threshold+1)& (0+255),b
  1593   0045E4                     
  1594                           ; BSR set to: 2
  1595                           ;main.c: 107:     unsigned int lost_detection = 0;
  1596   0045E4  0E00               	movlw	0
  1597   0045E6  6FA5               	movwf	(main@lost_detection+1)& (0+255),b
  1598   0045E8  0E00               	movlw	0
  1599   0045EA  6FA4               	movwf	main@lost_detection& (0+255),b
  1600   0045EC                     l7652:
  1601                           
  1602                           ;main.c: 120:         if(!going_forward){
  1603   0045EC  0102               	movlb	2	; () banked
  1604   0045EE  51AA               	movf	main@going_forward& (0+255),w,b
  1605   0045F0  A4D8               	btfss	status,2,c
  1606   0045F2  EFFD  F022         	goto	u7831
  1607   0045F6  EFFF  F022         	goto	u7830
  1608   0045FA                     u7831:
  1609   0045FA  EF0E  F023         	goto	l7660
  1610   0045FE                     u7830:
  1611   0045FE                     
  1612                           ; BSR set to: 2
  1613                           ;main.c: 123:             resetTimer0();
  1614   0045FE  EC3B  F03B         	call	_resetTimer0	;wreg free
  1615   004602                     
  1616                           ;main.c: 124:             fullSpeedAhead(pmL, pmR);
  1617   004602  C2C2  F015         	movff	main@pmL,fullSpeedAhead@mL
  1618   004606  C2C3  F016         	movff	main@pmL+1,fullSpeedAhead@mL+1
  1619   00460A  C2C4  F017         	movff	main@pmR,fullSpeedAhead@mR
  1620   00460E  C2C5  F018         	movff	main@pmR+1,fullSpeedAhead@mR+1
  1621   004612  EC76  F036         	call	_fullSpeedAhead	;wreg free
  1622   004616                     
  1623                           ;main.c: 125:             going_forward = 1;
  1624   004616  0E01               	movlw	1
  1625   004618  0102               	movlb	2	; () banked
  1626   00461A  6FAA               	movwf	main@going_forward& (0+255),b
  1627   00461C                     l7660:
  1628                           
  1629                           ; BSR set to: 2
  1630                           ;main.c: 128:         lum = color_read_Clear();
  1631   00461C  EC56  F039         	call	_color_read_Clear	;wreg free
  1632   004620  C006  F2A8         	movff	?_color_read_Clear,main@lum
  1633   004624  C007  F2A9         	movff	?_color_read_Clear+1,main@lum+1
  1634   004628                     
  1635                           ;main.c: 130:         if (lum > lum_threshold){
  1636   004628  0102               	movlb	2	; () banked
  1637   00462A  51A8               	movf	main@lum& (0+255),w,b
  1638   00462C  5DA2               	subwf	main@lum_threshold& (0+255),w,b
  1639   00462E  51A9               	movf	(main@lum+1)& (0+255),w,b
  1640   004630  59A3               	subwfb	(main@lum_threshold+1)& (0+255),w,b
  1641   004632  B0D8               	btfsc	status,0,c
  1642   004634  EF1E  F023         	goto	u7841
  1643   004638  EF20  F023         	goto	u7840
  1644   00463C                     u7841:
  1645   00463C  EFF6  F022         	goto	l7652
  1646   004640                     u7840:
  1647   004640                     
  1648                           ; BSR set to: 2
  1649                           ;main.c: 132:             measured_time = get16bitTMR0val();
  1650   004640  ECFB  F03A         	call	_get16bitTMR0val	;wreg free
  1651   004644  C002  F2A6         	movff	?_get16bitTMR0val,main@measured_time
  1652   004648  C003  F2A7         	movff	?_get16bitTMR0val+1,main@measured_time+1
  1653   00464C                     
  1654                           ;main.c: 133:             stop(pmL, pmR);
  1655   00464C  C2C2  F015         	movff	main@pmL,stop@mL
  1656   004650  C2C3  F016         	movff	main@pmL+1,stop@mL+1
  1657   004654  C2C4  F017         	movff	main@pmR,stop@mR
  1658   004658  C2C5  F018         	movff	main@pmR+1,stop@mR+1
  1659   00465C  ECDA  F037         	call	_stop	;wreg free
  1660   004660                     
  1661                           ;main.c: 134:             _delay((unsigned long)((250)*(64000000/4000.0)));
  1662   004660  0E15               	movlw	21
  1663   004662  0100               	movlb	0	; () banked
  1664   004664  6FD2               	movwf	(??_main+1)& (0+255),b
  1665   004666  0E4B               	movlw	75
  1666   004668  6FD1               	movwf	??_main& (0+255),b
  1667   00466A  0EBE               	movlw	190
  1668   00466C                     u8117:
  1669   00466C  2EE8               	decfsz	wreg,f,c
  1670   00466E  D7FE               	bra	u8117
  1671   004670  2FD1               	decfsz	??_main& (0+255),f,b
  1672   004672  D7FC               	bra	u8117
  1673   004674  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1674   004676  D7FA               	bra	u8117
  1675   004678  0000               	nop	
  1676   00467A                     l7670:
  1677                           
  1678                           ;main.c: 138:                 lum = color_read_Clear();
  1679   00467A  EC56  F039         	call	_color_read_Clear	;wreg free
  1680   00467E  C006  F2A8         	movff	?_color_read_Clear,main@lum
  1681   004682  C007  F2A9         	movff	?_color_read_Clear+1,main@lum+1
  1682   004686                     
  1683                           ;main.c: 139:                 if(lum < 80){
  1684   004686  0102               	movlb	2	; () banked
  1685   004688  51A9               	movf	(main@lum+1)& (0+255),w,b
  1686   00468A  E107               	bnz	u7851
  1687   00468C  0E50               	movlw	80
  1688   00468E  5DA8               	subwf	main@lum& (0+255),w,b
  1689   004690  B0D8               	btfsc	status,0,c
  1690   004692  EF4D  F023         	goto	u7851
  1691   004696  EF4F  F023         	goto	u7850
  1692   00469A                     u7851:
  1693   00469A  EF79  F023         	goto	l7684
  1694   00469E                     u7850:
  1695   00469E                     
  1696                           ; BSR set to: 2
  1697                           ;main.c: 140:                     inch_forward(pmL, pmR);
  1698   00469E  C2C2  F019         	movff	main@pmL,inch_forward@mL
  1699   0046A2  C2C3  F01A         	movff	main@pmL+1,inch_forward@mL+1
  1700   0046A6  C2C4  F01B         	movff	main@pmR,inch_forward@mR
  1701   0046AA  C2C5  F01C         	movff	main@pmR+1,inch_forward@mR+1
  1702   0046AE  EC9F  F035         	call	_inch_forward	;wreg free
  1703   0046B2                     
  1704                           ;main.c: 141:                     lost_detection += 1;
  1705   0046B2  0102               	movlb	2	; () banked
  1706   0046B4  4BA4               	infsnz	main@lost_detection& (0+255),f,b
  1707   0046B6  2BA5               	incf	(main@lost_detection+1)& (0+255),f,b
  1708   0046B8                     
  1709                           ; BSR set to: 2
  1710                           ;main.c: 142:                     _delay((unsigned long)((100)*(64000000/4000.0)));
  1711   0046B8  0E09               	movlw	9
  1712   0046BA  0100               	movlb	0	; () banked
  1713   0046BC  6FD2               	movwf	(??_main+1)& (0+255),b
  1714   0046BE  0E1E               	movlw	30
  1715   0046C0  6FD1               	movwf	??_main& (0+255),b
  1716   0046C2  0EE4               	movlw	228
  1717   0046C4                     u8127:
  1718   0046C4  2EE8               	decfsz	wreg,f,c
  1719   0046C6  D7FE               	bra	u8127
  1720   0046C8  2FD1               	decfsz	??_main& (0+255),f,b
  1721   0046CA  D7FC               	bra	u8127
  1722   0046CC  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1723   0046CE  D7FA               	bra	u8127
  1724   0046D0  0000               	nop	
  1725   0046D2                     
  1726                           ;main.c: 149:                 if(lost_detection > 15){
  1727   0046D2  0102               	movlb	2	; () banked
  1728   0046D4  51A5               	movf	(main@lost_detection+1)& (0+255),w,b
  1729   0046D6  E109               	bnz	u7860
  1730   0046D8  0E10               	movlw	16
  1731   0046DA  5DA4               	subwf	main@lost_detection& (0+255),w,b
  1732   0046DC  A0D8               	btfss	status,0,c
  1733   0046DE  EF73  F023         	goto	u7861
  1734   0046E2  EF75  F023         	goto	u7860
  1735   0046E6                     u7861:
  1736   0046E6  EF3D  F023         	goto	l7670
  1737   0046EA                     u7860:
  1738   0046EA                     
  1739                           ; BSR set to: 2
  1740                           ;main.c: 150:                     action_to_do = 7;
  1741   0046EA  0E00               	movlw	0
  1742   0046EC  6FC1               	movwf	(main@action_to_do+1)& (0+255),b
  1743   0046EE  0E07               	movlw	7
  1744   0046F0  6FC0               	movwf	main@action_to_do& (0+255),b
  1745   0046F2                     l7684:
  1746                           
  1747                           ; BSR set to: 2
  1748                           ;main.c: 155:             going_forward = 0;
  1749   0046F2  0E00               	movlw	0
  1750   0046F4  6FAA               	movwf	main@going_forward& (0+255),b
  1751   0046F6                     
  1752                           ; BSR set to: 2
  1753                           ;main.c: 156:             timings[actions_completed] = measured_time;
  1754   0046F6  90D8               	bcf	status,0,c
  1755   0046F8  35AC               	rlcf	main@actions_completed& (0+255),w,b
  1756   0046FA  6ED9               	movwf	fsr2l,c
  1757   0046FC  35AD               	rlcf	(main@actions_completed+1)& (0+255),w,b
  1758   0046FE  6EDA               	movwf	fsr2h,c
  1759   004700  0E78               	movlw	low main@timings
  1760   004702  26D9               	addwf	fsr2l,f,c
  1761   004704  0E02               	movlw	high main@timings
  1762   004706  22DA               	addwfc	fsr2h,f,c
  1763   004708  C2A6  FFDE         	movff	main@measured_time,postinc2
  1764   00470C  C2A7  FFDD         	movff	main@measured_time+1,postdec2
  1765   004710                     
  1766                           ; BSR set to: 2
  1767                           ;main.c: 159:             if(action_to_do != 7){
  1768   004710  0E07               	movlw	7
  1769   004712  19C0               	xorwf	main@action_to_do& (0+255),w,b
  1770   004714  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1771   004716  B4D8               	btfsc	status,2,c
  1772   004718  EF90  F023         	goto	u7871
  1773   00471C  EF92  F023         	goto	u7870
  1774   004720                     u7871:
  1775   004720  EF9E  F023         	goto	l7694
  1776   004724                     u7870:
  1777   004724                     
  1778                           ; BSR set to: 2
  1779                           ;main.c: 160:                 action_to_do = decide_action();
  1780   004724  EC81  F019         	call	_decide_action	;wreg free
  1781   004728  0100               	movlb	0	; () banked
  1782   00472A  6FD1               	movwf	??_main& (0+255),b
  1783   00472C  51D1               	movf	??_main& (0+255),w,b
  1784   00472E  0102               	movlb	2	; () banked
  1785   004730  6FC0               	movwf	main@action_to_do& (0+255),b
  1786   004732  6BC1               	clrf	(main@action_to_do+1)& (0+255),b
  1787   004734                     
  1788                           ; BSR set to: 2
  1789                           ;main.c: 161:                 lost_detection = 0;
  1790   004734  0E00               	movlw	0
  1791   004736  6FA5               	movwf	(main@lost_detection+1)& (0+255),b
  1792   004738  0E00               	movlw	0
  1793   00473A  6FA4               	movwf	main@lost_detection& (0+255),b
  1794   00473C                     l7694:
  1795                           
  1796                           ; BSR set to: 2
  1797                           ;main.c: 164:             actions[actions_completed] = action_to_do;
  1798   00473C  90D8               	bcf	status,0,c
  1799   00473E  35AC               	rlcf	main@actions_completed& (0+255),w,b
  1800   004740  6ED9               	movwf	fsr2l,c
  1801   004742  35AD               	rlcf	(main@actions_completed+1)& (0+255),w,b
  1802   004744  6EDA               	movwf	fsr2h,c
  1803   004746  0E50               	movlw	low main@actions
  1804   004748  26D9               	addwf	fsr2l,f,c
  1805   00474A  0E02               	movlw	high main@actions
  1806   00474C  22DA               	addwfc	fsr2h,f,c
  1807   00474E  C2C0  FFDE         	movff	main@action_to_do,postinc2
  1808   004752  C2C1  FFDD         	movff	main@action_to_do+1,postdec2
  1809   004756                     
  1810                           ; BSR set to: 2
  1811                           ;main.c: 165:             actions_completed += 1;
  1812   004756  4BAC               	infsnz	main@actions_completed& (0+255),f,b
  1813   004758  2BAD               	incf	(main@actions_completed+1)& (0+255),f,b
  1814   00475A                     
  1815                           ; BSR set to: 2
  1816                           ;main.c: 168:             if(action_to_do == 0){
  1817   00475A  51C0               	movf	main@action_to_do& (0+255),w,b
  1818   00475C  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1819   00475E  A4D8               	btfss	status,2,c
  1820   004760  EFB4  F023         	goto	u7881
  1821   004764  EFB6  F023         	goto	u7880
  1822   004768                     u7881:
  1823   004768  EFCC  F023         	goto	l7702
  1824   00476C                     u7880:
  1825   00476C                     
  1826                           ; BSR set to: 2
  1827                           ;main.c: 169:                 reverse_after_read(pmL, pmR);
  1828   00476C  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  1829   004770  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1830   004774  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  1831   004778  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1832   00477C  EC42  F032         	call	_reverse_after_read	;wreg free
  1833                           
  1834                           ;main.c: 170:                 turn_right_90(pmL, pmR);
  1835   004780  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  1836   004784  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1837   004788  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  1838   00478C  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1839   004790  ECB5  F034         	call	_turn_right_90	;wreg free
  1840                           
  1841                           ;main.c: 171:             }
  1842   004794  EFE0  F024         	goto	l7734
  1843   004798                     l7702:
  1844                           
  1845                           ; BSR set to: 2
  1846   004798  05C0               	decf	main@action_to_do& (0+255),w,b
  1847   00479A  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1848   00479C  A4D8               	btfss	status,2,c
  1849   00479E  EFD3  F023         	goto	u7891
  1850   0047A2  EFD5  F023         	goto	u7890
  1851   0047A6                     u7891:
  1852   0047A6  EFEB  F023         	goto	l7706
  1853   0047AA                     u7890:
  1854   0047AA                     
  1855                           ; BSR set to: 2
  1856                           ;main.c: 173:                 reverse_after_read(pmL, pmR);
  1857   0047AA  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  1858   0047AE  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1859   0047B2  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  1860   0047B6  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1861   0047BA  EC42  F032         	call	_reverse_after_read	;wreg free
  1862                           
  1863                           ;main.c: 174:                 turn_left_90(pmL, pmR);
  1864   0047BE  C2C2  F019         	movff	main@pmL,turn_left_90@mL
  1865   0047C2  C2C3  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  1866   0047C6  C2C4  F01B         	movff	main@pmR,turn_left_90@mR
  1867   0047CA  C2C5  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  1868   0047CE  EC2A  F035         	call	_turn_left_90	;wreg free
  1869                           
  1870                           ;main.c: 175:             }
  1871   0047D2  EFE0  F024         	goto	l7734
  1872   0047D6                     l7706:
  1873                           
  1874                           ; BSR set to: 2
  1875   0047D6  0E02               	movlw	2
  1876   0047D8  19C0               	xorwf	main@action_to_do& (0+255),w,b
  1877   0047DA  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1878   0047DC  A4D8               	btfss	status,2,c
  1879   0047DE  EFF3  F023         	goto	u7901
  1880   0047E2  EFF5  F023         	goto	u7900
  1881   0047E6                     u7901:
  1882   0047E6  EF15  F024         	goto	l7710
  1883   0047EA                     u7900:
  1884   0047EA                     
  1885                           ; BSR set to: 2
  1886                           ;main.c: 177:                 reverse_after_read(pmL, pmR);
  1887   0047EA  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  1888   0047EE  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1889   0047F2  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  1890   0047F6  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1891   0047FA  EC42  F032         	call	_reverse_after_read	;wreg free
  1892                           
  1893                           ;main.c: 178:                 turn_right_90(pmL, pmR);
  1894   0047FE  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  1895   004802  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1896   004806  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  1897   00480A  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1898   00480E  ECB5  F034         	call	_turn_right_90	;wreg free
  1899                           
  1900                           ;main.c: 179:                 turn_right_90(pmL, pmR);
  1901   004812  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  1902   004816  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1903   00481A  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  1904   00481E  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1905   004822  ECB5  F034         	call	_turn_right_90	;wreg free
  1906                           
  1907                           ;main.c: 180:             }
  1908   004826  EFE0  F024         	goto	l7734
  1909   00482A                     l7710:
  1910                           
  1911                           ; BSR set to: 2
  1912   00482A  0E03               	movlw	3
  1913   00482C  19C0               	xorwf	main@action_to_do& (0+255),w,b
  1914   00482E  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1915   004830  A4D8               	btfss	status,2,c
  1916   004832  EF1D  F024         	goto	u7911
  1917   004836  EF1F  F024         	goto	u7910
  1918   00483A                     u7911:
  1919   00483A  EF3F  F024         	goto	l7714
  1920   00483E                     u7910:
  1921   00483E                     
  1922                           ; BSR set to: 2
  1923                           ;main.c: 182:                 reverse_after_read(pmL, pmR);
  1924   00483E  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  1925   004842  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1926   004846  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  1927   00484A  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1928   00484E  EC42  F032         	call	_reverse_after_read	;wreg free
  1929                           
  1930                           ;main.c: 183:                 reverse_one_square(pmL, pmR);
  1931   004852  C2C2  F019         	movff	main@pmL,reverse_one_square@mL
  1932   004856  C2C3  F01A         	movff	main@pmL+1,reverse_one_square@mL+1
  1933   00485A  C2C4  F01B         	movff	main@pmR,reverse_one_square@mR
  1934   00485E  C2C5  F01C         	movff	main@pmR+1,reverse_one_square@mR+1
  1935   004862  ECC5  F032         	call	_reverse_one_square	;wreg free
  1936                           
  1937                           ;main.c: 184:                 turn_right_90(pmL, pmR);
  1938   004866  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  1939   00486A  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  1940   00486E  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  1941   004872  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  1942   004876  ECB5  F034         	call	_turn_right_90	;wreg free
  1943                           
  1944                           ;main.c: 185:             }
  1945   00487A  EFE0  F024         	goto	l7734
  1946   00487E                     l7714:
  1947                           
  1948                           ; BSR set to: 2
  1949   00487E  0E04               	movlw	4
  1950   004880  19C0               	xorwf	main@action_to_do& (0+255),w,b
  1951   004882  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1952   004884  A4D8               	btfss	status,2,c
  1953   004886  EF47  F024         	goto	u7921
  1954   00488A  EF49  F024         	goto	u7920
  1955   00488E                     u7921:
  1956   00488E  EF69  F024         	goto	l7718
  1957   004892                     u7920:
  1958   004892                     
  1959                           ; BSR set to: 2
  1960                           ;main.c: 187:                 reverse_after_read(pmL, pmR);
  1961   004892  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  1962   004896  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  1963   00489A  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  1964   00489E  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  1965   0048A2  EC42  F032         	call	_reverse_after_read	;wreg free
  1966                           
  1967                           ;main.c: 188:                 reverse_one_square(pmL, pmR);
  1968   0048A6  C2C2  F019         	movff	main@pmL,reverse_one_square@mL
  1969   0048AA  C2C3  F01A         	movff	main@pmL+1,reverse_one_square@mL+1
  1970   0048AE  C2C4  F01B         	movff	main@pmR,reverse_one_square@mR
  1971   0048B2  C2C5  F01C         	movff	main@pmR+1,reverse_one_square@mR+1
  1972   0048B6  ECC5  F032         	call	_reverse_one_square	;wreg free
  1973                           
  1974                           ;main.c: 189:                 turn_left_90(pmL, pmR);
  1975   0048BA  C2C2  F019         	movff	main@pmL,turn_left_90@mL
  1976   0048BE  C2C3  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  1977   0048C2  C2C4  F01B         	movff	main@pmR,turn_left_90@mR
  1978   0048C6  C2C5  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  1979   0048CA  EC2A  F035         	call	_turn_left_90	;wreg free
  1980                           
  1981                           ;main.c: 190:             }
  1982   0048CE  EFE0  F024         	goto	l7734
  1983   0048D2                     l7718:
  1984                           
  1985                           ; BSR set to: 2
  1986   0048D2  0E05               	movlw	5
  1987   0048D4  19C0               	xorwf	main@action_to_do& (0+255),w,b
  1988   0048D6  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  1989   0048D8  A4D8               	btfss	status,2,c
  1990   0048DA  EF71  F024         	goto	u7931
  1991   0048DE  EF73  F024         	goto	u7930
  1992   0048E2                     u7931:
  1993   0048E2  EF89  F024         	goto	l7722
  1994   0048E6                     u7930:
  1995   0048E6                     
  1996                           ; BSR set to: 2
  1997                           ;main.c: 192:                 reverse_after_read(pmL, pmR);
  1998   0048E6  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  1999   0048EA  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2000   0048EE  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  2001   0048F2  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2002   0048F6  EC42  F032         	call	_reverse_after_read	;wreg free
  2003                           
  2004                           ;main.c: 193:                 turn_left_135(pmL, pmR);
  2005   0048FA  C2C2  F019         	movff	main@pmL,turn_left_135@mL
  2006   0048FE  C2C3  F01A         	movff	main@pmL+1,turn_left_135@mL+1
  2007   004902  C2C4  F01B         	movff	main@pmR,turn_left_135@mR
  2008   004906  C2C5  F01C         	movff	main@pmR+1,turn_left_135@mR+1
  2009   00490A  EC3F  F034         	call	_turn_left_135	;wreg free
  2010                           
  2011                           ;main.c: 194:             }
  2012   00490E  EFE0  F024         	goto	l7734
  2013   004912                     l7722:
  2014                           
  2015                           ; BSR set to: 2
  2016   004912  0E06               	movlw	6
  2017   004914  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2018   004916  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2019   004918  A4D8               	btfss	status,2,c
  2020   00491A  EF91  F024         	goto	u7941
  2021   00491E  EF93  F024         	goto	u7940
  2022   004922                     u7941:
  2023   004922  EFA9  F024         	goto	l7726
  2024   004926                     u7940:
  2025   004926                     
  2026                           ; BSR set to: 2
  2027                           ;main.c: 196:                 reverse_after_read(pmL, pmR);
  2028   004926  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  2029   00492A  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2030   00492E  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  2031   004932  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2032   004936  EC42  F032         	call	_reverse_after_read	;wreg free
  2033                           
  2034                           ;main.c: 197:                 turn_right_135(pmL, pmR);
  2035   00493A  C2C2  F019         	movff	main@pmL,turn_right_135@mL
  2036   00493E  C2C3  F01A         	movff	main@pmL+1,turn_right_135@mL+1
  2037   004942  C2C4  F01B         	movff	main@pmR,turn_right_135@mR
  2038   004946  C2C5  F01C         	movff	main@pmR+1,turn_right_135@mR+1
  2039   00494A  ECC9  F033         	call	_turn_right_135	;wreg free
  2040                           
  2041                           ;main.c: 198:             }
  2042   00494E  EFE0  F024         	goto	l7734
  2043   004952                     l7726:
  2044                           
  2045                           ; BSR set to: 2
  2046   004952  0E07               	movlw	7
  2047   004954  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2048   004956  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2049   004958  A4D8               	btfss	status,2,c
  2050   00495A  EFB1  F024         	goto	u7951
  2051   00495E  EFB3  F024         	goto	u7950
  2052   004962                     u7951:
  2053   004962  EFE0  F024         	goto	l369
  2054   004966                     u7950:
  2055   004966                     
  2056                           ; BSR set to: 2
  2057                           ;main.c: 202:                 reverse_after_read(pmL, pmR);
  2058   004966  C2C2  F019         	movff	main@pmL,reverse_after_read@mL
  2059   00496A  C2C3  F01A         	movff	main@pmL+1,reverse_after_read@mL+1
  2060   00496E  C2C4  F01B         	movff	main@pmR,reverse_after_read@mR
  2061   004972  C2C5  F01C         	movff	main@pmR+1,reverse_after_read@mR+1
  2062   004976  EC42  F032         	call	_reverse_after_read	;wreg free
  2063                           
  2064                           ;main.c: 203:                 turn_right_90(pmL, pmR);
  2065   00497A  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  2066   00497E  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2067   004982  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  2068   004986  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2069   00498A  ECB5  F034         	call	_turn_right_90	;wreg free
  2070   00498E                     
  2071                           ;main.c: 204:                 _delay((unsigned long)((250)*(64000000/4000.0)));
  2072   00498E  0E15               	movlw	21
  2073   004990  0100               	movlb	0	; () banked
  2074   004992  6FD2               	movwf	(??_main+1)& (0+255),b
  2075   004994  0E4B               	movlw	75
  2076   004996  6FD1               	movwf	??_main& (0+255),b
  2077   004998  0EBE               	movlw	190
  2078   00499A                     u8137:
  2079   00499A  2EE8               	decfsz	wreg,f,c
  2080   00499C  D7FE               	bra	u8137
  2081   00499E  2FD1               	decfsz	??_main& (0+255),f,b
  2082   0049A0  D7FC               	bra	u8137
  2083   0049A2  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  2084   0049A4  D7FA               	bra	u8137
  2085   0049A6  0000               	nop	
  2086   0049A8                     
  2087                           ;main.c: 205:                 turn_right_90(pmL, pmR);
  2088   0049A8  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  2089   0049AC  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2090   0049B0  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  2091   0049B4  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2092   0049B8  ECB5  F034         	call	_turn_right_90	;wreg free
  2093                           
  2094                           ;main.c: 206:                 break;
  2095   0049BC  EFF8  F024         	goto	l7736
  2096   0049C0                     l369:
  2097   0049C0                     l7734:
  2098                           
  2099                           ;main.c: 208:             _delay((unsigned long)((250)*(64000000/4000.0)));
  2100   0049C0  0E15               	movlw	21
  2101   0049C2  0100               	movlb	0	; () banked
  2102   0049C4  6FD2               	movwf	(??_main+1)& (0+255),b
  2103   0049C6  0E4B               	movlw	75
  2104   0049C8  6FD1               	movwf	??_main& (0+255),b
  2105   0049CA  0EBE               	movlw	190
  2106   0049CC                     u8147:
  2107   0049CC  2EE8               	decfsz	wreg,f,c
  2108   0049CE  D7FE               	bra	u8147
  2109   0049D0  2FD1               	decfsz	??_main& (0+255),f,b
  2110   0049D2  D7FC               	bra	u8147
  2111   0049D4  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  2112   0049D6  D7FA               	bra	u8147
  2113   0049D8  0000               	nop	
  2114                           
  2115                           ;main.c: 209:         _delay((unsigned long)((5)*(64000000/4000.0)));
  2116   0049DA  0E68               	movlw	104
  2117   0049DC  0100               	movlb	0	; () banked
  2118   0049DE  6FD1               	movwf	??_main& (0+255),b
  2119   0049E0  0EE4               	movlw	228
  2120   0049E2                     u8157:
  2121   0049E2  2EE8               	decfsz	wreg,f,c
  2122   0049E4  D7FE               	bra	u8157
  2123   0049E6  2FD1               	decfsz	??_main& (0+255),f,b
  2124   0049E8  D7FC               	bra	u8157
  2125   0049EA  0000               	nop	
  2126   0049EC  EFF6  F022         	goto	l7652
  2127   0049F0                     l7736:
  2128                           
  2129                           ;main.c: 217:     actions_completed -= 1;
  2130   0049F0  0102               	movlb	2	; () banked
  2131   0049F2  07AC               	decf	main@actions_completed& (0+255),f,b
  2132   0049F4  A0D8               	btfss	status,0,c
  2133   0049F6  07AD               	decf	(main@actions_completed+1)& (0+255),f,b
  2134   0049F8                     
  2135                           ; BSR set to: 2
  2136                           ;main.c: 220:     going_forward = 0;
  2137   0049F8  0E00               	movlw	0
  2138   0049FA  6FAA               	movwf	main@going_forward& (0+255),b
  2139   0049FC                     
  2140                           ; BSR set to: 2
  2141                           ;main.c: 223:     for(char i = 0; i < 20; i +=1){
  2142   0049FC  0E00               	movlw	0
  2143   0049FE  6FAB               	movwf	main@i& (0+255),b
  2144   004A00                     l7742:
  2145                           
  2146                           ; BSR set to: 2
  2147   004A00  0E13               	movlw	19
  2148   004A02  65AB               	cpfsgt	main@i& (0+255),b
  2149   004A04  EF06  F025         	goto	u7961
  2150   004A08  EF08  F025         	goto	u7960
  2151   004A0C                     u7961:
  2152   004A0C  EF0A  F025         	goto	l7746
  2153   004A10                     u7960:
  2154   004A10  EF46  F026         	goto	l7816
  2155   004A14                     l7746:
  2156                           
  2157                           ; BSR set to: 2
  2158                           ;main.c: 224:         timings[i] -= 135;
  2159   004A14  51AB               	movf	main@i& (0+255),w,b
  2160   004A16  0D02               	mullw	2
  2161   004A18  0E78               	movlw	low main@timings
  2162   004A1A  24F3               	addwf	243,w,c
  2163   004A1C  6ED9               	movwf	fsr2l,c
  2164   004A1E  0E02               	movlw	high main@timings
  2165   004A20  20F4               	addwfc	prodh,w,c
  2166   004A22  6EDA               	movwf	fsr2h,c
  2167   004A24  0E87               	movlw	135
  2168   004A26  5EDE               	subwf	postinc2,f,c
  2169   004A28  0E00               	movlw	0
  2170   004A2A  5ADD               	subwfb	postdec2,f,c
  2171   004A2C                     
  2172                           ; BSR set to: 2
  2173                           ;main.c: 225:         if(i > 7){
  2174   004A2C  0E07               	movlw	7
  2175   004A2E  65AB               	cpfsgt	main@i& (0+255),b
  2176   004A30  EF1C  F025         	goto	u7971
  2177   004A34  EF1E  F025         	goto	u7970
  2178   004A38                     u7971:
  2179   004A38  EF2A  F025         	goto	l7752
  2180   004A3C                     u7970:
  2181   004A3C                     
  2182                           ; BSR set to: 2
  2183                           ;main.c: 226:               timings[i] -= 280;
  2184   004A3C  51AB               	movf	main@i& (0+255),w,b
  2185   004A3E  0D02               	mullw	2
  2186   004A40  0E78               	movlw	low main@timings
  2187   004A42  24F3               	addwf	243,w,c
  2188   004A44  6ED9               	movwf	fsr2l,c
  2189   004A46  0E02               	movlw	high main@timings
  2190   004A48  20F4               	addwfc	prodh,w,c
  2191   004A4A  6EDA               	movwf	fsr2h,c
  2192   004A4C  0E18               	movlw	24
  2193   004A4E  5EDE               	subwf	postinc2,f,c
  2194   004A50  0E01               	movlw	1
  2195   004A52  5ADD               	subwfb	postdec2,f,c
  2196   004A54                     l7752:
  2197                           
  2198                           ; BSR set to: 2
  2199                           ;main.c: 228:     }
  2200   004A54  2BAB               	incf	main@i& (0+255),f,b
  2201   004A56  EF00  F025         	goto	l7742
  2202   004A5A                     l7756:
  2203                           
  2204                           ; BSR set to: 2
  2205                           ;main.c: 233:         if(!going_forward){
  2206   004A5A  51AA               	movf	main@going_forward& (0+255),w,b
  2207   004A5C  A4D8               	btfss	status,2,c
  2208   004A5E  EF33  F025         	goto	u7981
  2209   004A62  EF35  F025         	goto	u7980
  2210   004A66                     u7981:
  2211   004A66  EF44  F025         	goto	l7764
  2212   004A6A                     u7980:
  2213   004A6A                     
  2214                           ; BSR set to: 2
  2215                           ;main.c: 234:             resetTimer0();
  2216   004A6A  EC3B  F03B         	call	_resetTimer0	;wreg free
  2217   004A6E                     
  2218                           ;main.c: 235:             fullSpeedAhead(pmL, pmR);
  2219   004A6E  C2C2  F015         	movff	main@pmL,fullSpeedAhead@mL
  2220   004A72  C2C3  F016         	movff	main@pmL+1,fullSpeedAhead@mL+1
  2221   004A76  C2C4  F017         	movff	main@pmR,fullSpeedAhead@mR
  2222   004A7A  C2C5  F018         	movff	main@pmR+1,fullSpeedAhead@mR+1
  2223   004A7E  EC76  F036         	call	_fullSpeedAhead	;wreg free
  2224   004A82                     
  2225                           ;main.c: 236:             going_forward = 1;
  2226   004A82  0E01               	movlw	1
  2227   004A84  0102               	movlb	2	; () banked
  2228   004A86  6FAA               	movwf	main@going_forward& (0+255),b
  2229   004A88                     l7764:
  2230                           
  2231                           ; BSR set to: 2
  2232                           ;main.c: 239:         measured_time = get16bitTMR0val();
  2233   004A88  ECFB  F03A         	call	_get16bitTMR0val	;wreg free
  2234   004A8C  C002  F2A6         	movff	?_get16bitTMR0val,main@measured_time
  2235   004A90  C003  F2A7         	movff	?_get16bitTMR0val+1,main@measured_time+1
  2236   004A94                     
  2237                           ;main.c: 240:         if(measured_time > timings[actions_completed]){
  2238   004A94  90D8               	bcf	status,0,c
  2239   004A96  0102               	movlb	2	; () banked
  2240   004A98  35AC               	rlcf	main@actions_completed& (0+255),w,b
  2241   004A9A  6ED9               	movwf	fsr2l,c
  2242   004A9C  35AD               	rlcf	(main@actions_completed+1)& (0+255),w,b
  2243   004A9E  6EDA               	movwf	fsr2h,c
  2244   004AA0  0E78               	movlw	low main@timings
  2245   004AA2  26D9               	addwf	fsr2l,f,c
  2246   004AA4  0E02               	movlw	high main@timings
  2247   004AA6  22DA               	addwfc	fsr2h,f,c
  2248   004AA8  51A6               	movf	main@measured_time& (0+255),w,b
  2249   004AAA  5CDE               	subwf	postinc2,w,c
  2250   004AAC  51A7               	movf	(main@measured_time+1)& (0+255),w,b
  2251   004AAE  58DE               	subwfb	postinc2,w,c
  2252   004AB0  B0D8               	btfsc	status,0,c
  2253   004AB2  EF5D  F025         	goto	u7991
  2254   004AB6  EF5F  F025         	goto	u7990
  2255   004ABA                     u7991:
  2256   004ABA  EF3D  F026         	goto	l7814
  2257   004ABE                     u7990:
  2258   004ABE                     
  2259                           ; BSR set to: 2
  2260                           ;main.c: 241:             stop(pmL, pmR);
  2261   004ABE  C2C2  F015         	movff	main@pmL,stop@mL
  2262   004AC2  C2C3  F016         	movff	main@pmL+1,stop@mL+1
  2263   004AC6  C2C4  F017         	movff	main@pmR,stop@mR
  2264   004ACA  C2C5  F018         	movff	main@pmR+1,stop@mR+1
  2265   004ACE  ECDA  F037         	call	_stop	;wreg free
  2266   004AD2                     
  2267                           ;main.c: 242:             going_forward = 0;
  2268   004AD2  0E00               	movlw	0
  2269   004AD4  0102               	movlb	2	; () banked
  2270   004AD6  6FAA               	movwf	main@going_forward& (0+255),b
  2271   004AD8                     
  2272                           ; BSR set to: 2
  2273                           ;main.c: 243:             action_to_do = invert_action(actions[actions_completed - 1]);
  2274   004AD8  C2AC  F0D1         	movff	main@actions_completed,??_main
  2275   004ADC  C2AD  F0D2         	movff	main@actions_completed+1,??_main+1
  2276   004AE0  90D8               	bcf	status,0,c
  2277   004AE2  0100               	movlb	0	; () banked
  2278   004AE4  37D1               	rlcf	??_main& (0+255),f,b
  2279   004AE6  37D2               	rlcf	(??_main+1)& (0+255),f,b
  2280   004AE8  0EFE               	movlw	254
  2281   004AEA  25D1               	addwf	??_main& (0+255),w,b
  2282   004AEC  6FD3               	movwf	(??_main+2)& (0+255),b
  2283   004AEE  0EFF               	movlw	255
  2284   004AF0  21D2               	addwfc	(??_main+1)& (0+255),w,b
  2285   004AF2  6FD4               	movwf	(??_main+3)& (0+255),b
  2286   004AF4  0E50               	movlw	low main@actions
  2287   004AF6  25D3               	addwf	(??_main+2)& (0+255),w,b
  2288   004AF8  6ED9               	movwf	fsr2l,c
  2289   004AFA  0E02               	movlw	high main@actions
  2290   004AFC  21D4               	addwfc	(??_main+3)& (0+255),w,b
  2291   004AFE  6EDA               	movwf	fsr2h,c
  2292   004B00  50DF               	movf	indf2,w,c
  2293   004B02  EC27  F038         	call	_invert_action
  2294   004B06  0100               	movlb	0	; () banked
  2295   004B08  6FD5               	movwf	(??_main+4)& (0+255),b
  2296   004B0A  51D5               	movf	(??_main+4)& (0+255),w,b
  2297   004B0C  0102               	movlb	2	; () banked
  2298   004B0E  6FC0               	movwf	main@action_to_do& (0+255),b
  2299   004B10  6BC1               	clrf	(main@action_to_do+1)& (0+255),b
  2300   004B12                     
  2301                           ; BSR set to: 2
  2302                           ;main.c: 245:             if(action_to_do == 0){
  2303   004B12  51C0               	movf	main@action_to_do& (0+255),w,b
  2304   004B14  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2305   004B16  A4D8               	btfss	status,2,c
  2306   004B18  EF90  F025         	goto	u8001
  2307   004B1C  EF92  F025         	goto	u8000
  2308   004B20                     u8001:
  2309   004B20  EF9E  F025         	goto	l7778
  2310   004B24                     u8000:
  2311   004B24                     l7776:
  2312                           
  2313                           ;main.c: 246:                 turn_right_90(pmL, pmR);
  2314   004B24  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  2315   004B28  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2316   004B2C  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  2317   004B30  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2318   004B34  ECB5  F034         	call	_turn_right_90	;wreg free
  2319                           
  2320                           ;main.c: 247:             }
  2321   004B38  EF1A  F026         	goto	l7806
  2322   004B3C                     l7778:
  2323                           
  2324                           ; BSR set to: 2
  2325   004B3C  05C0               	decf	main@action_to_do& (0+255),w,b
  2326   004B3E  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2327   004B40  A4D8               	btfss	status,2,c
  2328   004B42  EFA5  F025         	goto	u8011
  2329   004B46  EFA7  F025         	goto	u8010
  2330   004B4A                     u8011:
  2331   004B4A  EFB3  F025         	goto	l7782
  2332   004B4E                     u8010:
  2333   004B4E                     l7780:
  2334                           
  2335                           ; BSR set to: 2
  2336                           ;main.c: 249:                 turn_left_90(pmL, pmR);
  2337   004B4E  C2C2  F019         	movff	main@pmL,turn_left_90@mL
  2338   004B52  C2C3  F01A         	movff	main@pmL+1,turn_left_90@mL+1
  2339   004B56  C2C4  F01B         	movff	main@pmR,turn_left_90@mR
  2340   004B5A  C2C5  F01C         	movff	main@pmR+1,turn_left_90@mR+1
  2341   004B5E  EC2A  F035         	call	_turn_left_90	;wreg free
  2342                           
  2343                           ;main.c: 250:             }
  2344   004B62  EF1A  F026         	goto	l7806
  2345   004B66                     l7782:
  2346                           
  2347                           ; BSR set to: 2
  2348   004B66  0E02               	movlw	2
  2349   004B68  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2350   004B6A  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2351   004B6C  A4D8               	btfss	status,2,c
  2352   004B6E  EFBB  F025         	goto	u8021
  2353   004B72  EFBD  F025         	goto	u8020
  2354   004B76                     u8021:
  2355   004B76  EFD6  F025         	goto	l7790
  2356   004B7A                     u8020:
  2357   004B7A                     
  2358                           ; BSR set to: 2
  2359                           ;main.c: 252:                 turn_right_90(pmL, pmR);
  2360   004B7A  C2C2  F019         	movff	main@pmL,turn_right_90@mL
  2361   004B7E  C2C3  F01A         	movff	main@pmL+1,turn_right_90@mL+1
  2362   004B82  C2C4  F01B         	movff	main@pmR,turn_right_90@mR
  2363   004B86  C2C5  F01C         	movff	main@pmR+1,turn_right_90@mR+1
  2364   004B8A  ECB5  F034         	call	_turn_right_90	;wreg free
  2365   004B8E                     
  2366                           ;main.c: 253:                 _delay((unsigned long)((250)*(64000000/4000.0)));
  2367   004B8E  0E15               	movlw	21
  2368   004B90  0100               	movlb	0	; () banked
  2369   004B92  6FD2               	movwf	(??_main+1)& (0+255),b
  2370   004B94  0E4B               	movlw	75
  2371   004B96  6FD1               	movwf	??_main& (0+255),b
  2372   004B98  0EBE               	movlw	190
  2373   004B9A                     u8167:
  2374   004B9A  2EE8               	decfsz	wreg,f,c
  2375   004B9C  D7FE               	bra	u8167
  2376   004B9E  2FD1               	decfsz	??_main& (0+255),f,b
  2377   004BA0  D7FC               	bra	u8167
  2378   004BA2  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  2379   004BA4  D7FA               	bra	u8167
  2380   004BA6  0000               	nop	
  2381   004BA8  EF92  F025         	goto	l7776
  2382   004BAC                     l7790:
  2383                           
  2384                           ; BSR set to: 2
  2385   004BAC  0E05               	movlw	5
  2386   004BAE  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2387   004BB0  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2388   004BB2  A4D8               	btfss	status,2,c
  2389   004BB4  EFDE  F025         	goto	u8031
  2390   004BB8  EFE0  F025         	goto	u8030
  2391   004BBC                     u8031:
  2392   004BBC  EFEC  F025         	goto	l7794
  2393   004BC0                     u8030:
  2394   004BC0                     
  2395                           ; BSR set to: 2
  2396                           ;main.c: 257:                 turn_right_135(pmL, pmR);
  2397   004BC0  C2C2  F019         	movff	main@pmL,turn_right_135@mL
  2398   004BC4  C2C3  F01A         	movff	main@pmL+1,turn_right_135@mL+1
  2399   004BC8  C2C4  F01B         	movff	main@pmR,turn_right_135@mR
  2400   004BCC  C2C5  F01C         	movff	main@pmR+1,turn_right_135@mR+1
  2401   004BD0  ECC9  F033         	call	_turn_right_135	;wreg free
  2402                           
  2403                           ;main.c: 258:             }
  2404   004BD4  EF1A  F026         	goto	l7806
  2405   004BD8                     l7794:
  2406                           
  2407                           ; BSR set to: 2
  2408   004BD8  0E06               	movlw	6
  2409   004BDA  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2410   004BDC  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2411   004BDE  A4D8               	btfss	status,2,c
  2412   004BE0  EFF4  F025         	goto	u8041
  2413   004BE4  EFF6  F025         	goto	u8040
  2414   004BE8                     u8041:
  2415   004BE8  EF02  F026         	goto	l7798
  2416   004BEC                     u8040:
  2417   004BEC                     
  2418                           ; BSR set to: 2
  2419                           ;main.c: 260:                 turn_left_135(pmL, pmR);
  2420   004BEC  C2C2  F019         	movff	main@pmL,turn_left_135@mL
  2421   004BF0  C2C3  F01A         	movff	main@pmL+1,turn_left_135@mL+1
  2422   004BF4  C2C4  F01B         	movff	main@pmR,turn_left_135@mR
  2423   004BF8  C2C5  F01C         	movff	main@pmR+1,turn_left_135@mR+1
  2424   004BFC  EC3F  F034         	call	_turn_left_135	;wreg free
  2425                           
  2426                           ;main.c: 261:             }
  2427   004C00  EF1A  F026         	goto	l7806
  2428   004C04                     l7798:
  2429                           
  2430                           ; BSR set to: 2
  2431   004C04  0E08               	movlw	8
  2432   004C06  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2433   004C08  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2434   004C0A  A4D8               	btfss	status,2,c
  2435   004C0C  EF0A  F026         	goto	u8051
  2436   004C10  EF0C  F026         	goto	u8050
  2437   004C14                     u8051:
  2438   004C14  EF0E  F026         	goto	l7802
  2439   004C18                     u8050:
  2440   004C18  EFA7  F025         	goto	l7780
  2441   004C1C                     l7802:
  2442                           
  2443                           ; BSR set to: 2
  2444   004C1C  0E09               	movlw	9
  2445   004C1E  19C0               	xorwf	main@action_to_do& (0+255),w,b
  2446   004C20  11C1               	iorwf	(main@action_to_do+1)& (0+255),w,b
  2447   004C22  A4D8               	btfss	status,2,c
  2448   004C24  EF16  F026         	goto	u8061
  2449   004C28  EF18  F026         	goto	u8060
  2450   004C2C                     u8061:
  2451   004C2C  EF1A  F026         	goto	l391
  2452   004C30                     u8060:
  2453   004C30  EF92  F025         	goto	l7776
  2454   004C34                     l391:
  2455   004C34                     l7806:
  2456                           
  2457                           ;main.c: 268:             _delay((unsigned long)((250)*(64000000/4000.0)));
  2458   004C34  0E15               	movlw	21
  2459   004C36  0100               	movlb	0	; () banked
  2460   004C38  6FD2               	movwf	(??_main+1)& (0+255),b
  2461   004C3A  0E4B               	movlw	75
  2462   004C3C  6FD1               	movwf	??_main& (0+255),b
  2463   004C3E  0EBE               	movlw	190
  2464   004C40                     u8177:
  2465   004C40  2EE8               	decfsz	wreg,f,c
  2466   004C42  D7FE               	bra	u8177
  2467   004C44  2FD1               	decfsz	??_main& (0+255),f,b
  2468   004C46  D7FC               	bra	u8177
  2469   004C48  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  2470   004C4A  D7FA               	bra	u8177
  2471   004C4C  0000               	nop	
  2472   004C4E                     
  2473                           ;main.c: 270:             sprintf(clear_val,"action = %d \r\n",action_to_do);
  2474   004C4E  0E3C               	movlw	low main@clear_val
  2475   004C50  6E1B               	movwf	sprintf@s^0,c
  2476   004C52  0E02               	movlw	high main@clear_val
  2477   004C54  6E1C               	movwf	(sprintf@s+1)^0,c
  2478   004C56  0E71               	movlw	low STR_1
  2479   004C58  6E1D               	movwf	sprintf@fmt^0,c
  2480   004C5A  C2C0  F01E         	movff	main@action_to_do,?_sprintf+3
  2481   004C5E  C2C1  F01F         	movff	main@action_to_do+1,?_sprintf+4
  2482   004C62  EC08  F03A         	call	_sprintf	;wreg free
  2483   004C66                     
  2484                           ;main.c: 271:             sendStringSerial4(pclear_val);
  2485   004C66  C2A0  F003         	movff	main@pclear_val,sendStringSerial4@string
  2486   004C6A  C2A1  F004         	movff	main@pclear_val+1,sendStringSerial4@string+1
  2487   004C6E  EC78  F03A         	call	_sendStringSerial4	;wreg free
  2488   004C72                     
  2489                           ;main.c: 272:         actions_completed -=1 ;
  2490   004C72  0102               	movlb	2	; () banked
  2491   004C74  07AC               	decf	main@actions_completed& (0+255),f,b
  2492   004C76  A0D8               	btfss	status,0,c
  2493   004C78  07AD               	decf	(main@actions_completed+1)& (0+255),f,b
  2494   004C7A                     l7814:
  2495                           
  2496                           ; BSR set to: 2
  2497                           ;main.c: 274:     _delay((unsigned long)((10)*(64000000/4000.0)));
  2498   004C7A  0ED0               	movlw	208
  2499   004C7C  0100               	movlb	0	; () banked
  2500   004C7E  6FD1               	movwf	??_main& (0+255),b
  2501   004C80  0EC9               	movlw	201
  2502   004C82                     u8187:
  2503   004C82  2EE8               	decfsz	wreg,f,c
  2504   004C84  D7FE               	bra	u8187
  2505   004C86  2FD1               	decfsz	??_main& (0+255),f,b
  2506   004C88  D7FC               	bra	u8187
  2507   004C8A  D000               	nop2	
  2508   004C8C                     l7816:
  2509                           
  2510                           ;main.c: 232:     while(actions_completed >= 0){
  2511   004C8C  0102               	movlb	2	; () banked
  2512   004C8E  BFAD               	btfsc	(main@actions_completed+1)& (0+255),7,b
  2513   004C90  EF4E  F026         	goto	u8070
  2514   004C94  EF4C  F026         	goto	u8071
  2515   004C98                     u8071:
  2516   004C98  EF2D  F025         	goto	l7756
  2517   004C9C                     u8070:
  2518   004C9C                     
  2519                           ; BSR set to: 2
  2520                           ;main.c: 276:     stop(pmL, pmR);
  2521   004C9C  C2C2  F015         	movff	main@pmL,stop@mL
  2522   004CA0  C2C3  F016         	movff	main@pmL+1,stop@mL+1
  2523   004CA4  C2C4  F017         	movff	main@pmR,stop@mR
  2524   004CA8  C2C5  F018         	movff	main@pmR+1,stop@mR+1
  2525   004CAC  ECDA  F037         	call	_stop	;wreg free
  2526   004CB0                     l7820:
  2527                           
  2528                           ;main.c: 278:         LATHbits.LATH3 = !LATHbits.LATH3;
  2529   004CB0  A680               	btfss	128,3,c	;volatile
  2530   004CB2  EF5D  F026         	goto	u8081
  2531   004CB6  EF62  F026         	goto	u8080
  2532   004CBA                     u8081:
  2533   004CBA  0100               	movlb	0	; () banked
  2534   004CBC  6BD1               	clrf	??_main& (0+255),b
  2535   004CBE  2BD1               	incf	??_main& (0+255),f,b
  2536   004CC0  EF64  F026         	goto	u8098
  2537   004CC4                     u8080:
  2538   004CC4  0100               	movlb	0	; () banked
  2539   004CC6  6BD1               	clrf	??_main& (0+255),b
  2540   004CC8                     u8098:
  2541   004CC8  47D1               	rlncf	??_main& (0+255),f,b
  2542   004CCA  47D1               	rlncf	??_main& (0+255),f,b
  2543   004CCC  47D1               	rlncf	??_main& (0+255),f,b
  2544   004CCE  5080               	movf	128,w,c	;volatile
  2545   004CD0  19D1               	xorwf	??_main& (0+255),w,b
  2546   004CD2  0BF7               	andlw	-9
  2547   004CD4  19D1               	xorwf	??_main& (0+255),w,b
  2548   004CD6  6E80               	movwf	128,c	;volatile
  2549   004CD8                     
  2550                           ; BSR set to: 0
  2551                           ;main.c: 279:         _delay((unsigned long)((500)*(64000000/4000.0)));
  2552   004CD8  0E29               	movlw	41
  2553   004CDA  0100               	movlb	0	; () banked
  2554   004CDC  6FD2               	movwf	(??_main+1)& (0+255),b
  2555   004CDE  0E96               	movlw	150
  2556   004CE0  6FD1               	movwf	??_main& (0+255),b
  2557   004CE2  0E7F               	movlw	127
  2558   004CE4                     u8197:
  2559   004CE4  2EE8               	decfsz	wreg,f,c
  2560   004CE6  D7FE               	bra	u8197
  2561   004CE8  2FD1               	decfsz	??_main& (0+255),f,b
  2562   004CEA  D7FC               	bra	u8197
  2563   004CEC  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  2564   004CEE  D7FA               	bra	u8197
  2565   004CF0  EF58  F026         	goto	l7820
  2566   004CF4  EF12  F000         	goto	start
  2567   004CF8                     __end_of_main:
  2568                           	callstack 0
  2569                           
  2570 ;; *************** function _turn_right_90 *****************
  2571 ;; Defined at:
  2572 ;;		line 143 in file "dc_motor.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2575 ;;		 -> main@motorL(9), 
  2576 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2577 ;;		 -> main@motorR(9), 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2589 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2591 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;Total ram usage:        6 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 5
  2596 ;; This function calls:
  2597 ;;		_setMotorPWM
  2598 ;;		_stop
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text1
  2605   00696A                     __ptext1:
  2606                           	callstack 0
  2607   00696A                     _turn_right_90:
  2608                           	callstack 25
  2609   00696A                     
  2610                           ;dc_motor.c: 144:     mL->direction = 0;
  2611   00696A  EE20 F001          	lfsr	2,1
  2612   00696E  5019               	movf	turn_right_90@mL^0,w,c
  2613   006970  26D9               	addwf	fsr2l,f,c
  2614   006972  501A               	movf	(turn_right_90@mL+1)^0,w,c
  2615   006974  22DA               	addwfc	fsr2h,f,c
  2616   006976  6ADF               	clrf	indf2,c
  2617                           
  2618                           ;dc_motor.c: 145:     mR->direction = 1;
  2619   006978  EE20 F001          	lfsr	2,1
  2620   00697C  501B               	movf	turn_right_90@mR^0,w,c
  2621   00697E  26D9               	addwf	fsr2l,f,c
  2622   006980  501C               	movf	(turn_right_90@mR+1)^0,w,c
  2623   006982  22DA               	addwfc	fsr2h,f,c
  2624   006984  0E01               	movlw	1
  2625   006986  6EDF               	movwf	indf2,c
  2626                           
  2627                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2628   006988  EFFC  F034         	goto	l222
  2629   00698C                     l5304:
  2630                           
  2631                           ;dc_motor.c: 148:         if ((mL->power) < 70) (mL->power) += 1;
  2632   00698C  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2633   006990  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2634   006994  0E46               	movlw	70
  2635   006996  60DF               	cpfslt	indf2,c
  2636   006998  EFD0  F034         	goto	u5391
  2637   00699C  EFD2  F034         	goto	u5390
  2638   0069A0                     u5391:
  2639   0069A0  EFD7  F034         	goto	l5308
  2640   0069A4                     u5390:
  2641   0069A4  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2642   0069A8  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2643   0069AC  2ADF               	incf	indf2,f,c
  2644   0069AE                     l5308:
  2645                           
  2646                           ;dc_motor.c: 149:         if ((mR->power) < 70) (mR->power) += 1;
  2647   0069AE  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2648   0069B2  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2649   0069B6  0E46               	movlw	70
  2650   0069B8  60DF               	cpfslt	indf2,c
  2651   0069BA  EFE1  F034         	goto	u5401
  2652   0069BE  EFE3  F034         	goto	u5400
  2653   0069C2                     u5401:
  2654   0069C2  EFE8  F034         	goto	l5312
  2655   0069C6                     u5400:
  2656   0069C6  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2657   0069CA  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2658   0069CE  2ADF               	incf	indf2,f,c
  2659   0069D0                     l5312:
  2660                           
  2661                           ;dc_motor.c: 151:         setMotorPWM(mL);
  2662   0069D0  C019  F00F         	movff	turn_right_90@mL,setMotorPWM@m
  2663   0069D4  C01A  F010         	movff	turn_right_90@mL+1,setMotorPWM@m+1
  2664   0069D8  EC8C  F031         	call	_setMotorPWM	;wreg free
  2665   0069DC                     
  2666                           ;dc_motor.c: 152:         setMotorPWM(mR);
  2667   0069DC  C01B  F00F         	movff	turn_right_90@mR,setMotorPWM@m
  2668   0069E0  C01C  F010         	movff	turn_right_90@mR+1,setMotorPWM@m+1
  2669   0069E4  EC8C  F031         	call	_setMotorPWM	;wreg free
  2670   0069E8                     
  2671                           ;dc_motor.c: 153:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2672   0069E8  0E15               	movlw	21
  2673   0069EA  6E1D               	movwf	??_turn_right_90^0,c
  2674   0069EC  0EC6               	movlw	198
  2675   0069EE                     u8207:
  2676   0069EE  2EE8               	decfsz	wreg,f,c
  2677   0069F0  D7FE               	bra	u8207
  2678   0069F2  2E1D               	decfsz	??_turn_right_90^0,f,c
  2679   0069F4  D7FC               	bra	u8207
  2680   0069F6  D000               	nop2	
  2681   0069F8                     l222:
  2682                           
  2683                           ;dc_motor.c: 147:     while ((mL->power) < 70 || (mR->power) < 70){
  2684   0069F8  C019  FFD9         	movff	turn_right_90@mL,fsr2l
  2685   0069FC  C01A  FFDA         	movff	turn_right_90@mL+1,fsr2h
  2686   006A00  0E45               	movlw	69
  2687   006A02  64DF               	cpfsgt	indf2,c
  2688   006A04  EF06  F035         	goto	u5411
  2689   006A08  EF08  F035         	goto	u5410
  2690   006A0C                     u5411:
  2691   006A0C  EFC6  F034         	goto	l5304
  2692   006A10                     u5410:
  2693   006A10  C01B  FFD9         	movff	turn_right_90@mR,fsr2l
  2694   006A14  C01C  FFDA         	movff	turn_right_90@mR+1,fsr2h
  2695   006A18  0E45               	movlw	69
  2696   006A1A  64DF               	cpfsgt	indf2,c
  2697   006A1C  EF12  F035         	goto	u5421
  2698   006A20  EF14  F035         	goto	u5420
  2699   006A24                     u5421:
  2700   006A24  EFC6  F034         	goto	l5304
  2701   006A28                     u5420:
  2702   006A28                     
  2703                           ;dc_motor.c: 155:     _delay((unsigned long)((450)*(64000000/4000.0)));
  2704   006A28  0E25               	movlw	37
  2705   006A2A  6E1E               	movwf	(??_turn_right_90+1)^0,c
  2706   006A2C  0E87               	movlw	135
  2707   006A2E  6E1D               	movwf	??_turn_right_90^0,c
  2708   006A30  0E8C               	movlw	140
  2709   006A32                     u8217:
  2710   006A32  2EE8               	decfsz	wreg,f,c
  2711   006A34  D7FE               	bra	u8217
  2712   006A36  2E1D               	decfsz	??_turn_right_90^0,f,c
  2713   006A38  D7FC               	bra	u8217
  2714   006A3A  2E1E               	decfsz	(??_turn_right_90+1)^0,f,c
  2715   006A3C  D7FA               	bra	u8217
  2716   006A3E                     
  2717                           ;dc_motor.c: 156:     stop(mL, mR);
  2718   006A3E  C019  F015         	movff	turn_right_90@mL,stop@mL
  2719   006A42  C01A  F016         	movff	turn_right_90@mL+1,stop@mL+1
  2720   006A46  C01B  F017         	movff	turn_right_90@mR,stop@mR
  2721   006A4A  C01C  F018         	movff	turn_right_90@mR+1,stop@mR+1
  2722   006A4E  ECDA  F037         	call	_stop	;wreg free
  2723   006A52  0012               	return		;funcret
  2724   006A54                     __end_of_turn_right_90:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _turn_right_135 *****************
  2728 ;; Defined at:
  2729 ;;		line 177 in file "dc_motor.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2732 ;;		 -> main@motorL(9), 
  2733 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2734 ;;		 -> main@motorR(9), 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;		None
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2746 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2748 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2749 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2750 ;;Total ram usage:        6 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; Hardware stack levels required when called: 5
  2753 ;; This function calls:
  2754 ;;		_setMotorPWM
  2755 ;;		_stop
  2756 ;; This function is called by:
  2757 ;;		_main
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text2
  2762   006792                     __ptext2:
  2763                           	callstack 0
  2764   006792                     _turn_right_135:
  2765                           	callstack 25
  2766   006792                     
  2767                           ;dc_motor.c: 178:     mL->direction = 0;
  2768   006792  EE20 F001          	lfsr	2,1
  2769   006796  5019               	movf	turn_right_135@mL^0,w,c
  2770   006798  26D9               	addwf	fsr2l,f,c
  2771   00679A  501A               	movf	(turn_right_135@mL+1)^0,w,c
  2772   00679C  22DA               	addwfc	fsr2h,f,c
  2773   00679E  6ADF               	clrf	indf2,c
  2774                           
  2775                           ;dc_motor.c: 179:     mR->direction = 1;
  2776   0067A0  EE20 F001          	lfsr	2,1
  2777   0067A4  501B               	movf	turn_right_135@mR^0,w,c
  2778   0067A6  26D9               	addwf	fsr2l,f,c
  2779   0067A8  501C               	movf	(turn_right_135@mR+1)^0,w,c
  2780   0067AA  22DA               	addwfc	fsr2h,f,c
  2781   0067AC  0E01               	movlw	1
  2782   0067AE  6EDF               	movwf	indf2,c
  2783                           
  2784                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2785   0067B0  EF10  F034         	goto	l238
  2786   0067B4                     l5348:
  2787                           
  2788                           ;dc_motor.c: 182:         if ((mL->power) < 70) (mL->power) += 1;
  2789   0067B4  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2790   0067B8  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2791   0067BC  0E46               	movlw	70
  2792   0067BE  60DF               	cpfslt	indf2,c
  2793   0067C0  EFE4  F033         	goto	u5471
  2794   0067C4  EFE6  F033         	goto	u5470
  2795   0067C8                     u5471:
  2796   0067C8  EFEB  F033         	goto	l5352
  2797   0067CC                     u5470:
  2798   0067CC  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2799   0067D0  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2800   0067D4  2ADF               	incf	indf2,f,c
  2801   0067D6                     l5352:
  2802                           
  2803                           ;dc_motor.c: 183:         if ((mR->power) < 70) (mR->power) += 1;
  2804   0067D6  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2805   0067DA  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2806   0067DE  0E46               	movlw	70
  2807   0067E0  60DF               	cpfslt	indf2,c
  2808   0067E2  EFF5  F033         	goto	u5481
  2809   0067E6  EFF7  F033         	goto	u5480
  2810   0067EA                     u5481:
  2811   0067EA  EFFC  F033         	goto	l5356
  2812   0067EE                     u5480:
  2813   0067EE  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2814   0067F2  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2815   0067F6  2ADF               	incf	indf2,f,c
  2816   0067F8                     l5356:
  2817                           
  2818                           ;dc_motor.c: 185:         setMotorPWM(mL);
  2819   0067F8  C019  F00F         	movff	turn_right_135@mL,setMotorPWM@m
  2820   0067FC  C01A  F010         	movff	turn_right_135@mL+1,setMotorPWM@m+1
  2821   006800  EC8C  F031         	call	_setMotorPWM	;wreg free
  2822   006804                     
  2823                           ;dc_motor.c: 186:         setMotorPWM(mR);
  2824   006804  C01B  F00F         	movff	turn_right_135@mR,setMotorPWM@m
  2825   006808  C01C  F010         	movff	turn_right_135@mR+1,setMotorPWM@m+1
  2826   00680C  EC8C  F031         	call	_setMotorPWM	;wreg free
  2827   006810                     
  2828                           ;dc_motor.c: 187:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2829   006810  0E15               	movlw	21
  2830   006812  6E1D               	movwf	??_turn_right_135^0,c
  2831   006814  0EC6               	movlw	198
  2832   006816                     u8227:
  2833   006816  2EE8               	decfsz	wreg,f,c
  2834   006818  D7FE               	bra	u8227
  2835   00681A  2E1D               	decfsz	??_turn_right_135^0,f,c
  2836   00681C  D7FC               	bra	u8227
  2837   00681E  D000               	nop2	
  2838   006820                     l238:
  2839                           
  2840                           ;dc_motor.c: 181:     while ((mL->power) < 70 || (mR->power) < 70){
  2841   006820  C019  FFD9         	movff	turn_right_135@mL,fsr2l
  2842   006824  C01A  FFDA         	movff	turn_right_135@mL+1,fsr2h
  2843   006828  0E45               	movlw	69
  2844   00682A  64DF               	cpfsgt	indf2,c
  2845   00682C  EF1A  F034         	goto	u5491
  2846   006830  EF1C  F034         	goto	u5490
  2847   006834                     u5491:
  2848   006834  EFDA  F033         	goto	l5348
  2849   006838                     u5490:
  2850   006838  C01B  FFD9         	movff	turn_right_135@mR,fsr2l
  2851   00683C  C01C  FFDA         	movff	turn_right_135@mR+1,fsr2h
  2852   006840  0E45               	movlw	69
  2853   006842  64DF               	cpfsgt	indf2,c
  2854   006844  EF26  F034         	goto	u5501
  2855   006848  EF28  F034         	goto	u5500
  2856   00684C                     u5501:
  2857   00684C  EFDA  F033         	goto	l5348
  2858   006850                     u5500:
  2859   006850                     
  2860                           ;dc_motor.c: 189:     _delay((unsigned long)((700)*(64000000/4000.0)));
  2861   006850  0E39               	movlw	57
  2862   006852  6E1E               	movwf	(??_turn_right_135+1)^0,c
  2863   006854  0ED2               	movlw	210
  2864   006856  6E1D               	movwf	??_turn_right_135^0,c
  2865   006858  0E4C               	movlw	76
  2866   00685A                     u8237:
  2867   00685A  2EE8               	decfsz	wreg,f,c
  2868   00685C  D7FE               	bra	u8237
  2869   00685E  2E1D               	decfsz	??_turn_right_135^0,f,c
  2870   006860  D7FC               	bra	u8237
  2871   006862  2E1E               	decfsz	(??_turn_right_135+1)^0,f,c
  2872   006864  D7FA               	bra	u8237
  2873   006866  D000               	nop2	
  2874   006868                     
  2875                           ;dc_motor.c: 190:     stop(mL, mR);
  2876   006868  C019  F015         	movff	turn_right_135@mL,stop@mL
  2877   00686C  C01A  F016         	movff	turn_right_135@mL+1,stop@mL+1
  2878   006870  C01B  F017         	movff	turn_right_135@mR,stop@mR
  2879   006874  C01C  F018         	movff	turn_right_135@mR+1,stop@mR+1
  2880   006878  ECDA  F037         	call	_stop	;wreg free
  2881   00687C  0012               	return		;funcret
  2882   00687E                     __end_of_turn_right_135:
  2883                           	callstack 0
  2884                           
  2885 ;; *************** function _turn_left_90 *****************
  2886 ;; Defined at:
  2887 ;;		line 126 in file "dc_motor.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  2890 ;;		 -> main@motorL(9), 
  2891 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  2892 ;;		 -> main@motorR(9), 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2904 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;Total ram usage:        6 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; Hardware stack levels required when called: 5
  2911 ;; This function calls:
  2912 ;;		_setMotorPWM
  2913 ;;		_stop
  2914 ;; This function is called by:
  2915 ;;		_main
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text3
  2920   006A54                     __ptext3:
  2921                           	callstack 0
  2922   006A54                     _turn_left_90:
  2923                           	callstack 25
  2924   006A54                     
  2925                           ;dc_motor.c: 127:     mL->direction = 1;
  2926   006A54  EE20 F001          	lfsr	2,1
  2927   006A58  5019               	movf	turn_left_90@mL^0,w,c
  2928   006A5A  26D9               	addwf	fsr2l,f,c
  2929   006A5C  501A               	movf	(turn_left_90@mL+1)^0,w,c
  2930   006A5E  22DA               	addwfc	fsr2h,f,c
  2931   006A60  0E01               	movlw	1
  2932   006A62  6EDF               	movwf	indf2,c
  2933                           
  2934                           ;dc_motor.c: 128:     mR->direction = 0;
  2935   006A64  EE20 F001          	lfsr	2,1
  2936   006A68  501B               	movf	turn_left_90@mR^0,w,c
  2937   006A6A  26D9               	addwf	fsr2l,f,c
  2938   006A6C  501C               	movf	(turn_left_90@mR+1)^0,w,c
  2939   006A6E  22DA               	addwfc	fsr2h,f,c
  2940   006A70  6ADF               	clrf	indf2,c
  2941                           
  2942                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  2943   006A72  EF71  F035         	goto	l214
  2944   006A76                     l5282:
  2945                           
  2946                           ;dc_motor.c: 131:         if ((mL->power) < 70) (mL->power) += 1;
  2947   006A76  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2948   006A7A  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2949   006A7E  0E46               	movlw	70
  2950   006A80  60DF               	cpfslt	indf2,c
  2951   006A82  EF45  F035         	goto	u5351
  2952   006A86  EF47  F035         	goto	u5350
  2953   006A8A                     u5351:
  2954   006A8A  EF4C  F035         	goto	l5286
  2955   006A8E                     u5350:
  2956   006A8E  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  2957   006A92  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  2958   006A96  2ADF               	incf	indf2,f,c
  2959   006A98                     l5286:
  2960                           
  2961                           ;dc_motor.c: 132:         if ((mR->power) < 70) (mR->power) += 1;
  2962   006A98  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2963   006A9C  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2964   006AA0  0E46               	movlw	70
  2965   006AA2  60DF               	cpfslt	indf2,c
  2966   006AA4  EF56  F035         	goto	u5361
  2967   006AA8  EF58  F035         	goto	u5360
  2968   006AAC                     u5361:
  2969   006AAC  EF5D  F035         	goto	l5290
  2970   006AB0                     u5360:
  2971   006AB0  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  2972   006AB4  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  2973   006AB8  2ADF               	incf	indf2,f,c
  2974   006ABA                     l5290:
  2975                           
  2976                           ;dc_motor.c: 134:         setMotorPWM(mL);
  2977   006ABA  C019  F00F         	movff	turn_left_90@mL,setMotorPWM@m
  2978   006ABE  C01A  F010         	movff	turn_left_90@mL+1,setMotorPWM@m+1
  2979   006AC2  EC8C  F031         	call	_setMotorPWM	;wreg free
  2980   006AC6                     
  2981                           ;dc_motor.c: 135:         setMotorPWM(mR);
  2982   006AC6  C01B  F00F         	movff	turn_left_90@mR,setMotorPWM@m
  2983   006ACA  C01C  F010         	movff	turn_left_90@mR+1,setMotorPWM@m+1
  2984   006ACE  EC8C  F031         	call	_setMotorPWM	;wreg free
  2985   006AD2                     
  2986                           ;dc_motor.c: 136:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2987   006AD2  0E15               	movlw	21
  2988   006AD4  6E1D               	movwf	??_turn_left_90^0,c
  2989   006AD6  0EC6               	movlw	198
  2990   006AD8                     u8247:
  2991   006AD8  2EE8               	decfsz	wreg,f,c
  2992   006ADA  D7FE               	bra	u8247
  2993   006ADC  2E1D               	decfsz	??_turn_left_90^0,f,c
  2994   006ADE  D7FC               	bra	u8247
  2995   006AE0  D000               	nop2	
  2996   006AE2                     l214:
  2997                           
  2998                           ;dc_motor.c: 130:     while ((mL->power) < 70 || (mR->power) < 70){
  2999   006AE2  C019  FFD9         	movff	turn_left_90@mL,fsr2l
  3000   006AE6  C01A  FFDA         	movff	turn_left_90@mL+1,fsr2h
  3001   006AEA  0E45               	movlw	69
  3002   006AEC  64DF               	cpfsgt	indf2,c
  3003   006AEE  EF7B  F035         	goto	u5371
  3004   006AF2  EF7D  F035         	goto	u5370
  3005   006AF6                     u5371:
  3006   006AF6  EF3B  F035         	goto	l5282
  3007   006AFA                     u5370:
  3008   006AFA  C01B  FFD9         	movff	turn_left_90@mR,fsr2l
  3009   006AFE  C01C  FFDA         	movff	turn_left_90@mR+1,fsr2h
  3010   006B02  0E45               	movlw	69
  3011   006B04  64DF               	cpfsgt	indf2,c
  3012   006B06  EF87  F035         	goto	u5381
  3013   006B0A  EF89  F035         	goto	u5380
  3014   006B0E                     u5381:
  3015   006B0E  EF3B  F035         	goto	l5282
  3016   006B12                     u5380:
  3017   006B12                     
  3018                           ;dc_motor.c: 138:     _delay((unsigned long)((450)*(64000000/4000.0)));
  3019   006B12  0E25               	movlw	37
  3020   006B14  6E1E               	movwf	(??_turn_left_90+1)^0,c
  3021   006B16  0E87               	movlw	135
  3022   006B18  6E1D               	movwf	??_turn_left_90^0,c
  3023   006B1A  0E8C               	movlw	140
  3024   006B1C                     u8257:
  3025   006B1C  2EE8               	decfsz	wreg,f,c
  3026   006B1E  D7FE               	bra	u8257
  3027   006B20  2E1D               	decfsz	??_turn_left_90^0,f,c
  3028   006B22  D7FC               	bra	u8257
  3029   006B24  2E1E               	decfsz	(??_turn_left_90+1)^0,f,c
  3030   006B26  D7FA               	bra	u8257
  3031   006B28                     
  3032                           ;dc_motor.c: 139:     stop(mL, mR);
  3033   006B28  C019  F015         	movff	turn_left_90@mL,stop@mL
  3034   006B2C  C01A  F016         	movff	turn_left_90@mL+1,stop@mL+1
  3035   006B30  C01B  F017         	movff	turn_left_90@mR,stop@mR
  3036   006B34  C01C  F018         	movff	turn_left_90@mR+1,stop@mR+1
  3037   006B38  ECDA  F037         	call	_stop	;wreg free
  3038   006B3C  0012               	return		;funcret
  3039   006B3E                     __end_of_turn_left_90:
  3040                           	callstack 0
  3041                           
  3042 ;; *************** function _turn_left_135 *****************
  3043 ;; Defined at:
  3044 ;;		line 160 in file "dc_motor.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  3047 ;;		 -> main@motorL(9), 
  3048 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  3049 ;;		 -> main@motorR(9), 
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3065 ;;Total ram usage:        6 bytes
  3066 ;; Hardware stack levels used: 1
  3067 ;; Hardware stack levels required when called: 5
  3068 ;; This function calls:
  3069 ;;		_setMotorPWM
  3070 ;;		_stop
  3071 ;; This function is called by:
  3072 ;;		_main
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text4
  3077   00687E                     __ptext4:
  3078                           	callstack 0
  3079   00687E                     _turn_left_135:
  3080                           	callstack 25
  3081   00687E                     
  3082                           ;dc_motor.c: 161:     mL->direction = 1;
  3083   00687E  EE20 F001          	lfsr	2,1
  3084   006882  5019               	movf	turn_left_135@mL^0,w,c
  3085   006884  26D9               	addwf	fsr2l,f,c
  3086   006886  501A               	movf	(turn_left_135@mL+1)^0,w,c
  3087   006888  22DA               	addwfc	fsr2h,f,c
  3088   00688A  0E01               	movlw	1
  3089   00688C  6EDF               	movwf	indf2,c
  3090                           
  3091                           ;dc_motor.c: 162:     mR->direction = 0;
  3092   00688E  EE20 F001          	lfsr	2,1
  3093   006892  501B               	movf	turn_left_135@mR^0,w,c
  3094   006894  26D9               	addwf	fsr2l,f,c
  3095   006896  501C               	movf	(turn_left_135@mR+1)^0,w,c
  3096   006898  22DA               	addwfc	fsr2h,f,c
  3097   00689A  6ADF               	clrf	indf2,c
  3098                           
  3099                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  3100   00689C  EF86  F034         	goto	l230
  3101   0068A0                     l5326:
  3102                           
  3103                           ;dc_motor.c: 165:         if ((mL->power) < 70) (mL->power) += 1;
  3104   0068A0  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3105   0068A4  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3106   0068A8  0E46               	movlw	70
  3107   0068AA  60DF               	cpfslt	indf2,c
  3108   0068AC  EF5A  F034         	goto	u5431
  3109   0068B0  EF5C  F034         	goto	u5430
  3110   0068B4                     u5431:
  3111   0068B4  EF61  F034         	goto	l5330
  3112   0068B8                     u5430:
  3113   0068B8  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3114   0068BC  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3115   0068C0  2ADF               	incf	indf2,f,c
  3116   0068C2                     l5330:
  3117                           
  3118                           ;dc_motor.c: 166:         if ((mR->power) < 70) (mR->power) += 1;
  3119   0068C2  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3120   0068C6  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3121   0068CA  0E46               	movlw	70
  3122   0068CC  60DF               	cpfslt	indf2,c
  3123   0068CE  EF6B  F034         	goto	u5441
  3124   0068D2  EF6D  F034         	goto	u5440
  3125   0068D6                     u5441:
  3126   0068D6  EF72  F034         	goto	l5334
  3127   0068DA                     u5440:
  3128   0068DA  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3129   0068DE  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3130   0068E2  2ADF               	incf	indf2,f,c
  3131   0068E4                     l5334:
  3132                           
  3133                           ;dc_motor.c: 168:         setMotorPWM(mL);
  3134   0068E4  C019  F00F         	movff	turn_left_135@mL,setMotorPWM@m
  3135   0068E8  C01A  F010         	movff	turn_left_135@mL+1,setMotorPWM@m+1
  3136   0068EC  EC8C  F031         	call	_setMotorPWM	;wreg free
  3137   0068F0                     
  3138                           ;dc_motor.c: 169:         setMotorPWM(mR);
  3139   0068F0  C01B  F00F         	movff	turn_left_135@mR,setMotorPWM@m
  3140   0068F4  C01C  F010         	movff	turn_left_135@mR+1,setMotorPWM@m+1
  3141   0068F8  EC8C  F031         	call	_setMotorPWM	;wreg free
  3142   0068FC                     
  3143                           ;dc_motor.c: 170:         _delay((unsigned long)((1)*(64000000/4000.0)));
  3144   0068FC  0E15               	movlw	21
  3145   0068FE  6E1D               	movwf	??_turn_left_135^0,c
  3146   006900  0EC6               	movlw	198
  3147   006902                     u8267:
  3148   006902  2EE8               	decfsz	wreg,f,c
  3149   006904  D7FE               	bra	u8267
  3150   006906  2E1D               	decfsz	??_turn_left_135^0,f,c
  3151   006908  D7FC               	bra	u8267
  3152   00690A  D000               	nop2	
  3153   00690C                     l230:
  3154                           
  3155                           ;dc_motor.c: 164:     while ((mL->power) < 70 || (mR->power) < 70){
  3156   00690C  C019  FFD9         	movff	turn_left_135@mL,fsr2l
  3157   006910  C01A  FFDA         	movff	turn_left_135@mL+1,fsr2h
  3158   006914  0E45               	movlw	69
  3159   006916  64DF               	cpfsgt	indf2,c
  3160   006918  EF90  F034         	goto	u5451
  3161   00691C  EF92  F034         	goto	u5450
  3162   006920                     u5451:
  3163   006920  EF50  F034         	goto	l5326
  3164   006924                     u5450:
  3165   006924  C01B  FFD9         	movff	turn_left_135@mR,fsr2l
  3166   006928  C01C  FFDA         	movff	turn_left_135@mR+1,fsr2h
  3167   00692C  0E45               	movlw	69
  3168   00692E  64DF               	cpfsgt	indf2,c
  3169   006930  EF9C  F034         	goto	u5461
  3170   006934  EF9E  F034         	goto	u5460
  3171   006938                     u5461:
  3172   006938  EF50  F034         	goto	l5326
  3173   00693C                     u5460:
  3174   00693C                     
  3175                           ;dc_motor.c: 172:     _delay((unsigned long)((700)*(64000000/4000.0)));
  3176   00693C  0E39               	movlw	57
  3177   00693E  6E1E               	movwf	(??_turn_left_135+1)^0,c
  3178   006940  0ED2               	movlw	210
  3179   006942  6E1D               	movwf	??_turn_left_135^0,c
  3180   006944  0E4C               	movlw	76
  3181   006946                     u8277:
  3182   006946  2EE8               	decfsz	wreg,f,c
  3183   006948  D7FE               	bra	u8277
  3184   00694A  2E1D               	decfsz	??_turn_left_135^0,f,c
  3185   00694C  D7FC               	bra	u8277
  3186   00694E  2E1E               	decfsz	(??_turn_left_135+1)^0,f,c
  3187   006950  D7FA               	bra	u8277
  3188   006952  D000               	nop2	
  3189   006954                     
  3190                           ;dc_motor.c: 173:     stop(mL, mR);
  3191   006954  C019  F015         	movff	turn_left_135@mL,stop@mL
  3192   006958  C01A  F016         	movff	turn_left_135@mL+1,stop@mL+1
  3193   00695C  C01B  F017         	movff	turn_left_135@mR,stop@mR
  3194   006960  C01C  F018         	movff	turn_left_135@mR+1,stop@mR+1
  3195   006964  ECDA  F037         	call	_stop	;wreg free
  3196   006968  0012               	return		;funcret
  3197   00696A                     __end_of_turn_left_135:
  3198                           	callstack 0
  3199                           
  3200 ;; *************** function _sprintf *****************
  3201 ;; Defined at:
  3202 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  s               2   26[COMRAM] PTR unsigned char 
  3205 ;;		 -> main@clear_val(20), 
  3206 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  3207 ;;		 -> STR_1(15), 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  f              12   32[COMRAM] struct _IO_FILE
  3210 ;;  ret             2    0        int 
  3211 ;;  ap              1   31[COMRAM] PTR void [1]
  3212 ;;		 -> ?_sprintf(2), 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  2   26[COMRAM] int 
  3215 ;; Registers used:
  3216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3222 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3223 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3225 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;Total ram usage:       18 bytes
  3227 ;; Hardware stack levels used: 1
  3228 ;; Hardware stack levels required when called: 6
  3229 ;; This function calls:
  3230 ;;		_vfprintf
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text5
  3237   007410                     __ptext5:
  3238                           	callstack 0
  3239   007410                     _sprintf:
  3240                           	callstack 24
  3241   007410  0E1E               	movlw	low (?_sprintf+3)
  3242   007412  6E20               	movwf	sprintf@ap^0,c
  3243   007414  C01B  F021         	movff	sprintf@s,sprintf@f
  3244   007418  C01C  F022         	movff	sprintf@s+1,sprintf@f+1
  3245   00741C  0E00               	movlw	0
  3246   00741E  6E25               	movwf	(sprintf@f+4)^0,c
  3247   007420  0E00               	movlw	0
  3248   007422  6E24               	movwf	(sprintf@f+3)^0,c
  3249   007424  0E00               	movlw	0
  3250   007426  6E2C               	movwf	(sprintf@f+11)^0,c
  3251   007428  0E00               	movlw	0
  3252   00742A  6E2B               	movwf	(sprintf@f+10)^0,c
  3253   00742C  0E21               	movlw	low sprintf@f
  3254   00742E  6E17               	movwf	vfprintf@fp^0,c
  3255   007430  C01D  F018         	movff	sprintf@fmt,vfprintf@fmt
  3256   007434  0E20               	movlw	low sprintf@ap
  3257   007436  6E19               	movwf	vfprintf@ap^0,c
  3258   007438  ECC6  F039         	call	_vfprintf	;wreg free
  3259   00743C  5024               	movf	(sprintf@f+3)^0,w,c
  3260   00743E  241B               	addwf	sprintf@s^0,w,c
  3261   007440  6ED9               	movwf	fsr2l,c
  3262   007442  5025               	movf	(sprintf@f+4)^0,w,c
  3263   007444  201C               	addwfc	(sprintf@s+1)^0,w,c
  3264   007446  6EDA               	movwf	fsr2h,c
  3265   007448  6ADF               	clrf	indf2,c
  3266   00744A  0012               	return		;funcret
  3267   00744C                     __end_of_sprintf:
  3268                           	callstack 0
  3269                           
  3270 ;; *************** function _vfprintf *****************
  3271 ;; Defined at:
  3272 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  3275 ;;		 -> sprintf@f(12), 
  3276 ;;  fmt             1   23[COMRAM] PTR const unsigned char 
  3277 ;;		 -> STR_1(15), 
  3278 ;;  ap              1   24[COMRAM] PTR PTR void 
  3279 ;;		 -> sprintf@ap(1), 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  cfmt            1   25[COMRAM] PTR unsigned char 
  3282 ;;		 -> STR_1(15), 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  2   22[COMRAM] int 
  3285 ;; Registers used:
  3286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3292 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3295 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3296 ;;Total ram usage:        4 bytes
  3297 ;; Hardware stack levels used: 1
  3298 ;; Hardware stack levels required when called: 5
  3299 ;; This function calls:
  3300 ;;		_vfpfcnvrt
  3301 ;; This function is called by:
  3302 ;;		_sprintf
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text6
  3307   00738C                     __ptext6:
  3308                           	callstack 0
  3309   00738C                     _vfprintf:
  3310                           	callstack 24
  3311   00738C                     
  3312                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3313   00738C  C018  F01A         	movff	vfprintf@fmt,vfprintf@cfmt
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3316   007390  EFD2  F039         	goto	l5030
  3317   007394                     l5028:
  3318                           
  3319                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3320   007394  C017  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  3321   007398  0E1A               	movlw	low vfprintf@cfmt
  3322   00739A  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  3323   00739C  C019  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  3324   0073A0  ECC7  F02F         	call	_vfpfcnvrt	;wreg free
  3325   0073A4                     l5030:
  3326                           
  3327                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3328   0073A4  C01A  FFF6         	movff	vfprintf@cfmt,tblptrl
  3329   0073A8                     	if	1	;There is more than 1 active tblptr byte
  3330   0073A8  0E0E               	movlw	high __smallconst
  3331   0073AA  6EF7               	movwf	tblptrh,c
  3332   0073AC                     	endif
  3333   0073AC                     	if	0	;tblptru may be non-zero
  3334   0073AC                     	endif
  3335   0073AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3336   0073AC  0E00               	movlw	low (__smallconst shr (0+16))
  3337   0073AE  6EF8               	movwf	tblptru,c
  3338   0073B0                     	endif
  3339   0073B0  0008               	tblrd		*
  3340   0073B2  50F5               	movf	tablat,w,c
  3341   0073B4  0900               	iorlw	0
  3342   0073B6  A4D8               	btfss	status,2,c
  3343   0073B8  EFE0  F039         	goto	u5191
  3344   0073BC  EFE2  F039         	goto	u5190
  3345   0073C0                     u5191:
  3346   0073C0  EFCA  F039         	goto	l5028
  3347   0073C4                     u5190:
  3348   0073C4                     
  3349                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3350   0073C4  0E00               	movlw	0
  3351   0073C6  6E18               	movwf	(?_vfprintf+1)^0,c
  3352   0073C8  0E00               	movlw	0
  3353   0073CA  6E17               	movwf	?_vfprintf^0,c
  3354   0073CC  0012               	return		;funcret
  3355   0073CE                     __end_of_vfprintf:
  3356                           	callstack 0
  3357                           
  3358 ;; *************** function _vfpfcnvrt *****************
  3359 ;; Defined at:
  3360 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  3363 ;;		 -> sprintf@f(12), 
  3364 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  3365 ;;		 -> vfprintf@cfmt(1), 
  3366 ;;  ap              1   13[COMRAM] PTR PTR void 
  3367 ;;		 -> sprintf@ap(1), 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  convarg         4   17[COMRAM] struct .
  3370 ;;  c               1   21[COMRAM] unsigned char 
  3371 ;;  cp              1   16[COMRAM] PTR unsigned char 
  3372 ;;		 -> STR_1(15), 
  3373 ;;  done            1   15[COMRAM] _Bool 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3383 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3384 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3386 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3387 ;;Total ram usage:       11 bytes
  3388 ;; Hardware stack levels used: 1
  3389 ;; Hardware stack levels required when called: 4
  3390 ;; This function calls:
  3391 ;;		___awdiv
  3392 ;;		___awmod
  3393 ;;		_abs
  3394 ;;		_fputc
  3395 ;; This function is called by:
  3396 ;;		_vfprintf
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text7
  3401   005F8E                     __ptext7:
  3402                           	callstack 0
  3403   005F8E                     _vfpfcnvrt:
  3404                           	callstack 24
  3405   005F8E                     
  3406                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3407   005F8E  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3408   005F90  6ED9               	movwf	fsr2l,c
  3409   005F92  6ADA               	clrf	fsr2h,c
  3410   005F94  CFDF FFF6          	movff	indf2,tblptrl
  3411   005F98                     	if	1	;There is more than 1 active tblptr byte
  3412   005F98  0E0E               	movlw	high __smallconst
  3413   005F9A  6EF7               	movwf	tblptrh,c
  3414   005F9C                     	endif
  3415   005F9C                     	if	0	;tblptru may be non-zero
  3416   005F9C                     	endif
  3417   005F9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3418   005F9C  0E00               	movlw	low (__smallconst shr (0+16))
  3419   005F9E  6EF8               	movwf	tblptru,c
  3420   005FA0                     	endif
  3421   005FA0  0008               	tblrd		*
  3422   005FA2  50F5               	movf	tablat,w,c
  3423   005FA4  0A25               	xorlw	37
  3424   005FA6  A4D8               	btfss	status,2,c
  3425   005FA8  EFD8  F02F         	goto	u4391
  3426   005FAC  EFDA  F02F         	goto	u4390
  3427   005FB0                     u4391:
  3428   005FB0  EF9E  F030         	goto	l4500
  3429   005FB4                     u4390:
  3430   005FB4                     
  3431                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3432   005FB4  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3433   005FB6  6ED9               	movwf	fsr2l,c
  3434   005FB8  6ADA               	clrf	fsr2h,c
  3435   005FBA  2ADF               	incf	indf2,f,c
  3436   005FBC                     
  3437                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3438   005FBC  0E00               	movlw	0
  3439   005FBE  0100               	movlb	0	; () banked
  3440   005FC0  6FED               	movwf	(_width+1)& (0+255),b
  3441   005FC2  0E00               	movlw	0
  3442   005FC4  6FEC               	movwf	_width& (0+255),b
  3443   005FC6  C0EC  F058         	movff	_width,_flags
  3444   005FCA                     
  3445                           ; BSR set to: 0
  3446                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3447   005FCA  69EE               	setf	_prec& (0+255),b
  3448   005FCC  69EF               	setf	(_prec+1)& (0+255),b
  3449   005FCE                     
  3450                           ; BSR set to: 0
  3451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3452   005FCE  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3453   005FD0  6ED9               	movwf	fsr2l,c
  3454   005FD2  6ADA               	clrf	fsr2h,c
  3455   005FD4  50DF               	movf	indf2,w,c
  3456   005FD6  6E11               	movwf	vfpfcnvrt@cp^0,c
  3457   005FD8                     
  3458                           ; BSR set to: 0
  3459                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3460   005FD8  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3461   005FDC                     	if	1	;There is more than 1 active tblptr byte
  3462   005FDC  0E0E               	movlw	high __smallconst
  3463   005FDE  6EF7               	movwf	tblptrh,c
  3464   005FE0                     	endif
  3465   005FE0                     	if	0	;tblptru may be non-zero
  3466   005FE0                     	endif
  3467   005FE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3468   005FE0  0E00               	movlw	low (__smallconst shr (0+16))
  3469   005FE2  6EF8               	movwf	tblptru,c
  3470   005FE4                     	endif
  3471   005FE4  0008               	tblrd		*
  3472   005FE6  50F5               	movf	tablat,w,c
  3473   005FE8  0A64               	xorlw	100
  3474   005FEA  B4D8               	btfsc	status,2,c
  3475   005FEC  EFFA  F02F         	goto	u4401
  3476   005FF0  EFFC  F02F         	goto	u4400
  3477   005FF4                     u4401:
  3478   005FF4  EF0C  F030         	goto	l4470
  3479   005FF8                     u4400:
  3480   005FF8                     
  3481                           ; BSR set to: 0
  3482   005FF8  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3483   005FFC                     	if	1	;There is more than 1 active tblptr byte
  3484   005FFC  0E0E               	movlw	high __smallconst
  3485   005FFE  6EF7               	movwf	tblptrh,c
  3486   006000                     	endif
  3487   006000                     	if	0	;tblptru may be non-zero
  3488   006000                     	endif
  3489   006000                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3490   006000  0E00               	movlw	low (__smallconst shr (0+16))
  3491   006002  6EF8               	movwf	tblptru,c
  3492   006004                     	endif
  3493   006004  0008               	tblrd		*
  3494   006006  50F5               	movf	tablat,w,c
  3495   006008  0A69               	xorlw	105
  3496   00600A  A4D8               	btfss	status,2,c
  3497   00600C  EF0A  F030         	goto	u4411
  3498   006010  EF0C  F030         	goto	u4410
  3499   006014                     u4411:
  3500   006014  EF98  F030         	goto	l4496
  3501   006018                     u4410:
  3502   006018                     l4470:
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3506   006018  500E               	movf	vfpfcnvrt@ap^0,w,c
  3507   00601A  6ED9               	movwf	fsr2l,c
  3508   00601C  6ADA               	clrf	fsr2h,c
  3509   00601E  0E02               	movlw	2
  3510   006020  26DF               	addwf	indf2,f,c
  3511   006022  5CDF               	subwf	indf2,w,c
  3512   006024  6ED9               	movwf	fsr2l,c
  3513   006026  6ADA               	clrf	fsr2h,c
  3514   006028  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
  3515   00602C  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
  3516   006030                     
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3519   006030  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3520   006032  6ED9               	movwf	fsr2l,c
  3521   006034  6ADA               	clrf	fsr2h,c
  3522   006036  2811               	incf	vfpfcnvrt@cp^0,w,c
  3523   006038  6EDF               	movwf	indf2,c
  3524   00603A                     
  3525                           ; BSR set to: 0
  3526                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3527   00603A  0E20               	movlw	32
  3528   00603C  6E16               	movwf	vfpfcnvrt@c^0,c
  3529                           
  3530                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3531   00603E  BE13               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3532   006040  EF24  F030         	goto	u4421
  3533   006044  EF27  F030         	goto	u4420
  3534   006048                     u4421:
  3535   006048  0E01               	movlw	1
  3536   00604A  EF28  F030         	goto	u4430
  3537   00604E                     u4420:
  3538   00604E  0E00               	movlw	0
  3539   006050                     u4430:
  3540   006050  6E10               	movwf	vfpfcnvrt@done^0,c
  3541   006052                     l4476:
  3542                           
  3543                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3544   006052  0616               	decf	vfpfcnvrt@c^0,f,c
  3545   006054  0EB8               	movlw	low _dbuf
  3546   006056  2416               	addwf	vfpfcnvrt@c^0,w,c
  3547   006058  6ED9               	movwf	fsr2l,c
  3548   00605A  6ADA               	clrf	fsr2h,c
  3549   00605C  0E01               	movlw	high _dbuf
  3550   00605E  22DA               	addwfc	fsr2h,f,c
  3551   006060  C012  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3552   006064  C013  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3553   006068  0E00               	movlw	0
  3554   00606A  6E05               	movwf	(___awmod@divisor+1)^0,c
  3555   00606C  0E0A               	movlw	10
  3556   00606E  6E04               	movwf	___awmod@divisor^0,c
  3557   006070  EC31  F037         	call	___awmod	;wreg free
  3558   006074  C002  F008         	movff	?___awmod,abs@a
  3559   006078  C003  F009         	movff	?___awmod+1,abs@a+1
  3560   00607C  EC5E  F03A         	call	_abs	;wreg free
  3561   006080  5008               	movf	?_abs^0,w,c
  3562   006082  0F30               	addlw	48
  3563   006084  6EDF               	movwf	indf2,c
  3564   006086                     
  3565                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3566   006086  C012  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3567   00608A  C013  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3568   00608E  0E00               	movlw	0
  3569   006090  6E05               	movwf	(___awdiv@divisor+1)^0,c
  3570   006092  0E0A               	movlw	10
  3571   006094  6E04               	movwf	___awdiv@divisor^0,c
  3572   006096  EC14  F036         	call	___awdiv	;wreg free
  3573   00609A  C002  F012         	movff	?___awdiv,vfpfcnvrt@convarg
  3574   00609E  C003  F013         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3575   0060A2                     
  3576                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3577   0060A2  5012               	movf	vfpfcnvrt@convarg^0,w,c
  3578   0060A4  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3579   0060A6  B4D8               	btfsc	status,2,c
  3580   0060A8  EF58  F030         	goto	u4441
  3581   0060AC  EF5A  F030         	goto	u4440
  3582   0060B0                     u4441:
  3583   0060B0  EF62  F030         	goto	l4484
  3584   0060B4                     u4440:
  3585   0060B4  5016               	movf	vfpfcnvrt@c^0,w,c
  3586   0060B6  A4D8               	btfss	status,2,c
  3587   0060B8  EF60  F030         	goto	u4451
  3588   0060BC  EF62  F030         	goto	u4450
  3589   0060C0                     u4451:
  3590   0060C0  EF29  F030         	goto	l4476
  3591   0060C4                     u4450:
  3592   0060C4                     l4484:
  3593                           
  3594                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3595   0060C4  5016               	movf	vfpfcnvrt@c^0,w,c
  3596   0060C6  B4D8               	btfsc	status,2,c
  3597   0060C8  EF68  F030         	goto	u4461
  3598   0060CC  EF6A  F030         	goto	u4460
  3599   0060D0                     u4461:
  3600   0060D0  EF8D  F030         	goto	l4494
  3601   0060D4                     u4460:
  3602   0060D4  5010               	movf	vfpfcnvrt@done^0,w,c
  3603   0060D6  B4D8               	btfsc	status,2,c
  3604   0060D8  EF70  F030         	goto	u4471
  3605   0060DC  EF72  F030         	goto	u4470
  3606   0060E0                     u4471:
  3607   0060E0  EF8D  F030         	goto	l4494
  3608   0060E4                     u4470:
  3609   0060E4                     
  3610                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3611   0060E4  0616               	decf	vfpfcnvrt@c^0,f,c
  3612   0060E6  0EB8               	movlw	low _dbuf
  3613   0060E8  2416               	addwf	vfpfcnvrt@c^0,w,c
  3614   0060EA  6ED9               	movwf	fsr2l,c
  3615   0060EC  6ADA               	clrf	fsr2h,c
  3616   0060EE  0E01               	movlw	high _dbuf
  3617   0060F0  22DA               	addwfc	fsr2h,f,c
  3618   0060F2  0E2D               	movlw	45
  3619   0060F4  6EDF               	movwf	indf2,c
  3620   0060F6  EF8D  F030         	goto	l4494
  3621   0060FA                     l4490:
  3622                           
  3623                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3624   0060FA  0EB8               	movlw	low _dbuf
  3625   0060FC  2416               	addwf	vfpfcnvrt@c^0,w,c
  3626   0060FE  6ED9               	movwf	fsr2l,c
  3627   006100  6ADA               	clrf	fsr2h,c
  3628   006102  0E01               	movlw	high _dbuf
  3629   006104  22DA               	addwfc	fsr2h,f,c
  3630   006106  50DF               	movf	indf2,w,c
  3631   006108  6E0F               	movwf	??_vfpfcnvrt^0,c
  3632   00610A  500F               	movf	??_vfpfcnvrt^0,w,c
  3633   00610C  6E02               	movwf	fputc@c^0,c
  3634   00610E  6A03               	clrf	(fputc@c+1)^0,c
  3635   006110  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3636   006114  ECD4  F036         	call	_fputc	;wreg free
  3637   006118  2A16               	incf	vfpfcnvrt@c^0,f,c
  3638   00611A                     l4494:
  3639                           
  3640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3641   00611A  0E20               	movlw	32
  3642   00611C  1816               	xorwf	vfpfcnvrt@c^0,w,c
  3643   00611E  A4D8               	btfss	status,2,c
  3644   006120  EF94  F030         	goto	u4481
  3645   006124  EF96  F030         	goto	u4480
  3646   006128                     u4481:
  3647   006128  EF7D  F030         	goto	l4490
  3648   00612C                     u4480:
  3649   00612C  EFB1  F030         	goto	l1278
  3650   006130                     l4496:
  3651                           
  3652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3653   006130  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3654   006132  6ED9               	movwf	fsr2l,c
  3655   006134  6ADA               	clrf	fsr2h,c
  3656   006136  2ADF               	incf	indf2,f,c
  3657   006138  EFB1  F030         	goto	l1278
  3658   00613C                     l4500:
  3659                           
  3660                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3661   00613C  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3662   00613E  6ED9               	movwf	fsr2l,c
  3663   006140  6ADA               	clrf	fsr2h,c
  3664   006142  CFDF FFF6          	movff	indf2,tblptrl
  3665   006146                     	if	1	;There is more than 1 active tblptr byte
  3666   006146  0E0E               	movlw	high __smallconst
  3667   006148  6EF7               	movwf	tblptrh,c
  3668   00614A                     	endif
  3669   00614A                     	if	0	;tblptru may be non-zero
  3670   00614A                     	endif
  3671   00614A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3672   00614A  0E00               	movlw	low (__smallconst shr (0+16))
  3673   00614C  6EF8               	movwf	tblptru,c
  3674   00614E                     	endif
  3675   00614E  0008               	tblrd		*
  3676   006150  50F5               	movf	tablat,w,c
  3677   006152  6E02               	movwf	fputc@c^0,c
  3678   006154  6A03               	clrf	(fputc@c+1)^0,c
  3679   006156  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3680   00615A  ECD4  F036         	call	_fputc	;wreg free
  3681   00615E  EF98  F030         	goto	l4496
  3682   006162                     l1278:
  3683   006162  0012               	return		;funcret
  3684   006164                     __end_of_vfpfcnvrt:
  3685                           	callstack 0
  3686                           
  3687 ;; *************** function _fputc *****************
  3688 ;; Defined at:
  3689 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  c               2    1[COMRAM] int 
  3692 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  3693 ;;		 -> sprintf@f(12), 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;		None
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  2    1[COMRAM] int 
  3698 ;; Registers used:
  3699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3705 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3707 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3708 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3709 ;;Total ram usage:        8 bytes
  3710 ;; Hardware stack levels used: 1
  3711 ;; Hardware stack levels required when called: 3
  3712 ;; This function calls:
  3713 ;;		_putch
  3714 ;; This function is called by:
  3715 ;;		_vfpfcnvrt
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text8
  3720   006DA8                     __ptext8:
  3721                           	callstack 0
  3722   006DA8                     _fputc:
  3723                           	callstack 24
  3724   006DA8  5004               	movf	fputc@fp^0,w,c
  3725   006DAA  B4D8               	btfsc	status,2,c
  3726   006DAC  EFDA  F036         	goto	u3771
  3727   006DB0  EFDC  F036         	goto	u3770
  3728   006DB4                     u3771:
  3729   006DB4  EFE4  F036         	goto	l4110
  3730   006DB8                     u3770:
  3731   006DB8  5004               	movf	fputc@fp^0,w,c
  3732   006DBA  A4D8               	btfss	status,2,c
  3733   006DBC  EFE2  F036         	goto	u3781
  3734   006DC0  EFE4  F036         	goto	u3780
  3735   006DC4                     u3781:
  3736   006DC4  EFE9  F036         	goto	l4112
  3737   006DC8                     u3780:
  3738   006DC8                     l4110:
  3739   006DC8  5002               	movf	fputc@c^0,w,c
  3740   006DCA  EC4F  F03B         	call	_putch
  3741   006DCE  EF30  F037         	goto	l1303
  3742   006DD2                     l4112:
  3743   006DD2  5004               	movf	fputc@fp^0,w,c
  3744   006DD4  6ED9               	movwf	fsr2l,c
  3745   006DD6  6ADA               	clrf	fsr2h,c
  3746   006DD8  0E0A               	movlw	10
  3747   006DDA  26D9               	addwf	fsr2l,f,c
  3748   006DDC  50DE               	movf	postinc2,w,c
  3749   006DDE  10DE               	iorwf	postinc2,w,c
  3750   006DE0  B4D8               	btfsc	status,2,c
  3751   006DE2  EFF5  F036         	goto	u3791
  3752   006DE6  EFF7  F036         	goto	u3790
  3753   006DEA                     u3791:
  3754   006DEA  EF10  F037         	goto	l4116
  3755   006DEE                     u3790:
  3756   006DEE  5004               	movf	fputc@fp^0,w,c
  3757   006DF0  6ED9               	movwf	fsr2l,c
  3758   006DF2  6ADA               	clrf	fsr2h,c
  3759   006DF4  0E0A               	movlw	10
  3760   006DF6  26D9               	addwf	fsr2l,f,c
  3761   006DF8  5004               	movf	fputc@fp^0,w,c
  3762   006DFA  6EE1               	movwf	fsr1l,c
  3763   006DFC  6AE2               	clrf	fsr1h,c
  3764   006DFE  0E03               	movlw	3
  3765   006E00  26E1               	addwf	fsr1l,f,c
  3766   006E02  50DE               	movf	postinc2,w,c
  3767   006E04  5CE6               	subwf	postinc1,w,c
  3768   006E06  50E6               	movf	postinc1,w,c
  3769   006E08  0A80               	xorlw	128
  3770   006E0A  6E09               	movwf	(??_fputc+4)^0,c
  3771   006E0C  50DE               	movf	postinc2,w,c
  3772   006E0E  0A80               	xorlw	128
  3773   006E10  5809               	subwfb	(??_fputc+4)^0,w,c
  3774   006E12  B0D8               	btfsc	status,0,c
  3775   006E14  EF0E  F037         	goto	u3801
  3776   006E18  EF10  F037         	goto	u3800
  3777   006E1C                     u3801:
  3778   006E1C  EF30  F037         	goto	l1303
  3779   006E20                     u3800:
  3780   006E20                     l4116:
  3781   006E20  5004               	movf	fputc@fp^0,w,c
  3782   006E22  6ED9               	movwf	fsr2l,c
  3783   006E24  6ADA               	clrf	fsr2h,c
  3784   006E26  0E03               	movlw	3
  3785   006E28  26D9               	addwf	fsr2l,f,c
  3786   006E2A  CFDE F005          	movff	postinc2,??_fputc
  3787   006E2E  CFDD F006          	movff	postdec2,??_fputc+1
  3788   006E32  5004               	movf	fputc@fp^0,w,c
  3789   006E34  6ED9               	movwf	fsr2l,c
  3790   006E36  6ADA               	clrf	fsr2h,c
  3791   006E38  CFDE F007          	movff	postinc2,??_fputc+2
  3792   006E3C  CFDD F008          	movff	postdec2,??_fputc+3
  3793   006E40  5005               	movf	??_fputc^0,w,c
  3794   006E42  2407               	addwf	(??_fputc+2)^0,w,c
  3795   006E44  6ED9               	movwf	fsr2l,c
  3796   006E46  5006               	movf	(??_fputc+1)^0,w,c
  3797   006E48  2008               	addwfc	(??_fputc+3)^0,w,c
  3798   006E4A  6EDA               	movwf	fsr2h,c
  3799   006E4C  C002  FFDF         	movff	fputc@c,indf2
  3800   006E50  5004               	movf	fputc@fp^0,w,c
  3801   006E52  6ED9               	movwf	fsr2l,c
  3802   006E54  6ADA               	clrf	fsr2h,c
  3803   006E56  0E03               	movlw	3
  3804   006E58  26D9               	addwf	fsr2l,f,c
  3805   006E5A  2ADE               	incf	postinc2,f,c
  3806   006E5C  0E00               	movlw	0
  3807   006E5E  22DD               	addwfc	postdec2,f,c
  3808   006E60                     l1303:
  3809   006E60  0012               	return		;funcret
  3810   006E62                     __end_of_fputc:
  3811                           	callstack 0
  3812                           
  3813 ;; *************** function _putch *****************
  3814 ;; Defined at:
  3815 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  c               1    wreg     unsigned char 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  c               1    0[COMRAM] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3833 ;;Total ram usage:        0 bytes
  3834 ;; Hardware stack levels used: 1
  3835 ;; Hardware stack levels required when called: 2
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_fputc
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text9
  3844   00769E                     __ptext9:
  3845                           	callstack 0
  3846   00769E                     _putch:
  3847                           	callstack 24
  3848   00769E  0012               	return		;funcret
  3849   0076A0                     __end_of_putch:
  3850                           	callstack 0
  3851                           
  3852 ;; *************** function _abs *****************
  3853 ;; Defined at:
  3854 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  a               2    7[COMRAM] int 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  2    7[COMRAM] int 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3870 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3871 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3872 ;;Total ram usage:        4 bytes
  3873 ;; Hardware stack levels used: 1
  3874 ;; Hardware stack levels required when called: 2
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_vfpfcnvrt
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text10
  3883   0074BC                     __ptext10:
  3884                           	callstack 0
  3885   0074BC                     _abs:
  3886                           	callstack 25
  3887   0074BC  BE09               	btfsc	(abs@a+1)^0,7,c
  3888   0074BE  EF63  F03A         	goto	u3811
  3889   0074C2  EF65  F03A         	goto	u3810
  3890   0074C6                     u3811:
  3891   0074C6  EF6B  F03A         	goto	l1288
  3892   0074CA                     u3810:
  3893   0074CA  C008  F008         	movff	abs@a,?_abs
  3894   0074CE  C009  F009         	movff	abs@a+1,?_abs+1
  3895   0074D2  EF77  F03A         	goto	l1291
  3896   0074D6                     l1288:
  3897   0074D6  C008  F00A         	movff	abs@a,??_abs
  3898   0074DA  C009  F00B         	movff	abs@a+1,??_abs+1
  3899   0074DE  1E0A               	comf	??_abs^0,f,c
  3900   0074E0  1E0B               	comf	(??_abs+1)^0,f,c
  3901   0074E2  4A0A               	infsnz	??_abs^0,f,c
  3902   0074E4  2A0B               	incf	(??_abs+1)^0,f,c
  3903   0074E6  C00A  F008         	movff	??_abs,?_abs
  3904   0074EA  C00B  F009         	movff	??_abs+1,?_abs+1
  3905   0074EE                     l1291:
  3906   0074EE  0012               	return		;funcret
  3907   0074F0                     __end_of_abs:
  3908                           	callstack 0
  3909                           
  3910 ;; *************** function ___awmod *****************
  3911 ;; Defined at:
  3912 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  dividend        2    1[COMRAM] int 
  3915 ;;  divisor         2    3[COMRAM] int 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  sign            1    6[COMRAM] unsigned char 
  3918 ;;  counter         1    5[COMRAM] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  2    1[COMRAM] int 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3929 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3931 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3932 ;;Total ram usage:        6 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; Hardware stack levels required when called: 2
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_vfpfcnvrt
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text11
  3943   006E62                     __ptext11:
  3944                           	callstack 0
  3945   006E62                     ___awmod:
  3946                           	callstack 25
  3947   006E62  0E00               	movlw	0
  3948   006E64  6E07               	movwf	___awmod@sign^0,c
  3949   006E66  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  3950   006E68  EF3A  F037         	goto	u3680
  3951   006E6C  EF38  F037         	goto	u3681
  3952   006E70                     u3681:
  3953   006E70  EF40  F037         	goto	l4056
  3954   006E74                     u3680:
  3955   006E74  6C02               	negf	___awmod@dividend^0,c
  3956   006E76  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3957   006E78  B0D8               	btfsc	status,0,c
  3958   006E7A  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3959   006E7C  0E01               	movlw	1
  3960   006E7E  6E07               	movwf	___awmod@sign^0,c
  3961   006E80                     l4056:
  3962   006E80  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  3963   006E82  EF47  F037         	goto	u3690
  3964   006E86  EF45  F037         	goto	u3691
  3965   006E8A                     u3691:
  3966   006E8A  EF4B  F037         	goto	l4060
  3967   006E8E                     u3690:
  3968   006E8E  6C04               	negf	___awmod@divisor^0,c
  3969   006E90  1E05               	comf	(___awmod@divisor+1)^0,f,c
  3970   006E92  B0D8               	btfsc	status,0,c
  3971   006E94  2A05               	incf	(___awmod@divisor+1)^0,f,c
  3972   006E96                     l4060:
  3973   006E96  5004               	movf	___awmod@divisor^0,w,c
  3974   006E98  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  3975   006E9A  B4D8               	btfsc	status,2,c
  3976   006E9C  EF52  F037         	goto	u3701
  3977   006EA0  EF54  F037         	goto	u3700
  3978   006EA4                     u3701:
  3979   006EA4  EF78  F037         	goto	l4076
  3980   006EA8                     u3700:
  3981   006EA8  0E01               	movlw	1
  3982   006EAA  6E06               	movwf	___awmod@counter^0,c
  3983   006EAC  EF5C  F037         	goto	l4066
  3984   006EB0                     l4064:
  3985   006EB0  90D8               	bcf	status,0,c
  3986   006EB2  3604               	rlcf	___awmod@divisor^0,f,c
  3987   006EB4  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  3988   006EB6  2A06               	incf	___awmod@counter^0,f,c
  3989   006EB8                     l4066:
  3990   006EB8  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  3991   006EBA  EF61  F037         	goto	u3711
  3992   006EBE  EF63  F037         	goto	u3710
  3993   006EC2                     u3711:
  3994   006EC2  EF58  F037         	goto	l4064
  3995   006EC6                     u3710:
  3996   006EC6                     l4068:
  3997   006EC6  5004               	movf	___awmod@divisor^0,w,c
  3998   006EC8  5C02               	subwf	___awmod@dividend^0,w,c
  3999   006ECA  5005               	movf	(___awmod@divisor+1)^0,w,c
  4000   006ECC  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  4001   006ECE  A0D8               	btfss	status,0,c
  4002   006ED0  EF6C  F037         	goto	u3721
  4003   006ED4  EF6E  F037         	goto	u3720
  4004   006ED8                     u3721:
  4005   006ED8  EF72  F037         	goto	l4072
  4006   006EDC                     u3720:
  4007   006EDC  5004               	movf	___awmod@divisor^0,w,c
  4008   006EDE  5E02               	subwf	___awmod@dividend^0,f,c
  4009   006EE0  5005               	movf	(___awmod@divisor+1)^0,w,c
  4010   006EE2  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  4011   006EE4                     l4072:
  4012   006EE4  90D8               	bcf	status,0,c
  4013   006EE6  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  4014   006EE8  3204               	rrcf	___awmod@divisor^0,f,c
  4015   006EEA  2E06               	decfsz	___awmod@counter^0,f,c
  4016   006EEC  EF63  F037         	goto	l4068
  4017   006EF0                     l4076:
  4018   006EF0  5007               	movf	___awmod@sign^0,w,c
  4019   006EF2  B4D8               	btfsc	status,2,c
  4020   006EF4  EF7E  F037         	goto	u3731
  4021   006EF8  EF80  F037         	goto	u3730
  4022   006EFC                     u3731:
  4023   006EFC  EF84  F037         	goto	l4080
  4024   006F00                     u3730:
  4025   006F00  6C02               	negf	___awmod@dividend^0,c
  4026   006F02  1E03               	comf	(___awmod@dividend+1)^0,f,c
  4027   006F04  B0D8               	btfsc	status,0,c
  4028   006F06  2A03               	incf	(___awmod@dividend+1)^0,f,c
  4029   006F08                     l4080:
  4030   006F08  C002  F002         	movff	___awmod@dividend,?___awmod
  4031   006F0C  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  4032   006F10  0012               	return		;funcret
  4033   006F12                     __end_of___awmod:
  4034                           	callstack 0
  4035                           
  4036 ;; *************** function ___awdiv *****************
  4037 ;; Defined at:
  4038 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  dividend        2    1[COMRAM] int 
  4041 ;;  divisor         2    3[COMRAM] int 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  quotient        2    7[COMRAM] int 
  4044 ;;  sign            1    6[COMRAM] unsigned char 
  4045 ;;  counter         1    5[COMRAM] unsigned char 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  2    1[COMRAM] int 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4055 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4056 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4058 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4059 ;;Total ram usage:        8 bytes
  4060 ;; Hardware stack levels used: 1
  4061 ;; Hardware stack levels required when called: 2
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_vfpfcnvrt
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text12
  4070   006C28                     __ptext12:
  4071                           	callstack 0
  4072   006C28                     ___awdiv:
  4073                           	callstack 25
  4074   006C28  0E00               	movlw	0
  4075   006C2A  6E07               	movwf	___awdiv@sign^0,c
  4076   006C2C  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  4077   006C2E  EF1D  F036         	goto	u3620
  4078   006C32  EF1B  F036         	goto	u3621
  4079   006C36                     u3621:
  4080   006C36  EF23  F036         	goto	l4012
  4081   006C3A                     u3620:
  4082   006C3A  6C04               	negf	___awdiv@divisor^0,c
  4083   006C3C  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  4084   006C3E  B0D8               	btfsc	status,0,c
  4085   006C40  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  4086   006C42  0E01               	movlw	1
  4087   006C44  6E07               	movwf	___awdiv@sign^0,c
  4088   006C46                     l4012:
  4089   006C46  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  4090   006C48  EF2A  F036         	goto	u3630
  4091   006C4C  EF28  F036         	goto	u3631
  4092   006C50                     u3631:
  4093   006C50  EF30  F036         	goto	l4018
  4094   006C54                     u3630:
  4095   006C54  6C02               	negf	___awdiv@dividend^0,c
  4096   006C56  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  4097   006C58  B0D8               	btfsc	status,0,c
  4098   006C5A  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  4099   006C5C  0E01               	movlw	1
  4100   006C5E  1A07               	xorwf	___awdiv@sign^0,f,c
  4101   006C60                     l4018:
  4102   006C60  0E00               	movlw	0
  4103   006C62  6E09               	movwf	(___awdiv@quotient+1)^0,c
  4104   006C64  0E00               	movlw	0
  4105   006C66  6E08               	movwf	___awdiv@quotient^0,c
  4106   006C68  5004               	movf	___awdiv@divisor^0,w,c
  4107   006C6A  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  4108   006C6C  B4D8               	btfsc	status,2,c
  4109   006C6E  EF3B  F036         	goto	u3641
  4110   006C72  EF3D  F036         	goto	u3640
  4111   006C76                     u3641:
  4112   006C76  EF65  F036         	goto	l4040
  4113   006C7A                     u3640:
  4114   006C7A  0E01               	movlw	1
  4115   006C7C  6E06               	movwf	___awdiv@counter^0,c
  4116   006C7E  EF45  F036         	goto	l4026
  4117   006C82                     l4024:
  4118   006C82  90D8               	bcf	status,0,c
  4119   006C84  3604               	rlcf	___awdiv@divisor^0,f,c
  4120   006C86  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  4121   006C88  2A06               	incf	___awdiv@counter^0,f,c
  4122   006C8A                     l4026:
  4123   006C8A  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  4124   006C8C  EF4A  F036         	goto	u3651
  4125   006C90  EF4C  F036         	goto	u3650
  4126   006C94                     u3651:
  4127   006C94  EF41  F036         	goto	l4024
  4128   006C98                     u3650:
  4129   006C98                     l4028:
  4130   006C98  90D8               	bcf	status,0,c
  4131   006C9A  3608               	rlcf	___awdiv@quotient^0,f,c
  4132   006C9C  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  4133   006C9E  5004               	movf	___awdiv@divisor^0,w,c
  4134   006CA0  5C02               	subwf	___awdiv@dividend^0,w,c
  4135   006CA2  5005               	movf	(___awdiv@divisor+1)^0,w,c
  4136   006CA4  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  4137   006CA6  A0D8               	btfss	status,0,c
  4138   006CA8  EF58  F036         	goto	u3661
  4139   006CAC  EF5A  F036         	goto	u3660
  4140   006CB0                     u3661:
  4141   006CB0  EF5F  F036         	goto	l4036
  4142   006CB4                     u3660:
  4143   006CB4  5004               	movf	___awdiv@divisor^0,w,c
  4144   006CB6  5E02               	subwf	___awdiv@dividend^0,f,c
  4145   006CB8  5005               	movf	(___awdiv@divisor+1)^0,w,c
  4146   006CBA  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  4147   006CBC  8008               	bsf	___awdiv@quotient^0,0,c
  4148   006CBE                     l4036:
  4149   006CBE  90D8               	bcf	status,0,c
  4150   006CC0  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  4151   006CC2  3204               	rrcf	___awdiv@divisor^0,f,c
  4152   006CC4  2E06               	decfsz	___awdiv@counter^0,f,c
  4153   006CC6  EF4C  F036         	goto	l4028
  4154   006CCA                     l4040:
  4155   006CCA  5007               	movf	___awdiv@sign^0,w,c
  4156   006CCC  B4D8               	btfsc	status,2,c
  4157   006CCE  EF6B  F036         	goto	u3671
  4158   006CD2  EF6D  F036         	goto	u3670
  4159   006CD6                     u3671:
  4160   006CD6  EF71  F036         	goto	l4044
  4161   006CDA                     u3670:
  4162   006CDA  6C08               	negf	___awdiv@quotient^0,c
  4163   006CDC  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  4164   006CDE  B0D8               	btfsc	status,0,c
  4165   006CE0  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  4166   006CE2                     l4044:
  4167   006CE2  C008  F002         	movff	___awdiv@quotient,?___awdiv
  4168   006CE6  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  4169   006CEA  0012               	return		;funcret
  4170   006CEC                     __end_of___awdiv:
  4171                           	callstack 0
  4172                           
  4173 ;; *************** function _sendStringSerial4 *****************
  4174 ;; Defined at:
  4175 ;;		line 38 in file "serial.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  string          2    2[COMRAM] PTR unsigned char 
  4178 ;;		 -> main@clear_val(20), 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4194 ;;Total ram usage:        2 bytes
  4195 ;; Hardware stack levels used: 1
  4196 ;; Hardware stack levels required when called: 3
  4197 ;; This function calls:
  4198 ;;		_sendCharSerial4
  4199 ;; This function is called by:
  4200 ;;		_main
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text13
  4205   0074F0                     __ptext13:
  4206                           	callstack 0
  4207   0074F0                     _sendStringSerial4:
  4208                           	callstack 27
  4209   0074F0                     
  4210                           ;serial.c: 40:     while(*string != 0){
  4211   0074F0  EF83  F03A         	goto	l5498
  4212   0074F4                     l5494:
  4213                           
  4214                           ;serial.c: 41:   sendCharSerial4(*string++);
  4215   0074F4  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  4216   0074F8  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4217   0074FC  50DF               	movf	indf2,w,c
  4218   0074FE  EC17  F03B         	call	_sendCharSerial4
  4219   007502  4A03               	infsnz	sendStringSerial4@string^0,f,c
  4220   007504  2A04               	incf	(sendStringSerial4@string+1)^0,f,c
  4221   007506                     l5498:
  4222                           
  4223                           ;serial.c: 40:     while(*string != 0){
  4224   007506  C003  FFD9         	movff	sendStringSerial4@string,fsr2l
  4225   00750A  C004  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4226   00750E  50DF               	movf	indf2,w,c
  4227   007510  A4D8               	btfss	status,2,c
  4228   007512  EF8D  F03A         	goto	u5631
  4229   007516  EF8F  F03A         	goto	u5630
  4230   00751A                     u5631:
  4231   00751A  EF7A  F03A         	goto	l5494
  4232   00751E                     u5630:
  4233   00751E  0012               	return		;funcret
  4234   007520                     __end_of_sendStringSerial4:
  4235                           	callstack 0
  4236                           
  4237 ;; *************** function _sendCharSerial4 *****************
  4238 ;; Defined at:
  4239 ;;		line 31 in file "serial.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  charToSend      1    wreg     unsigned char 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  charToSend      1    1[COMRAM] unsigned char 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  1    wreg      void 
  4246 ;; Registers used:
  4247 ;;		wreg
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4256 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4257 ;;Total ram usage:        1 bytes
  4258 ;; Hardware stack levels used: 1
  4259 ;; Hardware stack levels required when called: 2
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_sendStringSerial4
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text14
  4268   00762E                     __ptext14:
  4269                           	callstack 0
  4270   00762E                     _sendCharSerial4:
  4271                           	callstack 27
  4272                           
  4273                           ;incstack = 0
  4274                           ;sendCharSerial4@charToSend stored from wreg
  4275   00762E  6E02               	movwf	sendCharSerial4@charToSend^0,c
  4276   007630                     l497:
  4277   007630  010E               	movlb	14	; () banked
  4278   007632  A537               	btfss	55,2,b	;volatile
  4279   007634  EF1E  F03B         	goto	u5181
  4280   007638  EF20  F03B         	goto	u5180
  4281   00763C                     u5181:
  4282   00763C  EF18  F03B         	goto	l497
  4283   007640                     u5180:
  4284   007640                     
  4285                           ; BSR set to: 14
  4286                           ;serial.c: 33:     TX4REG = charToSend;
  4287   007640  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4288   007644                     
  4289                           ; BSR set to: 14
  4290   007644  0012               	return		;funcret
  4291   007646                     __end_of_sendCharSerial4:
  4292                           	callstack 0
  4293                           
  4294 ;; *************** function _reverse_one_square *****************
  4295 ;; Defined at:
  4296 ;;		line 210 in file "dc_motor.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  4299 ;;		 -> main@motorL(9), 
  4300 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  4301 ;;		 -> main@motorR(9), 
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4315 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4316 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4317 ;;Total ram usage:        6 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 5
  4320 ;; This function calls:
  4321 ;;		_setMotorPWM
  4322 ;;		_stop
  4323 ;; This function is called by:
  4324 ;;		_main
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text15
  4329   00658A                     __ptext15:
  4330                           	callstack 0
  4331   00658A                     _reverse_one_square:
  4332                           	callstack 25
  4333   00658A                     
  4334                           ;dc_motor.c: 211:     mL->direction = 1;
  4335   00658A  EE20 F001          	lfsr	2,1
  4336   00658E  5019               	movf	reverse_one_square@mL^0,w,c
  4337   006590  26D9               	addwf	fsr2l,f,c
  4338   006592  501A               	movf	(reverse_one_square@mL+1)^0,w,c
  4339   006594  22DA               	addwfc	fsr2h,f,c
  4340   006596  0E01               	movlw	1
  4341   006598  6EDF               	movwf	indf2,c
  4342                           
  4343                           ;dc_motor.c: 212:     mR->direction = 1;
  4344   00659A  EE20 F001          	lfsr	2,1
  4345   00659E  501B               	movf	reverse_one_square@mR^0,w,c
  4346   0065A0  26D9               	addwf	fsr2l,f,c
  4347   0065A2  501C               	movf	(reverse_one_square@mR+1)^0,w,c
  4348   0065A4  22DA               	addwfc	fsr2h,f,c
  4349   0065A6  0E01               	movlw	1
  4350   0065A8  6EDF               	movwf	indf2,c
  4351                           
  4352                           ;dc_motor.c: 214:     while ((mL->power) < 70 || (mR->power) < 70){
  4353   0065AA  EF0D  F033         	goto	l254
  4354   0065AE                     l5394:
  4355                           
  4356                           ;dc_motor.c: 215:         if ((mL->power) < 70) (mL->power) += 1;
  4357   0065AE  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  4358   0065B2  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  4359   0065B6  0E46               	movlw	70
  4360   0065B8  60DF               	cpfslt	indf2,c
  4361   0065BA  EFE1  F032         	goto	u5551
  4362   0065BE  EFE3  F032         	goto	u5550
  4363   0065C2                     u5551:
  4364   0065C2  EFE8  F032         	goto	l5398
  4365   0065C6                     u5550:
  4366   0065C6  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  4367   0065CA  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  4368   0065CE  2ADF               	incf	indf2,f,c
  4369   0065D0                     l5398:
  4370                           
  4371                           ;dc_motor.c: 216:         if ((mR->power) < 70) (mR->power) += 1;
  4372   0065D0  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  4373   0065D4  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  4374   0065D8  0E46               	movlw	70
  4375   0065DA  60DF               	cpfslt	indf2,c
  4376   0065DC  EFF2  F032         	goto	u5561
  4377   0065E0  EFF4  F032         	goto	u5560
  4378   0065E4                     u5561:
  4379   0065E4  EFF9  F032         	goto	l5402
  4380   0065E8                     u5560:
  4381   0065E8  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  4382   0065EC  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  4383   0065F0  2ADF               	incf	indf2,f,c
  4384   0065F2                     l5402:
  4385                           
  4386                           ;dc_motor.c: 218:         setMotorPWM(mL);
  4387   0065F2  C019  F00F         	movff	reverse_one_square@mL,setMotorPWM@m
  4388   0065F6  C01A  F010         	movff	reverse_one_square@mL+1,setMotorPWM@m+1
  4389   0065FA  EC8C  F031         	call	_setMotorPWM	;wreg free
  4390   0065FE                     
  4391                           ;dc_motor.c: 219:         setMotorPWM(mR);
  4392   0065FE  C01B  F00F         	movff	reverse_one_square@mR,setMotorPWM@m
  4393   006602  C01C  F010         	movff	reverse_one_square@mR+1,setMotorPWM@m+1
  4394   006606  EC8C  F031         	call	_setMotorPWM	;wreg free
  4395   00660A                     
  4396                           ;dc_motor.c: 220:         _delay((unsigned long)((1)*(64000000/4000.0)));
  4397   00660A  0E15               	movlw	21
  4398   00660C  6E1D               	movwf	??_reverse_one_square^0,c
  4399   00660E  0EC6               	movlw	198
  4400   006610                     u8287:
  4401   006610  2EE8               	decfsz	wreg,f,c
  4402   006612  D7FE               	bra	u8287
  4403   006614  2E1D               	decfsz	??_reverse_one_square^0,f,c
  4404   006616  D7FC               	bra	u8287
  4405   006618  D000               	nop2	
  4406   00661A                     l254:
  4407                           
  4408                           ;dc_motor.c: 214:     while ((mL->power) < 70 || (mR->power) < 70){
  4409   00661A  C019  FFD9         	movff	reverse_one_square@mL,fsr2l
  4410   00661E  C01A  FFDA         	movff	reverse_one_square@mL+1,fsr2h
  4411   006622  0E45               	movlw	69
  4412   006624  64DF               	cpfsgt	indf2,c
  4413   006626  EF17  F033         	goto	u5571
  4414   00662A  EF19  F033         	goto	u5570
  4415   00662E                     u5571:
  4416   00662E  EFD7  F032         	goto	l5394
  4417   006632                     u5570:
  4418   006632  C01B  FFD9         	movff	reverse_one_square@mR,fsr2l
  4419   006636  C01C  FFDA         	movff	reverse_one_square@mR+1,fsr2h
  4420   00663A  0E45               	movlw	69
  4421   00663C  64DF               	cpfsgt	indf2,c
  4422   00663E  EF23  F033         	goto	u5581
  4423   006642  EF25  F033         	goto	u5580
  4424   006646                     u5581:
  4425   006646  EFD7  F032         	goto	l5394
  4426   00664A                     u5580:
  4427   00664A                     
  4428                           ;dc_motor.c: 222:     _delay((unsigned long)((750)*(64000000/4000.0)));
  4429   00664A  0E3D               	movlw	61
  4430   00664C  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  4431   00664E  0EE1               	movlw	225
  4432   006650  6E1D               	movwf	??_reverse_one_square^0,c
  4433   006652  0E40               	movlw	64
  4434   006654                     u8297:
  4435   006654  2EE8               	decfsz	wreg,f,c
  4436   006656  D7FE               	bra	u8297
  4437   006658  2E1D               	decfsz	??_reverse_one_square^0,f,c
  4438   00665A  D7FC               	bra	u8297
  4439   00665C  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  4440   00665E  D7FA               	bra	u8297
  4441   006660                     
  4442                           ;dc_motor.c: 223:     stop(mL, mR);
  4443   006660  C019  F015         	movff	reverse_one_square@mL,stop@mL
  4444   006664  C01A  F016         	movff	reverse_one_square@mL+1,stop@mL+1
  4445   006668  C01B  F017         	movff	reverse_one_square@mR,stop@mR
  4446   00666C  C01C  F018         	movff	reverse_one_square@mR+1,stop@mR+1
  4447   006670  ECDA  F037         	call	_stop	;wreg free
  4448   006674                     
  4449                           ;dc_motor.c: 224:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4450   006674  0E15               	movlw	21
  4451   006676  6E1E               	movwf	(??_reverse_one_square+1)^0,c
  4452   006678  0E4B               	movlw	75
  4453   00667A  6E1D               	movwf	??_reverse_one_square^0,c
  4454   00667C  0EBE               	movlw	190
  4455   00667E                     u8307:
  4456   00667E  2EE8               	decfsz	wreg,f,c
  4457   006680  D7FE               	bra	u8307
  4458   006682  2E1D               	decfsz	??_reverse_one_square^0,f,c
  4459   006684  D7FC               	bra	u8307
  4460   006686  2E1E               	decfsz	(??_reverse_one_square+1)^0,f,c
  4461   006688  D7FA               	bra	u8307
  4462   00668A  D000               	nop2	
  4463   00668C  0012               	return		;funcret
  4464   00668E                     __end_of_reverse_one_square:
  4465                           	callstack 0
  4466                           
  4467 ;; *************** function _reverse_after_read *****************
  4468 ;; Defined at:
  4469 ;;		line 193 in file "dc_motor.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  4472 ;;		 -> main@motorL(9), 
  4473 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  4474 ;;		 -> main@motorR(9), 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4488 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4489 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4490 ;;Total ram usage:        6 bytes
  4491 ;; Hardware stack levels used: 1
  4492 ;; Hardware stack levels required when called: 5
  4493 ;; This function calls:
  4494 ;;		_setMotorPWM
  4495 ;;		_stop
  4496 ;; This function is called by:
  4497 ;;		_main
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text16
  4502   006484                     __ptext16:
  4503                           	callstack 0
  4504   006484                     _reverse_after_read:
  4505                           	callstack 25
  4506   006484                     
  4507                           ;dc_motor.c: 194:     mL->direction = 1;
  4508   006484  EE20 F001          	lfsr	2,1
  4509   006488  5019               	movf	reverse_after_read@mL^0,w,c
  4510   00648A  26D9               	addwf	fsr2l,f,c
  4511   00648C  501A               	movf	(reverse_after_read@mL+1)^0,w,c
  4512   00648E  22DA               	addwfc	fsr2h,f,c
  4513   006490  0E01               	movlw	1
  4514   006492  6EDF               	movwf	indf2,c
  4515                           
  4516                           ;dc_motor.c: 195:     mR->direction = 1;
  4517   006494  EE20 F001          	lfsr	2,1
  4518   006498  501B               	movf	reverse_after_read@mR^0,w,c
  4519   00649A  26D9               	addwf	fsr2l,f,c
  4520   00649C  501C               	movf	(reverse_after_read@mR+1)^0,w,c
  4521   00649E  22DA               	addwfc	fsr2h,f,c
  4522   0064A0  0E01               	movlw	1
  4523   0064A2  6EDF               	movwf	indf2,c
  4524                           
  4525                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  4526   0064A4  EF8A  F032         	goto	l246
  4527   0064A8                     l5370:
  4528                           
  4529                           ;dc_motor.c: 198:         if ((mL->power) < 70) (mL->power) += 1;
  4530   0064A8  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  4531   0064AC  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  4532   0064B0  0E46               	movlw	70
  4533   0064B2  60DF               	cpfslt	indf2,c
  4534   0064B4  EF5E  F032         	goto	u5511
  4535   0064B8  EF60  F032         	goto	u5510
  4536   0064BC                     u5511:
  4537   0064BC  EF65  F032         	goto	l5374
  4538   0064C0                     u5510:
  4539   0064C0  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  4540   0064C4  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  4541   0064C8  2ADF               	incf	indf2,f,c
  4542   0064CA                     l5374:
  4543                           
  4544                           ;dc_motor.c: 199:         if ((mR->power) < 70) (mR->power) += 1;
  4545   0064CA  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  4546   0064CE  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  4547   0064D2  0E46               	movlw	70
  4548   0064D4  60DF               	cpfslt	indf2,c
  4549   0064D6  EF6F  F032         	goto	u5521
  4550   0064DA  EF71  F032         	goto	u5520
  4551   0064DE                     u5521:
  4552   0064DE  EF76  F032         	goto	l5378
  4553   0064E2                     u5520:
  4554   0064E2  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  4555   0064E6  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  4556   0064EA  2ADF               	incf	indf2,f,c
  4557   0064EC                     l5378:
  4558                           
  4559                           ;dc_motor.c: 201:         setMotorPWM(mL);
  4560   0064EC  C019  F00F         	movff	reverse_after_read@mL,setMotorPWM@m
  4561   0064F0  C01A  F010         	movff	reverse_after_read@mL+1,setMotorPWM@m+1
  4562   0064F4  EC8C  F031         	call	_setMotorPWM	;wreg free
  4563   0064F8                     
  4564                           ;dc_motor.c: 202:         setMotorPWM(mR);
  4565   0064F8  C01B  F00F         	movff	reverse_after_read@mR,setMotorPWM@m
  4566   0064FC  C01C  F010         	movff	reverse_after_read@mR+1,setMotorPWM@m+1
  4567   006500  EC8C  F031         	call	_setMotorPWM	;wreg free
  4568   006504                     
  4569                           ;dc_motor.c: 203:         _delay((unsigned long)((1)*(64000000/4000.0)));
  4570   006504  0E15               	movlw	21
  4571   006506  6E1D               	movwf	??_reverse_after_read^0,c
  4572   006508  0EC6               	movlw	198
  4573   00650A                     u8317:
  4574   00650A  2EE8               	decfsz	wreg,f,c
  4575   00650C  D7FE               	bra	u8317
  4576   00650E  2E1D               	decfsz	??_reverse_after_read^0,f,c
  4577   006510  D7FC               	bra	u8317
  4578   006512  D000               	nop2	
  4579   006514                     l246:
  4580                           
  4581                           ;dc_motor.c: 197:     while ((mL->power) < 70 || (mR->power) < 70){
  4582   006514  C019  FFD9         	movff	reverse_after_read@mL,fsr2l
  4583   006518  C01A  FFDA         	movff	reverse_after_read@mL+1,fsr2h
  4584   00651C  0E45               	movlw	69
  4585   00651E  64DF               	cpfsgt	indf2,c
  4586   006520  EF94  F032         	goto	u5531
  4587   006524  EF96  F032         	goto	u5530
  4588   006528                     u5531:
  4589   006528  EF54  F032         	goto	l5370
  4590   00652C                     u5530:
  4591   00652C  C01B  FFD9         	movff	reverse_after_read@mR,fsr2l
  4592   006530  C01C  FFDA         	movff	reverse_after_read@mR+1,fsr2h
  4593   006534  0E45               	movlw	69
  4594   006536  64DF               	cpfsgt	indf2,c
  4595   006538  EFA0  F032         	goto	u5541
  4596   00653C  EFA2  F032         	goto	u5540
  4597   006540                     u5541:
  4598   006540  EF54  F032         	goto	l5370
  4599   006544                     u5540:
  4600   006544                     
  4601                           ;dc_motor.c: 205:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4602   006544  0E15               	movlw	21
  4603   006546  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  4604   006548  0E4B               	movlw	75
  4605   00654A  6E1D               	movwf	??_reverse_after_read^0,c
  4606   00654C  0EBE               	movlw	190
  4607   00654E                     u8327:
  4608   00654E  2EE8               	decfsz	wreg,f,c
  4609   006550  D7FE               	bra	u8327
  4610   006552  2E1D               	decfsz	??_reverse_after_read^0,f,c
  4611   006554  D7FC               	bra	u8327
  4612   006556  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  4613   006558  D7FA               	bra	u8327
  4614   00655A  D000               	nop2	
  4615   00655C                     
  4616                           ;dc_motor.c: 206:     stop(mL, mR);
  4617   00655C  C019  F015         	movff	reverse_after_read@mL,stop@mL
  4618   006560  C01A  F016         	movff	reverse_after_read@mL+1,stop@mL+1
  4619   006564  C01B  F017         	movff	reverse_after_read@mR,stop@mR
  4620   006568  C01C  F018         	movff	reverse_after_read@mR+1,stop@mR+1
  4621   00656C  ECDA  F037         	call	_stop	;wreg free
  4622   006570                     
  4623                           ;dc_motor.c: 207:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4624   006570  0E15               	movlw	21
  4625   006572  6E1E               	movwf	(??_reverse_after_read+1)^0,c
  4626   006574  0E4B               	movlw	75
  4627   006576  6E1D               	movwf	??_reverse_after_read^0,c
  4628   006578  0EBE               	movlw	190
  4629   00657A                     u8337:
  4630   00657A  2EE8               	decfsz	wreg,f,c
  4631   00657C  D7FE               	bra	u8337
  4632   00657E  2E1D               	decfsz	??_reverse_after_read^0,f,c
  4633   006580  D7FC               	bra	u8337
  4634   006582  2E1E               	decfsz	(??_reverse_after_read+1)^0,f,c
  4635   006584  D7FA               	bra	u8337
  4636   006586  D000               	nop2	
  4637   006588  0012               	return		;funcret
  4638   00658A                     __end_of_reverse_after_read:
  4639                           	callstack 0
  4640                           
  4641 ;; *************** function _resetTimer0 *****************
  4642 ;; Defined at:
  4643 ;;		line 34 in file "timers.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;		None
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;		None
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      void 
  4650 ;; Registers used:
  4651 ;;		wreg, status,2
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4661 ;;Total ram usage:        0 bytes
  4662 ;; Hardware stack levels used: 1
  4663 ;; Hardware stack levels required when called: 2
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_main
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           	psect	text17
  4672   007676                     __ptext17:
  4673                           	callstack 0
  4674   007676                     _resetTimer0:
  4675                           	callstack 28
  4676   007676                     
  4677                           ;timers.c: 35:     TMR0H = 0;
  4678   007676  0E00               	movlw	0
  4679   007678  6ED4               	movwf	212,c	;volatile
  4680                           
  4681                           ;timers.c: 36:     TMR0L = 0;
  4682   00767A  0E00               	movlw	0
  4683   00767C  6ED3               	movwf	211,c	;volatile
  4684   00767E  0012               	return		;funcret
  4685   007680                     __end_of_resetTimer0:
  4686                           	callstack 0
  4687                           
  4688 ;; *************** function _invert_action *****************
  4689 ;; Defined at:
  4690 ;;		line 186 in file "color.c"
  4691 ;; Parameters:    Size  Location     Type
  4692 ;;  input_action    1    wreg     unsigned char 
  4693 ;; Auto vars:     Size  Location     Type
  4694 ;;  input_action    1    3[COMRAM] unsigned char 
  4695 ;;  output_actio    1    4[COMRAM] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      unsigned char 
  4698 ;; Registers used:
  4699 ;;		wreg, status,2, status,0
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4706 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4707 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4708 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4709 ;;Total ram usage:        4 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; Hardware stack levels required when called: 2
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_main
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text18
  4720   00704E                     __ptext18:
  4721                           	callstack 0
  4722   00704E                     _invert_action:
  4723                           	callstack 28
  4724                           
  4725                           ;incstack = 0
  4726                           ;invert_action@input_action stored from wreg
  4727   00704E  6E04               	movwf	invert_action@input_action^0,c
  4728   007050                     
  4729                           ;color.c: 187:     char output_action;;color.c: 188:     switch(input_action){
  4730   007050  EF46  F038         	goto	l5216
  4731   007054                     l5200:
  4732                           
  4733                           ;color.c: 190:             output_action = 1;
  4734   007054  0E01               	movlw	1
  4735   007056  6E05               	movwf	invert_action@output_action^0,c
  4736                           
  4737                           ;color.c: 191:             break;
  4738   007058  EF6F  F038         	goto	l5218
  4739   00705C                     l5202:
  4740                           
  4741                           ;color.c: 193:             output_action = 0;
  4742   00705C  0E00               	movlw	0
  4743   00705E  6E05               	movwf	invert_action@output_action^0,c
  4744                           
  4745                           ;color.c: 194:             break;
  4746   007060  EF6F  F038         	goto	l5218
  4747   007064                     l5204:
  4748                           
  4749                           ;color.c: 196:             output_action = 2;
  4750   007064  0E02               	movlw	2
  4751   007066  6E05               	movwf	invert_action@output_action^0,c
  4752                           
  4753                           ;color.c: 197:             break;
  4754   007068  EF6F  F038         	goto	l5218
  4755   00706C                     l5206:
  4756                           
  4757                           ;color.c: 199:             output_action = 8;
  4758   00706C  0E08               	movlw	8
  4759   00706E  6E05               	movwf	invert_action@output_action^0,c
  4760                           
  4761                           ;color.c: 200:             break;
  4762   007070  EF6F  F038         	goto	l5218
  4763   007074                     l5208:
  4764                           
  4765                           ;color.c: 202:             output_action = 9;
  4766   007074  0E09               	movlw	9
  4767   007076  6E05               	movwf	invert_action@output_action^0,c
  4768                           
  4769                           ;color.c: 203:             break;
  4770   007078  EF6F  F038         	goto	l5218
  4771   00707C                     l5210:
  4772                           
  4773                           ;color.c: 205:             output_action = 6;
  4774   00707C  0E06               	movlw	6
  4775   00707E  6E05               	movwf	invert_action@output_action^0,c
  4776                           
  4777                           ;color.c: 206:             break;
  4778   007080  EF6F  F038         	goto	l5218
  4779   007084                     l5212:
  4780                           
  4781                           ;color.c: 208:             output_action = 5;
  4782   007084  0E05               	movlw	5
  4783   007086  6E05               	movwf	invert_action@output_action^0,c
  4784                           
  4785                           ;color.c: 209:             break;
  4786   007088  EF6F  F038         	goto	l5218
  4787   00708C                     l5216:
  4788   00708C  5004               	movf	invert_action@input_action^0,w,c
  4789   00708E  6E02               	movwf	??_invert_action^0,c
  4790   007090  6A03               	clrf	(??_invert_action+1)^0,c
  4791                           
  4792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4793                           ; Switch size 1, requested type "simple"
  4794                           ; Number of cases is 1, Range of values is 0 to 0
  4795                           ; switch strategies available:
  4796                           ; Name         Instructions Cycles
  4797                           ; simple_byte            4     3 (average)
  4798                           ;	Chosen strategy is simple_byte
  4799   007092  5003               	movf	(??_invert_action+1)^0,w,c
  4800   007094  0A00               	xorlw	0	; case 0
  4801   007096  B4D8               	btfsc	status,2,c
  4802   007098  EF50  F038         	goto	l7844
  4803   00709C  EF6F  F038         	goto	l5218
  4804   0070A0                     l7844:
  4805                           
  4806                           ; Switch size 1, requested type "simple"
  4807                           ; Number of cases is 7, Range of values is 0 to 6
  4808                           ; switch strategies available:
  4809                           ; Name         Instructions Cycles
  4810                           ; simple_byte           22    12 (average)
  4811                           ;	Chosen strategy is simple_byte
  4812   0070A0  5002               	movf	??_invert_action^0,w,c
  4813   0070A2  0A00               	xorlw	0	; case 0
  4814   0070A4  B4D8               	btfsc	status,2,c
  4815   0070A6  EF2A  F038         	goto	l5200
  4816   0070AA  0A01               	xorlw	1	; case 1
  4817   0070AC  B4D8               	btfsc	status,2,c
  4818   0070AE  EF2E  F038         	goto	l5202
  4819   0070B2  0A03               	xorlw	3	; case 2
  4820   0070B4  B4D8               	btfsc	status,2,c
  4821   0070B6  EF32  F038         	goto	l5204
  4822   0070BA  0A01               	xorlw	1	; case 3
  4823   0070BC  B4D8               	btfsc	status,2,c
  4824   0070BE  EF36  F038         	goto	l5206
  4825   0070C2  0A07               	xorlw	7	; case 4
  4826   0070C4  B4D8               	btfsc	status,2,c
  4827   0070C6  EF3A  F038         	goto	l5208
  4828   0070CA  0A01               	xorlw	1	; case 5
  4829   0070CC  B4D8               	btfsc	status,2,c
  4830   0070CE  EF3E  F038         	goto	l5210
  4831   0070D2  0A03               	xorlw	3	; case 6
  4832   0070D4  B4D8               	btfsc	status,2,c
  4833   0070D6  EF42  F038         	goto	l5212
  4834   0070DA  EF6F  F038         	goto	l5218
  4835   0070DE                     l5218:
  4836                           
  4837                           ;color.c: 213:     return output_action;
  4838   0070DE  5005               	movf	invert_action@output_action^0,w,c
  4839   0070E0  0012               	return		;funcret
  4840   0070E2                     __end_of_invert_action:
  4841                           	callstack 0
  4842                           
  4843 ;; *************** function _initUSART4 *****************
  4844 ;; Defined at:
  4845 ;;		line 4 in file "serial.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;		None
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4863 ;;Total ram usage:        0 bytes
  4864 ;; Hardware stack levels used: 1
  4865 ;; Hardware stack levels required when called: 2
  4866 ;; This function calls:
  4867 ;;		Nothing
  4868 ;; This function is called by:
  4869 ;;		_main
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text19
  4874   0075D8                     __ptext19:
  4875                           	callstack 0
  4876   0075D8                     _initUSART4:
  4877                           	callstack 28
  4878   0075D8                     
  4879                           ;serial.c: 8:     RC0PPS = 0x12;
  4880   0075D8  0E12               	movlw	18
  4881   0075DA  010E               	movlb	14	; () banked
  4882   0075DC  6F62               	movwf	98,b	;volatile
  4883                           
  4884                           ;serial.c: 9:     RX4PPS = 0x11;
  4885   0075DE  0E11               	movlw	17
  4886   0075E0  6F15               	movwf	21,b	;volatile
  4887   0075E2                     
  4888                           ; BSR set to: 14
  4889                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  4890   0075E2  97E9               	bcf	233,3,b	;volatile
  4891   0075E4                     
  4892                           ; BSR set to: 14
  4893                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  4894   0075E4  95E8               	bcf	232,2,b	;volatile
  4895                           
  4896                           ;serial.c: 15:     SP4BRGL = 51;
  4897   0075E6  0E33               	movlw	51
  4898   0075E8  6FE5               	movwf	229,b	;volatile
  4899                           
  4900                           ;serial.c: 16:     SP4BRGH = 0;
  4901   0075EA  0E00               	movlw	0
  4902   0075EC  6FE6               	movwf	230,b	;volatile
  4903   0075EE                     
  4904                           ; BSR set to: 14
  4905                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  4906   0075EE  89E7               	bsf	231,4,b	;volatile
  4907   0075F0                     
  4908                           ; BSR set to: 14
  4909                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  4910   0075F0  8BE8               	bsf	232,5,b	;volatile
  4911   0075F2                     
  4912                           ; BSR set to: 14
  4913                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  4914   0075F2  8FE7               	bsf	231,7,b	;volatile
  4915   0075F4                     
  4916                           ; BSR set to: 14
  4917   0075F4  0012               	return		;funcret
  4918   0075F6                     __end_of_initUSART4:
  4919                           	callstack 0
  4920                           
  4921 ;; *************** function _initDCmotorsPWM *****************
  4922 ;; Defined at:
  4923 ;;		line 6 in file "dc_motor.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;  PWMperiod       2    1[COMRAM] int 
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;		None
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      void 
  4930 ;; Registers used:
  4931 ;;		wreg, status,2
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4937 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4940 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4941 ;;Total ram usage:        2 bytes
  4942 ;; Hardware stack levels used: 1
  4943 ;; Hardware stack levels required when called: 2
  4944 ;; This function calls:
  4945 ;;		Nothing
  4946 ;; This function is called by:
  4947 ;;		_main
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           	psect	text20
  4952   006F12                     __ptext20:
  4953                           	callstack 0
  4954   006F12                     _initDCmotorsPWM:
  4955                           	callstack 28
  4956   006F12                     
  4957                           ;dc_motor.c: 10:     RE2PPS=0x05;
  4958   006F12  0E05               	movlw	5
  4959   006F14  010E               	movlb	14	; () banked
  4960   006F16  6F74               	movwf	116,b	;volatile
  4961                           
  4962                           ;dc_motor.c: 11:     RE4PPS=0x06;
  4963   006F18  0E06               	movlw	6
  4964   006F1A  6F76               	movwf	118,b	;volatile
  4965                           
  4966                           ;dc_motor.c: 12:     RC7PPS=0x07;
  4967   006F1C  0E07               	movlw	7
  4968   006F1E  6F69               	movwf	105,b	;volatile
  4969                           
  4970                           ;dc_motor.c: 13:     RG6PPS=0x08;
  4971   006F20  0E08               	movlw	8
  4972   006F22  6F88               	movwf	136,b	;volatile
  4973                           
  4974                           ;dc_motor.c: 16:     T2CONbits.CKPS=0b100;
  4975   006F24  50BD               	movf	189,w,c	;volatile
  4976   006F26  0B8F               	andlw	-113
  4977   006F28  0940               	iorlw	64
  4978   006F2A  6EBD               	movwf	189,c	;volatile
  4979                           
  4980                           ;dc_motor.c: 17:     T2HLTbits.MODE=0b00000;
  4981   006F2C  0EE0               	movlw	-32
  4982   006F2E  16BE               	andwf	190,f,c	;volatile
  4983                           
  4984                           ;dc_motor.c: 18:     T2CLKCONbits.CS=0b0001;
  4985   006F30  50BF               	movf	191,w,c	;volatile
  4986   006F32  0BF0               	andlw	-16
  4987   006F34  0901               	iorlw	1
  4988   006F36  6EBF               	movwf	191,c	;volatile
  4989                           
  4990                           ;dc_motor.c: 22:     T2PR=99;
  4991   006F38  0E63               	movlw	99
  4992   006F3A  6EBC               	movwf	188,c	;volatile
  4993   006F3C                     
  4994                           ; BSR set to: 14
  4995                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  4996   006F3C  8EBD               	bsf	189,7,c	;volatile
  4997                           
  4998                           ;dc_motor.c: 27:     CCPR1H=0;
  4999   006F3E  0E00               	movlw	0
  5000   006F40  6EAA               	movwf	170,c	;volatile
  5001                           
  5002                           ;dc_motor.c: 28:     CCPR2H=0;
  5003   006F42  0E00               	movlw	0
  5004   006F44  6EA6               	movwf	166,c	;volatile
  5005                           
  5006                           ;dc_motor.c: 29:     CCPR3H=0;
  5007   006F46  0E00               	movlw	0
  5008   006F48  010F               	movlb	15	; () banked
  5009   006F4A  6F25               	movwf	37,b	;volatile
  5010                           
  5011                           ;dc_motor.c: 30:     CCPR4H=0;
  5012   006F4C  0E00               	movlw	0
  5013   006F4E  6F21               	movwf	33,b	;volatile
  5014                           
  5015                           ;dc_motor.c: 33:     CCPTMRS0bits.C1TSEL=0;
  5016   006F50  0EFC               	movlw	-4
  5017   006F52  16AD               	andwf	173,f,c	;volatile
  5018                           
  5019                           ;dc_motor.c: 34:     CCPTMRS0bits.C2TSEL=0;
  5020   006F54  0EF3               	movlw	-13
  5021   006F56  16AD               	andwf	173,f,c	;volatile
  5022                           
  5023                           ;dc_motor.c: 35:     CCPTMRS0bits.C3TSEL=0;
  5024   006F58  0ECF               	movlw	-49
  5025   006F5A  16AD               	andwf	173,f,c	;volatile
  5026                           
  5027                           ;dc_motor.c: 36:     CCPTMRS0bits.C4TSEL=0;
  5028   006F5C  0E3F               	movlw	-193
  5029   006F5E  16AD               	andwf	173,f,c	;volatile
  5030   006F60                     
  5031                           ; BSR set to: 15
  5032                           ;dc_motor.c: 39:     CCP1CONbits.FMT=1;
  5033   006F60  88AB               	bsf	171,4,c	;volatile
  5034                           
  5035                           ;dc_motor.c: 40:     CCP1CONbits.CCP1MODE=0b1100;
  5036   006F62  50AB               	movf	171,w,c	;volatile
  5037   006F64  0BF0               	andlw	-16
  5038   006F66  090C               	iorlw	12
  5039   006F68  6EAB               	movwf	171,c	;volatile
  5040   006F6A                     
  5041                           ; BSR set to: 15
  5042                           ;dc_motor.c: 41:     CCP1CONbits.EN=1;
  5043   006F6A  8EAB               	bsf	171,7,c	;volatile
  5044   006F6C                     
  5045                           ; BSR set to: 15
  5046                           ;dc_motor.c: 43:     CCP2CONbits.FMT=1;
  5047   006F6C  88A7               	bsf	167,4,c	;volatile
  5048                           
  5049                           ;dc_motor.c: 44:     CCP2CONbits.CCP2MODE=0b1100;
  5050   006F6E  50A7               	movf	167,w,c	;volatile
  5051   006F70  0BF0               	andlw	-16
  5052   006F72  090C               	iorlw	12
  5053   006F74  6EA7               	movwf	167,c	;volatile
  5054   006F76                     
  5055                           ; BSR set to: 15
  5056                           ;dc_motor.c: 45:     CCP2CONbits.EN=1;
  5057   006F76  8EA7               	bsf	167,7,c	;volatile
  5058   006F78                     
  5059                           ; BSR set to: 15
  5060                           ;dc_motor.c: 47:     CCP3CONbits.FMT=1;
  5061   006F78  8926               	bsf	38,4,b	;volatile
  5062                           
  5063                           ;dc_motor.c: 48:     CCP3CONbits.CCP3MODE=0b1100;
  5064   006F7A  5126               	movf	38,w,b	;volatile
  5065   006F7C  0BF0               	andlw	-16
  5066   006F7E  090C               	iorlw	12
  5067   006F80  6F26               	movwf	38,b	;volatile
  5068   006F82                     
  5069                           ; BSR set to: 15
  5070                           ;dc_motor.c: 49:     CCP3CONbits.EN=1;
  5071   006F82  8F26               	bsf	38,7,b	;volatile
  5072   006F84                     
  5073                           ; BSR set to: 15
  5074                           ;dc_motor.c: 51:     CCP4CONbits.FMT=1;
  5075   006F84  8922               	bsf	34,4,b	;volatile
  5076                           
  5077                           ;dc_motor.c: 52:     CCP4CONbits.CCP4MODE=0b1100;
  5078   006F86  5122               	movf	34,w,b	;volatile
  5079   006F88  0BF0               	andlw	-16
  5080   006F8A  090C               	iorlw	12
  5081   006F8C  6F22               	movwf	34,b	;volatile
  5082   006F8E                     
  5083                           ; BSR set to: 15
  5084                           ;dc_motor.c: 53:     CCP4CONbits.EN=1;
  5085   006F8E  8F22               	bsf	34,7,b	;volatile
  5086                           
  5087                           ;dc_motor.c: 56:     RE2PPS=0x05;
  5088   006F90  0E05               	movlw	5
  5089   006F92  010E               	movlb	14	; () banked
  5090   006F94  6F74               	movwf	116,b	;volatile
  5091                           
  5092                           ;dc_motor.c: 57:     RE4PPS=0x06;
  5093   006F96  0E06               	movlw	6
  5094   006F98  6F76               	movwf	118,b	;volatile
  5095                           
  5096                           ;dc_motor.c: 58:     RC7PPS=0x07;
  5097   006F9A  0E07               	movlw	7
  5098   006F9C  6F69               	movwf	105,b	;volatile
  5099                           
  5100                           ;dc_motor.c: 59:     RG6PPS=0x08;
  5101   006F9E  0E08               	movlw	8
  5102   006FA0  6F88               	movwf	136,b	;volatile
  5103   006FA2                     
  5104                           ; BSR set to: 14
  5105                           ;dc_motor.c: 62:     TRISEbits.TRISE2=0;
  5106   006FA2  9485               	bcf	133,2,c	;volatile
  5107   006FA4                     
  5108                           ; BSR set to: 14
  5109                           ;dc_motor.c: 63:     TRISEbits.TRISE4=0;
  5110   006FA4  9885               	bcf	133,4,c	;volatile
  5111   006FA6                     
  5112                           ; BSR set to: 14
  5113                           ;dc_motor.c: 64:     TRISCbits.TRISC7=0;
  5114   006FA6  9E83               	bcf	131,7,c	;volatile
  5115   006FA8                     
  5116                           ; BSR set to: 14
  5117                           ;dc_motor.c: 65:     TRISGbits.TRISG6=0;
  5118   006FA8  9C87               	bcf	135,6,c	;volatile
  5119   006FAA                     
  5120                           ; BSR set to: 14
  5121                           ;dc_motor.c: 68:     LATEbits.LATE2=0;
  5122   006FAA  947D               	bcf	125,2,c	;volatile
  5123   006FAC                     
  5124                           ; BSR set to: 14
  5125                           ;dc_motor.c: 69:     LATCbits.LATC7=0;
  5126   006FAC  9E7B               	bcf	123,7,c	;volatile
  5127   006FAE                     
  5128                           ; BSR set to: 14
  5129                           ;dc_motor.c: 70:     LATEbits.LATE4=0;
  5130   006FAE  987D               	bcf	125,4,c	;volatile
  5131   006FB0                     
  5132                           ; BSR set to: 14
  5133                           ;dc_motor.c: 71:     LATGbits.LATG6=0;
  5134   006FB0  9C7F               	bcf	127,6,c	;volatile
  5135   006FB2                     
  5136                           ; BSR set to: 14
  5137   006FB2  0012               	return		;funcret
  5138   006FB4                     __end_of_initDCmotorsPWM:
  5139                           	callstack 0
  5140                           
  5141 ;; *************** function _inch_forward *****************
  5142 ;; Defined at:
  5143 ;;		line 227 in file "dc_motor.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  5146 ;;		 -> main@motorL(9), 
  5147 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  5148 ;;		 -> main@motorR(9), 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5162 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5163 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5164 ;;Total ram usage:        6 bytes
  5165 ;; Hardware stack levels used: 1
  5166 ;; Hardware stack levels required when called: 5
  5167 ;; This function calls:
  5168 ;;		_setMotorPWM
  5169 ;;		_stop
  5170 ;; This function is called by:
  5171 ;;		_main
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text21
  5176   006B3E                     __ptext21:
  5177                           	callstack 0
  5178   006B3E                     _inch_forward:
  5179                           	callstack 25
  5180   006B3E                     
  5181                           ;dc_motor.c: 228:     mL->direction = 0;
  5182   006B3E  EE20 F001          	lfsr	2,1
  5183   006B42  5019               	movf	inch_forward@mL^0,w,c
  5184   006B44  26D9               	addwf	fsr2l,f,c
  5185   006B46  501A               	movf	(inch_forward@mL+1)^0,w,c
  5186   006B48  22DA               	addwfc	fsr2h,f,c
  5187   006B4A  6ADF               	clrf	indf2,c
  5188                           
  5189                           ;dc_motor.c: 229:     mR->direction = 0;
  5190   006B4C  EE20 F001          	lfsr	2,1
  5191   006B50  501B               	movf	inch_forward@mR^0,w,c
  5192   006B52  26D9               	addwf	fsr2l,f,c
  5193   006B54  501C               	movf	(inch_forward@mR+1)^0,w,c
  5194   006B56  22DA               	addwfc	fsr2h,f,c
  5195   006B58  6ADF               	clrf	indf2,c
  5196                           
  5197                           ;dc_motor.c: 231:     while ((mL->power) < 20 || (mR->power) < 20){
  5198   006B5A  EFE5  F035         	goto	l262
  5199   006B5E                     l5418:
  5200                           
  5201                           ;dc_motor.c: 232:         if ((mL->power) < 20) (mL->power) += 1;
  5202   006B5E  C019  FFD9         	movff	inch_forward@mL,fsr2l
  5203   006B62  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  5204   006B66  0E14               	movlw	20
  5205   006B68  60DF               	cpfslt	indf2,c
  5206   006B6A  EFB9  F035         	goto	u5591
  5207   006B6E  EFBB  F035         	goto	u5590
  5208   006B72                     u5591:
  5209   006B72  EFC0  F035         	goto	l5422
  5210   006B76                     u5590:
  5211   006B76  C019  FFD9         	movff	inch_forward@mL,fsr2l
  5212   006B7A  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  5213   006B7E  2ADF               	incf	indf2,f,c
  5214   006B80                     l5422:
  5215                           
  5216                           ;dc_motor.c: 233:         if ((mR->power) < 20) (mR->power) += 1;
  5217   006B80  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  5218   006B84  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  5219   006B88  0E14               	movlw	20
  5220   006B8A  60DF               	cpfslt	indf2,c
  5221   006B8C  EFCA  F035         	goto	u5601
  5222   006B90  EFCC  F035         	goto	u5600
  5223   006B94                     u5601:
  5224   006B94  EFD1  F035         	goto	l5426
  5225   006B98                     u5600:
  5226   006B98  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  5227   006B9C  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  5228   006BA0  2ADF               	incf	indf2,f,c
  5229   006BA2                     l5426:
  5230                           
  5231                           ;dc_motor.c: 235:         setMotorPWM(mL);
  5232   006BA2  C019  F00F         	movff	inch_forward@mL,setMotorPWM@m
  5233   006BA6  C01A  F010         	movff	inch_forward@mL+1,setMotorPWM@m+1
  5234   006BAA  EC8C  F031         	call	_setMotorPWM	;wreg free
  5235   006BAE                     
  5236                           ;dc_motor.c: 236:         setMotorPWM(mR);
  5237   006BAE  C01B  F00F         	movff	inch_forward@mR,setMotorPWM@m
  5238   006BB2  C01C  F010         	movff	inch_forward@mR+1,setMotorPWM@m+1
  5239   006BB6  EC8C  F031         	call	_setMotorPWM	;wreg free
  5240   006BBA                     
  5241                           ;dc_motor.c: 237:         _delay((unsigned long)((1)*(64000000/4000.0)));
  5242   006BBA  0E15               	movlw	21
  5243   006BBC  6E1D               	movwf	??_inch_forward^0,c
  5244   006BBE  0EC6               	movlw	198
  5245   006BC0                     u8347:
  5246   006BC0  2EE8               	decfsz	wreg,f,c
  5247   006BC2  D7FE               	bra	u8347
  5248   006BC4  2E1D               	decfsz	??_inch_forward^0,f,c
  5249   006BC6  D7FC               	bra	u8347
  5250   006BC8  D000               	nop2	
  5251   006BCA                     l262:
  5252                           
  5253                           ;dc_motor.c: 231:     while ((mL->power) < 20 || (mR->power) < 20){
  5254   006BCA  C019  FFD9         	movff	inch_forward@mL,fsr2l
  5255   006BCE  C01A  FFDA         	movff	inch_forward@mL+1,fsr2h
  5256   006BD2  0E13               	movlw	19
  5257   006BD4  64DF               	cpfsgt	indf2,c
  5258   006BD6  EFEF  F035         	goto	u5611
  5259   006BDA  EFF1  F035         	goto	u5610
  5260   006BDE                     u5611:
  5261   006BDE  EFAF  F035         	goto	l5418
  5262   006BE2                     u5610:
  5263   006BE2  C01B  FFD9         	movff	inch_forward@mR,fsr2l
  5264   006BE6  C01C  FFDA         	movff	inch_forward@mR+1,fsr2h
  5265   006BEA  0E13               	movlw	19
  5266   006BEC  64DF               	cpfsgt	indf2,c
  5267   006BEE  EFFB  F035         	goto	u5621
  5268   006BF2  EFFD  F035         	goto	u5620
  5269   006BF6                     u5621:
  5270   006BF6  EFAF  F035         	goto	l5418
  5271   006BFA                     u5620:
  5272   006BFA                     
  5273                           ;dc_motor.c: 239:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5274   006BFA  0E05               	movlw	5
  5275   006BFC  6E1E               	movwf	(??_inch_forward+1)^0,c
  5276   006BFE  0E0F               	movlw	15
  5277   006C00  6E1D               	movwf	??_inch_forward^0,c
  5278   006C02  0EF1               	movlw	241
  5279   006C04                     u8357:
  5280   006C04  2EE8               	decfsz	wreg,f,c
  5281   006C06  D7FE               	bra	u8357
  5282   006C08  2E1D               	decfsz	??_inch_forward^0,f,c
  5283   006C0A  D7FC               	bra	u8357
  5284   006C0C  2E1E               	decfsz	(??_inch_forward+1)^0,f,c
  5285   006C0E  D7FA               	bra	u8357
  5286   006C10  0000               	nop	
  5287   006C12                     
  5288                           ;dc_motor.c: 240:     stop(mL, mR);
  5289   006C12  C019  F015         	movff	inch_forward@mL,stop@mL
  5290   006C16  C01A  F016         	movff	inch_forward@mL+1,stop@mL+1
  5291   006C1A  C01B  F017         	movff	inch_forward@mR,stop@mR
  5292   006C1E  C01C  F018         	movff	inch_forward@mR+1,stop@mR+1
  5293   006C22  ECDA  F037         	call	_stop	;wreg free
  5294   006C26  0012               	return		;funcret
  5295   006C28                     __end_of_inch_forward:
  5296                           	callstack 0
  5297                           
  5298 ;; *************** function _stop *****************
  5299 ;; Defined at:
  5300 ;;		line 114 in file "dc_motor.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  5303 ;;		 -> main@motorL(9), 
  5304 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  5305 ;;		 -> main@motorR(9), 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;		None
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  1    wreg      void 
  5310 ;; Registers used:
  5311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5320 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5321 ;;Total ram usage:        4 bytes
  5322 ;; Hardware stack levels used: 1
  5323 ;; Hardware stack levels required when called: 4
  5324 ;; This function calls:
  5325 ;;		_setMotorPWM
  5326 ;; This function is called by:
  5327 ;;		_turn_left_90
  5328 ;;		_turn_right_90
  5329 ;;		_turn_left_135
  5330 ;;		_turn_right_135
  5331 ;;		_reverse_after_read
  5332 ;;		_reverse_one_square
  5333 ;;		_inch_forward
  5334 ;;		_main
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           	psect	text22
  5339   006FB4                     __ptext22:
  5340                           	callstack 0
  5341   006FB4                     _stop:
  5342                           	callstack 25
  5343   006FB4                     
  5344                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  5345   006FB4  EF0E  F038         	goto	l5018
  5346   006FB8                     l5004:
  5347                           
  5348                           ;dc_motor.c: 116:         if ((mL->power) > 0) (mL->power) -= 1;
  5349   006FB8  C015  FFD9         	movff	stop@mL,fsr2l
  5350   006FBC  C016  FFDA         	movff	stop@mL+1,fsr2h
  5351   006FC0  50DF               	movf	indf2,w,c
  5352   006FC2  B4D8               	btfsc	status,2,c
  5353   006FC4  EFE6  F037         	goto	u5141
  5354   006FC8  EFE8  F037         	goto	u5140
  5355   006FCC                     u5141:
  5356   006FCC  EFED  F037         	goto	l5008
  5357   006FD0                     u5140:
  5358   006FD0  C015  FFD9         	movff	stop@mL,fsr2l
  5359   006FD4  C016  FFDA         	movff	stop@mL+1,fsr2h
  5360   006FD8  06DF               	decf	indf2,f,c
  5361   006FDA                     l5008:
  5362                           
  5363                           ;dc_motor.c: 117:         if ((mR->power) > 0) (mR->power) -= 1;
  5364   006FDA  C017  FFD9         	movff	stop@mR,fsr2l
  5365   006FDE  C018  FFDA         	movff	stop@mR+1,fsr2h
  5366   006FE2  50DF               	movf	indf2,w,c
  5367   006FE4  B4D8               	btfsc	status,2,c
  5368   006FE6  EFF7  F037         	goto	u5151
  5369   006FEA  EFF9  F037         	goto	u5150
  5370   006FEE                     u5151:
  5371   006FEE  EFFE  F037         	goto	l5012
  5372   006FF2                     u5150:
  5373   006FF2  C017  FFD9         	movff	stop@mR,fsr2l
  5374   006FF6  C018  FFDA         	movff	stop@mR+1,fsr2h
  5375   006FFA  06DF               	decf	indf2,f,c
  5376   006FFC                     l5012:
  5377                           
  5378                           ;dc_motor.c: 119:         setMotorPWM(mL);
  5379   006FFC  C015  F00F         	movff	stop@mL,setMotorPWM@m
  5380   007000  C016  F010         	movff	stop@mL+1,setMotorPWM@m+1
  5381   007004  EC8C  F031         	call	_setMotorPWM	;wreg free
  5382   007008                     
  5383                           ;dc_motor.c: 120:         setMotorPWM(mR);
  5384   007008  C017  F00F         	movff	stop@mR,setMotorPWM@m
  5385   00700C  C018  F010         	movff	stop@mR+1,setMotorPWM@m+1
  5386   007010  EC8C  F031         	call	_setMotorPWM	;wreg free
  5387   007014                     
  5388                           ;dc_motor.c: 121:         _delay((unsigned long)((25)*(64000000/4000000.0)));
  5389   007014  0E85               	movlw	133
  5390   007016                     u8367:
  5391   007016  2EE8               	decfsz	wreg,f,c
  5392   007018  D7FE               	bra	u8367
  5393   00701A  0000               	nop	
  5394   00701C                     l5018:
  5395                           
  5396                           ;dc_motor.c: 115:     while ((mL->power) > 0 || (mR->power) > 0){
  5397   00701C  C015  FFD9         	movff	stop@mL,fsr2l
  5398   007020  C016  FFDA         	movff	stop@mL+1,fsr2h
  5399   007024  50DF               	movf	indf2,w,c
  5400   007026  A4D8               	btfss	status,2,c
  5401   007028  EF18  F038         	goto	u5161
  5402   00702C  EF1A  F038         	goto	u5160
  5403   007030                     u5161:
  5404   007030  EFDC  F037         	goto	l5004
  5405   007034                     u5160:
  5406   007034  C017  FFD9         	movff	stop@mR,fsr2l
  5407   007038  C018  FFDA         	movff	stop@mR+1,fsr2h
  5408   00703C  50DF               	movf	indf2,w,c
  5409   00703E  A4D8               	btfss	status,2,c
  5410   007040  EF24  F038         	goto	u5171
  5411   007044  EF26  F038         	goto	u5170
  5412   007048                     u5171:
  5413   007048  EFDC  F037         	goto	l5004
  5414   00704C                     u5170:
  5415   00704C  0012               	return		;funcret
  5416   00704E                     __end_of_stop:
  5417                           	callstack 0
  5418                           
  5419 ;; *************** function _get16bitTMR0val *****************
  5420 ;; Defined at:
  5421 ;;		line 27 in file "timers.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;		None
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;  timer_val       2    5[COMRAM] unsigned int 
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  2    1[COMRAM] unsigned int 
  5428 ;; Registers used:
  5429 ;;		wreg, status,2, status,0
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5436 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5437 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5438 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5439 ;;Total ram usage:        6 bytes
  5440 ;; Hardware stack levels used: 1
  5441 ;; Hardware stack levels required when called: 2
  5442 ;; This function calls:
  5443 ;;		Nothing
  5444 ;; This function is called by:
  5445 ;;		_main
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text23
  5450   0075F6                     __ptext23:
  5451                           	callstack 0
  5452   0075F6                     _get16bitTMR0val:
  5453                           	callstack 28
  5454   0075F6                     
  5455                           ;timers.c: 29:     unsigned int timer_val = TMR0L;
  5456   0075F6  CFD3 F006          	movff	4051,get16bitTMR0val@timer_val	;volatile
  5457   0075FA  6A07               	clrf	(get16bitTMR0val@timer_val+1)^0,c
  5458   0075FC                     
  5459                           ;timers.c: 30:     timer_val |= (TMR0H << 8);
  5460   0075FC  50D4               	movf	212,w,c	;volatile
  5461   0075FE  6E05               	movwf	(??_get16bitTMR0val+1)^0,c
  5462   007600  6A04               	clrf	??_get16bitTMR0val^0,c
  5463   007602  5004               	movf	??_get16bitTMR0val^0,w,c
  5464   007604  1206               	iorwf	get16bitTMR0val@timer_val^0,f,c
  5465   007606  5005               	movf	(??_get16bitTMR0val+1)^0,w,c
  5466   007608  1207               	iorwf	(get16bitTMR0val@timer_val+1)^0,f,c
  5467   00760A                     
  5468                           ;timers.c: 31:     return timer_val;
  5469   00760A  C006  F002         	movff	get16bitTMR0val@timer_val,?_get16bitTMR0val
  5470   00760E  C007  F003         	movff	get16bitTMR0val@timer_val+1,?_get16bitTMR0val+1
  5471   007612  0012               	return		;funcret
  5472   007614                     __end_of_get16bitTMR0val:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function _fullSpeedAhead *****************
  5476 ;; Defined at:
  5477 ;;		line 99 in file "dc_motor.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  mL              2   20[COMRAM] PTR struct DC_motor
  5480 ;;		 -> main@motorL(9), 
  5481 ;;  mR              2   22[COMRAM] PTR struct DC_motor
  5482 ;;		 -> main@motorR(9), 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5497 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5498 ;;Total ram usage:        5 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; Hardware stack levels required when called: 4
  5501 ;; This function calls:
  5502 ;;		_setMotorPWM
  5503 ;; This function is called by:
  5504 ;;		_main
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text24
  5509   006CEC                     __ptext24:
  5510                           	callstack 0
  5511   006CEC                     _fullSpeedAhead:
  5512                           	callstack 26
  5513   006CEC                     
  5514                           ;dc_motor.c: 100:     mL->direction = 0;
  5515   006CEC  EE20 F001          	lfsr	2,1
  5516   006CF0  5015               	movf	fullSpeedAhead@mL^0,w,c
  5517   006CF2  26D9               	addwf	fsr2l,f,c
  5518   006CF4  5016               	movf	(fullSpeedAhead@mL+1)^0,w,c
  5519   006CF6  22DA               	addwfc	fsr2h,f,c
  5520   006CF8  6ADF               	clrf	indf2,c
  5521                           
  5522                           ;dc_motor.c: 101:     mR->direction = 0;
  5523   006CFA  EE20 F001          	lfsr	2,1
  5524   006CFE  5017               	movf	fullSpeedAhead@mR^0,w,c
  5525   006D00  26D9               	addwf	fsr2l,f,c
  5526   006D02  5018               	movf	(fullSpeedAhead@mR+1)^0,w,c
  5527   006D04  22DA               	addwfc	fsr2h,f,c
  5528   006D06  6ADF               	clrf	indf2,c
  5529                           
  5530                           ;dc_motor.c: 103:     while ((mL->power) < 70 || (mR->power) < 70){
  5531   006D08  EFBB  F036         	goto	l198
  5532   006D0C                     l5264:
  5533                           
  5534                           ;dc_motor.c: 104:         if ((mL->power) < 70) (mL->power) += 1;
  5535   006D0C  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5536   006D10  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5537   006D14  0E46               	movlw	70
  5538   006D16  60DF               	cpfslt	indf2,c
  5539   006D18  EF90  F036         	goto	u5311
  5540   006D1C  EF92  F036         	goto	u5310
  5541   006D20                     u5311:
  5542   006D20  EF97  F036         	goto	l5268
  5543   006D24                     u5310:
  5544   006D24  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5545   006D28  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5546   006D2C  2ADF               	incf	indf2,f,c
  5547   006D2E                     l5268:
  5548                           
  5549                           ;dc_motor.c: 105:         if ((mR->power) < 70) (mR->power) += 1;
  5550   006D2E  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5551   006D32  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5552   006D36  0E46               	movlw	70
  5553   006D38  60DF               	cpfslt	indf2,c
  5554   006D3A  EFA1  F036         	goto	u5321
  5555   006D3E  EFA3  F036         	goto	u5320
  5556   006D42                     u5321:
  5557   006D42  EFA8  F036         	goto	l5272
  5558   006D46                     u5320:
  5559   006D46  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5560   006D4A  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5561   006D4E  2ADF               	incf	indf2,f,c
  5562   006D50                     l5272:
  5563                           
  5564                           ;dc_motor.c: 107:         setMotorPWM(mL);
  5565   006D50  C015  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  5566   006D54  C016  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  5567   006D58  EC8C  F031         	call	_setMotorPWM	;wreg free
  5568   006D5C                     
  5569                           ;dc_motor.c: 108:         setMotorPWM(mR);
  5570   006D5C  C017  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  5571   006D60  C018  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  5572   006D64  EC8C  F031         	call	_setMotorPWM	;wreg free
  5573   006D68                     
  5574                           ;dc_motor.c: 109:         _delay((unsigned long)((2)*(64000000/4000.0)));
  5575   006D68  0E2A               	movlw	42
  5576   006D6A  6E19               	movwf	??_fullSpeedAhead^0,c
  5577   006D6C  0E8E               	movlw	142
  5578   006D6E                     u8377:
  5579   006D6E  2EE8               	decfsz	wreg,f,c
  5580   006D70  D7FE               	bra	u8377
  5581   006D72  2E19               	decfsz	??_fullSpeedAhead^0,f,c
  5582   006D74  D7FC               	bra	u8377
  5583   006D76                     l198:
  5584                           
  5585                           ;dc_motor.c: 103:     while ((mL->power) < 70 || (mR->power) < 70){
  5586   006D76  C015  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5587   006D7A  C016  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5588   006D7E  0E45               	movlw	69
  5589   006D80  64DF               	cpfsgt	indf2,c
  5590   006D82  EFC5  F036         	goto	u5331
  5591   006D86  EFC7  F036         	goto	u5330
  5592   006D8A                     u5331:
  5593   006D8A  EF86  F036         	goto	l5264
  5594   006D8E                     u5330:
  5595   006D8E  C017  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5596   006D92  C018  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5597   006D96  0E45               	movlw	69
  5598   006D98  64DF               	cpfsgt	indf2,c
  5599   006D9A  EFD1  F036         	goto	u5341
  5600   006D9E  EFD3  F036         	goto	u5340
  5601   006DA2                     u5341:
  5602   006DA2  EF86  F036         	goto	l5264
  5603   006DA6                     u5340:
  5604   006DA6  0012               	return		;funcret
  5605   006DA8                     __end_of_fullSpeedAhead:
  5606                           	callstack 0
  5607                           
  5608 ;; *************** function _setMotorPWM *****************
  5609 ;; Defined at:
  5610 ;;		line 76 in file "dc_motor.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;  m               2   14[COMRAM] PTR struct DC_motor
  5613 ;;		 -> main@motorR(9), main@motorL(9), 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  negDuty         1   19[COMRAM] unsigned char 
  5616 ;;  posDuty         1   18[COMRAM] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      void 
  5619 ;; Registers used:
  5620 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5627 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5629 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5630 ;;Total ram usage:        6 bytes
  5631 ;; Hardware stack levels used: 1
  5632 ;; Hardware stack levels required when called: 3
  5633 ;; This function calls:
  5634 ;;		___lwdiv
  5635 ;;		___wmul
  5636 ;; This function is called by:
  5637 ;;		_fullSpeedAhead
  5638 ;;		_stop
  5639 ;;		_turn_left_90
  5640 ;;		_turn_right_90
  5641 ;;		_turn_left_135
  5642 ;;		_turn_right_135
  5643 ;;		_reverse_after_read
  5644 ;;		_reverse_one_square
  5645 ;;		_inch_forward
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text25
  5650   006318                     __ptext25:
  5651                           	callstack 0
  5652   006318                     _setMotorPWM:
  5653                           	callstack 25
  5654   006318                     
  5655                           ;dc_motor.c: 76: void setMotorPWM(struct DC_motor *m);dc_motor.c: 77: {;dc_motor.c: 78: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 80:     if(m->brakemode) {
  5656   006318  EE20 F002          	lfsr	2,2
  5657   00631C  500F               	movf	setMotorPWM@m^0,w,c
  5658   00631E  26D9               	addwf	fsr2l,f,c
  5659   006320  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5660   006322  22DA               	addwfc	fsr2h,f,c
  5661   006324  50DF               	movf	indf2,w,c
  5662   006326  B4D8               	btfsc	status,2,c
  5663   006328  EF98  F031         	goto	u3981
  5664   00632C  EF9A  F031         	goto	u3980
  5665   006330                     u3981:
  5666   006330  EFCE  F031         	goto	l4226
  5667   006334                     u3980:
  5668   006334                     
  5669                           ;dc_motor.c: 81:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  5670   006334  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  5671   006338  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5672   00633C  50DF               	movf	indf2,w,c
  5673   00633E  6E11               	movwf	??_setMotorPWM^0,c
  5674   006340  5011               	movf	??_setMotorPWM^0,w,c
  5675   006342  6E02               	movwf	___wmul@multiplier^0,c
  5676   006344  6A03               	clrf	(___wmul@multiplier+1)^0,c
  5677   006346  EE20 F003          	lfsr	2,3
  5678   00634A  500F               	movf	setMotorPWM@m^0,w,c
  5679   00634C  26D9               	addwf	fsr2l,f,c
  5680   00634E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5681   006350  22DA               	addwfc	fsr2h,f,c
  5682   006352  CFDE F004          	movff	postinc2,___wmul@multiplicand
  5683   006356  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  5684   00635A  ECB9  F03A         	call	___wmul	;wreg free
  5685   00635E  C002  F008         	movff	?___wmul,___lwdiv@dividend
  5686   006362  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  5687   006366  0E00               	movlw	0
  5688   006368  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  5689   00636A  0E64               	movlw	100
  5690   00636C  6E0A               	movwf	___lwdiv@divisor^0,c
  5691   00636E  EC71  F038         	call	___lwdiv	;wreg free
  5692   006372  EE20 F003          	lfsr	2,3
  5693   006376  500F               	movf	setMotorPWM@m^0,w,c
  5694   006378  26D9               	addwf	fsr2l,f,c
  5695   00637A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5696   00637C  22DA               	addwfc	fsr2h,f,c
  5697   00637E  50DF               	movf	indf2,w,c
  5698   006380  6E12               	movwf	(??_setMotorPWM+1)^0,c
  5699   006382  5008               	movf	?___lwdiv^0,w,c
  5700   006384  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  5701   006386  6E13               	movwf	setMotorPWM@posDuty^0,c
  5702   006388                     
  5703                           ;dc_motor.c: 82:         negDuty=m->PWMperiod;
  5704   006388  EE20 F003          	lfsr	2,3
  5705   00638C  500F               	movf	setMotorPWM@m^0,w,c
  5706   00638E  26D9               	addwf	fsr2l,f,c
  5707   006390  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5708   006392  22DA               	addwfc	fsr2h,f,c
  5709   006394  50DF               	movf	indf2,w,c
  5710   006396  6E14               	movwf	setMotorPWM@negDuty^0,c
  5711                           
  5712                           ;dc_motor.c: 83:     }
  5713   006398  EFF1  F031         	goto	l4230
  5714   00639C                     l4226:
  5715                           
  5716                           ;dc_motor.c: 85:         posDuty=0;
  5717   00639C  0E00               	movlw	0
  5718   00639E  6E13               	movwf	setMotorPWM@posDuty^0,c
  5719   0063A0                     
  5720                           ;dc_motor.c: 86:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  5721   0063A0  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  5722   0063A4  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5723   0063A8  50DF               	movf	indf2,w,c
  5724   0063AA  6E11               	movwf	??_setMotorPWM^0,c
  5725   0063AC  5011               	movf	??_setMotorPWM^0,w,c
  5726   0063AE  6E02               	movwf	___wmul@multiplier^0,c
  5727   0063B0  6A03               	clrf	(___wmul@multiplier+1)^0,c
  5728   0063B2  EE20 F003          	lfsr	2,3
  5729   0063B6  500F               	movf	setMotorPWM@m^0,w,c
  5730   0063B8  26D9               	addwf	fsr2l,f,c
  5731   0063BA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5732   0063BC  22DA               	addwfc	fsr2h,f,c
  5733   0063BE  CFDE F004          	movff	postinc2,___wmul@multiplicand
  5734   0063C2  CFDD F005          	movff	postdec2,___wmul@multiplicand+1
  5735   0063C6  ECB9  F03A         	call	___wmul	;wreg free
  5736   0063CA  C002  F008         	movff	?___wmul,___lwdiv@dividend
  5737   0063CE  C003  F009         	movff	?___wmul+1,___lwdiv@dividend+1
  5738   0063D2  0E00               	movlw	0
  5739   0063D4  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
  5740   0063D6  0E64               	movlw	100
  5741   0063D8  6E0A               	movwf	___lwdiv@divisor^0,c
  5742   0063DA  EC71  F038         	call	___lwdiv	;wreg free
  5743   0063DE  5008               	movf	?___lwdiv^0,w,c
  5744   0063E0  6E14               	movwf	setMotorPWM@negDuty^0,c
  5745   0063E2                     l4230:
  5746                           
  5747                           ;dc_motor.c: 89:     if (m->direction) {
  5748   0063E2  EE20 F001          	lfsr	2,1
  5749   0063E6  500F               	movf	setMotorPWM@m^0,w,c
  5750   0063E8  26D9               	addwf	fsr2l,f,c
  5751   0063EA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5752   0063EC  22DA               	addwfc	fsr2h,f,c
  5753   0063EE  50DF               	movf	indf2,w,c
  5754   0063F0  B4D8               	btfsc	status,2,c
  5755   0063F2  EFFD  F031         	goto	u3991
  5756   0063F6  EFFF  F031         	goto	u3990
  5757   0063FA                     u3991:
  5758   0063FA  EF21  F032         	goto	l4234
  5759   0063FE                     u3990:
  5760   0063FE                     
  5761                           ;dc_motor.c: 90:         *(m->posDutyHighByte)=posDuty;
  5762   0063FE  EE20 F005          	lfsr	2,5
  5763   006402  500F               	movf	setMotorPWM@m^0,w,c
  5764   006404  26D9               	addwf	fsr2l,f,c
  5765   006406  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5766   006408  22DA               	addwfc	fsr2h,f,c
  5767   00640A  CFDE F011          	movff	postinc2,??_setMotorPWM
  5768   00640E  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5769   006412  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5770   006416  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5771   00641A  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  5772                           
  5773                           ;dc_motor.c: 91:         *(m->negDutyHighByte)=negDuty;
  5774   00641E  EE20 F007          	lfsr	2,7
  5775   006422  500F               	movf	setMotorPWM@m^0,w,c
  5776   006424  26D9               	addwf	fsr2l,f,c
  5777   006426  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5778   006428  22DA               	addwfc	fsr2h,f,c
  5779   00642A  CFDE F011          	movff	postinc2,??_setMotorPWM
  5780   00642E  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5781   006432  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5782   006436  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5783   00643A  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  5784                           
  5785                           ;dc_motor.c: 92:     } else {
  5786   00643E  EF41  F032         	goto	l195
  5787   006442                     l4234:
  5788                           
  5789                           ;dc_motor.c: 93:         *(m->posDutyHighByte)=negDuty;
  5790   006442  EE20 F005          	lfsr	2,5
  5791   006446  500F               	movf	setMotorPWM@m^0,w,c
  5792   006448  26D9               	addwf	fsr2l,f,c
  5793   00644A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5794   00644C  22DA               	addwfc	fsr2h,f,c
  5795   00644E  CFDE F011          	movff	postinc2,??_setMotorPWM
  5796   006452  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5797   006456  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5798   00645A  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5799   00645E  C014  FFDF         	movff	setMotorPWM@negDuty,indf2
  5800                           
  5801                           ;dc_motor.c: 94:         *(m->negDutyHighByte)=posDuty;
  5802   006462  EE20 F007          	lfsr	2,7
  5803   006466  500F               	movf	setMotorPWM@m^0,w,c
  5804   006468  26D9               	addwf	fsr2l,f,c
  5805   00646A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  5806   00646C  22DA               	addwfc	fsr2h,f,c
  5807   00646E  CFDE F011          	movff	postinc2,??_setMotorPWM
  5808   006472  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  5809   006476  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  5810   00647A  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5811   00647E  C013  FFDF         	movff	setMotorPWM@posDuty,indf2
  5812   006482                     l195:
  5813   006482  0012               	return		;funcret
  5814   006484                     __end_of_setMotorPWM:
  5815                           	callstack 0
  5816                           
  5817 ;; *************** function ___wmul *****************
  5818 ;; Defined at:
  5819 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  multiplier      2    1[COMRAM] unsigned int 
  5822 ;;  multiplicand    2    3[COMRAM] unsigned int 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  product         2    5[COMRAM] unsigned int 
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  2    1[COMRAM] unsigned int 
  5827 ;; Registers used:
  5828 ;;		wreg, status,2, status,0, prodl, prodh
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5835 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5837 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5838 ;;Total ram usage:        6 bytes
  5839 ;; Hardware stack levels used: 1
  5840 ;; Hardware stack levels required when called: 2
  5841 ;; This function calls:
  5842 ;;		Nothing
  5843 ;; This function is called by:
  5844 ;;		_setMotorPWM
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text26
  5849   007572                     __ptext26:
  5850                           	callstack 0
  5851   007572                     ___wmul:
  5852                           	callstack 25
  5853   007572  5002               	movf	___wmul@multiplier^0,w,c
  5854   007574  0204               	mulwf	___wmul@multiplicand^0,c
  5855   007576  CFF3 F006          	movff	prodl,___wmul@product
  5856   00757A  CFF4 F007          	movff	prodh,___wmul@product+1
  5857   00757E  5002               	movf	___wmul@multiplier^0,w,c
  5858   007580  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  5859   007582  50F3               	movf	243,w,c
  5860   007584  2607               	addwf	(___wmul@product+1)^0,f,c
  5861   007586  5003               	movf	(___wmul@multiplier+1)^0,w,c
  5862   007588  0204               	mulwf	___wmul@multiplicand^0,c
  5863   00758A  50F3               	movf	243,w,c
  5864   00758C  2607               	addwf	(___wmul@product+1)^0,f,c
  5865   00758E  C006  F002         	movff	___wmul@product,?___wmul
  5866   007592  C007  F003         	movff	___wmul@product+1,?___wmul+1
  5867   007596  0012               	return		;funcret
  5868   007598                     __end_of___wmul:
  5869                           	callstack 0
  5870                           
  5871 ;; *************** function ___lwdiv *****************
  5872 ;; Defined at:
  5873 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;  dividend        2    7[COMRAM] unsigned int 
  5876 ;;  divisor         2    9[COMRAM] unsigned int 
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  quotient        2   11[COMRAM] unsigned int 
  5879 ;;  counter         1   13[COMRAM] unsigned char 
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  2    7[COMRAM] unsigned int 
  5882 ;; Registers used:
  5883 ;;		wreg, status,2, status,0
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5889 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5890 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5892 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5893 ;;Total ram usage:        7 bytes
  5894 ;; Hardware stack levels used: 1
  5895 ;; Hardware stack levels required when called: 2
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_setMotorPWM
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text27
  5904   0070E2                     __ptext27:
  5905                           	callstack 0
  5906   0070E2                     ___lwdiv:
  5907                           	callstack 25
  5908   0070E2  0E00               	movlw	0
  5909   0070E4  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  5910   0070E6  0E00               	movlw	0
  5911   0070E8  6E0C               	movwf	___lwdiv@quotient^0,c
  5912   0070EA  500A               	movf	___lwdiv@divisor^0,w,c
  5913   0070EC  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5914   0070EE  B4D8               	btfsc	status,2,c
  5915   0070F0  EF7C  F038         	goto	u3741
  5916   0070F4  EF7E  F038         	goto	u3740
  5917   0070F8                     u3741:
  5918   0070F8  EFA6  F038         	goto	l1053
  5919   0070FC                     u3740:
  5920   0070FC  0E01               	movlw	1
  5921   0070FE  6E0E               	movwf	___lwdiv@counter^0,c
  5922   007100  EF86  F038         	goto	l4092
  5923   007104                     l4090:
  5924   007104  90D8               	bcf	status,0,c
  5925   007106  360A               	rlcf	___lwdiv@divisor^0,f,c
  5926   007108  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5927   00710A  2A0E               	incf	___lwdiv@counter^0,f,c
  5928   00710C                     l4092:
  5929   00710C  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  5930   00710E  EF8B  F038         	goto	u3751
  5931   007112  EF8D  F038         	goto	u3750
  5932   007116                     u3751:
  5933   007116  EF82  F038         	goto	l4090
  5934   00711A                     u3750:
  5935   00711A                     l4094:
  5936   00711A  90D8               	bcf	status,0,c
  5937   00711C  360C               	rlcf	___lwdiv@quotient^0,f,c
  5938   00711E  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5939   007120  500A               	movf	___lwdiv@divisor^0,w,c
  5940   007122  5C08               	subwf	___lwdiv@dividend^0,w,c
  5941   007124  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  5942   007126  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5943   007128  A0D8               	btfss	status,0,c
  5944   00712A  EF99  F038         	goto	u3761
  5945   00712E  EF9B  F038         	goto	u3760
  5946   007132                     u3761:
  5947   007132  EFA0  F038         	goto	l4102
  5948   007136                     u3760:
  5949   007136  500A               	movf	___lwdiv@divisor^0,w,c
  5950   007138  5E08               	subwf	___lwdiv@dividend^0,f,c
  5951   00713A  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  5952   00713C  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5953   00713E  800C               	bsf	___lwdiv@quotient^0,0,c
  5954   007140                     l4102:
  5955   007140  90D8               	bcf	status,0,c
  5956   007142  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5957   007144  320A               	rrcf	___lwdiv@divisor^0,f,c
  5958   007146  2E0E               	decfsz	___lwdiv@counter^0,f,c
  5959   007148  EF8D  F038         	goto	l4094
  5960   00714C                     l1053:
  5961   00714C  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  5962   007150  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5963   007154  0012               	return		;funcret
  5964   007156                     __end_of___lwdiv:
  5965                           	callstack 0
  5966                           
  5967 ;; *************** function _decide_action *****************
  5968 ;; Defined at:
  5969 ;;		line 114 in file "color.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;		None
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  i               1   60[BANK0 ] unsigned char 
  5974 ;;  rgb_comp       32   23[BANK0 ] float [8]
  5975 ;;  blue_r          4   81[BANK0 ] float 
  5976 ;;  green_r         4   77[BANK0 ] float 
  5977 ;;  red_r           4   73[BANK0 ] float 
  5978 ;;  blue            4   69[BANK0 ] float 
  5979 ;;  green           4   65[BANK0 ] float 
  5980 ;;  red             4   61[BANK0 ] float 
  5981 ;;  total           4   56[BANK0 ] float 
  5982 ;;  action          1   55[BANK0 ] unsigned char 
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      unsigned char 
  5985 ;; Registers used:
  5986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5993 ;;      Locals:         0      94       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5994 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5995 ;;      Totals:         0      96       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5996 ;;Total ram usage:       96 bytes
  5997 ;; Hardware stack levels used: 1
  5998 ;; Hardware stack levels required when called: 5
  5999 ;; This function calls:
  6000 ;;		___fladd
  6001 ;;		___fldiv
  6002 ;;		___flge
  6003 ;;		___flsub
  6004 ;;		___xxtofl
  6005 ;;		_color_read_Blue
  6006 ;;		_color_read_Green
  6007 ;;		_color_read_Red
  6008 ;;		_color_writetoaddr
  6009 ;;		_powf
  6010 ;;		_sqrtf
  6011 ;; This function is called by:
  6012 ;;		_main
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           	psect	text28
  6017   003302                     __ptext28:
  6018                           	callstack 0
  6019   003302                     _decide_action:
  6020                           	callstack 25
  6021   003302                     
  6022                           ;color.c: 132:     float red, green, blue;;color.c: 133:     float red_r, green_r, blue_
      +                          r;;color.c: 134:     float rgb_comp[8];;color.c: 135:     char action;;color.c: 138:    
      +                           color_writetoaddr(0x01, 0xD5);
  6023   003302  0ED5               	movlw	213
  6024   003304  6E04               	movwf	color_writetoaddr@value^0,c
  6025   003306  0E01               	movlw	1
  6026   003308  ECCC  F03A         	call	_color_writetoaddr
  6027                           
  6028                           ;color.c: 139:     color_writetoaddr(0x03, 0xAB);
  6029   00330C  0EAB               	movlw	171
  6030   00330E  6E04               	movwf	color_writetoaddr@value^0,c
  6031   003310  0E03               	movlw	3
  6032   003312  ECCC  F03A         	call	_color_writetoaddr
  6033   003316                     
  6034                           ;color.c: 140:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6035   003316  0E11               	movlw	17
  6036   003318  0100               	movlb	0	; () banked
  6037   00331A  6F72               	movwf	(??_decide_action+1)& (0+255),b
  6038   00331C  0E3C               	movlw	60
  6039   00331E  6F71               	movwf	??_decide_action& (0+255),b
  6040   003320  0ECB               	movlw	203
  6041   003322                     u8387:
  6042   003322  2EE8               	decfsz	wreg,f,c
  6043   003324  D7FE               	bra	u8387
  6044   003326  2F71               	decfsz	??_decide_action& (0+255),f,b
  6045   003328  D7FC               	bra	u8387
  6046   00332A  2F72               	decfsz	(??_decide_action+1)& (0+255),f,b
  6047   00332C  D7FA               	bra	u8387
  6048   00332E                     
  6049                           ;color.c: 142:     red = color_read_Red();
  6050   00332E  ECDE  F038         	call	_color_read_Red	;wreg free
  6051   003332  C006  F00D         	movff	?_color_read_Red,___xxtofl@val
  6052   003336  C007  F00E         	movff	?_color_read_Red+1,___xxtofl@val+1
  6053   00333A  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6054   00333C  6A10               	clrf	(___xxtofl@val+3)^0,c
  6055   00333E  0E00               	movlw	0
  6056   003340  ECB2  F030         	call	___xxtofl
  6057   003344  C00D  F09D         	movff	?___xxtofl,decide_action@red
  6058   003348  C00E  F09E         	movff	?___xxtofl+1,decide_action@red+1
  6059   00334C  C00F  F09F         	movff	?___xxtofl+2,decide_action@red+2
  6060   003350  C010  F0A0         	movff	?___xxtofl+3,decide_action@red+3
  6061   003354                     
  6062                           ;color.c: 143:     green = color_read_Green();
  6063   003354  EC06  F039         	call	_color_read_Green	;wreg free
  6064   003358  C006  F00D         	movff	?_color_read_Green,___xxtofl@val
  6065   00335C  C007  F00E         	movff	?_color_read_Green+1,___xxtofl@val+1
  6066   003360  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6067   003362  6A10               	clrf	(___xxtofl@val+3)^0,c
  6068   003364  0E00               	movlw	0
  6069   003366  ECB2  F030         	call	___xxtofl
  6070   00336A  C00D  F0A1         	movff	?___xxtofl,decide_action@green
  6071   00336E  C00E  F0A2         	movff	?___xxtofl+1,decide_action@green+1
  6072   003372  C00F  F0A3         	movff	?___xxtofl+2,decide_action@green+2
  6073   003376  C010  F0A4         	movff	?___xxtofl+3,decide_action@green+3
  6074   00337A                     
  6075                           ;color.c: 144:     blue = color_read_Blue();
  6076   00337A  EC2E  F039         	call	_color_read_Blue	;wreg free
  6077   00337E  C006  F00D         	movff	?_color_read_Blue,___xxtofl@val
  6078   003382  C007  F00E         	movff	?_color_read_Blue+1,___xxtofl@val+1
  6079   003386  6A0F               	clrf	(___xxtofl@val+2)^0,c
  6080   003388  6A10               	clrf	(___xxtofl@val+3)^0,c
  6081   00338A  0E00               	movlw	0
  6082   00338C  ECB2  F030         	call	___xxtofl
  6083   003390  C00D  F0A5         	movff	?___xxtofl,decide_action@blue
  6084   003394  C00E  F0A6         	movff	?___xxtofl+1,decide_action@blue+1
  6085   003398  C00F  F0A7         	movff	?___xxtofl+2,decide_action@blue+2
  6086   00339C  C010  F0A8         	movff	?___xxtofl+3,decide_action@blue+3
  6087   0033A0                     
  6088                           ;color.c: 147:     color_writetoaddr(0x01, 0xFF);
  6089   0033A0  0EFF               	movlw	255
  6090   0033A2  6E04               	movwf	color_writetoaddr@value^0,c
  6091   0033A4  0E01               	movlw	1
  6092   0033A6  ECCC  F03A         	call	_color_writetoaddr
  6093   0033AA                     
  6094                           ;color.c: 148:     color_writetoaddr(0x03, 0xFF);
  6095   0033AA  0EFF               	movlw	255
  6096   0033AC  6E04               	movwf	color_writetoaddr@value^0,c
  6097   0033AE  0E03               	movlw	3
  6098   0033B0  ECCC  F03A         	call	_color_writetoaddr
  6099   0033B4                     
  6100                           ;color.c: 151:     if(red < 666){red = 0;} else{red -= 699;}
  6101   0033B4  C09D  F04C         	movff	decide_action@red,___flge@ff1
  6102   0033B8  C09E  F04D         	movff	decide_action@red+1,___flge@ff1+1
  6103   0033BC  C09F  F04E         	movff	decide_action@red+2,___flge@ff1+2
  6104   0033C0  C0A0  F04F         	movff	decide_action@red+3,___flge@ff1+3
  6105   0033C4  0E00               	movlw	0
  6106   0033C6  6E50               	movwf	___flge@ff2^0,c
  6107   0033C8  0E80               	movlw	128
  6108   0033CA  6E51               	movwf	(___flge@ff2+1)^0,c
  6109   0033CC  0E26               	movlw	38
  6110   0033CE  6E52               	movwf	(___flge@ff2+2)^0,c
  6111   0033D0  0E44               	movlw	68
  6112   0033D2  6E53               	movwf	(___flge@ff2+3)^0,c
  6113   0033D4  EC47  F033         	call	___flge	;wreg free
  6114   0033D8  B0D8               	btfsc	status,0,c
  6115   0033DA  EFF1  F019         	goto	u7781
  6116   0033DE  EFF3  F019         	goto	u7780
  6117   0033E2                     u7781:
  6118   0033E2  EFFE  F019         	goto	l7468
  6119   0033E6                     u7780:
  6120   0033E6  0E00               	movlw	0
  6121   0033E8  0100               	movlb	0	; () banked
  6122   0033EA  6F9D               	movwf	decide_action@red& (0+255),b
  6123   0033EC  0E00               	movlw	0
  6124   0033EE  6F9E               	movwf	(decide_action@red+1)& (0+255),b
  6125   0033F0  0E00               	movlw	0
  6126   0033F2  6F9F               	movwf	(decide_action@red+2)& (0+255),b
  6127   0033F4  0E00               	movlw	0
  6128   0033F6  6FA0               	movwf	(decide_action@red+3)& (0+255),b
  6129   0033F8  EF18  F01A         	goto	l69
  6130   0033FC                     l7468:
  6131   0033FC  C09D  F044         	movff	decide_action@red,___flsub@b
  6132   003400  C09E  F045         	movff	decide_action@red+1,___flsub@b+1
  6133   003404  C09F  F046         	movff	decide_action@red+2,___flsub@b+2
  6134   003408  C0A0  F047         	movff	decide_action@red+3,___flsub@b+3
  6135   00340C  0E00               	movlw	0
  6136   00340E  6E48               	movwf	___flsub@a^0,c
  6137   003410  0EC0               	movlw	192
  6138   003412  6E49               	movwf	(___flsub@a+1)^0,c
  6139   003414  0E2E               	movlw	46
  6140   003416  6E4A               	movwf	(___flsub@a+2)^0,c
  6141   003418  0E44               	movlw	68
  6142   00341A  6E4B               	movwf	(___flsub@a+3)^0,c
  6143   00341C  ECA3  F039         	call	___flsub	;wreg free
  6144   003420  C044  F09D         	movff	?___flsub,decide_action@red
  6145   003424  C045  F09E         	movff	?___flsub+1,decide_action@red+1
  6146   003428  C046  F09F         	movff	?___flsub+2,decide_action@red+2
  6147   00342C  C047  F0A0         	movff	?___flsub+3,decide_action@red+3
  6148   003430                     l69:
  6149                           
  6150                           ;color.c: 152:     if(green < 446){green = 0;} else{green -= 443;}
  6151   003430  C0A1  F04C         	movff	decide_action@green,___flge@ff1
  6152   003434  C0A2  F04D         	movff	decide_action@green+1,___flge@ff1+1
  6153   003438  C0A3  F04E         	movff	decide_action@green+2,___flge@ff1+2
  6154   00343C  C0A4  F04F         	movff	decide_action@green+3,___flge@ff1+3
  6155   003440  0E00               	movlw	0
  6156   003442  6E50               	movwf	___flge@ff2^0,c
  6157   003444  0E00               	movlw	0
  6158   003446  6E51               	movwf	(___flge@ff2+1)^0,c
  6159   003448  0EDF               	movlw	223
  6160   00344A  6E52               	movwf	(___flge@ff2+2)^0,c
  6161   00344C  0E43               	movlw	67
  6162   00344E  6E53               	movwf	(___flge@ff2+3)^0,c
  6163   003450  EC47  F033         	call	___flge	;wreg free
  6164   003454  B0D8               	btfsc	status,0,c
  6165   003456  EF2F  F01A         	goto	u7791
  6166   00345A  EF31  F01A         	goto	u7790
  6167   00345E                     u7791:
  6168   00345E  EF3C  F01A         	goto	l7472
  6169   003462                     u7790:
  6170   003462  0E00               	movlw	0
  6171   003464  0100               	movlb	0	; () banked
  6172   003466  6FA1               	movwf	decide_action@green& (0+255),b
  6173   003468  0E00               	movlw	0
  6174   00346A  6FA2               	movwf	(decide_action@green+1)& (0+255),b
  6175   00346C  0E00               	movlw	0
  6176   00346E  6FA3               	movwf	(decide_action@green+2)& (0+255),b
  6177   003470  0E00               	movlw	0
  6178   003472  6FA4               	movwf	(decide_action@green+3)& (0+255),b
  6179   003474  EF56  F01A         	goto	l71
  6180   003478                     l7472:
  6181   003478  C0A1  F044         	movff	decide_action@green,___flsub@b
  6182   00347C  C0A2  F045         	movff	decide_action@green+1,___flsub@b+1
  6183   003480  C0A3  F046         	movff	decide_action@green+2,___flsub@b+2
  6184   003484  C0A4  F047         	movff	decide_action@green+3,___flsub@b+3
  6185   003488  0E00               	movlw	0
  6186   00348A  6E48               	movwf	___flsub@a^0,c
  6187   00348C  0E80               	movlw	128
  6188   00348E  6E49               	movwf	(___flsub@a+1)^0,c
  6189   003490  0EDD               	movlw	221
  6190   003492  6E4A               	movwf	(___flsub@a+2)^0,c
  6191   003494  0E43               	movlw	67
  6192   003496  6E4B               	movwf	(___flsub@a+3)^0,c
  6193   003498  ECA3  F039         	call	___flsub	;wreg free
  6194   00349C  C044  F0A1         	movff	?___flsub,decide_action@green
  6195   0034A0  C045  F0A2         	movff	?___flsub+1,decide_action@green+1
  6196   0034A4  C046  F0A3         	movff	?___flsub+2,decide_action@green+2
  6197   0034A8  C047  F0A4         	movff	?___flsub+3,decide_action@green+3
  6198   0034AC                     l71:
  6199                           
  6200                           ;color.c: 153:     if(blue < 295){blue = 0;} else{blue -= 315;}
  6201   0034AC  C0A5  F04C         	movff	decide_action@blue,___flge@ff1
  6202   0034B0  C0A6  F04D         	movff	decide_action@blue+1,___flge@ff1+1
  6203   0034B4  C0A7  F04E         	movff	decide_action@blue+2,___flge@ff1+2
  6204   0034B8  C0A8  F04F         	movff	decide_action@blue+3,___flge@ff1+3
  6205   0034BC  0E00               	movlw	0
  6206   0034BE  6E50               	movwf	___flge@ff2^0,c
  6207   0034C0  0E80               	movlw	128
  6208   0034C2  6E51               	movwf	(___flge@ff2+1)^0,c
  6209   0034C4  0E93               	movlw	147
  6210   0034C6  6E52               	movwf	(___flge@ff2+2)^0,c
  6211   0034C8  0E43               	movlw	67
  6212   0034CA  6E53               	movwf	(___flge@ff2+3)^0,c
  6213   0034CC  EC47  F033         	call	___flge	;wreg free
  6214   0034D0  B0D8               	btfsc	status,0,c
  6215   0034D2  EF6D  F01A         	goto	u7801
  6216   0034D6  EF6F  F01A         	goto	u7800
  6217   0034DA                     u7801:
  6218   0034DA  EF7A  F01A         	goto	l7476
  6219   0034DE                     u7800:
  6220   0034DE  0E00               	movlw	0
  6221   0034E0  0100               	movlb	0	; () banked
  6222   0034E2  6FA5               	movwf	decide_action@blue& (0+255),b
  6223   0034E4  0E00               	movlw	0
  6224   0034E6  6FA6               	movwf	(decide_action@blue+1)& (0+255),b
  6225   0034E8  0E00               	movlw	0
  6226   0034EA  6FA7               	movwf	(decide_action@blue+2)& (0+255),b
  6227   0034EC  0E00               	movlw	0
  6228   0034EE  6FA8               	movwf	(decide_action@blue+3)& (0+255),b
  6229   0034F0  EF94  F01A         	goto	l73
  6230   0034F4                     l7476:
  6231   0034F4  C0A5  F044         	movff	decide_action@blue,___flsub@b
  6232   0034F8  C0A6  F045         	movff	decide_action@blue+1,___flsub@b+1
  6233   0034FC  C0A7  F046         	movff	decide_action@blue+2,___flsub@b+2
  6234   003500  C0A8  F047         	movff	decide_action@blue+3,___flsub@b+3
  6235   003504  0E00               	movlw	0
  6236   003506  6E48               	movwf	___flsub@a^0,c
  6237   003508  0E80               	movlw	128
  6238   00350A  6E49               	movwf	(___flsub@a+1)^0,c
  6239   00350C  0E9D               	movlw	157
  6240   00350E  6E4A               	movwf	(___flsub@a+2)^0,c
  6241   003510  0E43               	movlw	67
  6242   003512  6E4B               	movwf	(___flsub@a+3)^0,c
  6243   003514  ECA3  F039         	call	___flsub	;wreg free
  6244   003518  C044  F0A5         	movff	?___flsub,decide_action@blue
  6245   00351C  C045  F0A6         	movff	?___flsub+1,decide_action@blue+1
  6246   003520  C046  F0A7         	movff	?___flsub+2,decide_action@blue+2
  6247   003524  C047  F0A8         	movff	?___flsub+3,decide_action@blue+3
  6248   003528                     l73:
  6249                           
  6250                           ;color.c: 155:     red = red/1621;
  6251   003528  C09D  F02B         	movff	decide_action@red,___fldiv@b
  6252   00352C  C09E  F02C         	movff	decide_action@red+1,___fldiv@b+1
  6253   003530  C09F  F02D         	movff	decide_action@red+2,___fldiv@b+2
  6254   003534  C0A0  F02E         	movff	decide_action@red+3,___fldiv@b+3
  6255   003538  0E00               	movlw	0
  6256   00353A  6E2F               	movwf	___fldiv@a^0,c
  6257   00353C  0EA0               	movlw	160
  6258   00353E  6E30               	movwf	(___fldiv@a+1)^0,c
  6259   003540  0ECA               	movlw	202
  6260   003542  6E31               	movwf	(___fldiv@a+2)^0,c
  6261   003544  0E44               	movlw	68
  6262   003546  6E32               	movwf	(___fldiv@a+3)^0,c
  6263   003548  ECE0  F02C         	call	___fldiv	;wreg free
  6264   00354C  C02B  F09D         	movff	?___fldiv,decide_action@red
  6265   003550  C02C  F09E         	movff	?___fldiv+1,decide_action@red+1
  6266   003554  C02D  F09F         	movff	?___fldiv+2,decide_action@red+2
  6267   003558  C02E  F0A0         	movff	?___fldiv+3,decide_action@red+3
  6268                           
  6269                           ;color.c: 156:     green = green/1191;
  6270   00355C  C0A1  F02B         	movff	decide_action@green,___fldiv@b
  6271   003560  C0A2  F02C         	movff	decide_action@green+1,___fldiv@b+1
  6272   003564  C0A3  F02D         	movff	decide_action@green+2,___fldiv@b+2
  6273   003568  C0A4  F02E         	movff	decide_action@green+3,___fldiv@b+3
  6274   00356C  0E00               	movlw	0
  6275   00356E  6E2F               	movwf	___fldiv@a^0,c
  6276   003570  0EE0               	movlw	224
  6277   003572  6E30               	movwf	(___fldiv@a+1)^0,c
  6278   003574  0E94               	movlw	148
  6279   003576  6E31               	movwf	(___fldiv@a+2)^0,c
  6280   003578  0E44               	movlw	68
  6281   00357A  6E32               	movwf	(___fldiv@a+3)^0,c
  6282   00357C  ECE0  F02C         	call	___fldiv	;wreg free
  6283   003580  C02B  F0A1         	movff	?___fldiv,decide_action@green
  6284   003584  C02C  F0A2         	movff	?___fldiv+1,decide_action@green+1
  6285   003588  C02D  F0A3         	movff	?___fldiv+2,decide_action@green+2
  6286   00358C  C02E  F0A4         	movff	?___fldiv+3,decide_action@green+3
  6287                           
  6288                           ;color.c: 157:     blue = blue/885;
  6289   003590  C0A5  F02B         	movff	decide_action@blue,___fldiv@b
  6290   003594  C0A6  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  6291   003598  C0A7  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  6292   00359C  C0A8  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  6293   0035A0  0E00               	movlw	0
  6294   0035A2  6E2F               	movwf	___fldiv@a^0,c
  6295   0035A4  0E40               	movlw	64
  6296   0035A6  6E30               	movwf	(___fldiv@a+1)^0,c
  6297   0035A8  0E5D               	movlw	93
  6298   0035AA  6E31               	movwf	(___fldiv@a+2)^0,c
  6299   0035AC  0E44               	movlw	68
  6300   0035AE  6E32               	movwf	(___fldiv@a+3)^0,c
  6301   0035B0  ECE0  F02C         	call	___fldiv	;wreg free
  6302   0035B4  C02B  F0A5         	movff	?___fldiv,decide_action@blue
  6303   0035B8  C02C  F0A6         	movff	?___fldiv+1,decide_action@blue+1
  6304   0035BC  C02D  F0A7         	movff	?___fldiv+2,decide_action@blue+2
  6305   0035C0  C02E  F0A8         	movff	?___fldiv+3,decide_action@blue+3
  6306                           
  6307                           ;color.c: 159:     float total = red + green + blue;
  6308   0035C4  C0A1  F006         	movff	decide_action@green,___fladd@a
  6309   0035C8  C0A2  F007         	movff	decide_action@green+1,___fladd@a+1
  6310   0035CC  C0A3  F008         	movff	decide_action@green+2,___fladd@a+2
  6311   0035D0  C0A4  F009         	movff	decide_action@green+3,___fladd@a+3
  6312   0035D4  C09D  F002         	movff	decide_action@red,___fladd@b
  6313   0035D8  C09E  F003         	movff	decide_action@red+1,___fladd@b+1
  6314   0035DC  C09F  F004         	movff	decide_action@red+2,___fladd@b+2
  6315   0035E0  C0A0  F005         	movff	decide_action@red+3,___fladd@b+3
  6316   0035E4  EC7C  F026         	call	___fladd	;wreg free
  6317   0035E8  C002  F073         	movff	?___fladd,_decide_action$3050
  6318   0035EC  C003  F074         	movff	?___fladd+1,_decide_action$3050+1
  6319   0035F0  C004  F075         	movff	?___fladd+2,_decide_action$3050+2
  6320   0035F4  C005  F076         	movff	?___fladd+3,_decide_action$3050+3
  6321                           
  6322                           ;color.c: 159:     float total = red + green + blue;
  6323   0035F8  C073  F002         	movff	_decide_action$3050,___fladd@b
  6324   0035FC  C074  F003         	movff	_decide_action$3050+1,___fladd@b+1
  6325   003600  C075  F004         	movff	_decide_action$3050+2,___fladd@b+2
  6326   003604  C076  F005         	movff	_decide_action$3050+3,___fladd@b+3
  6327   003608  C0A5  F006         	movff	decide_action@blue,___fladd@a
  6328   00360C  C0A6  F007         	movff	decide_action@blue+1,___fladd@a+1
  6329   003610  C0A7  F008         	movff	decide_action@blue+2,___fladd@a+2
  6330   003614  C0A8  F009         	movff	decide_action@blue+3,___fladd@a+3
  6331   003618  EC7C  F026         	call	___fladd	;wreg free
  6332   00361C  C002  F098         	movff	?___fladd,decide_action@total
  6333   003620  C003  F099         	movff	?___fladd+1,decide_action@total+1
  6334   003624  C004  F09A         	movff	?___fladd+2,decide_action@total+2
  6335   003628  C005  F09B         	movff	?___fladd+3,decide_action@total+3
  6336                           
  6337                           ;color.c: 161:     red_r = red / total;
  6338   00362C  C09D  F02B         	movff	decide_action@red,___fldiv@b
  6339   003630  C09E  F02C         	movff	decide_action@red+1,___fldiv@b+1
  6340   003634  C09F  F02D         	movff	decide_action@red+2,___fldiv@b+2
  6341   003638  C0A0  F02E         	movff	decide_action@red+3,___fldiv@b+3
  6342   00363C  C098  F02F         	movff	decide_action@total,___fldiv@a
  6343   003640  C099  F030         	movff	decide_action@total+1,___fldiv@a+1
  6344   003644  C09A  F031         	movff	decide_action@total+2,___fldiv@a+2
  6345   003648  C09B  F032         	movff	decide_action@total+3,___fldiv@a+3
  6346   00364C  ECE0  F02C         	call	___fldiv	;wreg free
  6347   003650  C02B  F0A9         	movff	?___fldiv,decide_action@red_r
  6348   003654  C02C  F0AA         	movff	?___fldiv+1,decide_action@red_r+1
  6349   003658  C02D  F0AB         	movff	?___fldiv+2,decide_action@red_r+2
  6350   00365C  C02E  F0AC         	movff	?___fldiv+3,decide_action@red_r+3
  6351                           
  6352                           ;color.c: 162:     green_r = green / total;
  6353   003660  C0A1  F02B         	movff	decide_action@green,___fldiv@b
  6354   003664  C0A2  F02C         	movff	decide_action@green+1,___fldiv@b+1
  6355   003668  C0A3  F02D         	movff	decide_action@green+2,___fldiv@b+2
  6356   00366C  C0A4  F02E         	movff	decide_action@green+3,___fldiv@b+3
  6357   003670  C098  F02F         	movff	decide_action@total,___fldiv@a
  6358   003674  C099  F030         	movff	decide_action@total+1,___fldiv@a+1
  6359   003678  C09A  F031         	movff	decide_action@total+2,___fldiv@a+2
  6360   00367C  C09B  F032         	movff	decide_action@total+3,___fldiv@a+3
  6361   003680  ECE0  F02C         	call	___fldiv	;wreg free
  6362   003684  C02B  F0AD         	movff	?___fldiv,decide_action@green_r
  6363   003688  C02C  F0AE         	movff	?___fldiv+1,decide_action@green_r+1
  6364   00368C  C02D  F0AF         	movff	?___fldiv+2,decide_action@green_r+2
  6365   003690  C02E  F0B0         	movff	?___fldiv+3,decide_action@green_r+3
  6366                           
  6367                           ;color.c: 163:     blue_r = blue / total;
  6368   003694  C0A5  F02B         	movff	decide_action@blue,___fldiv@b
  6369   003698  C0A6  F02C         	movff	decide_action@blue+1,___fldiv@b+1
  6370   00369C  C0A7  F02D         	movff	decide_action@blue+2,___fldiv@b+2
  6371   0036A0  C0A8  F02E         	movff	decide_action@blue+3,___fldiv@b+3
  6372   0036A4  C098  F02F         	movff	decide_action@total,___fldiv@a
  6373   0036A8  C099  F030         	movff	decide_action@total+1,___fldiv@a+1
  6374   0036AC  C09A  F031         	movff	decide_action@total+2,___fldiv@a+2
  6375   0036B0  C09B  F032         	movff	decide_action@total+3,___fldiv@a+3
  6376   0036B4  ECE0  F02C         	call	___fldiv	;wreg free
  6377   0036B8  C02B  F0B1         	movff	?___fldiv,decide_action@blue_r
  6378   0036BC  C02C  F0B2         	movff	?___fldiv+1,decide_action@blue_r+1
  6379   0036C0  C02D  F0B3         	movff	?___fldiv+2,decide_action@blue_r+2
  6380   0036C4  C02E  F0B4         	movff	?___fldiv+3,decide_action@blue_r+3
  6381                           
  6382                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6383   0036C8  0E73               	movlw	115
  6384   0036CA  6E06               	movwf	___fladd@a^0,c
  6385   0036CC  0E68               	movlw	104
  6386   0036CE  6E07               	movwf	(___fladd@a+1)^0,c
  6387   0036D0  0E91               	movlw	145
  6388   0036D2  6E08               	movwf	(___fladd@a+2)^0,c
  6389   0036D4  0EBD               	movlw	189
  6390   0036D6  6E09               	movwf	(___fladd@a+3)^0,c
  6391   0036D8  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  6392   0036DC  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6393   0036E0  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6394   0036E4  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6395   0036E8  EC7C  F026         	call	___fladd	;wreg free
  6396   0036EC  C002  F0B5         	movff	?___fladd,_decide_action$3051
  6397   0036F0  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  6398   0036F4  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  6399   0036F8  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  6400                           
  6401                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6402   0036FC  0E64               	movlw	100
  6403   0036FE  6E06               	movwf	___fladd@a^0,c
  6404   003700  0E3B               	movlw	59
  6405   003702  6E07               	movwf	(___fladd@a+1)^0,c
  6406   003704  0E3F               	movlw	63
  6407   003706  6E08               	movwf	(___fladd@a+2)^0,c
  6408   003708  0EBF               	movlw	191
  6409   00370A  6E09               	movwf	(___fladd@a+3)^0,c
  6410   00370C  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  6411   003710  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6412   003714  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6413   003718  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6414   00371C  EC7C  F026         	call	___fladd	;wreg free
  6415   003720  C002  F0B9         	movff	?___fladd,_decide_action$3052
  6416   003724  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  6417   003728  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  6418   00372C  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  6419   003730                     
  6420                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6421   003730  0E00               	movlw	0
  6422   003732  0100               	movlb	0	; () banked
  6423   003734  6F64               	movwf	powf@y& (0+255),b
  6424   003736  0E00               	movlw	0
  6425   003738  6F65               	movwf	(powf@y+1)& (0+255),b
  6426   00373A  0E00               	movlw	0
  6427   00373C  6F66               	movwf	(powf@y+2)& (0+255),b
  6428   00373E  0E40               	movlw	64
  6429   003740  6F67               	movwf	(powf@y+3)& (0+255),b
  6430   003742  C0B5  F060         	movff	_decide_action$3051,powf@x
  6431   003746  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  6432   00374A  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  6433   00374E  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  6434   003752  EC41  F007         	call	_powf	;wreg free
  6435   003756  C060  F0BD         	movff	?_powf,_decide_action$3053
  6436   00375A  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  6437   00375E  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  6438   003762  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  6439   003766                     
  6440                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6441   003766  0E00               	movlw	0
  6442   003768  0100               	movlb	0	; () banked
  6443   00376A  6F64               	movwf	powf@y& (0+255),b
  6444   00376C  0E00               	movlw	0
  6445   00376E  6F65               	movwf	(powf@y+1)& (0+255),b
  6446   003770  0E00               	movlw	0
  6447   003772  6F66               	movwf	(powf@y+2)& (0+255),b
  6448   003774  0E40               	movlw	64
  6449   003776  6F67               	movwf	(powf@y+3)& (0+255),b
  6450   003778  C0B9  F060         	movff	_decide_action$3052,powf@x
  6451   00377C  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  6452   003780  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  6453   003784  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  6454   003788  EC41  F007         	call	_powf	;wreg free
  6455   00378C  C060  F0C1         	movff	?_powf,_decide_action$3054
  6456   003790  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  6457   003794  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  6458   003798  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  6459                           
  6460                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6461   00379C  0E35               	movlw	53
  6462   00379E  6E06               	movwf	___fladd@a^0,c
  6463   0037A0  0E5E               	movlw	94
  6464   0037A2  6E07               	movwf	(___fladd@a+1)^0,c
  6465   0037A4  0E3A               	movlw	58
  6466   0037A6  6E08               	movwf	(___fladd@a+2)^0,c
  6467   0037A8  0EBE               	movlw	190
  6468   0037AA  6E09               	movwf	(___fladd@a+3)^0,c
  6469   0037AC  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  6470   0037B0  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6471   0037B4  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6472   0037B8  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6473   0037BC  EC7C  F026         	call	___fladd	;wreg free
  6474   0037C0  C002  F0C5         	movff	?___fladd,_decide_action$3055
  6475   0037C4  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  6476   0037C8  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  6477   0037CC  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  6478                           
  6479                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6480   0037D0  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  6481   0037D4  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  6482   0037D8  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  6483   0037DC  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  6484   0037E0  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  6485   0037E4  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  6486   0037E8  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  6487   0037EC  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  6488   0037F0  EC7C  F026         	call	___fladd	;wreg free
  6489   0037F4  C002  F0C9         	movff	?___fladd,_decide_action$3056
  6490   0037F8  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  6491   0037FC  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  6492   003800  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  6493   003804                     
  6494                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6495   003804  0E00               	movlw	0
  6496   003806  0100               	movlb	0	; () banked
  6497   003808  6F64               	movwf	powf@y& (0+255),b
  6498   00380A  0E00               	movlw	0
  6499   00380C  6F65               	movwf	(powf@y+1)& (0+255),b
  6500   00380E  0E00               	movlw	0
  6501   003810  6F66               	movwf	(powf@y+2)& (0+255),b
  6502   003812  0E40               	movlw	64
  6503   003814  6F67               	movwf	(powf@y+3)& (0+255),b
  6504   003816  C0C5  F060         	movff	_decide_action$3055,powf@x
  6505   00381A  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  6506   00381E  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  6507   003822  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  6508   003826  EC41  F007         	call	_powf	;wreg free
  6509   00382A  C060  F0CD         	movff	?_powf,_decide_action$3057
  6510   00382E  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  6511   003832  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  6512   003836  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  6513   00383A                     
  6514                           ;color.c: 166:     rgb_comp[0] = sqrtf(powf((red_r - 0.747),2) + powf((green_r - 0.071),
      +                          2) + powf((blue_r - 0.182),2));
  6515   00383A  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  6516   00383E  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  6517   003842  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  6518   003846  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  6519   00384A  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  6520   00384E  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  6521   003852  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  6522   003856  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  6523   00385A  EC7C  F026         	call	___fladd	;wreg free
  6524   00385E  C002  F012         	movff	?___fladd,sqrtf@x
  6525   003862  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6526   003866  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6527   00386A  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6528   00386E  ECF1  F02A         	call	_sqrtf	;wreg free
  6529   003872  C012  F077         	movff	?_sqrtf,decide_action@rgb_comp
  6530   003876  C013  F078         	movff	?_sqrtf+1,decide_action@rgb_comp+1
  6531   00387A  C014  F079         	movff	?_sqrtf+2,decide_action@rgb_comp+2
  6532   00387E  C015  F07A         	movff	?_sqrtf+3,decide_action@rgb_comp+3
  6533   003882                     
  6534                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6535   003882  0E35               	movlw	53
  6536   003884  6E06               	movwf	___fladd@a^0,c
  6537   003886  0E5E               	movlw	94
  6538   003888  6E07               	movwf	(___fladd@a+1)^0,c
  6539   00388A  0EFA               	movlw	250
  6540   00388C  6E08               	movwf	(___fladd@a+2)^0,c
  6541   00388E  0EBE               	movlw	190
  6542   003890  6E09               	movwf	(___fladd@a+3)^0,c
  6543   003892  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  6544   003896  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6545   00389A  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6546   00389E  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6547   0038A2  EC7C  F026         	call	___fladd	;wreg free
  6548   0038A6  C002  F0B5         	movff	?___fladd,_decide_action$3051
  6549   0038AA  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  6550   0038AE  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  6551   0038B2  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  6552   0038B6                     
  6553                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6554   0038B6  0E2B               	movlw	43
  6555   0038B8  6E06               	movwf	___fladd@a^0,c
  6556   0038BA  0E87               	movlw	135
  6557   0038BC  6E07               	movwf	(___fladd@a+1)^0,c
  6558   0038BE  0E16               	movlw	22
  6559   0038C0  6E08               	movwf	(___fladd@a+2)^0,c
  6560   0038C2  0EBE               	movlw	190
  6561   0038C4  6E09               	movwf	(___fladd@a+3)^0,c
  6562   0038C6  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  6563   0038CA  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6564   0038CE  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6565   0038D2  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6566   0038D6  EC7C  F026         	call	___fladd	;wreg free
  6567   0038DA  C002  F0B9         	movff	?___fladd,_decide_action$3052
  6568   0038DE  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  6569   0038E2  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  6570   0038E6  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  6571                           
  6572                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6573   0038EA  0E00               	movlw	0
  6574   0038EC  0100               	movlb	0	; () banked
  6575   0038EE  6F64               	movwf	powf@y& (0+255),b
  6576   0038F0  0E00               	movlw	0
  6577   0038F2  6F65               	movwf	(powf@y+1)& (0+255),b
  6578   0038F4  0E00               	movlw	0
  6579   0038F6  6F66               	movwf	(powf@y+2)& (0+255),b
  6580   0038F8  0E40               	movlw	64
  6581   0038FA  6F67               	movwf	(powf@y+3)& (0+255),b
  6582   0038FC  C0B5  F060         	movff	_decide_action$3051,powf@x
  6583   003900  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  6584   003904  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  6585   003908  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  6586   00390C  EC41  F007         	call	_powf	;wreg free
  6587   003910  C060  F0BD         	movff	?_powf,_decide_action$3053
  6588   003914  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  6589   003918  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  6590   00391C  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  6591                           
  6592                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6593   003920  0E00               	movlw	0
  6594   003922  0100               	movlb	0	; () banked
  6595   003924  6F64               	movwf	powf@y& (0+255),b
  6596   003926  0E00               	movlw	0
  6597   003928  6F65               	movwf	(powf@y+1)& (0+255),b
  6598   00392A  0E00               	movlw	0
  6599   00392C  6F66               	movwf	(powf@y+2)& (0+255),b
  6600   00392E  0E40               	movlw	64
  6601   003930  6F67               	movwf	(powf@y+3)& (0+255),b
  6602   003932  C0B9  F060         	movff	_decide_action$3052,powf@x
  6603   003936  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  6604   00393A  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  6605   00393E  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  6606   003942  EC41  F007         	call	_powf	;wreg free
  6607   003946  C060  F0C1         	movff	?_powf,_decide_action$3054
  6608   00394A  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  6609   00394E  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  6610   003952  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  6611   003956                     
  6612                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6613   003956  0E23               	movlw	35
  6614   003958  6E06               	movwf	___fladd@a^0,c
  6615   00395A  0EDB               	movlw	219
  6616   00395C  6E07               	movwf	(___fladd@a+1)^0,c
  6617   00395E  0EB9               	movlw	185
  6618   003960  6E08               	movwf	(___fladd@a+2)^0,c
  6619   003962  0EBE               	movlw	190
  6620   003964  6E09               	movwf	(___fladd@a+3)^0,c
  6621   003966  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  6622   00396A  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6623   00396E  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6624   003972  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6625   003976  EC7C  F026         	call	___fladd	;wreg free
  6626   00397A  C002  F0C5         	movff	?___fladd,_decide_action$3055
  6627   00397E  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  6628   003982  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  6629   003986  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  6630   00398A                     
  6631                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6632   00398A  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  6633   00398E  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  6634   003992  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  6635   003996  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  6636   00399A  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  6637   00399E  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  6638   0039A2  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  6639   0039A6  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  6640   0039AA  EC7C  F026         	call	___fladd	;wreg free
  6641   0039AE  C002  F0C9         	movff	?___fladd,_decide_action$3056
  6642   0039B2  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  6643   0039B6  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  6644   0039BA  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  6645                           
  6646                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6647   0039BE  0E00               	movlw	0
  6648   0039C0  0100               	movlb	0	; () banked
  6649   0039C2  6F64               	movwf	powf@y& (0+255),b
  6650   0039C4  0E00               	movlw	0
  6651   0039C6  6F65               	movwf	(powf@y+1)& (0+255),b
  6652   0039C8  0E00               	movlw	0
  6653   0039CA  6F66               	movwf	(powf@y+2)& (0+255),b
  6654   0039CC  0E40               	movlw	64
  6655   0039CE  6F67               	movwf	(powf@y+3)& (0+255),b
  6656   0039D0  C0C5  F060         	movff	_decide_action$3055,powf@x
  6657   0039D4  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  6658   0039D8  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  6659   0039DC  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  6660   0039E0  EC41  F007         	call	_powf	;wreg free
  6661   0039E4  C060  F0CD         	movff	?_powf,_decide_action$3057
  6662   0039E8  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  6663   0039EC  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  6664   0039F0  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  6665   0039F4                     
  6666                           ;color.c: 167:     rgb_comp[1] = sqrtf(powf((red_r - 0.147),2) + powf((green_r - 0.489),
      +                          2) + powf((blue_r - 0.363),2));
  6667   0039F4  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  6668   0039F8  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  6669   0039FC  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  6670   003A00  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  6671   003A04  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  6672   003A08  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  6673   003A0C  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  6674   003A10  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  6675   003A14  EC7C  F026         	call	___fladd	;wreg free
  6676   003A18  C002  F012         	movff	?___fladd,sqrtf@x
  6677   003A1C  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6678   003A20  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6679   003A24  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6680   003A28  ECF1  F02A         	call	_sqrtf	;wreg free
  6681   003A2C  C012  F07B         	movff	?_sqrtf,decide_action@rgb_comp+4
  6682   003A30  C013  F07C         	movff	?_sqrtf+1,decide_action@rgb_comp+5
  6683   003A34  C014  F07D         	movff	?_sqrtf+2,decide_action@rgb_comp+6
  6684   003A38  C015  F07E         	movff	?_sqrtf+3,decide_action@rgb_comp+7
  6685   003A3C                     
  6686                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6687   003A3C  0E50               	movlw	80
  6688   003A3E  6E06               	movwf	___fladd@a^0,c
  6689   003A40  0E8D               	movlw	141
  6690   003A42  6E07               	movwf	(___fladd@a+1)^0,c
  6691   003A44  0ED7               	movlw	215
  6692   003A46  6E08               	movwf	(___fladd@a+2)^0,c
  6693   003A48  0EBE               	movlw	190
  6694   003A4A  6E09               	movwf	(___fladd@a+3)^0,c
  6695   003A4C  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  6696   003A50  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6697   003A54  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6698   003A58  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6699   003A5C  EC7C  F026         	call	___fladd	;wreg free
  6700   003A60  C002  F0B5         	movff	?___fladd,_decide_action$3051
  6701   003A64  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  6702   003A68  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  6703   003A6C  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  6704   003A70                     
  6705                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6706   003A70  0EAE               	movlw	174
  6707   003A72  6E06               	movwf	___fladd@a^0,c
  6708   003A74  0E47               	movlw	71
  6709   003A76  6E07               	movwf	(___fladd@a+1)^0,c
  6710   003A78  0EE1               	movlw	225
  6711   003A7A  6E08               	movwf	(___fladd@a+2)^0,c
  6712   003A7C  0EBD               	movlw	189
  6713   003A7E  6E09               	movwf	(___fladd@a+3)^0,c
  6714   003A80  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  6715   003A84  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6716   003A88  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6717   003A8C  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6718   003A90  EC7C  F026         	call	___fladd	;wreg free
  6719   003A94  C002  F0B9         	movff	?___fladd,_decide_action$3052
  6720   003A98  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  6721   003A9C  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  6722   003AA0  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  6723   003AA4                     
  6724                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6725   003AA4  0E00               	movlw	0
  6726   003AA6  0100               	movlb	0	; () banked
  6727   003AA8  6F64               	movwf	powf@y& (0+255),b
  6728   003AAA  0E00               	movlw	0
  6729   003AAC  6F65               	movwf	(powf@y+1)& (0+255),b
  6730   003AAE  0E00               	movlw	0
  6731   003AB0  6F66               	movwf	(powf@y+2)& (0+255),b
  6732   003AB2  0E40               	movlw	64
  6733   003AB4  6F67               	movwf	(powf@y+3)& (0+255),b
  6734   003AB6  C0B5  F060         	movff	_decide_action$3051,powf@x
  6735   003ABA  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  6736   003ABE  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  6737   003AC2  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  6738   003AC6  EC41  F007         	call	_powf	;wreg free
  6739   003ACA  C060  F0BD         	movff	?_powf,_decide_action$3053
  6740   003ACE  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  6741   003AD2  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  6742   003AD6  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  6743   003ADA                     
  6744                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6745   003ADA  0E00               	movlw	0
  6746   003ADC  0100               	movlb	0	; () banked
  6747   003ADE  6F64               	movwf	powf@y& (0+255),b
  6748   003AE0  0E00               	movlw	0
  6749   003AE2  6F65               	movwf	(powf@y+1)& (0+255),b
  6750   003AE4  0E00               	movlw	0
  6751   003AE6  6F66               	movwf	(powf@y+2)& (0+255),b
  6752   003AE8  0E40               	movlw	64
  6753   003AEA  6F67               	movwf	(powf@y+3)& (0+255),b
  6754   003AEC  C0B9  F060         	movff	_decide_action$3052,powf@x
  6755   003AF0  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  6756   003AF4  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  6757   003AF8  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  6758   003AFC  EC41  F007         	call	_powf	;wreg free
  6759   003B00  C060  F0C1         	movff	?_powf,_decide_action$3054
  6760   003B04  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  6761   003B08  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  6762   003B0C  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  6763   003B10                     
  6764                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6765   003B10  0EC5               	movlw	197
  6766   003B12  6E06               	movwf	___fladd@a^0,c
  6767   003B14  0E20               	movlw	32
  6768   003B16  6E07               	movwf	(___fladd@a+1)^0,c
  6769   003B18  0EF0               	movlw	240
  6770   003B1A  6E08               	movwf	(___fladd@a+2)^0,c
  6771   003B1C  0EBE               	movlw	190
  6772   003B1E  6E09               	movwf	(___fladd@a+3)^0,c
  6773   003B20  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  6774   003B24  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6775   003B28  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6776   003B2C  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6777   003B30  EC7C  F026         	call	___fladd	;wreg free
  6778   003B34  C002  F0C5         	movff	?___fladd,_decide_action$3055
  6779   003B38  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  6780   003B3C  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  6781   003B40  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  6782   003B44                     
  6783                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6784   003B44  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  6785   003B48  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  6786   003B4C  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  6787   003B50  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  6788   003B54  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  6789   003B58  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  6790   003B5C  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  6791   003B60  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  6792   003B64  EC7C  F026         	call	___fladd	;wreg free
  6793   003B68  C002  F0C9         	movff	?___fladd,_decide_action$3056
  6794   003B6C  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  6795   003B70  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  6796   003B74  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  6797   003B78                     
  6798                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6799   003B78  0E00               	movlw	0
  6800   003B7A  0100               	movlb	0	; () banked
  6801   003B7C  6F64               	movwf	powf@y& (0+255),b
  6802   003B7E  0E00               	movlw	0
  6803   003B80  6F65               	movwf	(powf@y+1)& (0+255),b
  6804   003B82  0E00               	movlw	0
  6805   003B84  6F66               	movwf	(powf@y+2)& (0+255),b
  6806   003B86  0E40               	movlw	64
  6807   003B88  6F67               	movwf	(powf@y+3)& (0+255),b
  6808   003B8A  C0C5  F060         	movff	_decide_action$3055,powf@x
  6809   003B8E  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  6810   003B92  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  6811   003B96  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  6812   003B9A  EC41  F007         	call	_powf	;wreg free
  6813   003B9E  C060  F0CD         	movff	?_powf,_decide_action$3057
  6814   003BA2  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  6815   003BA6  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  6816   003BAA  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  6817                           
  6818                           ;color.c: 168:     rgb_comp[2] = sqrtf(powf((red_r - 0.110),2) + powf((green_r - 0.421),
      +                          2) + powf((blue_r - 0.469),2));
  6819   003BAE  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  6820   003BB2  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  6821   003BB6  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  6822   003BBA  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  6823   003BBE  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  6824   003BC2  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  6825   003BC6  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  6826   003BCA  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  6827   003BCE  EC7C  F026         	call	___fladd	;wreg free
  6828   003BD2  C002  F012         	movff	?___fladd,sqrtf@x
  6829   003BD6  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6830   003BDA  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6831   003BDE  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6832   003BE2  ECF1  F02A         	call	_sqrtf	;wreg free
  6833   003BE6  C012  F07F         	movff	?_sqrtf,decide_action@rgb_comp+8
  6834   003BEA  C013  F080         	movff	?_sqrtf+1,decide_action@rgb_comp+9
  6835   003BEE  C014  F081         	movff	?_sqrtf+2,decide_action@rgb_comp+10
  6836   003BF2  C015  F082         	movff	?_sqrtf+3,decide_action@rgb_comp+11
  6837                           
  6838                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6839   003BF6  0E66               	movlw	102
  6840   003BF8  6E06               	movwf	___fladd@a^0,c
  6841   003BFA  0E66               	movlw	102
  6842   003BFC  6E07               	movwf	(___fladd@a+1)^0,c
  6843   003BFE  0EA6               	movlw	166
  6844   003C00  6E08               	movwf	(___fladd@a+2)^0,c
  6845   003C02  0EBE               	movlw	190
  6846   003C04  6E09               	movwf	(___fladd@a+3)^0,c
  6847   003C06  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  6848   003C0A  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  6849   003C0E  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  6850   003C12  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  6851   003C16  EC7C  F026         	call	___fladd	;wreg free
  6852   003C1A  C002  F0B5         	movff	?___fladd,_decide_action$3051
  6853   003C1E  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  6854   003C22  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  6855   003C26  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  6856                           
  6857                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6858   003C2A  0E75               	movlw	117
  6859   003C2C  6E06               	movwf	___fladd@a^0,c
  6860   003C2E  0E93               	movlw	147
  6861   003C30  6E07               	movwf	(___fladd@a+1)^0,c
  6862   003C32  0ED8               	movlw	216
  6863   003C34  6E08               	movwf	(___fladd@a+2)^0,c
  6864   003C36  0EBE               	movlw	190
  6865   003C38  6E09               	movwf	(___fladd@a+3)^0,c
  6866   003C3A  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  6867   003C3E  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  6868   003C42  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  6869   003C46  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  6870   003C4A  EC7C  F026         	call	___fladd	;wreg free
  6871   003C4E  C002  F0B9         	movff	?___fladd,_decide_action$3052
  6872   003C52  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  6873   003C56  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  6874   003C5A  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  6875   003C5E                     
  6876                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6877   003C5E  0E00               	movlw	0
  6878   003C60  0100               	movlb	0	; () banked
  6879   003C62  6F64               	movwf	powf@y& (0+255),b
  6880   003C64  0E00               	movlw	0
  6881   003C66  6F65               	movwf	(powf@y+1)& (0+255),b
  6882   003C68  0E00               	movlw	0
  6883   003C6A  6F66               	movwf	(powf@y+2)& (0+255),b
  6884   003C6C  0E40               	movlw	64
  6885   003C6E  6F67               	movwf	(powf@y+3)& (0+255),b
  6886   003C70  C0B5  F060         	movff	_decide_action$3051,powf@x
  6887   003C74  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  6888   003C78  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  6889   003C7C  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  6890   003C80  EC41  F007         	call	_powf	;wreg free
  6891   003C84  C060  F0BD         	movff	?_powf,_decide_action$3053
  6892   003C88  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  6893   003C8C  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  6894   003C90  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  6895   003C94                     
  6896                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6897   003C94  0E00               	movlw	0
  6898   003C96  0100               	movlb	0	; () banked
  6899   003C98  6F64               	movwf	powf@y& (0+255),b
  6900   003C9A  0E00               	movlw	0
  6901   003C9C  6F65               	movwf	(powf@y+1)& (0+255),b
  6902   003C9E  0E00               	movlw	0
  6903   003CA0  6F66               	movwf	(powf@y+2)& (0+255),b
  6904   003CA2  0E40               	movlw	64
  6905   003CA4  6F67               	movwf	(powf@y+3)& (0+255),b
  6906   003CA6  C0B9  F060         	movff	_decide_action$3052,powf@x
  6907   003CAA  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  6908   003CAE  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  6909   003CB2  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  6910   003CB6  EC41  F007         	call	_powf	;wreg free
  6911   003CBA  C060  F0C1         	movff	?_powf,_decide_action$3054
  6912   003CBE  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  6913   003CC2  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  6914   003CC6  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  6915                           
  6916                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6917   003CCA  0E25               	movlw	37
  6918   003CCC  6E06               	movwf	___fladd@a^0,c
  6919   003CCE  0E06               	movlw	6
  6920   003CD0  6E07               	movwf	(___fladd@a+1)^0,c
  6921   003CD2  0E81               	movlw	129
  6922   003CD4  6E08               	movwf	(___fladd@a+2)^0,c
  6923   003CD6  0EBE               	movlw	190
  6924   003CD8  6E09               	movwf	(___fladd@a+3)^0,c
  6925   003CDA  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  6926   003CDE  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  6927   003CE2  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  6928   003CE6  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  6929   003CEA  EC7C  F026         	call	___fladd	;wreg free
  6930   003CEE  C002  F0C5         	movff	?___fladd,_decide_action$3055
  6931   003CF2  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  6932   003CF6  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  6933   003CFA  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  6934                           
  6935                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6936   003CFE  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  6937   003D02  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  6938   003D06  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  6939   003D0A  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  6940   003D0E  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  6941   003D12  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  6942   003D16  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  6943   003D1A  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  6944   003D1E  EC7C  F026         	call	___fladd	;wreg free
  6945   003D22  C002  F0C9         	movff	?___fladd,_decide_action$3056
  6946   003D26  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  6947   003D2A  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  6948   003D2E  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  6949   003D32                     
  6950                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6951   003D32  0E00               	movlw	0
  6952   003D34  0100               	movlb	0	; () banked
  6953   003D36  6F64               	movwf	powf@y& (0+255),b
  6954   003D38  0E00               	movlw	0
  6955   003D3A  6F65               	movwf	(powf@y+1)& (0+255),b
  6956   003D3C  0E00               	movlw	0
  6957   003D3E  6F66               	movwf	(powf@y+2)& (0+255),b
  6958   003D40  0E40               	movlw	64
  6959   003D42  6F67               	movwf	(powf@y+3)& (0+255),b
  6960   003D44  C0C5  F060         	movff	_decide_action$3055,powf@x
  6961   003D48  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  6962   003D4C  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  6963   003D50  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  6964   003D54  EC41  F007         	call	_powf	;wreg free
  6965   003D58  C060  F0CD         	movff	?_powf,_decide_action$3057
  6966   003D5C  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  6967   003D60  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  6968   003D64  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  6969   003D68                     
  6970                           ;color.c: 169:     rgb_comp[3] = sqrtf(powf((red_r - 0.423),2) + powf((green_r - 0.325),
      +                          2) + powf((blue_r - 0.252),2));
  6971   003D68  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  6972   003D6C  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  6973   003D70  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  6974   003D74  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  6975   003D78  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  6976   003D7C  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  6977   003D80  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  6978   003D84  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  6979   003D88  EC7C  F026         	call	___fladd	;wreg free
  6980   003D8C  C002  F012         	movff	?___fladd,sqrtf@x
  6981   003D90  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  6982   003D94  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  6983   003D98  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  6984   003D9C  ECF1  F02A         	call	_sqrtf	;wreg free
  6985   003DA0  C012  F083         	movff	?_sqrtf,decide_action@rgb_comp+12
  6986   003DA4  C013  F084         	movff	?_sqrtf+1,decide_action@rgb_comp+13
  6987   003DA8  C014  F085         	movff	?_sqrtf+2,decide_action@rgb_comp+14
  6988   003DAC  C015  F086         	movff	?_sqrtf+3,decide_action@rgb_comp+15
  6989   003DB0                     
  6990                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  6991   003DB0  0EF0               	movlw	240
  6992   003DB2  6E06               	movwf	___fladd@a^0,c
  6993   003DB4  0EA7               	movlw	167
  6994   003DB6  6E07               	movwf	(___fladd@a+1)^0,c
  6995   003DB8  0E86               	movlw	134
  6996   003DBA  6E08               	movwf	(___fladd@a+2)^0,c
  6997   003DBC  0EBE               	movlw	190
  6998   003DBE  6E09               	movwf	(___fladd@a+3)^0,c
  6999   003DC0  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  7000   003DC4  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7001   003DC8  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7002   003DCC  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7003   003DD0  EC7C  F026         	call	___fladd	;wreg free
  7004   003DD4  C002  F0B5         	movff	?___fladd,_decide_action$3051
  7005   003DD8  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  7006   003DDC  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  7007   003DE0  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  7008   003DE4                     
  7009                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7010   003DE4  0E08               	movlw	8
  7011   003DE6  6E06               	movwf	___fladd@a^0,c
  7012   003DE8  0EAC               	movlw	172
  7013   003DEA  6E07               	movwf	(___fladd@a+1)^0,c
  7014   003DEC  0EDC               	movlw	220
  7015   003DEE  6E08               	movwf	(___fladd@a+2)^0,c
  7016   003DF0  0EBE               	movlw	190
  7017   003DF2  6E09               	movwf	(___fladd@a+3)^0,c
  7018   003DF4  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  7019   003DF8  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7020   003DFC  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7021   003E00  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7022   003E04  EC7C  F026         	call	___fladd	;wreg free
  7023   003E08  C002  F0B9         	movff	?___fladd,_decide_action$3052
  7024   003E0C  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  7025   003E10  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  7026   003E14  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  7027                           
  7028                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7029   003E18  0E00               	movlw	0
  7030   003E1A  0100               	movlb	0	; () banked
  7031   003E1C  6F64               	movwf	powf@y& (0+255),b
  7032   003E1E  0E00               	movlw	0
  7033   003E20  6F65               	movwf	(powf@y+1)& (0+255),b
  7034   003E22  0E00               	movlw	0
  7035   003E24  6F66               	movwf	(powf@y+2)& (0+255),b
  7036   003E26  0E40               	movlw	64
  7037   003E28  6F67               	movwf	(powf@y+3)& (0+255),b
  7038   003E2A  C0B5  F060         	movff	_decide_action$3051,powf@x
  7039   003E2E  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  7040   003E32  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  7041   003E36  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  7042   003E3A  EC41  F007         	call	_powf	;wreg free
  7043   003E3E  C060  F0BD         	movff	?_powf,_decide_action$3053
  7044   003E42  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  7045   003E46  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  7046   003E4A  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  7047                           
  7048                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7049   003E4E  0E00               	movlw	0
  7050   003E50  0100               	movlb	0	; () banked
  7051   003E52  6F64               	movwf	powf@y& (0+255),b
  7052   003E54  0E00               	movlw	0
  7053   003E56  6F65               	movwf	(powf@y+1)& (0+255),b
  7054   003E58  0E00               	movlw	0
  7055   003E5A  6F66               	movwf	(powf@y+2)& (0+255),b
  7056   003E5C  0E40               	movlw	64
  7057   003E5E  6F67               	movwf	(powf@y+3)& (0+255),b
  7058   003E60  C0B9  F060         	movff	_decide_action$3052,powf@x
  7059   003E64  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  7060   003E68  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  7061   003E6C  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  7062   003E70  EC41  F007         	call	_powf	;wreg free
  7063   003E74  C060  F0C1         	movff	?_powf,_decide_action$3054
  7064   003E78  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  7065   003E7C  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  7066   003E80  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  7067   003E84                     
  7068                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7069   003E84  0E08               	movlw	8
  7070   003E86  6E06               	movwf	___fladd@a^0,c
  7071   003E88  0EAC               	movlw	172
  7072   003E8A  6E07               	movwf	(___fladd@a+1)^0,c
  7073   003E8C  0E9C               	movlw	156
  7074   003E8E  6E08               	movwf	(___fladd@a+2)^0,c
  7075   003E90  0EBE               	movlw	190
  7076   003E92  6E09               	movwf	(___fladd@a+3)^0,c
  7077   003E94  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  7078   003E98  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7079   003E9C  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7080   003EA0  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7081   003EA4  EC7C  F026         	call	___fladd	;wreg free
  7082   003EA8  C002  F0C5         	movff	?___fladd,_decide_action$3055
  7083   003EAC  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  7084   003EB0  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  7085   003EB4  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  7086   003EB8                     
  7087                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7088   003EB8  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  7089   003EBC  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  7090   003EC0  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  7091   003EC4  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  7092   003EC8  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  7093   003ECC  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  7094   003ED0  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  7095   003ED4  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  7096   003ED8  EC7C  F026         	call	___fladd	;wreg free
  7097   003EDC  C002  F0C9         	movff	?___fladd,_decide_action$3056
  7098   003EE0  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  7099   003EE4  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  7100   003EE8  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  7101                           
  7102                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7103   003EEC  0E00               	movlw	0
  7104   003EEE  0100               	movlb	0	; () banked
  7105   003EF0  6F64               	movwf	powf@y& (0+255),b
  7106   003EF2  0E00               	movlw	0
  7107   003EF4  6F65               	movwf	(powf@y+1)& (0+255),b
  7108   003EF6  0E00               	movlw	0
  7109   003EF8  6F66               	movwf	(powf@y+2)& (0+255),b
  7110   003EFA  0E40               	movlw	64
  7111   003EFC  6F67               	movwf	(powf@y+3)& (0+255),b
  7112   003EFE  C0C5  F060         	movff	_decide_action$3055,powf@x
  7113   003F02  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  7114   003F06  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  7115   003F0A  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  7116   003F0E  EC41  F007         	call	_powf	;wreg free
  7117   003F12  C060  F0CD         	movff	?_powf,_decide_action$3057
  7118   003F16  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  7119   003F1A  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  7120   003F1E  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  7121   003F22                     
  7122                           ;color.c: 170:     rgb_comp[4] = sqrtf(powf((red_r - 0.431),2) + powf((green_r - 0.263),
      +                          2) + powf((blue_r - 0.306),2));
  7123   003F22  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  7124   003F26  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  7125   003F2A  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  7126   003F2E  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  7127   003F32  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  7128   003F36  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  7129   003F3A  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  7130   003F3E  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  7131   003F42  EC7C  F026         	call	___fladd	;wreg free
  7132   003F46  C002  F012         	movff	?___fladd,sqrtf@x
  7133   003F4A  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7134   003F4E  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7135   003F52  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7136   003F56  ECF1  F02A         	call	_sqrtf	;wreg free
  7137   003F5A  C012  F087         	movff	?_sqrtf,decide_action@rgb_comp+16
  7138   003F5E  C013  F088         	movff	?_sqrtf+1,decide_action@rgb_comp+17
  7139   003F62  C014  F089         	movff	?_sqrtf+2,decide_action@rgb_comp+18
  7140   003F66  C015  F08A         	movff	?_sqrtf+3,decide_action@rgb_comp+19
  7141   003F6A                     
  7142                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7143   003F6A  0EBA               	movlw	186
  7144   003F6C  6E06               	movwf	___fladd@a^0,c
  7145   003F6E  0E49               	movlw	73
  7146   003F70  6E07               	movwf	(___fladd@a+1)^0,c
  7147   003F72  0E0C               	movlw	12
  7148   003F74  6E08               	movwf	(___fladd@a+2)^0,c
  7149   003F76  0EBE               	movlw	190
  7150   003F78  6E09               	movwf	(___fladd@a+3)^0,c
  7151   003F7A  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  7152   003F7E  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7153   003F82  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7154   003F86  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7155   003F8A  EC7C  F026         	call	___fladd	;wreg free
  7156   003F8E  C002  F0B5         	movff	?___fladd,_decide_action$3051
  7157   003F92  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  7158   003F96  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  7159   003F9A  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  7160   003F9E                     
  7161                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7162   003F9E  0EE7               	movlw	231
  7163   003FA0  6E06               	movwf	___fladd@a^0,c
  7164   003FA2  0EFB               	movlw	251
  7165   003FA4  6E07               	movwf	(___fladd@a+1)^0,c
  7166   003FA6  0E29               	movlw	41
  7167   003FA8  6E08               	movwf	(___fladd@a+2)^0,c
  7168   003FAA  0EBF               	movlw	191
  7169   003FAC  6E09               	movwf	(___fladd@a+3)^0,c
  7170   003FAE  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  7171   003FB2  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7172   003FB6  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7173   003FBA  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7174   003FBE  EC7C  F026         	call	___fladd	;wreg free
  7175   003FC2  C002  F0B9         	movff	?___fladd,_decide_action$3052
  7176   003FC6  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  7177   003FCA  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  7178   003FCE  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  7179   003FD2                     
  7180                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7181   003FD2  0E00               	movlw	0
  7182   003FD4  0100               	movlb	0	; () banked
  7183   003FD6  6F64               	movwf	powf@y& (0+255),b
  7184   003FD8  0E00               	movlw	0
  7185   003FDA  6F65               	movwf	(powf@y+1)& (0+255),b
  7186   003FDC  0E00               	movlw	0
  7187   003FDE  6F66               	movwf	(powf@y+2)& (0+255),b
  7188   003FE0  0E40               	movlw	64
  7189   003FE2  6F67               	movwf	(powf@y+3)& (0+255),b
  7190   003FE4  C0B5  F060         	movff	_decide_action$3051,powf@x
  7191   003FE8  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  7192   003FEC  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  7193   003FF0  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  7194   003FF4  EC41  F007         	call	_powf	;wreg free
  7195   003FF8  C060  F0BD         	movff	?_powf,_decide_action$3053
  7196   003FFC  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  7197   004000  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  7198   004004  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  7199   004008                     
  7200                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7201   004008  0E00               	movlw	0
  7202   00400A  0100               	movlb	0	; () banked
  7203   00400C  6F64               	movwf	powf@y& (0+255),b
  7204   00400E  0E00               	movlw	0
  7205   004010  6F65               	movwf	(powf@y+1)& (0+255),b
  7206   004012  0E00               	movlw	0
  7207   004014  6F66               	movwf	(powf@y+2)& (0+255),b
  7208   004016  0E40               	movlw	64
  7209   004018  6F67               	movwf	(powf@y+3)& (0+255),b
  7210   00401A  C0B9  F060         	movff	_decide_action$3052,powf@x
  7211   00401E  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  7212   004022  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  7213   004026  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  7214   00402A  EC41  F007         	call	_powf	;wreg free
  7215   00402E  C060  F0C1         	movff	?_powf,_decide_action$3054
  7216   004032  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  7217   004036  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  7218   00403A  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  7219   00403E                     
  7220                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7221   00403E  0E83               	movlw	131
  7222   004040  6E06               	movwf	___fladd@a^0,c
  7223   004042  0EC0               	movlw	192
  7224   004044  6E07               	movwf	(___fladd@a+1)^0,c
  7225   004046  0E4A               	movlw	74
  7226   004048  6E08               	movwf	(___fladd@a+2)^0,c
  7227   00404A  0EBE               	movlw	190
  7228   00404C  6E09               	movwf	(___fladd@a+3)^0,c
  7229   00404E  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  7230   004052  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7231   004056  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7232   00405A  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7233   00405E  EC7C  F026         	call	___fladd	;wreg free
  7234   004062  C002  F0C5         	movff	?___fladd,_decide_action$3055
  7235   004066  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  7236   00406A  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  7237   00406E  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  7238   004072                     
  7239                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7240   004072  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  7241   004076  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  7242   00407A  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  7243   00407E  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  7244   004082  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  7245   004086  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  7246   00408A  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  7247   00408E  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  7248   004092  EC7C  F026         	call	___fladd	;wreg free
  7249   004096  C002  F0C9         	movff	?___fladd,_decide_action$3056
  7250   00409A  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  7251   00409E  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  7252   0040A2  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  7253   0040A6                     
  7254                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7255   0040A6  0E00               	movlw	0
  7256   0040A8  0100               	movlb	0	; () banked
  7257   0040AA  6F64               	movwf	powf@y& (0+255),b
  7258   0040AC  0E00               	movlw	0
  7259   0040AE  6F65               	movwf	(powf@y+1)& (0+255),b
  7260   0040B0  0E00               	movlw	0
  7261   0040B2  6F66               	movwf	(powf@y+2)& (0+255),b
  7262   0040B4  0E40               	movlw	64
  7263   0040B6  6F67               	movwf	(powf@y+3)& (0+255),b
  7264   0040B8  C0C5  F060         	movff	_decide_action$3055,powf@x
  7265   0040BC  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  7266   0040C0  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  7267   0040C4  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  7268   0040C8  EC41  F007         	call	_powf	;wreg free
  7269   0040CC  C060  F0CD         	movff	?_powf,_decide_action$3057
  7270   0040D0  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  7271   0040D4  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  7272   0040D8  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  7273                           
  7274                           ;color.c: 171:     rgb_comp[5] = sqrtf(powf((red_r - 0.664),2) + powf((green_r - 0.137),
      +                          2) + powf((blue_r - 0.198),2));
  7275   0040DC  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  7276   0040E0  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  7277   0040E4  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  7278   0040E8  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  7279   0040EC  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  7280   0040F0  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  7281   0040F4  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  7282   0040F8  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  7283   0040FC  EC7C  F026         	call	___fladd	;wreg free
  7284   004100  C002  F012         	movff	?___fladd,sqrtf@x
  7285   004104  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7286   004108  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7287   00410C  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7288   004110  ECF1  F02A         	call	_sqrtf	;wreg free
  7289   004114  C012  F08B         	movff	?_sqrtf,decide_action@rgb_comp+20
  7290   004118  C013  F08C         	movff	?_sqrtf+1,decide_action@rgb_comp+21
  7291   00411C  C014  F08D         	movff	?_sqrtf+2,decide_action@rgb_comp+22
  7292   004120  C015  F08E         	movff	?_sqrtf+3,decide_action@rgb_comp+23
  7293                           
  7294                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7295   004124  0E5A               	movlw	90
  7296   004126  6E06               	movwf	___fladd@a^0,c
  7297   004128  0E64               	movlw	100
  7298   00412A  6E07               	movwf	(___fladd@a+1)^0,c
  7299   00412C  0EBB               	movlw	187
  7300   00412E  6E08               	movwf	(___fladd@a+2)^0,c
  7301   004130  0EBE               	movlw	190
  7302   004132  6E09               	movwf	(___fladd@a+3)^0,c
  7303   004134  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  7304   004138  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7305   00413C  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7306   004140  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7307   004144  EC7C  F026         	call	___fladd	;wreg free
  7308   004148  C002  F0B5         	movff	?___fladd,_decide_action$3051
  7309   00414C  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  7310   004150  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  7311   004154  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  7312                           
  7313                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7314   004158  0E83               	movlw	131
  7315   00415A  6E06               	movwf	___fladd@a^0,c
  7316   00415C  0EC0               	movlw	192
  7317   00415E  6E07               	movwf	(___fladd@a+1)^0,c
  7318   004160  0E8A               	movlw	138
  7319   004162  6E08               	movwf	(___fladd@a+2)^0,c
  7320   004164  0EBE               	movlw	190
  7321   004166  6E09               	movwf	(___fladd@a+3)^0,c
  7322   004168  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  7323   00416C  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7324   004170  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7325   004174  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7326   004178  EC7C  F026         	call	___fladd	;wreg free
  7327   00417C  C002  F0B9         	movff	?___fladd,_decide_action$3052
  7328   004180  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  7329   004184  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  7330   004188  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  7331   00418C                     
  7332                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7333   00418C  0E00               	movlw	0
  7334   00418E  0100               	movlb	0	; () banked
  7335   004190  6F64               	movwf	powf@y& (0+255),b
  7336   004192  0E00               	movlw	0
  7337   004194  6F65               	movwf	(powf@y+1)& (0+255),b
  7338   004196  0E00               	movlw	0
  7339   004198  6F66               	movwf	(powf@y+2)& (0+255),b
  7340   00419A  0E40               	movlw	64
  7341   00419C  6F67               	movwf	(powf@y+3)& (0+255),b
  7342   00419E  C0B5  F060         	movff	_decide_action$3051,powf@x
  7343   0041A2  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  7344   0041A6  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  7345   0041AA  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  7346   0041AE  EC41  F007         	call	_powf	;wreg free
  7347   0041B2  C060  F0BD         	movff	?_powf,_decide_action$3053
  7348   0041B6  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  7349   0041BA  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  7350   0041BE  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  7351   0041C2                     
  7352                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7353   0041C2  0E00               	movlw	0
  7354   0041C4  0100               	movlb	0	; () banked
  7355   0041C6  6F64               	movwf	powf@y& (0+255),b
  7356   0041C8  0E00               	movlw	0
  7357   0041CA  6F65               	movwf	(powf@y+1)& (0+255),b
  7358   0041CC  0E00               	movlw	0
  7359   0041CE  6F66               	movwf	(powf@y+2)& (0+255),b
  7360   0041D0  0E40               	movlw	64
  7361   0041D2  6F67               	movwf	(powf@y+3)& (0+255),b
  7362   0041D4  C0B9  F060         	movff	_decide_action$3052,powf@x
  7363   0041D8  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  7364   0041DC  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  7365   0041E0  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  7366   0041E4  EC41  F007         	call	_powf	;wreg free
  7367   0041E8  C060  F0C1         	movff	?_powf,_decide_action$3054
  7368   0041EC  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  7369   0041F0  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  7370   0041F4  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  7371                           
  7372                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7373   0041F8  0E23               	movlw	35
  7374   0041FA  6E06               	movwf	___fladd@a^0,c
  7375   0041FC  0EDB               	movlw	219
  7376   0041FE  6E07               	movwf	(___fladd@a+1)^0,c
  7377   004200  0EB9               	movlw	185
  7378   004202  6E08               	movwf	(___fladd@a+2)^0,c
  7379   004204  0EBE               	movlw	190
  7380   004206  6E09               	movwf	(___fladd@a+3)^0,c
  7381   004208  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  7382   00420C  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7383   004210  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7384   004214  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7385   004218  EC7C  F026         	call	___fladd	;wreg free
  7386   00421C  C002  F0C5         	movff	?___fladd,_decide_action$3055
  7387   004220  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  7388   004224  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  7389   004228  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  7390                           
  7391                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7392   00422C  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  7393   004230  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  7394   004234  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  7395   004238  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  7396   00423C  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  7397   004240  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  7398   004244  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  7399   004248  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  7400   00424C  EC7C  F026         	call	___fladd	;wreg free
  7401   004250  C002  F0C9         	movff	?___fladd,_decide_action$3056
  7402   004254  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  7403   004258  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  7404   00425C  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  7405   004260                     
  7406                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7407   004260  0E00               	movlw	0
  7408   004262  0100               	movlb	0	; () banked
  7409   004264  6F64               	movwf	powf@y& (0+255),b
  7410   004266  0E00               	movlw	0
  7411   004268  6F65               	movwf	(powf@y+1)& (0+255),b
  7412   00426A  0E00               	movlw	0
  7413   00426C  6F66               	movwf	(powf@y+2)& (0+255),b
  7414   00426E  0E40               	movlw	64
  7415   004270  6F67               	movwf	(powf@y+3)& (0+255),b
  7416   004272  C0C5  F060         	movff	_decide_action$3055,powf@x
  7417   004276  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  7418   00427A  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  7419   00427E  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  7420   004282  EC41  F007         	call	_powf	;wreg free
  7421   004286  C060  F0CD         	movff	?_powf,_decide_action$3057
  7422   00428A  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  7423   00428E  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  7424   004292  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  7425   004296                     
  7426                           ;color.c: 172:     rgb_comp[6] = sqrtf(powf((red_r - 0.271),2) + powf((green_r - 0.366),
      +                          2) + powf((blue_r - 0.363),2));
  7427   004296  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  7428   00429A  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  7429   00429E  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  7430   0042A2  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  7431   0042A6  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  7432   0042AA  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  7433   0042AE  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  7434   0042B2  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  7435   0042B6  EC7C  F026         	call	___fladd	;wreg free
  7436   0042BA  C002  F012         	movff	?___fladd,sqrtf@x
  7437   0042BE  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7438   0042C2  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7439   0042C6  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7440   0042CA  ECF1  F02A         	call	_sqrtf	;wreg free
  7441   0042CE  C012  F08F         	movff	?_sqrtf,decide_action@rgb_comp+24
  7442   0042D2  C013  F090         	movff	?_sqrtf+1,decide_action@rgb_comp+25
  7443   0042D6  C014  F091         	movff	?_sqrtf+2,decide_action@rgb_comp+26
  7444   0042DA  C015  F092         	movff	?_sqrtf+3,decide_action@rgb_comp+27
  7445   0042DE                     
  7446                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7447   0042DE  0E1F               	movlw	31
  7448   0042E0  6E06               	movwf	___fladd@a^0,c
  7449   0042E2  0E85               	movlw	133
  7450   0042E4  6E07               	movwf	(___fladd@a+1)^0,c
  7451   0042E6  0EAB               	movlw	171
  7452   0042E8  6E08               	movwf	(___fladd@a+2)^0,c
  7453   0042EA  0EBE               	movlw	190
  7454   0042EC  6E09               	movwf	(___fladd@a+3)^0,c
  7455   0042EE  C0AD  F002         	movff	decide_action@green_r,___fladd@b
  7456   0042F2  C0AE  F003         	movff	decide_action@green_r+1,___fladd@b+1
  7457   0042F6  C0AF  F004         	movff	decide_action@green_r+2,___fladd@b+2
  7458   0042FA  C0B0  F005         	movff	decide_action@green_r+3,___fladd@b+3
  7459   0042FE  EC7C  F026         	call	___fladd	;wreg free
  7460   004302  C002  F0B5         	movff	?___fladd,_decide_action$3051
  7461   004306  C003  F0B6         	movff	?___fladd+1,_decide_action$3051+1
  7462   00430A  C004  F0B7         	movff	?___fladd+2,_decide_action$3051+2
  7463   00430E  C005  F0B8         	movff	?___fladd+3,_decide_action$3051+3
  7464   004312                     
  7465                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7466   004312  0EB0               	movlw	176
  7467   004314  6E06               	movwf	___fladd@a^0,c
  7468   004316  0E72               	movlw	114
  7469   004318  6E07               	movwf	(___fladd@a+1)^0,c
  7470   00431A  0EA8               	movlw	168
  7471   00431C  6E08               	movwf	(___fladd@a+2)^0,c
  7472   00431E  0EBE               	movlw	190
  7473   004320  6E09               	movwf	(___fladd@a+3)^0,c
  7474   004322  C0A9  F002         	movff	decide_action@red_r,___fladd@b
  7475   004326  C0AA  F003         	movff	decide_action@red_r+1,___fladd@b+1
  7476   00432A  C0AB  F004         	movff	decide_action@red_r+2,___fladd@b+2
  7477   00432E  C0AC  F005         	movff	decide_action@red_r+3,___fladd@b+3
  7478   004332  EC7C  F026         	call	___fladd	;wreg free
  7479   004336  C002  F0B9         	movff	?___fladd,_decide_action$3052
  7480   00433A  C003  F0BA         	movff	?___fladd+1,_decide_action$3052+1
  7481   00433E  C004  F0BB         	movff	?___fladd+2,_decide_action$3052+2
  7482   004342  C005  F0BC         	movff	?___fladd+3,_decide_action$3052+3
  7483                           
  7484                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7485   004346  0E00               	movlw	0
  7486   004348  0100               	movlb	0	; () banked
  7487   00434A  6F64               	movwf	powf@y& (0+255),b
  7488   00434C  0E00               	movlw	0
  7489   00434E  6F65               	movwf	(powf@y+1)& (0+255),b
  7490   004350  0E00               	movlw	0
  7491   004352  6F66               	movwf	(powf@y+2)& (0+255),b
  7492   004354  0E40               	movlw	64
  7493   004356  6F67               	movwf	(powf@y+3)& (0+255),b
  7494   004358  C0B5  F060         	movff	_decide_action$3051,powf@x
  7495   00435C  C0B6  F061         	movff	_decide_action$3051+1,powf@x+1
  7496   004360  C0B7  F062         	movff	_decide_action$3051+2,powf@x+2
  7497   004364  C0B8  F063         	movff	_decide_action$3051+3,powf@x+3
  7498   004368  EC41  F007         	call	_powf	;wreg free
  7499   00436C  C060  F0BD         	movff	?_powf,_decide_action$3053
  7500   004370  C061  F0BE         	movff	?_powf+1,_decide_action$3053+1
  7501   004374  C062  F0BF         	movff	?_powf+2,_decide_action$3053+2
  7502   004378  C063  F0C0         	movff	?_powf+3,_decide_action$3053+3
  7503                           
  7504                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7505   00437C  0E00               	movlw	0
  7506   00437E  0100               	movlb	0	; () banked
  7507   004380  6F64               	movwf	powf@y& (0+255),b
  7508   004382  0E00               	movlw	0
  7509   004384  6F65               	movwf	(powf@y+1)& (0+255),b
  7510   004386  0E00               	movlw	0
  7511   004388  6F66               	movwf	(powf@y+2)& (0+255),b
  7512   00438A  0E40               	movlw	64
  7513   00438C  6F67               	movwf	(powf@y+3)& (0+255),b
  7514   00438E  C0B9  F060         	movff	_decide_action$3052,powf@x
  7515   004392  C0BA  F061         	movff	_decide_action$3052+1,powf@x+1
  7516   004396  C0BB  F062         	movff	_decide_action$3052+2,powf@x+2
  7517   00439A  C0BC  F063         	movff	_decide_action$3052+3,powf@x+3
  7518   00439E  EC41  F007         	call	_powf	;wreg free
  7519   0043A2  C060  F0C1         	movff	?_powf,_decide_action$3054
  7520   0043A6  C061  F0C2         	movff	?_powf+1,_decide_action$3054+1
  7521   0043AA  C062  F0C3         	movff	?_powf+2,_decide_action$3054+2
  7522   0043AE  C063  F0C4         	movff	?_powf+3,_decide_action$3054+3
  7523   0043B2                     
  7524                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7525   0043B2  0E1F               	movlw	31
  7526   0043B4  6E06               	movwf	___fladd@a^0,c
  7527   0043B6  0E85               	movlw	133
  7528   0043B8  6E07               	movwf	(___fladd@a+1)^0,c
  7529   0043BA  0EAB               	movlw	171
  7530   0043BC  6E08               	movwf	(___fladd@a+2)^0,c
  7531   0043BE  0EBE               	movlw	190
  7532   0043C0  6E09               	movwf	(___fladd@a+3)^0,c
  7533   0043C2  C0B1  F002         	movff	decide_action@blue_r,___fladd@b
  7534   0043C6  C0B2  F003         	movff	decide_action@blue_r+1,___fladd@b+1
  7535   0043CA  C0B3  F004         	movff	decide_action@blue_r+2,___fladd@b+2
  7536   0043CE  C0B4  F005         	movff	decide_action@blue_r+3,___fladd@b+3
  7537   0043D2  EC7C  F026         	call	___fladd	;wreg free
  7538   0043D6  C002  F0C5         	movff	?___fladd,_decide_action$3055
  7539   0043DA  C003  F0C6         	movff	?___fladd+1,_decide_action$3055+1
  7540   0043DE  C004  F0C7         	movff	?___fladd+2,_decide_action$3055+2
  7541   0043E2  C005  F0C8         	movff	?___fladd+3,_decide_action$3055+3
  7542   0043E6                     
  7543                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7544   0043E6  C0BD  F006         	movff	_decide_action$3053,___fladd@a
  7545   0043EA  C0BE  F007         	movff	_decide_action$3053+1,___fladd@a+1
  7546   0043EE  C0BF  F008         	movff	_decide_action$3053+2,___fladd@a+2
  7547   0043F2  C0C0  F009         	movff	_decide_action$3053+3,___fladd@a+3
  7548   0043F6  C0C1  F002         	movff	_decide_action$3054,___fladd@b
  7549   0043FA  C0C2  F003         	movff	_decide_action$3054+1,___fladd@b+1
  7550   0043FE  C0C3  F004         	movff	_decide_action$3054+2,___fladd@b+2
  7551   004402  C0C4  F005         	movff	_decide_action$3054+3,___fladd@b+3
  7552   004406  EC7C  F026         	call	___fladd	;wreg free
  7553   00440A  C002  F0C9         	movff	?___fladd,_decide_action$3056
  7554   00440E  C003  F0CA         	movff	?___fladd+1,_decide_action$3056+1
  7555   004412  C004  F0CB         	movff	?___fladd+2,_decide_action$3056+2
  7556   004416  C005  F0CC         	movff	?___fladd+3,_decide_action$3056+3
  7557                           
  7558                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7559   00441A  0E00               	movlw	0
  7560   00441C  0100               	movlb	0	; () banked
  7561   00441E  6F64               	movwf	powf@y& (0+255),b
  7562   004420  0E00               	movlw	0
  7563   004422  6F65               	movwf	(powf@y+1)& (0+255),b
  7564   004424  0E00               	movlw	0
  7565   004426  6F66               	movwf	(powf@y+2)& (0+255),b
  7566   004428  0E40               	movlw	64
  7567   00442A  6F67               	movwf	(powf@y+3)& (0+255),b
  7568   00442C  C0C5  F060         	movff	_decide_action$3055,powf@x
  7569   004430  C0C6  F061         	movff	_decide_action$3055+1,powf@x+1
  7570   004434  C0C7  F062         	movff	_decide_action$3055+2,powf@x+2
  7571   004438  C0C8  F063         	movff	_decide_action$3055+3,powf@x+3
  7572   00443C  EC41  F007         	call	_powf	;wreg free
  7573   004440  C060  F0CD         	movff	?_powf,_decide_action$3057
  7574   004444  C061  F0CE         	movff	?_powf+1,_decide_action$3057+1
  7575   004448  C062  F0CF         	movff	?_powf+2,_decide_action$3057+2
  7576   00444C  C063  F0D0         	movff	?_powf+3,_decide_action$3057+3
  7577   004450                     
  7578                           ;color.c: 173:     rgb_comp[7] = sqrtf(powf((red_r - 0.329),2) + powf((green_r - 0.335),
      +                          2) + powf((blue_r - 0.335),2));
  7579   004450  C0C9  F002         	movff	_decide_action$3056,___fladd@b
  7580   004454  C0CA  F003         	movff	_decide_action$3056+1,___fladd@b+1
  7581   004458  C0CB  F004         	movff	_decide_action$3056+2,___fladd@b+2
  7582   00445C  C0CC  F005         	movff	_decide_action$3056+3,___fladd@b+3
  7583   004460  C0CD  F006         	movff	_decide_action$3057,___fladd@a
  7584   004464  C0CE  F007         	movff	_decide_action$3057+1,___fladd@a+1
  7585   004468  C0CF  F008         	movff	_decide_action$3057+2,___fladd@a+2
  7586   00446C  C0D0  F009         	movff	_decide_action$3057+3,___fladd@a+3
  7587   004470  EC7C  F026         	call	___fladd	;wreg free
  7588   004474  C002  F012         	movff	?___fladd,sqrtf@x
  7589   004478  C003  F013         	movff	?___fladd+1,sqrtf@x+1
  7590   00447C  C004  F014         	movff	?___fladd+2,sqrtf@x+2
  7591   004480  C005  F015         	movff	?___fladd+3,sqrtf@x+3
  7592   004484  ECF1  F02A         	call	_sqrtf	;wreg free
  7593   004488  C012  F093         	movff	?_sqrtf,decide_action@rgb_comp+28
  7594   00448C  C013  F094         	movff	?_sqrtf+1,decide_action@rgb_comp+29
  7595   004490  C014  F095         	movff	?_sqrtf+2,decide_action@rgb_comp+30
  7596   004494  C015  F096         	movff	?_sqrtf+3,decide_action@rgb_comp+31
  7597   004498                     
  7598                           ;color.c: 175:     action = 0;
  7599   004498  0E00               	movlw	0
  7600   00449A  0100               	movlb	0	; () banked
  7601   00449C  6F97               	movwf	decide_action@action& (0+255),b
  7602   00449E                     
  7603                           ; BSR set to: 0
  7604                           ;color.c: 176:     for(char i = 0; i < 8; i +=1){
  7605   00449E  0E00               	movlw	0
  7606   0044A0  6F9C               	movwf	decide_action@i& (0+255),b
  7607   0044A2                     l7564:
  7608                           
  7609                           ; BSR set to: 0
  7610   0044A2  0E07               	movlw	7
  7611   0044A4  659C               	cpfsgt	decide_action@i& (0+255),b
  7612   0044A6  EF57  F022         	goto	u7811
  7613   0044AA  EF59  F022         	goto	u7810
  7614   0044AE                     u7811:
  7615   0044AE  EF5B  F022         	goto	l7568
  7616   0044B2                     u7810:
  7617   0044B2  EF86  F022         	goto	l7576
  7618   0044B6                     l7568:
  7619                           
  7620                           ; BSR set to: 0
  7621                           ;color.c: 177:         if(rgb_comp[i] < rgb_comp[action]){
  7622   0044B6  519C               	movf	decide_action@i& (0+255),w,b
  7623   0044B8  0D04               	mullw	4
  7624   0044BA  50F3               	movf	243,w,c
  7625   0044BC  0F77               	addlw	low decide_action@rgb_comp
  7626   0044BE  6ED9               	movwf	fsr2l,c
  7627   0044C0  6ADA               	clrf	fsr2h,c
  7628   0044C2  CFDE F04C          	movff	postinc2,___flge@ff1
  7629   0044C6  CFDE F04D          	movff	postinc2,___flge@ff1+1
  7630   0044CA  CFDE F04E          	movff	postinc2,___flge@ff1+2
  7631   0044CE  CFDE F04F          	movff	postinc2,___flge@ff1+3
  7632   0044D2  5197               	movf	decide_action@action& (0+255),w,b
  7633   0044D4  0D04               	mullw	4
  7634   0044D6  50F3               	movf	243,w,c
  7635   0044D8  0F77               	addlw	low decide_action@rgb_comp
  7636   0044DA  6ED9               	movwf	fsr2l,c
  7637   0044DC  6ADA               	clrf	fsr2h,c
  7638   0044DE  CFDE F050          	movff	postinc2,___flge@ff2
  7639   0044E2  CFDE F051          	movff	postinc2,___flge@ff2+1
  7640   0044E6  CFDE F052          	movff	postinc2,___flge@ff2+2
  7641   0044EA  CFDE F053          	movff	postinc2,___flge@ff2+3
  7642   0044EE  EC47  F033         	call	___flge	;wreg free
  7643   0044F2  B0D8               	btfsc	status,0,c
  7644   0044F4  EF7E  F022         	goto	u7821
  7645   0044F8  EF80  F022         	goto	u7820
  7646   0044FC                     u7821:
  7647   0044FC  EF82  F022         	goto	l7572
  7648   004500                     u7820:
  7649   004500                     
  7650                           ;color.c: 178:             action = i;
  7651   004500  C09C  F097         	movff	decide_action@i,decide_action@action
  7652   004504                     l7572:
  7653                           
  7654                           ;color.c: 180:     }
  7655   004504  0100               	movlb	0	; () banked
  7656   004506  2B9C               	incf	decide_action@i& (0+255),f,b
  7657   004508  EF51  F022         	goto	l7564
  7658   00450C                     l7576:
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;color.c: 182:     return action;
  7662   00450C  5197               	movf	decide_action@action& (0+255),w,b
  7663   00450E                     
  7664                           ; BSR set to: 0
  7665   00450E  0012               	return		;funcret
  7666   004510                     __end_of_decide_action:
  7667                           	callstack 0
  7668                           
  7669 ;; *************** function _powf *****************
  7670 ;; Defined at:
  7671 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\powf.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;  x               4    0[BANK0 ] float 
  7674 ;;  y               4    4[BANK0 ] float 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;  s2              4  144[BANK1 ] float 
  7677 ;;  s_h             4  116[BANK1 ] struct fui
  7678 ;;  t_h             4  112[BANK1 ] struct fui
  7679 ;;  t_l             4   52[BANK1 ] float 
  7680 ;;  s_l             4   48[BANK1 ] float 
  7681 ;;  z               4  180[BANK1 ] struct fui
  7682 ;;  t               4  176[BANK1 ] struct fui
  7683 ;;  ix              4  172[BANK1 ] struct fui
  7684 ;;  j               4  168[BANK1 ] long 
  7685 ;;  k               4  164[BANK1 ] long 
  7686 ;;  p_h             4  160[BANK1 ] struct fui
  7687 ;;  is              4  152[BANK1 ] struct fui
  7688 ;;  iy              4  148[BANK1 ] long 
  7689 ;;  t1              4  140[BANK1 ] struct fui
  7690 ;;  n               4  136[BANK1 ] long 
  7691 ;;  hy              4  132[BANK1 ] struct fui
  7692 ;;  v               4  128[BANK1 ] float 
  7693 ;;  u               4  124[BANK1 ] float 
  7694 ;;  ax              4  120[BANK1 ] struct fui
  7695 ;;  p_l             4  108[BANK1 ] float 
  7696 ;;  hx              4  104[BANK1 ] struct fui
  7697 ;;  sn              4  100[BANK1 ] unsigned long 
  7698 ;;  s               4   88[BANK1 ] float 
  7699 ;;  yisint          4   84[BANK1 ] long 
  7700 ;;  r               4   80[BANK1 ] float 
  7701 ;;  w               4   68[BANK1 ] float 
  7702 ;;  y1              4   44[BANK1 ] struct fui
  7703 ;;  i               4   40[BANK1 ] long 
  7704 ;;  z_l             4   36[BANK1 ] float 
  7705 ;;  z_h             4   32[BANK1 ] float 
  7706 ;;  t2              4   28[BANK1 ] float 
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  4    0[BANK0 ] float 
  7709 ;; Registers used:
  7710 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7716 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7717 ;;      Locals:         0       0     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7718 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7719 ;;      Totals:         0      17     184       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7720 ;;Total ram usage:      201 bytes
  7721 ;; Hardware stack levels used: 1
  7722 ;; Hardware stack levels required when called: 4
  7723 ;; This function calls:
  7724 ;;		___fladd
  7725 ;;		___fldiv
  7726 ;;		___flge
  7727 ;;		___flmul
  7728 ;;		___flneg
  7729 ;;		___flsub
  7730 ;;		___xxtofl
  7731 ;;		_scalbnf
  7732 ;;		_sqrtf
  7733 ;; This function is called by:
  7734 ;;		_decide_action
  7735 ;; This function uses a non-reentrant model
  7736 ;;
  7737                           
  7738                           	psect	text29
  7739   000E82                     __ptext29:
  7740                           	callstack 0
  7741   000E82                     _powf:
  7742                           	callstack 25
  7743   000E82  C060  F168         	movff	powf@x,powf@hx
  7744   000E86  C061  F169         	movff	powf@x+1,powf@hx+1
  7745   000E8A  C062  F16A         	movff	powf@x+2,powf@hx+2
  7746   000E8E  C063  F16B         	movff	powf@x+3,powf@hx+3
  7747   000E92  C064  F184         	movff	powf@y,powf@hy
  7748   000E96  C065  F185         	movff	powf@y+1,powf@hy+1
  7749   000E9A  C066  F186         	movff	powf@y+2,powf@hy+2
  7750   000E9E  C067  F187         	movff	powf@y+3,powf@hy+3
  7751   000EA2  0EFF               	movlw	255
  7752   000EA4  0101               	movlb	1	; () banked
  7753   000EA6  1568               	andwf	powf@hx& (0+255),w,b
  7754   000EA8  6FAC               	movwf	powf@ix& (0+255),b
  7755   000EAA  0EFF               	movlw	255
  7756   000EAC  1569               	andwf	(powf@hx+1)& (0+255),w,b
  7757   000EAE  6FAD               	movwf	(powf@ix+1)& (0+255),b
  7758   000EB0  0EFF               	movlw	255
  7759   000EB2  156A               	andwf	(powf@hx+2)& (0+255),w,b
  7760   000EB4  6FAE               	movwf	(powf@ix+2)& (0+255),b
  7761   000EB6  0E7F               	movlw	127
  7762   000EB8  156B               	andwf	(powf@hx+3)& (0+255),w,b
  7763   000EBA  6FAF               	movwf	(powf@ix+3)& (0+255),b
  7764   000EBC  0EFF               	movlw	255
  7765   000EBE  1584               	andwf	powf@hy& (0+255),w,b
  7766   000EC0  6F94               	movwf	powf@iy& (0+255),b
  7767   000EC2  0EFF               	movlw	255
  7768   000EC4  1585               	andwf	(powf@hy+1)& (0+255),w,b
  7769   000EC6  6F95               	movwf	(powf@iy+1)& (0+255),b
  7770   000EC8  0EFF               	movlw	255
  7771   000ECA  1586               	andwf	(powf@hy+2)& (0+255),w,b
  7772   000ECC  6F96               	movwf	(powf@iy+2)& (0+255),b
  7773   000ECE  0E7F               	movlw	127
  7774   000ED0  1587               	andwf	(powf@hy+3)& (0+255),w,b
  7775   000ED2  6F97               	movwf	(powf@iy+3)& (0+255),b
  7776   000ED4  5194               	movf	powf@iy& (0+255),w,b
  7777   000ED6  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  7778   000ED8  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  7779   000EDA  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  7780   000EDC  A4D8               	btfss	status,2,c
  7781   000EDE  EF73  F007         	goto	u7201
  7782   000EE2  EF75  F007         	goto	u7200
  7783   000EE6                     u7201:
  7784   000EE6  EF80  F007         	goto	l7036
  7785   000EEA                     u7200:
  7786   000EEA                     
  7787                           ; BSR set to: 1
  7788   000EEA  0E00               	movlw	0
  7789   000EEC  0100               	movlb	0	; () banked
  7790   000EEE  6F60               	movwf	?_powf& (0+255),b
  7791   000EF0  0E00               	movlw	0
  7792   000EF2  6F61               	movwf	(?_powf+1)& (0+255),b
  7793   000EF4  0E80               	movlw	128
  7794   000EF6  6F62               	movwf	(?_powf+2)& (0+255),b
  7795   000EF8  0E3F               	movlw	63
  7796   000EFA  6F63               	movwf	(?_powf+3)& (0+255),b
  7797   000EFC  EF80  F019         	goto	l1371
  7798   000F00                     l7036:
  7799                           
  7800                           ; BSR set to: 1
  7801   000F00  0E80               	movlw	128
  7802   000F02  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  7803   000F04  E109               	bnz	u7211
  7804   000F06  0E3F               	movlw	63
  7805   000F08  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  7806   000F0A  1168               	iorwf	powf@hx& (0+255),w,b
  7807   000F0C  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  7808   000F0E  A4D8               	btfss	status,2,c
  7809   000F10  EF8C  F007         	goto	u7211
  7810   000F14  EF8E  F007         	goto	u7210
  7811   000F18                     u7211:
  7812   000F18  EF99  F007         	goto	l7042
  7813   000F1C                     u7210:
  7814   000F1C                     
  7815                           ; BSR set to: 1
  7816   000F1C  0E00               	movlw	0
  7817   000F1E  0100               	movlb	0	; () banked
  7818   000F20  6F60               	movwf	?_powf& (0+255),b
  7819   000F22  0E00               	movlw	0
  7820   000F24  6F61               	movwf	(?_powf+1)& (0+255),b
  7821   000F26  0E80               	movlw	128
  7822   000F28  6F62               	movwf	(?_powf+2)& (0+255),b
  7823   000F2A  0E3F               	movlw	63
  7824   000F2C  6F63               	movwf	(?_powf+3)& (0+255),b
  7825   000F2E  EF80  F019         	goto	l1371
  7826   000F32                     l7042:
  7827                           
  7828                           ; BSR set to: 1
  7829   000F32  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  7830   000F34  EFAA  F007         	goto	u7220
  7831   000F38  05AC               	decf	powf@ix& (0+255),w,b
  7832   000F3A  0E00               	movlw	0
  7833   000F3C  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  7834   000F3E  0E80               	movlw	128
  7835   000F40  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  7836   000F42  0E7F               	movlw	127
  7837   000F44  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  7838   000F46  B0D8               	btfsc	status,0,c
  7839   000F48  EFA8  F007         	goto	u7221
  7840   000F4C  EFAA  F007         	goto	u7220
  7841   000F50                     u7221:
  7842   000F50  EFBB  F007         	goto	l7046
  7843   000F54                     u7220:
  7844   000F54                     
  7845                           ; BSR set to: 1
  7846   000F54  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7847   000F56  EFB9  F007         	goto	u7231
  7848   000F5A  0594               	decf	powf@iy& (0+255),w,b
  7849   000F5C  0E00               	movlw	0
  7850   000F5E  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  7851   000F60  0E80               	movlw	128
  7852   000F62  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  7853   000F64  0E7F               	movlw	127
  7854   000F66  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7855   000F68  A0D8               	btfss	status,0,c
  7856   000F6A  EFB9  F007         	goto	u7231
  7857   000F6E  EFBB  F007         	goto	u7230
  7858   000F72                     u7231:
  7859   000F72  EFD7  F007         	goto	l7050
  7860   000F76                     u7230:
  7861   000F76                     l7046:
  7862                           
  7863                           ; BSR set to: 1
  7864   000F76  C060  F002         	movff	powf@x,___fladd@b
  7865   000F7A  C061  F003         	movff	powf@x+1,___fladd@b+1
  7866   000F7E  C062  F004         	movff	powf@x+2,___fladd@b+2
  7867   000F82  C063  F005         	movff	powf@x+3,___fladd@b+3
  7868   000F86  C064  F006         	movff	powf@y,___fladd@a
  7869   000F8A  C065  F007         	movff	powf@y+1,___fladd@a+1
  7870   000F8E  C066  F008         	movff	powf@y+2,___fladd@a+2
  7871   000F92  C067  F009         	movff	powf@y+3,___fladd@a+3
  7872   000F96  EC7C  F026         	call	___fladd	;wreg free
  7873   000F9A  C002  F060         	movff	?___fladd,?_powf
  7874   000F9E  C003  F061         	movff	?___fladd+1,?_powf+1
  7875   000FA2  C004  F062         	movff	?___fladd+2,?_powf+2
  7876   000FA6  C005  F063         	movff	?___fladd+3,?_powf+3
  7877   000FAA  EF80  F019         	goto	l1371
  7878   000FAE                     l7050:
  7879                           
  7880                           ; BSR set to: 1
  7881   000FAE  0E00               	movlw	0
  7882   000FB0  6F54               	movwf	powf@yisint& (0+255),b
  7883   000FB2  0E00               	movlw	0
  7884   000FB4  6F55               	movwf	(powf@yisint+1)& (0+255),b
  7885   000FB6  0E00               	movlw	0
  7886   000FB8  6F56               	movwf	(powf@yisint+2)& (0+255),b
  7887   000FBA  0E00               	movlw	0
  7888   000FBC  6F57               	movwf	(powf@yisint+3)& (0+255),b
  7889   000FBE                     
  7890                           ; BSR set to: 1
  7891   000FBE  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  7892   000FC0  EFE6  F007         	goto	u7240
  7893   000FC4  EFE4  F007         	goto	u7241
  7894   000FC8                     u7241:
  7895   000FC8  EFB2  F008         	goto	l1376
  7896   000FCC                     u7240:
  7897   000FCC                     
  7898                           ; BSR set to: 1
  7899   000FCC  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7900   000FCE  EFF2  F007         	goto	u7251
  7901   000FD2  0E80               	movlw	128
  7902   000FD4  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  7903   000FD6  0E4B               	movlw	75
  7904   000FD8  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7905   000FDA  A0D8               	btfss	status,0,c
  7906   000FDC  EFF2  F007         	goto	u7251
  7907   000FE0  EFF4  F007         	goto	u7250
  7908   000FE4                     u7251:
  7909   000FE4  EFFE  F007         	goto	l7058
  7910   000FE8                     u7250:
  7911   000FE8                     
  7912                           ; BSR set to: 1
  7913   000FE8  0E02               	movlw	2
  7914   000FEA  6F54               	movwf	powf@yisint& (0+255),b
  7915   000FEC  0E00               	movlw	0
  7916   000FEE  6F55               	movwf	(powf@yisint+1)& (0+255),b
  7917   000FF0  0E00               	movlw	0
  7918   000FF2  6F56               	movwf	(powf@yisint+2)& (0+255),b
  7919   000FF4  0E00               	movlw	0
  7920   000FF6  6F57               	movwf	(powf@yisint+3)& (0+255),b
  7921   000FF8  EFB2  F008         	goto	l1376
  7922   000FFC                     l7058:
  7923                           
  7924                           ; BSR set to: 1
  7925   000FFC  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  7926   000FFE  EF0A  F008         	goto	u7261
  7927   001002  0E80               	movlw	128
  7928   001004  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  7929   001006  0E3F               	movlw	63
  7930   001008  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  7931   00100A  A0D8               	btfss	status,0,c
  7932   00100C  EF0A  F008         	goto	u7261
  7933   001010  EF0C  F008         	goto	u7260
  7934   001014                     u7261:
  7935   001014  EFB2  F008         	goto	l1376
  7936   001018                     u7260:
  7937   001018                     
  7938                           ; BSR set to: 1
  7939   001018  0E17               	movlw	23
  7940   00101A  0100               	movlb	0	; () banked
  7941   00101C  6F68               	movwf	??_powf& (0+255),b
  7942   00101E  C194  F069         	movff	powf@iy,??_powf+1
  7943   001022  C195  F06A         	movff	powf@iy+1,??_powf+2
  7944   001026  C196  F06B         	movff	powf@iy+2,??_powf+3
  7945   00102A  C197  F06C         	movff	powf@iy+3,??_powf+4
  7946   00102E                     u7275:
  7947   00102E  6768               	tstfsz	??_powf& (0+255),b
  7948   001030  EF1C  F008         	goto	u7276
  7949   001034  EF24  F008         	goto	u7277
  7950   001038                     u7276:
  7951   001038  356C               	rlcf	(??_powf+4)& (0+255),w,b
  7952   00103A  336C               	rrcf	(??_powf+4)& (0+255),f,b
  7953   00103C  336B               	rrcf	(??_powf+3)& (0+255),f,b
  7954   00103E  336A               	rrcf	(??_powf+2)& (0+255),f,b
  7955   001040  3369               	rrcf	(??_powf+1)& (0+255),f,b
  7956   001042  2F68               	decfsz	??_powf& (0+255),f,b
  7957   001044  EF17  F008         	goto	u7275
  7958   001048                     u7277:
  7959   001048  0E81               	movlw	129
  7960   00104A  0100               	movlb	0	; () banked
  7961   00104C  2569               	addwf	(??_powf+1)& (0+255),w,b
  7962   00104E  0101               	movlb	1	; () banked
  7963   001050  6FA4               	movwf	powf@k& (0+255),b
  7964   001052  0EFF               	movlw	255
  7965   001054  0100               	movlb	0	; () banked
  7966   001056  216A               	addwfc	(??_powf+2)& (0+255),w,b
  7967   001058  0101               	movlb	1	; () banked
  7968   00105A  6FA5               	movwf	(powf@k+1)& (0+255),b
  7969   00105C  0EFF               	movlw	255
  7970   00105E  0100               	movlb	0	; () banked
  7971   001060  216B               	addwfc	(??_powf+3)& (0+255),w,b
  7972   001062  0101               	movlb	1	; () banked
  7973   001064  6FA6               	movwf	(powf@k+2)& (0+255),b
  7974   001066  0EFF               	movlw	255
  7975   001068  0100               	movlb	0	; () banked
  7976   00106A  216C               	addwfc	(??_powf+4)& (0+255),w,b
  7977   00106C  0101               	movlb	1	; () banked
  7978   00106E  6FA7               	movwf	(powf@k+3)& (0+255),b
  7979   001070  51A4               	movf	powf@k& (0+255),w,b
  7980   001072  0817               	sublw	23
  7981   001074  0100               	movlb	0	; () banked
  7982   001076  6F68               	movwf	??_powf& (0+255),b
  7983   001078  C194  F069         	movff	powf@iy,??_powf+1
  7984   00107C  C195  F06A         	movff	powf@iy+1,??_powf+2
  7985   001080  C196  F06B         	movff	powf@iy+2,??_powf+3
  7986   001084  C197  F06C         	movff	powf@iy+3,??_powf+4
  7987   001088                     u7285:
  7988   001088  6768               	tstfsz	??_powf& (0+255),b
  7989   00108A  EF49  F008         	goto	u7286
  7990   00108E  EF51  F008         	goto	u7287
  7991   001092                     u7286:
  7992   001092  356C               	rlcf	(??_powf+4)& (0+255),w,b
  7993   001094  336C               	rrcf	(??_powf+4)& (0+255),f,b
  7994   001096  336B               	rrcf	(??_powf+3)& (0+255),f,b
  7995   001098  336A               	rrcf	(??_powf+2)& (0+255),f,b
  7996   00109A  3369               	rrcf	(??_powf+1)& (0+255),f,b
  7997   00109C  2F68               	decfsz	??_powf& (0+255),f,b
  7998   00109E  EF44  F008         	goto	u7285
  7999   0010A2                     u7287:
  8000   0010A2  C069  F1A8         	movff	??_powf+1,powf@j
  8001   0010A6  C06A  F1A9         	movff	??_powf+2,powf@j+1
  8002   0010AA  C06B  F1AA         	movff	??_powf+3,powf@j+2
  8003   0010AE  C06C  F1AB         	movff	??_powf+4,powf@j+3
  8004   0010B2  0101               	movlb	1	; () banked
  8005   0010B4  51A4               	movf	powf@k& (0+255),w,b
  8006   0010B6  0817               	sublw	23
  8007   0010B8  0100               	movlb	0	; () banked
  8008   0010BA  6F68               	movwf	??_powf& (0+255),b
  8009   0010BC  C1A8  F069         	movff	powf@j,??_powf+1
  8010   0010C0  C1A9  F06A         	movff	powf@j+1,??_powf+2
  8011   0010C4  C1AA  F06B         	movff	powf@j+2,??_powf+3
  8012   0010C8  C1AB  F06C         	movff	powf@j+3,??_powf+4
  8013   0010CC  2B68               	incf	??_powf& (0+255),f,b
  8014   0010CE  EF6E  F008         	goto	u7290
  8015   0010D2                     u7295:
  8016   0010D2  90D8               	bcf	status,0,c
  8017   0010D4  3769               	rlcf	(??_powf+1)& (0+255),f,b
  8018   0010D6  376A               	rlcf	(??_powf+2)& (0+255),f,b
  8019   0010D8  376B               	rlcf	(??_powf+3)& (0+255),f,b
  8020   0010DA  376C               	rlcf	(??_powf+4)& (0+255),f,b
  8021   0010DC                     u7290:
  8022   0010DC  2F68               	decfsz	??_powf& (0+255),f,b
  8023   0010DE  EF69  F008         	goto	u7295
  8024   0010E2  0101               	movlb	1	; () banked
  8025   0010E4  5194               	movf	powf@iy& (0+255),w,b
  8026   0010E6  0100               	movlb	0	; () banked
  8027   0010E8  1969               	xorwf	(??_powf+1)& (0+255),w,b
  8028   0010EA  E113               	bnz	u7301
  8029   0010EC  0101               	movlb	1	; () banked
  8030   0010EE  5195               	movf	(powf@iy+1)& (0+255),w,b
  8031   0010F0  0100               	movlb	0	; () banked
  8032   0010F2  196A               	xorwf	(??_powf+2)& (0+255),w,b
  8033   0010F4  E10E               	bnz	u7301
  8034   0010F6  0101               	movlb	1	; () banked
  8035   0010F8  5196               	movf	(powf@iy+2)& (0+255),w,b
  8036   0010FA  0100               	movlb	0	; () banked
  8037   0010FC  196B               	xorwf	(??_powf+3)& (0+255),w,b
  8038   0010FE  E109               	bnz	u7301
  8039   001100  0101               	movlb	1	; () banked
  8040   001102  5197               	movf	(powf@iy+3)& (0+255),w,b
  8041   001104  0100               	movlb	0	; () banked
  8042   001106  196C               	xorwf	(??_powf+4)& (0+255),w,b
  8043   001108  A4D8               	btfss	status,2,c
  8044   00110A  EF89  F008         	goto	u7301
  8045   00110E  EF8B  F008         	goto	u7300
  8046   001112                     u7301:
  8047   001112  EFB2  F008         	goto	l1376
  8048   001116                     u7300:
  8049   001116                     
  8050                           ; BSR set to: 0
  8051   001116  0E01               	movlw	1
  8052   001118  0101               	movlb	1	; () banked
  8053   00111A  15A8               	andwf	powf@j& (0+255),w,b
  8054   00111C  0100               	movlb	0	; () banked
  8055   00111E  6F68               	movwf	??_powf& (0+255),b
  8056   001120  0E00               	movlw	0
  8057   001122  0101               	movlb	1	; () banked
  8058   001124  15A9               	andwf	(powf@j+1)& (0+255),w,b
  8059   001126  0100               	movlb	0	; () banked
  8060   001128  6F69               	movwf	(??_powf+1)& (0+255),b
  8061   00112A  0E00               	movlw	0
  8062   00112C  0101               	movlb	1	; () banked
  8063   00112E  15AA               	andwf	(powf@j+2)& (0+255),w,b
  8064   001130  0100               	movlb	0	; () banked
  8065   001132  6F6A               	movwf	(??_powf+2)& (0+255),b
  8066   001134  0E00               	movlw	0
  8067   001136  0101               	movlb	1	; () banked
  8068   001138  15AB               	andwf	(powf@j+3)& (0+255),w,b
  8069   00113A  0100               	movlb	0	; () banked
  8070   00113C  6F6B               	movwf	(??_powf+3)& (0+255),b
  8071   00113E  5168               	movf	??_powf& (0+255),w,b
  8072   001140  0802               	sublw	2
  8073   001142  0101               	movlb	1	; () banked
  8074   001144  6F54               	movwf	powf@yisint& (0+255),b
  8075   001146  0E00               	movlw	0
  8076   001148  0100               	movlb	0	; () banked
  8077   00114A  5569               	subfwb	(??_powf+1)& (0+255),w,b
  8078   00114C  0101               	movlb	1	; () banked
  8079   00114E  6F55               	movwf	(powf@yisint+1)& (0+255),b
  8080   001150  0E00               	movlw	0
  8081   001152  0100               	movlb	0	; () banked
  8082   001154  556A               	subfwb	(??_powf+2)& (0+255),w,b
  8083   001156  0101               	movlb	1	; () banked
  8084   001158  6F56               	movwf	(powf@yisint+2)& (0+255),b
  8085   00115A  0E00               	movlw	0
  8086   00115C  0100               	movlb	0	; () banked
  8087   00115E  556B               	subfwb	(??_powf+3)& (0+255),w,b
  8088   001160  0101               	movlb	1	; () banked
  8089   001162  6F57               	movwf	(powf@yisint+3)& (0+255),b
  8090   001164                     l1376:
  8091   001164  0E80               	movlw	128
  8092   001166  0101               	movlb	1	; () banked
  8093   001168  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  8094   00116A  E109               	bnz	u7311
  8095   00116C  0E7F               	movlw	127
  8096   00116E  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  8097   001170  1194               	iorwf	powf@iy& (0+255),w,b
  8098   001172  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  8099   001174  A4D8               	btfss	status,2,c
  8100   001176  EFBF  F008         	goto	u7311
  8101   00117A  EFC1  F008         	goto	u7310
  8102   00117E                     u7311:
  8103   00117E  EF2D  F009         	goto	l7088
  8104   001182                     u7310:
  8105   001182                     
  8106                           ; BSR set to: 1
  8107   001182  0E80               	movlw	128
  8108   001184  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  8109   001186  E109               	bnz	u7321
  8110   001188  0E3F               	movlw	63
  8111   00118A  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  8112   00118C  11AC               	iorwf	powf@ix& (0+255),w,b
  8113   00118E  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8114   001190  A4D8               	btfss	status,2,c
  8115   001192  EFCD  F008         	goto	u7321
  8116   001196  EFCF  F008         	goto	u7320
  8117   00119A                     u7321:
  8118   00119A  EFDA  F008         	goto	l7072
  8119   00119E                     u7320:
  8120   00119E                     
  8121                           ; BSR set to: 1
  8122   00119E  0E00               	movlw	0
  8123   0011A0  0100               	movlb	0	; () banked
  8124   0011A2  6F60               	movwf	?_powf& (0+255),b
  8125   0011A4  0E00               	movlw	0
  8126   0011A6  6F61               	movwf	(?_powf+1)& (0+255),b
  8127   0011A8  0E80               	movlw	128
  8128   0011AA  6F62               	movwf	(?_powf+2)& (0+255),b
  8129   0011AC  0E3F               	movlw	63
  8130   0011AE  6F63               	movwf	(?_powf+3)& (0+255),b
  8131   0011B0  EF80  F019         	goto	l1371
  8132   0011B4                     l7072:
  8133                           
  8134                           ; BSR set to: 1
  8135   0011B4  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8136   0011B6  EFE9  F008         	goto	u7331
  8137   0011BA  05AC               	decf	powf@ix& (0+255),w,b
  8138   0011BC  0E00               	movlw	0
  8139   0011BE  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  8140   0011C0  0E80               	movlw	128
  8141   0011C2  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  8142   0011C4  0E3F               	movlw	63
  8143   0011C6  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  8144   0011C8  A0D8               	btfss	status,0,c
  8145   0011CA  EFE9  F008         	goto	u7331
  8146   0011CE  EFEB  F008         	goto	u7330
  8147   0011D2                     u7331:
  8148   0011D2  EF07  F009         	goto	l7080
  8149   0011D6                     u7330:
  8150   0011D6                     
  8151                           ; BSR set to: 1
  8152   0011D6  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8153   0011D8  EFF2  F008         	goto	u7340
  8154   0011DC  EFF0  F008         	goto	u7341
  8155   0011E0                     u7341:
  8156   0011E0  EFFD  F008         	goto	l1386
  8157   0011E4                     u7340:
  8158   0011E4                     
  8159                           ; BSR set to: 1
  8160   0011E4  0E00               	movlw	0
  8161   0011E6  0100               	movlb	0	; () banked
  8162   0011E8  6F60               	movwf	?_powf& (0+255),b
  8163   0011EA  0E00               	movlw	0
  8164   0011EC  6F61               	movwf	(?_powf+1)& (0+255),b
  8165   0011EE  0E00               	movlw	0
  8166   0011F0  6F62               	movwf	(?_powf+2)& (0+255),b
  8167   0011F2  0E00               	movlw	0
  8168   0011F4  6F63               	movwf	(?_powf+3)& (0+255),b
  8169   0011F6  EF80  F019         	goto	l1371
  8170   0011FA                     l1386:
  8171                           
  8172                           ; BSR set to: 1
  8173   0011FA  C064  F060         	movff	powf@y,?_powf
  8174   0011FE  C065  F061         	movff	powf@y+1,?_powf+1
  8175   001202  C066  F062         	movff	powf@y+2,?_powf+2
  8176   001206  C067  F063         	movff	powf@y+3,?_powf+3
  8177   00120A  EF80  F019         	goto	l1371
  8178   00120E                     l7080:
  8179                           
  8180                           ; BSR set to: 1
  8181   00120E  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8182   001210  EF0E  F009         	goto	u7350
  8183   001214  EF0C  F009         	goto	u7351
  8184   001218                     u7351:
  8185   001218  EF22  F009         	goto	l7084
  8186   00121C                     u7350:
  8187   00121C                     
  8188                           ; BSR set to: 1
  8189   00121C  C064  F002         	movff	powf@y,___flneg@f1
  8190   001220  C065  F003         	movff	powf@y+1,___flneg@f1+1
  8191   001224  C066  F004         	movff	powf@y+2,___flneg@f1+2
  8192   001228  C067  F005         	movff	powf@y+3,___flneg@f1+3
  8193   00122C  EC42  F03A         	call	___flneg	;wreg free
  8194   001230  C002  F060         	movff	?___flneg,?_powf
  8195   001234  C003  F061         	movff	?___flneg+1,?_powf+1
  8196   001238  C004  F062         	movff	?___flneg+2,?_powf+2
  8197   00123C  C005  F063         	movff	?___flneg+3,?_powf+3
  8198   001240  EF80  F019         	goto	l1371
  8199   001244                     l7084:
  8200                           
  8201                           ; BSR set to: 1
  8202   001244  0E00               	movlw	0
  8203   001246  0100               	movlb	0	; () banked
  8204   001248  6F60               	movwf	?_powf& (0+255),b
  8205   00124A  0E00               	movlw	0
  8206   00124C  6F61               	movwf	(?_powf+1)& (0+255),b
  8207   00124E  0E00               	movlw	0
  8208   001250  6F62               	movwf	(?_powf+2)& (0+255),b
  8209   001252  0E00               	movlw	0
  8210   001254  6F63               	movwf	(?_powf+3)& (0+255),b
  8211   001256  EF80  F019         	goto	l1371
  8212   00125A                     l7088:
  8213                           
  8214                           ; BSR set to: 1
  8215   00125A  0E80               	movlw	128
  8216   00125C  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  8217   00125E  E109               	bnz	u7361
  8218   001260  0E3F               	movlw	63
  8219   001262  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  8220   001264  1194               	iorwf	powf@iy& (0+255),w,b
  8221   001266  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  8222   001268  A4D8               	btfss	status,2,c
  8223   00126A  EF39  F009         	goto	u7361
  8224   00126E  EF3B  F009         	goto	u7360
  8225   001272                     u7361:
  8226   001272  EF68  F009         	goto	l7094
  8227   001276                     u7360:
  8228   001276                     
  8229                           ; BSR set to: 1
  8230   001276  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8231   001278  EF42  F009         	goto	u7370
  8232   00127C  EF40  F009         	goto	u7371
  8233   001280                     u7371:
  8234   001280  EF5E  F009         	goto	l1396
  8235   001284                     u7370:
  8236   001284                     
  8237                           ; BSR set to: 1
  8238   001284  0E00               	movlw	0
  8239   001286  6E2B               	movwf	___fldiv@b^0,c
  8240   001288  0E00               	movlw	0
  8241   00128A  6E2C               	movwf	(___fldiv@b+1)^0,c
  8242   00128C  0E80               	movlw	128
  8243   00128E  6E2D               	movwf	(___fldiv@b+2)^0,c
  8244   001290  0E3F               	movlw	63
  8245   001292  6E2E               	movwf	(___fldiv@b+3)^0,c
  8246   001294  C060  F02F         	movff	powf@x,___fldiv@a
  8247   001298  C061  F030         	movff	powf@x+1,___fldiv@a+1
  8248   00129C  C062  F031         	movff	powf@x+2,___fldiv@a+2
  8249   0012A0  C063  F032         	movff	powf@x+3,___fldiv@a+3
  8250   0012A4  ECE0  F02C         	call	___fldiv	;wreg free
  8251   0012A8  C02B  F060         	movff	?___fldiv,?_powf
  8252   0012AC  C02C  F061         	movff	?___fldiv+1,?_powf+1
  8253   0012B0  C02D  F062         	movff	?___fldiv+2,?_powf+2
  8254   0012B4  C02E  F063         	movff	?___fldiv+3,?_powf+3
  8255   0012B8  EF80  F019         	goto	l1371
  8256   0012BC                     l1396:
  8257                           
  8258                           ; BSR set to: 1
  8259   0012BC  C060  F060         	movff	powf@x,?_powf
  8260   0012C0  C061  F061         	movff	powf@x+1,?_powf+1
  8261   0012C4  C062  F062         	movff	powf@x+2,?_powf+2
  8262   0012C8  C063  F063         	movff	powf@x+3,?_powf+3
  8263   0012CC  EF80  F019         	goto	l1371
  8264   0012D0                     l7094:
  8265                           
  8266                           ; BSR set to: 1
  8267   0012D0  0E40               	movlw	64
  8268   0012D2  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  8269   0012D4  1184               	iorwf	powf@hy& (0+255),w,b
  8270   0012D6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  8271   0012D8  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  8272   0012DA  A4D8               	btfss	status,2,c
  8273   0012DC  EF72  F009         	goto	u7381
  8274   0012E0  EF74  F009         	goto	u7380
  8275   0012E4                     u7381:
  8276   0012E4  EF90  F009         	goto	l7100
  8277   0012E8                     u7380:
  8278   0012E8                     
  8279                           ; BSR set to: 1
  8280   0012E8  C060  F012         	movff	powf@x,___flmul@b
  8281   0012EC  C061  F013         	movff	powf@x+1,___flmul@b+1
  8282   0012F0  C062  F014         	movff	powf@x+2,___flmul@b+2
  8283   0012F4  C063  F015         	movff	powf@x+3,___flmul@b+3
  8284   0012F8  C060  F016         	movff	powf@x,___flmul@a
  8285   0012FC  C061  F017         	movff	powf@x+1,___flmul@a+1
  8286   001300  C062  F018         	movff	powf@x+2,___flmul@a+2
  8287   001304  C063  F019         	movff	powf@x+3,___flmul@a+3
  8288   001308  ECDC  F028         	call	___flmul	;wreg free
  8289   00130C  C012  F060         	movff	?___flmul,?_powf
  8290   001310  C013  F061         	movff	?___flmul+1,?_powf+1
  8291   001314  C014  F062         	movff	?___flmul+2,?_powf+2
  8292   001318  C015  F063         	movff	?___flmul+3,?_powf+3
  8293   00131C  EF80  F019         	goto	l1371
  8294   001320                     l7100:
  8295                           
  8296                           ; BSR set to: 1
  8297   001320  0E3F               	movlw	63
  8298   001322  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  8299   001324  1184               	iorwf	powf@hy& (0+255),w,b
  8300   001326  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  8301   001328  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  8302   00132A  A4D8               	btfss	status,2,c
  8303   00132C  EF9A  F009         	goto	u7391
  8304   001330  EF9C  F009         	goto	u7390
  8305   001334                     u7391:
  8306   001334  EFB7  F009         	goto	l1400
  8307   001338                     u7390:
  8308   001338                     
  8309                           ; BSR set to: 1
  8310   001338  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  8311   00133A  EFA1  F009         	goto	u7401
  8312   00133E  EFA3  F009         	goto	u7400
  8313   001342                     u7401:
  8314   001342  EFB7  F009         	goto	l1400
  8315   001346                     u7400:
  8316   001346                     
  8317                           ; BSR set to: 1
  8318   001346  C060  F012         	movff	powf@x,sqrtf@x
  8319   00134A  C061  F013         	movff	powf@x+1,sqrtf@x+1
  8320   00134E  C062  F014         	movff	powf@x+2,sqrtf@x+2
  8321   001352  C063  F015         	movff	powf@x+3,sqrtf@x+3
  8322   001356  ECF1  F02A         	call	_sqrtf	;wreg free
  8323   00135A  C012  F060         	movff	?_sqrtf,?_powf
  8324   00135E  C013  F061         	movff	?_sqrtf+1,?_powf+1
  8325   001362  C014  F062         	movff	?_sqrtf+2,?_powf+2
  8326   001366  C015  F063         	movff	?_sqrtf+3,?_powf+3
  8327   00136A  EF80  F019         	goto	l1371
  8328   00136E                     l1400:
  8329                           
  8330                           ; BSR set to: 1
  8331   00136E  C1AC  F178         	movff	powf@ix,powf@ax
  8332   001372  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  8333   001376  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  8334   00137A  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  8335   00137E                     
  8336                           ; BSR set to: 1
  8337   00137E  0E80               	movlw	128
  8338   001380  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  8339   001382  E10B               	bnz	u7410
  8340   001384  0E7F               	movlw	127
  8341   001386  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  8342   001388  11AC               	iorwf	powf@ix& (0+255),w,b
  8343   00138A  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8344   00138C  B4D8               	btfsc	status,2,c
  8345   00138E  EFCB  F009         	goto	u7411
  8346   001392  EFCD  F009         	goto	u7410
  8347   001396                     u7411:
  8348   001396  EFE6  F009         	goto	l1404
  8349   00139A                     u7410:
  8350   00139A                     
  8351                           ; BSR set to: 1
  8352   00139A  51AC               	movf	powf@ix& (0+255),w,b
  8353   00139C  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8354   00139E  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  8355   0013A0  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  8356   0013A2  B4D8               	btfsc	status,2,c
  8357   0013A4  EFD6  F009         	goto	u7421
  8358   0013A8  EFD8  F009         	goto	u7420
  8359   0013AC                     u7421:
  8360   0013AC  EFE6  F009         	goto	l1404
  8361   0013B0                     u7420:
  8362   0013B0                     
  8363                           ; BSR set to: 1
  8364   0013B0  0E80               	movlw	128
  8365   0013B2  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  8366   0013B4  E109               	bnz	u7431
  8367   0013B6  0E3F               	movlw	63
  8368   0013B8  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  8369   0013BA  11AC               	iorwf	powf@ix& (0+255),w,b
  8370   0013BC  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  8371   0013BE  A4D8               	btfss	status,2,c
  8372   0013C0  EFE4  F009         	goto	u7431
  8373   0013C4  EFE6  F009         	goto	u7430
  8374   0013C8                     u7431:
  8375   0013C8  EF81  F00A         	goto	l7132
  8376   0013CC                     u7430:
  8377   0013CC                     l1404:
  8378                           
  8379                           ; BSR set to: 1
  8380   0013CC  C178  F1B4         	movff	powf@ax,powf@z
  8381   0013D0  C179  F1B5         	movff	powf@ax+1,powf@z+1
  8382   0013D4  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  8383   0013D8  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  8384   0013DC                     
  8385                           ; BSR set to: 1
  8386   0013DC  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8387   0013DE  EFF5  F009         	goto	u7440
  8388   0013E2  EFF3  F009         	goto	u7441
  8389   0013E6                     u7441:
  8390   0013E6  EF0F  F00A         	goto	l7118
  8391   0013EA                     u7440:
  8392   0013EA                     
  8393                           ; BSR set to: 1
  8394   0013EA  0E00               	movlw	0
  8395   0013EC  6E2B               	movwf	___fldiv@b^0,c
  8396   0013EE  0E00               	movlw	0
  8397   0013F0  6E2C               	movwf	(___fldiv@b+1)^0,c
  8398   0013F2  0E80               	movlw	128
  8399   0013F4  6E2D               	movwf	(___fldiv@b+2)^0,c
  8400   0013F6  0E3F               	movlw	63
  8401   0013F8  6E2E               	movwf	(___fldiv@b+3)^0,c
  8402   0013FA  C1B4  F02F         	movff	powf@z,___fldiv@a
  8403   0013FE  C1B5  F030         	movff	powf@z+1,___fldiv@a+1
  8404   001402  C1B6  F031         	movff	powf@z+2,___fldiv@a+2
  8405   001406  C1B7  F032         	movff	powf@z+3,___fldiv@a+3
  8406   00140A  ECE0  F02C         	call	___fldiv	;wreg free
  8407   00140E  C02B  F1B4         	movff	?___fldiv,powf@z
  8408   001412  C02C  F1B5         	movff	?___fldiv+1,powf@z+1
  8409   001416  C02D  F1B6         	movff	?___fldiv+2,powf@z+2
  8410   00141A  C02E  F1B7         	movff	?___fldiv+3,powf@z+3
  8411   00141E                     l7118:
  8412   00141E  0101               	movlb	1	; () banked
  8413   001420  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  8414   001422  EF17  F00A         	goto	u7450
  8415   001426  EF15  F00A         	goto	u7451
  8416   00142A                     u7451:
  8417   00142A  EF77  F00A         	goto	l7128
  8418   00142E                     u7450:
  8419   00142E                     
  8420                           ; BSR set to: 1
  8421   00142E  0E00               	movlw	0
  8422   001430  25AC               	addwf	powf@ix& (0+255),w,b
  8423   001432  0100               	movlb	0	; () banked
  8424   001434  6F68               	movwf	??_powf& (0+255),b
  8425   001436  0E00               	movlw	0
  8426   001438  0101               	movlb	1	; () banked
  8427   00143A  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  8428   00143C  0100               	movlb	0	; () banked
  8429   00143E  6F69               	movwf	(??_powf+1)& (0+255),b
  8430   001440  0E80               	movlw	128
  8431   001442  0101               	movlb	1	; () banked
  8432   001444  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  8433   001446  0100               	movlb	0	; () banked
  8434   001448  6F6A               	movwf	(??_powf+2)& (0+255),b
  8435   00144A  0EC0               	movlw	192
  8436   00144C  0101               	movlb	1	; () banked
  8437   00144E  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  8438   001450  0100               	movlb	0	; () banked
  8439   001452  6F6B               	movwf	(??_powf+3)& (0+255),b
  8440   001454  0101               	movlb	1	; () banked
  8441   001456  5154               	movf	powf@yisint& (0+255),w,b
  8442   001458  0100               	movlb	0	; () banked
  8443   00145A  1168               	iorwf	??_powf& (0+255),w,b
  8444   00145C  6F6C               	movwf	(??_powf+4)& (0+255),b
  8445   00145E  0101               	movlb	1	; () banked
  8446   001460  5155               	movf	(powf@yisint+1)& (0+255),w,b
  8447   001462  0100               	movlb	0	; () banked
  8448   001464  1169               	iorwf	(??_powf+1)& (0+255),w,b
  8449   001466  6F6D               	movwf	(??_powf+5)& (0+255),b
  8450   001468  0101               	movlb	1	; () banked
  8451   00146A  5156               	movf	(powf@yisint+2)& (0+255),w,b
  8452   00146C  0100               	movlb	0	; () banked
  8453   00146E  116A               	iorwf	(??_powf+2)& (0+255),w,b
  8454   001470  6F6E               	movwf	(??_powf+6)& (0+255),b
  8455   001472  0101               	movlb	1	; () banked
  8456   001474  5157               	movf	(powf@yisint+3)& (0+255),w,b
  8457   001476  0100               	movlb	0	; () banked
  8458   001478  116B               	iorwf	(??_powf+3)& (0+255),w,b
  8459   00147A  6F6F               	movwf	(??_powf+7)& (0+255),b
  8460   00147C  516C               	movf	(??_powf+4)& (0+255),w,b
  8461   00147E  116D               	iorwf	(??_powf+5)& (0+255),w,b
  8462   001480  116E               	iorwf	(??_powf+6)& (0+255),w,b
  8463   001482  116F               	iorwf	(??_powf+7)& (0+255),w,b
  8464   001484  A4D8               	btfss	status,2,c
  8465   001486  EF47  F00A         	goto	u7461
  8466   00148A  EF49  F00A         	goto	u7460
  8467   00148E                     u7461:
  8468   00148E  EF59  F00A         	goto	l7124
  8469   001492                     u7460:
  8470   001492                     l7122:
  8471   001492  0E00               	movlw	0
  8472   001494  0100               	movlb	0	; () banked
  8473   001496  6FEB               	movwf	(_errno+1)& (0+255),b
  8474   001498  0E21               	movlw	33
  8475   00149A  6FEA               	movwf	_errno& (0+255),b
  8476   00149C  0EFF               	movlw	255
  8477   00149E  0101               	movlb	1	; () banked
  8478   0014A0  6FB4               	movwf	powf@z& (0+255),b
  8479   0014A2  0EFF               	movlw	255
  8480   0014A4  6FB5               	movwf	(powf@z+1)& (0+255),b
  8481   0014A6  0EFF               	movlw	255
  8482   0014A8  6FB6               	movwf	(powf@z+2)& (0+255),b
  8483   0014AA  0E7F               	movlw	127
  8484   0014AC  6FB7               	movwf	(powf@z+3)& (0+255),b
  8485   0014AE  EF77  F00A         	goto	l7128
  8486   0014B2                     l7124:
  8487                           
  8488                           ; BSR set to: 0
  8489   0014B2  0101               	movlb	1	; () banked
  8490   0014B4  0554               	decf	powf@yisint& (0+255),w,b
  8491   0014B6  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  8492   0014B8  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  8493   0014BA  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  8494   0014BC  A4D8               	btfss	status,2,c
  8495   0014BE  EF63  F00A         	goto	u7471
  8496   0014C2  EF65  F00A         	goto	u7470
  8497   0014C6                     u7471:
  8498   0014C6  EF77  F00A         	goto	l7128
  8499   0014CA                     u7470:
  8500   0014CA                     
  8501                           ; BSR set to: 1
  8502   0014CA  C1B4  F002         	movff	powf@z,___flneg@f1
  8503   0014CE  C1B5  F003         	movff	powf@z+1,___flneg@f1+1
  8504   0014D2  C1B6  F004         	movff	powf@z+2,___flneg@f1+2
  8505   0014D6  C1B7  F005         	movff	powf@z+3,___flneg@f1+3
  8506   0014DA  EC42  F03A         	call	___flneg	;wreg free
  8507   0014DE  C002  F1B4         	movff	?___flneg,powf@z
  8508   0014E2  C003  F1B5         	movff	?___flneg+1,powf@z+1
  8509   0014E6  C004  F1B6         	movff	?___flneg+2,powf@z+2
  8510   0014EA  C005  F1B7         	movff	?___flneg+3,powf@z+3
  8511   0014EE                     l7128:
  8512   0014EE  C1B4  F060         	movff	powf@z,?_powf
  8513   0014F2  C1B5  F061         	movff	powf@z+1,?_powf+1
  8514   0014F6  C1B6  F062         	movff	powf@z+2,?_powf+2
  8515   0014FA  C1B7  F063         	movff	powf@z+3,?_powf+3
  8516   0014FE  EF80  F019         	goto	l1371
  8517   001502                     l7132:
  8518                           
  8519                           ; BSR set to: 1
  8520   001502  0E00               	movlw	0
  8521   001504  6F64               	movwf	powf@sn& (0+255),b
  8522   001506  0E00               	movlw	0
  8523   001508  6F65               	movwf	(powf@sn+1)& (0+255),b
  8524   00150A  0E00               	movlw	0
  8525   00150C  6F66               	movwf	(powf@sn+2)& (0+255),b
  8526   00150E  0E00               	movlw	0
  8527   001510  6F67               	movwf	(powf@sn+3)& (0+255),b
  8528   001512                     
  8529                           ; BSR set to: 1
  8530   001512  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  8531   001514  EF90  F00A         	goto	u7480
  8532   001518  EF8E  F00A         	goto	u7481
  8533   00151C                     u7481:
  8534   00151C  EFB0  F00A         	goto	l7148
  8535   001520                     u7480:
  8536   001520                     
  8537                           ; BSR set to: 1
  8538   001520  5154               	movf	powf@yisint& (0+255),w,b
  8539   001522  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  8540   001524  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  8541   001526  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  8542   001528  A4D8               	btfss	status,2,c
  8543   00152A  EF99  F00A         	goto	u7491
  8544   00152E  EF9B  F00A         	goto	u7490
  8545   001532                     u7491:
  8546   001532  EF9D  F00A         	goto	l7144
  8547   001536                     u7490:
  8548   001536  EF49  F00A         	goto	l7122
  8549   00153A                     l7144:
  8550                           
  8551                           ; BSR set to: 1
  8552   00153A  0554               	decf	powf@yisint& (0+255),w,b
  8553   00153C  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  8554   00153E  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  8555   001540  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  8556   001542  A4D8               	btfss	status,2,c
  8557   001544  EFA6  F00A         	goto	u7501
  8558   001548  EFA8  F00A         	goto	u7500
  8559   00154C                     u7501:
  8560   00154C  EFB0  F00A         	goto	l7148
  8561   001550                     u7500:
  8562   001550                     
  8563                           ; BSR set to: 1
  8564   001550  0E00               	movlw	0
  8565   001552  6F64               	movwf	powf@sn& (0+255),b
  8566   001554  0E00               	movlw	0
  8567   001556  6F65               	movwf	(powf@sn+1)& (0+255),b
  8568   001558  0E00               	movlw	0
  8569   00155A  6F66               	movwf	(powf@sn+2)& (0+255),b
  8570   00155C  0E80               	movlw	128
  8571   00155E  6F67               	movwf	(powf@sn+3)& (0+255),b
  8572   001560                     l7148:
  8573                           
  8574                           ; BSR set to: 1
  8575   001560  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  8576   001562  EFBF  F00A         	goto	u7511
  8577   001566  0594               	decf	powf@iy& (0+255),w,b
  8578   001568  0E00               	movlw	0
  8579   00156A  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  8580   00156C  0E00               	movlw	0
  8581   00156E  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  8582   001570  0E4D               	movlw	77
  8583   001572  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  8584   001574  A0D8               	btfss	status,0,c
  8585   001576  EFBF  F00A         	goto	u7511
  8586   00157A  EFC1  F00A         	goto	u7510
  8587   00157E                     u7511:
  8588   00157E  EF85  F00C         	goto	l7204
  8589   001582                     u7510:
  8590   001582                     
  8591                           ; BSR set to: 1
  8592   001582  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8593   001584  EFD3  F00A         	goto	u7520
  8594   001588  0EF8               	movlw	248
  8595   00158A  5DAC               	subwf	powf@ix& (0+255),w,b
  8596   00158C  0EFF               	movlw	255
  8597   00158E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  8598   001590  0E7F               	movlw	127
  8599   001592  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  8600   001594  0E3F               	movlw	63
  8601   001596  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  8602   001598  B0D8               	btfsc	status,0,c
  8603   00159A  EFD1  F00A         	goto	u7521
  8604   00159E  EFD3  F00A         	goto	u7520
  8605   0015A2                     u7521:
  8606   0015A2  EFF4  F00A         	goto	l7166
  8607   0015A6                     u7520:
  8608   0015A6                     
  8609                           ; BSR set to: 1
  8610   0015A6  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8611   0015A8  EFDA  F00A         	goto	u7530
  8612   0015AC  EFD8  F00A         	goto	u7531
  8613   0015B0                     u7531:
  8614   0015B0  EFE9  F00A         	goto	l7162
  8615   0015B4                     u7530:
  8616   0015B4                     l7154:
  8617   0015B4  0E00               	movlw	0
  8618   0015B6  0101               	movlb	1	; () banked
  8619   0015B8  1164               	iorwf	powf@sn& (0+255),w,b
  8620   0015BA  6FB4               	movwf	powf@z& (0+255),b
  8621   0015BC  0E00               	movlw	0
  8622   0015BE  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  8623   0015C0  6FB5               	movwf	(powf@z+1)& (0+255),b
  8624   0015C2  0E80               	movlw	128
  8625   0015C4  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  8626   0015C6  6FB6               	movwf	(powf@z+2)& (0+255),b
  8627   0015C8  0E7F               	movlw	127
  8628   0015CA  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  8629   0015CC  6FB7               	movwf	(powf@z+3)& (0+255),b
  8630   0015CE  EF77  F00A         	goto	l7128
  8631   0015D2                     l7162:
  8632                           
  8633                           ; BSR set to: 1
  8634   0015D2  0E00               	movlw	0
  8635   0015D4  0100               	movlb	0	; () banked
  8636   0015D6  6F60               	movwf	?_powf& (0+255),b
  8637   0015D8  0E00               	movlw	0
  8638   0015DA  6F61               	movwf	(?_powf+1)& (0+255),b
  8639   0015DC  0E00               	movlw	0
  8640   0015DE  6F62               	movwf	(?_powf+2)& (0+255),b
  8641   0015E0  0E00               	movlw	0
  8642   0015E2  6F63               	movwf	(?_powf+3)& (0+255),b
  8643   0015E4  EF80  F019         	goto	l1371
  8644   0015E8                     l7166:
  8645                           
  8646                           ; BSR set to: 1
  8647   0015E8  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8648   0015EA  EF04  F00B         	goto	u7541
  8649   0015EE  0E08               	movlw	8
  8650   0015F0  5DAC               	subwf	powf@ix& (0+255),w,b
  8651   0015F2  0E00               	movlw	0
  8652   0015F4  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  8653   0015F6  0E80               	movlw	128
  8654   0015F8  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  8655   0015FA  0E3F               	movlw	63
  8656   0015FC  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  8657   0015FE  A0D8               	btfss	status,0,c
  8658   001600  EF04  F00B         	goto	u7541
  8659   001604  EF06  F00B         	goto	u7540
  8660   001608                     u7541:
  8661   001608  EF22  F00B         	goto	l7182
  8662   00160C                     u7540:
  8663   00160C                     
  8664                           ; BSR set to: 1
  8665   00160C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8666   00160E  EF13  F00B         	goto	u7551
  8667   001612  5187               	movf	(powf@hy+3)& (0+255),w,b
  8668   001614  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  8669   001616  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  8670   001618  E108               	bnz	u7550
  8671   00161A  0584               	decf	powf@hy& (0+255),w,b
  8672   00161C  A0D8               	btfss	status,0,c
  8673   00161E  EF13  F00B         	goto	u7551
  8674   001622  EF15  F00B         	goto	u7550
  8675   001626                     u7551:
  8676   001626  EF17  F00B         	goto	l7178
  8677   00162A                     u7550:
  8678   00162A  EFDA  F00A         	goto	l7154
  8679   00162E                     l7178:
  8680                           
  8681                           ; BSR set to: 1
  8682   00162E  0E00               	movlw	0
  8683   001630  0100               	movlb	0	; () banked
  8684   001632  6F60               	movwf	?_powf& (0+255),b
  8685   001634  0E00               	movlw	0
  8686   001636  6F61               	movwf	(?_powf+1)& (0+255),b
  8687   001638  0E00               	movlw	0
  8688   00163A  6F62               	movwf	(?_powf+2)& (0+255),b
  8689   00163C  0E00               	movlw	0
  8690   00163E  6F63               	movwf	(?_powf+3)& (0+255),b
  8691   001640  EF80  F019         	goto	l1371
  8692   001644                     l7182:
  8693                           
  8694                           ; BSR set to: 1
  8695   001644  C178  F002         	movff	powf@ax,___fladd@b
  8696   001648  C179  F003         	movff	powf@ax+1,___fladd@b+1
  8697   00164C  C17A  F004         	movff	powf@ax+2,___fladd@b+2
  8698   001650  C17B  F005         	movff	powf@ax+3,___fladd@b+3
  8699   001654  0E00               	movlw	0
  8700   001656  6E06               	movwf	___fladd@a^0,c
  8701   001658  0E00               	movlw	0
  8702   00165A  6E07               	movwf	(___fladd@a+1)^0,c
  8703   00165C  0E80               	movlw	128
  8704   00165E  6E08               	movwf	(___fladd@a+2)^0,c
  8705   001660  0EBF               	movlw	191
  8706   001662  6E09               	movwf	(___fladd@a+3)^0,c
  8707   001664  EC7C  F026         	call	___fladd	;wreg free
  8708   001668  C002  F1B0         	movff	?___fladd,powf@t
  8709   00166C  C003  F1B1         	movff	?___fladd+1,powf@t+1
  8710   001670  C004  F1B2         	movff	?___fladd+2,powf@t+2
  8711   001674  C005  F1B3         	movff	?___fladd+3,powf@t+3
  8712   001678  0E00               	movlw	0
  8713   00167A  6E16               	movwf	___flmul@a^0,c
  8714   00167C  0E00               	movlw	0
  8715   00167E  6E17               	movwf	(___flmul@a+1)^0,c
  8716   001680  0E80               	movlw	128
  8717   001682  6E18               	movwf	(___flmul@a+2)^0,c
  8718   001684  0E3E               	movlw	62
  8719   001686  6E19               	movwf	(___flmul@a+3)^0,c
  8720   001688  C1B0  F012         	movff	powf@t,___flmul@b
  8721   00168C  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8722   001690  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8723   001694  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8724   001698  ECDC  F028         	call	___flmul	;wreg free
  8725   00169C  C012  F048         	movff	?___flmul,___flsub@a
  8726   0016A0  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8727   0016A4  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8728   0016A8  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8729   0016AC  0EAB               	movlw	171
  8730   0016AE  6E44               	movwf	___flsub@b^0,c
  8731   0016B0  0EAA               	movlw	170
  8732   0016B2  6E45               	movwf	(___flsub@b+1)^0,c
  8733   0016B4  0EAA               	movlw	170
  8734   0016B6  6E46               	movwf	(___flsub@b+2)^0,c
  8735   0016B8  0E3E               	movlw	62
  8736   0016BA  6E47               	movwf	(___flsub@b+3)^0,c
  8737   0016BC  ECA3  F039         	call	___flsub	;wreg free
  8738   0016C0  C044  F148         	movff	?___flsub,_powf$3058
  8739   0016C4  C045  F149         	movff	?___flsub+1,_powf$3058+1
  8740   0016C8  C046  F14A         	movff	?___flsub+2,_powf$3058+2
  8741   0016CC  C047  F14B         	movff	?___flsub+3,_powf$3058+3
  8742   0016D0  C1B0  F016         	movff	powf@t,___flmul@a
  8743   0016D4  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  8744   0016D8  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  8745   0016DC  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  8746   0016E0  C1B0  F012         	movff	powf@t,___flmul@b
  8747   0016E4  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8748   0016E8  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8749   0016EC  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8750   0016F0  ECDC  F028         	call	___flmul	;wreg free
  8751   0016F4  C012  F15C         	movff	?___flmul,_powf$3059
  8752   0016F8  C013  F15D         	movff	?___flmul+1,_powf$3059+1
  8753   0016FC  C014  F15E         	movff	?___flmul+2,_powf$3059+2
  8754   001700  C015  F15F         	movff	?___flmul+3,_powf$3059+3
  8755   001704  C1B0  F016         	movff	powf@t,___flmul@a
  8756   001708  C1B1  F017         	movff	powf@t+1,___flmul@a+1
  8757   00170C  C1B2  F018         	movff	powf@t+2,___flmul@a+2
  8758   001710  C1B3  F019         	movff	powf@t+3,___flmul@a+3
  8759   001714  C148  F012         	movff	_powf$3058,___flmul@b
  8760   001718  C149  F013         	movff	_powf$3058+1,___flmul@b+1
  8761   00171C  C14A  F014         	movff	_powf$3058+2,___flmul@b+2
  8762   001720  C14B  F015         	movff	_powf$3058+3,___flmul@b+3
  8763   001724  ECDC  F028         	call	___flmul	;wreg free
  8764   001728  C012  F048         	movff	?___flmul,___flsub@a
  8765   00172C  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8766   001730  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8767   001734  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8768   001738  0E00               	movlw	0
  8769   00173A  6E44               	movwf	___flsub@b^0,c
  8770   00173C  0E00               	movlw	0
  8771   00173E  6E45               	movwf	(___flsub@b+1)^0,c
  8772   001740  0E00               	movlw	0
  8773   001742  6E46               	movwf	(___flsub@b+2)^0,c
  8774   001744  0E3F               	movlw	63
  8775   001746  6E47               	movwf	(___flsub@b+3)^0,c
  8776   001748  ECA3  F039         	call	___flsub	;wreg free
  8777   00174C  C044  F14C         	movff	?___flsub,_powf$3060
  8778   001750  C045  F14D         	movff	?___flsub+1,_powf$3060+1
  8779   001754  C046  F14E         	movff	?___flsub+2,_powf$3060+2
  8780   001758  C047  F14F         	movff	?___flsub+3,_powf$3060+3
  8781   00175C  C15C  F012         	movff	_powf$3059,___flmul@b
  8782   001760  C15D  F013         	movff	_powf$3059+1,___flmul@b+1
  8783   001764  C15E  F014         	movff	_powf$3059+2,___flmul@b+2
  8784   001768  C15F  F015         	movff	_powf$3059+3,___flmul@b+3
  8785   00176C  C14C  F016         	movff	_powf$3060,___flmul@a
  8786   001770  C14D  F017         	movff	_powf$3060+1,___flmul@a+1
  8787   001774  C14E  F018         	movff	_powf$3060+2,___flmul@a+2
  8788   001778  C14F  F019         	movff	_powf$3060+3,___flmul@a+3
  8789   00177C  ECDC  F028         	call	___flmul	;wreg free
  8790   001780  C012  F144         	movff	?___flmul,powf@w
  8791   001784  C013  F145         	movff	?___flmul+1,powf@w+1
  8792   001788  C014  F146         	movff	?___flmul+2,powf@w+2
  8793   00178C  C015  F147         	movff	?___flmul+3,powf@w+3
  8794   001790  C1B0  F012         	movff	powf@t,___flmul@b
  8795   001794  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8796   001798  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8797   00179C  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8798   0017A0  0E00               	movlw	0
  8799   0017A2  6E16               	movwf	___flmul@a^0,c
  8800   0017A4  0EAA               	movlw	170
  8801   0017A6  6E17               	movwf	(___flmul@a+1)^0,c
  8802   0017A8  0EB8               	movlw	184
  8803   0017AA  6E18               	movwf	(___flmul@a+2)^0,c
  8804   0017AC  0E3F               	movlw	63
  8805   0017AE  6E19               	movwf	(___flmul@a+3)^0,c
  8806   0017B0  ECDC  F028         	call	___flmul	;wreg free
  8807   0017B4  C012  F17C         	movff	?___flmul,powf@u
  8808   0017B8  C013  F17D         	movff	?___flmul+1,powf@u+1
  8809   0017BC  C014  F17E         	movff	?___flmul+2,powf@u+2
  8810   0017C0  C015  F17F         	movff	?___flmul+3,powf@u+3
  8811   0017C4  0E70               	movlw	112
  8812   0017C6  6E16               	movwf	___flmul@a^0,c
  8813   0017C8  0EA5               	movlw	165
  8814   0017CA  6E17               	movwf	(___flmul@a+1)^0,c
  8815   0017CC  0EEC               	movlw	236
  8816   0017CE  6E18               	movwf	(___flmul@a+2)^0,c
  8817   0017D0  0E36               	movlw	54
  8818   0017D2  6E19               	movwf	(___flmul@a+3)^0,c
  8819   0017D4  C1B0  F012         	movff	powf@t,___flmul@b
  8820   0017D8  C1B1  F013         	movff	powf@t+1,___flmul@b+1
  8821   0017DC  C1B2  F014         	movff	powf@t+2,___flmul@b+2
  8822   0017E0  C1B3  F015         	movff	powf@t+3,___flmul@b+3
  8823   0017E4  ECDC  F028         	call	___flmul	;wreg free
  8824   0017E8  C012  F044         	movff	?___flmul,___flsub@b
  8825   0017EC  C013  F045         	movff	?___flmul+1,___flsub@b+1
  8826   0017F0  C014  F046         	movff	?___flmul+2,___flsub@b+2
  8827   0017F4  C015  F047         	movff	?___flmul+3,___flsub@b+3
  8828   0017F8  0E3B               	movlw	59
  8829   0017FA  6E16               	movwf	___flmul@a^0,c
  8830   0017FC  0EAA               	movlw	170
  8831   0017FE  6E17               	movwf	(___flmul@a+1)^0,c
  8832   001800  0EB8               	movlw	184
  8833   001802  6E18               	movwf	(___flmul@a+2)^0,c
  8834   001804  0E3F               	movlw	63
  8835   001806  6E19               	movwf	(___flmul@a+3)^0,c
  8836   001808  C144  F012         	movff	powf@w,___flmul@b
  8837   00180C  C145  F013         	movff	powf@w+1,___flmul@b+1
  8838   001810  C146  F014         	movff	powf@w+2,___flmul@b+2
  8839   001814  C147  F015         	movff	powf@w+3,___flmul@b+3
  8840   001818  ECDC  F028         	call	___flmul	;wreg free
  8841   00181C  C012  F048         	movff	?___flmul,___flsub@a
  8842   001820  C013  F049         	movff	?___flmul+1,___flsub@a+1
  8843   001824  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  8844   001828  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  8845   00182C  ECA3  F039         	call	___flsub	;wreg free
  8846   001830  C044  F180         	movff	?___flsub,powf@v
  8847   001834  C045  F181         	movff	?___flsub+1,powf@v+1
  8848   001838  C046  F182         	movff	?___flsub+2,powf@v+2
  8849   00183C  C047  F183         	movff	?___flsub+3,powf@v+3
  8850   001840  C17C  F002         	movff	powf@u,___fladd@b
  8851   001844  C17D  F003         	movff	powf@u+1,___fladd@b+1
  8852   001848  C17E  F004         	movff	powf@u+2,___fladd@b+2
  8853   00184C  C17F  F005         	movff	powf@u+3,___fladd@b+3
  8854   001850  C180  F006         	movff	powf@v,___fladd@a
  8855   001854  C181  F007         	movff	powf@v+1,___fladd@a+1
  8856   001858  C182  F008         	movff	powf@v+2,___fladd@a+2
  8857   00185C  C183  F009         	movff	powf@v+3,___fladd@a+3
  8858   001860  EC7C  F026         	call	___fladd	;wreg free
  8859   001864  C002  F18C         	movff	?___fladd,powf@t1
  8860   001868  C003  F18D         	movff	?___fladd+1,powf@t1+1
  8861   00186C  C004  F18E         	movff	?___fladd+2,powf@t1+2
  8862   001870  C005  F18F         	movff	?___fladd+3,powf@t1+3
  8863   001874  C18C  F198         	movff	powf@t1,powf@is
  8864   001878  C18D  F199         	movff	powf@t1+1,powf@is+1
  8865   00187C  C18E  F19A         	movff	powf@t1+2,powf@is+2
  8866   001880  C18F  F19B         	movff	powf@t1+3,powf@is+3
  8867   001884  0E00               	movlw	0
  8868   001886  0101               	movlb	1	; () banked
  8869   001888  1598               	andwf	powf@is& (0+255),w,b
  8870   00188A  6F8C               	movwf	powf@t1& (0+255),b
  8871   00188C  0EF0               	movlw	240
  8872   00188E  1599               	andwf	(powf@is+1)& (0+255),w,b
  8873   001890  6F8D               	movwf	(powf@t1+1)& (0+255),b
  8874   001892  0EFF               	movlw	255
  8875   001894  159A               	andwf	(powf@is+2)& (0+255),w,b
  8876   001896  6F8E               	movwf	(powf@t1+2)& (0+255),b
  8877   001898  0EFF               	movlw	255
  8878   00189A  159B               	andwf	(powf@is+3)& (0+255),w,b
  8879   00189C  6F8F               	movwf	(powf@t1+3)& (0+255),b
  8880   00189E                     
  8881                           ; BSR set to: 1
  8882   00189E  C17C  F048         	movff	powf@u,___flsub@a
  8883   0018A2  C17D  F049         	movff	powf@u+1,___flsub@a+1
  8884   0018A6  C17E  F04A         	movff	powf@u+2,___flsub@a+2
  8885   0018AA  C17F  F04B         	movff	powf@u+3,___flsub@a+3
  8886   0018AE  C18C  F044         	movff	powf@t1,___flsub@b
  8887   0018B2  C18D  F045         	movff	powf@t1+1,___flsub@b+1
  8888   0018B6  C18E  F046         	movff	powf@t1+2,___flsub@b+2
  8889   0018BA  C18F  F047         	movff	powf@t1+3,___flsub@b+3
  8890   0018BE  ECA3  F039         	call	___flsub	;wreg free
  8891   0018C2  C044  F19C         	movff	?___flsub,_powf$3061
  8892   0018C6  C045  F19D         	movff	?___flsub+1,_powf$3061+1
  8893   0018CA  C046  F19E         	movff	?___flsub+2,_powf$3061+2
  8894   0018CE  C047  F19F         	movff	?___flsub+3,_powf$3061+3
  8895   0018D2  C180  F044         	movff	powf@v,___flsub@b
  8896   0018D6  C181  F045         	movff	powf@v+1,___flsub@b+1
  8897   0018DA  C182  F046         	movff	powf@v+2,___flsub@b+2
  8898   0018DE  C183  F047         	movff	powf@v+3,___flsub@b+3
  8899   0018E2  C19C  F048         	movff	_powf$3061,___flsub@a
  8900   0018E6  C19D  F049         	movff	_powf$3061+1,___flsub@a+1
  8901   0018EA  C19E  F04A         	movff	_powf$3061+2,___flsub@a+2
  8902   0018EE  C19F  F04B         	movff	_powf$3061+3,___flsub@a+3
  8903   0018F2  ECA3  F039         	call	___flsub	;wreg free
  8904   0018F6  C044  F11C         	movff	?___flsub,powf@t2
  8905   0018FA  C045  F11D         	movff	?___flsub+1,powf@t2+1
  8906   0018FE  C046  F11E         	movff	?___flsub+2,powf@t2+2
  8907   001902  C047  F11F         	movff	?___flsub+3,powf@t2+3
  8908   001906  EF79  F013         	goto	l7332
  8909   00190A                     l7204:
  8910                           
  8911                           ; BSR set to: 1
  8912   00190A  0E00               	movlw	0
  8913   00190C  6F88               	movwf	powf@n& (0+255),b
  8914   00190E  0E00               	movlw	0
  8915   001910  6F89               	movwf	(powf@n+1)& (0+255),b
  8916   001912  0E00               	movlw	0
  8917   001914  6F8A               	movwf	(powf@n+2)& (0+255),b
  8918   001916  0E00               	movlw	0
  8919   001918  6F8B               	movwf	(powf@n+3)& (0+255),b
  8920   00191A                     
  8921                           ; BSR set to: 1
  8922   00191A  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  8923   00191C  EF9B  F00C         	goto	u7560
  8924   001920  51AF               	movf	(powf@ix+3)& (0+255),w,b
  8925   001922  E107               	bnz	u7561
  8926   001924  0E80               	movlw	128
  8927   001926  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
  8928   001928  B0D8               	btfsc	status,0,c
  8929   00192A  EF99  F00C         	goto	u7561
  8930   00192E  EF9B  F00C         	goto	u7560
  8931   001932                     u7561:
  8932   001932  EFC6  F00C         	goto	l7214
  8933   001936                     u7560:
  8934   001936                     
  8935                           ; BSR set to: 1
  8936   001936  C178  F012         	movff	powf@ax,___flmul@b
  8937   00193A  C179  F013         	movff	powf@ax+1,___flmul@b+1
  8938   00193E  C17A  F014         	movff	powf@ax+2,___flmul@b+2
  8939   001942  C17B  F015         	movff	powf@ax+3,___flmul@b+3
  8940   001946  0E00               	movlw	0
  8941   001948  6E16               	movwf	___flmul@a^0,c
  8942   00194A  0E00               	movlw	0
  8943   00194C  6E17               	movwf	(___flmul@a+1)^0,c
  8944   00194E  0E80               	movlw	128
  8945   001950  6E18               	movwf	(___flmul@a+2)^0,c
  8946   001952  0E4B               	movlw	75
  8947   001954  6E19               	movwf	(___flmul@a+3)^0,c
  8948   001956  ECDC  F028         	call	___flmul	;wreg free
  8949   00195A  C012  F178         	movff	?___flmul,powf@ax
  8950   00195E  C013  F179         	movff	?___flmul+1,powf@ax+1
  8951   001962  C014  F17A         	movff	?___flmul+2,powf@ax+2
  8952   001966  C015  F17B         	movff	?___flmul+3,powf@ax+3
  8953   00196A  0EE8               	movlw	232
  8954   00196C  0101               	movlb	1	; () banked
  8955   00196E  2788               	addwf	powf@n& (0+255),f,b
  8956   001970  0EFF               	movlw	255
  8957   001972  2389               	addwfc	(powf@n+1)& (0+255),f,b
  8958   001974  0EFF               	movlw	255
  8959   001976  238A               	addwfc	(powf@n+2)& (0+255),f,b
  8960   001978  0EFF               	movlw	255
  8961   00197A  238B               	addwfc	(powf@n+3)& (0+255),f,b
  8962   00197C                     
  8963                           ; BSR set to: 1
  8964   00197C  C178  F1AC         	movff	powf@ax,powf@ix
  8965   001980  C179  F1AD         	movff	powf@ax+1,powf@ix+1
  8966   001984  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
  8967   001988  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
  8968   00198C                     l7214:
  8969                           
  8970                           ; BSR set to: 1
  8971   00198C  0E17               	movlw	23
  8972   00198E  0100               	movlb	0	; () banked
  8973   001990  6F68               	movwf	??_powf& (0+255),b
  8974   001992  C1AC  F069         	movff	powf@ix,??_powf+1
  8975   001996  C1AD  F06A         	movff	powf@ix+1,??_powf+2
  8976   00199A  C1AE  F06B         	movff	powf@ix+2,??_powf+3
  8977   00199E  C1AF  F06C         	movff	powf@ix+3,??_powf+4
  8978   0019A2                     u7575:
  8979   0019A2  6768               	tstfsz	??_powf& (0+255),b
  8980   0019A4  EFD6  F00C         	goto	u7576
  8981   0019A8  EFDE  F00C         	goto	u7577
  8982   0019AC                     u7576:
  8983   0019AC  356C               	rlcf	(??_powf+4)& (0+255),w,b
  8984   0019AE  336C               	rrcf	(??_powf+4)& (0+255),f,b
  8985   0019B0  336B               	rrcf	(??_powf+3)& (0+255),f,b
  8986   0019B2  336A               	rrcf	(??_powf+2)& (0+255),f,b
  8987   0019B4  3369               	rrcf	(??_powf+1)& (0+255),f,b
  8988   0019B6  2F68               	decfsz	??_powf& (0+255),f,b
  8989   0019B8  EFD1  F00C         	goto	u7575
  8990   0019BC                     u7577:
  8991   0019BC  0E81               	movlw	129
  8992   0019BE  0100               	movlb	0	; () banked
  8993   0019C0  2569               	addwf	(??_powf+1)& (0+255),w,b
  8994   0019C2  6F6D               	movwf	(??_powf+5)& (0+255),b
  8995   0019C4  0EFF               	movlw	255
  8996   0019C6  216A               	addwfc	(??_powf+2)& (0+255),w,b
  8997   0019C8  6F6E               	movwf	(??_powf+6)& (0+255),b
  8998   0019CA  0EFF               	movlw	255
  8999   0019CC  216B               	addwfc	(??_powf+3)& (0+255),w,b
  9000   0019CE  6F6F               	movwf	(??_powf+7)& (0+255),b
  9001   0019D0  0EFF               	movlw	255
  9002   0019D2  216C               	addwfc	(??_powf+4)& (0+255),w,b
  9003   0019D4  6F70               	movwf	(??_powf+8)& (0+255),b
  9004   0019D6  516D               	movf	(??_powf+5)& (0+255),w,b
  9005   0019D8  0101               	movlb	1	; () banked
  9006   0019DA  2788               	addwf	powf@n& (0+255),f,b
  9007   0019DC  0100               	movlb	0	; () banked
  9008   0019DE  516E               	movf	(??_powf+6)& (0+255),w,b
  9009   0019E0  0101               	movlb	1	; () banked
  9010   0019E2  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9011   0019E4  0100               	movlb	0	; () banked
  9012   0019E6  516F               	movf	(??_powf+7)& (0+255),w,b
  9013   0019E8  0101               	movlb	1	; () banked
  9014   0019EA  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9015   0019EC  0100               	movlb	0	; () banked
  9016   0019EE  5170               	movf	(??_powf+8)& (0+255),w,b
  9017   0019F0  0101               	movlb	1	; () banked
  9018   0019F2  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9019   0019F4                     
  9020                           ; BSR set to: 1
  9021   0019F4  0EFF               	movlw	255
  9022   0019F6  15AC               	andwf	powf@ix& (0+255),w,b
  9023   0019F8  6FA8               	movwf	powf@j& (0+255),b
  9024   0019FA  0EFF               	movlw	255
  9025   0019FC  15AD               	andwf	(powf@ix+1)& (0+255),w,b
  9026   0019FE  6FA9               	movwf	(powf@j+1)& (0+255),b
  9027   001A00  0E7F               	movlw	127
  9028   001A02  15AE               	andwf	(powf@ix+2)& (0+255),w,b
  9029   001A04  6FAA               	movwf	(powf@j+2)& (0+255),b
  9030   001A06  0E00               	movlw	0
  9031   001A08  15AF               	andwf	(powf@ix+3)& (0+255),w,b
  9032   001A0A  6FAB               	movwf	(powf@j+3)& (0+255),b
  9033   001A0C                     
  9034                           ; BSR set to: 1
  9035   001A0C  0E00               	movlw	0
  9036   001A0E  6FA4               	movwf	powf@k& (0+255),b
  9037   001A10  0E00               	movlw	0
  9038   001A12  6FA5               	movwf	(powf@k+1)& (0+255),b
  9039   001A14  0E00               	movlw	0
  9040   001A16  6FA6               	movwf	(powf@k+2)& (0+255),b
  9041   001A18  0E00               	movlw	0
  9042   001A1A  6FA7               	movwf	(powf@k+3)& (0+255),b
  9043   001A1C                     
  9044                           ; BSR set to: 1
  9045   001A1C  0E00               	movlw	0
  9046   001A1E  11A8               	iorwf	powf@j& (0+255),w,b
  9047   001A20  6FAC               	movwf	powf@ix& (0+255),b
  9048   001A22  0E00               	movlw	0
  9049   001A24  11A9               	iorwf	(powf@j+1)& (0+255),w,b
  9050   001A26  6FAD               	movwf	(powf@ix+1)& (0+255),b
  9051   001A28  0E80               	movlw	128
  9052   001A2A  11AA               	iorwf	(powf@j+2)& (0+255),w,b
  9053   001A2C  6FAE               	movwf	(powf@ix+2)& (0+255),b
  9054   001A2E  0E3F               	movlw	63
  9055   001A30  11AB               	iorwf	(powf@j+3)& (0+255),w,b
  9056   001A32  6FAF               	movwf	(powf@ix+3)& (0+255),b
  9057   001A34                     
  9058                           ; BSR set to: 1
  9059   001A34  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  9060   001A36  EF2C  F00D         	goto	u7580
  9061   001A3A  51AB               	movf	(powf@j+3)& (0+255),w,b
  9062   001A3C  E10B               	bnz	u7581
  9063   001A3E  0E72               	movlw	114
  9064   001A40  5DA8               	subwf	powf@j& (0+255),w,b
  9065   001A42  0EC4               	movlw	196
  9066   001A44  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  9067   001A46  0E1C               	movlw	28
  9068   001A48  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  9069   001A4A  B0D8               	btfsc	status,0,c
  9070   001A4C  EF2A  F00D         	goto	u7581
  9071   001A50  EF2C  F00D         	goto	u7580
  9072   001A54                     u7581:
  9073   001A54  EF2E  F00D         	goto	l7226
  9074   001A58                     u7580:
  9075   001A58  EF58  F00D         	goto	l7232
  9076   001A5C                     l7226:
  9077                           
  9078                           ; BSR set to: 1
  9079   001A5C  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
  9080   001A5E  EF40  F00D         	goto	u7590
  9081   001A62  51AB               	movf	(powf@j+3)& (0+255),w,b
  9082   001A64  E10B               	bnz	u7591
  9083   001A66  0ED7               	movlw	215
  9084   001A68  5DA8               	subwf	powf@j& (0+255),w,b
  9085   001A6A  0EB3               	movlw	179
  9086   001A6C  59A9               	subwfb	(powf@j+1)& (0+255),w,b
  9087   001A6E  0E5D               	movlw	93
  9088   001A70  59AA               	subwfb	(powf@j+2)& (0+255),w,b
  9089   001A72  B0D8               	btfsc	status,0,c
  9090   001A74  EF3E  F00D         	goto	u7591
  9091   001A78  EF40  F00D         	goto	u7590
  9092   001A7C                     u7591:
  9093   001A7C  EF4A  F00D         	goto	l7230
  9094   001A80                     u7590:
  9095   001A80                     
  9096                           ; BSR set to: 1
  9097   001A80  0E01               	movlw	1
  9098   001A82  6FA4               	movwf	powf@k& (0+255),b
  9099   001A84  0E00               	movlw	0
  9100   001A86  6FA5               	movwf	(powf@k+1)& (0+255),b
  9101   001A88  0E00               	movlw	0
  9102   001A8A  6FA6               	movwf	(powf@k+2)& (0+255),b
  9103   001A8C  0E00               	movlw	0
  9104   001A8E  6FA7               	movwf	(powf@k+3)& (0+255),b
  9105   001A90  EF58  F00D         	goto	l7232
  9106   001A94                     l7230:
  9107                           
  9108                           ; BSR set to: 1
  9109   001A94  0E01               	movlw	1
  9110   001A96  2788               	addwf	powf@n& (0+255),f,b
  9111   001A98  0E00               	movlw	0
  9112   001A9A  2389               	addwfc	(powf@n+1)& (0+255),f,b
  9113   001A9C  238A               	addwfc	(powf@n+2)& (0+255),f,b
  9114   001A9E  238B               	addwfc	(powf@n+3)& (0+255),f,b
  9115   001AA0  0E00               	movlw	0
  9116   001AA2  27AC               	addwf	powf@ix& (0+255),f,b
  9117   001AA4  0E00               	movlw	0
  9118   001AA6  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
  9119   001AA8  0E80               	movlw	128
  9120   001AAA  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
  9121   001AAC  0EFF               	movlw	255
  9122   001AAE  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
  9123   001AB0                     l7232:
  9124                           
  9125                           ; BSR set to: 1
  9126   001AB0  C1AC  F178         	movff	powf@ix,powf@ax
  9127   001AB4  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  9128   001AB8  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  9129   001ABC  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  9130   001AC0                     
  9131                           ; BSR set to: 1
  9132   001AC0  C178  F044         	movff	powf@ax,___flsub@b
  9133   001AC4  C179  F045         	movff	powf@ax+1,___flsub@b+1
  9134   001AC8  C17A  F046         	movff	powf@ax+2,___flsub@b+2
  9135   001ACC  C17B  F047         	movff	powf@ax+3,___flsub@b+3
  9136   001AD0  51A4               	movf	powf@k& (0+255),w,b
  9137   001AD2  0D04               	mullw	4
  9138   001AD4  50F3               	movf	243,w,c
  9139   001AD6  0F11               	addlw	low _bp
  9140   001AD8  0100               	movlb	0	; () banked
  9141   001ADA  6F68               	movwf	??_powf& (0+255),b
  9142   001ADC  C068  FFF6         	movff	??_powf,tblptrl
  9143   001AE0                     	if	1	;There is more than 1 active tblptr byte
  9144   001AE0  0E0E               	movlw	high __smallconst
  9145   001AE2  6EF7               	movwf	tblptrh,c
  9146   001AE4                     	endif
  9147   001AE4                     	if	0	;tblptru may be non-zero
  9148   001AE4                     	endif
  9149   001AE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9150   001AE4  0E00               	movlw	low (__smallconst shr (0+16))
  9151   001AE6  6EF8               	movwf	tblptru,c
  9152   001AE8                     	endif
  9153   001AE8  0009               	tblrd		*+
  9154   001AEA  CFF5 F048          	movff	tablat,___flsub@a
  9155   001AEE  0009               	tblrd		*+
  9156   001AF0  CFF5 F049          	movff	tablat,___flsub@a+1
  9157   001AF4  0009               	tblrd		*+
  9158   001AF6  CFF5 F04A          	movff	tablat,___flsub@a+2
  9159   001AFA  000A               	tblrd		*-
  9160   001AFC  CFF5 F04B          	movff	tablat,___flsub@a+3
  9161   001B00  ECA3  F039         	call	___flsub	;wreg free
  9162   001B04  C044  F17C         	movff	?___flsub,powf@u
  9163   001B08  C045  F17D         	movff	?___flsub+1,powf@u+1
  9164   001B0C  C046  F17E         	movff	?___flsub+2,powf@u+2
  9165   001B10  C047  F17F         	movff	?___flsub+3,powf@u+3
  9166   001B14  0E00               	movlw	0
  9167   001B16  6E2B               	movwf	___fldiv@b^0,c
  9168   001B18  0E00               	movlw	0
  9169   001B1A  6E2C               	movwf	(___fldiv@b+1)^0,c
  9170   001B1C  0E80               	movlw	128
  9171   001B1E  6E2D               	movwf	(___fldiv@b+2)^0,c
  9172   001B20  0E3F               	movlw	63
  9173   001B22  6E2E               	movwf	(___fldiv@b+3)^0,c
  9174   001B24  C178  F006         	movff	powf@ax,___fladd@a
  9175   001B28  C179  F007         	movff	powf@ax+1,___fladd@a+1
  9176   001B2C  C17A  F008         	movff	powf@ax+2,___fladd@a+2
  9177   001B30  C17B  F009         	movff	powf@ax+3,___fladd@a+3
  9178   001B34  0101               	movlb	1	; () banked
  9179   001B36  51A4               	movf	powf@k& (0+255),w,b
  9180   001B38  0D04               	mullw	4
  9181   001B3A  50F3               	movf	243,w,c
  9182   001B3C  0F11               	addlw	low _bp
  9183   001B3E  0100               	movlb	0	; () banked
  9184   001B40  6F68               	movwf	??_powf& (0+255),b
  9185   001B42  C068  FFF6         	movff	??_powf,tblptrl
  9186   001B46                     	if	1	;There is more than 1 active tblptr byte
  9187   001B46  0E0E               	movlw	high __smallconst
  9188   001B48  6EF7               	movwf	tblptrh,c
  9189   001B4A                     	endif
  9190   001B4A                     	if	0	;tblptru may be non-zero
  9191   001B4A                     	endif
  9192   001B4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9193   001B4A  0E00               	movlw	low (__smallconst shr (0+16))
  9194   001B4C  6EF8               	movwf	tblptru,c
  9195   001B4E                     	endif
  9196   001B4E  0009               	tblrd		*+
  9197   001B50  CFF5 F002          	movff	tablat,___fladd@b
  9198   001B54  0009               	tblrd		*+
  9199   001B56  CFF5 F003          	movff	tablat,___fladd@b+1
  9200   001B5A  0009               	tblrd		*+
  9201   001B5C  CFF5 F004          	movff	tablat,___fladd@b+2
  9202   001B60  000A               	tblrd		*-
  9203   001B62  CFF5 F005          	movff	tablat,___fladd@b+3
  9204   001B66  EC7C  F026         	call	___fladd	;wreg free
  9205   001B6A  C002  F02F         	movff	?___fladd,___fldiv@a
  9206   001B6E  C003  F030         	movff	?___fladd+1,___fldiv@a+1
  9207   001B72  C004  F031         	movff	?___fladd+2,___fldiv@a+2
  9208   001B76  C005  F032         	movff	?___fladd+3,___fldiv@a+3
  9209   001B7A  ECE0  F02C         	call	___fldiv	;wreg free
  9210   001B7E  C02B  F180         	movff	?___fldiv,powf@v
  9211   001B82  C02C  F181         	movff	?___fldiv+1,powf@v+1
  9212   001B86  C02D  F182         	movff	?___fldiv+2,powf@v+2
  9213   001B8A  C02E  F183         	movff	?___fldiv+3,powf@v+3
  9214   001B8E  C17C  F012         	movff	powf@u,___flmul@b
  9215   001B92  C17D  F013         	movff	powf@u+1,___flmul@b+1
  9216   001B96  C17E  F014         	movff	powf@u+2,___flmul@b+2
  9217   001B9A  C17F  F015         	movff	powf@u+3,___flmul@b+3
  9218   001B9E  C180  F016         	movff	powf@v,___flmul@a
  9219   001BA2  C181  F017         	movff	powf@v+1,___flmul@a+1
  9220   001BA6  C182  F018         	movff	powf@v+2,___flmul@a+2
  9221   001BAA  C183  F019         	movff	powf@v+3,___flmul@a+3
  9222   001BAE  ECDC  F028         	call	___flmul	;wreg free
  9223   001BB2  C012  F158         	movff	?___flmul,powf@s
  9224   001BB6  C013  F159         	movff	?___flmul+1,powf@s+1
  9225   001BBA  C014  F15A         	movff	?___flmul+2,powf@s+2
  9226   001BBE  C015  F15B         	movff	?___flmul+3,powf@s+3
  9227   001BC2  C158  F174         	movff	powf@s,powf@s_h
  9228   001BC6  C159  F175         	movff	powf@s+1,powf@s_h+1
  9229   001BCA  C15A  F176         	movff	powf@s+2,powf@s_h+2
  9230   001BCE  C15B  F177         	movff	powf@s+3,powf@s_h+3
  9231   001BD2  C174  F198         	movff	powf@s_h,powf@is
  9232   001BD6  C175  F199         	movff	powf@s_h+1,powf@is+1
  9233   001BDA  C176  F19A         	movff	powf@s_h+2,powf@is+2
  9234   001BDE  C177  F19B         	movff	powf@s_h+3,powf@is+3
  9235   001BE2  0E00               	movlw	0
  9236   001BE4  0101               	movlb	1	; () banked
  9237   001BE6  1598               	andwf	powf@is& (0+255),w,b
  9238   001BE8  6F74               	movwf	powf@s_h& (0+255),b
  9239   001BEA  0EF0               	movlw	240
  9240   001BEC  1599               	andwf	(powf@is+1)& (0+255),w,b
  9241   001BEE  6F75               	movwf	(powf@s_h+1)& (0+255),b
  9242   001BF0  0EFF               	movlw	255
  9243   001BF2  159A               	andwf	(powf@is+2)& (0+255),w,b
  9244   001BF4  6F76               	movwf	(powf@s_h+2)& (0+255),b
  9245   001BF6  0EFF               	movlw	255
  9246   001BF8  159B               	andwf	(powf@is+3)& (0+255),w,b
  9247   001BFA  6F77               	movwf	(powf@s_h+3)& (0+255),b
  9248   001BFC                     
  9249                           ; BSR set to: 1
  9250   001BFC  C1AC  F068         	movff	powf@ix,??_powf
  9251   001C00  C1AD  F069         	movff	powf@ix+1,??_powf+1
  9252   001C04  C1AE  F06A         	movff	powf@ix+2,??_powf+2
  9253   001C08  C1AF  F06B         	movff	powf@ix+3,??_powf+3
  9254   001C0C  0100               	movlb	0	; () banked
  9255   001C0E  356B               	rlcf	(??_powf+3)& (0+255),w,b
  9256   001C10  336B               	rrcf	(??_powf+3)& (0+255),f,b
  9257   001C12  336A               	rrcf	(??_powf+2)& (0+255),f,b
  9258   001C14  3369               	rrcf	(??_powf+1)& (0+255),f,b
  9259   001C16  3368               	rrcf	??_powf& (0+255),f,b
  9260   001C18  0E00               	movlw	0
  9261   001C1A  1568               	andwf	??_powf& (0+255),w,b
  9262   001C1C  6F6C               	movwf	(??_powf+4)& (0+255),b
  9263   001C1E  0EF0               	movlw	240
  9264   001C20  1569               	andwf	(??_powf+1)& (0+255),w,b
  9265   001C22  6F6D               	movwf	(??_powf+5)& (0+255),b
  9266   001C24  0EFF               	movlw	255
  9267   001C26  156A               	andwf	(??_powf+2)& (0+255),w,b
  9268   001C28  6F6E               	movwf	(??_powf+6)& (0+255),b
  9269   001C2A  0EFF               	movlw	255
  9270   001C2C  156B               	andwf	(??_powf+3)& (0+255),w,b
  9271   001C2E  6F6F               	movwf	(??_powf+7)& (0+255),b
  9272   001C30  0E00               	movlw	0
  9273   001C32  116C               	iorwf	(??_powf+4)& (0+255),w,b
  9274   001C34  0101               	movlb	1	; () banked
  9275   001C36  6F98               	movwf	powf@is& (0+255),b
  9276   001C38  0E00               	movlw	0
  9277   001C3A  0100               	movlb	0	; () banked
  9278   001C3C  116D               	iorwf	(??_powf+5)& (0+255),w,b
  9279   001C3E  0101               	movlb	1	; () banked
  9280   001C40  6F99               	movwf	(powf@is+1)& (0+255),b
  9281   001C42  0E00               	movlw	0
  9282   001C44  0100               	movlb	0	; () banked
  9283   001C46  116E               	iorwf	(??_powf+6)& (0+255),w,b
  9284   001C48  0101               	movlb	1	; () banked
  9285   001C4A  6F9A               	movwf	(powf@is+2)& (0+255),b
  9286   001C4C  0E20               	movlw	32
  9287   001C4E  0100               	movlb	0	; () banked
  9288   001C50  116F               	iorwf	(??_powf+7)& (0+255),w,b
  9289   001C52  0101               	movlb	1	; () banked
  9290   001C54  6F9B               	movwf	(powf@is+3)& (0+255),b
  9291   001C56                     
  9292                           ; BSR set to: 1
  9293   001C56  C1A4  F068         	movff	powf@k,??_powf
  9294   001C5A  C1A5  F069         	movff	powf@k+1,??_powf+1
  9295   001C5E  C1A6  F06A         	movff	powf@k+2,??_powf+2
  9296   001C62  C1A7  F06B         	movff	powf@k+3,??_powf+3
  9297   001C66  0E15               	movlw	21
  9298   001C68                     u7605:
  9299   001C68  90D8               	bcf	status,0,c
  9300   001C6A  0100               	movlb	0	; () banked
  9301   001C6C  3768               	rlcf	??_powf& (0+255),f,b
  9302   001C6E  3769               	rlcf	(??_powf+1)& (0+255),f,b
  9303   001C70  376A               	rlcf	(??_powf+2)& (0+255),f,b
  9304   001C72  376B               	rlcf	(??_powf+3)& (0+255),f,b
  9305   001C74  2EE8               	decfsz	wreg,f,c
  9306   001C76  EF34  F00E         	goto	u7605
  9307   001C7A  0101               	movlb	1	; () banked
  9308   001C7C  5198               	movf	powf@is& (0+255),w,b
  9309   001C7E  0100               	movlb	0	; () banked
  9310   001C80  2568               	addwf	??_powf& (0+255),w,b
  9311   001C82  6F6C               	movwf	(??_powf+4)& (0+255),b
  9312   001C84  0101               	movlb	1	; () banked
  9313   001C86  5199               	movf	(powf@is+1)& (0+255),w,b
  9314   001C88  0100               	movlb	0	; () banked
  9315   001C8A  2169               	addwfc	(??_powf+1)& (0+255),w,b
  9316   001C8C  6F6D               	movwf	(??_powf+5)& (0+255),b
  9317   001C8E  0101               	movlb	1	; () banked
  9318   001C90  519A               	movf	(powf@is+2)& (0+255),w,b
  9319   001C92  0100               	movlb	0	; () banked
  9320   001C94  216A               	addwfc	(??_powf+2)& (0+255),w,b
  9321   001C96  6F6E               	movwf	(??_powf+6)& (0+255),b
  9322   001C98  0101               	movlb	1	; () banked
  9323   001C9A  519B               	movf	(powf@is+3)& (0+255),w,b
  9324   001C9C  0100               	movlb	0	; () banked
  9325   001C9E  216B               	addwfc	(??_powf+3)& (0+255),w,b
  9326   001CA0  6F6F               	movwf	(??_powf+7)& (0+255),b
  9327   001CA2  0E00               	movlw	0
  9328   001CA4  256C               	addwf	(??_powf+4)& (0+255),w,b
  9329   001CA6  0101               	movlb	1	; () banked
  9330   001CA8  6F70               	movwf	powf@t_h& (0+255),b
  9331   001CAA  0E00               	movlw	0
  9332   001CAC  0100               	movlb	0	; () banked
  9333   001CAE  216D               	addwfc	(??_powf+5)& (0+255),w,b
  9334   001CB0  0101               	movlb	1	; () banked
  9335   001CB2  6F71               	movwf	(powf@t_h+1)& (0+255),b
  9336   001CB4  0E40               	movlw	64
  9337   001CB6  0100               	movlb	0	; () banked
  9338   001CB8  216E               	addwfc	(??_powf+6)& (0+255),w,b
  9339   001CBA  0101               	movlb	1	; () banked
  9340   001CBC  6F72               	movwf	(powf@t_h+2)& (0+255),b
  9341   001CBE  0E00               	movlw	0
  9342   001CC0  0100               	movlb	0	; () banked
  9343   001CC2  216F               	addwfc	(??_powf+7)& (0+255),w,b
  9344   001CC4  0101               	movlb	1	; () banked
  9345   001CC6  6F73               	movwf	(powf@t_h+3)& (0+255),b
  9346   001CC8                     
  9347                           ; BSR set to: 1
  9348   001CC8  51A4               	movf	powf@k& (0+255),w,b
  9349   001CCA  0D04               	mullw	4
  9350   001CCC  50F3               	movf	243,w,c
  9351   001CCE  0F11               	addlw	low _bp
  9352   001CD0  0100               	movlb	0	; () banked
  9353   001CD2  6F68               	movwf	??_powf& (0+255),b
  9354   001CD4  C068  FFF6         	movff	??_powf,tblptrl
  9355   001CD8                     	if	1	;There is more than 1 active tblptr byte
  9356   001CD8  0E0E               	movlw	high __smallconst
  9357   001CDA  6EF7               	movwf	tblptrh,c
  9358   001CDC                     	endif
  9359   001CDC                     	if	0	;tblptru may be non-zero
  9360   001CDC                     	endif
  9361   001CDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9362   001CDC  0E00               	movlw	low (__smallconst shr (0+16))
  9363   001CDE  6EF8               	movwf	tblptru,c
  9364   001CE0                     	endif
  9365   001CE0  0009               	tblrd		*+
  9366   001CE2  CFF5 F048          	movff	tablat,___flsub@a
  9367   001CE6  0009               	tblrd		*+
  9368   001CE8  CFF5 F049          	movff	tablat,___flsub@a+1
  9369   001CEC  0009               	tblrd		*+
  9370   001CEE  CFF5 F04A          	movff	tablat,___flsub@a+2
  9371   001CF2  000A               	tblrd		*-
  9372   001CF4  CFF5 F04B          	movff	tablat,___flsub@a+3
  9373   001CF8  C170  F044         	movff	powf@t_h,___flsub@b
  9374   001CFC  C171  F045         	movff	powf@t_h+1,___flsub@b+1
  9375   001D00  C172  F046         	movff	powf@t_h+2,___flsub@b+2
  9376   001D04  C173  F047         	movff	powf@t_h+3,___flsub@b+3
  9377   001D08  ECA3  F039         	call	___flsub	;wreg free
  9378   001D0C  C044  F19C         	movff	?___flsub,_powf$3061
  9379   001D10  C045  F19D         	movff	?___flsub+1,_powf$3061+1
  9380   001D14  C046  F19E         	movff	?___flsub+2,_powf$3061+2
  9381   001D18  C047  F19F         	movff	?___flsub+3,_powf$3061+3
  9382   001D1C  C178  F044         	movff	powf@ax,___flsub@b
  9383   001D20  C179  F045         	movff	powf@ax+1,___flsub@b+1
  9384   001D24  C17A  F046         	movff	powf@ax+2,___flsub@b+2
  9385   001D28  C17B  F047         	movff	powf@ax+3,___flsub@b+3
  9386   001D2C  C19C  F048         	movff	_powf$3061,___flsub@a
  9387   001D30  C19D  F049         	movff	_powf$3061+1,___flsub@a+1
  9388   001D34  C19E  F04A         	movff	_powf$3061+2,___flsub@a+2
  9389   001D38  C19F  F04B         	movff	_powf$3061+3,___flsub@a+3
  9390   001D3C  ECA3  F039         	call	___flsub	;wreg free
  9391   001D40  C044  F134         	movff	?___flsub,powf@t_l
  9392   001D44  C045  F135         	movff	?___flsub+1,powf@t_l+1
  9393   001D48  C046  F136         	movff	?___flsub+2,powf@t_l+2
  9394   001D4C  C047  F137         	movff	?___flsub+3,powf@t_l+3
  9395   001D50  C170  F016         	movff	powf@t_h,___flmul@a
  9396   001D54  C171  F017         	movff	powf@t_h+1,___flmul@a+1
  9397   001D58  C172  F018         	movff	powf@t_h+2,___flmul@a+2
  9398   001D5C  C173  F019         	movff	powf@t_h+3,___flmul@a+3
  9399   001D60  C174  F012         	movff	powf@s_h,___flmul@b
  9400   001D64  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9401   001D68  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9402   001D6C  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9403   001D70  ECDC  F028         	call	___flmul	;wreg free
  9404   001D74  C012  F048         	movff	?___flmul,___flsub@a
  9405   001D78  C013  F049         	movff	?___flmul+1,___flsub@a+1
  9406   001D7C  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  9407   001D80  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  9408   001D84  C17C  F044         	movff	powf@u,___flsub@b
  9409   001D88  C17D  F045         	movff	powf@u+1,___flsub@b+1
  9410   001D8C  C17E  F046         	movff	powf@u+2,___flsub@b+2
  9411   001D90  C17F  F047         	movff	powf@u+3,___flsub@b+3
  9412   001D94  ECA3  F039         	call	___flsub	;wreg free
  9413   001D98  C044  F19C         	movff	?___flsub,_powf$3061
  9414   001D9C  C045  F19D         	movff	?___flsub+1,_powf$3061+1
  9415   001DA0  C046  F19E         	movff	?___flsub+2,_powf$3061+2
  9416   001DA4  C047  F19F         	movff	?___flsub+3,_powf$3061+3
  9417   001DA8  C134  F016         	movff	powf@t_l,___flmul@a
  9418   001DAC  C135  F017         	movff	powf@t_l+1,___flmul@a+1
  9419   001DB0  C136  F018         	movff	powf@t_l+2,___flmul@a+2
  9420   001DB4  C137  F019         	movff	powf@t_l+3,___flmul@a+3
  9421   001DB8  C174  F012         	movff	powf@s_h,___flmul@b
  9422   001DBC  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9423   001DC0  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9424   001DC4  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9425   001DC8  ECDC  F028         	call	___flmul	;wreg free
  9426   001DCC  C012  F048         	movff	?___flmul,___flsub@a
  9427   001DD0  C013  F049         	movff	?___flmul+1,___flsub@a+1
  9428   001DD4  C014  F04A         	movff	?___flmul+2,___flsub@a+2
  9429   001DD8  C015  F04B         	movff	?___flmul+3,___flsub@a+3
  9430   001DDC  C19C  F044         	movff	_powf$3061,___flsub@b
  9431   001DE0  C19D  F045         	movff	_powf$3061+1,___flsub@b+1
  9432   001DE4  C19E  F046         	movff	_powf$3061+2,___flsub@b+2
  9433   001DE8  C19F  F047         	movff	_powf$3061+3,___flsub@b+3
  9434   001DEC  ECA3  F039         	call	___flsub	;wreg free
  9435   001DF0  C044  F15C         	movff	?___flsub,_powf$3059
  9436   001DF4  C045  F15D         	movff	?___flsub+1,_powf$3059+1
  9437   001DF8  C046  F15E         	movff	?___flsub+2,_powf$3059+2
  9438   001DFC  C047  F15F         	movff	?___flsub+3,_powf$3059+3
  9439   001E00  C15C  F012         	movff	_powf$3059,___flmul@b
  9440   001E04  C15D  F013         	movff	_powf$3059+1,___flmul@b+1
  9441   001E08  C15E  F014         	movff	_powf$3059+2,___flmul@b+2
  9442   001E0C  C15F  F015         	movff	_powf$3059+3,___flmul@b+3
  9443   001E10  C180  F016         	movff	powf@v,___flmul@a
  9444   001E14  C181  F017         	movff	powf@v+1,___flmul@a+1
  9445   001E18  C182  F018         	movff	powf@v+2,___flmul@a+2
  9446   001E1C  C183  F019         	movff	powf@v+3,___flmul@a+3
  9447   001E20  ECDC  F028         	call	___flmul	;wreg free
  9448   001E24  C012  F130         	movff	?___flmul,powf@s_l
  9449   001E28  C013  F131         	movff	?___flmul+1,powf@s_l+1
  9450   001E2C  C014  F132         	movff	?___flmul+2,powf@s_l+2
  9451   001E30  C015  F133         	movff	?___flmul+3,powf@s_l+3
  9452   001E34  C158  F012         	movff	powf@s,___flmul@b
  9453   001E38  C159  F013         	movff	powf@s+1,___flmul@b+1
  9454   001E3C  C15A  F014         	movff	powf@s+2,___flmul@b+2
  9455   001E40  C15B  F015         	movff	powf@s+3,___flmul@b+3
  9456   001E44  C158  F016         	movff	powf@s,___flmul@a
  9457   001E48  C159  F017         	movff	powf@s+1,___flmul@a+1
  9458   001E4C  C15A  F018         	movff	powf@s+2,___flmul@a+2
  9459   001E50  C15B  F019         	movff	powf@s+3,___flmul@a+3
  9460   001E54  ECDC  F028         	call	___flmul	;wreg free
  9461   001E58  C012  F190         	movff	?___flmul,powf@s2
  9462   001E5C  C013  F191         	movff	?___flmul+1,powf@s2+1
  9463   001E60  C014  F192         	movff	?___flmul+2,powf@s2+2
  9464   001E64  C015  F193         	movff	?___flmul+3,powf@s2+3
  9465   001E68  0E55               	movlw	85
  9466   001E6A  6E06               	movwf	___fladd@a^0,c
  9467   001E6C  0E32               	movlw	50
  9468   001E6E  6E07               	movwf	(___fladd@a+1)^0,c
  9469   001E70  0E6C               	movlw	108
  9470   001E72  6E08               	movwf	(___fladd@a+2)^0,c
  9471   001E74  0E3E               	movlw	62
  9472   001E76  6E09               	movwf	(___fladd@a+3)^0,c
  9473   001E78  0E42               	movlw	66
  9474   001E7A  6E16               	movwf	___flmul@a^0,c
  9475   001E7C  0EF1               	movlw	241
  9476   001E7E  6E17               	movwf	(___flmul@a+1)^0,c
  9477   001E80  0E53               	movlw	83
  9478   001E82  6E18               	movwf	(___flmul@a+2)^0,c
  9479   001E84  0E3E               	movlw	62
  9480   001E86  6E19               	movwf	(___flmul@a+3)^0,c
  9481   001E88  C190  F012         	movff	powf@s2,___flmul@b
  9482   001E8C  C191  F013         	movff	powf@s2+1,___flmul@b+1
  9483   001E90  C192  F014         	movff	powf@s2+2,___flmul@b+2
  9484   001E94  C193  F015         	movff	powf@s2+3,___flmul@b+3
  9485   001E98  ECDC  F028         	call	___flmul	;wreg free
  9486   001E9C  C012  F002         	movff	?___flmul,___fladd@b
  9487   001EA0  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9488   001EA4  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9489   001EA8  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9490   001EAC  EC7C  F026         	call	___fladd	;wreg free
  9491   001EB0  C002  F148         	movff	?___fladd,_powf$3058
  9492   001EB4  C003  F149         	movff	?___fladd+1,_powf$3058+1
  9493   001EB8  C004  F14A         	movff	?___fladd+2,_powf$3058+2
  9494   001EBC  C005  F14B         	movff	?___fladd+3,_powf$3058+3
  9495   001EC0  0E05               	movlw	5
  9496   001EC2  6E06               	movwf	___fladd@a^0,c
  9497   001EC4  0EA3               	movlw	163
  9498   001EC6  6E07               	movwf	(___fladd@a+1)^0,c
  9499   001EC8  0E8B               	movlw	139
  9500   001ECA  6E08               	movwf	(___fladd@a+2)^0,c
  9501   001ECC  0E3E               	movlw	62
  9502   001ECE  6E09               	movwf	(___fladd@a+3)^0,c
  9503   001ED0  C190  F016         	movff	powf@s2,___flmul@a
  9504   001ED4  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9505   001ED8  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9506   001EDC  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9507   001EE0  C148  F012         	movff	_powf$3058,___flmul@b
  9508   001EE4  C149  F013         	movff	_powf$3058+1,___flmul@b+1
  9509   001EE8  C14A  F014         	movff	_powf$3058+2,___flmul@b+2
  9510   001EEC  C14B  F015         	movff	_powf$3058+3,___flmul@b+3
  9511   001EF0  ECDC  F028         	call	___flmul	;wreg free
  9512   001EF4  C012  F002         	movff	?___flmul,___fladd@b
  9513   001EF8  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9514   001EFC  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9515   001F00  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9516   001F04  EC7C  F026         	call	___fladd	;wreg free
  9517   001F08  C002  F15C         	movff	?___fladd,_powf$3059
  9518   001F0C  C003  F15D         	movff	?___fladd+1,_powf$3059+1
  9519   001F10  C004  F15E         	movff	?___fladd+2,_powf$3059+2
  9520   001F14  C005  F15F         	movff	?___fladd+3,_powf$3059+3
  9521   001F18  0EAB               	movlw	171
  9522   001F1A  6E06               	movwf	___fladd@a^0,c
  9523   001F1C  0EAA               	movlw	170
  9524   001F1E  6E07               	movwf	(___fladd@a+1)^0,c
  9525   001F20  0EAA               	movlw	170
  9526   001F22  6E08               	movwf	(___fladd@a+2)^0,c
  9527   001F24  0E3E               	movlw	62
  9528   001F26  6E09               	movwf	(___fladd@a+3)^0,c
  9529   001F28  C190  F016         	movff	powf@s2,___flmul@a
  9530   001F2C  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9531   001F30  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9532   001F34  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9533   001F38  C15C  F012         	movff	_powf$3059,___flmul@b
  9534   001F3C  C15D  F013         	movff	_powf$3059+1,___flmul@b+1
  9535   001F40  C15E  F014         	movff	_powf$3059+2,___flmul@b+2
  9536   001F44  C15F  F015         	movff	_powf$3059+3,___flmul@b+3
  9537   001F48  ECDC  F028         	call	___flmul	;wreg free
  9538   001F4C  C012  F002         	movff	?___flmul,___fladd@b
  9539   001F50  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9540   001F54  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9541   001F58  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9542   001F5C  EC7C  F026         	call	___fladd	;wreg free
  9543   001F60  C002  F14C         	movff	?___fladd,_powf$3060
  9544   001F64  C003  F14D         	movff	?___fladd+1,_powf$3060+1
  9545   001F68  C004  F14E         	movff	?___fladd+2,_powf$3060+2
  9546   001F6C  C005  F14F         	movff	?___fladd+3,_powf$3060+3
  9547   001F70  0EB7               	movlw	183
  9548   001F72  6E06               	movwf	___fladd@a^0,c
  9549   001F74  0E6D               	movlw	109
  9550   001F76  6E07               	movwf	(___fladd@a+1)^0,c
  9551   001F78  0EDB               	movlw	219
  9552   001F7A  6E08               	movwf	(___fladd@a+2)^0,c
  9553   001F7C  0E3E               	movlw	62
  9554   001F7E  6E09               	movwf	(___fladd@a+3)^0,c
  9555   001F80  C190  F016         	movff	powf@s2,___flmul@a
  9556   001F84  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9557   001F88  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9558   001F8C  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9559   001F90  C14C  F012         	movff	_powf$3060,___flmul@b
  9560   001F94  C14D  F013         	movff	_powf$3060+1,___flmul@b+1
  9561   001F98  C14E  F014         	movff	_powf$3060+2,___flmul@b+2
  9562   001F9C  C14F  F015         	movff	_powf$3060+3,___flmul@b+3
  9563   001FA0  ECDC  F028         	call	___flmul	;wreg free
  9564   001FA4  C012  F002         	movff	?___flmul,___fladd@b
  9565   001FA8  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9566   001FAC  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9567   001FB0  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9568   001FB4  EC7C  F026         	call	___fladd	;wreg free
  9569   001FB8  C002  F138         	movff	?___fladd,_powf$3062
  9570   001FBC  C003  F139         	movff	?___fladd+1,_powf$3062+1
  9571   001FC0  C004  F13A         	movff	?___fladd+2,_powf$3062+2
  9572   001FC4  C005  F13B         	movff	?___fladd+3,_powf$3062+3
  9573   001FC8  0E9A               	movlw	154
  9574   001FCA  6E06               	movwf	___fladd@a^0,c
  9575   001FCC  0E99               	movlw	153
  9576   001FCE  6E07               	movwf	(___fladd@a+1)^0,c
  9577   001FD0  0E19               	movlw	25
  9578   001FD2  6E08               	movwf	(___fladd@a+2)^0,c
  9579   001FD4  0E3F               	movlw	63
  9580   001FD6  6E09               	movwf	(___fladd@a+3)^0,c
  9581   001FD8  C190  F016         	movff	powf@s2,___flmul@a
  9582   001FDC  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9583   001FE0  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9584   001FE4  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9585   001FE8  C138  F012         	movff	_powf$3062,___flmul@b
  9586   001FEC  C139  F013         	movff	_powf$3062+1,___flmul@b+1
  9587   001FF0  C13A  F014         	movff	_powf$3062+2,___flmul@b+2
  9588   001FF4  C13B  F015         	movff	_powf$3062+3,___flmul@b+3
  9589   001FF8  ECDC  F028         	call	___flmul	;wreg free
  9590   001FFC  C012  F002         	movff	?___flmul,___fladd@b
  9591   002000  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9592   002004  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9593   002008  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9594   00200C  EC7C  F026         	call	___fladd	;wreg free
  9595   002010  C002  F100         	movff	?___fladd,_powf$3063
  9596   002014  C003  F101         	movff	?___fladd+1,_powf$3063+1
  9597   002018  C004  F102         	movff	?___fladd+2,_powf$3063+2
  9598   00201C  C005  F103         	movff	?___fladd+3,_powf$3063+3
  9599   002020  C190  F016         	movff	powf@s2,___flmul@a
  9600   002024  C191  F017         	movff	powf@s2+1,___flmul@a+1
  9601   002028  C192  F018         	movff	powf@s2+2,___flmul@a+2
  9602   00202C  C193  F019         	movff	powf@s2+3,___flmul@a+3
  9603   002030  C190  F012         	movff	powf@s2,___flmul@b
  9604   002034  C191  F013         	movff	powf@s2+1,___flmul@b+1
  9605   002038  C192  F014         	movff	powf@s2+2,___flmul@b+2
  9606   00203C  C193  F015         	movff	powf@s2+3,___flmul@b+3
  9607   002040  ECDC  F028         	call	___flmul	;wreg free
  9608   002044  C012  F104         	movff	?___flmul,_powf$3064
  9609   002048  C013  F105         	movff	?___flmul+1,_powf$3064+1
  9610   00204C  C014  F106         	movff	?___flmul+2,_powf$3064+2
  9611   002050  C015  F107         	movff	?___flmul+3,_powf$3064+3
  9612   002054  C100  F012         	movff	_powf$3063,___flmul@b
  9613   002058  C101  F013         	movff	_powf$3063+1,___flmul@b+1
  9614   00205C  C102  F014         	movff	_powf$3063+2,___flmul@b+2
  9615   002060  C103  F015         	movff	_powf$3063+3,___flmul@b+3
  9616   002064  C104  F016         	movff	_powf$3064,___flmul@a
  9617   002068  C105  F017         	movff	_powf$3064+1,___flmul@a+1
  9618   00206C  C106  F018         	movff	_powf$3064+2,___flmul@a+2
  9619   002070  C107  F019         	movff	_powf$3064+3,___flmul@a+3
  9620   002074  ECDC  F028         	call	___flmul	;wreg free
  9621   002078  C012  F150         	movff	?___flmul,powf@r
  9622   00207C  C013  F151         	movff	?___flmul+1,powf@r+1
  9623   002080  C014  F152         	movff	?___flmul+2,powf@r+2
  9624   002084  C015  F153         	movff	?___flmul+3,powf@r+3
  9625   002088  C130  F016         	movff	powf@s_l,___flmul@a
  9626   00208C  C131  F017         	movff	powf@s_l+1,___flmul@a+1
  9627   002090  C132  F018         	movff	powf@s_l+2,___flmul@a+2
  9628   002094  C133  F019         	movff	powf@s_l+3,___flmul@a+3
  9629   002098  C158  F006         	movff	powf@s,___fladd@a
  9630   00209C  C159  F007         	movff	powf@s+1,___fladd@a+1
  9631   0020A0  C15A  F008         	movff	powf@s+2,___fladd@a+2
  9632   0020A4  C15B  F009         	movff	powf@s+3,___fladd@a+3
  9633   0020A8  C174  F002         	movff	powf@s_h,___fladd@b
  9634   0020AC  C175  F003         	movff	powf@s_h+1,___fladd@b+1
  9635   0020B0  C176  F004         	movff	powf@s_h+2,___fladd@b+2
  9636   0020B4  C177  F005         	movff	powf@s_h+3,___fladd@b+3
  9637   0020B8  EC7C  F026         	call	___fladd	;wreg free
  9638   0020BC  C002  F012         	movff	?___fladd,___flmul@b
  9639   0020C0  C003  F013         	movff	?___fladd+1,___flmul@b+1
  9640   0020C4  C004  F014         	movff	?___fladd+2,___flmul@b+2
  9641   0020C8  C005  F015         	movff	?___fladd+3,___flmul@b+3
  9642   0020CC  ECDC  F028         	call	___flmul	;wreg free
  9643   0020D0  C012  F160         	movff	?___flmul,_powf$3065
  9644   0020D4  C013  F161         	movff	?___flmul+1,_powf$3065+1
  9645   0020D8  C014  F162         	movff	?___flmul+2,_powf$3065+2
  9646   0020DC  C015  F163         	movff	?___flmul+3,_powf$3065+3
  9647   0020E0  C150  F002         	movff	powf@r,___fladd@b
  9648   0020E4  C151  F003         	movff	powf@r+1,___fladd@b+1
  9649   0020E8  C152  F004         	movff	powf@r+2,___fladd@b+2
  9650   0020EC  C153  F005         	movff	powf@r+3,___fladd@b+3
  9651   0020F0  C160  F006         	movff	_powf$3065,___fladd@a
  9652   0020F4  C161  F007         	movff	_powf$3065+1,___fladd@a+1
  9653   0020F8  C162  F008         	movff	_powf$3065+2,___fladd@a+2
  9654   0020FC  C163  F009         	movff	_powf$3065+3,___fladd@a+3
  9655   002100  EC7C  F026         	call	___fladd	;wreg free
  9656   002104  C002  F150         	movff	?___fladd,powf@r
  9657   002108  C003  F151         	movff	?___fladd+1,powf@r+1
  9658   00210C  C004  F152         	movff	?___fladd+2,powf@r+2
  9659   002110  C005  F153         	movff	?___fladd+3,powf@r+3
  9660   002114  C174  F012         	movff	powf@s_h,___flmul@b
  9661   002118  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9662   00211C  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9663   002120  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9664   002124  C174  F016         	movff	powf@s_h,___flmul@a
  9665   002128  C175  F017         	movff	powf@s_h+1,___flmul@a+1
  9666   00212C  C176  F018         	movff	powf@s_h+2,___flmul@a+2
  9667   002130  C177  F019         	movff	powf@s_h+3,___flmul@a+3
  9668   002134  ECDC  F028         	call	___flmul	;wreg free
  9669   002138  C012  F190         	movff	?___flmul,powf@s2
  9670   00213C  C013  F191         	movff	?___flmul+1,powf@s2+1
  9671   002140  C014  F192         	movff	?___flmul+2,powf@s2+2
  9672   002144  C015  F193         	movff	?___flmul+3,powf@s2+3
  9673   002148  0E00               	movlw	0
  9674   00214A  6E06               	movwf	___fladd@a^0,c
  9675   00214C  0E00               	movlw	0
  9676   00214E  6E07               	movwf	(___fladd@a+1)^0,c
  9677   002150  0E40               	movlw	64
  9678   002152  6E08               	movwf	(___fladd@a+2)^0,c
  9679   002154  0E40               	movlw	64
  9680   002156  6E09               	movwf	(___fladd@a+3)^0,c
  9681   002158  C190  F002         	movff	powf@s2,___fladd@b
  9682   00215C  C191  F003         	movff	powf@s2+1,___fladd@b+1
  9683   002160  C192  F004         	movff	powf@s2+2,___fladd@b+2
  9684   002164  C193  F005         	movff	powf@s2+3,___fladd@b+3
  9685   002168  EC7C  F026         	call	___fladd	;wreg free
  9686   00216C  C002  F160         	movff	?___fladd,_powf$3065
  9687   002170  C003  F161         	movff	?___fladd+1,_powf$3065+1
  9688   002174  C004  F162         	movff	?___fladd+2,_powf$3065+2
  9689   002178  C005  F163         	movff	?___fladd+3,_powf$3065+3
  9690   00217C  C160  F002         	movff	_powf$3065,___fladd@b
  9691   002180  C161  F003         	movff	_powf$3065+1,___fladd@b+1
  9692   002184  C162  F004         	movff	_powf$3065+2,___fladd@b+2
  9693   002188  C163  F005         	movff	_powf$3065+3,___fladd@b+3
  9694   00218C  C150  F006         	movff	powf@r,___fladd@a
  9695   002190  C151  F007         	movff	powf@r+1,___fladd@a+1
  9696   002194  C152  F008         	movff	powf@r+2,___fladd@a+2
  9697   002198  C153  F009         	movff	powf@r+3,___fladd@a+3
  9698   00219C  EC7C  F026         	call	___fladd	;wreg free
  9699   0021A0  C002  F170         	movff	?___fladd,powf@t_h
  9700   0021A4  C003  F171         	movff	?___fladd+1,powf@t_h+1
  9701   0021A8  C004  F172         	movff	?___fladd+2,powf@t_h+2
  9702   0021AC  C005  F173         	movff	?___fladd+3,powf@t_h+3
  9703   0021B0  C170  F198         	movff	powf@t_h,powf@is
  9704   0021B4  C171  F199         	movff	powf@t_h+1,powf@is+1
  9705   0021B8  C172  F19A         	movff	powf@t_h+2,powf@is+2
  9706   0021BC  C173  F19B         	movff	powf@t_h+3,powf@is+3
  9707   0021C0  0E00               	movlw	0
  9708   0021C2  0101               	movlb	1	; () banked
  9709   0021C4  1598               	andwf	powf@is& (0+255),w,b
  9710   0021C6  6F70               	movwf	powf@t_h& (0+255),b
  9711   0021C8  0EF0               	movlw	240
  9712   0021CA  1599               	andwf	(powf@is+1)& (0+255),w,b
  9713   0021CC  6F71               	movwf	(powf@t_h+1)& (0+255),b
  9714   0021CE  0EFF               	movlw	255
  9715   0021D0  159A               	andwf	(powf@is+2)& (0+255),w,b
  9716   0021D2  6F72               	movwf	(powf@t_h+2)& (0+255),b
  9717   0021D4  0EFF               	movlw	255
  9718   0021D6  159B               	andwf	(powf@is+3)& (0+255),w,b
  9719   0021D8  6F73               	movwf	(powf@t_h+3)& (0+255),b
  9720   0021DA                     
  9721                           ; BSR set to: 1
  9722   0021DA  0E00               	movlw	0
  9723   0021DC  6E06               	movwf	___fladd@a^0,c
  9724   0021DE  0E00               	movlw	0
  9725   0021E0  6E07               	movwf	(___fladd@a+1)^0,c
  9726   0021E2  0E40               	movlw	64
  9727   0021E4  6E08               	movwf	(___fladd@a+2)^0,c
  9728   0021E6  0EC0               	movlw	192
  9729   0021E8  6E09               	movwf	(___fladd@a+3)^0,c
  9730   0021EA  C170  F002         	movff	powf@t_h,___fladd@b
  9731   0021EE  C171  F003         	movff	powf@t_h+1,___fladd@b+1
  9732   0021F2  C172  F004         	movff	powf@t_h+2,___fladd@b+2
  9733   0021F6  C173  F005         	movff	powf@t_h+3,___fladd@b+3
  9734   0021FA  EC7C  F026         	call	___fladd	;wreg free
  9735   0021FE  C002  F13C         	movff	?___fladd,_powf$3066
  9736   002202  C003  F13D         	movff	?___fladd+1,_powf$3066+1
  9737   002206  C004  F13E         	movff	?___fladd+2,_powf$3066+2
  9738   00220A  C005  F13F         	movff	?___fladd+3,_powf$3066+3
  9739   00220E  C190  F048         	movff	powf@s2,___flsub@a
  9740   002212  C191  F049         	movff	powf@s2+1,___flsub@a+1
  9741   002216  C192  F04A         	movff	powf@s2+2,___flsub@a+2
  9742   00221A  C193  F04B         	movff	powf@s2+3,___flsub@a+3
  9743   00221E  C13C  F044         	movff	_powf$3066,___flsub@b
  9744   002222  C13D  F045         	movff	_powf$3066+1,___flsub@b+1
  9745   002226  C13E  F046         	movff	_powf$3066+2,___flsub@b+2
  9746   00222A  C13F  F047         	movff	_powf$3066+3,___flsub@b+3
  9747   00222E  ECA3  F039         	call	___flsub	;wreg free
  9748   002232  C044  F140         	movff	?___flsub,_powf$3067
  9749   002236  C045  F141         	movff	?___flsub+1,_powf$3067+1
  9750   00223A  C046  F142         	movff	?___flsub+2,_powf$3067+2
  9751   00223E  C047  F143         	movff	?___flsub+3,_powf$3067+3
  9752   002242  C150  F044         	movff	powf@r,___flsub@b
  9753   002246  C151  F045         	movff	powf@r+1,___flsub@b+1
  9754   00224A  C152  F046         	movff	powf@r+2,___flsub@b+2
  9755   00224E  C153  F047         	movff	powf@r+3,___flsub@b+3
  9756   002252  C140  F048         	movff	_powf$3067,___flsub@a
  9757   002256  C141  F049         	movff	_powf$3067+1,___flsub@a+1
  9758   00225A  C142  F04A         	movff	_powf$3067+2,___flsub@a+2
  9759   00225E  C143  F04B         	movff	_powf$3067+3,___flsub@a+3
  9760   002262  ECA3  F039         	call	___flsub	;wreg free
  9761   002266  C044  F134         	movff	?___flsub,powf@t_l
  9762   00226A  C045  F135         	movff	?___flsub+1,powf@t_l+1
  9763   00226E  C046  F136         	movff	?___flsub+2,powf@t_l+2
  9764   002272  C047  F137         	movff	?___flsub+3,powf@t_l+3
  9765   002276  C174  F012         	movff	powf@s_h,___flmul@b
  9766   00227A  C175  F013         	movff	powf@s_h+1,___flmul@b+1
  9767   00227E  C176  F014         	movff	powf@s_h+2,___flmul@b+2
  9768   002282  C177  F015         	movff	powf@s_h+3,___flmul@b+3
  9769   002286  C170  F016         	movff	powf@t_h,___flmul@a
  9770   00228A  C171  F017         	movff	powf@t_h+1,___flmul@a+1
  9771   00228E  C172  F018         	movff	powf@t_h+2,___flmul@a+2
  9772   002292  C173  F019         	movff	powf@t_h+3,___flmul@a+3
  9773   002296  ECDC  F028         	call	___flmul	;wreg free
  9774   00229A  C012  F17C         	movff	?___flmul,powf@u
  9775   00229E  C013  F17D         	movff	?___flmul+1,powf@u+1
  9776   0022A2  C014  F17E         	movff	?___flmul+2,powf@u+2
  9777   0022A6  C015  F17F         	movff	?___flmul+3,powf@u+3
  9778   0022AA  C130  F016         	movff	powf@s_l,___flmul@a
  9779   0022AE  C131  F017         	movff	powf@s_l+1,___flmul@a+1
  9780   0022B2  C132  F018         	movff	powf@s_l+2,___flmul@a+2
  9781   0022B6  C133  F019         	movff	powf@s_l+3,___flmul@a+3
  9782   0022BA  C170  F012         	movff	powf@t_h,___flmul@b
  9783   0022BE  C171  F013         	movff	powf@t_h+1,___flmul@b+1
  9784   0022C2  C172  F014         	movff	powf@t_h+2,___flmul@b+2
  9785   0022C6  C173  F015         	movff	powf@t_h+3,___flmul@b+3
  9786   0022CA  ECDC  F028         	call	___flmul	;wreg free
  9787   0022CE  C012  F002         	movff	?___flmul,___fladd@b
  9788   0022D2  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9789   0022D6  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9790   0022DA  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9791   0022DE  C158  F016         	movff	powf@s,___flmul@a
  9792   0022E2  C159  F017         	movff	powf@s+1,___flmul@a+1
  9793   0022E6  C15A  F018         	movff	powf@s+2,___flmul@a+2
  9794   0022EA  C15B  F019         	movff	powf@s+3,___flmul@a+3
  9795   0022EE  C134  F012         	movff	powf@t_l,___flmul@b
  9796   0022F2  C135  F013         	movff	powf@t_l+1,___flmul@b+1
  9797   0022F6  C136  F014         	movff	powf@t_l+2,___flmul@b+2
  9798   0022FA  C137  F015         	movff	powf@t_l+3,___flmul@b+3
  9799   0022FE  ECDC  F028         	call	___flmul	;wreg free
  9800   002302  C012  F006         	movff	?___flmul,___fladd@a
  9801   002306  C013  F007         	movff	?___flmul+1,___fladd@a+1
  9802   00230A  C014  F008         	movff	?___flmul+2,___fladd@a+2
  9803   00230E  C015  F009         	movff	?___flmul+3,___fladd@a+3
  9804   002312  EC7C  F026         	call	___fladd	;wreg free
  9805   002316  C002  F180         	movff	?___fladd,powf@v
  9806   00231A  C003  F181         	movff	?___fladd+1,powf@v+1
  9807   00231E  C004  F182         	movff	?___fladd+2,powf@v+2
  9808   002322  C005  F183         	movff	?___fladd+3,powf@v+3
  9809   002326  C17C  F002         	movff	powf@u,___fladd@b
  9810   00232A  C17D  F003         	movff	powf@u+1,___fladd@b+1
  9811   00232E  C17E  F004         	movff	powf@u+2,___fladd@b+2
  9812   002332  C17F  F005         	movff	powf@u+3,___fladd@b+3
  9813   002336  C180  F006         	movff	powf@v,___fladd@a
  9814   00233A  C181  F007         	movff	powf@v+1,___fladd@a+1
  9815   00233E  C182  F008         	movff	powf@v+2,___fladd@a+2
  9816   002342  C183  F009         	movff	powf@v+3,___fladd@a+3
  9817   002346  EC7C  F026         	call	___fladd	;wreg free
  9818   00234A  C002  F1A0         	movff	?___fladd,powf@p_h
  9819   00234E  C003  F1A1         	movff	?___fladd+1,powf@p_h+1
  9820   002352  C004  F1A2         	movff	?___fladd+2,powf@p_h+2
  9821   002356  C005  F1A3         	movff	?___fladd+3,powf@p_h+3
  9822   00235A  C1A0  F198         	movff	powf@p_h,powf@is
  9823   00235E  C1A1  F199         	movff	powf@p_h+1,powf@is+1
  9824   002362  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
  9825   002366  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
  9826   00236A  0E00               	movlw	0
  9827   00236C  0101               	movlb	1	; () banked
  9828   00236E  1598               	andwf	powf@is& (0+255),w,b
  9829   002370  6FA0               	movwf	powf@p_h& (0+255),b
  9830   002372  0EF0               	movlw	240
  9831   002374  1599               	andwf	(powf@is+1)& (0+255),w,b
  9832   002376  6FA1               	movwf	(powf@p_h+1)& (0+255),b
  9833   002378  0EFF               	movlw	255
  9834   00237A  159A               	andwf	(powf@is+2)& (0+255),w,b
  9835   00237C  6FA2               	movwf	(powf@p_h+2)& (0+255),b
  9836   00237E  0EFF               	movlw	255
  9837   002380  159B               	andwf	(powf@is+3)& (0+255),w,b
  9838   002382  6FA3               	movwf	(powf@p_h+3)& (0+255),b
  9839   002384                     
  9840                           ; BSR set to: 1
  9841   002384  C17C  F048         	movff	powf@u,___flsub@a
  9842   002388  C17D  F049         	movff	powf@u+1,___flsub@a+1
  9843   00238C  C17E  F04A         	movff	powf@u+2,___flsub@a+2
  9844   002390  C17F  F04B         	movff	powf@u+3,___flsub@a+3
  9845   002394  C1A0  F044         	movff	powf@p_h,___flsub@b
  9846   002398  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
  9847   00239C  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
  9848   0023A0  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
  9849   0023A4  ECA3  F039         	call	___flsub	;wreg free
  9850   0023A8  C044  F19C         	movff	?___flsub,_powf$3061
  9851   0023AC  C045  F19D         	movff	?___flsub+1,_powf$3061+1
  9852   0023B0  C046  F19E         	movff	?___flsub+2,_powf$3061+2
  9853   0023B4  C047  F19F         	movff	?___flsub+3,_powf$3061+3
  9854   0023B8  C180  F044         	movff	powf@v,___flsub@b
  9855   0023BC  C181  F045         	movff	powf@v+1,___flsub@b+1
  9856   0023C0  C182  F046         	movff	powf@v+2,___flsub@b+2
  9857   0023C4  C183  F047         	movff	powf@v+3,___flsub@b+3
  9858   0023C8  C19C  F048         	movff	_powf$3061,___flsub@a
  9859   0023CC  C19D  F049         	movff	_powf$3061+1,___flsub@a+1
  9860   0023D0  C19E  F04A         	movff	_powf$3061+2,___flsub@a+2
  9861   0023D4  C19F  F04B         	movff	_powf$3061+3,___flsub@a+3
  9862   0023D8  ECA3  F039         	call	___flsub	;wreg free
  9863   0023DC  C044  F16C         	movff	?___flsub,powf@p_l
  9864   0023E0  C045  F16D         	movff	?___flsub+1,powf@p_l+1
  9865   0023E4  C046  F16E         	movff	?___flsub+2,powf@p_l+2
  9866   0023E8  C047  F16F         	movff	?___flsub+3,powf@p_l+3
  9867   0023EC  C1A0  F012         	movff	powf@p_h,___flmul@b
  9868   0023F0  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
  9869   0023F4  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
  9870   0023F8  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
  9871   0023FC  0E00               	movlw	0
  9872   0023FE  6E16               	movwf	___flmul@a^0,c
  9873   002400  0E40               	movlw	64
  9874   002402  6E17               	movwf	(___flmul@a+1)^0,c
  9875   002404  0E76               	movlw	118
  9876   002406  6E18               	movwf	(___flmul@a+2)^0,c
  9877   002408  0E3F               	movlw	63
  9878   00240A  6E19               	movwf	(___flmul@a+3)^0,c
  9879   00240C  ECDC  F028         	call	___flmul	;wreg free
  9880   002410  C012  F120         	movff	?___flmul,powf@z_h
  9881   002414  C013  F121         	movff	?___flmul+1,powf@z_h+1
  9882   002418  C014  F122         	movff	?___flmul+2,powf@z_h+2
  9883   00241C  C015  F123         	movff	?___flmul+3,powf@z_h+3
  9884   002420  0E4F               	movlw	79
  9885   002422  6E16               	movwf	___flmul@a^0,c
  9886   002424  0E38               	movlw	56
  9887   002426  6E17               	movwf	(___flmul@a+1)^0,c
  9888   002428  0E76               	movlw	118
  9889   00242A  6E18               	movwf	(___flmul@a+2)^0,c
  9890   00242C  0E3F               	movlw	63
  9891   00242E  6E19               	movwf	(___flmul@a+3)^0,c
  9892   002430  C16C  F012         	movff	powf@p_l,___flmul@b
  9893   002434  C16D  F013         	movff	powf@p_l+1,___flmul@b+1
  9894   002438  C16E  F014         	movff	powf@p_l+2,___flmul@b+2
  9895   00243C  C16F  F015         	movff	powf@p_l+3,___flmul@b+3
  9896   002440  ECDC  F028         	call	___flmul	;wreg free
  9897   002444  C012  F006         	movff	?___flmul,___fladd@a
  9898   002448  C013  F007         	movff	?___flmul+1,___fladd@a+1
  9899   00244C  C014  F008         	movff	?___flmul+2,___fladd@a+2
  9900   002450  C015  F009         	movff	?___flmul+3,___fladd@a+3
  9901   002454  0EC6               	movlw	198
  9902   002456  6E16               	movwf	___flmul@a^0,c
  9903   002458  0E23               	movlw	35
  9904   00245A  6E17               	movwf	(___flmul@a+1)^0,c
  9905   00245C  0EF6               	movlw	246
  9906   00245E  6E18               	movwf	(___flmul@a+2)^0,c
  9907   002460  0EB8               	movlw	184
  9908   002462  6E19               	movwf	(___flmul@a+3)^0,c
  9909   002464  C1A0  F012         	movff	powf@p_h,___flmul@b
  9910   002468  C1A1  F013         	movff	powf@p_h+1,___flmul@b+1
  9911   00246C  C1A2  F014         	movff	powf@p_h+2,___flmul@b+2
  9912   002470  C1A3  F015         	movff	powf@p_h+3,___flmul@b+3
  9913   002474  ECDC  F028         	call	___flmul	;wreg free
  9914   002478  C012  F002         	movff	?___flmul,___fladd@b
  9915   00247C  C013  F003         	movff	?___flmul+1,___fladd@b+1
  9916   002480  C014  F004         	movff	?___flmul+2,___fladd@b+2
  9917   002484  C015  F005         	movff	?___flmul+3,___fladd@b+3
  9918   002488  EC7C  F026         	call	___fladd	;wreg free
  9919   00248C  C002  F160         	movff	?___fladd,_powf$3065
  9920   002490  C003  F161         	movff	?___fladd+1,_powf$3065+1
  9921   002494  C004  F162         	movff	?___fladd+2,_powf$3065+2
  9922   002498  C005  F163         	movff	?___fladd+3,_powf$3065+3
  9923   00249C  C160  F002         	movff	_powf$3065,___fladd@b
  9924   0024A0  C161  F003         	movff	_powf$3065+1,___fladd@b+1
  9925   0024A4  C162  F004         	movff	_powf$3065+2,___fladd@b+2
  9926   0024A8  C163  F005         	movff	_powf$3065+3,___fladd@b+3
  9927   0024AC  0101               	movlb	1	; () banked
  9928   0024AE  51A4               	movf	powf@k& (0+255),w,b
  9929   0024B0  0D04               	mullw	4
  9930   0024B2  50F3               	movf	243,w,c
  9931   0024B4  0F01               	addlw	low _dp_l
  9932   0024B6  0100               	movlb	0	; () banked
  9933   0024B8  6F68               	movwf	??_powf& (0+255),b
  9934   0024BA  C068  FFF6         	movff	??_powf,tblptrl
  9935   0024BE                     	if	1	;There is more than 1 active tblptr byte
  9936   0024BE  0E0E               	movlw	high __smallconst
  9937   0024C0  6EF7               	movwf	tblptrh,c
  9938   0024C2                     	endif
  9939   0024C2                     	if	0	;tblptru may be non-zero
  9940   0024C2                     	endif
  9941   0024C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9942   0024C2  0E00               	movlw	low (__smallconst shr (0+16))
  9943   0024C4  6EF8               	movwf	tblptru,c
  9944   0024C6                     	endif
  9945   0024C6  0009               	tblrd		*+
  9946   0024C8  CFF5 F006          	movff	tablat,___fladd@a
  9947   0024CC  0009               	tblrd		*+
  9948   0024CE  CFF5 F007          	movff	tablat,___fladd@a+1
  9949   0024D2  0009               	tblrd		*+
  9950   0024D4  CFF5 F008          	movff	tablat,___fladd@a+2
  9951   0024D8  000A               	tblrd		*-
  9952   0024DA  CFF5 F009          	movff	tablat,___fladd@a+3
  9953   0024DE  EC7C  F026         	call	___fladd	;wreg free
  9954   0024E2  C002  F124         	movff	?___fladd,powf@z_l
  9955   0024E6  C003  F125         	movff	?___fladd+1,powf@z_l+1
  9956   0024EA  C004  F126         	movff	?___fladd+2,powf@z_l+2
  9957   0024EE  C005  F127         	movff	?___fladd+3,powf@z_l+3
  9958   0024F2  C188  F00D         	movff	powf@n,___xxtofl@val
  9959   0024F6  C189  F00E         	movff	powf@n+1,___xxtofl@val+1
  9960   0024FA  C18A  F00F         	movff	powf@n+2,___xxtofl@val+2
  9961   0024FE  C18B  F010         	movff	powf@n+3,___xxtofl@val+3
  9962   002502  0E01               	movlw	1
  9963   002504  ECB2  F030         	call	___xxtofl
  9964   002508  C00D  F1B0         	movff	?___xxtofl,powf@t
  9965   00250C  C00E  F1B1         	movff	?___xxtofl+1,powf@t+1
  9966   002510  C00F  F1B2         	movff	?___xxtofl+2,powf@t+2
  9967   002514  C010  F1B3         	movff	?___xxtofl+3,powf@t+3
  9968   002518  C124  F006         	movff	powf@z_l,___fladd@a
  9969   00251C  C125  F007         	movff	powf@z_l+1,___fladd@a+1
  9970   002520  C126  F008         	movff	powf@z_l+2,___fladd@a+2
  9971   002524  C127  F009         	movff	powf@z_l+3,___fladd@a+3
  9972   002528  C120  F002         	movff	powf@z_h,___fladd@b
  9973   00252C  C121  F003         	movff	powf@z_h+1,___fladd@b+1
  9974   002530  C122  F004         	movff	powf@z_h+2,___fladd@b+2
  9975   002534  C123  F005         	movff	powf@z_h+3,___fladd@b+3
  9976   002538  EC7C  F026         	call	___fladd	;wreg free
  9977   00253C  C002  F160         	movff	?___fladd,_powf$3065
  9978   002540  C003  F161         	movff	?___fladd+1,_powf$3065+1
  9979   002544  C004  F162         	movff	?___fladd+2,_powf$3065+2
  9980   002548  C005  F163         	movff	?___fladd+3,_powf$3065+3
  9981   00254C  0101               	movlb	1	; () banked
  9982   00254E  51A4               	movf	powf@k& (0+255),w,b
  9983   002550  0D04               	mullw	4
  9984   002552  50F3               	movf	243,w,c
  9985   002554  0F09               	addlw	low _dp_h
  9986   002556  0100               	movlb	0	; () banked
  9987   002558  6F68               	movwf	??_powf& (0+255),b
  9988   00255A  C068  FFF6         	movff	??_powf,tblptrl
  9989   00255E                     	if	1	;There is more than 1 active tblptr byte
  9990   00255E  0E0E               	movlw	high __smallconst
  9991   002560  6EF7               	movwf	tblptrh,c
  9992   002562                     	endif
  9993   002562                     	if	0	;tblptru may be non-zero
  9994   002562                     	endif
  9995   002562                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9996   002562  0E00               	movlw	low (__smallconst shr (0+16))
  9997   002564  6EF8               	movwf	tblptru,c
  9998   002566                     	endif
  9999   002566  0009               	tblrd		*+
 10000   002568  CFF5 F006          	movff	tablat,___fladd@a
 10001   00256C  0009               	tblrd		*+
 10002   00256E  CFF5 F007          	movff	tablat,___fladd@a+1
 10003   002572  0009               	tblrd		*+
 10004   002574  CFF5 F008          	movff	tablat,___fladd@a+2
 10005   002578  000A               	tblrd		*-
 10006   00257A  CFF5 F009          	movff	tablat,___fladd@a+3
 10007   00257E  C160  F002         	movff	_powf$3065,___fladd@b
 10008   002582  C161  F003         	movff	_powf$3065+1,___fladd@b+1
 10009   002586  C162  F004         	movff	_powf$3065+2,___fladd@b+2
 10010   00258A  C163  F005         	movff	_powf$3065+3,___fladd@b+3
 10011   00258E  EC7C  F026         	call	___fladd	;wreg free
 10012   002592  C002  F108         	movff	?___fladd,_powf$3068
 10013   002596  C003  F109         	movff	?___fladd+1,_powf$3068+1
 10014   00259A  C004  F10A         	movff	?___fladd+2,_powf$3068+2
 10015   00259E  C005  F10B         	movff	?___fladd+3,_powf$3068+3
 10016   0025A2  C108  F002         	movff	_powf$3068,___fladd@b
 10017   0025A6  C109  F003         	movff	_powf$3068+1,___fladd@b+1
 10018   0025AA  C10A  F004         	movff	_powf$3068+2,___fladd@b+2
 10019   0025AE  C10B  F005         	movff	_powf$3068+3,___fladd@b+3
 10020   0025B2  C1B0  F006         	movff	powf@t,___fladd@a
 10021   0025B6  C1B1  F007         	movff	powf@t+1,___fladd@a+1
 10022   0025BA  C1B2  F008         	movff	powf@t+2,___fladd@a+2
 10023   0025BE  C1B3  F009         	movff	powf@t+3,___fladd@a+3
 10024   0025C2  EC7C  F026         	call	___fladd	;wreg free
 10025   0025C6  C002  F18C         	movff	?___fladd,powf@t1
 10026   0025CA  C003  F18D         	movff	?___fladd+1,powf@t1+1
 10027   0025CE  C004  F18E         	movff	?___fladd+2,powf@t1+2
 10028   0025D2  C005  F18F         	movff	?___fladd+3,powf@t1+3
 10029   0025D6  C18C  F198         	movff	powf@t1,powf@is
 10030   0025DA  C18D  F199         	movff	powf@t1+1,powf@is+1
 10031   0025DE  C18E  F19A         	movff	powf@t1+2,powf@is+2
 10032   0025E2  C18F  F19B         	movff	powf@t1+3,powf@is+3
 10033   0025E6  0E00               	movlw	0
 10034   0025E8  0101               	movlb	1	; () banked
 10035   0025EA  1598               	andwf	powf@is& (0+255),w,b
 10036   0025EC  6F8C               	movwf	powf@t1& (0+255),b
 10037   0025EE  0EF0               	movlw	240
 10038   0025F0  1599               	andwf	(powf@is+1)& (0+255),w,b
 10039   0025F2  6F8D               	movwf	(powf@t1+1)& (0+255),b
 10040   0025F4  0EFF               	movlw	255
 10041   0025F6  159A               	andwf	(powf@is+2)& (0+255),w,b
 10042   0025F8  6F8E               	movwf	(powf@t1+2)& (0+255),b
 10043   0025FA  0EFF               	movlw	255
 10044   0025FC  159B               	andwf	(powf@is+3)& (0+255),w,b
 10045   0025FE  6F8F               	movwf	(powf@t1+3)& (0+255),b
 10046   002600                     
 10047                           ; BSR set to: 1
 10048   002600  C1B0  F048         	movff	powf@t,___flsub@a
 10049   002604  C1B1  F049         	movff	powf@t+1,___flsub@a+1
 10050   002608  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
 10051   00260C  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
 10052   002610  C18C  F044         	movff	powf@t1,___flsub@b
 10053   002614  C18D  F045         	movff	powf@t1+1,___flsub@b+1
 10054   002618  C18E  F046         	movff	powf@t1+2,___flsub@b+2
 10055   00261C  C18F  F047         	movff	powf@t1+3,___flsub@b+3
 10056   002620  ECA3  F039         	call	___flsub	;wreg free
 10057   002624  C044  F19C         	movff	?___flsub,_powf$3061
 10058   002628  C045  F19D         	movff	?___flsub+1,_powf$3061+1
 10059   00262C  C046  F19E         	movff	?___flsub+2,_powf$3061+2
 10060   002630  C047  F19F         	movff	?___flsub+3,_powf$3061+3
 10061   002634  0101               	movlb	1	; () banked
 10062   002636  51A4               	movf	powf@k& (0+255),w,b
 10063   002638  0D04               	mullw	4
 10064   00263A  50F3               	movf	243,w,c
 10065   00263C  0F09               	addlw	low _dp_h
 10066   00263E  0100               	movlb	0	; () banked
 10067   002640  6F68               	movwf	??_powf& (0+255),b
 10068   002642  C068  FFF6         	movff	??_powf,tblptrl
 10069   002646                     	if	1	;There is more than 1 active tblptr byte
 10070   002646  0E0E               	movlw	high __smallconst
 10071   002648  6EF7               	movwf	tblptrh,c
 10072   00264A                     	endif
 10073   00264A                     	if	0	;tblptru may be non-zero
 10074   00264A                     	endif
 10075   00264A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10076   00264A  0E00               	movlw	low (__smallconst shr (0+16))
 10077   00264C  6EF8               	movwf	tblptru,c
 10078   00264E                     	endif
 10079   00264E  0009               	tblrd		*+
 10080   002650  CFF5 F048          	movff	tablat,___flsub@a
 10081   002654  0009               	tblrd		*+
 10082   002656  CFF5 F049          	movff	tablat,___flsub@a+1
 10083   00265A  0009               	tblrd		*+
 10084   00265C  CFF5 F04A          	movff	tablat,___flsub@a+2
 10085   002660  000A               	tblrd		*-
 10086   002662  CFF5 F04B          	movff	tablat,___flsub@a+3
 10087   002666  C19C  F044         	movff	_powf$3061,___flsub@b
 10088   00266A  C19D  F045         	movff	_powf$3061+1,___flsub@b+1
 10089   00266E  C19E  F046         	movff	_powf$3061+2,___flsub@b+2
 10090   002672  C19F  F047         	movff	_powf$3061+3,___flsub@b+3
 10091   002676  ECA3  F039         	call	___flsub	;wreg free
 10092   00267A  C044  F140         	movff	?___flsub,_powf$3067
 10093   00267E  C045  F141         	movff	?___flsub+1,_powf$3067+1
 10094   002682  C046  F142         	movff	?___flsub+2,_powf$3067+2
 10095   002686  C047  F143         	movff	?___flsub+3,_powf$3067+3
 10096   00268A  C120  F048         	movff	powf@z_h,___flsub@a
 10097   00268E  C121  F049         	movff	powf@z_h+1,___flsub@a+1
 10098   002692  C122  F04A         	movff	powf@z_h+2,___flsub@a+2
 10099   002696  C123  F04B         	movff	powf@z_h+3,___flsub@a+3
 10100   00269A  C140  F044         	movff	_powf$3067,___flsub@b
 10101   00269E  C141  F045         	movff	_powf$3067+1,___flsub@b+1
 10102   0026A2  C142  F046         	movff	_powf$3067+2,___flsub@b+2
 10103   0026A6  C143  F047         	movff	_powf$3067+3,___flsub@b+3
 10104   0026AA  ECA3  F039         	call	___flsub	;wreg free
 10105   0026AE  C044  F10C         	movff	?___flsub,_powf$3069
 10106   0026B2  C045  F10D         	movff	?___flsub+1,_powf$3069+1
 10107   0026B6  C046  F10E         	movff	?___flsub+2,_powf$3069+2
 10108   0026BA  C047  F10F         	movff	?___flsub+3,_powf$3069+3
 10109   0026BE  C124  F044         	movff	powf@z_l,___flsub@b
 10110   0026C2  C125  F045         	movff	powf@z_l+1,___flsub@b+1
 10111   0026C6  C126  F046         	movff	powf@z_l+2,___flsub@b+2
 10112   0026CA  C127  F047         	movff	powf@z_l+3,___flsub@b+3
 10113   0026CE  C10C  F048         	movff	_powf$3069,___flsub@a
 10114   0026D2  C10D  F049         	movff	_powf$3069+1,___flsub@a+1
 10115   0026D6  C10E  F04A         	movff	_powf$3069+2,___flsub@a+2
 10116   0026DA  C10F  F04B         	movff	_powf$3069+3,___flsub@a+3
 10117   0026DE  ECA3  F039         	call	___flsub	;wreg free
 10118   0026E2  C044  F11C         	movff	?___flsub,powf@t2
 10119   0026E6  C045  F11D         	movff	?___flsub+1,powf@t2+1
 10120   0026EA  C046  F11E         	movff	?___flsub+2,powf@t2+2
 10121   0026EE  C047  F11F         	movff	?___flsub+3,powf@t2+3
 10122   0026F2                     l7332:
 10123   0026F2  C064  F198         	movff	powf@y,powf@is
 10124   0026F6  C065  F199         	movff	powf@y+1,powf@is+1
 10125   0026FA  C066  F19A         	movff	powf@y+2,powf@is+2
 10126   0026FE  C067  F19B         	movff	powf@y+3,powf@is+3
 10127   002702  0E00               	movlw	0
 10128   002704  0101               	movlb	1	; () banked
 10129   002706  1598               	andwf	powf@is& (0+255),w,b
 10130   002708  6F2C               	movwf	powf@y1& (0+255),b
 10131   00270A  0EF0               	movlw	240
 10132   00270C  1599               	andwf	(powf@is+1)& (0+255),w,b
 10133   00270E  6F2D               	movwf	(powf@y1+1)& (0+255),b
 10134   002710  0EFF               	movlw	255
 10135   002712  159A               	andwf	(powf@is+2)& (0+255),w,b
 10136   002714  6F2E               	movwf	(powf@y1+2)& (0+255),b
 10137   002716  0EFF               	movlw	255
 10138   002718  159B               	andwf	(powf@is+3)& (0+255),w,b
 10139   00271A  6F2F               	movwf	(powf@y1+3)& (0+255),b
 10140   00271C                     
 10141                           ; BSR set to: 1
 10142   00271C  C18C  F016         	movff	powf@t1,___flmul@a
 10143   002720  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 10144   002724  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 10145   002728  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 10146   00272C  C12C  F048         	movff	powf@y1,___flsub@a
 10147   002730  C12D  F049         	movff	powf@y1+1,___flsub@a+1
 10148   002734  C12E  F04A         	movff	powf@y1+2,___flsub@a+2
 10149   002738  C12F  F04B         	movff	powf@y1+3,___flsub@a+3
 10150   00273C  C064  F044         	movff	powf@y,___flsub@b
 10151   002740  C065  F045         	movff	powf@y+1,___flsub@b+1
 10152   002744  C066  F046         	movff	powf@y+2,___flsub@b+2
 10153   002748  C067  F047         	movff	powf@y+3,___flsub@b+3
 10154   00274C  ECA3  F039         	call	___flsub	;wreg free
 10155   002750  C044  F012         	movff	?___flsub,___flmul@b
 10156   002754  C045  F013         	movff	?___flsub+1,___flmul@b+1
 10157   002758  C046  F014         	movff	?___flsub+2,___flmul@b+2
 10158   00275C  C047  F015         	movff	?___flsub+3,___flmul@b+3
 10159   002760  ECDC  F028         	call	___flmul	;wreg free
 10160   002764  C012  F110         	movff	?___flmul,_powf$3070
 10161   002768  C013  F111         	movff	?___flmul+1,_powf$3070+1
 10162   00276C  C014  F112         	movff	?___flmul+2,_powf$3070+2
 10163   002770  C015  F113         	movff	?___flmul+3,_powf$3070+3
 10164   002774  C110  F002         	movff	_powf$3070,___fladd@b
 10165   002778  C111  F003         	movff	_powf$3070+1,___fladd@b+1
 10166   00277C  C112  F004         	movff	_powf$3070+2,___fladd@b+2
 10167   002780  C113  F005         	movff	_powf$3070+3,___fladd@b+3
 10168   002784  C11C  F016         	movff	powf@t2,___flmul@a
 10169   002788  C11D  F017         	movff	powf@t2+1,___flmul@a+1
 10170   00278C  C11E  F018         	movff	powf@t2+2,___flmul@a+2
 10171   002790  C11F  F019         	movff	powf@t2+3,___flmul@a+3
 10172   002794  C064  F012         	movff	powf@y,___flmul@b
 10173   002798  C065  F013         	movff	powf@y+1,___flmul@b+1
 10174   00279C  C066  F014         	movff	powf@y+2,___flmul@b+2
 10175   0027A0  C067  F015         	movff	powf@y+3,___flmul@b+3
 10176   0027A4  ECDC  F028         	call	___flmul	;wreg free
 10177   0027A8  C012  F006         	movff	?___flmul,___fladd@a
 10178   0027AC  C013  F007         	movff	?___flmul+1,___fladd@a+1
 10179   0027B0  C014  F008         	movff	?___flmul+2,___fladd@a+2
 10180   0027B4  C015  F009         	movff	?___flmul+3,___fladd@a+3
 10181   0027B8  EC7C  F026         	call	___fladd	;wreg free
 10182   0027BC  C002  F16C         	movff	?___fladd,powf@p_l
 10183   0027C0  C003  F16D         	movff	?___fladd+1,powf@p_l+1
 10184   0027C4  C004  F16E         	movff	?___fladd+2,powf@p_l+2
 10185   0027C8  C005  F16F         	movff	?___fladd+3,powf@p_l+3
 10186   0027CC  C12C  F012         	movff	powf@y1,___flmul@b
 10187   0027D0  C12D  F013         	movff	powf@y1+1,___flmul@b+1
 10188   0027D4  C12E  F014         	movff	powf@y1+2,___flmul@b+2
 10189   0027D8  C12F  F015         	movff	powf@y1+3,___flmul@b+3
 10190   0027DC  C18C  F016         	movff	powf@t1,___flmul@a
 10191   0027E0  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 10192   0027E4  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 10193   0027E8  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 10194   0027EC  ECDC  F028         	call	___flmul	;wreg free
 10195   0027F0  C012  F1A0         	movff	?___flmul,powf@p_h
 10196   0027F4  C013  F1A1         	movff	?___flmul+1,powf@p_h+1
 10197   0027F8  C014  F1A2         	movff	?___flmul+2,powf@p_h+2
 10198   0027FC  C015  F1A3         	movff	?___flmul+3,powf@p_h+3
 10199   002800  C1A0  F002         	movff	powf@p_h,___fladd@b
 10200   002804  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
 10201   002808  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
 10202   00280C  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
 10203   002810  C16C  F006         	movff	powf@p_l,___fladd@a
 10204   002814  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
 10205   002818  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
 10206   00281C  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
 10207   002820  EC7C  F026         	call	___fladd	;wreg free
 10208   002824  C002  F1B4         	movff	?___fladd,powf@z
 10209   002828  C003  F1B5         	movff	?___fladd+1,powf@z+1
 10210   00282C  C004  F1B6         	movff	?___fladd+2,powf@z+2
 10211   002830  C005  F1B7         	movff	?___fladd+3,powf@z+3
 10212   002834  C1B4  F1A8         	movff	powf@z,powf@j
 10213   002838  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 10214   00283C  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 10215   002840  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 10216   002844  0101               	movlb	1	; () banked
 10217   002846  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 10218   002848  EF32  F014         	goto	u7611
 10219   00284C  05A8               	decf	powf@j& (0+255),w,b
 10220   00284E  0E00               	movlw	0
 10221   002850  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 10222   002852  0E00               	movlw	0
 10223   002854  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 10224   002856  0E43               	movlw	67
 10225   002858  59AB               	subwfb	(powf@j+3)& (0+255),w,b
 10226   00285A  A0D8               	btfss	status,0,c
 10227   00285C  EF32  F014         	goto	u7611
 10228   002860  EF34  F014         	goto	u7610
 10229   002864                     u7611:
 10230   002864  EF36  F014         	goto	l7354
 10231   002868                     u7610:
 10232   002868  EFDA  F00A         	goto	l7154
 10233   00286C                     l7354:
 10234                           
 10235                           ; BSR set to: 1
 10236   00286C  0E43               	movlw	67
 10237   00286E  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 10238   002870  11A8               	iorwf	powf@j& (0+255),w,b
 10239   002872  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 10240   002874  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 10241   002876  A4D8               	btfss	status,2,c
 10242   002878  EF40  F014         	goto	u7621
 10243   00287C  EF42  F014         	goto	u7620
 10244   002880                     u7621:
 10245   002880  EF81  F014         	goto	l7364
 10246   002884                     u7620:
 10247   002884                     
 10248                           ; BSR set to: 1
 10249   002884  C1A0  F048         	movff	powf@p_h,___flsub@a
 10250   002888  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 10251   00288C  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 10252   002890  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 10253   002894  C1B4  F044         	movff	powf@z,___flsub@b
 10254   002898  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10255   00289C  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10256   0028A0  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10257   0028A4  ECA3  F039         	call	___flsub	;wreg free
 10258   0028A8  C044  F04C         	movff	?___flsub,___flge@ff1
 10259   0028AC  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
 10260   0028B0  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
 10261   0028B4  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
 10262   0028B8  0E3C               	movlw	60
 10263   0028BA  6E06               	movwf	___fladd@a^0,c
 10264   0028BC  0EAA               	movlw	170
 10265   0028BE  6E07               	movwf	(___fladd@a+1)^0,c
 10266   0028C0  0E38               	movlw	56
 10267   0028C2  6E08               	movwf	(___fladd@a+2)^0,c
 10268   0028C4  0E33               	movlw	51
 10269   0028C6  6E09               	movwf	(___fladd@a+3)^0,c
 10270   0028C8  C16C  F002         	movff	powf@p_l,___fladd@b
 10271   0028CC  C16D  F003         	movff	powf@p_l+1,___fladd@b+1
 10272   0028D0  C16E  F004         	movff	powf@p_l+2,___fladd@b+2
 10273   0028D4  C16F  F005         	movff	powf@p_l+3,___fladd@b+3
 10274   0028D8  EC7C  F026         	call	___fladd	;wreg free
 10275   0028DC  C002  F050         	movff	?___fladd,___flge@ff2
 10276   0028E0  C003  F051         	movff	?___fladd+1,___flge@ff2+1
 10277   0028E4  C004  F052         	movff	?___fladd+2,___flge@ff2+2
 10278   0028E8  C005  F053         	movff	?___fladd+3,___flge@ff2+3
 10279   0028EC  EC47  F033         	call	___flge	;wreg free
 10280   0028F0  B0D8               	btfsc	status,0,c
 10281   0028F2  EF7D  F014         	goto	u7631
 10282   0028F6  EF7F  F014         	goto	u7630
 10283   0028FA                     u7631:
 10284   0028FA  EFF4  F014         	goto	l7380
 10285   0028FE                     u7630:
 10286   0028FE  EFDA  F00A         	goto	l7154
 10287   002902                     l7364:
 10288                           
 10289                           ; BSR set to: 1
 10290   002902  0EFF               	movlw	255
 10291   002904  15A8               	andwf	powf@j& (0+255),w,b
 10292   002906  0100               	movlb	0	; () banked
 10293   002908  6F68               	movwf	??_powf& (0+255),b
 10294   00290A  0EFF               	movlw	255
 10295   00290C  0101               	movlb	1	; () banked
 10296   00290E  15A9               	andwf	(powf@j+1)& (0+255),w,b
 10297   002910  0100               	movlb	0	; () banked
 10298   002912  6F69               	movwf	(??_powf+1)& (0+255),b
 10299   002914  0EFF               	movlw	255
 10300   002916  0101               	movlb	1	; () banked
 10301   002918  15AA               	andwf	(powf@j+2)& (0+255),w,b
 10302   00291A  0100               	movlb	0	; () banked
 10303   00291C  6F6A               	movwf	(??_powf+2)& (0+255),b
 10304   00291E  0E7F               	movlw	127
 10305   002920  0101               	movlb	1	; () banked
 10306   002922  15AB               	andwf	(powf@j+3)& (0+255),w,b
 10307   002924  0100               	movlb	0	; () banked
 10308   002926  6F6B               	movwf	(??_powf+3)& (0+255),b
 10309   002928  BF6B               	btfsc	(??_powf+3)& (0+255),7,b
 10310   00292A  EFA3  F014         	goto	u7641
 10311   00292E  0568               	decf	??_powf& (0+255),w,b
 10312   002930  0E00               	movlw	0
 10313   002932  5969               	subwfb	(??_powf+1)& (0+255),w,b
 10314   002934  0E16               	movlw	22
 10315   002936  596A               	subwfb	(??_powf+2)& (0+255),w,b
 10316   002938  0E43               	movlw	67
 10317   00293A  596B               	subwfb	(??_powf+3)& (0+255),w,b
 10318   00293C  A0D8               	btfss	status,0,c
 10319   00293E  EFA3  F014         	goto	u7641
 10320   002942  EFA5  F014         	goto	u7640
 10321   002946                     u7641:
 10322   002946  EFAF  F014         	goto	l7372
 10323   00294A                     u7640:
 10324   00294A                     
 10325                           ; BSR set to: 0
 10326   00294A  0E00               	movlw	0
 10327   00294C  6F60               	movwf	?_powf& (0+255),b
 10328   00294E  0E00               	movlw	0
 10329   002950  6F61               	movwf	(?_powf+1)& (0+255),b
 10330   002952  0E00               	movlw	0
 10331   002954  6F62               	movwf	(?_powf+2)& (0+255),b
 10332   002956  0E00               	movlw	0
 10333   002958  6F63               	movwf	(?_powf+3)& (0+255),b
 10334   00295A  EF80  F019         	goto	l1371
 10335   00295E                     l7372:
 10336                           
 10337                           ; BSR set to: 0
 10338   00295E  0E16               	movlw	22
 10339   002960  0101               	movlb	1	; () banked
 10340   002962  19AA               	xorwf	(powf@j+2)& (0+255),w,b
 10341   002964  E109               	bnz	u7651
 10342   002966  0EC3               	movlw	195
 10343   002968  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 10344   00296A  11A8               	iorwf	powf@j& (0+255),w,b
 10345   00296C  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 10346   00296E  A4D8               	btfss	status,2,c
 10347   002970  EFBC  F014         	goto	u7651
 10348   002974  EFBE  F014         	goto	u7650
 10349   002978                     u7651:
 10350   002978  EFF4  F014         	goto	l7380
 10351   00297C                     u7650:
 10352   00297C                     
 10353                           ; BSR set to: 1
 10354   00297C  C1A0  F048         	movff	powf@p_h,___flsub@a
 10355   002980  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 10356   002984  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 10357   002988  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 10358   00298C  C1B4  F044         	movff	powf@z,___flsub@b
 10359   002990  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10360   002994  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10361   002998  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10362   00299C  ECA3  F039         	call	___flsub	;wreg free
 10363   0029A0  C044  F04C         	movff	?___flsub,___flge@ff1
 10364   0029A4  C045  F04D         	movff	?___flsub+1,___flge@ff1+1
 10365   0029A8  C046  F04E         	movff	?___flsub+2,___flge@ff1+2
 10366   0029AC  C047  F04F         	movff	?___flsub+3,___flge@ff1+3
 10367   0029B0  C16C  F050         	movff	powf@p_l,___flge@ff2
 10368   0029B4  C16D  F051         	movff	powf@p_l+1,___flge@ff2+1
 10369   0029B8  C16E  F052         	movff	powf@p_l+2,___flge@ff2+2
 10370   0029BC  C16F  F053         	movff	powf@p_l+3,___flge@ff2+3
 10371   0029C0  EC47  F033         	call	___flge	;wreg free
 10372   0029C4  A0D8               	btfss	status,0,c
 10373   0029C6  EFE7  F014         	goto	u7661
 10374   0029CA  EFE9  F014         	goto	u7660
 10375   0029CE                     u7661:
 10376   0029CE  EFF4  F014         	goto	l7380
 10377   0029D2                     u7660:
 10378   0029D2  0E00               	movlw	0
 10379   0029D4  0100               	movlb	0	; () banked
 10380   0029D6  6F60               	movwf	?_powf& (0+255),b
 10381   0029D8  0E00               	movlw	0
 10382   0029DA  6F61               	movwf	(?_powf+1)& (0+255),b
 10383   0029DC  0E00               	movlw	0
 10384   0029DE  6F62               	movwf	(?_powf+2)& (0+255),b
 10385   0029E0  0E00               	movlw	0
 10386   0029E2  6F63               	movwf	(?_powf+3)& (0+255),b
 10387   0029E4  EF80  F019         	goto	l1371
 10388   0029E8                     l7380:
 10389   0029E8  0EFF               	movlw	255
 10390   0029EA  0101               	movlb	1	; () banked
 10391   0029EC  15A8               	andwf	powf@j& (0+255),w,b
 10392   0029EE  6F28               	movwf	powf@i& (0+255),b
 10393   0029F0  0EFF               	movlw	255
 10394   0029F2  15A9               	andwf	(powf@j+1)& (0+255),w,b
 10395   0029F4  6F29               	movwf	(powf@i+1)& (0+255),b
 10396   0029F6  0EFF               	movlw	255
 10397   0029F8  15AA               	andwf	(powf@j+2)& (0+255),w,b
 10398   0029FA  6F2A               	movwf	(powf@i+2)& (0+255),b
 10399   0029FC  0E7F               	movlw	127
 10400   0029FE  15AB               	andwf	(powf@j+3)& (0+255),w,b
 10401   002A00  6F2B               	movwf	(powf@i+3)& (0+255),b
 10402   002A02  0E17               	movlw	23
 10403   002A04  0100               	movlb	0	; () banked
 10404   002A06  6F68               	movwf	??_powf& (0+255),b
 10405   002A08  C128  F069         	movff	powf@i,??_powf+1
 10406   002A0C  C129  F06A         	movff	powf@i+1,??_powf+2
 10407   002A10  C12A  F06B         	movff	powf@i+2,??_powf+3
 10408   002A14  C12B  F06C         	movff	powf@i+3,??_powf+4
 10409   002A18                     u7675:
 10410   002A18  6768               	tstfsz	??_powf& (0+255),b
 10411   002A1A  EF11  F015         	goto	u7676
 10412   002A1E  EF19  F015         	goto	u7677
 10413   002A22                     u7676:
 10414   002A22  356C               	rlcf	(??_powf+4)& (0+255),w,b
 10415   002A24  336C               	rrcf	(??_powf+4)& (0+255),f,b
 10416   002A26  336B               	rrcf	(??_powf+3)& (0+255),f,b
 10417   002A28  336A               	rrcf	(??_powf+2)& (0+255),f,b
 10418   002A2A  3369               	rrcf	(??_powf+1)& (0+255),f,b
 10419   002A2C  2F68               	decfsz	??_powf& (0+255),f,b
 10420   002A2E  EF0C  F015         	goto	u7675
 10421   002A32                     u7677:
 10422   002A32  0E81               	movlw	129
 10423   002A34  0100               	movlb	0	; () banked
 10424   002A36  2569               	addwf	(??_powf+1)& (0+255),w,b
 10425   002A38  0101               	movlb	1	; () banked
 10426   002A3A  6FA4               	movwf	powf@k& (0+255),b
 10427   002A3C  0EFF               	movlw	255
 10428   002A3E  0100               	movlb	0	; () banked
 10429   002A40  216A               	addwfc	(??_powf+2)& (0+255),w,b
 10430   002A42  0101               	movlb	1	; () banked
 10431   002A44  6FA5               	movwf	(powf@k+1)& (0+255),b
 10432   002A46  0EFF               	movlw	255
 10433   002A48  0100               	movlb	0	; () banked
 10434   002A4A  216B               	addwfc	(??_powf+3)& (0+255),w,b
 10435   002A4C  0101               	movlb	1	; () banked
 10436   002A4E  6FA6               	movwf	(powf@k+2)& (0+255),b
 10437   002A50  0EFF               	movlw	255
 10438   002A52  0100               	movlb	0	; () banked
 10439   002A54  216C               	addwfc	(??_powf+4)& (0+255),w,b
 10440   002A56  0101               	movlb	1	; () banked
 10441   002A58  6FA7               	movwf	(powf@k+3)& (0+255),b
 10442   002A5A                     
 10443                           ; BSR set to: 1
 10444   002A5A  0E00               	movlw	0
 10445   002A5C  6F88               	movwf	powf@n& (0+255),b
 10446   002A5E  0E00               	movlw	0
 10447   002A60  6F89               	movwf	(powf@n+1)& (0+255),b
 10448   002A62  0E00               	movlw	0
 10449   002A64  6F8A               	movwf	(powf@n+2)& (0+255),b
 10450   002A66  0E00               	movlw	0
 10451   002A68  6F8B               	movwf	(powf@n+3)& (0+255),b
 10452   002A6A                     
 10453                           ; BSR set to: 1
 10454   002A6A  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
 10455   002A6C  EF44  F015         	goto	u7681
 10456   002A70  0528               	decf	powf@i& (0+255),w,b
 10457   002A72  0E00               	movlw	0
 10458   002A74  5929               	subwfb	(powf@i+1)& (0+255),w,b
 10459   002A76  0E00               	movlw	0
 10460   002A78  592A               	subwfb	(powf@i+2)& (0+255),w,b
 10461   002A7A  0E3F               	movlw	63
 10462   002A7C  592B               	subwfb	(powf@i+3)& (0+255),w,b
 10463   002A7E  A0D8               	btfss	status,0,c
 10464   002A80  EF44  F015         	goto	u7681
 10465   002A84  EF46  F015         	goto	u7680
 10466   002A88                     u7681:
 10467   002A88  EF42  F016         	goto	l7392
 10468   002A8C                     u7680:
 10469   002A8C                     
 10470                           ; BSR set to: 1
 10471   002A8C  C1A4  F068         	movff	powf@k,??_powf
 10472   002A90  0E01               	movlw	1
 10473   002A92  0100               	movlb	0	; () banked
 10474   002A94  2768               	addwf	??_powf& (0+255),f,b
 10475   002A96  0E00               	movlw	0
 10476   002A98  6F69               	movwf	(??_powf+1)& (0+255),b
 10477   002A9A  0E00               	movlw	0
 10478   002A9C  6F6A               	movwf	(??_powf+2)& (0+255),b
 10479   002A9E  0E80               	movlw	128
 10480   002AA0  6F6B               	movwf	(??_powf+3)& (0+255),b
 10481   002AA2  0E00               	movlw	0
 10482   002AA4  6F6C               	movwf	(??_powf+4)& (0+255),b
 10483   002AA6                     u7695:
 10484   002AA6  6768               	tstfsz	??_powf& (0+255),b
 10485   002AA8  EF58  F015         	goto	u7696
 10486   002AAC  EF60  F015         	goto	u7697
 10487   002AB0                     u7696:
 10488   002AB0  356C               	rlcf	(??_powf+4)& (0+255),w,b
 10489   002AB2  336C               	rrcf	(??_powf+4)& (0+255),f,b
 10490   002AB4  336B               	rrcf	(??_powf+3)& (0+255),f,b
 10491   002AB6  336A               	rrcf	(??_powf+2)& (0+255),f,b
 10492   002AB8  3369               	rrcf	(??_powf+1)& (0+255),f,b
 10493   002ABA  2F68               	decfsz	??_powf& (0+255),f,b
 10494   002ABC  EF53  F015         	goto	u7695
 10495   002AC0                     u7697:
 10496   002AC0  0101               	movlb	1	; () banked
 10497   002AC2  51A8               	movf	powf@j& (0+255),w,b
 10498   002AC4  0100               	movlb	0	; () banked
 10499   002AC6  2569               	addwf	(??_powf+1)& (0+255),w,b
 10500   002AC8  0101               	movlb	1	; () banked
 10501   002ACA  6F88               	movwf	powf@n& (0+255),b
 10502   002ACC  51A9               	movf	(powf@j+1)& (0+255),w,b
 10503   002ACE  0100               	movlb	0	; () banked
 10504   002AD0  216A               	addwfc	(??_powf+2)& (0+255),w,b
 10505   002AD2  0101               	movlb	1	; () banked
 10506   002AD4  6F89               	movwf	(powf@n+1)& (0+255),b
 10507   002AD6  51AA               	movf	(powf@j+2)& (0+255),w,b
 10508   002AD8  0100               	movlb	0	; () banked
 10509   002ADA  216B               	addwfc	(??_powf+3)& (0+255),w,b
 10510   002ADC  0101               	movlb	1	; () banked
 10511   002ADE  6F8A               	movwf	(powf@n+2)& (0+255),b
 10512   002AE0  51AB               	movf	(powf@j+3)& (0+255),w,b
 10513   002AE2  0100               	movlb	0	; () banked
 10514   002AE4  216C               	addwfc	(??_powf+4)& (0+255),w,b
 10515   002AE6  0101               	movlb	1	; () banked
 10516   002AE8  6F8B               	movwf	(powf@n+3)& (0+255),b
 10517   002AEA  0E81               	movlw	129
 10518   002AEC  0100               	movlb	0	; () banked
 10519   002AEE  6F68               	movwf	??_powf& (0+255),b
 10520   002AF0  0EFF               	movlw	255
 10521   002AF2  6F69               	movwf	(??_powf+1)& (0+255),b
 10522   002AF4  0EFF               	movlw	255
 10523   002AF6  6F6A               	movwf	(??_powf+2)& (0+255),b
 10524   002AF8  0EFF               	movlw	255
 10525   002AFA  6F6B               	movwf	(??_powf+3)& (0+255),b
 10526   002AFC  0E17               	movlw	23
 10527   002AFE  6F6C               	movwf	(??_powf+4)& (0+255),b
 10528   002B00  C188  F06D         	movff	powf@n,??_powf+5
 10529   002B04  C189  F06E         	movff	powf@n+1,??_powf+6
 10530   002B08  C18A  F06F         	movff	powf@n+2,??_powf+7
 10531   002B0C  C18B  F070         	movff	powf@n+3,??_powf+8
 10532   002B10                     u7705:
 10533   002B10  676C               	tstfsz	(??_powf+4)& (0+255),b
 10534   002B12  EF8D  F015         	goto	u7706
 10535   002B16  EF95  F015         	goto	u7707
 10536   002B1A                     u7706:
 10537   002B1A  3570               	rlcf	(??_powf+8)& (0+255),w,b
 10538   002B1C  3370               	rrcf	(??_powf+8)& (0+255),f,b
 10539   002B1E  336F               	rrcf	(??_powf+7)& (0+255),f,b
 10540   002B20  336E               	rrcf	(??_powf+6)& (0+255),f,b
 10541   002B22  336D               	rrcf	(??_powf+5)& (0+255),f,b
 10542   002B24  2F6C               	decfsz	(??_powf+4)& (0+255),f,b
 10543   002B26  EF88  F015         	goto	u7705
 10544   002B2A                     u7707:
 10545   002B2A  0100               	movlb	0	; () banked
 10546   002B2C  516D               	movf	(??_powf+5)& (0+255),w,b
 10547   002B2E  2568               	addwf	??_powf& (0+255),w,b
 10548   002B30  0101               	movlb	1	; () banked
 10549   002B32  6FA4               	movwf	powf@k& (0+255),b
 10550   002B34  0E00               	movlw	0
 10551   002B36  0100               	movlb	0	; () banked
 10552   002B38  2169               	addwfc	(??_powf+1)& (0+255),w,b
 10553   002B3A  0101               	movlb	1	; () banked
 10554   002B3C  6FA5               	movwf	(powf@k+1)& (0+255),b
 10555   002B3E  0E00               	movlw	0
 10556   002B40  0100               	movlb	0	; () banked
 10557   002B42  216A               	addwfc	(??_powf+2)& (0+255),w,b
 10558   002B44  0101               	movlb	1	; () banked
 10559   002B46  6FA6               	movwf	(powf@k+2)& (0+255),b
 10560   002B48  0E00               	movlw	0
 10561   002B4A  0100               	movlb	0	; () banked
 10562   002B4C  216B               	addwfc	(??_powf+3)& (0+255),w,b
 10563   002B4E  0101               	movlb	1	; () banked
 10564   002B50  6FA7               	movwf	(powf@k+3)& (0+255),b
 10565   002B52  C1A4  F068         	movff	powf@k,??_powf
 10566   002B56  0EFF               	movlw	255
 10567   002B58  0100               	movlb	0	; () banked
 10568   002B5A  6F69               	movwf	(??_powf+1)& (0+255),b
 10569   002B5C  0EFF               	movlw	255
 10570   002B5E  6F6A               	movwf	(??_powf+2)& (0+255),b
 10571   002B60  0E7F               	movlw	127
 10572   002B62  6F6B               	movwf	(??_powf+3)& (0+255),b
 10573   002B64  0E00               	movlw	0
 10574   002B66  6F6C               	movwf	(??_powf+4)& (0+255),b
 10575   002B68                     u7715:
 10576   002B68  6768               	tstfsz	??_powf& (0+255),b
 10577   002B6A  EFB9  F015         	goto	u7716
 10578   002B6E  EFC1  F015         	goto	u7717
 10579   002B72                     u7716:
 10580   002B72  356C               	rlcf	(??_powf+4)& (0+255),w,b
 10581   002B74  336C               	rrcf	(??_powf+4)& (0+255),f,b
 10582   002B76  336B               	rrcf	(??_powf+3)& (0+255),f,b
 10583   002B78  336A               	rrcf	(??_powf+2)& (0+255),f,b
 10584   002B7A  3369               	rrcf	(??_powf+1)& (0+255),f,b
 10585   002B7C  2F68               	decfsz	??_powf& (0+255),f,b
 10586   002B7E  EFB4  F015         	goto	u7715
 10587   002B82                     u7717:
 10588   002B82  0100               	movlb	0	; () banked
 10589   002B84  1D69               	comf	(??_powf+1)& (0+255),w,b
 10590   002B86  6F6D               	movwf	(??_powf+5)& (0+255),b
 10591   002B88  1D6A               	comf	(??_powf+2)& (0+255),w,b
 10592   002B8A  6F6E               	movwf	(??_powf+6)& (0+255),b
 10593   002B8C  1D6B               	comf	(??_powf+3)& (0+255),w,b
 10594   002B8E  6F6F               	movwf	(??_powf+7)& (0+255),b
 10595   002B90  1D6C               	comf	(??_powf+4)& (0+255),w,b
 10596   002B92  6F70               	movwf	(??_powf+8)& (0+255),b
 10597   002B94  0101               	movlb	1	; () banked
 10598   002B96  5188               	movf	powf@n& (0+255),w,b
 10599   002B98  0100               	movlb	0	; () banked
 10600   002B9A  156D               	andwf	(??_powf+5)& (0+255),w,b
 10601   002B9C  0101               	movlb	1	; () banked
 10602   002B9E  6FB0               	movwf	powf@t& (0+255),b
 10603   002BA0  5189               	movf	(powf@n+1)& (0+255),w,b
 10604   002BA2  0100               	movlb	0	; () banked
 10605   002BA4  156E               	andwf	(??_powf+6)& (0+255),w,b
 10606   002BA6  0101               	movlb	1	; () banked
 10607   002BA8  6FB1               	movwf	(powf@t+1)& (0+255),b
 10608   002BAA  518A               	movf	(powf@n+2)& (0+255),w,b
 10609   002BAC  0100               	movlb	0	; () banked
 10610   002BAE  156F               	andwf	(??_powf+7)& (0+255),w,b
 10611   002BB0  0101               	movlb	1	; () banked
 10612   002BB2  6FB2               	movwf	(powf@t+2)& (0+255),b
 10613   002BB4  518B               	movf	(powf@n+3)& (0+255),w,b
 10614   002BB6  0100               	movlb	0	; () banked
 10615   002BB8  1570               	andwf	(??_powf+8)& (0+255),w,b
 10616   002BBA  0101               	movlb	1	; () banked
 10617   002BBC  6FB3               	movwf	(powf@t+3)& (0+255),b
 10618   002BBE  51A4               	movf	powf@k& (0+255),w,b
 10619   002BC0  0817               	sublw	23
 10620   002BC2  0100               	movlb	0	; () banked
 10621   002BC4  6F68               	movwf	??_powf& (0+255),b
 10622   002BC6  0EFF               	movlw	255
 10623   002BC8  0101               	movlb	1	; () banked
 10624   002BCA  1588               	andwf	powf@n& (0+255),w,b
 10625   002BCC  0100               	movlb	0	; () banked
 10626   002BCE  6F69               	movwf	(??_powf+1)& (0+255),b
 10627   002BD0  0EFF               	movlw	255
 10628   002BD2  0101               	movlb	1	; () banked
 10629   002BD4  1589               	andwf	(powf@n+1)& (0+255),w,b
 10630   002BD6  0100               	movlb	0	; () banked
 10631   002BD8  6F6A               	movwf	(??_powf+2)& (0+255),b
 10632   002BDA  0E7F               	movlw	127
 10633   002BDC  0101               	movlb	1	; () banked
 10634   002BDE  158A               	andwf	(powf@n+2)& (0+255),w,b
 10635   002BE0  0100               	movlb	0	; () banked
 10636   002BE2  6F6B               	movwf	(??_powf+3)& (0+255),b
 10637   002BE4  0E00               	movlw	0
 10638   002BE6  0101               	movlb	1	; () banked
 10639   002BE8  158B               	andwf	(powf@n+3)& (0+255),w,b
 10640   002BEA  0100               	movlb	0	; () banked
 10641   002BEC  6F6C               	movwf	(??_powf+4)& (0+255),b
 10642   002BEE  0E00               	movlw	0
 10643   002BF0  1169               	iorwf	(??_powf+1)& (0+255),w,b
 10644   002BF2  6F6D               	movwf	(??_powf+5)& (0+255),b
 10645   002BF4  0E00               	movlw	0
 10646   002BF6  116A               	iorwf	(??_powf+2)& (0+255),w,b
 10647   002BF8  6F6E               	movwf	(??_powf+6)& (0+255),b
 10648   002BFA  0E80               	movlw	128
 10649   002BFC  116B               	iorwf	(??_powf+3)& (0+255),w,b
 10650   002BFE  6F6F               	movwf	(??_powf+7)& (0+255),b
 10651   002C00  0E00               	movlw	0
 10652   002C02  116C               	iorwf	(??_powf+4)& (0+255),w,b
 10653   002C04  6F70               	movwf	(??_powf+8)& (0+255),b
 10654   002C06                     u7725:
 10655   002C06  6768               	tstfsz	??_powf& (0+255),b
 10656   002C08  EF08  F016         	goto	u7726
 10657   002C0C  EF10  F016         	goto	u7727
 10658   002C10                     u7726:
 10659   002C10  3570               	rlcf	(??_powf+8)& (0+255),w,b
 10660   002C12  3370               	rrcf	(??_powf+8)& (0+255),f,b
 10661   002C14  336F               	rrcf	(??_powf+7)& (0+255),f,b
 10662   002C16  336E               	rrcf	(??_powf+6)& (0+255),f,b
 10663   002C18  336D               	rrcf	(??_powf+5)& (0+255),f,b
 10664   002C1A  2F68               	decfsz	??_powf& (0+255),f,b
 10665   002C1C  EF03  F016         	goto	u7725
 10666   002C20                     u7727:
 10667   002C20  C06D  F188         	movff	??_powf+5,powf@n
 10668   002C24  C06E  F189         	movff	??_powf+6,powf@n+1
 10669   002C28  C06F  F18A         	movff	??_powf+7,powf@n+2
 10670   002C2C  C070  F18B         	movff	??_powf+8,powf@n+3
 10671   002C30  0101               	movlb	1	; () banked
 10672   002C32  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 10673   002C34  EF20  F016         	goto	u7730
 10674   002C38  EF1E  F016         	goto	u7731
 10675   002C3C                     u7731:
 10676   002C3C  EF28  F016         	goto	l7390
 10677   002C40                     u7730:
 10678   002C40                     
 10679                           ; BSR set to: 1
 10680   002C40  1F8B               	comf	(powf@n+3)& (0+255),f,b
 10681   002C42  1F8A               	comf	(powf@n+2)& (0+255),f,b
 10682   002C44  1F89               	comf	(powf@n+1)& (0+255),f,b
 10683   002C46  6D88               	negf	powf@n& (0+255),b
 10684   002C48  0E00               	movlw	0
 10685   002C4A  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10686   002C4C  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10687   002C4E  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10688   002C50                     l7390:
 10689                           
 10690                           ; BSR set to: 1
 10691   002C50  C1A0  F044         	movff	powf@p_h,___flsub@b
 10692   002C54  C1A1  F045         	movff	powf@p_h+1,___flsub@b+1
 10693   002C58  C1A2  F046         	movff	powf@p_h+2,___flsub@b+2
 10694   002C5C  C1A3  F047         	movff	powf@p_h+3,___flsub@b+3
 10695   002C60  C1B0  F048         	movff	powf@t,___flsub@a
 10696   002C64  C1B1  F049         	movff	powf@t+1,___flsub@a+1
 10697   002C68  C1B2  F04A         	movff	powf@t+2,___flsub@a+2
 10698   002C6C  C1B3  F04B         	movff	powf@t+3,___flsub@a+3
 10699   002C70  ECA3  F039         	call	___flsub	;wreg free
 10700   002C74  C044  F1A0         	movff	?___flsub,powf@p_h
 10701   002C78  C045  F1A1         	movff	?___flsub+1,powf@p_h+1
 10702   002C7C  C046  F1A2         	movff	?___flsub+2,powf@p_h+2
 10703   002C80  C047  F1A3         	movff	?___flsub+3,powf@p_h+3
 10704   002C84                     l7392:
 10705   002C84  C1A0  F002         	movff	powf@p_h,___fladd@b
 10706   002C88  C1A1  F003         	movff	powf@p_h+1,___fladd@b+1
 10707   002C8C  C1A2  F004         	movff	powf@p_h+2,___fladd@b+2
 10708   002C90  C1A3  F005         	movff	powf@p_h+3,___fladd@b+3
 10709   002C94  C16C  F006         	movff	powf@p_l,___fladd@a
 10710   002C98  C16D  F007         	movff	powf@p_l+1,___fladd@a+1
 10711   002C9C  C16E  F008         	movff	powf@p_l+2,___fladd@a+2
 10712   002CA0  C16F  F009         	movff	powf@p_l+3,___fladd@a+3
 10713   002CA4  EC7C  F026         	call	___fladd	;wreg free
 10714   002CA8  C002  F1B0         	movff	?___fladd,powf@t
 10715   002CAC  C003  F1B1         	movff	?___fladd+1,powf@t+1
 10716   002CB0  C004  F1B2         	movff	?___fladd+2,powf@t+2
 10717   002CB4  C005  F1B3         	movff	?___fladd+3,powf@t+3
 10718   002CB8  C1B0  F198         	movff	powf@t,powf@is
 10719   002CBC  C1B1  F199         	movff	powf@t+1,powf@is+1
 10720   002CC0  C1B2  F19A         	movff	powf@t+2,powf@is+2
 10721   002CC4  C1B3  F19B         	movff	powf@t+3,powf@is+3
 10722   002CC8  0E00               	movlw	0
 10723   002CCA  0101               	movlb	1	; () banked
 10724   002CCC  1598               	andwf	powf@is& (0+255),w,b
 10725   002CCE  6FB0               	movwf	powf@t& (0+255),b
 10726   002CD0  0E80               	movlw	128
 10727   002CD2  1599               	andwf	(powf@is+1)& (0+255),w,b
 10728   002CD4  6FB1               	movwf	(powf@t+1)& (0+255),b
 10729   002CD6  0EFF               	movlw	255
 10730   002CD8  159A               	andwf	(powf@is+2)& (0+255),w,b
 10731   002CDA  6FB2               	movwf	(powf@t+2)& (0+255),b
 10732   002CDC  0EFF               	movlw	255
 10733   002CDE  159B               	andwf	(powf@is+3)& (0+255),w,b
 10734   002CE0  6FB3               	movwf	(powf@t+3)& (0+255),b
 10735   002CE2                     
 10736                           ; BSR set to: 1
 10737   002CE2  C1B0  F012         	movff	powf@t,___flmul@b
 10738   002CE6  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10739   002CEA  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10740   002CEE  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10741   002CF2  0E00               	movlw	0
 10742   002CF4  6E16               	movwf	___flmul@a^0,c
 10743   002CF6  0E72               	movlw	114
 10744   002CF8  6E17               	movwf	(___flmul@a+1)^0,c
 10745   002CFA  0E31               	movlw	49
 10746   002CFC  6E18               	movwf	(___flmul@a+2)^0,c
 10747   002CFE  0E3F               	movlw	63
 10748   002D00  6E19               	movwf	(___flmul@a+3)^0,c
 10749   002D02  ECDC  F028         	call	___flmul	;wreg free
 10750   002D06  C012  F17C         	movff	?___flmul,powf@u
 10751   002D0A  C013  F17D         	movff	?___flmul+1,powf@u+1
 10752   002D0E  C014  F17E         	movff	?___flmul+2,powf@u+2
 10753   002D12  C015  F17F         	movff	?___flmul+3,powf@u+3
 10754   002D16  C1A0  F048         	movff	powf@p_h,___flsub@a
 10755   002D1A  C1A1  F049         	movff	powf@p_h+1,___flsub@a+1
 10756   002D1E  C1A2  F04A         	movff	powf@p_h+2,___flsub@a+2
 10757   002D22  C1A3  F04B         	movff	powf@p_h+3,___flsub@a+3
 10758   002D26  C1B0  F044         	movff	powf@t,___flsub@b
 10759   002D2A  C1B1  F045         	movff	powf@t+1,___flsub@b+1
 10760   002D2E  C1B2  F046         	movff	powf@t+2,___flsub@b+2
 10761   002D32  C1B3  F047         	movff	powf@t+3,___flsub@b+3
 10762   002D36  ECA3  F039         	call	___flsub	;wreg free
 10763   002D3A  C044  F19C         	movff	?___flsub,_powf$3061
 10764   002D3E  C045  F19D         	movff	?___flsub+1,_powf$3061+1
 10765   002D42  C046  F19E         	movff	?___flsub+2,_powf$3061+2
 10766   002D46  C047  F19F         	movff	?___flsub+3,_powf$3061+3
 10767   002D4A  0E18               	movlw	24
 10768   002D4C  6E16               	movwf	___flmul@a^0,c
 10769   002D4E  0E72               	movlw	114
 10770   002D50  6E17               	movwf	(___flmul@a+1)^0,c
 10771   002D52  0E31               	movlw	49
 10772   002D54  6E18               	movwf	(___flmul@a+2)^0,c
 10773   002D56  0E3F               	movlw	63
 10774   002D58  6E19               	movwf	(___flmul@a+3)^0,c
 10775   002D5A  C19C  F048         	movff	_powf$3061,___flsub@a
 10776   002D5E  C19D  F049         	movff	_powf$3061+1,___flsub@a+1
 10777   002D62  C19E  F04A         	movff	_powf$3061+2,___flsub@a+2
 10778   002D66  C19F  F04B         	movff	_powf$3061+3,___flsub@a+3
 10779   002D6A  C16C  F044         	movff	powf@p_l,___flsub@b
 10780   002D6E  C16D  F045         	movff	powf@p_l+1,___flsub@b+1
 10781   002D72  C16E  F046         	movff	powf@p_l+2,___flsub@b+2
 10782   002D76  C16F  F047         	movff	powf@p_l+3,___flsub@b+3
 10783   002D7A  ECA3  F039         	call	___flsub	;wreg free
 10784   002D7E  C044  F012         	movff	?___flsub,___flmul@b
 10785   002D82  C045  F013         	movff	?___flsub+1,___flmul@b+1
 10786   002D86  C046  F014         	movff	?___flsub+2,___flmul@b+2
 10787   002D8A  C047  F015         	movff	?___flsub+3,___flmul@b+3
 10788   002D8E  ECDC  F028         	call	___flmul	;wreg free
 10789   002D92  C012  F114         	movff	?___flmul,_powf$3071
 10790   002D96  C013  F115         	movff	?___flmul+1,_powf$3071+1
 10791   002D9A  C014  F116         	movff	?___flmul+2,_powf$3071+2
 10792   002D9E  C015  F117         	movff	?___flmul+3,_powf$3071+3
 10793   002DA2  C114  F002         	movff	_powf$3071,___fladd@b
 10794   002DA6  C115  F003         	movff	_powf$3071+1,___fladd@b+1
 10795   002DAA  C116  F004         	movff	_powf$3071+2,___fladd@b+2
 10796   002DAE  C117  F005         	movff	_powf$3071+3,___fladd@b+3
 10797   002DB2  0E8C               	movlw	140
 10798   002DB4  6E16               	movwf	___flmul@a^0,c
 10799   002DB6  0EBE               	movlw	190
 10800   002DB8  6E17               	movwf	(___flmul@a+1)^0,c
 10801   002DBA  0EBF               	movlw	191
 10802   002DBC  6E18               	movwf	(___flmul@a+2)^0,c
 10803   002DBE  0E35               	movlw	53
 10804   002DC0  6E19               	movwf	(___flmul@a+3)^0,c
 10805   002DC2  C1B0  F012         	movff	powf@t,___flmul@b
 10806   002DC6  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10807   002DCA  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10808   002DCE  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10809   002DD2  ECDC  F028         	call	___flmul	;wreg free
 10810   002DD6  C012  F006         	movff	?___flmul,___fladd@a
 10811   002DDA  C013  F007         	movff	?___flmul+1,___fladd@a+1
 10812   002DDE  C014  F008         	movff	?___flmul+2,___fladd@a+2
 10813   002DE2  C015  F009         	movff	?___flmul+3,___fladd@a+3
 10814   002DE6  EC7C  F026         	call	___fladd	;wreg free
 10815   002DEA  C002  F180         	movff	?___fladd,powf@v
 10816   002DEE  C003  F181         	movff	?___fladd+1,powf@v+1
 10817   002DF2  C004  F182         	movff	?___fladd+2,powf@v+2
 10818   002DF6  C005  F183         	movff	?___fladd+3,powf@v+3
 10819   002DFA  C17C  F002         	movff	powf@u,___fladd@b
 10820   002DFE  C17D  F003         	movff	powf@u+1,___fladd@b+1
 10821   002E02  C17E  F004         	movff	powf@u+2,___fladd@b+2
 10822   002E06  C17F  F005         	movff	powf@u+3,___fladd@b+3
 10823   002E0A  C180  F006         	movff	powf@v,___fladd@a
 10824   002E0E  C181  F007         	movff	powf@v+1,___fladd@a+1
 10825   002E12  C182  F008         	movff	powf@v+2,___fladd@a+2
 10826   002E16  C183  F009         	movff	powf@v+3,___fladd@a+3
 10827   002E1A  EC7C  F026         	call	___fladd	;wreg free
 10828   002E1E  C002  F1B4         	movff	?___fladd,powf@z
 10829   002E22  C003  F1B5         	movff	?___fladd+1,powf@z+1
 10830   002E26  C004  F1B6         	movff	?___fladd+2,powf@z+2
 10831   002E2A  C005  F1B7         	movff	?___fladd+3,powf@z+3
 10832   002E2E  C17C  F048         	movff	powf@u,___flsub@a
 10833   002E32  C17D  F049         	movff	powf@u+1,___flsub@a+1
 10834   002E36  C17E  F04A         	movff	powf@u+2,___flsub@a+2
 10835   002E3A  C17F  F04B         	movff	powf@u+3,___flsub@a+3
 10836   002E3E  C1B4  F044         	movff	powf@z,___flsub@b
 10837   002E42  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10838   002E46  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10839   002E4A  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10840   002E4E  ECA3  F039         	call	___flsub	;wreg free
 10841   002E52  C044  F19C         	movff	?___flsub,_powf$3061
 10842   002E56  C045  F19D         	movff	?___flsub+1,_powf$3061+1
 10843   002E5A  C046  F19E         	movff	?___flsub+2,_powf$3061+2
 10844   002E5E  C047  F19F         	movff	?___flsub+3,_powf$3061+3
 10845   002E62  C180  F044         	movff	powf@v,___flsub@b
 10846   002E66  C181  F045         	movff	powf@v+1,___flsub@b+1
 10847   002E6A  C182  F046         	movff	powf@v+2,___flsub@b+2
 10848   002E6E  C183  F047         	movff	powf@v+3,___flsub@b+3
 10849   002E72  C19C  F048         	movff	_powf$3061,___flsub@a
 10850   002E76  C19D  F049         	movff	_powf$3061+1,___flsub@a+1
 10851   002E7A  C19E  F04A         	movff	_powf$3061+2,___flsub@a+2
 10852   002E7E  C19F  F04B         	movff	_powf$3061+3,___flsub@a+3
 10853   002E82  ECA3  F039         	call	___flsub	;wreg free
 10854   002E86  C044  F144         	movff	?___flsub,powf@w
 10855   002E8A  C045  F145         	movff	?___flsub+1,powf@w+1
 10856   002E8E  C046  F146         	movff	?___flsub+2,powf@w+2
 10857   002E92  C047  F147         	movff	?___flsub+3,powf@w+3
 10858   002E96  C1B4  F012         	movff	powf@z,___flmul@b
 10859   002E9A  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 10860   002E9E  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 10861   002EA2  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 10862   002EA6  C1B4  F016         	movff	powf@z,___flmul@a
 10863   002EAA  C1B5  F017         	movff	powf@z+1,___flmul@a+1
 10864   002EAE  C1B6  F018         	movff	powf@z+2,___flmul@a+2
 10865   002EB2  C1B7  F019         	movff	powf@z+3,___flmul@a+3
 10866   002EB6  ECDC  F028         	call	___flmul	;wreg free
 10867   002EBA  C012  F1B0         	movff	?___flmul,powf@t
 10868   002EBE  C013  F1B1         	movff	?___flmul+1,powf@t+1
 10869   002EC2  C014  F1B2         	movff	?___flmul+2,powf@t+2
 10870   002EC6  C015  F1B3         	movff	?___flmul+3,powf@t+3
 10871   002ECA  0E0E               	movlw	14
 10872   002ECC  6E06               	movwf	___fladd@a^0,c
 10873   002ECE  0EEA               	movlw	234
 10874   002ED0  6E07               	movwf	(___fladd@a+1)^0,c
 10875   002ED2  0EDD               	movlw	221
 10876   002ED4  6E08               	movwf	(___fladd@a+2)^0,c
 10877   002ED6  0EB5               	movlw	181
 10878   002ED8  6E09               	movwf	(___fladd@a+3)^0,c
 10879   002EDA  0E4C               	movlw	76
 10880   002EDC  6E16               	movwf	___flmul@a^0,c
 10881   002EDE  0EBB               	movlw	187
 10882   002EE0  6E17               	movwf	(___flmul@a+1)^0,c
 10883   002EE2  0E31               	movlw	49
 10884   002EE4  6E18               	movwf	(___flmul@a+2)^0,c
 10885   002EE6  0E33               	movlw	51
 10886   002EE8  6E19               	movwf	(___flmul@a+3)^0,c
 10887   002EEA  C1B0  F012         	movff	powf@t,___flmul@b
 10888   002EEE  C1B1  F013         	movff	powf@t+1,___flmul@b+1
 10889   002EF2  C1B2  F014         	movff	powf@t+2,___flmul@b+2
 10890   002EF6  C1B3  F015         	movff	powf@t+3,___flmul@b+3
 10891   002EFA  ECDC  F028         	call	___flmul	;wreg free
 10892   002EFE  C012  F002         	movff	?___flmul,___fladd@b
 10893   002F02  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10894   002F06  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10895   002F0A  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10896   002F0E  EC7C  F026         	call	___fladd	;wreg free
 10897   002F12  C002  F148         	movff	?___fladd,_powf$3058
 10898   002F16  C003  F149         	movff	?___fladd+1,_powf$3058+1
 10899   002F1A  C004  F14A         	movff	?___fladd+2,_powf$3058+2
 10900   002F1E  C005  F14B         	movff	?___fladd+3,_powf$3058+3
 10901   002F22  0E55               	movlw	85
 10902   002F24  6E06               	movwf	___fladd@a^0,c
 10903   002F26  0EB3               	movlw	179
 10904   002F28  6E07               	movwf	(___fladd@a+1)^0,c
 10905   002F2A  0E8A               	movlw	138
 10906   002F2C  6E08               	movwf	(___fladd@a+2)^0,c
 10907   002F2E  0E38               	movlw	56
 10908   002F30  6E09               	movwf	(___fladd@a+3)^0,c
 10909   002F32  C1B0  F016         	movff	powf@t,___flmul@a
 10910   002F36  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10911   002F3A  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10912   002F3E  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10913   002F42  C148  F012         	movff	_powf$3058,___flmul@b
 10914   002F46  C149  F013         	movff	_powf$3058+1,___flmul@b+1
 10915   002F4A  C14A  F014         	movff	_powf$3058+2,___flmul@b+2
 10916   002F4E  C14B  F015         	movff	_powf$3058+3,___flmul@b+3
 10917   002F52  ECDC  F028         	call	___flmul	;wreg free
 10918   002F56  C012  F002         	movff	?___flmul,___fladd@b
 10919   002F5A  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10920   002F5E  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10921   002F62  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10922   002F66  EC7C  F026         	call	___fladd	;wreg free
 10923   002F6A  C002  F15C         	movff	?___fladd,_powf$3059
 10924   002F6E  C003  F15D         	movff	?___fladd+1,_powf$3059+1
 10925   002F72  C004  F15E         	movff	?___fladd+2,_powf$3059+2
 10926   002F76  C005  F15F         	movff	?___fladd+3,_powf$3059+3
 10927   002F7A  0E61               	movlw	97
 10928   002F7C  6E06               	movwf	___fladd@a^0,c
 10929   002F7E  0E0B               	movlw	11
 10930   002F80  6E07               	movwf	(___fladd@a+1)^0,c
 10931   002F82  0E36               	movlw	54
 10932   002F84  6E08               	movwf	(___fladd@a+2)^0,c
 10933   002F86  0EBB               	movlw	187
 10934   002F88  6E09               	movwf	(___fladd@a+3)^0,c
 10935   002F8A  C1B0  F016         	movff	powf@t,___flmul@a
 10936   002F8E  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10937   002F92  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10938   002F96  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10939   002F9A  C15C  F012         	movff	_powf$3059,___flmul@b
 10940   002F9E  C15D  F013         	movff	_powf$3059+1,___flmul@b+1
 10941   002FA2  C15E  F014         	movff	_powf$3059+2,___flmul@b+2
 10942   002FA6  C15F  F015         	movff	_powf$3059+3,___flmul@b+3
 10943   002FAA  ECDC  F028         	call	___flmul	;wreg free
 10944   002FAE  C012  F002         	movff	?___flmul,___fladd@b
 10945   002FB2  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10946   002FB6  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10947   002FBA  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10948   002FBE  EC7C  F026         	call	___fladd	;wreg free
 10949   002FC2  C002  F14C         	movff	?___fladd,_powf$3060
 10950   002FC6  C003  F14D         	movff	?___fladd+1,_powf$3060+1
 10951   002FCA  C004  F14E         	movff	?___fladd+2,_powf$3060+2
 10952   002FCE  C005  F14F         	movff	?___fladd+3,_powf$3060+3
 10953   002FD2  0EAB               	movlw	171
 10954   002FD4  6E06               	movwf	___fladd@a^0,c
 10955   002FD6  0EAA               	movlw	170
 10956   002FD8  6E07               	movwf	(___fladd@a+1)^0,c
 10957   002FDA  0E2A               	movlw	42
 10958   002FDC  6E08               	movwf	(___fladd@a+2)^0,c
 10959   002FDE  0E3E               	movlw	62
 10960   002FE0  6E09               	movwf	(___fladd@a+3)^0,c
 10961   002FE2  C1B0  F016         	movff	powf@t,___flmul@a
 10962   002FE6  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10963   002FEA  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10964   002FEE  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10965   002FF2  C14C  F012         	movff	_powf$3060,___flmul@b
 10966   002FF6  C14D  F013         	movff	_powf$3060+1,___flmul@b+1
 10967   002FFA  C14E  F014         	movff	_powf$3060+2,___flmul@b+2
 10968   002FFE  C14F  F015         	movff	_powf$3060+3,___flmul@b+3
 10969   003002  ECDC  F028         	call	___flmul	;wreg free
 10970   003006  C012  F002         	movff	?___flmul,___fladd@b
 10971   00300A  C013  F003         	movff	?___flmul+1,___fladd@b+1
 10972   00300E  C014  F004         	movff	?___flmul+2,___fladd@b+2
 10973   003012  C015  F005         	movff	?___flmul+3,___fladd@b+3
 10974   003016  EC7C  F026         	call	___fladd	;wreg free
 10975   00301A  C002  F138         	movff	?___fladd,_powf$3062
 10976   00301E  C003  F139         	movff	?___fladd+1,_powf$3062+1
 10977   003022  C004  F13A         	movff	?___fladd+2,_powf$3062+2
 10978   003026  C005  F13B         	movff	?___fladd+3,_powf$3062+3
 10979   00302A  C1B4  F044         	movff	powf@z,___flsub@b
 10980   00302E  C1B5  F045         	movff	powf@z+1,___flsub@b+1
 10981   003032  C1B6  F046         	movff	powf@z+2,___flsub@b+2
 10982   003036  C1B7  F047         	movff	powf@z+3,___flsub@b+3
 10983   00303A  C1B0  F016         	movff	powf@t,___flmul@a
 10984   00303E  C1B1  F017         	movff	powf@t+1,___flmul@a+1
 10985   003042  C1B2  F018         	movff	powf@t+2,___flmul@a+2
 10986   003046  C1B3  F019         	movff	powf@t+3,___flmul@a+3
 10987   00304A  C138  F012         	movff	_powf$3062,___flmul@b
 10988   00304E  C139  F013         	movff	_powf$3062+1,___flmul@b+1
 10989   003052  C13A  F014         	movff	_powf$3062+2,___flmul@b+2
 10990   003056  C13B  F015         	movff	_powf$3062+3,___flmul@b+3
 10991   00305A  ECDC  F028         	call	___flmul	;wreg free
 10992   00305E  C012  F048         	movff	?___flmul,___flsub@a
 10993   003062  C013  F049         	movff	?___flmul+1,___flsub@a+1
 10994   003066  C014  F04A         	movff	?___flmul+2,___flsub@a+2
 10995   00306A  C015  F04B         	movff	?___flmul+3,___flsub@a+3
 10996   00306E  ECA3  F039         	call	___flsub	;wreg free
 10997   003072  C044  F18C         	movff	?___flsub,powf@t1
 10998   003076  C045  F18D         	movff	?___flsub+1,powf@t1+1
 10999   00307A  C046  F18E         	movff	?___flsub+2,powf@t1+2
 11000   00307E  C047  F18F         	movff	?___flsub+3,powf@t1+3
 11001   003082  0E00               	movlw	0
 11002   003084  6E06               	movwf	___fladd@a^0,c
 11003   003086  0E00               	movlw	0
 11004   003088  6E07               	movwf	(___fladd@a+1)^0,c
 11005   00308A  0E00               	movlw	0
 11006   00308C  6E08               	movwf	(___fladd@a+2)^0,c
 11007   00308E  0EC0               	movlw	192
 11008   003090  6E09               	movwf	(___fladd@a+3)^0,c
 11009   003092  C18C  F002         	movff	powf@t1,___fladd@b
 11010   003096  C18D  F003         	movff	powf@t1+1,___fladd@b+1
 11011   00309A  C18E  F004         	movff	powf@t1+2,___fladd@b+2
 11012   00309E  C18F  F005         	movff	powf@t1+3,___fladd@b+3
 11013   0030A2  EC7C  F026         	call	___fladd	;wreg free
 11014   0030A6  C002  F02F         	movff	?___fladd,___fldiv@a
 11015   0030AA  C003  F030         	movff	?___fladd+1,___fldiv@a+1
 11016   0030AE  C004  F031         	movff	?___fladd+2,___fldiv@a+2
 11017   0030B2  C005  F032         	movff	?___fladd+3,___fldiv@a+3
 11018   0030B6  C18C  F016         	movff	powf@t1,___flmul@a
 11019   0030BA  C18D  F017         	movff	powf@t1+1,___flmul@a+1
 11020   0030BE  C18E  F018         	movff	powf@t1+2,___flmul@a+2
 11021   0030C2  C18F  F019         	movff	powf@t1+3,___flmul@a+3
 11022   0030C6  C1B4  F012         	movff	powf@z,___flmul@b
 11023   0030CA  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 11024   0030CE  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 11025   0030D2  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 11026   0030D6  ECDC  F028         	call	___flmul	;wreg free
 11027   0030DA  C012  F02B         	movff	?___flmul,___fldiv@b
 11028   0030DE  C013  F02C         	movff	?___flmul+1,___fldiv@b+1
 11029   0030E2  C014  F02D         	movff	?___flmul+2,___fldiv@b+2
 11030   0030E6  C015  F02E         	movff	?___flmul+3,___fldiv@b+3
 11031   0030EA  ECE0  F02C         	call	___fldiv	;wreg free
 11032   0030EE  C02B  F13C         	movff	?___fldiv,_powf$3066
 11033   0030F2  C02C  F13D         	movff	?___fldiv+1,_powf$3066+1
 11034   0030F6  C02D  F13E         	movff	?___fldiv+2,_powf$3066+2
 11035   0030FA  C02E  F13F         	movff	?___fldiv+3,_powf$3066+3
 11036   0030FE  C144  F006         	movff	powf@w,___fladd@a
 11037   003102  C145  F007         	movff	powf@w+1,___fladd@a+1
 11038   003106  C146  F008         	movff	powf@w+2,___fladd@a+2
 11039   00310A  C147  F009         	movff	powf@w+3,___fladd@a+3
 11040   00310E  C144  F016         	movff	powf@w,___flmul@a
 11041   003112  C145  F017         	movff	powf@w+1,___flmul@a+1
 11042   003116  C146  F018         	movff	powf@w+2,___flmul@a+2
 11043   00311A  C147  F019         	movff	powf@w+3,___flmul@a+3
 11044   00311E  C1B4  F012         	movff	powf@z,___flmul@b
 11045   003122  C1B5  F013         	movff	powf@z+1,___flmul@b+1
 11046   003126  C1B6  F014         	movff	powf@z+2,___flmul@b+2
 11047   00312A  C1B7  F015         	movff	powf@z+3,___flmul@b+3
 11048   00312E  ECDC  F028         	call	___flmul	;wreg free
 11049   003132  C012  F002         	movff	?___flmul,___fladd@b
 11050   003136  C013  F003         	movff	?___flmul+1,___fladd@b+1
 11051   00313A  C014  F004         	movff	?___flmul+2,___fladd@b+2
 11052   00313E  C015  F005         	movff	?___flmul+3,___fladd@b+3
 11053   003142  EC7C  F026         	call	___fladd	;wreg free
 11054   003146  C002  F118         	movff	?___fladd,_powf$3072
 11055   00314A  C003  F119         	movff	?___fladd+1,_powf$3072+1
 11056   00314E  C004  F11A         	movff	?___fladd+2,_powf$3072+2
 11057   003152  C005  F11B         	movff	?___fladd+3,_powf$3072+3
 11058   003156  C13C  F044         	movff	_powf$3066,___flsub@b
 11059   00315A  C13D  F045         	movff	_powf$3066+1,___flsub@b+1
 11060   00315E  C13E  F046         	movff	_powf$3066+2,___flsub@b+2
 11061   003162  C13F  F047         	movff	_powf$3066+3,___flsub@b+3
 11062   003166  C118  F048         	movff	_powf$3072,___flsub@a
 11063   00316A  C119  F049         	movff	_powf$3072+1,___flsub@a+1
 11064   00316E  C11A  F04A         	movff	_powf$3072+2,___flsub@a+2
 11065   003172  C11B  F04B         	movff	_powf$3072+3,___flsub@a+3
 11066   003176  ECA3  F039         	call	___flsub	;wreg free
 11067   00317A  C044  F150         	movff	?___flsub,powf@r
 11068   00317E  C045  F151         	movff	?___flsub+1,powf@r+1
 11069   003182  C046  F152         	movff	?___flsub+2,powf@r+2
 11070   003186  C047  F153         	movff	?___flsub+3,powf@r+3
 11071   00318A  C1B4  F048         	movff	powf@z,___flsub@a
 11072   00318E  C1B5  F049         	movff	powf@z+1,___flsub@a+1
 11073   003192  C1B6  F04A         	movff	powf@z+2,___flsub@a+2
 11074   003196  C1B7  F04B         	movff	powf@z+3,___flsub@a+3
 11075   00319A  C150  F044         	movff	powf@r,___flsub@b
 11076   00319E  C151  F045         	movff	powf@r+1,___flsub@b+1
 11077   0031A2  C152  F046         	movff	powf@r+2,___flsub@b+2
 11078   0031A6  C153  F047         	movff	powf@r+3,___flsub@b+3
 11079   0031AA  ECA3  F039         	call	___flsub	;wreg free
 11080   0031AE  C044  F19C         	movff	?___flsub,_powf$3061
 11081   0031B2  C045  F19D         	movff	?___flsub+1,_powf$3061+1
 11082   0031B6  C046  F19E         	movff	?___flsub+2,_powf$3061+2
 11083   0031BA  C047  F19F         	movff	?___flsub+3,_powf$3061+3
 11084   0031BE  0E00               	movlw	0
 11085   0031C0  6E44               	movwf	___flsub@b^0,c
 11086   0031C2  0E00               	movlw	0
 11087   0031C4  6E45               	movwf	(___flsub@b+1)^0,c
 11088   0031C6  0E80               	movlw	128
 11089   0031C8  6E46               	movwf	(___flsub@b+2)^0,c
 11090   0031CA  0E3F               	movlw	63
 11091   0031CC  6E47               	movwf	(___flsub@b+3)^0,c
 11092   0031CE  C19C  F048         	movff	_powf$3061,___flsub@a
 11093   0031D2  C19D  F049         	movff	_powf$3061+1,___flsub@a+1
 11094   0031D6  C19E  F04A         	movff	_powf$3061+2,___flsub@a+2
 11095   0031DA  C19F  F04B         	movff	_powf$3061+3,___flsub@a+3
 11096   0031DE  ECA3  F039         	call	___flsub	;wreg free
 11097   0031E2  C044  F1B4         	movff	?___flsub,powf@z
 11098   0031E6  C045  F1B5         	movff	?___flsub+1,powf@z+1
 11099   0031EA  C046  F1B6         	movff	?___flsub+2,powf@z+2
 11100   0031EE  C047  F1B7         	movff	?___flsub+3,powf@z+3
 11101   0031F2  C1B4  F1A8         	movff	powf@z,powf@j
 11102   0031F6  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 11103   0031FA  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 11104   0031FE  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 11105   003202  C188  F068         	movff	powf@n,??_powf
 11106   003206  C189  F069         	movff	powf@n+1,??_powf+1
 11107   00320A  C18A  F06A         	movff	powf@n+2,??_powf+2
 11108   00320E  C18B  F06B         	movff	powf@n+3,??_powf+3
 11109   003212  0E17               	movlw	23
 11110   003214                     u7745:
 11111   003214  90D8               	bcf	status,0,c
 11112   003216  0100               	movlb	0	; () banked
 11113   003218  3768               	rlcf	??_powf& (0+255),f,b
 11114   00321A  3769               	rlcf	(??_powf+1)& (0+255),f,b
 11115   00321C  376A               	rlcf	(??_powf+2)& (0+255),f,b
 11116   00321E  376B               	rlcf	(??_powf+3)& (0+255),f,b
 11117   003220  2EE8               	decfsz	wreg,f,c
 11118   003222  EF0A  F019         	goto	u7745
 11119   003226  5168               	movf	??_powf& (0+255),w,b
 11120   003228  0101               	movlb	1	; () banked
 11121   00322A  27A8               	addwf	powf@j& (0+255),f,b
 11122   00322C  0100               	movlb	0	; () banked
 11123   00322E  5169               	movf	(??_powf+1)& (0+255),w,b
 11124   003230  0101               	movlb	1	; () banked
 11125   003232  23A9               	addwfc	(powf@j+1)& (0+255),f,b
 11126   003234  0100               	movlb	0	; () banked
 11127   003236  516A               	movf	(??_powf+2)& (0+255),w,b
 11128   003238  0101               	movlb	1	; () banked
 11129   00323A  23AA               	addwfc	(powf@j+2)& (0+255),f,b
 11130   00323C  0100               	movlb	0	; () banked
 11131   00323E  516B               	movf	(??_powf+3)& (0+255),w,b
 11132   003240  0101               	movlb	1	; () banked
 11133   003242  23AB               	addwfc	(powf@j+3)& (0+255),f,b
 11134   003244                     
 11135                           ; BSR set to: 1
 11136   003244  0E17               	movlw	23
 11137   003246  0100               	movlb	0	; () banked
 11138   003248  6F68               	movwf	??_powf& (0+255),b
 11139   00324A  C1A8  F069         	movff	powf@j,??_powf+1
 11140   00324E  C1A9  F06A         	movff	powf@j+1,??_powf+2
 11141   003252  C1AA  F06B         	movff	powf@j+2,??_powf+3
 11142   003256  C1AB  F06C         	movff	powf@j+3,??_powf+4
 11143   00325A                     u7755:
 11144   00325A  6768               	tstfsz	??_powf& (0+255),b
 11145   00325C  EF32  F019         	goto	u7756
 11146   003260  EF3A  F019         	goto	u7757
 11147   003264                     u7756:
 11148   003264  356C               	rlcf	(??_powf+4)& (0+255),w,b
 11149   003266  336C               	rrcf	(??_powf+4)& (0+255),f,b
 11150   003268  336B               	rrcf	(??_powf+3)& (0+255),f,b
 11151   00326A  336A               	rrcf	(??_powf+2)& (0+255),f,b
 11152   00326C  3369               	rrcf	(??_powf+1)& (0+255),f,b
 11153   00326E  2F68               	decfsz	??_powf& (0+255),f,b
 11154   003270  EF2D  F019         	goto	u7755
 11155   003274                     u7757:
 11156   003274  0100               	movlb	0	; () banked
 11157   003276  BF6C               	btfsc	(??_powf+4)& (0+255),7,b
 11158   003278  EF4A  F019         	goto	u7760
 11159   00327C  516C               	movf	(??_powf+4)& (0+255),w,b
 11160   00327E  116B               	iorwf	(??_powf+3)& (0+255),w,b
 11161   003280  116A               	iorwf	(??_powf+2)& (0+255),w,b
 11162   003282  E106               	bnz	u7761
 11163   003284  0569               	decf	(??_powf+1)& (0+255),w,b
 11164   003286  B0D8               	btfsc	status,0,c
 11165   003288  EF48  F019         	goto	u7761
 11166   00328C  EF4A  F019         	goto	u7760
 11167   003290                     u7761:
 11168   003290  EF62  F019         	goto	l1437
 11169   003294                     u7760:
 11170   003294                     
 11171                           ; BSR set to: 0
 11172   003294  C1B4  F02B         	movff	powf@z,scalbnf@x
 11173   003298  C1B5  F02C         	movff	powf@z+1,scalbnf@x+1
 11174   00329C  C1B6  F02D         	movff	powf@z+2,scalbnf@x+2
 11175   0032A0  C1B7  F02E         	movff	powf@z+3,scalbnf@x+3
 11176   0032A4  C188  F02F         	movff	powf@n,scalbnf@n
 11177   0032A8  C189  F030         	movff	powf@n+1,scalbnf@n+1
 11178   0032AC  ECAD  F02E         	call	_scalbnf	;wreg free
 11179   0032B0  C02B  F1B4         	movff	?_scalbnf,powf@z
 11180   0032B4  C02C  F1B5         	movff	?_scalbnf+1,powf@z+1
 11181   0032B8  C02D  F1B6         	movff	?_scalbnf+2,powf@z+2
 11182   0032BC  C02E  F1B7         	movff	?_scalbnf+3,powf@z+3
 11183   0032C0  EF6A  F019         	goto	l7442
 11184   0032C4                     l1437:
 11185                           
 11186                           ; BSR set to: 0
 11187   0032C4  C1A8  F1B4         	movff	powf@j,powf@z
 11188   0032C8  C1A9  F1B5         	movff	powf@j+1,powf@z+1
 11189   0032CC  C1AA  F1B6         	movff	powf@j+2,powf@z+2
 11190   0032D0  C1AB  F1B7         	movff	powf@j+3,powf@z+3
 11191   0032D4                     l7442:
 11192   0032D4  0101               	movlb	1	; () banked
 11193   0032D6  51B4               	movf	powf@z& (0+255),w,b
 11194   0032D8  11B5               	iorwf	(powf@z+1)& (0+255),w,b
 11195   0032DA  11B6               	iorwf	(powf@z+2)& (0+255),w,b
 11196   0032DC  11B7               	iorwf	(powf@z+3)& (0+255),w,b
 11197   0032DE  B4D8               	btfsc	status,2,c
 11198   0032E0  EF74  F019         	goto	u7771
 11199   0032E4  EF76  F019         	goto	u7770
 11200   0032E8                     u7771:
 11201   0032E8  EF77  F00A         	goto	l7128
 11202   0032EC                     u7770:
 11203   0032EC                     
 11204                           ; BSR set to: 1
 11205   0032EC  5164               	movf	powf@sn& (0+255),w,b
 11206   0032EE  1BB4               	xorwf	powf@z& (0+255),f,b
 11207   0032F0  5165               	movf	(powf@sn+1)& (0+255),w,b
 11208   0032F2  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
 11209   0032F4  5166               	movf	(powf@sn+2)& (0+255),w,b
 11210   0032F6  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
 11211   0032F8  5167               	movf	(powf@sn+3)& (0+255),w,b
 11212   0032FA  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
 11213   0032FC  EF77  F00A         	goto	l7128
 11214   003300                     l1371:
 11215   003300  0012               	return		;funcret
 11216   003302                     __end_of_powf:
 11217                           	callstack 0
 11218                           
 11219 ;; *************** function _sqrtf *****************
 11220 ;; Defined at:
 11221 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sqrtf.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  x               4   17[COMRAM] float 
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;  ix              4   50[COMRAM] struct .
 11226 ;;  r               4   46[COMRAM] unsigned long 
 11227 ;;  m               4   42[COMRAM] long 
 11228 ;;  t               4   38[COMRAM] long 
 11229 ;;  q               4   34[COMRAM] long 
 11230 ;;  i               4   30[COMRAM] long 
 11231 ;;  s               4   26[COMRAM] long 
 11232 ;;  z               4    0        float 
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  4   17[COMRAM] float 
 11235 ;; Registers used:
 11236 ;;		wreg, status,2, status,0
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11242 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11243 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11244 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11245 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11246 ;;Total ram usage:       37 bytes
 11247 ;; Hardware stack levels used: 1
 11248 ;; Hardware stack levels required when called: 2
 11249 ;; This function calls:
 11250 ;;		Nothing
 11251 ;; This function is called by:
 11252 ;;		_decide_action
 11253 ;;		_powf
 11254 ;; This function uses a non-reentrant model
 11255 ;;
 11256                           
 11257                           	psect	text30
 11258   0055E2                     __ptext30:
 11259                           	callstack 0
 11260   0055E2                     _sqrtf:
 11261                           	callstack 27
 11262   0055E2  C012  F033         	movff	sqrtf@x,sqrtf@ix
 11263   0055E6  C013  F034         	movff	sqrtf@x+1,sqrtf@ix+1
 11264   0055EA  C014  F035         	movff	sqrtf@x+2,sqrtf@ix+2
 11265   0055EE  C015  F036         	movff	sqrtf@x+3,sqrtf@ix+3
 11266   0055F2  0E00               	movlw	0
 11267   0055F4  1433               	andwf	sqrtf@ix^0,w,c
 11268   0055F6  6E16               	movwf	??_sqrtf^0,c
 11269   0055F8  0E00               	movlw	0
 11270   0055FA  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11271   0055FC  6E17               	movwf	(??_sqrtf+1)^0,c
 11272   0055FE  0E80               	movlw	128
 11273   005600  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11274   005602  6E18               	movwf	(??_sqrtf+2)^0,c
 11275   005604  0E7F               	movlw	127
 11276   005606  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11277   005608  6E19               	movwf	(??_sqrtf+3)^0,c
 11278   00560A  0E80               	movlw	128
 11279   00560C  1818               	xorwf	(??_sqrtf+2)^0,w,c
 11280   00560E  E109               	bnz	u3841
 11281   005610  0E7F               	movlw	127
 11282   005612  1819               	xorwf	(??_sqrtf+3)^0,w,c
 11283   005614  1016               	iorwf	??_sqrtf^0,w,c
 11284   005616  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11285   005618  A4D8               	btfss	status,2,c
 11286   00561A  EF11  F02B         	goto	u3841
 11287   00561E  EF13  F02B         	goto	u3840
 11288   005622                     u3841:
 11289   005622  EF43  F02B         	goto	l4168
 11290   005626                     u3840:
 11291   005626  0EFF               	movlw	255
 11292   005628  1433               	andwf	sqrtf@ix^0,w,c
 11293   00562A  6E16               	movwf	??_sqrtf^0,c
 11294   00562C  0EFF               	movlw	255
 11295   00562E  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11296   005630  6E17               	movwf	(??_sqrtf+1)^0,c
 11297   005632  0E7F               	movlw	127
 11298   005634  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11299   005636  6E18               	movwf	(??_sqrtf+2)^0,c
 11300   005638  0E00               	movlw	0
 11301   00563A  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11302   00563C  6E19               	movwf	(??_sqrtf+3)^0,c
 11303   00563E  5016               	movf	??_sqrtf^0,w,c
 11304   005640  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11305   005642  1018               	iorwf	(??_sqrtf+2)^0,w,c
 11306   005644  1019               	iorwf	(??_sqrtf+3)^0,w,c
 11307   005646  A4D8               	btfss	status,2,c
 11308   005648  EF28  F02B         	goto	u3851
 11309   00564C  EF2A  F02B         	goto	u3850
 11310   005650                     u3851:
 11311   005650  EF31  F02B         	goto	l4162
 11312   005654                     u3850:
 11313   005654  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 11314   005656  EF31  F02B         	goto	u3860
 11315   00565A  EF2F  F02B         	goto	u3861
 11316   00565E                     u3861:
 11317   00565E  EF39  F02B         	goto	l4164
 11318   005662                     u3860:
 11319   005662                     l4162:
 11320   005662  0EFF               	movlw	255
 11321   005664  1233               	iorwf	sqrtf@ix^0,f,c
 11322   005666  0EFF               	movlw	255
 11323   005668  1234               	iorwf	(sqrtf@ix+1)^0,f,c
 11324   00566A  0E7F               	movlw	127
 11325   00566C  1235               	iorwf	(sqrtf@ix+2)^0,f,c
 11326   00566E  0E00               	movlw	0
 11327   005670  1236               	iorwf	(sqrtf@ix+3)^0,f,c
 11328   005672                     l4164:
 11329   005672  C033  F012         	movff	sqrtf@ix,?_sqrtf
 11330   005676  C034  F013         	movff	sqrtf@ix+1,?_sqrtf+1
 11331   00567A  C035  F014         	movff	sqrtf@ix+2,?_sqrtf+2
 11332   00567E  C036  F015         	movff	sqrtf@ix+3,?_sqrtf+3
 11333   005682  EFDF  F02C         	goto	l1463
 11334   005686                     l4168:
 11335   005686  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 11336   005688  EF52  F02B         	goto	u3870
 11337   00568C  5036               	movf	(sqrtf@ix+3)^0,w,c
 11338   00568E  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 11339   005690  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 11340   005692  E106               	bnz	u3871
 11341   005694  0433               	decf	sqrtf@ix^0,w,c
 11342   005696  B0D8               	btfsc	status,0,c
 11343   005698  EF50  F02B         	goto	u3871
 11344   00569C  EF52  F02B         	goto	u3870
 11345   0056A0                     u3871:
 11346   0056A0  EF89  F02B         	goto	l4184
 11347   0056A4                     u3870:
 11348   0056A4  0EFF               	movlw	255
 11349   0056A6  1433               	andwf	sqrtf@ix^0,w,c
 11350   0056A8  6E16               	movwf	??_sqrtf^0,c
 11351   0056AA  0EFF               	movlw	255
 11352   0056AC  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11353   0056AE  6E17               	movwf	(??_sqrtf+1)^0,c
 11354   0056B0  0EFF               	movlw	255
 11355   0056B2  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11356   0056B4  6E18               	movwf	(??_sqrtf+2)^0,c
 11357   0056B6  0E7F               	movlw	127
 11358   0056B8  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11359   0056BA  6E19               	movwf	(??_sqrtf+3)^0,c
 11360   0056BC  5016               	movf	??_sqrtf^0,w,c
 11361   0056BE  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11362   0056C0  1018               	iorwf	(??_sqrtf+2)^0,w,c
 11363   0056C2  1019               	iorwf	(??_sqrtf+3)^0,w,c
 11364   0056C4  A4D8               	btfss	status,2,c
 11365   0056C6  EF67  F02B         	goto	u3881
 11366   0056CA  EF69  F02B         	goto	u3880
 11367   0056CE                     u3881:
 11368   0056CE  EF73  F02B         	goto	l4176
 11369   0056D2                     u3880:
 11370   0056D2  0E00               	movlw	0
 11371   0056D4  6E12               	movwf	?_sqrtf^0,c
 11372   0056D6  0E00               	movlw	0
 11373   0056D8  6E13               	movwf	(?_sqrtf+1)^0,c
 11374   0056DA  0E00               	movlw	0
 11375   0056DC  6E14               	movwf	(?_sqrtf+2)^0,c
 11376   0056DE  0E00               	movlw	0
 11377   0056E0  6E15               	movwf	(?_sqrtf+3)^0,c
 11378   0056E2  EFDF  F02C         	goto	l1463
 11379   0056E6                     l4176:
 11380   0056E6  BE36               	btfsc	(sqrtf@ix+3)^0,7,c
 11381   0056E8  EF7A  F02B         	goto	u3890
 11382   0056EC  EF78  F02B         	goto	u3891
 11383   0056F0                     u3891:
 11384   0056F0  EF89  F02B         	goto	l4184
 11385   0056F4                     u3890:
 11386   0056F4  0E00               	movlw	0
 11387   0056F6  0100               	movlb	0	; () banked
 11388   0056F8  6FEB               	movwf	(_errno+1)& (0+255),b
 11389   0056FA  0E21               	movlw	33
 11390   0056FC  6FEA               	movwf	_errno& (0+255),b
 11391   0056FE  0EFF               	movlw	255
 11392   005700  6E33               	movwf	sqrtf@ix^0,c
 11393   005702  0EFF               	movlw	255
 11394   005704  6E34               	movwf	(sqrtf@ix+1)^0,c
 11395   005706  0EFF               	movlw	255
 11396   005708  6E35               	movwf	(sqrtf@ix+2)^0,c
 11397   00570A  0E7F               	movlw	127
 11398   00570C  6E36               	movwf	(sqrtf@ix+3)^0,c
 11399   00570E  EF39  F02B         	goto	l4164
 11400   005712                     l4184:
 11401   005712  0E17               	movlw	23
 11402   005714  6E16               	movwf	??_sqrtf^0,c
 11403   005716  C033  F017         	movff	sqrtf@ix,??_sqrtf+1
 11404   00571A  C034  F018         	movff	sqrtf@ix+1,??_sqrtf+2
 11405   00571E  C035  F019         	movff	sqrtf@ix+2,??_sqrtf+3
 11406   005722  C036  F01A         	movff	sqrtf@ix+3,??_sqrtf+4
 11407   005726                     u3905:
 11408   005726  6616               	tstfsz	??_sqrtf^0,c
 11409   005728  EF98  F02B         	goto	u3906
 11410   00572C  EFA0  F02B         	goto	u3907
 11411   005730                     u3906:
 11412   005730  341A               	rlcf	(??_sqrtf+4)^0,w,c
 11413   005732  321A               	rrcf	(??_sqrtf+4)^0,f,c
 11414   005734  3219               	rrcf	(??_sqrtf+3)^0,f,c
 11415   005736  3218               	rrcf	(??_sqrtf+2)^0,f,c
 11416   005738  3217               	rrcf	(??_sqrtf+1)^0,f,c
 11417   00573A  2E16               	decfsz	??_sqrtf^0,f,c
 11418   00573C  EF93  F02B         	goto	u3905
 11419   005740                     u3907:
 11420   005740  C017  F02B         	movff	??_sqrtf+1,sqrtf@m
 11421   005744  C018  F02C         	movff	??_sqrtf+2,sqrtf@m+1
 11422   005748  C019  F02D         	movff	??_sqrtf+3,sqrtf@m+2
 11423   00574C  C01A  F02E         	movff	??_sqrtf+4,sqrtf@m+3
 11424   005750  502B               	movf	sqrtf@m^0,w,c
 11425   005752  102C               	iorwf	(sqrtf@m+1)^0,w,c
 11426   005754  102D               	iorwf	(sqrtf@m+2)^0,w,c
 11427   005756  102E               	iorwf	(sqrtf@m+3)^0,w,c
 11428   005758  A4D8               	btfss	status,2,c
 11429   00575A  EFB1  F02B         	goto	u3911
 11430   00575E  EFB3  F02B         	goto	u3910
 11431   005762                     u3911:
 11432   005762  EFE3  F02B         	goto	l1467
 11433   005766                     u3910:
 11434   005766  0E00               	movlw	0
 11435   005768  6E1F               	movwf	sqrtf@i^0,c
 11436   00576A  0E00               	movlw	0
 11437   00576C  6E20               	movwf	(sqrtf@i+1)^0,c
 11438   00576E  0E00               	movlw	0
 11439   005770  6E21               	movwf	(sqrtf@i+2)^0,c
 11440   005772  0E00               	movlw	0
 11441   005774  6E22               	movwf	(sqrtf@i+3)^0,c
 11442   005776  EFC8  F02B         	goto	l4192
 11443   00577A                     l4188:
 11444   00577A  90D8               	bcf	status,0,c
 11445   00577C  3633               	rlcf	sqrtf@ix^0,f,c
 11446   00577E  3634               	rlcf	(sqrtf@ix+1)^0,f,c
 11447   005780  3635               	rlcf	(sqrtf@ix+2)^0,f,c
 11448   005782  3636               	rlcf	(sqrtf@ix+3)^0,f,c
 11449   005784  0E01               	movlw	1
 11450   005786  261F               	addwf	sqrtf@i^0,f,c
 11451   005788  0E00               	movlw	0
 11452   00578A  2220               	addwfc	(sqrtf@i+1)^0,f,c
 11453   00578C  2221               	addwfc	(sqrtf@i+2)^0,f,c
 11454   00578E  2222               	addwfc	(sqrtf@i+3)^0,f,c
 11455   005790                     l4192:
 11456   005790  AE35               	btfss	(sqrtf@ix+2)^0,7,c
 11457   005792  EFCD  F02B         	goto	u3921
 11458   005796  EFCF  F02B         	goto	u3920
 11459   00579A                     u3921:
 11460   00579A  EFBD  F02B         	goto	l4188
 11461   00579E                     u3920:
 11462   00579E  0EFF               	movlw	255
 11463   0057A0  241F               	addwf	sqrtf@i^0,w,c
 11464   0057A2  6E16               	movwf	??_sqrtf^0,c
 11465   0057A4  0EFF               	movlw	255
 11466   0057A6  2020               	addwfc	(sqrtf@i+1)^0,w,c
 11467   0057A8  6E17               	movwf	(??_sqrtf+1)^0,c
 11468   0057AA  0EFF               	movlw	255
 11469   0057AC  2021               	addwfc	(sqrtf@i+2)^0,w,c
 11470   0057AE  6E18               	movwf	(??_sqrtf+2)^0,c
 11471   0057B0  0EFF               	movlw	255
 11472   0057B2  2022               	addwfc	(sqrtf@i+3)^0,w,c
 11473   0057B4  6E19               	movwf	(??_sqrtf+3)^0,c
 11474   0057B6  5016               	movf	??_sqrtf^0,w,c
 11475   0057B8  5E2B               	subwf	sqrtf@m^0,f,c
 11476   0057BA  5017               	movf	(??_sqrtf+1)^0,w,c
 11477   0057BC  5A2C               	subwfb	(sqrtf@m+1)^0,f,c
 11478   0057BE  5018               	movf	(??_sqrtf+2)^0,w,c
 11479   0057C0  5A2D               	subwfb	(sqrtf@m+2)^0,f,c
 11480   0057C2  5019               	movf	(??_sqrtf+3)^0,w,c
 11481   0057C4  5A2E               	subwfb	(sqrtf@m+3)^0,f,c
 11482   0057C6                     l1467:
 11483   0057C6  0E81               	movlw	129
 11484   0057C8  262B               	addwf	sqrtf@m^0,f,c
 11485   0057CA  0EFF               	movlw	255
 11486   0057CC  222C               	addwfc	(sqrtf@m+1)^0,f,c
 11487   0057CE  0EFF               	movlw	255
 11488   0057D0  222D               	addwfc	(sqrtf@m+2)^0,f,c
 11489   0057D2  0EFF               	movlw	255
 11490   0057D4  222E               	addwfc	(sqrtf@m+3)^0,f,c
 11491   0057D6  0EFF               	movlw	255
 11492   0057D8  1433               	andwf	sqrtf@ix^0,w,c
 11493   0057DA  6E16               	movwf	??_sqrtf^0,c
 11494   0057DC  0EFF               	movlw	255
 11495   0057DE  1434               	andwf	(sqrtf@ix+1)^0,w,c
 11496   0057E0  6E17               	movwf	(??_sqrtf+1)^0,c
 11497   0057E2  0E7F               	movlw	127
 11498   0057E4  1435               	andwf	(sqrtf@ix+2)^0,w,c
 11499   0057E6  6E18               	movwf	(??_sqrtf+2)^0,c
 11500   0057E8  0E00               	movlw	0
 11501   0057EA  1436               	andwf	(sqrtf@ix+3)^0,w,c
 11502   0057EC  6E19               	movwf	(??_sqrtf+3)^0,c
 11503   0057EE  0E00               	movlw	0
 11504   0057F0  1016               	iorwf	??_sqrtf^0,w,c
 11505   0057F2  6E33               	movwf	sqrtf@ix^0,c
 11506   0057F4  0E00               	movlw	0
 11507   0057F6  1017               	iorwf	(??_sqrtf+1)^0,w,c
 11508   0057F8  6E34               	movwf	(sqrtf@ix+1)^0,c
 11509   0057FA  0E80               	movlw	128
 11510   0057FC  1018               	iorwf	(??_sqrtf+2)^0,w,c
 11511   0057FE  6E35               	movwf	(sqrtf@ix+2)^0,c
 11512   005800  0E00               	movlw	0
 11513   005802  1019               	iorwf	(??_sqrtf+3)^0,w,c
 11514   005804  6E36               	movwf	(sqrtf@ix+3)^0,c
 11515   005806  A02B               	btfss	sqrtf@m^0,0,c
 11516   005808  EF08  F02C         	goto	u3931
 11517   00580C  EF0A  F02C         	goto	u3930
 11518   005810                     u3931:
 11519   005810  EF12  F02C         	goto	l1471
 11520   005814                     u3930:
 11521   005814  5033               	movf	sqrtf@ix^0,w,c
 11522   005816  2633               	addwf	sqrtf@ix^0,f,c
 11523   005818  5034               	movf	(sqrtf@ix+1)^0,w,c
 11524   00581A  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11525   00581C  5035               	movf	(sqrtf@ix+2)^0,w,c
 11526   00581E  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11527   005820  5036               	movf	(sqrtf@ix+3)^0,w,c
 11528   005822  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11529   005824                     l1471:
 11530   005824  342E               	rlcf	(sqrtf@m+3)^0,w,c
 11531   005826  322E               	rrcf	(sqrtf@m+3)^0,f,c
 11532   005828  322D               	rrcf	(sqrtf@m+2)^0,f,c
 11533   00582A  322C               	rrcf	(sqrtf@m+1)^0,f,c
 11534   00582C  322B               	rrcf	sqrtf@m^0,f,c
 11535   00582E  5033               	movf	sqrtf@ix^0,w,c
 11536   005830  2633               	addwf	sqrtf@ix^0,f,c
 11537   005832  5034               	movf	(sqrtf@ix+1)^0,w,c
 11538   005834  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11539   005836  5035               	movf	(sqrtf@ix+2)^0,w,c
 11540   005838  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11541   00583A  5036               	movf	(sqrtf@ix+3)^0,w,c
 11542   00583C  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11543   00583E  0E00               	movlw	0
 11544   005840  6E1B               	movwf	sqrtf@s^0,c
 11545   005842  0E00               	movlw	0
 11546   005844  6E1C               	movwf	(sqrtf@s+1)^0,c
 11547   005846  0E00               	movlw	0
 11548   005848  6E1D               	movwf	(sqrtf@s+2)^0,c
 11549   00584A  0E00               	movlw	0
 11550   00584C  6E1E               	movwf	(sqrtf@s+3)^0,c
 11551   00584E  C01B  F023         	movff	sqrtf@s,sqrtf@q
 11552   005852  C01C  F024         	movff	sqrtf@s+1,sqrtf@q+1
 11553   005856  C01D  F025         	movff	sqrtf@s+2,sqrtf@q+2
 11554   00585A  C01E  F026         	movff	sqrtf@s+3,sqrtf@q+3
 11555   00585E  0E00               	movlw	0
 11556   005860  6E2F               	movwf	sqrtf@r^0,c
 11557   005862  0E00               	movlw	0
 11558   005864  6E30               	movwf	(sqrtf@r+1)^0,c
 11559   005866  0E00               	movlw	0
 11560   005868  6E31               	movwf	(sqrtf@r+2)^0,c
 11561   00586A  0E01               	movlw	1
 11562   00586C  6E32               	movwf	(sqrtf@r+3)^0,c
 11563   00586E  EF81  F02C         	goto	l4210
 11564   005872                     l4204:
 11565   005872  501B               	movf	sqrtf@s^0,w,c
 11566   005874  242F               	addwf	sqrtf@r^0,w,c
 11567   005876  6E27               	movwf	sqrtf@t^0,c
 11568   005878  501C               	movf	(sqrtf@s+1)^0,w,c
 11569   00587A  2030               	addwfc	(sqrtf@r+1)^0,w,c
 11570   00587C  6E28               	movwf	(sqrtf@t+1)^0,c
 11571   00587E  501D               	movf	(sqrtf@s+2)^0,w,c
 11572   005880  2031               	addwfc	(sqrtf@r+2)^0,w,c
 11573   005882  6E29               	movwf	(sqrtf@t+2)^0,c
 11574   005884  501E               	movf	(sqrtf@s+3)^0,w,c
 11575   005886  2032               	addwfc	(sqrtf@r+3)^0,w,c
 11576   005888  6E2A               	movwf	(sqrtf@t+3)^0,c
 11577   00588A  5027               	movf	sqrtf@t^0,w,c
 11578   00588C  5C33               	subwf	sqrtf@ix^0,w,c
 11579   00588E  5028               	movf	(sqrtf@t+1)^0,w,c
 11580   005890  5834               	subwfb	(sqrtf@ix+1)^0,w,c
 11581   005892  5029               	movf	(sqrtf@t+2)^0,w,c
 11582   005894  5835               	subwfb	(sqrtf@ix+2)^0,w,c
 11583   005896  5036               	movf	(sqrtf@ix+3)^0,w,c
 11584   005898  0A80               	xorlw	128
 11585   00589A  6E16               	movwf	??_sqrtf^0,c
 11586   00589C  502A               	movf	(sqrtf@t+3)^0,w,c
 11587   00589E  0A80               	xorlw	128
 11588   0058A0  5816               	subwfb	??_sqrtf^0,w,c
 11589   0058A2  A0D8               	btfss	status,0,c
 11590   0058A4  EF56  F02C         	goto	u3941
 11591   0058A8  EF58  F02C         	goto	u3940
 11592   0058AC                     u3941:
 11593   0058AC  EF74  F02C         	goto	l1474
 11594   0058B0                     u3940:
 11595   0058B0  5027               	movf	sqrtf@t^0,w,c
 11596   0058B2  242F               	addwf	sqrtf@r^0,w,c
 11597   0058B4  6E1B               	movwf	sqrtf@s^0,c
 11598   0058B6  5028               	movf	(sqrtf@t+1)^0,w,c
 11599   0058B8  2030               	addwfc	(sqrtf@r+1)^0,w,c
 11600   0058BA  6E1C               	movwf	(sqrtf@s+1)^0,c
 11601   0058BC  5029               	movf	(sqrtf@t+2)^0,w,c
 11602   0058BE  2031               	addwfc	(sqrtf@r+2)^0,w,c
 11603   0058C0  6E1D               	movwf	(sqrtf@s+2)^0,c
 11604   0058C2  502A               	movf	(sqrtf@t+3)^0,w,c
 11605   0058C4  2032               	addwfc	(sqrtf@r+3)^0,w,c
 11606   0058C6  6E1E               	movwf	(sqrtf@s+3)^0,c
 11607   0058C8  5027               	movf	sqrtf@t^0,w,c
 11608   0058CA  5E33               	subwf	sqrtf@ix^0,f,c
 11609   0058CC  5028               	movf	(sqrtf@t+1)^0,w,c
 11610   0058CE  5A34               	subwfb	(sqrtf@ix+1)^0,f,c
 11611   0058D0  5029               	movf	(sqrtf@t+2)^0,w,c
 11612   0058D2  5A35               	subwfb	(sqrtf@ix+2)^0,f,c
 11613   0058D4  502A               	movf	(sqrtf@t+3)^0,w,c
 11614   0058D6  5A36               	subwfb	(sqrtf@ix+3)^0,f,c
 11615   0058D8  502F               	movf	sqrtf@r^0,w,c
 11616   0058DA  2623               	addwf	sqrtf@q^0,f,c
 11617   0058DC  5030               	movf	(sqrtf@r+1)^0,w,c
 11618   0058DE  2224               	addwfc	(sqrtf@q+1)^0,f,c
 11619   0058E0  5031               	movf	(sqrtf@r+2)^0,w,c
 11620   0058E2  2225               	addwfc	(sqrtf@q+2)^0,f,c
 11621   0058E4  5032               	movf	(sqrtf@r+3)^0,w,c
 11622   0058E6  2226               	addwfc	(sqrtf@q+3)^0,f,c
 11623   0058E8                     l1474:
 11624   0058E8  5033               	movf	sqrtf@ix^0,w,c
 11625   0058EA  2633               	addwf	sqrtf@ix^0,f,c
 11626   0058EC  5034               	movf	(sqrtf@ix+1)^0,w,c
 11627   0058EE  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11628   0058F0  5035               	movf	(sqrtf@ix+2)^0,w,c
 11629   0058F2  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11630   0058F4  5036               	movf	(sqrtf@ix+3)^0,w,c
 11631   0058F6  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11632   0058F8  90D8               	bcf	status,0,c
 11633   0058FA  3232               	rrcf	(sqrtf@r+3)^0,f,c
 11634   0058FC  3231               	rrcf	(sqrtf@r+2)^0,f,c
 11635   0058FE  3230               	rrcf	(sqrtf@r+1)^0,f,c
 11636   005900  322F               	rrcf	sqrtf@r^0,f,c
 11637   005902                     l4210:
 11638   005902  502F               	movf	sqrtf@r^0,w,c
 11639   005904  1030               	iorwf	(sqrtf@r+1)^0,w,c
 11640   005906  1031               	iorwf	(sqrtf@r+2)^0,w,c
 11641   005908  1032               	iorwf	(sqrtf@r+3)^0,w,c
 11642   00590A  A4D8               	btfss	status,2,c
 11643   00590C  EF8A  F02C         	goto	u3951
 11644   005910  EF8C  F02C         	goto	u3950
 11645   005914                     u3951:
 11646   005914  EF39  F02C         	goto	l4204
 11647   005918                     u3950:
 11648   005918  5033               	movf	sqrtf@ix^0,w,c
 11649   00591A  1034               	iorwf	(sqrtf@ix+1)^0,w,c
 11650   00591C  1035               	iorwf	(sqrtf@ix+2)^0,w,c
 11651   00591E  1036               	iorwf	(sqrtf@ix+3)^0,w,c
 11652   005920  B4D8               	btfsc	status,2,c
 11653   005922  EF95  F02C         	goto	u3961
 11654   005926  EF97  F02C         	goto	u3960
 11655   00592A                     u3961:
 11656   00592A  EFAB  F02C         	goto	l1476
 11657   00592E                     u3960:
 11658   00592E  0E01               	movlw	1
 11659   005930  1423               	andwf	sqrtf@q^0,w,c
 11660   005932  6E16               	movwf	??_sqrtf^0,c
 11661   005934  0E00               	movlw	0
 11662   005936  1424               	andwf	(sqrtf@q+1)^0,w,c
 11663   005938  6E17               	movwf	(??_sqrtf+1)^0,c
 11664   00593A  0E00               	movlw	0
 11665   00593C  1425               	andwf	(sqrtf@q+2)^0,w,c
 11666   00593E  6E18               	movwf	(??_sqrtf+2)^0,c
 11667   005940  0E00               	movlw	0
 11668   005942  1426               	andwf	(sqrtf@q+3)^0,w,c
 11669   005944  6E19               	movwf	(??_sqrtf+3)^0,c
 11670   005946  5016               	movf	??_sqrtf^0,w,c
 11671   005948  2623               	addwf	sqrtf@q^0,f,c
 11672   00594A  5017               	movf	(??_sqrtf+1)^0,w,c
 11673   00594C  2224               	addwfc	(sqrtf@q+1)^0,f,c
 11674   00594E  5018               	movf	(??_sqrtf+2)^0,w,c
 11675   005950  2225               	addwfc	(sqrtf@q+2)^0,f,c
 11676   005952  5019               	movf	(??_sqrtf+3)^0,w,c
 11677   005954  2226               	addwfc	(sqrtf@q+3)^0,f,c
 11678   005956                     l1476:
 11679   005956  C023  F016         	movff	sqrtf@q,??_sqrtf
 11680   00595A  C024  F017         	movff	sqrtf@q+1,??_sqrtf+1
 11681   00595E  C025  F018         	movff	sqrtf@q+2,??_sqrtf+2
 11682   005962  C026  F019         	movff	sqrtf@q+3,??_sqrtf+3
 11683   005966  3419               	rlcf	(??_sqrtf+3)^0,w,c
 11684   005968  3219               	rrcf	(??_sqrtf+3)^0,f,c
 11685   00596A  3218               	rrcf	(??_sqrtf+2)^0,f,c
 11686   00596C  3217               	rrcf	(??_sqrtf+1)^0,f,c
 11687   00596E  3216               	rrcf	??_sqrtf^0,f,c
 11688   005970  0E00               	movlw	0
 11689   005972  2416               	addwf	??_sqrtf^0,w,c
 11690   005974  6E33               	movwf	sqrtf@ix^0,c
 11691   005976  0E00               	movlw	0
 11692   005978  2017               	addwfc	(??_sqrtf+1)^0,w,c
 11693   00597A  6E34               	movwf	(sqrtf@ix+1)^0,c
 11694   00597C  0E00               	movlw	0
 11695   00597E  2018               	addwfc	(??_sqrtf+2)^0,w,c
 11696   005980  6E35               	movwf	(sqrtf@ix+2)^0,c
 11697   005982  0E3F               	movlw	63
 11698   005984  2019               	addwfc	(??_sqrtf+3)^0,w,c
 11699   005986  6E36               	movwf	(sqrtf@ix+3)^0,c
 11700   005988  C02B  F016         	movff	sqrtf@m,??_sqrtf
 11701   00598C  C02C  F017         	movff	sqrtf@m+1,??_sqrtf+1
 11702   005990  C02D  F018         	movff	sqrtf@m+2,??_sqrtf+2
 11703   005994  C02E  F019         	movff	sqrtf@m+3,??_sqrtf+3
 11704   005998  0E17               	movlw	23
 11705   00599A                     u3975:
 11706   00599A  90D8               	bcf	status,0,c
 11707   00599C  3616               	rlcf	??_sqrtf^0,f,c
 11708   00599E  3617               	rlcf	(??_sqrtf+1)^0,f,c
 11709   0059A0  3618               	rlcf	(??_sqrtf+2)^0,f,c
 11710   0059A2  3619               	rlcf	(??_sqrtf+3)^0,f,c
 11711   0059A4  2EE8               	decfsz	wreg,f,c
 11712   0059A6  EFCD  F02C         	goto	u3975
 11713   0059AA  5016               	movf	??_sqrtf^0,w,c
 11714   0059AC  2633               	addwf	sqrtf@ix^0,f,c
 11715   0059AE  5017               	movf	(??_sqrtf+1)^0,w,c
 11716   0059B0  2234               	addwfc	(sqrtf@ix+1)^0,f,c
 11717   0059B2  5018               	movf	(??_sqrtf+2)^0,w,c
 11718   0059B4  2235               	addwfc	(sqrtf@ix+2)^0,f,c
 11719   0059B6  5019               	movf	(??_sqrtf+3)^0,w,c
 11720   0059B8  2236               	addwfc	(sqrtf@ix+3)^0,f,c
 11721   0059BA  EF39  F02B         	goto	l4164
 11722   0059BE                     l1463:
 11723   0059BE  0012               	return		;funcret
 11724   0059C0                     __end_of_sqrtf:
 11725                           	callstack 0
 11726                           
 11727 ;; *************** function _scalbnf *****************
 11728 ;; Defined at:
 11729 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\scalbnf.c"
 11730 ;; Parameters:    Size  Location     Type
 11731 ;;  x               4   42[COMRAM] float 
 11732 ;;  n               2   46[COMRAM] int 
 11733 ;; Auto vars:     Size  Location     Type
 11734 ;;  y               4   56[COMRAM] float 
 11735 ;;  u               4   52[COMRAM] struct .
 11736 ;; Return value:  Size  Location     Type
 11737 ;;                  4   42[COMRAM] float 
 11738 ;; Registers used:
 11739 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11740 ;; Tracked objects:
 11741 ;;		On entry : 0/0
 11742 ;;		On exit  : 0/0
 11743 ;;		Unchanged: 0/0
 11744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11745 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11746 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11747 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11748 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11749 ;;Total ram usage:       18 bytes
 11750 ;; Hardware stack levels used: 1
 11751 ;; Hardware stack levels required when called: 3
 11752 ;; This function calls:
 11753 ;;		___flmul
 11754 ;; This function is called by:
 11755 ;;		_powf
 11756 ;; This function uses a non-reentrant model
 11757 ;;
 11758                           
 11759                           	psect	text31
 11760   005D5A                     __ptext31:
 11761                           	callstack 0
 11762   005D5A                     _scalbnf:
 11763                           	callstack 25
 11764   005D5A  C02B  F039         	movff	scalbnf@x,scalbnf@y
 11765   005D5E  C02C  F03A         	movff	scalbnf@x+1,scalbnf@y+1
 11766   005D62  C02D  F03B         	movff	scalbnf@x+2,scalbnf@y+2
 11767   005D66  C02E  F03C         	movff	scalbnf@x+3,scalbnf@y+3
 11768   005D6A  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11769   005D6C  EFC1  F02E         	goto	u4491
 11770   005D70  5030               	movf	(scalbnf@n+1)^0,w,c
 11771   005D72  E109               	bnz	u4490
 11772   005D74  0E80               	movlw	128
 11773   005D76  5C2F               	subwf	scalbnf@n^0,w,c
 11774   005D78  A0D8               	btfss	status,0,c
 11775   005D7A  EFC1  F02E         	goto	u4491
 11776   005D7E  EFC3  F02E         	goto	u4490
 11777   005D82                     u4491:
 11778   005D82  EF21  F02F         	goto	l4524
 11779   005D86                     u4490:
 11780   005D86  C039  F012         	movff	scalbnf@y,___flmul@b
 11781   005D8A  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11782   005D8E  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11783   005D92  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11784   005D96  0E00               	movlw	0
 11785   005D98  6E16               	movwf	___flmul@a^0,c
 11786   005D9A  0E00               	movlw	0
 11787   005D9C  6E17               	movwf	(___flmul@a+1)^0,c
 11788   005D9E  0E00               	movlw	0
 11789   005DA0  6E18               	movwf	(___flmul@a+2)^0,c
 11790   005DA2  0E7F               	movlw	127
 11791   005DA4  6E19               	movwf	(___flmul@a+3)^0,c
 11792   005DA6  ECDC  F028         	call	___flmul	;wreg free
 11793   005DAA  C012  F039         	movff	?___flmul,scalbnf@y
 11794   005DAE  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11795   005DB2  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11796   005DB6  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11797   005DBA  0E81               	movlw	129
 11798   005DBC  262F               	addwf	scalbnf@n^0,f,c
 11799   005DBE  0EFF               	movlw	255
 11800   005DC0  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11801   005DC2  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11802   005DC4  EFED  F02E         	goto	u4501
 11803   005DC8  5030               	movf	(scalbnf@n+1)^0,w,c
 11804   005DCA  E109               	bnz	u4500
 11805   005DCC  0E80               	movlw	128
 11806   005DCE  5C2F               	subwf	scalbnf@n^0,w,c
 11807   005DD0  A0D8               	btfss	status,0,c
 11808   005DD2  EFED  F02E         	goto	u4501
 11809   005DD6  EFEF  F02E         	goto	u4500
 11810   005DDA                     u4501:
 11811   005DDA  EF8B  F02F         	goto	l4540
 11812   005DDE                     u4500:
 11813   005DDE  C039  F012         	movff	scalbnf@y,___flmul@b
 11814   005DE2  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11815   005DE6  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11816   005DEA  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11817   005DEE  0E00               	movlw	0
 11818   005DF0  6E16               	movwf	___flmul@a^0,c
 11819   005DF2  0E00               	movlw	0
 11820   005DF4  6E17               	movwf	(___flmul@a+1)^0,c
 11821   005DF6  0E00               	movlw	0
 11822   005DF8  6E18               	movwf	(___flmul@a+2)^0,c
 11823   005DFA  0E7F               	movlw	127
 11824   005DFC  6E19               	movwf	(___flmul@a+3)^0,c
 11825   005DFE  ECDC  F028         	call	___flmul	;wreg free
 11826   005E02  C012  F039         	movff	?___flmul,scalbnf@y
 11827   005E06  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11828   005E0A  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11829   005E0E  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11830   005E12  0E81               	movlw	129
 11831   005E14  262F               	addwf	scalbnf@n^0,f,c
 11832   005E16  0EFF               	movlw	255
 11833   005E18  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11834   005E1A  BE30               	btfsc	(scalbnf@n+1)^0,7,c
 11835   005E1C  EF19  F02F         	goto	u4511
 11836   005E20  5030               	movf	(scalbnf@n+1)^0,w,c
 11837   005E22  E109               	bnz	u4510
 11838   005E24  0E80               	movlw	128
 11839   005E26  5C2F               	subwf	scalbnf@n^0,w,c
 11840   005E28  A0D8               	btfss	status,0,c
 11841   005E2A  EF19  F02F         	goto	u4511
 11842   005E2E  EF1B  F02F         	goto	u4510
 11843   005E32                     u4511:
 11844   005E32  EF8B  F02F         	goto	l4540
 11845   005E36                     u4510:
 11846   005E36  0E00               	movlw	0
 11847   005E38  6E30               	movwf	(scalbnf@n+1)^0,c
 11848   005E3A  0E7F               	movlw	127
 11849   005E3C  6E2F               	movwf	scalbnf@n^0,c
 11850   005E3E  EF8B  F02F         	goto	l4540
 11851   005E42                     l4524:
 11852   005E42  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11853   005E44  EF2D  F02F         	goto	u4521
 11854   005E48  0E82               	movlw	130
 11855   005E4A  5C2F               	subwf	scalbnf@n^0,w,c
 11856   005E4C  0EFF               	movlw	255
 11857   005E4E  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11858   005E50  B0D8               	btfsc	status,0,c
 11859   005E52  EF2D  F02F         	goto	u4521
 11860   005E56  EF2F  F02F         	goto	u4520
 11861   005E5A                     u4521:
 11862   005E5A  EF8B  F02F         	goto	l4540
 11863   005E5E                     u4520:
 11864   005E5E  C039  F012         	movff	scalbnf@y,___flmul@b
 11865   005E62  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11866   005E66  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11867   005E6A  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11868   005E6E  0E00               	movlw	0
 11869   005E70  6E16               	movwf	___flmul@a^0,c
 11870   005E72  0E00               	movlw	0
 11871   005E74  6E17               	movwf	(___flmul@a+1)^0,c
 11872   005E76  0E80               	movlw	128
 11873   005E78  6E18               	movwf	(___flmul@a+2)^0,c
 11874   005E7A  0E0C               	movlw	12
 11875   005E7C  6E19               	movwf	(___flmul@a+3)^0,c
 11876   005E7E  ECDC  F028         	call	___flmul	;wreg free
 11877   005E82  C012  F039         	movff	?___flmul,scalbnf@y
 11878   005E86  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11879   005E8A  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11880   005E8E  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11881   005E92  0E66               	movlw	102
 11882   005E94  262F               	addwf	scalbnf@n^0,f,c
 11883   005E96  0E00               	movlw	0
 11884   005E98  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11885   005E9A  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11886   005E9C  EF59  F02F         	goto	u4531
 11887   005EA0  0E82               	movlw	130
 11888   005EA2  5C2F               	subwf	scalbnf@n^0,w,c
 11889   005EA4  0EFF               	movlw	255
 11890   005EA6  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11891   005EA8  B0D8               	btfsc	status,0,c
 11892   005EAA  EF59  F02F         	goto	u4531
 11893   005EAE  EF5B  F02F         	goto	u4530
 11894   005EB2                     u4531:
 11895   005EB2  EF8B  F02F         	goto	l4540
 11896   005EB6                     u4530:
 11897   005EB6  C039  F012         	movff	scalbnf@y,___flmul@b
 11898   005EBA  C03A  F013         	movff	scalbnf@y+1,___flmul@b+1
 11899   005EBE  C03B  F014         	movff	scalbnf@y+2,___flmul@b+2
 11900   005EC2  C03C  F015         	movff	scalbnf@y+3,___flmul@b+3
 11901   005EC6  0E00               	movlw	0
 11902   005EC8  6E16               	movwf	___flmul@a^0,c
 11903   005ECA  0E00               	movlw	0
 11904   005ECC  6E17               	movwf	(___flmul@a+1)^0,c
 11905   005ECE  0E80               	movlw	128
 11906   005ED0  6E18               	movwf	(___flmul@a+2)^0,c
 11907   005ED2  0E0C               	movlw	12
 11908   005ED4  6E19               	movwf	(___flmul@a+3)^0,c
 11909   005ED6  ECDC  F028         	call	___flmul	;wreg free
 11910   005EDA  C012  F039         	movff	?___flmul,scalbnf@y
 11911   005EDE  C013  F03A         	movff	?___flmul+1,scalbnf@y+1
 11912   005EE2  C014  F03B         	movff	?___flmul+2,scalbnf@y+2
 11913   005EE6  C015  F03C         	movff	?___flmul+3,scalbnf@y+3
 11914   005EEA  0E66               	movlw	102
 11915   005EEC  262F               	addwf	scalbnf@n^0,f,c
 11916   005EEE  0E00               	movlw	0
 11917   005EF0  2230               	addwfc	(scalbnf@n+1)^0,f,c
 11918   005EF2  AE30               	btfss	(scalbnf@n+1)^0,7,c
 11919   005EF4  EF85  F02F         	goto	u4541
 11920   005EF8  0E82               	movlw	130
 11921   005EFA  5C2F               	subwf	scalbnf@n^0,w,c
 11922   005EFC  0EFF               	movlw	255
 11923   005EFE  5830               	subwfb	(scalbnf@n+1)^0,w,c
 11924   005F00  B0D8               	btfsc	status,0,c
 11925   005F02  EF85  F02F         	goto	u4541
 11926   005F06  EF87  F02F         	goto	u4540
 11927   005F0A                     u4541:
 11928   005F0A  EF8B  F02F         	goto	l4540
 11929   005F0E                     u4540:
 11930   005F0E  0EFF               	movlw	255
 11931   005F10  6E30               	movwf	(scalbnf@n+1)^0,c
 11932   005F12  0E82               	movlw	130
 11933   005F14  6E2F               	movwf	scalbnf@n^0,c
 11934   005F16                     l4540:
 11935   005F16  0E7F               	movlw	127
 11936   005F18  242F               	addwf	scalbnf@n^0,w,c
 11937   005F1A  6E31               	movwf	??_scalbnf^0,c
 11938   005F1C  0E00               	movlw	0
 11939   005F1E  2030               	addwfc	(scalbnf@n+1)^0,w,c
 11940   005F20  6E32               	movwf	(??_scalbnf+1)^0,c
 11941   005F22  6A33               	clrf	(??_scalbnf+2)^0,c
 11942   005F24  6A34               	clrf	(??_scalbnf+3)^0,c
 11943   005F26  0E17               	movlw	23
 11944   005F28                     u4555:
 11945   005F28  90D8               	bcf	status,0,c
 11946   005F2A  3631               	rlcf	??_scalbnf^0,f,c
 11947   005F2C  3632               	rlcf	(??_scalbnf+1)^0,f,c
 11948   005F2E  3633               	rlcf	(??_scalbnf+2)^0,f,c
 11949   005F30  3634               	rlcf	(??_scalbnf+3)^0,f,c
 11950   005F32  2EE8               	decfsz	wreg,f,c
 11951   005F34  EF94  F02F         	goto	u4555
 11952   005F38  C031  F035         	movff	??_scalbnf,scalbnf@u
 11953   005F3C  C032  F036         	movff	??_scalbnf+1,scalbnf@u+1
 11954   005F40  C033  F037         	movff	??_scalbnf+2,scalbnf@u+2
 11955   005F44  C034  F038         	movff	??_scalbnf+3,scalbnf@u+3
 11956   005F48  C035  F012         	movff	scalbnf@u,___flmul@b
 11957   005F4C  C036  F013         	movff	scalbnf@u+1,___flmul@b+1
 11958   005F50  C037  F014         	movff	scalbnf@u+2,___flmul@b+2
 11959   005F54  C038  F015         	movff	scalbnf@u+3,___flmul@b+3
 11960   005F58  C039  F016         	movff	scalbnf@y,___flmul@a
 11961   005F5C  C03A  F017         	movff	scalbnf@y+1,___flmul@a+1
 11962   005F60  C03B  F018         	movff	scalbnf@y+2,___flmul@a+2
 11963   005F64  C03C  F019         	movff	scalbnf@y+3,___flmul@a+3
 11964   005F68  ECDC  F028         	call	___flmul	;wreg free
 11965   005F6C  C012  F02B         	movff	?___flmul,scalbnf@x
 11966   005F70  C013  F02C         	movff	?___flmul+1,scalbnf@x+1
 11967   005F74  C014  F02D         	movff	?___flmul+2,scalbnf@x+2
 11968   005F78  C015  F02E         	movff	?___flmul+3,scalbnf@x+3
 11969   005F7C  C02B  F02B         	movff	scalbnf@x,?_scalbnf
 11970   005F80  C02C  F02C         	movff	scalbnf@x+1,?_scalbnf+1
 11971   005F84  C02D  F02D         	movff	scalbnf@x+2,?_scalbnf+2
 11972   005F88  C02E  F02E         	movff	scalbnf@x+3,?_scalbnf+3
 11973   005F8C  0012               	return		;funcret
 11974   005F8E                     __end_of_scalbnf:
 11975                           	callstack 0
 11976                           
 11977 ;; *************** function ___flmul *****************
 11978 ;; Defined at:
 11979 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 11980 ;; Parameters:    Size  Location     Type
 11981 ;;  b               4   17[COMRAM] float 
 11982 ;;  a               4   21[COMRAM] float 
 11983 ;; Auto vars:     Size  Location     Type
 11984 ;;  prod            4   36[COMRAM] struct .
 11985 ;;  grs             4   30[COMRAM] unsigned long 
 11986 ;;  temp            2   40[COMRAM] struct .
 11987 ;;  bexp            1   35[COMRAM] unsigned char 
 11988 ;;  aexp            1   34[COMRAM] unsigned char 
 11989 ;;  sign            1   29[COMRAM] unsigned char 
 11990 ;; Return value:  Size  Location     Type
 11991 ;;                  4   17[COMRAM] unsigned char 
 11992 ;; Registers used:
 11993 ;;		wreg, status,2, status,0, prodl, prodh
 11994 ;; Tracked objects:
 11995 ;;		On entry : 0/0
 11996 ;;		On exit  : 0/0
 11997 ;;		Unchanged: 0/0
 11998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11999 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12000 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12001 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12002 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12003 ;;Total ram usage:       25 bytes
 12004 ;; Hardware stack levels used: 1
 12005 ;; Hardware stack levels required when called: 2
 12006 ;; This function calls:
 12007 ;;		Nothing
 12008 ;; This function is called by:
 12009 ;;		_powf
 12010 ;;		_scalbnf
 12011 ;; This function uses a non-reentrant model
 12012 ;;
 12013                           
 12014                           	psect	text32
 12015   0051B8                     __ptext32:
 12016                           	callstack 0
 12017   0051B8                     ___flmul:
 12018                           	callstack 25
 12019   0051B8  5015               	movf	(___flmul@b+3)^0,w,c
 12020   0051BA  0B80               	andlw	128
 12021   0051BC  6E1E               	movwf	___flmul@sign^0,c
 12022   0051BE  5015               	movf	(___flmul@b+3)^0,w,c
 12023   0051C0  2415               	addwf	(___flmul@b+3)^0,w,c
 12024   0051C2  6E24               	movwf	___flmul@bexp^0,c
 12025   0051C4  AE14               	btfss	(___flmul@b+2)^0,7,c
 12026   0051C6  EFE7  F028         	goto	u3431
 12027   0051CA  EFE9  F028         	goto	u3430
 12028   0051CE                     u3431:
 12029   0051CE  EFEA  F028         	goto	l3880
 12030   0051D2                     u3430:
 12031   0051D2  8024               	bsf	___flmul@bexp^0,0,c
 12032   0051D4                     l3880:
 12033   0051D4  5024               	movf	___flmul@bexp^0,w,c
 12034   0051D6  B4D8               	btfsc	status,2,c
 12035   0051D8  EFF0  F028         	goto	u3441
 12036   0051DC  EFF2  F028         	goto	u3440
 12037   0051E0                     u3441:
 12038   0051E0  EF05  F029         	goto	l3888
 12039   0051E4                     u3440:
 12040   0051E4  2824               	incf	___flmul@bexp^0,w,c
 12041   0051E6  A4D8               	btfss	status,2,c
 12042   0051E8  EFF8  F028         	goto	u3451
 12043   0051EC  EFFA  F028         	goto	u3450
 12044   0051F0                     u3451:
 12045   0051F0  EF02  F029         	goto	l3886
 12046   0051F4                     u3450:
 12047   0051F4  0E00               	movlw	0
 12048   0051F6  6E12               	movwf	___flmul@b^0,c
 12049   0051F8  0E00               	movlw	0
 12050   0051FA  6E13               	movwf	(___flmul@b+1)^0,c
 12051   0051FC  0E00               	movlw	0
 12052   0051FE  6E14               	movwf	(___flmul@b+2)^0,c
 12053   005200  0E00               	movlw	0
 12054   005202  6E15               	movwf	(___flmul@b+3)^0,c
 12055   005204                     l3886:
 12056   005204  8E14               	bsf	(___flmul@b+2)^0,7,c
 12057   005206  EF0D  F029         	goto	l3890
 12058   00520A                     l3888:
 12059   00520A  0E00               	movlw	0
 12060   00520C  6E12               	movwf	___flmul@b^0,c
 12061   00520E  0E00               	movlw	0
 12062   005210  6E13               	movwf	(___flmul@b+1)^0,c
 12063   005212  0E00               	movlw	0
 12064   005214  6E14               	movwf	(___flmul@b+2)^0,c
 12065   005216  0E00               	movlw	0
 12066   005218  6E15               	movwf	(___flmul@b+3)^0,c
 12067   00521A                     l3890:
 12068   00521A  5019               	movf	(___flmul@a+3)^0,w,c
 12069   00521C  0B80               	andlw	128
 12070   00521E  1A1E               	xorwf	___flmul@sign^0,f,c
 12071   005220  5019               	movf	(___flmul@a+3)^0,w,c
 12072   005222  2419               	addwf	(___flmul@a+3)^0,w,c
 12073   005224  6E23               	movwf	___flmul@aexp^0,c
 12074   005226  AE18               	btfss	(___flmul@a+2)^0,7,c
 12075   005228  EF18  F029         	goto	u3461
 12076   00522C  EF1A  F029         	goto	u3460
 12077   005230                     u3461:
 12078   005230  EF1B  F029         	goto	l3898
 12079   005234                     u3460:
 12080   005234  8023               	bsf	___flmul@aexp^0,0,c
 12081   005236                     l3898:
 12082   005236  5023               	movf	___flmul@aexp^0,w,c
 12083   005238  B4D8               	btfsc	status,2,c
 12084   00523A  EF21  F029         	goto	u3471
 12085   00523E  EF23  F029         	goto	u3470
 12086   005242                     u3471:
 12087   005242  EF36  F029         	goto	l3906
 12088   005246                     u3470:
 12089   005246  2823               	incf	___flmul@aexp^0,w,c
 12090   005248  A4D8               	btfss	status,2,c
 12091   00524A  EF29  F029         	goto	u3481
 12092   00524E  EF2B  F029         	goto	u3480
 12093   005252                     u3481:
 12094   005252  EF33  F029         	goto	l3904
 12095   005256                     u3480:
 12096   005256  0E00               	movlw	0
 12097   005258  6E16               	movwf	___flmul@a^0,c
 12098   00525A  0E00               	movlw	0
 12099   00525C  6E17               	movwf	(___flmul@a+1)^0,c
 12100   00525E  0E00               	movlw	0
 12101   005260  6E18               	movwf	(___flmul@a+2)^0,c
 12102   005262  0E00               	movlw	0
 12103   005264  6E19               	movwf	(___flmul@a+3)^0,c
 12104   005266                     l3904:
 12105   005266  8E18               	bsf	(___flmul@a+2)^0,7,c
 12106   005268  EF3E  F029         	goto	l1176
 12107   00526C                     l3906:
 12108   00526C  0E00               	movlw	0
 12109   00526E  6E16               	movwf	___flmul@a^0,c
 12110   005270  0E00               	movlw	0
 12111   005272  6E17               	movwf	(___flmul@a+1)^0,c
 12112   005274  0E00               	movlw	0
 12113   005276  6E18               	movwf	(___flmul@a+2)^0,c
 12114   005278  0E00               	movlw	0
 12115   00527A  6E19               	movwf	(___flmul@a+3)^0,c
 12116   00527C                     l1176:
 12117   00527C  5023               	movf	___flmul@aexp^0,w,c
 12118   00527E  B4D8               	btfsc	status,2,c
 12119   005280  EF44  F029         	goto	u3491
 12120   005284  EF46  F029         	goto	u3490
 12121   005288                     u3491:
 12122   005288  EF4E  F029         	goto	l3910
 12123   00528C                     u3490:
 12124   00528C  5024               	movf	___flmul@bexp^0,w,c
 12125   00528E  A4D8               	btfss	status,2,c
 12126   005290  EF4C  F029         	goto	u3501
 12127   005294  EF4E  F029         	goto	u3500
 12128   005298                     u3501:
 12129   005298  EF58  F029         	goto	l3914
 12130   00529C                     u3500:
 12131   00529C                     l3910:
 12132   00529C  0E00               	movlw	0
 12133   00529E  6E12               	movwf	?___flmul^0,c
 12134   0052A0  0E00               	movlw	0
 12135   0052A2  6E13               	movwf	(?___flmul+1)^0,c
 12136   0052A4  0E00               	movlw	0
 12137   0052A6  6E14               	movwf	(?___flmul+2)^0,c
 12138   0052A8  0E00               	movlw	0
 12139   0052AA  6E15               	movwf	(?___flmul+3)^0,c
 12140   0052AC  EFF0  F02A         	goto	l1180
 12141   0052B0                     l3914:
 12142   0052B0  5018               	movf	(___flmul@a+2)^0,w,c
 12143   0052B2  0212               	mulwf	___flmul@b^0,c
 12144   0052B4  CFF3 F029          	movff	prodl,___flmul@temp
 12145   0052B8  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12146   0052BC  5029               	movf	___flmul@temp^0,w,c
 12147   0052BE  6E1F               	movwf	___flmul@grs^0,c
 12148   0052C0  6A20               	clrf	(___flmul@grs+1)^0,c
 12149   0052C2  6A21               	clrf	(___flmul@grs+2)^0,c
 12150   0052C4  6A22               	clrf	(___flmul@grs+3)^0,c
 12151   0052C6  502A               	movf	(___flmul@temp+1)^0,w,c
 12152   0052C8  6E25               	movwf	___flmul@prod^0,c
 12153   0052CA  6A26               	clrf	(___flmul@prod+1)^0,c
 12154   0052CC  6A27               	clrf	(___flmul@prod+2)^0,c
 12155   0052CE  6A28               	clrf	(___flmul@prod+3)^0,c
 12156   0052D0  5017               	movf	(___flmul@a+1)^0,w,c
 12157   0052D2  0213               	mulwf	(___flmul@b+1)^0,c
 12158   0052D4  CFF3 F029          	movff	prodl,___flmul@temp
 12159   0052D8  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12160   0052DC  5029               	movf	___flmul@temp^0,w,c
 12161   0052DE  261F               	addwf	___flmul@grs^0,f,c
 12162   0052E0  0E00               	movlw	0
 12163   0052E2  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12164   0052E4  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12165   0052E6  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12166   0052E8  502A               	movf	(___flmul@temp+1)^0,w,c
 12167   0052EA  2625               	addwf	___flmul@prod^0,f,c
 12168   0052EC  0E00               	movlw	0
 12169   0052EE  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12170   0052F0  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12171   0052F2  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12172   0052F4  5016               	movf	___flmul@a^0,w,c
 12173   0052F6  0214               	mulwf	(___flmul@b+2)^0,c
 12174   0052F8  CFF3 F029          	movff	prodl,___flmul@temp
 12175   0052FC  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12176   005300  5029               	movf	___flmul@temp^0,w,c
 12177   005302  261F               	addwf	___flmul@grs^0,f,c
 12178   005304  0E00               	movlw	0
 12179   005306  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12180   005308  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12181   00530A  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12182   00530C  502A               	movf	(___flmul@temp+1)^0,w,c
 12183   00530E  2625               	addwf	___flmul@prod^0,f,c
 12184   005310  0E00               	movlw	0
 12185   005312  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12186   005314  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12187   005316  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12188   005318  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12189   00531C  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12190   005320  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12191   005324  6A1F               	clrf	___flmul@grs^0,c
 12192   005326  5016               	movf	___flmul@a^0,w,c
 12193   005328  0213               	mulwf	(___flmul@b+1)^0,c
 12194   00532A  CFF3 F029          	movff	prodl,___flmul@temp
 12195   00532E  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12196   005332  5029               	movf	___flmul@temp^0,w,c
 12197   005334  261F               	addwf	___flmul@grs^0,f,c
 12198   005336  502A               	movf	(___flmul@temp+1)^0,w,c
 12199   005338  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12200   00533A  0E00               	movlw	0
 12201   00533C  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12202   00533E  0E00               	movlw	0
 12203   005340  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12204   005342  5017               	movf	(___flmul@a+1)^0,w,c
 12205   005344  0212               	mulwf	___flmul@b^0,c
 12206   005346  CFF3 F029          	movff	prodl,___flmul@temp
 12207   00534A  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12208   00534E  5029               	movf	___flmul@temp^0,w,c
 12209   005350  261F               	addwf	___flmul@grs^0,f,c
 12210   005352  502A               	movf	(___flmul@temp+1)^0,w,c
 12211   005354  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12212   005356  0E00               	movlw	0
 12213   005358  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12214   00535A  0E00               	movlw	0
 12215   00535C  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12216   00535E  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12217   005362  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12218   005366  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12219   00536A  6A1F               	clrf	___flmul@grs^0,c
 12220   00536C  5016               	movf	___flmul@a^0,w,c
 12221   00536E  0212               	mulwf	___flmul@b^0,c
 12222   005370  CFF3 F029          	movff	prodl,___flmul@temp
 12223   005374  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12224   005378  5029               	movf	___flmul@temp^0,w,c
 12225   00537A  261F               	addwf	___flmul@grs^0,f,c
 12226   00537C  502A               	movf	(___flmul@temp+1)^0,w,c
 12227   00537E  2220               	addwfc	(___flmul@grs+1)^0,f,c
 12228   005380  0E00               	movlw	0
 12229   005382  2221               	addwfc	(___flmul@grs+2)^0,f,c
 12230   005384  0E00               	movlw	0
 12231   005386  2222               	addwfc	(___flmul@grs+3)^0,f,c
 12232   005388  5018               	movf	(___flmul@a+2)^0,w,c
 12233   00538A  0213               	mulwf	(___flmul@b+1)^0,c
 12234   00538C  CFF3 F029          	movff	prodl,___flmul@temp
 12235   005390  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12236   005394  5029               	movf	___flmul@temp^0,w,c
 12237   005396  2625               	addwf	___flmul@prod^0,f,c
 12238   005398  502A               	movf	(___flmul@temp+1)^0,w,c
 12239   00539A  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12240   00539C  0E00               	movlw	0
 12241   00539E  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12242   0053A0  0E00               	movlw	0
 12243   0053A2  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12244   0053A4  5017               	movf	(___flmul@a+1)^0,w,c
 12245   0053A6  0214               	mulwf	(___flmul@b+2)^0,c
 12246   0053A8  CFF3 F029          	movff	prodl,___flmul@temp
 12247   0053AC  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12248   0053B0  5029               	movf	___flmul@temp^0,w,c
 12249   0053B2  2625               	addwf	___flmul@prod^0,f,c
 12250   0053B4  502A               	movf	(___flmul@temp+1)^0,w,c
 12251   0053B6  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12252   0053B8  0E00               	movlw	0
 12253   0053BA  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12254   0053BC  0E00               	movlw	0
 12255   0053BE  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12256   0053C0  5018               	movf	(___flmul@a+2)^0,w,c
 12257   0053C2  0214               	mulwf	(___flmul@b+2)^0,c
 12258   0053C4  CFF3 F029          	movff	prodl,___flmul@temp
 12259   0053C8  CFF4 F02A          	movff	prodh,___flmul@temp+1
 12260   0053CC  5029               	movf	___flmul@temp^0,w,c
 12261   0053CE  6E1A               	movwf	??___flmul^0,c
 12262   0053D0  502A               	movf	(___flmul@temp+1)^0,w,c
 12263   0053D2  6E1B               	movwf	(??___flmul+1)^0,c
 12264   0053D4  6A1C               	clrf	(??___flmul+2)^0,c
 12265   0053D6  6A1D               	clrf	(??___flmul+3)^0,c
 12266   0053D8  C01C  F01D         	movff	??___flmul+2,??___flmul+3
 12267   0053DC  C01B  F01C         	movff	??___flmul+1,??___flmul+2
 12268   0053E0  C01A  F01B         	movff	??___flmul,??___flmul+1
 12269   0053E4  6A1A               	clrf	??___flmul^0,c
 12270   0053E6  501A               	movf	??___flmul^0,w,c
 12271   0053E8  2625               	addwf	___flmul@prod^0,f,c
 12272   0053EA  501B               	movf	(??___flmul+1)^0,w,c
 12273   0053EC  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12274   0053EE  501C               	movf	(??___flmul+2)^0,w,c
 12275   0053F0  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12276   0053F2  501D               	movf	(??___flmul+3)^0,w,c
 12277   0053F4  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12278   0053F6  C01F  F01A         	movff	___flmul@grs,??___flmul
 12279   0053FA  C020  F01B         	movff	___flmul@grs+1,??___flmul+1
 12280   0053FE  C021  F01C         	movff	___flmul@grs+2,??___flmul+2
 12281   005402  C022  F01D         	movff	___flmul@grs+3,??___flmul+3
 12282   005406  0E19               	movlw	25
 12283   005408  EF0B  F02A         	goto	u3510
 12284   00540C                     u3515:
 12285   00540C  90D8               	bcf	status,0,c
 12286   00540E  321D               	rrcf	(??___flmul+3)^0,f,c
 12287   005410  321C               	rrcf	(??___flmul+2)^0,f,c
 12288   005412  321B               	rrcf	(??___flmul+1)^0,f,c
 12289   005414  321A               	rrcf	??___flmul^0,f,c
 12290   005416                     u3510:
 12291   005416  2EE8               	decfsz	wreg,f,c
 12292   005418  EF06  F02A         	goto	u3515
 12293   00541C  501A               	movf	??___flmul^0,w,c
 12294   00541E  2625               	addwf	___flmul@prod^0,f,c
 12295   005420  501B               	movf	(??___flmul+1)^0,w,c
 12296   005422  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12297   005424  501C               	movf	(??___flmul+2)^0,w,c
 12298   005426  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12299   005428  501D               	movf	(??___flmul+3)^0,w,c
 12300   00542A  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12301   00542C  C021  F022         	movff	___flmul@grs+2,___flmul@grs+3
 12302   005430  C020  F021         	movff	___flmul@grs+1,___flmul@grs+2
 12303   005434  C01F  F020         	movff	___flmul@grs,___flmul@grs+1
 12304   005438  6A1F               	clrf	___flmul@grs^0,c
 12305   00543A  5023               	movf	___flmul@aexp^0,w,c
 12306   00543C  C024  F01A         	movff	___flmul@bexp,??___flmul
 12307   005440  6A1B               	clrf	(??___flmul+1)^0,c
 12308   005442  261A               	addwf	??___flmul^0,f,c
 12309   005444  0E00               	movlw	0
 12310   005446  221B               	addwfc	(??___flmul+1)^0,f,c
 12311   005448  0E82               	movlw	130
 12312   00544A  241A               	addwf	??___flmul^0,w,c
 12313   00544C  6E29               	movwf	___flmul@temp^0,c
 12314   00544E  0EFF               	movlw	255
 12315   005450  201B               	addwfc	(??___flmul+1)^0,w,c
 12316   005452  6E2A               	movwf	(___flmul@temp+1)^0,c
 12317   005454  EF41  F02A         	goto	l3962
 12318   005458                     l3956:
 12319   005458  90D8               	bcf	status,0,c
 12320   00545A  3625               	rlcf	___flmul@prod^0,f,c
 12321   00545C  3626               	rlcf	(___flmul@prod+1)^0,f,c
 12322   00545E  3627               	rlcf	(___flmul@prod+2)^0,f,c
 12323   005460  3628               	rlcf	(___flmul@prod+3)^0,f,c
 12324   005462  AE22               	btfss	(___flmul@grs+3)^0,7,c
 12325   005464  EF36  F02A         	goto	u3521
 12326   005468  EF38  F02A         	goto	u3520
 12327   00546C                     u3521:
 12328   00546C  EF39  F02A         	goto	l1183
 12329   005470                     u3520:
 12330   005470  8025               	bsf	___flmul@prod^0,0,c
 12331   005472                     l1183:
 12332   005472  90D8               	bcf	status,0,c
 12333   005474  361F               	rlcf	___flmul@grs^0,f,c
 12334   005476  3620               	rlcf	(___flmul@grs+1)^0,f,c
 12335   005478  3621               	rlcf	(___flmul@grs+2)^0,f,c
 12336   00547A  3622               	rlcf	(___flmul@grs+3)^0,f,c
 12337   00547C  0629               	decf	___flmul@temp^0,f,c
 12338   00547E  A0D8               	btfss	status,0,c
 12339   005480  062A               	decf	(___flmul@temp+1)^0,f,c
 12340   005482                     l3962:
 12341   005482  AE27               	btfss	(___flmul@prod+2)^0,7,c
 12342   005484  EF46  F02A         	goto	u3531
 12343   005488  EF48  F02A         	goto	u3530
 12344   00548C                     u3531:
 12345   00548C  EF2C  F02A         	goto	l3956
 12346   005490                     u3530:
 12347   005490  0E00               	movlw	0
 12348   005492  6E23               	movwf	___flmul@aexp^0,c
 12349   005494  AE22               	btfss	(___flmul@grs+3)^0,7,c
 12350   005496  EF4F  F02A         	goto	u3541
 12351   00549A  EF51  F02A         	goto	u3540
 12352   00549E                     u3541:
 12353   00549E  EF75  F02A         	goto	l1185
 12354   0054A2                     u3540:
 12355   0054A2  0EFF               	movlw	255
 12356   0054A4  141F               	andwf	___flmul@grs^0,w,c
 12357   0054A6  6E1A               	movwf	??___flmul^0,c
 12358   0054A8  0EFF               	movlw	255
 12359   0054AA  1420               	andwf	(___flmul@grs+1)^0,w,c
 12360   0054AC  6E1B               	movwf	(??___flmul+1)^0,c
 12361   0054AE  0EFF               	movlw	255
 12362   0054B0  1421               	andwf	(___flmul@grs+2)^0,w,c
 12363   0054B2  6E1C               	movwf	(??___flmul+2)^0,c
 12364   0054B4  0E7F               	movlw	127
 12365   0054B6  1422               	andwf	(___flmul@grs+3)^0,w,c
 12366   0054B8  6E1D               	movwf	(??___flmul+3)^0,c
 12367   0054BA  501A               	movf	??___flmul^0,w,c
 12368   0054BC  101B               	iorwf	(??___flmul+1)^0,w,c
 12369   0054BE  101C               	iorwf	(??___flmul+2)^0,w,c
 12370   0054C0  101D               	iorwf	(??___flmul+3)^0,w,c
 12371   0054C2  B4D8               	btfsc	status,2,c
 12372   0054C4  EF66  F02A         	goto	u3551
 12373   0054C8  EF68  F02A         	goto	u3550
 12374   0054CC                     u3551:
 12375   0054CC  EF6C  F02A         	goto	l1186
 12376   0054D0                     u3550:
 12377   0054D0                     l3970:
 12378   0054D0  0E01               	movlw	1
 12379   0054D2  6E23               	movwf	___flmul@aexp^0,c
 12380   0054D4  EF75  F02A         	goto	l1185
 12381   0054D8                     l1186:
 12382   0054D8  A025               	btfss	___flmul@prod^0,0,c
 12383   0054DA  EF71  F02A         	goto	u3561
 12384   0054DE  EF73  F02A         	goto	u3560
 12385   0054E2                     u3561:
 12386   0054E2  EF75  F02A         	goto	l1185
 12387   0054E6                     u3560:
 12388   0054E6  EF68  F02A         	goto	l3970
 12389   0054EA                     l1185:
 12390   0054EA  5023               	movf	___flmul@aexp^0,w,c
 12391   0054EC  B4D8               	btfsc	status,2,c
 12392   0054EE  EF7B  F02A         	goto	u3571
 12393   0054F2  EF7D  F02A         	goto	u3570
 12394   0054F6                     u3571:
 12395   0054F6  EFA1  F02A         	goto	l3982
 12396   0054FA                     u3570:
 12397   0054FA  0E01               	movlw	1
 12398   0054FC  2625               	addwf	___flmul@prod^0,f,c
 12399   0054FE  0E00               	movlw	0
 12400   005500  2226               	addwfc	(___flmul@prod+1)^0,f,c
 12401   005502  2227               	addwfc	(___flmul@prod+2)^0,f,c
 12402   005504  2228               	addwfc	(___flmul@prod+3)^0,f,c
 12403   005506  A028               	btfss	(___flmul@prod+3)^0,0,c
 12404   005508  EF88  F02A         	goto	u3581
 12405   00550C  EF8A  F02A         	goto	u3580
 12406   005510                     u3581:
 12407   005510  EFA1  F02A         	goto	l3982
 12408   005514                     u3580:
 12409   005514  C025  F01A         	movff	___flmul@prod,??___flmul
 12410   005518  C026  F01B         	movff	___flmul@prod+1,??___flmul+1
 12411   00551C  C027  F01C         	movff	___flmul@prod+2,??___flmul+2
 12412   005520  C028  F01D         	movff	___flmul@prod+3,??___flmul+3
 12413   005524  341D               	rlcf	(??___flmul+3)^0,w,c
 12414   005526  321D               	rrcf	(??___flmul+3)^0,f,c
 12415   005528  321C               	rrcf	(??___flmul+2)^0,f,c
 12416   00552A  321B               	rrcf	(??___flmul+1)^0,f,c
 12417   00552C  321A               	rrcf	??___flmul^0,f,c
 12418   00552E  C01A  F025         	movff	??___flmul,___flmul@prod
 12419   005532  C01B  F026         	movff	??___flmul+1,___flmul@prod+1
 12420   005536  C01C  F027         	movff	??___flmul+2,___flmul@prod+2
 12421   00553A  C01D  F028         	movff	??___flmul+3,___flmul@prod+3
 12422   00553E  4A29               	infsnz	___flmul@temp^0,f,c
 12423   005540  2A2A               	incf	(___flmul@temp+1)^0,f,c
 12424   005542                     l3982:
 12425   005542  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 12426   005544  EFAC  F02A         	goto	u3591
 12427   005548  502A               	movf	(___flmul@temp+1)^0,w,c
 12428   00554A  E108               	bnz	u3590
 12429   00554C  2829               	incf	___flmul@temp^0,w,c
 12430   00554E  A0D8               	btfss	status,0,c
 12431   005550  EFAC  F02A         	goto	u3591
 12432   005554  EFAE  F02A         	goto	u3590
 12433   005558                     u3591:
 12434   005558  EFB8  F02A         	goto	l3986
 12435   00555C                     u3590:
 12436   00555C  0E00               	movlw	0
 12437   00555E  6E25               	movwf	___flmul@prod^0,c
 12438   005560  0E00               	movlw	0
 12439   005562  6E26               	movwf	(___flmul@prod+1)^0,c
 12440   005564  0E80               	movlw	128
 12441   005566  6E27               	movwf	(___flmul@prod+2)^0,c
 12442   005568  0E7F               	movlw	127
 12443   00556A  6E28               	movwf	(___flmul@prod+3)^0,c
 12444   00556C  EFE6  F02A         	goto	l3998
 12445   005570                     l3986:
 12446   005570  BE2A               	btfsc	(___flmul@temp+1)^0,7,c
 12447   005572  EFC5  F02A         	goto	u3600
 12448   005576  502A               	movf	(___flmul@temp+1)^0,w,c
 12449   005578  E106               	bnz	u3601
 12450   00557A  0429               	decf	___flmul@temp^0,w,c
 12451   00557C  B0D8               	btfsc	status,0,c
 12452   00557E  EFC3  F02A         	goto	u3601
 12453   005582  EFC5  F02A         	goto	u3600
 12454   005586                     u3601:
 12455   005586  EFD1  F02A         	goto	l1193
 12456   00558A                     u3600:
 12457   00558A  0E00               	movlw	0
 12458   00558C  6E25               	movwf	___flmul@prod^0,c
 12459   00558E  0E00               	movlw	0
 12460   005590  6E26               	movwf	(___flmul@prod+1)^0,c
 12461   005592  0E00               	movlw	0
 12462   005594  6E27               	movwf	(___flmul@prod+2)^0,c
 12463   005596  0E00               	movlw	0
 12464   005598  6E28               	movwf	(___flmul@prod+3)^0,c
 12465   00559A  0E00               	movlw	0
 12466   00559C  6E1E               	movwf	___flmul@sign^0,c
 12467   00559E  EFE6  F02A         	goto	l3998
 12468   0055A2                     l1193:
 12469   0055A2  C029  F024         	movff	___flmul@temp,___flmul@bexp
 12470   0055A6  0EFF               	movlw	255
 12471   0055A8  1625               	andwf	___flmul@prod^0,f,c
 12472   0055AA  0EFF               	movlw	255
 12473   0055AC  1626               	andwf	(___flmul@prod+1)^0,f,c
 12474   0055AE  0E7F               	movlw	127
 12475   0055B0  1627               	andwf	(___flmul@prod+2)^0,f,c
 12476   0055B2  0E00               	movlw	0
 12477   0055B4  1628               	andwf	(___flmul@prod+3)^0,f,c
 12478   0055B6  A024               	btfss	___flmul@bexp^0,0,c
 12479   0055B8  EFE0  F02A         	goto	u3611
 12480   0055BC  EFE2  F02A         	goto	u3610
 12481   0055C0                     u3611:
 12482   0055C0  EFE3  F02A         	goto	l3996
 12483   0055C4                     u3610:
 12484   0055C4  8E27               	bsf	(___flmul@prod+2)^0,7,c
 12485   0055C6                     l3996:
 12486   0055C6  90D8               	bcf	status,0,c
 12487   0055C8  3024               	rrcf	___flmul@bexp^0,w,c
 12488   0055CA  6E28               	movwf	(___flmul@prod+3)^0,c
 12489   0055CC                     l3998:
 12490   0055CC  501E               	movf	___flmul@sign^0,w,c
 12491   0055CE  1228               	iorwf	(___flmul@prod+3)^0,f,c
 12492   0055D0  C025  F012         	movff	___flmul@prod,?___flmul
 12493   0055D4  C026  F013         	movff	___flmul@prod+1,?___flmul+1
 12494   0055D8  C027  F014         	movff	___flmul@prod+2,?___flmul+2
 12495   0055DC  C028  F015         	movff	___flmul@prod+3,?___flmul+3
 12496   0055E0                     l1180:
 12497   0055E0  0012               	return		;funcret
 12498   0055E2                     __end_of___flmul:
 12499                           	callstack 0
 12500                           
 12501 ;; *************** function ___xxtofl *****************
 12502 ;; Defined at:
 12503 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 12504 ;; Parameters:    Size  Location     Type
 12505 ;;  sign            1    wreg     unsigned char 
 12506 ;;  val             4   12[COMRAM] long 
 12507 ;; Auto vars:     Size  Location     Type
 12508 ;;  sign            1   20[COMRAM] unsigned char 
 12509 ;;  arg             4   22[COMRAM] unsigned long 
 12510 ;;  exp             1   21[COMRAM] unsigned char 
 12511 ;; Return value:  Size  Location     Type
 12512 ;;                  4   12[COMRAM] unsigned char 
 12513 ;; Registers used:
 12514 ;;		wreg, status,2, status,0
 12515 ;; Tracked objects:
 12516 ;;		On entry : 0/0
 12517 ;;		On exit  : 0/0
 12518 ;;		Unchanged: 0/0
 12519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12521 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12522 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12523 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12524 ;;Total ram usage:       14 bytes
 12525 ;; Hardware stack levels used: 1
 12526 ;; Hardware stack levels required when called: 2
 12527 ;; This function calls:
 12528 ;;		Nothing
 12529 ;; This function is called by:
 12530 ;;		_decide_action
 12531 ;;		_powf
 12532 ;; This function uses a non-reentrant model
 12533 ;;
 12534                           
 12535                           	psect	text33
 12536   006164                     __ptext33:
 12537                           	callstack 0
 12538   006164                     ___xxtofl:
 12539                           	callstack 26
 12540                           
 12541                           ;incstack = 0
 12542                           ;___xxtofl@sign stored from wreg
 12543   006164  6E15               	movwf	___xxtofl@sign^0,c
 12544   006166  5015               	movf	___xxtofl@sign^0,w,c
 12545   006168  B4D8               	btfsc	status,2,c
 12546   00616A  EFB9  F030         	goto	u4291
 12547   00616E  EFBB  F030         	goto	u4290
 12548   006172                     u4291:
 12549   006172  EFDD  F030         	goto	l1217
 12550   006176                     u4290:
 12551   006176  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 12552   006178  EFC2  F030         	goto	u4300
 12553   00617C  EFC0  F030         	goto	u4301
 12554   006180                     u4301:
 12555   006180  EFDD  F030         	goto	l1217
 12556   006184                     u4300:
 12557   006184  C00D  F011         	movff	___xxtofl@val,??___xxtofl
 12558   006188  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
 12559   00618C  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
 12560   006190  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
 12561   006194  1E11               	comf	??___xxtofl^0,f,c
 12562   006196  1E12               	comf	(??___xxtofl+1)^0,f,c
 12563   006198  1E13               	comf	(??___xxtofl+2)^0,f,c
 12564   00619A  1E14               	comf	(??___xxtofl+3)^0,f,c
 12565   00619C  2A11               	incf	??___xxtofl^0,f,c
 12566   00619E  0E00               	movlw	0
 12567   0061A0  2212               	addwfc	(??___xxtofl+1)^0,f,c
 12568   0061A2  2213               	addwfc	(??___xxtofl+2)^0,f,c
 12569   0061A4  2214               	addwfc	(??___xxtofl+3)^0,f,c
 12570   0061A6  C011  F017         	movff	??___xxtofl,___xxtofl@arg
 12571   0061AA  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
 12572   0061AE  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
 12573   0061B2  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
 12574   0061B6  EFE5  F030         	goto	l4416
 12575   0061BA                     l1217:
 12576   0061BA  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
 12577   0061BE  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12578   0061C2  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12579   0061C6  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12580   0061CA                     l4416:
 12581   0061CA  500D               	movf	___xxtofl@val^0,w,c
 12582   0061CC  100E               	iorwf	(___xxtofl@val+1)^0,w,c
 12583   0061CE  100F               	iorwf	(___xxtofl@val+2)^0,w,c
 12584   0061D0  1010               	iorwf	(___xxtofl@val+3)^0,w,c
 12585   0061D2  A4D8               	btfss	status,2,c
 12586   0061D4  EFEE  F030         	goto	u4311
 12587   0061D8  EFF0  F030         	goto	u4310
 12588   0061DC                     u4311:
 12589   0061DC  EFFA  F030         	goto	l4422
 12590   0061E0                     u4310:
 12591   0061E0  0E00               	movlw	0
 12592   0061E2  6E0D               	movwf	?___xxtofl^0,c
 12593   0061E4  0E00               	movlw	0
 12594   0061E6  6E0E               	movwf	(?___xxtofl+1)^0,c
 12595   0061E8  0E00               	movlw	0
 12596   0061EA  6E0F               	movwf	(?___xxtofl+2)^0,c
 12597   0061EC  0E00               	movlw	0
 12598   0061EE  6E10               	movwf	(?___xxtofl+3)^0,c
 12599   0061F0  EF8B  F031         	goto	l1220
 12600   0061F4                     l4422:
 12601   0061F4  0E96               	movlw	150
 12602   0061F6  6E16               	movwf	___xxtofl@exp^0,c
 12603   0061F8  EF04  F031         	goto	l4426
 12604   0061FC                     l4424:
 12605   0061FC  2A16               	incf	___xxtofl@exp^0,f,c
 12606   0061FE  90D8               	bcf	status,0,c
 12607   006200  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 12608   006202  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 12609   006204  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 12610   006206  3217               	rrcf	___xxtofl@arg^0,f,c
 12611   006208                     l4426:
 12612   006208  0E00               	movlw	0
 12613   00620A  1417               	andwf	___xxtofl@arg^0,w,c
 12614   00620C  6E11               	movwf	??___xxtofl^0,c
 12615   00620E  0E00               	movlw	0
 12616   006210  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 12617   006212  6E12               	movwf	(??___xxtofl+1)^0,c
 12618   006214  0E00               	movlw	0
 12619   006216  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 12620   006218  6E13               	movwf	(??___xxtofl+2)^0,c
 12621   00621A  0EFE               	movlw	254
 12622   00621C  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 12623   00621E  6E14               	movwf	(??___xxtofl+3)^0,c
 12624   006220  5011               	movf	??___xxtofl^0,w,c
 12625   006222  1012               	iorwf	(??___xxtofl+1)^0,w,c
 12626   006224  1013               	iorwf	(??___xxtofl+2)^0,w,c
 12627   006226  1014               	iorwf	(??___xxtofl+3)^0,w,c
 12628   006228  A4D8               	btfss	status,2,c
 12629   00622A  EF19  F031         	goto	u4321
 12630   00622E  EF1B  F031         	goto	u4320
 12631   006232                     u4321:
 12632   006232  EFFE  F030         	goto	l4424
 12633   006236                     u4320:
 12634   006236  EF29  F031         	goto	l1224
 12635   00623A                     l4428:
 12636   00623A  2A16               	incf	___xxtofl@exp^0,f,c
 12637   00623C  0E01               	movlw	1
 12638   00623E  2617               	addwf	___xxtofl@arg^0,f,c
 12639   006240  0E00               	movlw	0
 12640   006242  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
 12641   006244  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
 12642   006246  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
 12643   006248  90D8               	bcf	status,0,c
 12644   00624A  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
 12645   00624C  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
 12646   00624E  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
 12647   006250  3217               	rrcf	___xxtofl@arg^0,f,c
 12648   006252                     l1224:
 12649   006252  0E00               	movlw	0
 12650   006254  1417               	andwf	___xxtofl@arg^0,w,c
 12651   006256  6E11               	movwf	??___xxtofl^0,c
 12652   006258  0E00               	movlw	0
 12653   00625A  1418               	andwf	(___xxtofl@arg+1)^0,w,c
 12654   00625C  6E12               	movwf	(??___xxtofl+1)^0,c
 12655   00625E  0E00               	movlw	0
 12656   006260  1419               	andwf	(___xxtofl@arg+2)^0,w,c
 12657   006262  6E13               	movwf	(??___xxtofl+2)^0,c
 12658   006264  0EFF               	movlw	255
 12659   006266  141A               	andwf	(___xxtofl@arg+3)^0,w,c
 12660   006268  6E14               	movwf	(??___xxtofl+3)^0,c
 12661   00626A  5011               	movf	??___xxtofl^0,w,c
 12662   00626C  1012               	iorwf	(??___xxtofl+1)^0,w,c
 12663   00626E  1013               	iorwf	(??___xxtofl+2)^0,w,c
 12664   006270  1014               	iorwf	(??___xxtofl+3)^0,w,c
 12665   006272  A4D8               	btfss	status,2,c
 12666   006274  EF3E  F031         	goto	u4331
 12667   006278  EF40  F031         	goto	u4330
 12668   00627C                     u4331:
 12669   00627C  EF1D  F031         	goto	l4428
 12670   006280                     u4330:
 12671   006280  EF48  F031         	goto	l4436
 12672   006284                     l4434:
 12673   006284  0616               	decf	___xxtofl@exp^0,f,c
 12674   006286  90D8               	bcf	status,0,c
 12675   006288  3617               	rlcf	___xxtofl@arg^0,f,c
 12676   00628A  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
 12677   00628C  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
 12678   00628E  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
 12679   006290                     l4436:
 12680   006290  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
 12681   006292  EF4D  F031         	goto	u4341
 12682   006296  EF4F  F031         	goto	u4340
 12683   00629A                     u4341:
 12684   00629A  EF57  F031         	goto	l1231
 12685   00629E                     u4340:
 12686   00629E  0E02               	movlw	2
 12687   0062A0  6016               	cpfslt	___xxtofl@exp^0,c
 12688   0062A2  EF55  F031         	goto	u4351
 12689   0062A6  EF57  F031         	goto	u4350
 12690   0062AA                     u4351:
 12691   0062AA  EF42  F031         	goto	l4434
 12692   0062AE                     u4350:
 12693   0062AE                     l1231:
 12694   0062AE  B016               	btfsc	___xxtofl@exp^0,0,c
 12695   0062B0  EF5C  F031         	goto	u4361
 12696   0062B4  EF5E  F031         	goto	u4360
 12697   0062B8                     u4361:
 12698   0062B8  EF5F  F031         	goto	l4442
 12699   0062BC                     u4360:
 12700   0062BC  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
 12701   0062BE                     l4442:
 12702   0062BE  90D8               	bcf	status,0,c
 12703   0062C0  3216               	rrcf	___xxtofl@exp^0,f,c
 12704   0062C2  C016  F011         	movff	___xxtofl@exp,??___xxtofl
 12705   0062C6  6A12               	clrf	(??___xxtofl+1)^0,c
 12706   0062C8  6A13               	clrf	(??___xxtofl+2)^0,c
 12707   0062CA  6A14               	clrf	(??___xxtofl+3)^0,c
 12708   0062CC  C011  F014         	movff	??___xxtofl,??___xxtofl+3
 12709   0062D0  6A13               	clrf	(??___xxtofl+2)^0,c
 12710   0062D2  6A12               	clrf	(??___xxtofl+1)^0,c
 12711   0062D4  6A11               	clrf	??___xxtofl^0,c
 12712   0062D6  5011               	movf	??___xxtofl^0,w,c
 12713   0062D8  1217               	iorwf	___xxtofl@arg^0,f,c
 12714   0062DA  5012               	movf	(??___xxtofl+1)^0,w,c
 12715   0062DC  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
 12716   0062DE  5013               	movf	(??___xxtofl+2)^0,w,c
 12717   0062E0  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
 12718   0062E2  5014               	movf	(??___xxtofl+3)^0,w,c
 12719   0062E4  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
 12720   0062E6  5015               	movf	___xxtofl@sign^0,w,c
 12721   0062E8  B4D8               	btfsc	status,2,c
 12722   0062EA  EF79  F031         	goto	u4371
 12723   0062EE  EF7B  F031         	goto	u4370
 12724   0062F2                     u4371:
 12725   0062F2  EF83  F031         	goto	l4452
 12726   0062F6                     u4370:
 12727   0062F6  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
 12728   0062F8  EF82  F031         	goto	u4380
 12729   0062FC  EF80  F031         	goto	u4381
 12730   006300                     u4381:
 12731   006300  EF83  F031         	goto	l4452
 12732   006304                     u4380:
 12733   006304  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
 12734   006306                     l4452:
 12735   006306  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
 12736   00630A  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
 12737   00630E  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
 12738   006312  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
 12739   006316                     l1220:
 12740   006316  0012               	return		;funcret
 12741   006318                     __end_of___xxtofl:
 12742                           	callstack 0
 12743                           
 12744 ;; *************** function ___flsub *****************
 12745 ;; Defined at:
 12746 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 12747 ;; Parameters:    Size  Location     Type
 12748 ;;  b               4   67[COMRAM] unsigned char 
 12749 ;;  a               4   71[COMRAM] unsigned char 
 12750 ;; Auto vars:     Size  Location     Type
 12751 ;;		None
 12752 ;; Return value:  Size  Location     Type
 12753 ;;                  4   67[COMRAM] unsigned char 
 12754 ;; Registers used:
 12755 ;;		wreg, status,2, status,0, cstack
 12756 ;; Tracked objects:
 12757 ;;		On entry : 0/0
 12758 ;;		On exit  : 0/0
 12759 ;;		Unchanged: 0/0
 12760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12761 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12764 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12765 ;;Total ram usage:        8 bytes
 12766 ;; Hardware stack levels used: 1
 12767 ;; Hardware stack levels required when called: 3
 12768 ;; This function calls:
 12769 ;;		___fladd
 12770 ;; This function is called by:
 12771 ;;		_decide_action
 12772 ;;		_powf
 12773 ;; This function uses a non-reentrant model
 12774 ;;
 12775                           
 12776                           	psect	text34
 12777   007346                     __ptext34:
 12778                           	callstack 0
 12779   007346                     ___flsub:
 12780                           	callstack 25
 12781   007346  0E00               	movlw	0
 12782   007348  1A48               	xorwf	___flsub@a^0,f,c
 12783   00734A  0E00               	movlw	0
 12784   00734C  1A49               	xorwf	(___flsub@a+1)^0,f,c
 12785   00734E  0E00               	movlw	0
 12786   007350  1A4A               	xorwf	(___flsub@a+2)^0,f,c
 12787   007352  0E80               	movlw	128
 12788   007354  1A4B               	xorwf	(___flsub@a+3)^0,f,c
 12789   007356  C044  F002         	movff	___flsub@b,___fladd@b
 12790   00735A  C045  F003         	movff	___flsub@b+1,___fladd@b+1
 12791   00735E  C046  F004         	movff	___flsub@b+2,___fladd@b+2
 12792   007362  C047  F005         	movff	___flsub@b+3,___fladd@b+3
 12793   007366  C048  F006         	movff	___flsub@a,___fladd@a
 12794   00736A  C049  F007         	movff	___flsub@a+1,___fladd@a+1
 12795   00736E  C04A  F008         	movff	___flsub@a+2,___fladd@a+2
 12796   007372  C04B  F009         	movff	___flsub@a+3,___fladd@a+3
 12797   007376  EC7C  F026         	call	___fladd	;wreg free
 12798   00737A  C002  F044         	movff	?___fladd,?___flsub
 12799   00737E  C003  F045         	movff	?___fladd+1,?___flsub+1
 12800   007382  C004  F046         	movff	?___fladd+2,?___flsub+2
 12801   007386  C005  F047         	movff	?___fladd+3,?___flsub+3
 12802   00738A  0012               	return		;funcret
 12803   00738C                     __end_of___flsub:
 12804                           	callstack 0
 12805                           
 12806 ;; *************** function ___fladd *****************
 12807 ;; Defined at:
 12808 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 12809 ;; Parameters:    Size  Location     Type
 12810 ;;  b               4    1[COMRAM] unsigned char 
 12811 ;;  a               4    5[COMRAM] unsigned char 
 12812 ;; Auto vars:     Size  Location     Type
 12813 ;;  grs             1   16[COMRAM] unsigned char 
 12814 ;;  bexp            1   15[COMRAM] unsigned char 
 12815 ;;  aexp            1   14[COMRAM] unsigned char 
 12816 ;;  signs           1   13[COMRAM] unsigned char 
 12817 ;; Return value:  Size  Location     Type
 12818 ;;                  4    1[COMRAM] unsigned char 
 12819 ;; Registers used:
 12820 ;;		wreg, status,2, status,0
 12821 ;; Tracked objects:
 12822 ;;		On entry : 0/0
 12823 ;;		On exit  : 0/0
 12824 ;;		Unchanged: 0/0
 12825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12826 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12827 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12828 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12829 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12830 ;;Total ram usage:       16 bytes
 12831 ;; Hardware stack levels used: 1
 12832 ;; Hardware stack levels required when called: 2
 12833 ;; This function calls:
 12834 ;;		Nothing
 12835 ;; This function is called by:
 12836 ;;		_decide_action
 12837 ;;		___flsub
 12838 ;;		_powf
 12839 ;; This function uses a non-reentrant model
 12840 ;;
 12841                           
 12842                           	psect	text35
 12843   004CF8                     __ptext35:
 12844                           	callstack 0
 12845   004CF8                     ___fladd:
 12846                           	callstack 25
 12847   004CF8  5005               	movf	(___fladd@b+3)^0,w,c
 12848   004CFA  0B80               	andlw	128
 12849   004CFC  6E0E               	movwf	___fladd@signs^0,c
 12850   004CFE  5005               	movf	(___fladd@b+3)^0,w,c
 12851   004D00  2405               	addwf	(___fladd@b+3)^0,w,c
 12852   004D02  6E10               	movwf	___fladd@bexp^0,c
 12853   004D04  AE04               	btfss	(___fladd@b+2)^0,7,c
 12854   004D06  EF87  F026         	goto	u3041
 12855   004D0A  EF89  F026         	goto	u3040
 12856   004D0E                     u3041:
 12857   004D0E  EF8A  F026         	goto	l3678
 12858   004D12                     u3040:
 12859   004D12  8010               	bsf	___fladd@bexp^0,0,c
 12860   004D14                     l3678:
 12861   004D14  5010               	movf	___fladd@bexp^0,w,c
 12862   004D16  B4D8               	btfsc	status,2,c
 12863   004D18  EF90  F026         	goto	u3051
 12864   004D1C  EF92  F026         	goto	u3050
 12865   004D20                     u3051:
 12866   004D20  EFA7  F026         	goto	l3688
 12867   004D24                     u3050:
 12868   004D24  2810               	incf	___fladd@bexp^0,w,c
 12869   004D26  A4D8               	btfss	status,2,c
 12870   004D28  EF98  F026         	goto	u3061
 12871   004D2C  EF9A  F026         	goto	u3060
 12872   004D30                     u3061:
 12873   004D30  EFA2  F026         	goto	l3684
 12874   004D34                     u3060:
 12875   004D34  0E00               	movlw	0
 12876   004D36  6E02               	movwf	___fladd@b^0,c
 12877   004D38  0E00               	movlw	0
 12878   004D3A  6E03               	movwf	(___fladd@b+1)^0,c
 12879   004D3C  0E00               	movlw	0
 12880   004D3E  6E04               	movwf	(___fladd@b+2)^0,c
 12881   004D40  0E00               	movlw	0
 12882   004D42  6E05               	movwf	(___fladd@b+3)^0,c
 12883   004D44                     l3684:
 12884   004D44  8E04               	bsf	(___fladd@b+2)^0,7,c
 12885   004D46  0E00               	movlw	0
 12886   004D48  6E05               	movwf	(___fladd@b+3)^0,c
 12887   004D4A  EFAF  F026         	goto	l3690
 12888   004D4E                     l3688:
 12889   004D4E  0E00               	movlw	0
 12890   004D50  6E02               	movwf	___fladd@b^0,c
 12891   004D52  0E00               	movlw	0
 12892   004D54  6E03               	movwf	(___fladd@b+1)^0,c
 12893   004D56  0E00               	movlw	0
 12894   004D58  6E04               	movwf	(___fladd@b+2)^0,c
 12895   004D5A  0E00               	movlw	0
 12896   004D5C  6E05               	movwf	(___fladd@b+3)^0,c
 12897   004D5E                     l3690:
 12898   004D5E  5009               	movf	(___fladd@a+3)^0,w,c
 12899   004D60  0B80               	andlw	128
 12900   004D62  6E0F               	movwf	___fladd@aexp^0,c
 12901   004D64  500E               	movf	___fladd@signs^0,w,c
 12902   004D66  180F               	xorwf	___fladd@aexp^0,w,c
 12903   004D68  B4D8               	btfsc	status,2,c
 12904   004D6A  EFB9  F026         	goto	u3071
 12905   004D6E  EFBB  F026         	goto	u3070
 12906   004D72                     u3071:
 12907   004D72  EFBC  F026         	goto	l3696
 12908   004D76                     u3070:
 12909   004D76  8C0E               	bsf	___fladd@signs^0,6,c
 12910   004D78                     l3696:
 12911   004D78  5009               	movf	(___fladd@a+3)^0,w,c
 12912   004D7A  2409               	addwf	(___fladd@a+3)^0,w,c
 12913   004D7C  6E0F               	movwf	___fladd@aexp^0,c
 12914   004D7E  AE08               	btfss	(___fladd@a+2)^0,7,c
 12915   004D80  EFC4  F026         	goto	u3081
 12916   004D84  EFC6  F026         	goto	u3080
 12917   004D88                     u3081:
 12918   004D88  EFC7  F026         	goto	l3702
 12919   004D8C                     u3080:
 12920   004D8C  800F               	bsf	___fladd@aexp^0,0,c
 12921   004D8E                     l3702:
 12922   004D8E  500F               	movf	___fladd@aexp^0,w,c
 12923   004D90  B4D8               	btfsc	status,2,c
 12924   004D92  EFCD  F026         	goto	u3091
 12925   004D96  EFCF  F026         	goto	u3090
 12926   004D9A                     u3091:
 12927   004D9A  EFE4  F026         	goto	l3712
 12928   004D9E                     u3090:
 12929   004D9E  280F               	incf	___fladd@aexp^0,w,c
 12930   004DA0  A4D8               	btfss	status,2,c
 12931   004DA2  EFD5  F026         	goto	u3101
 12932   004DA6  EFD7  F026         	goto	u3100
 12933   004DAA                     u3101:
 12934   004DAA  EFDF  F026         	goto	l3708
 12935   004DAE                     u3100:
 12936   004DAE  0E00               	movlw	0
 12937   004DB0  6E06               	movwf	___fladd@a^0,c
 12938   004DB2  0E00               	movlw	0
 12939   004DB4  6E07               	movwf	(___fladd@a+1)^0,c
 12940   004DB6  0E00               	movlw	0
 12941   004DB8  6E08               	movwf	(___fladd@a+2)^0,c
 12942   004DBA  0E00               	movlw	0
 12943   004DBC  6E09               	movwf	(___fladd@a+3)^0,c
 12944   004DBE                     l3708:
 12945   004DBE  8E08               	bsf	(___fladd@a+2)^0,7,c
 12946   004DC0  0E00               	movlw	0
 12947   004DC2  6E09               	movwf	(___fladd@a+3)^0,c
 12948   004DC4  EFEC  F026         	goto	l3714
 12949   004DC8                     l3712:
 12950   004DC8  0E00               	movlw	0
 12951   004DCA  6E06               	movwf	___fladd@a^0,c
 12952   004DCC  0E00               	movlw	0
 12953   004DCE  6E07               	movwf	(___fladd@a+1)^0,c
 12954   004DD0  0E00               	movlw	0
 12955   004DD2  6E08               	movwf	(___fladd@a+2)^0,c
 12956   004DD4  0E00               	movlw	0
 12957   004DD6  6E09               	movwf	(___fladd@a+3)^0,c
 12958   004DD8                     l3714:
 12959   004DD8  5010               	movf	___fladd@bexp^0,w,c
 12960   004DDA  5C0F               	subwf	___fladd@aexp^0,w,c
 12961   004DDC  B0D8               	btfsc	status,0,c
 12962   004DDE  EFF3  F026         	goto	u3111
 12963   004DE2  EFF5  F026         	goto	u3110
 12964   004DE6                     u3111:
 12965   004DE6  EF1C  F027         	goto	l3750
 12966   004DEA                     u3110:
 12967   004DEA  AC0E               	btfss	___fladd@signs^0,6,c
 12968   004DEC  EFFA  F026         	goto	u3121
 12969   004DF0  EFFC  F026         	goto	u3120
 12970   004DF4                     u3121:
 12971   004DF4  EFFE  F026         	goto	l3720
 12972   004DF8                     u3120:
 12973   004DF8  0E80               	movlw	128
 12974   004DFA  1A0E               	xorwf	___fladd@signs^0,f,c
 12975   004DFC                     l3720:
 12976   004DFC  C010  F011         	movff	___fladd@bexp,___fladd@grs
 12977   004E00  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 12978   004E04  C011  F00F         	movff	___fladd@grs,___fladd@aexp
 12979   004E08  C002  F011         	movff	___fladd@b,___fladd@grs
 12980   004E0C  C006  F002         	movff	___fladd@a,___fladd@b
 12981   004E10  C011  F006         	movff	___fladd@grs,___fladd@a
 12982   004E14  C003  F011         	movff	___fladd@b+1,___fladd@grs
 12983   004E18  C007  F003         	movff	___fladd@a+1,___fladd@b+1
 12984   004E1C  C011  F007         	movff	___fladd@grs,___fladd@a+1
 12985   004E20  C004  F011         	movff	___fladd@b+2,___fladd@grs
 12986   004E24  C008  F004         	movff	___fladd@a+2,___fladd@b+2
 12987   004E28  C011  F008         	movff	___fladd@grs,___fladd@a+2
 12988   004E2C  C005  F011         	movff	___fladd@b+3,___fladd@grs
 12989   004E30  C009  F005         	movff	___fladd@a+3,___fladd@b+3
 12990   004E34  C011  F009         	movff	___fladd@grs,___fladd@a+3
 12991   004E38                     l3750:
 12992   004E38  0E00               	movlw	0
 12993   004E3A  6E11               	movwf	___fladd@grs^0,c
 12994   004E3C  5010               	movf	___fladd@bexp^0,w,c
 12995   004E3E  C00F  F00A         	movff	___fladd@aexp,??___fladd
 12996   004E42  6A0B               	clrf	(??___fladd+1)^0,c
 12997   004E44  5E0A               	subwf	??___fladd^0,f,c
 12998   004E46  0E00               	movlw	0
 12999   004E48  5A0B               	subwfb	(??___fladd+1)^0,f,c
 13000   004E4A  BE0B               	btfsc	(??___fladd+1)^0,7,c
 13001   004E4C  EF31  F027         	goto	u3131
 13002   004E50  500B               	movf	(??___fladd+1)^0,w,c
 13003   004E52  E109               	bnz	u3130
 13004   004E54  0E1A               	movlw	26
 13005   004E56  5C0A               	subwf	??___fladd^0,w,c
 13006   004E58  A0D8               	btfss	status,0,c
 13007   004E5A  EF31  F027         	goto	u3131
 13008   004E5E  EF33  F027         	goto	u3130
 13009   004E62                     u3131:
 13010   004E62  EF6A  F027         	goto	l1091
 13011   004E66                     u3130:
 13012   004E66  5002               	movf	___fladd@b^0,w,c
 13013   004E68  1003               	iorwf	(___fladd@b+1)^0,w,c
 13014   004E6A  1004               	iorwf	(___fladd@b+2)^0,w,c
 13015   004E6C  1005               	iorwf	(___fladd@b+3)^0,w,c
 13016   004E6E  A4D8               	btfss	status,2,c
 13017   004E70  EF3C  F027         	goto	u3141
 13018   004E74  EF3F  F027         	goto	u3140
 13019   004E78                     u3141:
 13020   004E78  0E01               	movlw	1
 13021   004E7A  EF40  F027         	goto	u3150
 13022   004E7E                     u3140:
 13023   004E7E  0E00               	movlw	0
 13024   004E80                     u3150:
 13025   004E80  6E11               	movwf	___fladd@grs^0,c
 13026   004E82  0E00               	movlw	0
 13027   004E84  6E02               	movwf	___fladd@b^0,c
 13028   004E86  0E00               	movlw	0
 13029   004E88  6E03               	movwf	(___fladd@b+1)^0,c
 13030   004E8A  0E00               	movlw	0
 13031   004E8C  6E04               	movwf	(___fladd@b+2)^0,c
 13032   004E8E  0E00               	movlw	0
 13033   004E90  6E05               	movwf	(___fladd@b+3)^0,c
 13034   004E92  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
 13035   004E96  EF73  F027         	goto	l1090
 13036   004E9A                     l1092:
 13037   004E9A  A011               	btfss	___fladd@grs^0,0,c
 13038   004E9C  EF52  F027         	goto	u3161
 13039   004EA0  EF54  F027         	goto	u3160
 13040   004EA4                     u3161:
 13041   004EA4  EF5A  F027         	goto	l3762
 13042   004EA8                     u3160:
 13043   004EA8  90D8               	bcf	status,0,c
 13044   004EAA  3011               	rrcf	___fladd@grs^0,w,c
 13045   004EAC  0901               	iorlw	1
 13046   004EAE  6E11               	movwf	___fladd@grs^0,c
 13047   004EB0  EF5C  F027         	goto	l3764
 13048   004EB4                     l3762:
 13049   004EB4  90D8               	bcf	status,0,c
 13050   004EB6  3211               	rrcf	___fladd@grs^0,f,c
 13051   004EB8                     l3764:
 13052   004EB8  A002               	btfss	___fladd@b^0,0,c
 13053   004EBA  EF61  F027         	goto	u3171
 13054   004EBE  EF63  F027         	goto	u3170
 13055   004EC2                     u3171:
 13056   004EC2  EF64  F027         	goto	l3768
 13057   004EC6                     u3170:
 13058   004EC6  8E11               	bsf	___fladd@grs^0,7,c
 13059   004EC8                     l3768:
 13060   004EC8  3405               	rlcf	(___fladd@b+3)^0,w,c
 13061   004ECA  3205               	rrcf	(___fladd@b+3)^0,f,c
 13062   004ECC  3204               	rrcf	(___fladd@b+2)^0,f,c
 13063   004ECE  3203               	rrcf	(___fladd@b+1)^0,f,c
 13064   004ED0  3202               	rrcf	___fladd@b^0,f,c
 13065   004ED2  2A10               	incf	___fladd@bexp^0,f,c
 13066   004ED4                     l1091:
 13067   004ED4  500F               	movf	___fladd@aexp^0,w,c
 13068   004ED6  5C10               	subwf	___fladd@bexp^0,w,c
 13069   004ED8  A0D8               	btfss	status,0,c
 13070   004EDA  EF71  F027         	goto	u3181
 13071   004EDE  EF73  F027         	goto	u3180
 13072   004EE2                     u3181:
 13073   004EE2  EF4D  F027         	goto	l1092
 13074   004EE6                     u3180:
 13075   004EE6                     l1090:
 13076   004EE6  BC0E               	btfsc	___fladd@signs^0,6,c
 13077   004EE8  EF78  F027         	goto	u3191
 13078   004EEC  EF7A  F027         	goto	u3190
 13079   004EF0                     u3191:
 13080   004EF0  EFBA  F027         	goto	l3796
 13081   004EF4                     u3190:
 13082   004EF4  5010               	movf	___fladd@bexp^0,w,c
 13083   004EF6  A4D8               	btfss	status,2,c
 13084   004EF8  EF80  F027         	goto	u3201
 13085   004EFC  EF82  F027         	goto	u3200
 13086   004F00                     u3201:
 13087   004F00  EF8C  F027         	goto	l3778
 13088   004F04                     u3200:
 13089   004F04  0E00               	movlw	0
 13090   004F06  6E02               	movwf	?___fladd^0,c
 13091   004F08  0E00               	movlw	0
 13092   004F0A  6E03               	movwf	(?___fladd+1)^0,c
 13093   004F0C  0E00               	movlw	0
 13094   004F0E  6E04               	movwf	(?___fladd+2)^0,c
 13095   004F10  0E00               	movlw	0
 13096   004F12  6E05               	movwf	(?___fladd+3)^0,c
 13097   004F14  EFDB  F028         	goto	l1099
 13098   004F18                     l3778:
 13099   004F18  5006               	movf	___fladd@a^0,w,c
 13100   004F1A  2602               	addwf	___fladd@b^0,f,c
 13101   004F1C  5007               	movf	(___fladd@a+1)^0,w,c
 13102   004F1E  2203               	addwfc	(___fladd@b+1)^0,f,c
 13103   004F20  5008               	movf	(___fladd@a+2)^0,w,c
 13104   004F22  2204               	addwfc	(___fladd@b+2)^0,f,c
 13105   004F24  5009               	movf	(___fladd@a+3)^0,w,c
 13106   004F26  2205               	addwfc	(___fladd@b+3)^0,f,c
 13107   004F28  A005               	btfss	(___fladd@b+3)^0,0,c
 13108   004F2A  EF99  F027         	goto	u3211
 13109   004F2E  EF9B  F027         	goto	u3210
 13110   004F32                     u3211:
 13111   004F32  EF47  F028         	goto	l3832
 13112   004F36                     u3210:
 13113   004F36  A011               	btfss	___fladd@grs^0,0,c
 13114   004F38  EFA0  F027         	goto	u3221
 13115   004F3C  EFA2  F027         	goto	u3220
 13116   004F40                     u3221:
 13117   004F40  EFA8  F027         	goto	l3786
 13118   004F44                     u3220:
 13119   004F44  90D8               	bcf	status,0,c
 13120   004F46  3011               	rrcf	___fladd@grs^0,w,c
 13121   004F48  0901               	iorlw	1
 13122   004F4A  6E11               	movwf	___fladd@grs^0,c
 13123   004F4C  EFAA  F027         	goto	l3788
 13124   004F50                     l3786:
 13125   004F50  90D8               	bcf	status,0,c
 13126   004F52  3211               	rrcf	___fladd@grs^0,f,c
 13127   004F54                     l3788:
 13128   004F54  A002               	btfss	___fladd@b^0,0,c
 13129   004F56  EFAF  F027         	goto	u3231
 13130   004F5A  EFB1  F027         	goto	u3230
 13131   004F5E                     u3231:
 13132   004F5E  EFB2  F027         	goto	l3792
 13133   004F62                     u3230:
 13134   004F62  8E11               	bsf	___fladd@grs^0,7,c
 13135   004F64                     l3792:
 13136   004F64  3405               	rlcf	(___fladd@b+3)^0,w,c
 13137   004F66  3205               	rrcf	(___fladd@b+3)^0,f,c
 13138   004F68  3204               	rrcf	(___fladd@b+2)^0,f,c
 13139   004F6A  3203               	rrcf	(___fladd@b+1)^0,f,c
 13140   004F6C  3202               	rrcf	___fladd@b^0,f,c
 13141   004F6E  2A10               	incf	___fladd@bexp^0,f,c
 13142   004F70  EF47  F028         	goto	l3832
 13143   004F74                     l3796:
 13144   004F74  5006               	movf	___fladd@a^0,w,c
 13145   004F76  5C02               	subwf	___fladd@b^0,w,c
 13146   004F78  5007               	movf	(___fladd@a+1)^0,w,c
 13147   004F7A  5803               	subwfb	(___fladd@b+1)^0,w,c
 13148   004F7C  5008               	movf	(___fladd@a+2)^0,w,c
 13149   004F7E  5804               	subwfb	(___fladd@b+2)^0,w,c
 13150   004F80  5005               	movf	(___fladd@b+3)^0,w,c
 13151   004F82  0A80               	xorlw	128
 13152   004F84  6E0A               	movwf	??___fladd^0,c
 13153   004F86  5009               	movf	(___fladd@a+3)^0,w,c
 13154   004F88  0A80               	xorlw	128
 13155   004F8A  580A               	subwfb	??___fladd^0,w,c
 13156   004F8C  B0D8               	btfsc	status,0,c
 13157   004F8E  EFCB  F027         	goto	u3241
 13158   004F92  EFCD  F027         	goto	u3240
 13159   004F96                     u3241:
 13160   004F96  EFF8  F027         	goto	l3806
 13161   004F9A                     u3240:
 13162   004F9A  5002               	movf	___fladd@b^0,w,c
 13163   004F9C  5C06               	subwf	___fladd@a^0,w,c
 13164   004F9E  6E0A               	movwf	??___fladd^0,c
 13165   004FA0  5003               	movf	(___fladd@b+1)^0,w,c
 13166   004FA2  5807               	subwfb	(___fladd@a+1)^0,w,c
 13167   004FA4  6E0B               	movwf	(??___fladd+1)^0,c
 13168   004FA6  5004               	movf	(___fladd@b+2)^0,w,c
 13169   004FA8  5808               	subwfb	(___fladd@a+2)^0,w,c
 13170   004FAA  6E0C               	movwf	(??___fladd+2)^0,c
 13171   004FAC  5005               	movf	(___fladd@b+3)^0,w,c
 13172   004FAE  5809               	subwfb	(___fladd@a+3)^0,w,c
 13173   004FB0  6E0D               	movwf	(??___fladd+3)^0,c
 13174   004FB2  0EFF               	movlw	255
 13175   004FB4  240A               	addwf	??___fladd^0,w,c
 13176   004FB6  6E02               	movwf	___fladd@b^0,c
 13177   004FB8  0EFF               	movlw	255
 13178   004FBA  200B               	addwfc	(??___fladd+1)^0,w,c
 13179   004FBC  6E03               	movwf	(___fladd@b+1)^0,c
 13180   004FBE  0EFF               	movlw	255
 13181   004FC0  200C               	addwfc	(??___fladd+2)^0,w,c
 13182   004FC2  6E04               	movwf	(___fladd@b+2)^0,c
 13183   004FC4  0EFF               	movlw	255
 13184   004FC6  200D               	addwfc	(??___fladd+3)^0,w,c
 13185   004FC8  6E05               	movwf	(___fladd@b+3)^0,c
 13186   004FCA  0E80               	movlw	128
 13187   004FCC  1A0E               	xorwf	___fladd@signs^0,f,c
 13188   004FCE  6C11               	negf	___fladd@grs^0,c
 13189   004FD0  5011               	movf	___fladd@grs^0,w,c
 13190   004FD2  A4D8               	btfss	status,2,c
 13191   004FD4  EFEE  F027         	goto	u3251
 13192   004FD8  EFF0  F027         	goto	u3250
 13193   004FDC                     u3251:
 13194   004FDC  EF00  F028         	goto	l1107
 13195   004FE0                     u3250:
 13196   004FE0  0E01               	movlw	1
 13197   004FE2  2602               	addwf	___fladd@b^0,f,c
 13198   004FE4  0E00               	movlw	0
 13199   004FE6  2203               	addwfc	(___fladd@b+1)^0,f,c
 13200   004FE8  2204               	addwfc	(___fladd@b+2)^0,f,c
 13201   004FEA  2205               	addwfc	(___fladd@b+3)^0,f,c
 13202   004FEC  EF00  F028         	goto	l1107
 13203   004FF0                     l3806:
 13204   004FF0  5006               	movf	___fladd@a^0,w,c
 13205   004FF2  5E02               	subwf	___fladd@b^0,f,c
 13206   004FF4  5007               	movf	(___fladd@a+1)^0,w,c
 13207   004FF6  5A03               	subwfb	(___fladd@b+1)^0,f,c
 13208   004FF8  5008               	movf	(___fladd@a+2)^0,w,c
 13209   004FFA  5A04               	subwfb	(___fladd@b+2)^0,f,c
 13210   004FFC  5009               	movf	(___fladd@a+3)^0,w,c
 13211   004FFE  5A05               	subwfb	(___fladd@b+3)^0,f,c
 13212   005000                     l1107:
 13213   005000  5002               	movf	___fladd@b^0,w,c
 13214   005002  1003               	iorwf	(___fladd@b+1)^0,w,c
 13215   005004  1004               	iorwf	(___fladd@b+2)^0,w,c
 13216   005006  1005               	iorwf	(___fladd@b+3)^0,w,c
 13217   005008  A4D8               	btfss	status,2,c
 13218   00500A  EF09  F028         	goto	u3261
 13219   00500E  EF0B  F028         	goto	u3260
 13220   005012                     u3261:
 13221   005012  EF40  F028         	goto	l3830
 13222   005016                     u3260:
 13223   005016  5011               	movf	___fladd@grs^0,w,c
 13224   005018  A4D8               	btfss	status,2,c
 13225   00501A  EF11  F028         	goto	u3271
 13226   00501E  EF13  F028         	goto	u3270
 13227   005022                     u3271:
 13228   005022  EF40  F028         	goto	l3830
 13229   005026                     u3270:
 13230   005026  0E00               	movlw	0
 13231   005028  6E02               	movwf	?___fladd^0,c
 13232   00502A  0E00               	movlw	0
 13233   00502C  6E03               	movwf	(?___fladd+1)^0,c
 13234   00502E  0E00               	movlw	0
 13235   005030  6E04               	movwf	(?___fladd+2)^0,c
 13236   005032  0E00               	movlw	0
 13237   005034  6E05               	movwf	(?___fladd+3)^0,c
 13238   005036  EFDB  F028         	goto	l1099
 13239   00503A                     l3814:
 13240   00503A  90D8               	bcf	status,0,c
 13241   00503C  3602               	rlcf	___fladd@b^0,f,c
 13242   00503E  3603               	rlcf	(___fladd@b+1)^0,f,c
 13243   005040  3604               	rlcf	(___fladd@b+2)^0,f,c
 13244   005042  3605               	rlcf	(___fladd@b+3)^0,f,c
 13245   005044  AE11               	btfss	___fladd@grs^0,7,c
 13246   005046  EF27  F028         	goto	u3281
 13247   00504A  EF29  F028         	goto	u3280
 13248   00504E                     u3281:
 13249   00504E  EF2A  F028         	goto	l3820
 13250   005052                     u3280:
 13251   005052  8002               	bsf	___fladd@b^0,0,c
 13252   005054                     l3820:
 13253   005054  A011               	btfss	___fladd@grs^0,0,c
 13254   005056  EF2F  F028         	goto	u3291
 13255   00505A  EF31  F028         	goto	u3290
 13256   00505E                     u3291:
 13257   00505E  EF35  F028         	goto	l3824
 13258   005062                     u3290:
 13259   005062  80D8               	bsf	status,0,c
 13260   005064  3611               	rlcf	___fladd@grs^0,f,c
 13261   005066  EF37  F028         	goto	l3826
 13262   00506A                     l3824:
 13263   00506A  90D8               	bcf	status,0,c
 13264   00506C  3611               	rlcf	___fladd@grs^0,f,c
 13265   00506E                     l3826:
 13266   00506E  5010               	movf	___fladd@bexp^0,w,c
 13267   005070  B4D8               	btfsc	status,2,c
 13268   005072  EF3D  F028         	goto	u3301
 13269   005076  EF3F  F028         	goto	u3300
 13270   00507A                     u3301:
 13271   00507A  EF40  F028         	goto	l3830
 13272   00507E                     u3300:
 13273   00507E  0610               	decf	___fladd@bexp^0,f,c
 13274   005080                     l3830:
 13275   005080  AE04               	btfss	(___fladd@b+2)^0,7,c
 13276   005082  EF45  F028         	goto	u3311
 13277   005086  EF47  F028         	goto	u3310
 13278   00508A                     u3311:
 13279   00508A  EF1D  F028         	goto	l3814
 13280   00508E                     u3310:
 13281   00508E                     l3832:
 13282   00508E  0E00               	movlw	0
 13283   005090  6E0F               	movwf	___fladd@aexp^0,c
 13284   005092  AE11               	btfss	___fladd@grs^0,7,c
 13285   005094  EF4E  F028         	goto	u3321
 13286   005098  EF50  F028         	goto	u3320
 13287   00509C                     u3321:
 13288   00509C  EF68  F028         	goto	l1116
 13289   0050A0                     u3320:
 13290   0050A0  C011  F00A         	movff	___fladd@grs,??___fladd
 13291   0050A4  0E7F               	movlw	127
 13292   0050A6  160A               	andwf	??___fladd^0,f,c
 13293   0050A8  B4D8               	btfsc	status,2,c
 13294   0050AA  EF59  F028         	goto	u3331
 13295   0050AE  EF5B  F028         	goto	u3330
 13296   0050B2                     u3331:
 13297   0050B2  EF5F  F028         	goto	l1117
 13298   0050B6                     u3330:
 13299   0050B6                     l3838:
 13300   0050B6  0E01               	movlw	1
 13301   0050B8  6E0F               	movwf	___fladd@aexp^0,c
 13302   0050BA  EF68  F028         	goto	l1116
 13303   0050BE                     l1117:
 13304   0050BE  A002               	btfss	___fladd@b^0,0,c
 13305   0050C0  EF64  F028         	goto	u3341
 13306   0050C4  EF66  F028         	goto	u3340
 13307   0050C8                     u3341:
 13308   0050C8  EF68  F028         	goto	l1116
 13309   0050CC                     u3340:
 13310   0050CC  EF5B  F028         	goto	l3838
 13311   0050D0                     l1116:
 13312   0050D0  500F               	movf	___fladd@aexp^0,w,c
 13313   0050D2  B4D8               	btfsc	status,2,c
 13314   0050D4  EF6E  F028         	goto	u3351
 13315   0050D8  EF70  F028         	goto	u3350
 13316   0050DC                     u3351:
 13317   0050DC  EF9B  F028         	goto	l3850
 13318   0050E0                     u3350:
 13319   0050E0  0E01               	movlw	1
 13320   0050E2  2602               	addwf	___fladd@b^0,f,c
 13321   0050E4  0E00               	movlw	0
 13322   0050E6  2203               	addwfc	(___fladd@b+1)^0,f,c
 13323   0050E8  2204               	addwfc	(___fladd@b+2)^0,f,c
 13324   0050EA  2205               	addwfc	(___fladd@b+3)^0,f,c
 13325   0050EC  A005               	btfss	(___fladd@b+3)^0,0,c
 13326   0050EE  EF7B  F028         	goto	u3361
 13327   0050F2  EF7D  F028         	goto	u3360
 13328   0050F6                     u3361:
 13329   0050F6  EF9B  F028         	goto	l3850
 13330   0050FA                     u3360:
 13331   0050FA  C002  F00A         	movff	___fladd@b,??___fladd
 13332   0050FE  C003  F00B         	movff	___fladd@b+1,??___fladd+1
 13333   005102  C004  F00C         	movff	___fladd@b+2,??___fladd+2
 13334   005106  C005  F00D         	movff	___fladd@b+3,??___fladd+3
 13335   00510A  340D               	rlcf	(??___fladd+3)^0,w,c
 13336   00510C  320D               	rrcf	(??___fladd+3)^0,f,c
 13337   00510E  320C               	rrcf	(??___fladd+2)^0,f,c
 13338   005110  320B               	rrcf	(??___fladd+1)^0,f,c
 13339   005112  320A               	rrcf	??___fladd^0,f,c
 13340   005114  C00A  F002         	movff	??___fladd,___fladd@b
 13341   005118  C00B  F003         	movff	??___fladd+1,___fladd@b+1
 13342   00511C  C00C  F004         	movff	??___fladd+2,___fladd@b+2
 13343   005120  C00D  F005         	movff	??___fladd+3,___fladd@b+3
 13344   005124  2810               	incf	___fladd@bexp^0,w,c
 13345   005126  B4D8               	btfsc	status,2,c
 13346   005128  EF98  F028         	goto	u3371
 13347   00512C  EF9A  F028         	goto	u3370
 13348   005130                     u3371:
 13349   005130  EF9B  F028         	goto	l3850
 13350   005134                     u3370:
 13351   005134  2A10               	incf	___fladd@bexp^0,f,c
 13352   005136                     l3850:
 13353   005136  2810               	incf	___fladd@bexp^0,w,c
 13354   005138  B4D8               	btfsc	status,2,c
 13355   00513A  EFA1  F028         	goto	u3381
 13356   00513E  EFA3  F028         	goto	u3380
 13357   005142                     u3381:
 13358   005142  EFAB  F028         	goto	l3854
 13359   005146                     u3380:
 13360   005146  5010               	movf	___fladd@bexp^0,w,c
 13361   005148  A4D8               	btfss	status,2,c
 13362   00514A  EFA9  F028         	goto	u3391
 13363   00514E  EFAB  F028         	goto	u3390
 13364   005152                     u3391:
 13365   005152  EFBD  F028         	goto	l3858
 13366   005156                     u3390:
 13367   005156                     l3854:
 13368   005156  0E00               	movlw	0
 13369   005158  6E02               	movwf	___fladd@b^0,c
 13370   00515A  0E00               	movlw	0
 13371   00515C  6E03               	movwf	(___fladd@b+1)^0,c
 13372   00515E  0E00               	movlw	0
 13373   005160  6E04               	movwf	(___fladd@b+2)^0,c
 13374   005162  0E00               	movlw	0
 13375   005164  6E05               	movwf	(___fladd@b+3)^0,c
 13376   005166  5010               	movf	___fladd@bexp^0,w,c
 13377   005168  A4D8               	btfss	status,2,c
 13378   00516A  EFB9  F028         	goto	u3401
 13379   00516E  EFBB  F028         	goto	u3400
 13380   005172                     u3401:
 13381   005172  EFBD  F028         	goto	l3858
 13382   005176                     u3400:
 13383   005176  0E00               	movlw	0
 13384   005178  6E0E               	movwf	___fladd@signs^0,c
 13385   00517A                     l3858:
 13386   00517A  A010               	btfss	___fladd@bexp^0,0,c
 13387   00517C  EFC2  F028         	goto	u3411
 13388   005180  EFC4  F028         	goto	u3410
 13389   005184                     u3411:
 13390   005184  EFC7  F028         	goto	l3862
 13391   005188                     u3410:
 13392   005188  8E04               	bsf	(___fladd@b+2)^0,7,c
 13393   00518A  EFC8  F028         	goto	l3864
 13394   00518E                     l3862:
 13395   00518E  9E04               	bcf	(___fladd@b+2)^0,7,c
 13396   005190                     l3864:
 13397   005190  90D8               	bcf	status,0,c
 13398   005192  3010               	rrcf	___fladd@bexp^0,w,c
 13399   005194  6E05               	movwf	(___fladd@b+3)^0,c
 13400   005196  AE0E               	btfss	___fladd@signs^0,7,c
 13401   005198  EFD0  F028         	goto	u3421
 13402   00519C  EFD2  F028         	goto	u3420
 13403   0051A0                     u3421:
 13404   0051A0  EFD3  F028         	goto	l3870
 13405   0051A4                     u3420:
 13406   0051A4  8E05               	bsf	(___fladd@b+3)^0,7,c
 13407   0051A6                     l3870:
 13408   0051A6  C002  F002         	movff	___fladd@b,?___fladd
 13409   0051AA  C003  F003         	movff	___fladd@b+1,?___fladd+1
 13410   0051AE  C004  F004         	movff	___fladd@b+2,?___fladd+2
 13411   0051B2  C005  F005         	movff	___fladd@b+3,?___fladd+3
 13412   0051B6                     l1099:
 13413   0051B6  0012               	return		;funcret
 13414   0051B8                     __end_of___fladd:
 13415                           	callstack 0
 13416                           
 13417 ;; *************** function ___flneg *****************
 13418 ;; Defined at:
 13419 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
 13420 ;; Parameters:    Size  Location     Type
 13421 ;;  f1              4    1[COMRAM] unsigned char 
 13422 ;; Auto vars:     Size  Location     Type
 13423 ;;		None
 13424 ;; Return value:  Size  Location     Type
 13425 ;;                  4    1[COMRAM] unsigned char 
 13426 ;; Registers used:
 13427 ;;		wreg, status,2, status,0
 13428 ;; Tracked objects:
 13429 ;;		On entry : 0/0
 13430 ;;		On exit  : 0/0
 13431 ;;		Unchanged: 0/0
 13432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13436 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13437 ;;Total ram usage:        4 bytes
 13438 ;; Hardware stack levels used: 1
 13439 ;; Hardware stack levels required when called: 2
 13440 ;; This function calls:
 13441 ;;		Nothing
 13442 ;; This function is called by:
 13443 ;;		_powf
 13444 ;; This function uses a non-reentrant model
 13445 ;;
 13446                           
 13447                           	psect	text36
 13448   007484                     __ptext36:
 13449                           	callstack 0
 13450   007484                     ___flneg:
 13451                           	callstack 26
 13452   007484  5002               	movf	___flneg@f1^0,w,c
 13453   007486  1003               	iorwf	(___flneg@f1+1)^0,w,c
 13454   007488  1004               	iorwf	(___flneg@f1+2)^0,w,c
 13455   00748A  1005               	iorwf	(___flneg@f1+3)^0,w,c
 13456   00748C  B4D8               	btfsc	status,2,c
 13457   00748E  EF4B  F03A         	goto	u4281
 13458   007492  EF4D  F03A         	goto	u4280
 13459   007496                     u4281:
 13460   007496  EF55  F03A         	goto	l4406
 13461   00749A                     u4280:
 13462   00749A  0E00               	movlw	0
 13463   00749C  1A02               	xorwf	___flneg@f1^0,f,c
 13464   00749E  0E00               	movlw	0
 13465   0074A0  1A03               	xorwf	(___flneg@f1+1)^0,f,c
 13466   0074A2  0E00               	movlw	0
 13467   0074A4  1A04               	xorwf	(___flneg@f1+2)^0,f,c
 13468   0074A6  0E80               	movlw	128
 13469   0074A8  1A05               	xorwf	(___flneg@f1+3)^0,f,c
 13470   0074AA                     l4406:
 13471   0074AA  C002  F002         	movff	___flneg@f1,?___flneg
 13472   0074AE  C003  F003         	movff	___flneg@f1+1,?___flneg+1
 13473   0074B2  C004  F004         	movff	___flneg@f1+2,?___flneg+2
 13474   0074B6  C005  F005         	movff	___flneg@f1+3,?___flneg+3
 13475   0074BA  0012               	return		;funcret
 13476   0074BC                     __end_of___flneg:
 13477                           	callstack 0
 13478                           
 13479 ;; *************** function ___flge *****************
 13480 ;; Defined at:
 13481 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 13482 ;; Parameters:    Size  Location     Type
 13483 ;;  ff1             4   75[COMRAM] unsigned char 
 13484 ;;  ff2             4   79[COMRAM] unsigned char 
 13485 ;; Auto vars:     Size  Location     Type
 13486 ;;		None
 13487 ;; Return value:  Size  Location     Type
 13488 ;;		None               void
 13489 ;; Registers used:
 13490 ;;		wreg, status,2, status,0
 13491 ;; Tracked objects:
 13492 ;;		On entry : 0/0
 13493 ;;		On exit  : 0/0
 13494 ;;		Unchanged: 0/0
 13495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13496 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13498 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13499 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13500 ;;Total ram usage:       12 bytes
 13501 ;; Hardware stack levels used: 1
 13502 ;; Hardware stack levels required when called: 2
 13503 ;; This function calls:
 13504 ;;		Nothing
 13505 ;; This function is called by:
 13506 ;;		_decide_action
 13507 ;;		_powf
 13508 ;; This function uses a non-reentrant model
 13509 ;;
 13510                           
 13511                           	psect	text37
 13512   00668E                     __ptext37:
 13513                           	callstack 0
 13514   00668E                     ___flge:
 13515                           	callstack 26
 13516   00668E  0E00               	movlw	0
 13517   006690  144C               	andwf	___flge@ff1^0,w,c
 13518   006692  6E54               	movwf	??___flge^0,c
 13519   006694  0E00               	movlw	0
 13520   006696  144D               	andwf	(___flge@ff1+1)^0,w,c
 13521   006698  6E55               	movwf	(??___flge+1)^0,c
 13522   00669A  0E80               	movlw	128
 13523   00669C  144E               	andwf	(___flge@ff1+2)^0,w,c
 13524   00669E  6E56               	movwf	(??___flge+2)^0,c
 13525   0066A0  0E7F               	movlw	127
 13526   0066A2  144F               	andwf	(___flge@ff1+3)^0,w,c
 13527   0066A4  6E57               	movwf	(??___flge+3)^0,c
 13528   0066A6  5054               	movf	??___flge^0,w,c
 13529   0066A8  1055               	iorwf	(??___flge+1)^0,w,c
 13530   0066AA  1056               	iorwf	(??___flge+2)^0,w,c
 13531   0066AC  1057               	iorwf	(??___flge+3)^0,w,c
 13532   0066AE  A4D8               	btfss	status,2,c
 13533   0066B0  EF5C  F033         	goto	u4231
 13534   0066B4  EF5E  F033         	goto	u4230
 13535   0066B8                     u4231:
 13536   0066B8  EF66  F033         	goto	l4384
 13537   0066BC                     u4230:
 13538   0066BC  0E00               	movlw	0
 13539   0066BE  6E4C               	movwf	___flge@ff1^0,c
 13540   0066C0  0E00               	movlw	0
 13541   0066C2  6E4D               	movwf	(___flge@ff1+1)^0,c
 13542   0066C4  0E00               	movlw	0
 13543   0066C6  6E4E               	movwf	(___flge@ff1+2)^0,c
 13544   0066C8  0E00               	movlw	0
 13545   0066CA  6E4F               	movwf	(___flge@ff1+3)^0,c
 13546   0066CC                     l4384:
 13547   0066CC  0E00               	movlw	0
 13548   0066CE  1450               	andwf	___flge@ff2^0,w,c
 13549   0066D0  6E54               	movwf	??___flge^0,c
 13550   0066D2  0E00               	movlw	0
 13551   0066D4  1451               	andwf	(___flge@ff2+1)^0,w,c
 13552   0066D6  6E55               	movwf	(??___flge+1)^0,c
 13553   0066D8  0E80               	movlw	128
 13554   0066DA  1452               	andwf	(___flge@ff2+2)^0,w,c
 13555   0066DC  6E56               	movwf	(??___flge+2)^0,c
 13556   0066DE  0E7F               	movlw	127
 13557   0066E0  1453               	andwf	(___flge@ff2+3)^0,w,c
 13558   0066E2  6E57               	movwf	(??___flge+3)^0,c
 13559   0066E4  5054               	movf	??___flge^0,w,c
 13560   0066E6  1055               	iorwf	(??___flge+1)^0,w,c
 13561   0066E8  1056               	iorwf	(??___flge+2)^0,w,c
 13562   0066EA  1057               	iorwf	(??___flge+3)^0,w,c
 13563   0066EC  A4D8               	btfss	status,2,c
 13564   0066EE  EF7B  F033         	goto	u4241
 13565   0066F2  EF7D  F033         	goto	u4240
 13566   0066F6                     u4241:
 13567   0066F6  EF85  F033         	goto	l4388
 13568   0066FA                     u4240:
 13569   0066FA  0E00               	movlw	0
 13570   0066FC  6E50               	movwf	___flge@ff2^0,c
 13571   0066FE  0E00               	movlw	0
 13572   006700  6E51               	movwf	(___flge@ff2+1)^0,c
 13573   006702  0E00               	movlw	0
 13574   006704  6E52               	movwf	(___flge@ff2+2)^0,c
 13575   006706  0E00               	movlw	0
 13576   006708  6E53               	movwf	(___flge@ff2+3)^0,c
 13577   00670A                     l4388:
 13578   00670A  AE4F               	btfss	(___flge@ff1+3)^0,7,c
 13579   00670C  EF8A  F033         	goto	u4251
 13580   006710  EF8C  F033         	goto	u4250
 13581   006714                     u4251:
 13582   006714  EF95  F033         	goto	l4392
 13583   006718                     u4250:
 13584   006718  6C4C               	negf	___flge@ff1^0,c
 13585   00671A  1E4D               	comf	(___flge@ff1+1)^0,f,c
 13586   00671C  B0D8               	btfsc	status,0,c
 13587   00671E  2A4D               	incf	(___flge@ff1+1)^0,f,c
 13588   006720  1E4E               	comf	(___flge@ff1+2)^0,f,c
 13589   006722  B0D8               	btfsc	status,0,c
 13590   006724  2A4E               	incf	(___flge@ff1+2)^0,f,c
 13591   006726  0E80               	movlw	128
 13592   006728  564F               	subfwb	(___flge@ff1+3)^0,f,c
 13593   00672A                     l4392:
 13594   00672A  AE53               	btfss	(___flge@ff2+3)^0,7,c
 13595   00672C  EF9A  F033         	goto	u4261
 13596   006730  EF9C  F033         	goto	u4260
 13597   006734                     u4261:
 13598   006734  EFA5  F033         	goto	l827
 13599   006738                     u4260:
 13600   006738  6C50               	negf	___flge@ff2^0,c
 13601   00673A  1E51               	comf	(___flge@ff2+1)^0,f,c
 13602   00673C  B0D8               	btfsc	status,0,c
 13603   00673E  2A51               	incf	(___flge@ff2+1)^0,f,c
 13604   006740  1E52               	comf	(___flge@ff2+2)^0,f,c
 13605   006742  B0D8               	btfsc	status,0,c
 13606   006744  2A52               	incf	(___flge@ff2+2)^0,f,c
 13607   006746  0E80               	movlw	128
 13608   006748  5653               	subfwb	(___flge@ff2+3)^0,f,c
 13609   00674A                     l827:
 13610   00674A  0E00               	movlw	0
 13611   00674C  1A4C               	xorwf	___flge@ff1^0,f,c
 13612   00674E  0E00               	movlw	0
 13613   006750  1A4D               	xorwf	(___flge@ff1+1)^0,f,c
 13614   006752  0E00               	movlw	0
 13615   006754  1A4E               	xorwf	(___flge@ff1+2)^0,f,c
 13616   006756  0E80               	movlw	128
 13617   006758  1A4F               	xorwf	(___flge@ff1+3)^0,f,c
 13618   00675A  0E00               	movlw	0
 13619   00675C  1A50               	xorwf	___flge@ff2^0,f,c
 13620   00675E  0E00               	movlw	0
 13621   006760  1A51               	xorwf	(___flge@ff2+1)^0,f,c
 13622   006762  0E00               	movlw	0
 13623   006764  1A52               	xorwf	(___flge@ff2+2)^0,f,c
 13624   006766  0E80               	movlw	128
 13625   006768  1A53               	xorwf	(___flge@ff2+3)^0,f,c
 13626   00676A  5050               	movf	___flge@ff2^0,w,c
 13627   00676C  5C4C               	subwf	___flge@ff1^0,w,c
 13628   00676E  5051               	movf	(___flge@ff2+1)^0,w,c
 13629   006770  584D               	subwfb	(___flge@ff1+1)^0,w,c
 13630   006772  5052               	movf	(___flge@ff2+2)^0,w,c
 13631   006774  584E               	subwfb	(___flge@ff1+2)^0,w,c
 13632   006776  5053               	movf	(___flge@ff2+3)^0,w,c
 13633   006778  584F               	subwfb	(___flge@ff1+3)^0,w,c
 13634   00677A  B0D8               	btfsc	status,0,c
 13635   00677C  EFC2  F033         	goto	u4271
 13636   006780  EFC4  F033         	goto	u4270
 13637   006784                     u4271:
 13638   006784  EFC7  F033         	goto	l4398
 13639   006788                     u4270:
 13640   006788  90D8               	bcf	status,0,c
 13641   00678A  EFC8  F033         	goto	l832
 13642   00678E                     l4398:
 13643   00678E  80D8               	bsf	status,0,c
 13644   006790                     l832:
 13645   006790  0012               	return		;funcret
 13646   006792                     __end_of___flge:
 13647                           	callstack 0
 13648                           
 13649 ;; *************** function ___fldiv *****************
 13650 ;; Defined at:
 13651 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 13652 ;; Parameters:    Size  Location     Type
 13653 ;;  b               4   42[COMRAM] unsigned char 
 13654 ;;  a               4   46[COMRAM] unsigned char 
 13655 ;; Auto vars:     Size  Location     Type
 13656 ;;  grs             4   61[COMRAM] unsigned long 
 13657 ;;  rem             4   54[COMRAM] unsigned long 
 13658 ;;  new_exp         2   59[COMRAM] short 
 13659 ;;  aexp            1   66[COMRAM] unsigned char 
 13660 ;;  bexp            1   65[COMRAM] unsigned char 
 13661 ;;  sign            1   58[COMRAM] unsigned char 
 13662 ;; Return value:  Size  Location     Type
 13663 ;;                  4   42[COMRAM] unsigned char 
 13664 ;; Registers used:
 13665 ;;		wreg, status,2, status,0
 13666 ;; Tracked objects:
 13667 ;;		On entry : 0/0
 13668 ;;		On exit  : 0/0
 13669 ;;		Unchanged: 0/0
 13670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13671 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13672 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13673 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13674 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13675 ;;Total ram usage:       25 bytes
 13676 ;; Hardware stack levels used: 1
 13677 ;; Hardware stack levels required when called: 2
 13678 ;; This function calls:
 13679 ;;		Nothing
 13680 ;; This function is called by:
 13681 ;;		_decide_action
 13682 ;;		_powf
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           	psect	text38
 13687   0059C0                     __ptext38:
 13688                           	callstack 0
 13689   0059C0                     ___fldiv:
 13690                           	callstack 26
 13691   0059C0  502E               	movf	(___fldiv@b+3)^0,w,c
 13692   0059C2  0B80               	andlw	128
 13693   0059C4  6E3B               	movwf	___fldiv@sign^0,c
 13694   0059C6  502E               	movf	(___fldiv@b+3)^0,w,c
 13695   0059C8  242E               	addwf	(___fldiv@b+3)^0,w,c
 13696   0059CA  6E42               	movwf	___fldiv@bexp^0,c
 13697   0059CC  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 13698   0059CE  EFEB  F02C         	goto	u4001
 13699   0059D2  EFED  F02C         	goto	u4000
 13700   0059D6                     u4001:
 13701   0059D6  EFEE  F02C         	goto	l4242
 13702   0059DA                     u4000:
 13703   0059DA  8042               	bsf	___fldiv@bexp^0,0,c
 13704   0059DC                     l4242:
 13705   0059DC  5042               	movf	___fldiv@bexp^0,w,c
 13706   0059DE  B4D8               	btfsc	status,2,c
 13707   0059E0  EFF4  F02C         	goto	u4011
 13708   0059E4  EFF6  F02C         	goto	u4010
 13709   0059E8                     u4011:
 13710   0059E8  EF0B  F02D         	goto	l4252
 13711   0059EC                     u4010:
 13712   0059EC  2842               	incf	___fldiv@bexp^0,w,c
 13713   0059EE  A4D8               	btfss	status,2,c
 13714   0059F0  EFFC  F02C         	goto	u4021
 13715   0059F4  EFFE  F02C         	goto	u4020
 13716   0059F8                     u4021:
 13717   0059F8  EF06  F02D         	goto	l4248
 13718   0059FC                     u4020:
 13719   0059FC  0E00               	movlw	0
 13720   0059FE  6E2B               	movwf	___fldiv@b^0,c
 13721   005A00  0E00               	movlw	0
 13722   005A02  6E2C               	movwf	(___fldiv@b+1)^0,c
 13723   005A04  0E00               	movlw	0
 13724   005A06  6E2D               	movwf	(___fldiv@b+2)^0,c
 13725   005A08  0E00               	movlw	0
 13726   005A0A  6E2E               	movwf	(___fldiv@b+3)^0,c
 13727   005A0C                     l4248:
 13728   005A0C  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 13729   005A0E  0E00               	movlw	0
 13730   005A10  6E2E               	movwf	(___fldiv@b+3)^0,c
 13731   005A12  EF13  F02D         	goto	l4254
 13732   005A16                     l4252:
 13733   005A16  0E00               	movlw	0
 13734   005A18  6E2B               	movwf	___fldiv@b^0,c
 13735   005A1A  0E00               	movlw	0
 13736   005A1C  6E2C               	movwf	(___fldiv@b+1)^0,c
 13737   005A1E  0E00               	movlw	0
 13738   005A20  6E2D               	movwf	(___fldiv@b+2)^0,c
 13739   005A22  0E00               	movlw	0
 13740   005A24  6E2E               	movwf	(___fldiv@b+3)^0,c
 13741   005A26                     l4254:
 13742   005A26  5032               	movf	(___fldiv@a+3)^0,w,c
 13743   005A28  0B80               	andlw	128
 13744   005A2A  1A3B               	xorwf	___fldiv@sign^0,f,c
 13745   005A2C  5032               	movf	(___fldiv@a+3)^0,w,c
 13746   005A2E  2432               	addwf	(___fldiv@a+3)^0,w,c
 13747   005A30  6E43               	movwf	___fldiv@aexp^0,c
 13748   005A32  AE31               	btfss	(___fldiv@a+2)^0,7,c
 13749   005A34  EF1E  F02D         	goto	u4031
 13750   005A38  EF20  F02D         	goto	u4030
 13751   005A3C                     u4031:
 13752   005A3C  EF21  F02D         	goto	l4262
 13753   005A40                     u4030:
 13754   005A40  8043               	bsf	___fldiv@aexp^0,0,c
 13755   005A42                     l4262:
 13756   005A42  5043               	movf	___fldiv@aexp^0,w,c
 13757   005A44  B4D8               	btfsc	status,2,c
 13758   005A46  EF27  F02D         	goto	u4041
 13759   005A4A  EF29  F02D         	goto	u4040
 13760   005A4E                     u4041:
 13761   005A4E  EF3E  F02D         	goto	l4272
 13762   005A52                     u4040:
 13763   005A52  2843               	incf	___fldiv@aexp^0,w,c
 13764   005A54  A4D8               	btfss	status,2,c
 13765   005A56  EF2F  F02D         	goto	u4051
 13766   005A5A  EF31  F02D         	goto	u4050
 13767   005A5E                     u4051:
 13768   005A5E  EF39  F02D         	goto	l4268
 13769   005A62                     u4050:
 13770   005A62  0E00               	movlw	0
 13771   005A64  6E2F               	movwf	___fldiv@a^0,c
 13772   005A66  0E00               	movlw	0
 13773   005A68  6E30               	movwf	(___fldiv@a+1)^0,c
 13774   005A6A  0E00               	movlw	0
 13775   005A6C  6E31               	movwf	(___fldiv@a+2)^0,c
 13776   005A6E  0E00               	movlw	0
 13777   005A70  6E32               	movwf	(___fldiv@a+3)^0,c
 13778   005A72                     l4268:
 13779   005A72  8E31               	bsf	(___fldiv@a+2)^0,7,c
 13780   005A74  0E00               	movlw	0
 13781   005A76  6E32               	movwf	(___fldiv@a+3)^0,c
 13782   005A78  EF46  F02D         	goto	l4274
 13783   005A7C                     l4272:
 13784   005A7C  0E00               	movlw	0
 13785   005A7E  6E2F               	movwf	___fldiv@a^0,c
 13786   005A80  0E00               	movlw	0
 13787   005A82  6E30               	movwf	(___fldiv@a+1)^0,c
 13788   005A84  0E00               	movlw	0
 13789   005A86  6E31               	movwf	(___fldiv@a+2)^0,c
 13790   005A88  0E00               	movlw	0
 13791   005A8A  6E32               	movwf	(___fldiv@a+3)^0,c
 13792   005A8C                     l4274:
 13793   005A8C  502F               	movf	___fldiv@a^0,w,c
 13794   005A8E  1030               	iorwf	(___fldiv@a+1)^0,w,c
 13795   005A90  1031               	iorwf	(___fldiv@a+2)^0,w,c
 13796   005A92  1032               	iorwf	(___fldiv@a+3)^0,w,c
 13797   005A94  A4D8               	btfss	status,2,c
 13798   005A96  EF4F  F02D         	goto	u4061
 13799   005A9A  EF51  F02D         	goto	u4060
 13800   005A9E                     u4061:
 13801   005A9E  EF69  F02D         	goto	l4286
 13802   005AA2                     u4060:
 13803   005AA2  0E00               	movlw	0
 13804   005AA4  6E2B               	movwf	___fldiv@b^0,c
 13805   005AA6  0E00               	movlw	0
 13806   005AA8  6E2C               	movwf	(___fldiv@b+1)^0,c
 13807   005AAA  0E00               	movlw	0
 13808   005AAC  6E2D               	movwf	(___fldiv@b+2)^0,c
 13809   005AAE  0E00               	movlw	0
 13810   005AB0  6E2E               	movwf	(___fldiv@b+3)^0,c
 13811   005AB2  0E80               	movlw	128
 13812   005AB4  122D               	iorwf	(___fldiv@b+2)^0,f,c
 13813   005AB6  0E7F               	movlw	127
 13814   005AB8  122E               	iorwf	(___fldiv@b+3)^0,f,c
 13815   005ABA                     l4280:
 13816   005ABA  503B               	movf	___fldiv@sign^0,w,c
 13817   005ABC  122E               	iorwf	(___fldiv@b+3)^0,f,c
 13818   005ABE  C02B  F02B         	movff	___fldiv@b,?___fldiv
 13819   005AC2  C02C  F02C         	movff	___fldiv@b+1,?___fldiv+1
 13820   005AC6  C02D  F02D         	movff	___fldiv@b+2,?___fldiv+2
 13821   005ACA  C02E  F02E         	movff	___fldiv@b+3,?___fldiv+3
 13822   005ACE  EFAC  F02E         	goto	l1144
 13823   005AD2                     l4286:
 13824   005AD2  5042               	movf	___fldiv@bexp^0,w,c
 13825   005AD4  A4D8               	btfss	status,2,c
 13826   005AD6  EF6F  F02D         	goto	u4071
 13827   005ADA  EF71  F02D         	goto	u4070
 13828   005ADE                     u4071:
 13829   005ADE  EF7B  F02D         	goto	l4294
 13830   005AE2                     u4070:
 13831   005AE2  0E00               	movlw	0
 13832   005AE4  6E2B               	movwf	?___fldiv^0,c
 13833   005AE6  0E00               	movlw	0
 13834   005AE8  6E2C               	movwf	(?___fldiv+1)^0,c
 13835   005AEA  0E00               	movlw	0
 13836   005AEC  6E2D               	movwf	(?___fldiv+2)^0,c
 13837   005AEE  0E00               	movlw	0
 13838   005AF0  6E2E               	movwf	(?___fldiv+3)^0,c
 13839   005AF2  EFAC  F02E         	goto	l1144
 13840   005AF6                     l4294:
 13841   005AF6  5043               	movf	___fldiv@aexp^0,w,c
 13842   005AF8  C042  F033         	movff	___fldiv@bexp,??___fldiv
 13843   005AFC  6A34               	clrf	(??___fldiv+1)^0,c
 13844   005AFE  5E33               	subwf	??___fldiv^0,f,c
 13845   005B00  0E00               	movlw	0
 13846   005B02  5A34               	subwfb	(??___fldiv+1)^0,f,c
 13847   005B04  0E7F               	movlw	127
 13848   005B06  2433               	addwf	??___fldiv^0,w,c
 13849   005B08  6E3C               	movwf	___fldiv@new_exp^0,c
 13850   005B0A  0E00               	movlw	0
 13851   005B0C  2034               	addwfc	(??___fldiv+1)^0,w,c
 13852   005B0E  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 13853   005B10  C02B  F037         	movff	___fldiv@b,___fldiv@rem
 13854   005B14  C02C  F038         	movff	___fldiv@b+1,___fldiv@rem+1
 13855   005B18  C02D  F039         	movff	___fldiv@b+2,___fldiv@rem+2
 13856   005B1C  C02E  F03A         	movff	___fldiv@b+3,___fldiv@rem+3
 13857   005B20  0E00               	movlw	0
 13858   005B22  6E2B               	movwf	___fldiv@b^0,c
 13859   005B24  0E00               	movlw	0
 13860   005B26  6E2C               	movwf	(___fldiv@b+1)^0,c
 13861   005B28  0E00               	movlw	0
 13862   005B2A  6E2D               	movwf	(___fldiv@b+2)^0,c
 13863   005B2C  0E00               	movlw	0
 13864   005B2E  6E2E               	movwf	(___fldiv@b+3)^0,c
 13865   005B30  0E00               	movlw	0
 13866   005B32  6E3E               	movwf	___fldiv@grs^0,c
 13867   005B34  0E00               	movlw	0
 13868   005B36  6E3F               	movwf	(___fldiv@grs+1)^0,c
 13869   005B38  0E00               	movlw	0
 13870   005B3A  6E40               	movwf	(___fldiv@grs+2)^0,c
 13871   005B3C  0E00               	movlw	0
 13872   005B3E  6E41               	movwf	(___fldiv@grs+3)^0,c
 13873   005B40  0E00               	movlw	0
 13874   005B42  6E43               	movwf	___fldiv@aexp^0,c
 13875   005B44  EFDC  F02D         	goto	l1146
 13876   005B48                     l4304:
 13877   005B48  5043               	movf	___fldiv@aexp^0,w,c
 13878   005B4A  B4D8               	btfsc	status,2,c
 13879   005B4C  EFAA  F02D         	goto	u4081
 13880   005B50  EFAC  F02D         	goto	u4080
 13881   005B54                     u4081:
 13882   005B54  EFC3  F02D         	goto	l4312
 13883   005B58                     u4080:
 13884   005B58  90D8               	bcf	status,0,c
 13885   005B5A  3637               	rlcf	___fldiv@rem^0,f,c
 13886   005B5C  3638               	rlcf	(___fldiv@rem+1)^0,f,c
 13887   005B5E  3639               	rlcf	(___fldiv@rem+2)^0,f,c
 13888   005B60  363A               	rlcf	(___fldiv@rem+3)^0,f,c
 13889   005B62  90D8               	bcf	status,0,c
 13890   005B64  362B               	rlcf	___fldiv@b^0,f,c
 13891   005B66  362C               	rlcf	(___fldiv@b+1)^0,f,c
 13892   005B68  362D               	rlcf	(___fldiv@b+2)^0,f,c
 13893   005B6A  362E               	rlcf	(___fldiv@b+3)^0,f,c
 13894   005B6C  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 13895   005B6E  EFBB  F02D         	goto	u4091
 13896   005B72  EFBD  F02D         	goto	u4090
 13897   005B76                     u4091:
 13898   005B76  EFBE  F02D         	goto	l1149
 13899   005B7A                     u4090:
 13900   005B7A  802B               	bsf	___fldiv@b^0,0,c
 13901   005B7C                     l1149:
 13902   005B7C  90D8               	bcf	status,0,c
 13903   005B7E  363E               	rlcf	___fldiv@grs^0,f,c
 13904   005B80  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 13905   005B82  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 13906   005B84  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 13907   005B86                     l4312:
 13908   005B86  502F               	movf	___fldiv@a^0,w,c
 13909   005B88  5C37               	subwf	___fldiv@rem^0,w,c
 13910   005B8A  5030               	movf	(___fldiv@a+1)^0,w,c
 13911   005B8C  5838               	subwfb	(___fldiv@rem+1)^0,w,c
 13912   005B8E  5031               	movf	(___fldiv@a+2)^0,w,c
 13913   005B90  5839               	subwfb	(___fldiv@rem+2)^0,w,c
 13914   005B92  5032               	movf	(___fldiv@a+3)^0,w,c
 13915   005B94  583A               	subwfb	(___fldiv@rem+3)^0,w,c
 13916   005B96  A0D8               	btfss	status,0,c
 13917   005B98  EFD0  F02D         	goto	u4101
 13918   005B9C  EFD2  F02D         	goto	u4100
 13919   005BA0                     u4101:
 13920   005BA0  EFDB  F02D         	goto	l4318
 13921   005BA4                     u4100:
 13922   005BA4  8C41               	bsf	(___fldiv@grs+3)^0,6,c
 13923   005BA6  502F               	movf	___fldiv@a^0,w,c
 13924   005BA8  5E37               	subwf	___fldiv@rem^0,f,c
 13925   005BAA  5030               	movf	(___fldiv@a+1)^0,w,c
 13926   005BAC  5A38               	subwfb	(___fldiv@rem+1)^0,f,c
 13927   005BAE  5031               	movf	(___fldiv@a+2)^0,w,c
 13928   005BB0  5A39               	subwfb	(___fldiv@rem+2)^0,f,c
 13929   005BB2  5032               	movf	(___fldiv@a+3)^0,w,c
 13930   005BB4  5A3A               	subwfb	(___fldiv@rem+3)^0,f,c
 13931   005BB6                     l4318:
 13932   005BB6  2A43               	incf	___fldiv@aexp^0,f,c
 13933   005BB8                     l1146:
 13934   005BB8  0E19               	movlw	25
 13935   005BBA  6443               	cpfsgt	___fldiv@aexp^0,c
 13936   005BBC  EFE2  F02D         	goto	u4111
 13937   005BC0  EFE4  F02D         	goto	u4110
 13938   005BC4                     u4111:
 13939   005BC4  EFA4  F02D         	goto	l4304
 13940   005BC8                     u4110:
 13941   005BC8  5037               	movf	___fldiv@rem^0,w,c
 13942   005BCA  1038               	iorwf	(___fldiv@rem+1)^0,w,c
 13943   005BCC  1039               	iorwf	(___fldiv@rem+2)^0,w,c
 13944   005BCE  103A               	iorwf	(___fldiv@rem+3)^0,w,c
 13945   005BD0  B4D8               	btfsc	status,2,c
 13946   005BD2  EFED  F02D         	goto	u4121
 13947   005BD6  EFEF  F02D         	goto	u4120
 13948   005BDA                     u4121:
 13949   005BDA  EF07  F02E         	goto	l4330
 13950   005BDE                     u4120:
 13951   005BDE  803E               	bsf	___fldiv@grs^0,0,c
 13952   005BE0  EF07  F02E         	goto	l4330
 13953   005BE4                     l4324:
 13954   005BE4  90D8               	bcf	status,0,c
 13955   005BE6  362B               	rlcf	___fldiv@b^0,f,c
 13956   005BE8  362C               	rlcf	(___fldiv@b+1)^0,f,c
 13957   005BEA  362D               	rlcf	(___fldiv@b+2)^0,f,c
 13958   005BEC  362E               	rlcf	(___fldiv@b+3)^0,f,c
 13959   005BEE  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 13960   005BF0  EFFC  F02D         	goto	u4131
 13961   005BF4  EFFE  F02D         	goto	u4130
 13962   005BF8                     u4131:
 13963   005BF8  EFFF  F02D         	goto	l1155
 13964   005BFC                     u4130:
 13965   005BFC  802B               	bsf	___fldiv@b^0,0,c
 13966   005BFE                     l1155:
 13967   005BFE  90D8               	bcf	status,0,c
 13968   005C00  363E               	rlcf	___fldiv@grs^0,f,c
 13969   005C02  363F               	rlcf	(___fldiv@grs+1)^0,f,c
 13970   005C04  3640               	rlcf	(___fldiv@grs+2)^0,f,c
 13971   005C06  3641               	rlcf	(___fldiv@grs+3)^0,f,c
 13972   005C08  063C               	decf	___fldiv@new_exp^0,f,c
 13973   005C0A  A0D8               	btfss	status,0,c
 13974   005C0C  063D               	decf	(___fldiv@new_exp+1)^0,f,c
 13975   005C0E                     l4330:
 13976   005C0E  AE2D               	btfss	(___fldiv@b+2)^0,7,c
 13977   005C10  EF0C  F02E         	goto	u4141
 13978   005C14  EF0E  F02E         	goto	u4140
 13979   005C18                     u4141:
 13980   005C18  EFF2  F02D         	goto	l4324
 13981   005C1C                     u4140:
 13982   005C1C  0E00               	movlw	0
 13983   005C1E  6E43               	movwf	___fldiv@aexp^0,c
 13984   005C20  AE41               	btfss	(___fldiv@grs+3)^0,7,c
 13985   005C22  EF15  F02E         	goto	u4151
 13986   005C26  EF17  F02E         	goto	u4150
 13987   005C2A                     u4151:
 13988   005C2A  EF3B  F02E         	goto	l1157
 13989   005C2E                     u4150:
 13990   005C2E  0EFF               	movlw	255
 13991   005C30  143E               	andwf	___fldiv@grs^0,w,c
 13992   005C32  6E33               	movwf	??___fldiv^0,c
 13993   005C34  0EFF               	movlw	255
 13994   005C36  143F               	andwf	(___fldiv@grs+1)^0,w,c
 13995   005C38  6E34               	movwf	(??___fldiv+1)^0,c
 13996   005C3A  0EFF               	movlw	255
 13997   005C3C  1440               	andwf	(___fldiv@grs+2)^0,w,c
 13998   005C3E  6E35               	movwf	(??___fldiv+2)^0,c
 13999   005C40  0E7F               	movlw	127
 14000   005C42  1441               	andwf	(___fldiv@grs+3)^0,w,c
 14001   005C44  6E36               	movwf	(??___fldiv+3)^0,c
 14002   005C46  5033               	movf	??___fldiv^0,w,c
 14003   005C48  1034               	iorwf	(??___fldiv+1)^0,w,c
 14004   005C4A  1035               	iorwf	(??___fldiv+2)^0,w,c
 14005   005C4C  1036               	iorwf	(??___fldiv+3)^0,w,c
 14006   005C4E  B4D8               	btfsc	status,2,c
 14007   005C50  EF2C  F02E         	goto	u4161
 14008   005C54  EF2E  F02E         	goto	u4160
 14009   005C58                     u4161:
 14010   005C58  EF32  F02E         	goto	l1158
 14011   005C5C                     u4160:
 14012   005C5C                     l4338:
 14013   005C5C  0E01               	movlw	1
 14014   005C5E  6E43               	movwf	___fldiv@aexp^0,c
 14015   005C60  EF3B  F02E         	goto	l1157
 14016   005C64                     l1158:
 14017   005C64  A02B               	btfss	___fldiv@b^0,0,c
 14018   005C66  EF37  F02E         	goto	u4171
 14019   005C6A  EF39  F02E         	goto	u4170
 14020   005C6E                     u4171:
 14021   005C6E  EF3B  F02E         	goto	l1157
 14022   005C72                     u4170:
 14023   005C72  EF2E  F02E         	goto	l4338
 14024   005C76                     l1157:
 14025   005C76  5043               	movf	___fldiv@aexp^0,w,c
 14026   005C78  B4D8               	btfsc	status,2,c
 14027   005C7A  EF41  F02E         	goto	u4181
 14028   005C7E  EF43  F02E         	goto	u4180
 14029   005C82                     u4181:
 14030   005C82  EF67  F02E         	goto	l4350
 14031   005C86                     u4180:
 14032   005C86  0E01               	movlw	1
 14033   005C88  262B               	addwf	___fldiv@b^0,f,c
 14034   005C8A  0E00               	movlw	0
 14035   005C8C  222C               	addwfc	(___fldiv@b+1)^0,f,c
 14036   005C8E  222D               	addwfc	(___fldiv@b+2)^0,f,c
 14037   005C90  222E               	addwfc	(___fldiv@b+3)^0,f,c
 14038   005C92  A02E               	btfss	(___fldiv@b+3)^0,0,c
 14039   005C94  EF4E  F02E         	goto	u4191
 14040   005C98  EF50  F02E         	goto	u4190
 14041   005C9C                     u4191:
 14042   005C9C  EF67  F02E         	goto	l4350
 14043   005CA0                     u4190:
 14044   005CA0  C02B  F033         	movff	___fldiv@b,??___fldiv
 14045   005CA4  C02C  F034         	movff	___fldiv@b+1,??___fldiv+1
 14046   005CA8  C02D  F035         	movff	___fldiv@b+2,??___fldiv+2
 14047   005CAC  C02E  F036         	movff	___fldiv@b+3,??___fldiv+3
 14048   005CB0  3436               	rlcf	(??___fldiv+3)^0,w,c
 14049   005CB2  3236               	rrcf	(??___fldiv+3)^0,f,c
 14050   005CB4  3235               	rrcf	(??___fldiv+2)^0,f,c
 14051   005CB6  3234               	rrcf	(??___fldiv+1)^0,f,c
 14052   005CB8  3233               	rrcf	??___fldiv^0,f,c
 14053   005CBA  C033  F02B         	movff	??___fldiv,___fldiv@b
 14054   005CBE  C034  F02C         	movff	??___fldiv+1,___fldiv@b+1
 14055   005CC2  C035  F02D         	movff	??___fldiv+2,___fldiv@b+2
 14056   005CC6  C036  F02E         	movff	??___fldiv+3,___fldiv@b+3
 14057   005CCA  4A3C               	infsnz	___fldiv@new_exp^0,f,c
 14058   005CCC  2A3D               	incf	(___fldiv@new_exp+1)^0,f,c
 14059   005CCE                     l4350:
 14060   005CCE  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14061   005CD0  EF72  F02E         	goto	u4201
 14062   005CD4  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 14063   005CD6  E108               	bnz	u4200
 14064   005CD8  283C               	incf	___fldiv@new_exp^0,w,c
 14065   005CDA  A0D8               	btfss	status,0,c
 14066   005CDC  EF72  F02E         	goto	u4201
 14067   005CE0  EF74  F02E         	goto	u4200
 14068   005CE4                     u4201:
 14069   005CE4  EF7F  F02E         	goto	l4354
 14070   005CE8                     u4200:
 14071   005CE8  0E00               	movlw	0
 14072   005CEA  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 14073   005CEC  683C               	setf	___fldiv@new_exp^0,c
 14074   005CEE  0E00               	movlw	0
 14075   005CF0  6E2B               	movwf	___fldiv@b^0,c
 14076   005CF2  0E00               	movlw	0
 14077   005CF4  6E2C               	movwf	(___fldiv@b+1)^0,c
 14078   005CF6  0E00               	movlw	0
 14079   005CF8  6E2D               	movwf	(___fldiv@b+2)^0,c
 14080   005CFA  0E00               	movlw	0
 14081   005CFC  6E2E               	movwf	(___fldiv@b+3)^0,c
 14082   005CFE                     l4354:
 14083   005CFE  BE3D               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14084   005D00  EF8C  F02E         	goto	u4210
 14085   005D04  503D               	movf	(___fldiv@new_exp+1)^0,w,c
 14086   005D06  E106               	bnz	u4211
 14087   005D08  043C               	decf	___fldiv@new_exp^0,w,c
 14088   005D0A  B0D8               	btfsc	status,0,c
 14089   005D0C  EF8A  F02E         	goto	u4211
 14090   005D10  EF8C  F02E         	goto	u4210
 14091   005D14                     u4211:
 14092   005D14  EF9A  F02E         	goto	l4358
 14093   005D18                     u4210:
 14094   005D18  0E00               	movlw	0
 14095   005D1A  6E3D               	movwf	(___fldiv@new_exp+1)^0,c
 14096   005D1C  0E00               	movlw	0
 14097   005D1E  6E3C               	movwf	___fldiv@new_exp^0,c
 14098   005D20  0E00               	movlw	0
 14099   005D22  6E2B               	movwf	___fldiv@b^0,c
 14100   005D24  0E00               	movlw	0
 14101   005D26  6E2C               	movwf	(___fldiv@b+1)^0,c
 14102   005D28  0E00               	movlw	0
 14103   005D2A  6E2D               	movwf	(___fldiv@b+2)^0,c
 14104   005D2C  0E00               	movlw	0
 14105   005D2E  6E2E               	movwf	(___fldiv@b+3)^0,c
 14106   005D30  0E00               	movlw	0
 14107   005D32  6E3B               	movwf	___fldiv@sign^0,c
 14108   005D34                     l4358:
 14109   005D34  C03C  F042         	movff	___fldiv@new_exp,___fldiv@bexp
 14110   005D38  A042               	btfss	___fldiv@bexp^0,0,c
 14111   005D3A  EFA1  F02E         	goto	u4221
 14112   005D3E  EFA3  F02E         	goto	u4220
 14113   005D42                     u4221:
 14114   005D42  EFA6  F02E         	goto	l4364
 14115   005D46                     u4220:
 14116   005D46  8E2D               	bsf	(___fldiv@b+2)^0,7,c
 14117   005D48  EFA7  F02E         	goto	l4366
 14118   005D4C                     l4364:
 14119   005D4C  9E2D               	bcf	(___fldiv@b+2)^0,7,c
 14120   005D4E                     l4366:
 14121   005D4E  90D8               	bcf	status,0,c
 14122   005D50  3042               	rrcf	___fldiv@bexp^0,w,c
 14123   005D52  6E2E               	movwf	(___fldiv@b+3)^0,c
 14124   005D54  EF5D  F02D         	goto	l4280
 14125   005D58                     l1144:
 14126   005D58  0012               	return		;funcret
 14127   005D5A                     __end_of___fldiv:
 14128                           	callstack 0
 14129                           
 14130 ;; *************** function _color_read_Red *****************
 14131 ;; Defined at:
 14132 ;;		line 68 in file "color.c"
 14133 ;; Parameters:    Size  Location     Type
 14134 ;;		None
 14135 ;; Auto vars:     Size  Location     Type
 14136 ;;  tmp             2   10[COMRAM] unsigned int 
 14137 ;; Return value:  Size  Location     Type
 14138 ;;                  2    5[COMRAM] unsigned int 
 14139 ;; Registers used:
 14140 ;;		wreg, status,2, status,0, cstack
 14141 ;; Tracked objects:
 14142 ;;		On entry : 0/0
 14143 ;;		On exit  : 0/0
 14144 ;;		Unchanged: 0/0
 14145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14148 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14149 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14150 ;;Total ram usage:        7 bytes
 14151 ;; Hardware stack levels used: 1
 14152 ;; Hardware stack levels required when called: 4
 14153 ;; This function calls:
 14154 ;;		_I2C_2_Master_Read
 14155 ;;		_I2C_2_Master_RepStart
 14156 ;;		_I2C_2_Master_Start
 14157 ;;		_I2C_2_Master_Stop
 14158 ;;		_I2C_2_Master_Write
 14159 ;; This function is called by:
 14160 ;;		_decide_action
 14161 ;; This function uses a non-reentrant model
 14162 ;;
 14163                           
 14164                           	psect	text39
 14165   0071BC                     __ptext39:
 14166                           	callstack 0
 14167   0071BC                     _color_read_Red:
 14168                           	callstack 25
 14169   0071BC                     
 14170                           ;color.c: 69:  unsigned int tmp;;color.c: 70:  I2C_2_Master_Start();
 14171   0071BC  EC4A  F03B         	call	_I2C_2_Master_Start	;wreg free
 14172                           
 14173                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x00);
 14174   0071C0  0E52               	movlw	82
 14175   0071C2  EC2F  F03B         	call	_I2C_2_Master_Write
 14176                           
 14177                           ;color.c: 72:  I2C_2_Master_Write(0xA0 | 0x16);
 14178   0071C6  0EB6               	movlw	182
 14179   0071C8  EC2F  F03B         	call	_I2C_2_Master_Write
 14180                           
 14181                           ;color.c: 73:  I2C_2_Master_RepStart();
 14182   0071CC  EC40  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14183                           
 14184                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x01);
 14185   0071D0  0E53               	movlw	83
 14186   0071D2  EC2F  F03B         	call	_I2C_2_Master_Write
 14187                           
 14188                           ;color.c: 75:  tmp=I2C_2_Master_Read(1);
 14189   0071D6  0E01               	movlw	1
 14190   0071D8  ECE7  F039         	call	_I2C_2_Master_Read
 14191   0071DC  6E08               	movwf	??_color_read_Red^0,c
 14192   0071DE  5008               	movf	??_color_read_Red^0,w,c
 14193   0071E0  6E0B               	movwf	color_read_Red@tmp^0,c
 14194   0071E2  6A0C               	clrf	(color_read_Red@tmp+1)^0,c
 14195                           
 14196                           ;color.c: 76:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14197   0071E4  0E00               	movlw	0
 14198   0071E6  ECE7  F039         	call	_I2C_2_Master_Read
 14199   0071EA  6E08               	movwf	??_color_read_Red^0,c
 14200   0071EC  5008               	movf	??_color_read_Red^0,w,c
 14201   0071EE  6E0A               	movwf	(??_color_read_Red+2)^0,c
 14202   0071F0  6A09               	clrf	(??_color_read_Red+1)^0,c
 14203   0071F2  500B               	movf	color_read_Red@tmp^0,w,c
 14204   0071F4  1009               	iorwf	(??_color_read_Red+1)^0,w,c
 14205   0071F6  6E0B               	movwf	color_read_Red@tmp^0,c
 14206   0071F8  500C               	movf	(color_read_Red@tmp+1)^0,w,c
 14207   0071FA  100A               	iorwf	(??_color_read_Red+2)^0,w,c
 14208   0071FC  6E0C               	movwf	(color_read_Red@tmp+1)^0,c
 14209                           
 14210                           ;color.c: 77:  I2C_2_Master_Stop();
 14211   0071FE  EC45  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14212   007202                     
 14213                           ;color.c: 78:  return tmp;
 14214   007202  C00B  F006         	movff	color_read_Red@tmp,?_color_read_Red
 14215   007206  C00C  F007         	movff	color_read_Red@tmp+1,?_color_read_Red+1
 14216   00720A  0012               	return		;funcret
 14217   00720C                     __end_of_color_read_Red:
 14218                           	callstack 0
 14219                           
 14220 ;; *************** function _color_read_Green *****************
 14221 ;; Defined at:
 14222 ;;		line 81 in file "color.c"
 14223 ;; Parameters:    Size  Location     Type
 14224 ;;		None
 14225 ;; Auto vars:     Size  Location     Type
 14226 ;;  tmp             2   10[COMRAM] unsigned int 
 14227 ;; Return value:  Size  Location     Type
 14228 ;;                  2    5[COMRAM] unsigned int 
 14229 ;; Registers used:
 14230 ;;		wreg, status,2, status,0, cstack
 14231 ;; Tracked objects:
 14232 ;;		On entry : 0/0
 14233 ;;		On exit  : 0/0
 14234 ;;		Unchanged: 0/0
 14235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14237 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14238 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14239 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14240 ;;Total ram usage:        7 bytes
 14241 ;; Hardware stack levels used: 1
 14242 ;; Hardware stack levels required when called: 4
 14243 ;; This function calls:
 14244 ;;		_I2C_2_Master_Read
 14245 ;;		_I2C_2_Master_RepStart
 14246 ;;		_I2C_2_Master_Start
 14247 ;;		_I2C_2_Master_Stop
 14248 ;;		_I2C_2_Master_Write
 14249 ;; This function is called by:
 14250 ;;		_decide_action
 14251 ;; This function uses a non-reentrant model
 14252 ;;
 14253                           
 14254                           	psect	text40
 14255   00720C                     __ptext40:
 14256                           	callstack 0
 14257   00720C                     _color_read_Green:
 14258                           	callstack 25
 14259   00720C                     
 14260                           ;color.c: 82:  unsigned int tmp;;color.c: 83:  I2C_2_Master_Start();
 14261   00720C  EC4A  F03B         	call	_I2C_2_Master_Start	;wreg free
 14262                           
 14263                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x00);
 14264   007210  0E52               	movlw	82
 14265   007212  EC2F  F03B         	call	_I2C_2_Master_Write
 14266                           
 14267                           ;color.c: 85:  I2C_2_Master_Write(0xA0 | 0x18);
 14268   007216  0EB8               	movlw	184
 14269   007218  EC2F  F03B         	call	_I2C_2_Master_Write
 14270                           
 14271                           ;color.c: 86:  I2C_2_Master_RepStart();
 14272   00721C  EC40  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14273                           
 14274                           ;color.c: 87:  I2C_2_Master_Write(0x52 | 0x01);
 14275   007220  0E53               	movlw	83
 14276   007222  EC2F  F03B         	call	_I2C_2_Master_Write
 14277                           
 14278                           ;color.c: 88:  tmp=I2C_2_Master_Read(1);
 14279   007226  0E01               	movlw	1
 14280   007228  ECE7  F039         	call	_I2C_2_Master_Read
 14281   00722C  6E08               	movwf	??_color_read_Green^0,c
 14282   00722E  5008               	movf	??_color_read_Green^0,w,c
 14283   007230  6E0B               	movwf	color_read_Green@tmp^0,c
 14284   007232  6A0C               	clrf	(color_read_Green@tmp+1)^0,c
 14285                           
 14286                           ;color.c: 89:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14287   007234  0E00               	movlw	0
 14288   007236  ECE7  F039         	call	_I2C_2_Master_Read
 14289   00723A  6E08               	movwf	??_color_read_Green^0,c
 14290   00723C  5008               	movf	??_color_read_Green^0,w,c
 14291   00723E  6E0A               	movwf	(??_color_read_Green+2)^0,c
 14292   007240  6A09               	clrf	(??_color_read_Green+1)^0,c
 14293   007242  500B               	movf	color_read_Green@tmp^0,w,c
 14294   007244  1009               	iorwf	(??_color_read_Green+1)^0,w,c
 14295   007246  6E0B               	movwf	color_read_Green@tmp^0,c
 14296   007248  500C               	movf	(color_read_Green@tmp+1)^0,w,c
 14297   00724A  100A               	iorwf	(??_color_read_Green+2)^0,w,c
 14298   00724C  6E0C               	movwf	(color_read_Green@tmp+1)^0,c
 14299                           
 14300                           ;color.c: 90:  I2C_2_Master_Stop();
 14301   00724E  EC45  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14302   007252                     
 14303                           ;color.c: 91:  return tmp;
 14304   007252  C00B  F006         	movff	color_read_Green@tmp,?_color_read_Green
 14305   007256  C00C  F007         	movff	color_read_Green@tmp+1,?_color_read_Green+1
 14306   00725A  0012               	return		;funcret
 14307   00725C                     __end_of_color_read_Green:
 14308                           	callstack 0
 14309                           
 14310 ;; *************** function _color_read_Blue *****************
 14311 ;; Defined at:
 14312 ;;		line 94 in file "color.c"
 14313 ;; Parameters:    Size  Location     Type
 14314 ;;		None
 14315 ;; Auto vars:     Size  Location     Type
 14316 ;;  tmp             2   10[COMRAM] unsigned int 
 14317 ;; Return value:  Size  Location     Type
 14318 ;;                  2    5[COMRAM] unsigned int 
 14319 ;; Registers used:
 14320 ;;		wreg, status,2, status,0, cstack
 14321 ;; Tracked objects:
 14322 ;;		On entry : 0/0
 14323 ;;		On exit  : 0/0
 14324 ;;		Unchanged: 0/0
 14325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14327 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14328 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14329 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14330 ;;Total ram usage:        7 bytes
 14331 ;; Hardware stack levels used: 1
 14332 ;; Hardware stack levels required when called: 4
 14333 ;; This function calls:
 14334 ;;		_I2C_2_Master_Read
 14335 ;;		_I2C_2_Master_RepStart
 14336 ;;		_I2C_2_Master_Start
 14337 ;;		_I2C_2_Master_Stop
 14338 ;;		_I2C_2_Master_Write
 14339 ;; This function is called by:
 14340 ;;		_decide_action
 14341 ;; This function uses a non-reentrant model
 14342 ;;
 14343                           
 14344                           	psect	text41
 14345   00725C                     __ptext41:
 14346                           	callstack 0
 14347   00725C                     _color_read_Blue:
 14348                           	callstack 25
 14349   00725C                     
 14350                           ;color.c: 95:  unsigned int tmp;;color.c: 96:  I2C_2_Master_Start();
 14351   00725C  EC4A  F03B         	call	_I2C_2_Master_Start	;wreg free
 14352                           
 14353                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x00);
 14354   007260  0E52               	movlw	82
 14355   007262  EC2F  F03B         	call	_I2C_2_Master_Write
 14356                           
 14357                           ;color.c: 98:  I2C_2_Master_Write(0xA0 | 0x1A);
 14358   007266  0EBA               	movlw	186
 14359   007268  EC2F  F03B         	call	_I2C_2_Master_Write
 14360                           
 14361                           ;color.c: 99:  I2C_2_Master_RepStart();
 14362   00726C  EC40  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14363                           
 14364                           ;color.c: 100:  I2C_2_Master_Write(0x52 | 0x01);
 14365   007270  0E53               	movlw	83
 14366   007272  EC2F  F03B         	call	_I2C_2_Master_Write
 14367                           
 14368                           ;color.c: 101:  tmp=I2C_2_Master_Read(1);
 14369   007276  0E01               	movlw	1
 14370   007278  ECE7  F039         	call	_I2C_2_Master_Read
 14371   00727C  6E08               	movwf	??_color_read_Blue^0,c
 14372   00727E  5008               	movf	??_color_read_Blue^0,w,c
 14373   007280  6E0B               	movwf	color_read_Blue@tmp^0,c
 14374   007282  6A0C               	clrf	(color_read_Blue@tmp+1)^0,c
 14375                           
 14376                           ;color.c: 102:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14377   007284  0E00               	movlw	0
 14378   007286  ECE7  F039         	call	_I2C_2_Master_Read
 14379   00728A  6E08               	movwf	??_color_read_Blue^0,c
 14380   00728C  5008               	movf	??_color_read_Blue^0,w,c
 14381   00728E  6E0A               	movwf	(??_color_read_Blue+2)^0,c
 14382   007290  6A09               	clrf	(??_color_read_Blue+1)^0,c
 14383   007292  500B               	movf	color_read_Blue@tmp^0,w,c
 14384   007294  1009               	iorwf	(??_color_read_Blue+1)^0,w,c
 14385   007296  6E0B               	movwf	color_read_Blue@tmp^0,c
 14386   007298  500C               	movf	(color_read_Blue@tmp+1)^0,w,c
 14387   00729A  100A               	iorwf	(??_color_read_Blue+2)^0,w,c
 14388   00729C  6E0C               	movwf	(color_read_Blue@tmp+1)^0,c
 14389                           
 14390                           ;color.c: 103:  I2C_2_Master_Stop();
 14391   00729E  EC45  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14392   0072A2                     
 14393                           ;color.c: 104:  return tmp;
 14394   0072A2  C00B  F006         	movff	color_read_Blue@tmp,?_color_read_Blue
 14395   0072A6  C00C  F007         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
 14396   0072AA  0012               	return		;funcret
 14397   0072AC                     __end_of_color_read_Blue:
 14398                           	callstack 0
 14399                           
 14400 ;; *************** function _color_read_Clear *****************
 14401 ;; Defined at:
 14402 ;;		line 55 in file "color.c"
 14403 ;; Parameters:    Size  Location     Type
 14404 ;;		None
 14405 ;; Auto vars:     Size  Location     Type
 14406 ;;  tmp             2   10[COMRAM] unsigned int 
 14407 ;; Return value:  Size  Location     Type
 14408 ;;                  2    5[COMRAM] unsigned int 
 14409 ;; Registers used:
 14410 ;;		wreg, status,2, status,0, cstack
 14411 ;; Tracked objects:
 14412 ;;		On entry : 0/0
 14413 ;;		On exit  : 0/0
 14414 ;;		Unchanged: 0/0
 14415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14418 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14419 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14420 ;;Total ram usage:        7 bytes
 14421 ;; Hardware stack levels used: 1
 14422 ;; Hardware stack levels required when called: 4
 14423 ;; This function calls:
 14424 ;;		_I2C_2_Master_Read
 14425 ;;		_I2C_2_Master_RepStart
 14426 ;;		_I2C_2_Master_Start
 14427 ;;		_I2C_2_Master_Stop
 14428 ;;		_I2C_2_Master_Write
 14429 ;; This function is called by:
 14430 ;;		_main
 14431 ;; This function uses a non-reentrant model
 14432 ;;
 14433                           
 14434                           	psect	text42
 14435   0072AC                     __ptext42:
 14436                           	callstack 0
 14437   0072AC                     _color_read_Clear:
 14438                           	callstack 26
 14439   0072AC                     
 14440                           ;color.c: 56:  unsigned int tmp;;color.c: 57:  I2C_2_Master_Start();
 14441   0072AC  EC4A  F03B         	call	_I2C_2_Master_Start	;wreg free
 14442                           
 14443                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x00);
 14444   0072B0  0E52               	movlw	82
 14445   0072B2  EC2F  F03B         	call	_I2C_2_Master_Write
 14446                           
 14447                           ;color.c: 59:  I2C_2_Master_Write(0xA0 | 0x14);
 14448   0072B6  0EB4               	movlw	180
 14449   0072B8  EC2F  F03B         	call	_I2C_2_Master_Write
 14450                           
 14451                           ;color.c: 60:  I2C_2_Master_RepStart();
 14452   0072BC  EC40  F03B         	call	_I2C_2_Master_RepStart	;wreg free
 14453                           
 14454                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x01);
 14455   0072C0  0E53               	movlw	83
 14456   0072C2  EC2F  F03B         	call	_I2C_2_Master_Write
 14457                           
 14458                           ;color.c: 62:  tmp=I2C_2_Master_Read(1);
 14459   0072C6  0E01               	movlw	1
 14460   0072C8  ECE7  F039         	call	_I2C_2_Master_Read
 14461   0072CC  6E08               	movwf	??_color_read_Clear^0,c
 14462   0072CE  5008               	movf	??_color_read_Clear^0,w,c
 14463   0072D0  6E0B               	movwf	color_read_Clear@tmp^0,c
 14464   0072D2  6A0C               	clrf	(color_read_Clear@tmp+1)^0,c
 14465                           
 14466                           ;color.c: 63:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 14467   0072D4  0E00               	movlw	0
 14468   0072D6  ECE7  F039         	call	_I2C_2_Master_Read
 14469   0072DA  6E08               	movwf	??_color_read_Clear^0,c
 14470   0072DC  5008               	movf	??_color_read_Clear^0,w,c
 14471   0072DE  6E0A               	movwf	(??_color_read_Clear+2)^0,c
 14472   0072E0  6A09               	clrf	(??_color_read_Clear+1)^0,c
 14473   0072E2  500B               	movf	color_read_Clear@tmp^0,w,c
 14474   0072E4  1009               	iorwf	(??_color_read_Clear+1)^0,w,c
 14475   0072E6  6E0B               	movwf	color_read_Clear@tmp^0,c
 14476   0072E8  500C               	movf	(color_read_Clear@tmp+1)^0,w,c
 14477   0072EA  100A               	iorwf	(??_color_read_Clear+2)^0,w,c
 14478   0072EC  6E0C               	movwf	(color_read_Clear@tmp+1)^0,c
 14479                           
 14480                           ;color.c: 64:  I2C_2_Master_Stop();
 14481   0072EE  EC45  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14482   0072F2                     
 14483                           ;color.c: 65:  return tmp;
 14484   0072F2  C00B  F006         	movff	color_read_Clear@tmp,?_color_read_Clear
 14485   0072F6  C00C  F007         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 14486   0072FA  0012               	return		;funcret
 14487   0072FC                     __end_of_color_read_Clear:
 14488                           	callstack 0
 14489                           
 14490 ;; *************** function _I2C_2_Master_RepStart *****************
 14491 ;; Defined at:
 14492 ;;		line 30 in file "i2c.c"
 14493 ;; Parameters:    Size  Location     Type
 14494 ;;		None
 14495 ;; Auto vars:     Size  Location     Type
 14496 ;;		None
 14497 ;; Return value:  Size  Location     Type
 14498 ;;                  1    wreg      void 
 14499 ;; Registers used:
 14500 ;;		wreg, status,2, status,0, cstack
 14501 ;; Tracked objects:
 14502 ;;		On entry : 0/0
 14503 ;;		On exit  : 0/0
 14504 ;;		Unchanged: 0/0
 14505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14510 ;;Total ram usage:        0 bytes
 14511 ;; Hardware stack levels used: 1
 14512 ;; Hardware stack levels required when called: 3
 14513 ;; This function calls:
 14514 ;;		_I2C_2_Master_Idle
 14515 ;; This function is called by:
 14516 ;;		_color_read_Clear
 14517 ;;		_color_read_Red
 14518 ;;		_color_read_Green
 14519 ;;		_color_read_Blue
 14520 ;; This function uses a non-reentrant model
 14521 ;;
 14522                           
 14523                           	psect	text43
 14524   007680                     __ptext43:
 14525                           	callstack 0
 14526   007680                     _I2C_2_Master_RepStart:
 14527                           	callstack 25
 14528   007680                     
 14529                           ;i2c.c: 31:   I2C_2_Master_Idle();
 14530   007680  ECA5  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14531   007684                     
 14532                           ;i2c.c: 32:   SSP2CON2bits.RSEN = 1;
 14533   007684  010E               	movlb	14	; () banked
 14534   007686  83DA               	bsf	218,1,b	;volatile
 14535   007688                     
 14536                           ; BSR set to: 14
 14537   007688  0012               	return		;funcret
 14538   00768A                     __end_of_I2C_2_Master_RepStart:
 14539                           	callstack 0
 14540                           
 14541 ;; *************** function _I2C_2_Master_Read *****************
 14542 ;; Defined at:
 14543 ;;		line 45 in file "i2c.c"
 14544 ;; Parameters:    Size  Location     Type
 14545 ;;  ack             1    wreg     unsigned char 
 14546 ;; Auto vars:     Size  Location     Type
 14547 ;;  ack             1    3[COMRAM] unsigned char 
 14548 ;;  tmp             1    4[COMRAM] unsigned char 
 14549 ;; Return value:  Size  Location     Type
 14550 ;;                  1    wreg      unsigned char 
 14551 ;; Registers used:
 14552 ;;		wreg, status,2, status,0, cstack
 14553 ;; Tracked objects:
 14554 ;;		On entry : 0/0
 14555 ;;		On exit  : 0/0
 14556 ;;		Unchanged: 0/0
 14557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14559 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14560 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14561 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14562 ;;Total ram usage:        3 bytes
 14563 ;; Hardware stack levels used: 1
 14564 ;; Hardware stack levels required when called: 3
 14565 ;; This function calls:
 14566 ;;		_I2C_2_Master_Idle
 14567 ;; This function is called by:
 14568 ;;		_color_read_Clear
 14569 ;;		_color_read_Red
 14570 ;;		_color_read_Green
 14571 ;;		_color_read_Blue
 14572 ;; This function uses a non-reentrant model
 14573 ;;
 14574                           
 14575                           	psect	text44
 14576   0073CE                     __ptext44:
 14577                           	callstack 0
 14578   0073CE                     _I2C_2_Master_Read:
 14579                           	callstack 25
 14580                           
 14581                           ; BSR set to: 14
 14582                           ;incstack = 0
 14583                           ;I2C_2_Master_Read@ack stored from wreg
 14584   0073CE  6E04               	movwf	I2C_2_Master_Read@ack^0,c
 14585   0073D0                     
 14586                           ;i2c.c: 46:   unsigned char tmp;;i2c.c: 47:   I2C_2_Master_Idle();
 14587   0073D0  ECA5  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14588   0073D4                     
 14589                           ;i2c.c: 48:   SSP2CON2bits.RCEN = 1;
 14590   0073D4  010E               	movlb	14	; () banked
 14591   0073D6  87DA               	bsf	218,3,b	;volatile
 14592                           
 14593                           ;i2c.c: 49:   I2C_2_Master_Idle();
 14594   0073D8  ECA5  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14595   0073DC                     
 14596                           ;i2c.c: 50:   tmp = SSP2BUF;
 14597   0073DC  CED5 F005          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 14598                           
 14599                           ;i2c.c: 51:   I2C_2_Master_Idle();
 14600   0073E0  ECA5  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14601   0073E4                     
 14602                           ;i2c.c: 52:   SSP2CON2bits.ACKDT = !ack;
 14603   0073E4  5004               	movf	I2C_2_Master_Read@ack^0,w,c
 14604   0073E6  B4D8               	btfsc	status,2,c
 14605   0073E8  EFF8  F039         	goto	u3821
 14606   0073EC  EFFC  F039         	goto	u3820
 14607   0073F0                     u3821:
 14608   0073F0  6A03               	clrf	??_I2C_2_Master_Read^0,c
 14609   0073F2  2A03               	incf	??_I2C_2_Master_Read^0,f,c
 14610   0073F4  EFFD  F039         	goto	u3838
 14611   0073F8                     u3820:
 14612   0073F8  6A03               	clrf	??_I2C_2_Master_Read^0,c
 14613   0073FA                     u3838:
 14614   0073FA  3A03               	swapf	??_I2C_2_Master_Read^0,f,c
 14615   0073FC  4603               	rlncf	??_I2C_2_Master_Read^0,f,c
 14616   0073FE  010E               	movlb	14	; () banked
 14617   007400  51DA               	movf	218,w,b	;volatile
 14618   007402  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 14619   007404  0BDF               	andlw	-33
 14620   007406  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
 14621   007408  6FDA               	movwf	218,b	;volatile
 14622   00740A                     
 14623                           ; BSR set to: 14
 14624                           ;i2c.c: 53:   SSP2CON2bits.ACKEN = 1;
 14625   00740A  89DA               	bsf	218,4,b	;volatile
 14626   00740C                     
 14627                           ; BSR set to: 14
 14628                           ;i2c.c: 54:   return tmp;
 14629   00740C  5005               	movf	I2C_2_Master_Read@tmp^0,w,c
 14630   00740E                     
 14631                           ; BSR set to: 14
 14632   00740E  0012               	return		;funcret
 14633   007410                     __end_of_I2C_2_Master_Read:
 14634                           	callstack 0
 14635                           
 14636 ;; *************** function _color_click_toggleLED *****************
 14637 ;; Defined at:
 14638 ;;		line 108 in file "color.c"
 14639 ;; Parameters:    Size  Location     Type
 14640 ;;		None
 14641 ;; Auto vars:     Size  Location     Type
 14642 ;;		None
 14643 ;; Return value:  Size  Location     Type
 14644 ;;                  1    wreg      void 
 14645 ;; Registers used:
 14646 ;;		wreg, status,2, status,0
 14647 ;; Tracked objects:
 14648 ;;		On entry : 0/0
 14649 ;;		On exit  : 0/0
 14650 ;;		Unchanged: 0/0
 14651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14655 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14656 ;;Total ram usage:        1 bytes
 14657 ;; Hardware stack levels used: 1
 14658 ;; Hardware stack levels required when called: 2
 14659 ;; This function calls:
 14660 ;;		Nothing
 14661 ;; This function is called by:
 14662 ;;		_main
 14663 ;; This function uses a non-reentrant model
 14664 ;;
 14665                           
 14666                           	psect	text45
 14667   007156                     __ptext45:
 14668                           	callstack 0
 14669   007156                     _color_click_toggleLED:
 14670                           	callstack 28
 14671   007156                     
 14672                           ;color.c: 109:     LATGbits.LATG0 = !LATGbits.LATG0;
 14673   007156  A07F               	btfss	127,0,c	;volatile
 14674   007158  EFB0  F038         	goto	u5201
 14675   00715C  EFB4  F038         	goto	u5200
 14676   007160                     u5201:
 14677   007160  6A02               	clrf	??_color_click_toggleLED^0,c
 14678   007162  2A02               	incf	??_color_click_toggleLED^0,f,c
 14679   007164  EFB5  F038         	goto	u5218
 14680   007168                     u5200:
 14681   007168  6A02               	clrf	??_color_click_toggleLED^0,c
 14682   00716A                     u5218:
 14683   00716A  507F               	movf	127,w,c	;volatile
 14684   00716C  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14685   00716E  0BFE               	andlw	-2
 14686   007170  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14687   007172  6E7F               	movwf	127,c	;volatile
 14688                           
 14689                           ;color.c: 110:     LATAbits.LATA3 = !LATAbits.LATA3;
 14690   007174  A679               	btfss	121,3,c	;volatile
 14691   007176  EFBF  F038         	goto	u5221
 14692   00717A  EFC3  F038         	goto	u5220
 14693   00717E                     u5221:
 14694   00717E  6A02               	clrf	??_color_click_toggleLED^0,c
 14695   007180  2A02               	incf	??_color_click_toggleLED^0,f,c
 14696   007182  EFC4  F038         	goto	u5238
 14697   007186                     u5220:
 14698   007186  6A02               	clrf	??_color_click_toggleLED^0,c
 14699   007188                     u5238:
 14700   007188  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14701   00718A  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14702   00718C  4602               	rlncf	??_color_click_toggleLED^0,f,c
 14703   00718E  5079               	movf	121,w,c	;volatile
 14704   007190  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14705   007192  0BF7               	andlw	-9
 14706   007194  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14707   007196  6E79               	movwf	121,c	;volatile
 14708                           
 14709                           ;color.c: 111:     LATEbits.LATE7 = !LATEbits.LATE7;
 14710   007198  AE7D               	btfss	125,7,c	;volatile
 14711   00719A  EFD1  F038         	goto	u5241
 14712   00719E  EFD5  F038         	goto	u5240
 14713   0071A2                     u5241:
 14714   0071A2  6A02               	clrf	??_color_click_toggleLED^0,c
 14715   0071A4  2A02               	incf	??_color_click_toggleLED^0,f,c
 14716   0071A6  EFD6  F038         	goto	u5258
 14717   0071AA                     u5240:
 14718   0071AA  6A02               	clrf	??_color_click_toggleLED^0,c
 14719   0071AC                     u5258:
 14720   0071AC  3202               	rrcf	??_color_click_toggleLED^0,f,c
 14721   0071AE  3202               	rrcf	??_color_click_toggleLED^0,f,c
 14722   0071B0  507D               	movf	125,w,c	;volatile
 14723   0071B2  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14724   0071B4  0B7F               	andlw	-129
 14725   0071B6  1802               	xorwf	??_color_click_toggleLED^0,w,c
 14726   0071B8  6E7D               	movwf	125,c	;volatile
 14727   0071BA  0012               	return		;funcret
 14728   0071BC                     __end_of_color_click_toggleLED:
 14729                           	callstack 0
 14730                           
 14731 ;; *************** function _color_click_init *****************
 14732 ;; Defined at:
 14733 ;;		line 8 in file "color.c"
 14734 ;; Parameters:    Size  Location     Type
 14735 ;;		None
 14736 ;; Auto vars:     Size  Location     Type
 14737 ;;		None
 14738 ;; Return value:  Size  Location     Type
 14739 ;;                  1    wreg      void 
 14740 ;; Registers used:
 14741 ;;		wreg, status,2, status,0, cstack
 14742 ;; Tracked objects:
 14743 ;;		On entry : 0/0
 14744 ;;		On exit  : 0/0
 14745 ;;		Unchanged: 0/0
 14746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14749 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14750 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14751 ;;Total ram usage:        1 bytes
 14752 ;; Hardware stack levels used: 1
 14753 ;; Hardware stack levels required when called: 5
 14754 ;; This function calls:
 14755 ;;		_I2C_2_Master_Init
 14756 ;;		_color_writetoaddr
 14757 ;; This function is called by:
 14758 ;;		_main
 14759 ;; This function uses a non-reentrant model
 14760 ;;
 14761                           
 14762                           	psect	text46
 14763   0072FC                     __ptext46:
 14764                           	callstack 0
 14765   0072FC                     _color_click_init:
 14766                           	callstack 25
 14767   0072FC                     
 14768                           ;color.c: 10:     I2C_2_Master_Init();
 14769   0072FC  EC90  F03A         	call	_I2C_2_Master_Init	;wreg free
 14770   007300                     
 14771                           ;color.c: 11:  color_writetoaddr(0x00, 0x01);
 14772   007300  0E01               	movlw	1
 14773   007302  6E04               	movwf	color_writetoaddr@value^0,c
 14774   007304  0E00               	movlw	0
 14775   007306  ECCC  F03A         	call	_color_writetoaddr
 14776   00730A                     
 14777                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
 14778   00730A  0E3F               	movlw	63
 14779   00730C  6E06               	movwf	??_color_click_init^0,c
 14780   00730E  0E55               	movlw	85
 14781   007310                     u8397:
 14782   007310  2EE8               	decfsz	wreg,f,c
 14783   007312  D7FE               	bra	u8397
 14784   007314  2E06               	decfsz	??_color_click_init^0,f,c
 14785   007316  D7FC               	bra	u8397
 14786   007318  0000               	nop	
 14787   00731A                     
 14788                           ;color.c: 13:  color_writetoaddr(0x00, 0x03);
 14789   00731A  0E03               	movlw	3
 14790   00731C  6E04               	movwf	color_writetoaddr@value^0,c
 14791   00731E  0E00               	movlw	0
 14792   007320  ECCC  F03A         	call	_color_writetoaddr
 14793   007324                     
 14794                           ;color.c: 14:  color_writetoaddr(0x01, 0xFF);
 14795   007324  0EFF               	movlw	255
 14796   007326  6E04               	movwf	color_writetoaddr@value^0,c
 14797   007328  0E01               	movlw	1
 14798   00732A  ECCC  F03A         	call	_color_writetoaddr
 14799   00732E                     
 14800                           ;color.c: 15:     color_writetoaddr(0x03, 0xFF);
 14801   00732E  0EFF               	movlw	255
 14802   007330  6E04               	movwf	color_writetoaddr@value^0,c
 14803   007332  0E03               	movlw	3
 14804   007334  ECCC  F03A         	call	_color_writetoaddr
 14805   007338                     
 14806                           ;color.c: 27:     LATGbits.LATG0=0;
 14807   007338  907F               	bcf	127,0,c	;volatile
 14808   00733A                     
 14809                           ;color.c: 28:     LATAbits.LATA3=0;
 14810   00733A  9679               	bcf	121,3,c	;volatile
 14811   00733C                     
 14812                           ;color.c: 29:     LATEbits.LATE7=0;
 14813   00733C  9E7D               	bcf	125,7,c	;volatile
 14814   00733E                     
 14815                           ;color.c: 32:     TRISGbits.TRISG0=0;
 14816   00733E  9087               	bcf	135,0,c	;volatile
 14817   007340                     
 14818                           ;color.c: 33:     TRISAbits.TRISA3=0;
 14819   007340  9681               	bcf	129,3,c	;volatile
 14820   007342                     
 14821                           ;color.c: 34:     TRISEbits.TRISE7=0;
 14822   007342  9E85               	bcf	133,7,c	;volatile
 14823   007344  0012               	return		;funcret
 14824   007346                     __end_of_color_click_init:
 14825                           	callstack 0
 14826                           
 14827 ;; *************** function _color_writetoaddr *****************
 14828 ;; Defined at:
 14829 ;;		line 38 in file "color.c"
 14830 ;; Parameters:    Size  Location     Type
 14831 ;;  address         1    wreg     unsigned char 
 14832 ;;  value           1    3[COMRAM] unsigned char 
 14833 ;; Auto vars:     Size  Location     Type
 14834 ;;  address         1    4[COMRAM] unsigned char 
 14835 ;; Return value:  Size  Location     Type
 14836 ;;                  1    wreg      void 
 14837 ;; Registers used:
 14838 ;;		wreg, status,2, status,0, cstack
 14839 ;; Tracked objects:
 14840 ;;		On entry : 0/0
 14841 ;;		On exit  : 0/0
 14842 ;;		Unchanged: 0/0
 14843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14844 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14848 ;;Total ram usage:        2 bytes
 14849 ;; Hardware stack levels used: 1
 14850 ;; Hardware stack levels required when called: 4
 14851 ;; This function calls:
 14852 ;;		_I2C_2_Master_Start
 14853 ;;		_I2C_2_Master_Stop
 14854 ;;		_I2C_2_Master_Write
 14855 ;; This function is called by:
 14856 ;;		_color_click_init
 14857 ;;		_decide_action
 14858 ;; This function uses a non-reentrant model
 14859 ;;
 14860                           
 14861                           	psect	text47
 14862   007598                     __ptext47:
 14863                           	callstack 0
 14864   007598                     _color_writetoaddr:
 14865                           	callstack 25
 14866                           
 14867                           ;incstack = 0
 14868                           ;color_writetoaddr@address stored from wreg
 14869   007598  6E05               	movwf	color_writetoaddr@address^0,c
 14870   00759A                     
 14871                           ;color.c: 39:     I2C_2_Master_Start();
 14872   00759A  EC4A  F03B         	call	_I2C_2_Master_Start	;wreg free
 14873                           
 14874                           ;color.c: 40:     I2C_2_Master_Write(0x52 | 0x00);
 14875   00759E  0E52               	movlw	82
 14876   0075A0  EC2F  F03B         	call	_I2C_2_Master_Write
 14877                           
 14878                           ;color.c: 41:     I2C_2_Master_Write(0x80 | address);
 14879   0075A4  5005               	movf	color_writetoaddr@address^0,w,c
 14880   0075A6  0980               	iorlw	128
 14881   0075A8  EC2F  F03B         	call	_I2C_2_Master_Write
 14882                           
 14883                           ;color.c: 42:     I2C_2_Master_Write(value);
 14884   0075AC  5004               	movf	color_writetoaddr@value^0,w,c
 14885   0075AE  EC2F  F03B         	call	_I2C_2_Master_Write
 14886                           
 14887                           ;color.c: 43:     I2C_2_Master_Stop();
 14888   0075B2  EC45  F03B         	call	_I2C_2_Master_Stop	;wreg free
 14889   0075B6  0012               	return		;funcret
 14890   0075B8                     __end_of_color_writetoaddr:
 14891                           	callstack 0
 14892                           
 14893 ;; *************** function _I2C_2_Master_Write *****************
 14894 ;; Defined at:
 14895 ;;		line 40 in file "i2c.c"
 14896 ;; Parameters:    Size  Location     Type
 14897 ;;  data_byte       1    wreg     unsigned char 
 14898 ;; Auto vars:     Size  Location     Type
 14899 ;;  data_byte       1    2[COMRAM] unsigned char 
 14900 ;; Return value:  Size  Location     Type
 14901 ;;                  1    wreg      void 
 14902 ;; Registers used:
 14903 ;;		wreg, status,2, status,0, cstack
 14904 ;; Tracked objects:
 14905 ;;		On entry : 0/0
 14906 ;;		On exit  : 0/0
 14907 ;;		Unchanged: 0/0
 14908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14912 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14913 ;;Total ram usage:        1 bytes
 14914 ;; Hardware stack levels used: 1
 14915 ;; Hardware stack levels required when called: 3
 14916 ;; This function calls:
 14917 ;;		_I2C_2_Master_Idle
 14918 ;; This function is called by:
 14919 ;;		_color_writetoaddr
 14920 ;;		_color_read_Clear
 14921 ;;		_color_read_Red
 14922 ;;		_color_read_Green
 14923 ;;		_color_read_Blue
 14924 ;; This function uses a non-reentrant model
 14925 ;;
 14926                           
 14927                           	psect	text48
 14928   00765E                     __ptext48:
 14929                           	callstack 0
 14930   00765E                     _I2C_2_Master_Write:
 14931                           	callstack 25
 14932                           
 14933                           ;incstack = 0
 14934                           ;I2C_2_Master_Write@data_byte stored from wreg
 14935   00765E  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
 14936   007660                     
 14937                           ;i2c.c: 41:   I2C_2_Master_Idle();
 14938   007660  ECA5  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14939   007664                     
 14940                           ;i2c.c: 42:   SSP2BUF = data_byte;
 14941   007664  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 14942   007668  0012               	return		;funcret
 14943   00766A                     __end_of_I2C_2_Master_Write:
 14944                           	callstack 0
 14945                           
 14946 ;; *************** function _I2C_2_Master_Stop *****************
 14947 ;; Defined at:
 14948 ;;		line 35 in file "i2c.c"
 14949 ;; Parameters:    Size  Location     Type
 14950 ;;		None
 14951 ;; Auto vars:     Size  Location     Type
 14952 ;;		None
 14953 ;; Return value:  Size  Location     Type
 14954 ;;                  1    wreg      void 
 14955 ;; Registers used:
 14956 ;;		wreg, status,2, status,0, cstack
 14957 ;; Tracked objects:
 14958 ;;		On entry : 0/0
 14959 ;;		On exit  : 0/0
 14960 ;;		Unchanged: 0/0
 14961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14966 ;;Total ram usage:        0 bytes
 14967 ;; Hardware stack levels used: 1
 14968 ;; Hardware stack levels required when called: 3
 14969 ;; This function calls:
 14970 ;;		_I2C_2_Master_Idle
 14971 ;; This function is called by:
 14972 ;;		_color_writetoaddr
 14973 ;;		_color_read_Clear
 14974 ;;		_color_read_Red
 14975 ;;		_color_read_Green
 14976 ;;		_color_read_Blue
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980                           	psect	text49
 14981   00768A                     __ptext49:
 14982                           	callstack 0
 14983   00768A                     _I2C_2_Master_Stop:
 14984                           	callstack 25
 14985   00768A                     
 14986                           ;i2c.c: 36:   I2C_2_Master_Idle();
 14987   00768A  ECA5  F03A         	call	_I2C_2_Master_Idle	;wreg free
 14988   00768E                     
 14989                           ;i2c.c: 37:   SSP2CON2bits.PEN = 1;
 14990   00768E  010E               	movlb	14	; () banked
 14991   007690  85DA               	bsf	218,2,b	;volatile
 14992   007692                     
 14993                           ; BSR set to: 14
 14994   007692  0012               	return		;funcret
 14995   007694                     __end_of_I2C_2_Master_Stop:
 14996                           	callstack 0
 14997                           
 14998 ;; *************** function _I2C_2_Master_Start *****************
 14999 ;; Defined at:
 15000 ;;		line 25 in file "i2c.c"
 15001 ;; Parameters:    Size  Location     Type
 15002 ;;		None
 15003 ;; Auto vars:     Size  Location     Type
 15004 ;;		None
 15005 ;; Return value:  Size  Location     Type
 15006 ;;                  1    wreg      void 
 15007 ;; Registers used:
 15008 ;;		wreg, status,2, status,0, cstack
 15009 ;; Tracked objects:
 15010 ;;		On entry : 0/0
 15011 ;;		On exit  : 0/0
 15012 ;;		Unchanged: 0/0
 15013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15018 ;;Total ram usage:        0 bytes
 15019 ;; Hardware stack levels used: 1
 15020 ;; Hardware stack levels required when called: 3
 15021 ;; This function calls:
 15022 ;;		_I2C_2_Master_Idle
 15023 ;; This function is called by:
 15024 ;;		_color_writetoaddr
 15025 ;;		_color_read_Clear
 15026 ;;		_color_read_Red
 15027 ;;		_color_read_Green
 15028 ;;		_color_read_Blue
 15029 ;; This function uses a non-reentrant model
 15030 ;;
 15031                           
 15032                           	psect	text50
 15033   007694                     __ptext50:
 15034                           	callstack 0
 15035   007694                     _I2C_2_Master_Start:
 15036                           	callstack 25
 15037   007694                     
 15038                           ;i2c.c: 26:   I2C_2_Master_Idle();
 15039   007694  ECA5  F03A         	call	_I2C_2_Master_Idle	;wreg free
 15040   007698                     
 15041                           ;i2c.c: 27:   SSP2CON2bits.SEN = 1;
 15042   007698  010E               	movlb	14	; () banked
 15043   00769A  81DA               	bsf	218,0,b	;volatile
 15044   00769C                     
 15045                           ; BSR set to: 14
 15046   00769C  0012               	return		;funcret
 15047   00769E                     __end_of_I2C_2_Master_Start:
 15048                           	callstack 0
 15049                           
 15050 ;; *************** function _I2C_2_Master_Idle *****************
 15051 ;; Defined at:
 15052 ;;		line 21 in file "i2c.c"
 15053 ;; Parameters:    Size  Location     Type
 15054 ;;		None
 15055 ;; Auto vars:     Size  Location     Type
 15056 ;;		None
 15057 ;; Return value:  Size  Location     Type
 15058 ;;                  1    wreg      void 
 15059 ;; Registers used:
 15060 ;;		wreg, status,2, status,0
 15061 ;; Tracked objects:
 15062 ;;		On entry : 0/0
 15063 ;;		On exit  : 0/0
 15064 ;;		Unchanged: 0/0
 15065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15068 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15070 ;;Total ram usage:        1 bytes
 15071 ;; Hardware stack levels used: 1
 15072 ;; Hardware stack levels required when called: 2
 15073 ;; This function calls:
 15074 ;;		Nothing
 15075 ;; This function is called by:
 15076 ;;		_I2C_2_Master_Start
 15077 ;;		_I2C_2_Master_RepStart
 15078 ;;		_I2C_2_Master_Stop
 15079 ;;		_I2C_2_Master_Write
 15080 ;;		_I2C_2_Master_Read
 15081 ;; This function uses a non-reentrant model
 15082 ;;
 15083                           
 15084                           	psect	text51
 15085   00754A                     __ptext51:
 15086                           	callstack 0
 15087   00754A                     _I2C_2_Master_Idle:
 15088                           	callstack 25
 15089   00754A                     l119:
 15090   00754A  010E               	movlb	14	; () banked
 15091   00754C  B5D8               	btfsc	216,2,b	;volatile
 15092   00754E  EFAB  F03A         	goto	u3021
 15093   007552  EFAD  F03A         	goto	u3020
 15094   007556                     u3021:
 15095   007556  EFA5  F03A         	goto	l119
 15096   00755A                     u3020:
 15097   00755A                     
 15098                           ; BSR set to: 14
 15099   00755A  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
 15100   00755E  0E1F               	movlw	31
 15101   007560  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
 15102   007562  A4D8               	btfss	status,2,c
 15103   007564  EFB6  F03A         	goto	u3031
 15104   007568  EFB8  F03A         	goto	u3030
 15105   00756C                     u3031:
 15106   00756C  EFA5  F03A         	goto	l119
 15107   007570                     u3030:
 15108   007570                     
 15109                           ; BSR set to: 14
 15110   007570  0012               	return		;funcret
 15111   007572                     __end_of_I2C_2_Master_Idle:
 15112                           	callstack 0
 15113                           
 15114 ;; *************** function _I2C_2_Master_Init *****************
 15115 ;; Defined at:
 15116 ;;		line 4 in file "i2c.c"
 15117 ;; Parameters:    Size  Location     Type
 15118 ;;		None
 15119 ;; Auto vars:     Size  Location     Type
 15120 ;;		None
 15121 ;; Return value:  Size  Location     Type
 15122 ;;                  1    wreg      void 
 15123 ;; Registers used:
 15124 ;;		wreg, status,2
 15125 ;; Tracked objects:
 15126 ;;		On entry : 0/0
 15127 ;;		On exit  : 0/0
 15128 ;;		Unchanged: 0/0
 15129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15134 ;;Total ram usage:        0 bytes
 15135 ;; Hardware stack levels used: 1
 15136 ;; Hardware stack levels required when called: 2
 15137 ;; This function calls:
 15138 ;;		Nothing
 15139 ;; This function is called by:
 15140 ;;		_color_click_init
 15141 ;;		_main
 15142 ;; This function uses a non-reentrant model
 15143 ;;
 15144                           
 15145                           	psect	text52
 15146   007520                     __ptext52:
 15147                           	callstack 0
 15148   007520                     _I2C_2_Master_Init:
 15149                           	callstack 27
 15150   007520                     
 15151                           ;i2c.c: 6:   SSP2CON1bits.SSPM= 0b1000;
 15152   007520  010E               	movlb	14	; () banked
 15153   007522  51D9               	movf	217,w,b	;volatile
 15154   007524  0BF0               	andlw	-16
 15155   007526  0908               	iorlw	8
 15156   007528  6FD9               	movwf	217,b	;volatile
 15157   00752A                     
 15158                           ; BSR set to: 14
 15159                           ;i2c.c: 7:   SSP2CON1bits.SSPEN = 1;
 15160   00752A  8BD9               	bsf	217,5,b	;volatile
 15161                           
 15162                           ;i2c.c: 8:   SSP2ADD = (64000000/(4*100000))-1;
 15163   00752C  0E9F               	movlw	159
 15164   00752E  6FD6               	movwf	214,b	;volatile
 15165   007530                     
 15166                           ; BSR set to: 14
 15167                           ;i2c.c: 11:   TRISDbits.TRISD5 = 1;
 15168   007530  8A84               	bsf	132,5,c	;volatile
 15169   007532                     
 15170                           ; BSR set to: 14
 15171                           ;i2c.c: 12:   TRISDbits.TRISD6 = 1;
 15172   007532  8C84               	bsf	132,6,c	;volatile
 15173   007534                     
 15174                           ; BSR set to: 14
 15175                           ;i2c.c: 13:   ANSELDbits.ANSELD5=0;
 15176   007534  9BA7               	bcf	167,5,b	;volatile
 15177   007536                     
 15178                           ; BSR set to: 14
 15179                           ;i2c.c: 14:   ANSELDbits.ANSELD6=0;
 15180   007536  9DA7               	bcf	167,6,b	;volatile
 15181                           
 15182                           ;i2c.c: 15:   SSP2DATPPS=0x1D;
 15183   007538  0E1D               	movlw	29
 15184   00753A  6F1D               	movwf	29,b	;volatile
 15185                           
 15186                           ;i2c.c: 16:   SSP2CLKPPS=0x1E;
 15187   00753C  0E1E               	movlw	30
 15188   00753E  6F1C               	movwf	28,b	;volatile
 15189                           
 15190                           ;i2c.c: 17:   RD5PPS=0x1C;
 15191   007540  0E1C               	movlw	28
 15192   007542  6F6F               	movwf	111,b	;volatile
 15193                           
 15194                           ;i2c.c: 18:   RD6PPS=0x1B;
 15195   007544  0E1B               	movlw	27
 15196   007546  6F70               	movwf	112,b	;volatile
 15197   007548                     
 15198                           ; BSR set to: 14
 15199   007548  0012               	return		;funcret
 15200   00754A                     __end_of_I2C_2_Master_Init:
 15201                           	callstack 0
 15202                           
 15203 ;; *************** function _Timer0_init *****************
 15204 ;; Defined at:
 15205 ;;		line 7 in file "timers.c"
 15206 ;; Parameters:    Size  Location     Type
 15207 ;;		None
 15208 ;; Auto vars:     Size  Location     Type
 15209 ;;		None
 15210 ;; Return value:  Size  Location     Type
 15211 ;;                  1    wreg      void 
 15212 ;; Registers used:
 15213 ;;		wreg, status,2
 15214 ;; Tracked objects:
 15215 ;;		On entry : 0/0
 15216 ;;		On exit  : 0/0
 15217 ;;		Unchanged: 0/0
 15218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15223 ;;Total ram usage:        0 bytes
 15224 ;; Hardware stack levels used: 1
 15225 ;; Hardware stack levels required when called: 2
 15226 ;; This function calls:
 15227 ;;		Nothing
 15228 ;; This function is called by:
 15229 ;;		_main
 15230 ;; This function uses a non-reentrant model
 15231 ;;
 15232                           
 15233                           	psect	text53
 15234   0075B8                     __ptext53:
 15235                           	callstack 0
 15236   0075B8                     _Timer0_init:
 15237                           	callstack 28
 15238   0075B8                     
 15239                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 15240   0075B8  50D6               	movf	214,w,c	;volatile
 15241   0075BA  0B1F               	andlw	-225
 15242   0075BC  0940               	iorlw	64
 15243   0075BE  6ED6               	movwf	214,c	;volatile
 15244   0075C0                     
 15245                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 15246   0075C0  88D6               	bsf	214,4,c	;volatile
 15247                           
 15248                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1111;
 15249   0075C2  0E0F               	movlw	15
 15250   0075C4  12D6               	iorwf	214,f,c	;volatile
 15251                           
 15252                           ;timers.c: 12:     T0CON0bits.T0OUTPS=0b000;
 15253   0075C6  0EF0               	movlw	-16
 15254   0075C8  16D5               	andwf	213,f,c	;volatile
 15255   0075CA                     
 15256                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
 15257   0075CA  88D5               	bsf	213,4,c	;volatile
 15258                           
 15259                           ;timers.c: 17:     TMR0H=0b00001011;
 15260   0075CC  0E0B               	movlw	11
 15261   0075CE  6ED4               	movwf	212,c	;volatile
 15262                           
 15263                           ;timers.c: 18:     TMR0L=0b11011011;
 15264   0075D0  0EDB               	movlw	219
 15265   0075D2  6ED3               	movwf	211,c	;volatile
 15266   0075D4                     
 15267                           ;timers.c: 20:     T0CON0bits.T0EN=1;
 15268   0075D4  8ED5               	bsf	213,7,c	;volatile
 15269   0075D6  0012               	return		;funcret
 15270   0075D8                     __end_of_Timer0_init:
 15271                           	callstack 0
 15272                           
 15273 ;; *************** function _Interrupts_init *****************
 15274 ;; Defined at:
 15275 ;;		line 7 in file "interrupts.c"
 15276 ;; Parameters:    Size  Location     Type
 15277 ;;		None
 15278 ;; Auto vars:     Size  Location     Type
 15279 ;;		None
 15280 ;; Return value:  Size  Location     Type
 15281 ;;                  1    wreg      void 
 15282 ;; Registers used:
 15283 ;;		None
 15284 ;; Tracked objects:
 15285 ;;		On entry : 0/0
 15286 ;;		On exit  : 0/0
 15287 ;;		Unchanged: 0/0
 15288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15293 ;;Total ram usage:        0 bytes
 15294 ;; Hardware stack levels used: 1
 15295 ;; Hardware stack levels required when called: 2
 15296 ;; This function calls:
 15297 ;;		Nothing
 15298 ;; This function is called by:
 15299 ;;		_main
 15300 ;; This function uses a non-reentrant model
 15301 ;;
 15302                           
 15303                           	psect	text54
 15304   00766A                     __ptext54:
 15305                           	callstack 0
 15306   00766A                     _Interrupts_init:
 15307                           	callstack 28
 15308   00766A                     
 15309                           ;interrupts.c: 9:     INTCONbits.PEIE=1;
 15310   00766A  8CF2               	bsf	242,6,c	;volatile
 15311                           
 15312                           ;interrupts.c: 10:     PIE2bits.C1IE=1;
 15313   00766C  010E               	movlb	14	; () banked
 15314   00766E  812B               	bsf	43,0,b	;volatile
 15315                           
 15316                           ;interrupts.c: 14:     PIE0bits.IOCIE=1;
 15317   007670  8929               	bsf	41,4,b	;volatile
 15318                           
 15319                           ;interrupts.c: 15:     INTCONbits.GIE=1;
 15320   007672  8EF2               	bsf	242,7,c	;volatile
 15321   007674                     
 15322                           ; BSR set to: 14
 15323   007674  0012               	return		;funcret
 15324   007676                     __end_of_Interrupts_init:
 15325                           	callstack 0
 15326                           
 15327 ;; *************** function _ADC_init *****************
 15328 ;; Defined at:
 15329 ;;		line 9 in file "ADC.c"
 15330 ;; Parameters:    Size  Location     Type
 15331 ;;		None
 15332 ;; Auto vars:     Size  Location     Type
 15333 ;;		None
 15334 ;; Return value:  Size  Location     Type
 15335 ;;                  1    wreg      void 
 15336 ;; Registers used:
 15337 ;;		wreg, status,2
 15338 ;; Tracked objects:
 15339 ;;		On entry : 0/0
 15340 ;;		On exit  : 0/0
 15341 ;;		Unchanged: 0/0
 15342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15347 ;;Total ram usage:        0 bytes
 15348 ;; Hardware stack levels used: 1
 15349 ;; Hardware stack levels required when called: 2
 15350 ;; This function calls:
 15351 ;;		Nothing
 15352 ;; This function is called by:
 15353 ;;		_main
 15354 ;; This function uses a non-reentrant model
 15355 ;;
 15356                           
 15357                           	psect	text55
 15358   007614                     __ptext55:
 15359                           	callstack 0
 15360   007614                     _ADC_init:
 15361                           	callstack 28
 15362   007614                     
 15363                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
 15364   007614  8C86               	bsf	134,6,c	;volatile
 15365                           
 15366                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
 15367   007616  010E               	movlb	14	; () banked
 15368   007618  8DB4               	bsf	180,6,b	;volatile
 15369                           
 15370                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
 15371   00761A  010F               	movlb	15	; () banked
 15372   00761C  9958               	bcf	88,4,b	;volatile
 15373   00761E                     
 15374                           ; BSR set to: 15
 15375                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
 15376   00761E  0EFC               	movlw	-4
 15377   007620  1758               	andwf	88,f,b	;volatile
 15378                           
 15379                           ;ADC.c: 17:     ADPCH=0b101110;
 15380   007622  0E2E               	movlw	46
 15381   007624  6F5F               	movwf	95,b	;volatile
 15382   007626                     
 15383                           ; BSR set to: 15
 15384                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
 15385   007626  9460               	bcf	96,2,c	;volatile
 15386   007628                     
 15387                           ; BSR set to: 15
 15388                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
 15389   007628  8860               	bsf	96,4,c	;volatile
 15390   00762A                     
 15391                           ; BSR set to: 15
 15392                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
 15393   00762A  8E60               	bsf	96,7,c	;volatile
 15394   00762C                     
 15395                           ; BSR set to: 15
 15396   00762C  0012               	return		;funcret
 15397   00762E                     __end_of_ADC_init:
 15398                           	callstack 0
 15399                           
 15400 ;; *************** function _HighISR *****************
 15401 ;; Defined at:
 15402 ;;		line 23 in file "interrupts.c"
 15403 ;; Parameters:    Size  Location     Type
 15404 ;;		None
 15405 ;; Auto vars:     Size  Location     Type
 15406 ;;		None
 15407 ;; Return value:  Size  Location     Type
 15408 ;;                  1    wreg      void 
 15409 ;; Registers used:
 15410 ;;		wreg, cstack
 15411 ;; Tracked objects:
 15412 ;;		On entry : 0/0
 15413 ;;		On exit  : 0/0
 15414 ;;		Unchanged: 0/0
 15415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15420 ;;Total ram usage:        0 bytes
 15421 ;; Hardware stack levels used: 1
 15422 ;; Hardware stack levels required when called: 1
 15423 ;; This function calls:
 15424 ;;		i2_sendCharSerial4
 15425 ;; This function is called by:
 15426 ;;		Interrupt level 2
 15427 ;; This function uses a non-reentrant model
 15428 ;;
 15429                           
 15430                           	psect	intcode
 15431   000008                     __pintcode:
 15432                           	callstack 0
 15433   000008                     _HighISR:
 15434                           	callstack 24
 15435                           
 15436                           ; BSR set to: 15
 15437                           ;incstack = 0
 15438   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15439   00000A                     
 15440                           ;interrupts.c: 48:     if (PORTBbits.RB0){
 15441   00000A  A08A               	btfss	138,0,c	;volatile
 15442   00000C  EF0A  F000         	goto	i2u593_41
 15443   000010  EF0C  F000         	goto	i2u593_40
 15444   000014                     i2u593_41:
 15445   000014  EF10  F000         	goto	i2l451
 15446   000018                     i2u593_40:
 15447   000018                     
 15448                           ;interrupts.c: 49:         LATHbits.LATH3 = 0;
 15449   000018  9680               	bcf	128,3,c	;volatile
 15450   00001A                     
 15451                           ;interrupts.c: 50:         sendCharSerial4('a');
 15452   00001A  0E61               	movlw	97
 15453   00001C  EC23  F03B         	call	i2_sendCharSerial4
 15454   000020                     i2l451:
 15455   000020  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15456   000022  0011               	retfie		f
 15457   000024                     __end_of_HighISR:
 15458                           	callstack 0
 15459                           
 15460 ;; *************** function i2_sendCharSerial4 *****************
 15461 ;; Defined at:
 15462 ;;		line 31 in file "serial.c"
 15463 ;; Parameters:    Size  Location     Type
 15464 ;;  charToSend      1    wreg     unsigned char 
 15465 ;; Auto vars:     Size  Location     Type
 15466 ;;  charToSend      1    0[COMRAM] unsigned char 
 15467 ;; Return value:  Size  Location     Type
 15468 ;;                  1    wreg      void 
 15469 ;; Registers used:
 15470 ;;		wreg
 15471 ;; Tracked objects:
 15472 ;;		On entry : 0/0
 15473 ;;		On exit  : 0/0
 15474 ;;		Unchanged: 0/0
 15475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15480 ;;Total ram usage:        1 bytes
 15481 ;; Hardware stack levels used: 1
 15482 ;; This function calls:
 15483 ;;		Nothing
 15484 ;; This function is called by:
 15485 ;;		_HighISR
 15486 ;; This function uses a non-reentrant model
 15487 ;;
 15488                           
 15489                           	psect	text57
 15490   007646                     __ptext57:
 15491                           	callstack 0
 15492   007646                     i2_sendCharSerial4:
 15493                           	callstack 24
 15494                           
 15495                           ;incstack = 0
 15496                           ;i2sendCharSerial4@charToSend stored from wreg
 15497   007646  6E01               	movwf	i2sendCharSerial4@charToSend^0,c
 15498   007648                     i2l497:
 15499   007648  010E               	movlb	14	; () banked
 15500   00764A  A537               	btfss	55,2,b	;volatile
 15501   00764C  EF2A  F03B         	goto	i2u565_41
 15502   007650  EF2C  F03B         	goto	i2u565_40
 15503   007654                     i2u565_41:
 15504   007654  EF24  F03B         	goto	i2l497
 15505   007658                     i2u565_40:
 15506   007658                     
 15507                           ; BSR set to: 14
 15508                           ;serial.c: 33:     TX4REG = charToSend;
 15509   007658  C001  FEE4         	movff	i2sendCharSerial4@charToSend,3812	;volatile
 15510   00765C                     
 15511                           ; BSR set to: 14
 15512   00765C  0012               	return		;funcret
 15513   00765E                     __end_ofi2_sendCharSerial4:
 15514                           	callstack 0
 15515                           
 15516                           	psect	rparam
 15517   000000                     
 15518                           	psect	temp
 15519   00005D                     btemp:
 15520                           	callstack 0
 15521   00005D                     	ds	1
 15522   000000                     int$flags	set	btemp
 15523   000000                     wtemp8	set	btemp+1
 15524   000000                     ttemp5	set	btemp+1
 15525   000000                     ttemp6	set	btemp+4
 15526   000000                     ttemp7	set	btemp+8
 15527                           
 15528                           	psect	config
 15529                           
 15530                           ;Config register CONFIG1L @ 0x300000
 15531                           ;	External Oscillator mode Selection bits
 15532                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15533                           ;	Power-up default value for COSC bits
 15534                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15535   300000                     	org	3145728
 15536   300000  AA                 	db	170
 15537                           
 15538                           ;Config register CONFIG1H @ 0x300001
 15539                           ;	unspecified, using default values
 15540                           ;	Clock Out Enable bit
 15541                           ;	CLKOUTEN = 0x1, unprogrammed default
 15542                           ;	Clock Switch Enable bit
 15543                           ;	CSWEN = 0x1, unprogrammed default
 15544                           ;	Fail-Safe Clock Monitor Enable bit
 15545                           ;	FCMEN = 0x1, unprogrammed default
 15546   300001                     	org	3145729
 15547   300001  FF                 	db	255
 15548                           
 15549                           ;Config register CONFIG3L @ 0x300004
 15550                           ;	WDT Period Select bits
 15551                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15552                           ;	WDT operating mode
 15553                           ;	WDTE = OFF, WDT Disabled
 15554   300004                     	org	3145732
 15555   300004  9F                 	db	159
 15556                           
 15557                           ;Config register CONFIG3H @ 0x300005
 15558                           ;	unspecified, using default values
 15559                           ;	WDT Window Select bits
 15560                           ;	WDTCWS = 0x7, unprogrammed default
 15561                           ;	WDT input clock selector
 15562                           ;	WDTCCS = 0x7, unprogrammed default
 15563   300005                     	org	3145733
 15564   300005  FF                 	db	255
 15565                           tosu	equ	0xFFF
 15566                           tosh	equ	0xFFE
 15567                           tosl	equ	0xFFD
 15568                           stkptr	equ	0xFFC
 15569                           pclatu	equ	0xFFB
 15570                           pclath	equ	0xFFA
 15571                           pcl	equ	0xFF9
 15572                           tblptru	equ	0xFF8
 15573                           tblptrh	equ	0xFF7
 15574                           tblptrl	equ	0xFF6
 15575                           tablat	equ	0xFF5
 15576                           prodh	equ	0xFF4
 15577                           prodl	equ	0xFF3
 15578                           indf0	equ	0xFEF
 15579                           postinc0	equ	0xFEE
 15580                           postdec0	equ	0xFED
 15581                           preinc0	equ	0xFEC
 15582                           plusw0	equ	0xFEB
 15583                           fsr0h	equ	0xFEA
 15584                           fsr0l	equ	0xFE9
 15585                           wreg	equ	0xFE8
 15586                           indf1	equ	0xFE7
 15587                           postinc1	equ	0xFE6
 15588                           postdec1	equ	0xFE5
 15589                           preinc1	equ	0xFE4
 15590                           plusw1	equ	0xFE3
 15591                           fsr1h	equ	0xFE2
 15592                           fsr1l	equ	0xFE1
 15593                           bsr	equ	0xFE0
 15594                           indf2	equ	0xFDF
 15595                           postinc2	equ	0xFDE
 15596                           postdec2	equ	0xFDD
 15597                           preinc2	equ	0xFDC
 15598                           plusw2	equ	0xFDB
 15599                           fsr2h	equ	0xFDA
 15600                           fsr2l	equ	0xFD9
 15601                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    112
    Data        0
    BSS         123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      92
    BANK0           160    118     144
    BANK1           256    184     216
    BANK2           256    198     198
    BANK3           256      0      60
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    inch_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    inch_forward@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    inch_forward@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    inch_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    inch_forward@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    inch_forward@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pblue_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@blue_val(BANK2[20]), 

    main@pclear_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK2[20]), 

    main@pgreen_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@green_val(BANK2[20]), 

    main@pmL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    main@pmL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pmR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    main@pmR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pred_val	PTR unsigned char  size(2) Largest target is 20
		 -> main@red_val(BANK2[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    reverse_after_read@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    reverse_after_read@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_after_read@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    reverse_one_square@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    reverse_one_square@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    reverse_one_square@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S1061DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    S1061DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S2538$buffer	PTR unsigned char  size(2) Largest target is 0

    S2538$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK2[20]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), main@motorR(BANK2[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@clear_val(BANK2[20]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    turn_left_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    turn_left_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    turn_left_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    turn_left_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_left_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    turn_right_135@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    turn_right_135@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_135@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK2[9]), 

    turn_right_90@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK2[9]), 

    turn_right_90@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhllll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turn_right_90@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhllll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _turn_right_90->_stop
    _turn_right_135->_stop
    _turn_left_90->_stop
    _turn_left_135->_stop
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _reverse_one_square->_stop
    _reverse_after_read->_stop
    _inch_forward->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _decide_action->___flge
    _powf->___flge
    _sqrtf->___fladd
    _scalbnf->___flmul
    ___flmul->___fladd
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___flsub->___fldiv
    ___flge->___flsub
    ___fldiv->___flmul
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _HighISR->i2_sendCharSerial4

Critical Paths under _main in BANK0

    _main->_decide_action
    _decide_action->_powf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _decide_action->_powf

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               220   220      0  193568
                                            113 BANK0      5     5      0
                                              0 BANK2    198   198      0
                           _ADC_init
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
              _color_click_toggleLED
                   _color_read_Clear
                      _decide_action
                     _fullSpeedAhead
                    _get16bitTMR0val
                       _inch_forward
                    _initDCmotorsPWM
                         _initUSART4
                      _invert_action
                        _resetTimer0
                 _reverse_after_read
                 _reverse_one_square
                  _sendStringSerial4
                            _sprintf
                               _stop
                      _turn_left_135
                       _turn_left_90
                     _turn_right_135
                      _turn_right_90
 ---------------------------------------------------------------------------------
 (1) _turn_right_90                                        6     2      4    8354
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_right_135                                       6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_90                                         6     2      4    7442
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _turn_left_135                                        6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    15      5    3287
                                             26 COMRAM    18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2936
                                             22 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    2586
                                             11 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              2 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reverse_one_square                                   6     2      4    7138
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reverse_after_read                                   6     2      4    8050
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _resetTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _invert_action                                        4     4      0      51
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _inch_forward                                         6     2      4    6986
                                             24 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 4     0      4    4133
                                             20 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _get16bitTMR0val                                      6     4      2      24
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    2961
                                             20 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                          6     4      2    2437
                                             14 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     358
                                              7 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _decide_action                                       96    96      0  121087
                                             17 BANK0     96    96      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flsub
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                  _color_writetoaddr
                               _powf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   74453
                                              0 BANK0     17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (2) _sqrtf                                               41    37      4    1413
                                             17 COMRAM    37    33      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6    9383
                                             42 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    8888
                                             17 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                             12 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8   18849
                                             67 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8   13662
                                              1 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1094
                                             75 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2767
                                             42 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              2 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_toggleLED                                1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     674
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     674
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0      22
                  i2_sendCharSerial4
 ---------------------------------------------------------------------------------
 (7) i2_sendCharSerial4                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_click_toggleLED
   _color_read_Clear
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _decide_action
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
     ___flge
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
     ___flsub
     ___xxtofl
       _color_read_Blue (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_read_Blue
     _color_read_Green
     _color_read_Red
     _color_writetoaddr
     _powf
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
         ___fladd (ARG)
     _sqrtf
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _get16bitTMR0val
   _inch_forward
     _setMotorPWM
     _stop
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _invert_action
   _resetTimer0
   _reverse_after_read
     _setMotorPWM
     _stop
   _reverse_one_square
     _setMotorPWM
     _stop
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch
   _stop
   _turn_left_135
     _setMotorPWM
     _stop
   _turn_left_90
     _setMotorPWM
     _stop
   _turn_right_135
     _setMotorPWM
     _stop
   _turn_right_90
     _setMotorPWM
     _stop

 _HighISR (ROOT)
   i2_sendCharSerial4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      68        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      3C      11       23.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C6      C6       9       77.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B8      D8       7       84.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     76      90       5       90.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      5C       1       97.9%
BITBIGSFRllhllh     37      0       0      49        0.0%
BITBIGSFRllhhl      31      0       0      47        0.0%
BITBIGSFRlllllh     2A      0       0      60        0.0%
BITBIGSFRllllll     26      0       0      66        0.0%
BITBIGSFRllllhh     20      0       0      52        0.0%
BITBIGSFRlllllh     1E      0       0      54        0.0%
BITBIGSFRhhlllh     1B      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      44        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      53        0.0%
BITBIGSFRlllllh      B      0       0      64        0.0%
BITBIGSFRlllllh      9      0       0      61        0.0%
BITBIGSFRllhlll      8      0       0      50        0.0%
BITBIGSFRllhhhl      6      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      65        0.0%
BITBIGSFRlllllh      6      0       0      59        0.0%
BITBIGSFRlllllh      5      0       0      58        0.0%
BITBIGSFRllhhhh      3      0       0      45        0.0%
BITBIGSFRlllllh      3      0       0      57        0.0%
BITBIGSFRllhlh       2      0       0      48        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      63        0.0%
BITBIGSFRlllllh      1      0       0      62        0.0%
BITBIGSFRlhlh        1      0       0      42        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      51        0.0%
BITBIGSFRhlhl        1      0       0      40        0.0%
BITBIGSFRhhllll      1      0       0      39        0.0%
BITBIGSFRlhh         1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C6      67        0.0%
DATA                 0      0     2C6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Mar 15 00:23:21 2024

               _color_read_Red 71BC                   ___fldiv@aexp 0043                   ___fldiv@bexp 0042  
                 ___fldiv@sign 003B                _color_read_Blue 725C                             _L1 0E5D  
                           _L2 0E59                             _L3 0E55                             _L4 0E51  
                           _L5 0E4D                             l50 75B6                             _L6 0E49  
                           l53 72FA                             _P1 0E45                             l62 72AA  
                           _P2 0E41                             l47 7344                             l71 34AC  
                           _P3 0E3D                             l56 720A                             _P4 0E39  
                           l65 71BA                             l73 3528                             _P5 0E35  
                           l59 725A                             l77 450E                             l69 3430  
                           l89 70E0                   ___awdiv@sign 0007                             _bp 0E11  
                           _cp 0E21            ___wmul@multiplicand 0004          __end_of_invert_action 70E2  
             _color_read_Clear 72AC               _color_read_Green 720C              ??_Interrupts_init 0002  
                          l122 7570                            l131 7692                            l203 6DA6  
                          l211 704C                            l116 7548                            l125 769C  
                          l134 7668                            l230 690C                            l214 6AE2  
                          l222 69F8                            l119 754A                            l128 7688  
                          l137 740E                            l251 6588                            l235 6968  
                          l219 6B3C                            l243 687C                            l227 6A52  
                          l412 75D6                            l500 7644                            l262 6BCA  
                          l246 6514                            l254 661A                            l238 6820  
                          l415 7612                            l418 767E                            l506 751E  
                          l195 6482                            l267 6C26                            l259 668C  
                          l188 6FB2                            l445 7674                            l198 6D76  
                          l391 4C34                            l553 762C                            l369 49C0  
                          l562 7596                            l806 6F10                            l832 6790  
                          l488 75F4                            l497 7630                            l827 674A  
                          l836 74BA                            l793 6CEA                            _lg2 0E31  
                          _abs 74BC                            _ovt 0E25                   ___awmod@sign 0007  
                          prod 0FF3                            wreg 0FE8                   ___flmul@aexp 0023  
                 ___flmul@bexp 0024                   ___flmul@sign 001E                   ___flmul@temp 0029  
                 ___flmul@prod 0025                    main@actions 0250                           l1107 5000  
                         ?_abs 0008                           l1116 50D0                           l1132 738A  
                         l1220 6316                           l1060 7154                           l1117 50BE  
                         l1053 714C                           l1231 62AE                           l1303 6E60  
                         l1144 5D58                           l1224 6252                           l1400 136E  
                         l1240 744A                           l1217 61BA                           l1146 5BB8  
                         l1090 4EE6                           l1155 5BFE                           l1091 4ED4  
                         l1092 4E9A                           l1180 55E0                           l1404 13CC  
                         l1157 5C76                           l1149 5B7C                           l1158 5C64  
                         l1183 5472                           l4000 55D0                           l1176 527C  
                         l1193 55A2                           l1185 54EA                           l1186 54D8  
                         l4010 6C42                           l1099 51B6                           l1371 3300  
                         l1291 74EE                           l4100 713E                           l4020 6C68  
                         l4012 6C46                           l4004 6C28                           l1444 769E  
                         l1284 73CC                           l1437 32C4                           l1454 5F8C  
                         l4102 7140                           l4030 6C9E                           l4022 6C7A  
                         l4014 6C54                           l4006 6C2C                           l4110 6DC8  
                         l1278 6162                           l1471 5824                           l1463 59BE  
                         l4200 583E                           l1376 1164                           l4104 7146  
                         l4032 6CB4                           l4024 6C82                           l4040 6CCA  
                         l4016 6C5C                           l4008 6C3A                           l1288 74D6  
                         l4120 74BC                           l4112 6DD2                           l4130 7664  
                         l1474 58E8                           l4210 5902                           l4202 585E  
                         l1386 11FA                           l5010 6FF2                           l5002 6FB4  
                         l4042 6CDA                           l4034 6CBC                           l4026 6C8A  
                         l4018 6C60                           l4050 6E66                           l4122 74CA  
                         l4114 6DEE                           l4106 6DA8                           l1467 57C6  
                         l4124 7694                           l4132 768A                           l4140 73D0  
                         l4300 5B30                           l1476 5956                           l4212 5918  
                         l4204 5872                           l1396 12BC                           l4220 6318  
                         l5020 7034                           l5012 6FFC                           l5004 6FB8  
                         l4044 6CE2                           l4036 6CBE                           l4028 6C98  
                         l4060 6E96                           l4052 6E74                           l4116 6E20  
                         l4108 6DB8                           l4126 7698                           l4134 768E  
                         l4150 740C                           l4142 73D4                           l4310 5B7A  
                         l4302 5B40                           l4214 592E                           l4206 58B0  
                         l4230 63E2                           l4222 6334                           l5014 7008  
                         l5006 6FD0                           l5022 7630                           l4038 6CC4  
                         l4070 6EDC                           l4062 6EA8                           l4054 6E7C  
                         l5030 73A4                           l4128 7660                           l5040 730A  
                         l4144 73DC                           l4136 7680                           l4320 5BC8  
                         l4312 5B86                           l4304 5B48                           l4240 59DA  
                         l4208 58F8                           l4160 5654                           l4232 63FE  
                         l4224 6388                           l5016 7014                           l5008 6FDA  
                         l5200 7054                           l5024 7640                           l4080 6F08  
                         l4072 6EE4                           l4064 6EB0                           l4056 6E80  
                         l4048 6E62                           l5032 73C4                           l5050 733A  
                         l5042 731A                           l4146 73E4                           l4138 7684  
                         l4322 5BDE                           l4330 5C0E                           l4314 5BA4  
                         l4306 5B58                           l4250 5A0E                           l4242 59DC  
                         l4402 7484                           l4410 6166                           l4170 56A4  
                         l4162 5662                           l4154 55E2                           l4090 7104  
                         l4234 6442                           l4226 639C                           l5018 701C  
                         l5210 707C                           l5202 705C                           l4074 6EEA  
                         l4066 6EB8                           l4058 6E8E                           l5026 738C  
                         l5052 733C                           l5044 7324                           l5036 72FC  
                         l4148 740A                           l5060 72AC                           l4332 5C1C  
                         l4324 5BE4                           l4316 5BA6                           l4308 5B6C  
                         l4260 5A40                           l4244 59EC                           l4252 5A16  
                         l4236 59C0                           l4404 749A                           l3700 4D8C  
                         l4412 6176                           l4172 56D2                           l4164 5672  
                         l4156 55F2                           l4092 710C                           l4084 70E2  
                         l4228 63A0                           l5212 7084                           l5204 7064  
                         l4068 6EC6                           l4076 6EF0                           l4500 613C  
                         l5028 7394                           l5300 6B28                           l5054 733E  
                         l5046 732E                           l5038 7300                           l5062 72F2  
                         l4342 5C86                           l4350 5CCE                           l4334 5C20  
                         l4326 5BEE                           l4318 5BB6                           l4270 5A74  
                         l4262 5A42                           l4254 5A26                           l4246 59FC  
                         l4238 59CC                           l4406 74AA                           l3710 4DC0  
                         l3702 4D8E                           l4430 623C                           l4422 61F4  
                         l4414 6184                           l4510 5D86                           l4190 5784  
                         l4158 5626                           l4094 711A                           l4086 70EA  
                         l5230 6F60                           l5206 706C                           l4078 6F00  
                         l5310 69C6                           l5302 696A                           l5056 7340  
                         l5048 7338                           l4360 5D38                           l4352 5CE8  
                         l4344 5C92                           l4336 5C2E                           l4328 5BFC  
                         l4280 5ABA                           l4264 5A52                           l4272 5A7C  
                         l4256 5A2C                           l4248 5A0C                           l3800 4FCE  
                         l3720 4DFC                           l3704 4D9E                           l3712 4DC8  
                         l4440 62BC                           l4432 6248                           l4424 61FC  
                         l4416 61CA                           l4520 5E1A                           l4512 5DBA  
                         l4192 5790                           l4176 56E6                           l4184 5712  
                         l4168 5686                           l4096 7120                           l4088 70FC  
                         l5240 6F82                           l5232 6F6A                           l5208 7074  
                         l5216 708C                           l5400 65E8                           l5320 6A28  
                         l5312 69D0                           l5304 698C                           l5058 7342  
                         l5066 7156                           l4362 5D46                           l4354 5CFE  
                         l4346 5CA0                           l4338 5C5C                           l4290 5AE2  
                         l4282 5ABE                           l4274 5A8C                           l4266 5A62  
                         l4258 5A32                           l3810 5026                           l3802 4FD0  
                         l3730 4E10                           l3722 4E00                           l3714 4DD8  
                         l3706 4DAE                           l4450 6304                           l4442 62BE  
                         l4434 6284                           l4426 6208                           l4418 61E0  
                         l4530 5E9A                           l4522 5E36                           l4514 5DC2  
                         l4506 5D5A                           l4194 579E                           l4186 5766  
                         l4178 56F4                           l4098 7136                           l5250 6FA6  
                         l5242 6F84                           l5234 6F6C                           l5226 6F12  
                         l5218 70DE                           l5410 664A                           l5402 65F2  
                         l5330 68C2                           l5322 6A3E                           l5314 69DC  
                         l5306 69A4                           l4364 5D4C                           l4356 5D18  
                         l4348 5CCA                           l4276 5AA2                           l4268 5A72  
                         l4380 668E                           l3820 5054                           l3804 4FE0  
                         l3740 4E24                           l3732 4E14                           l3724 4E04  
                         l3716 4DEA                           l3708 4DBE                           l4452 6306  
                         l4444 62C2                           l4436 6290                           l4428 623A  
                         l3900 5246                           l4532 5EB6                           l4516 5DDE  
                         l4540 5F16                           l4524 5E42                           l4508 5D6A  
                         l4196 5806                           l4188 577A                           l7100 1320  
                         l5420 6B76                           l5260 6FB0                           l5252 6FA8  
                         l5244 6F8E                           l5236 6F76                           l5228 6F3C  
                         l5412 6660                           l5404 65FE                           l4460 5FBC  
                         l5340 6924                           l5332 68DA                           l5324 687E  
                         l5316 69E8                           l5308 69AE                           l4550 752A  
                         l3662 754A                           l4366 5D4E                           l4358 5D34  
                         l4294 5AF6                           l4278 5AB2                           l4286 5AD2  
                         l4390 6718                           l4382 66BC                           l3822 5062  
                         l3814 503A                           l3830 5080                           l3806 4FF0  
                         l3742 4E28                           l3734 4E18                           l3726 4E08  
                         l3718 4DF8                           l3750 4E38                           l4374 7346  
                         l4446 62E6                           l4438 629E                           l3910 529C  
                         l3902 5256                           l4542 5F48                           l4534 5EEA  
                         l4526 5E5E                           l4518 5E12                           l4198 5814  
                         l7110 139A                           l7102 1338                           l7030 0EA2  
                         l5270 6D46                           l5262 6CEC                           l5430 6BBA  
                         l5422 6B80                           l5254 6FAA                           l5246 6FA2  
                         l5238 6F78                           l5414 6674                           l5406 660A  
                         l4470 6018                           l4462 5FCA                           l5342 693C  
                         l5334 68E4                           l5326 68A0                           l5350 67CC  
                         l5318 6A10                           l5440 75C0                           l4552 7530  
                         l3664 755A                           l4560 759A                           l4296 5B10  
                         l4288 5AE2                           l4392 672A                           l4384 66CC  
                         l3824 506A                           l3816 5044                           l3808 5016  
                         l3832 508E                           l3760 4EA8                           l3752 4E3C  
                         l3744 4E2C                           l3736 4E1C                           l3728 4E0C  
                         l3680 4D24                           l3672 4CF8                           l4376 7356  
                         l4448 62F6                           l3920 52DC                           l3904 5266  
                         l4544 5F7C                           l4536 5EF2                           l4528 5E92  
                         l7200 189E                           l7120 142E                           l7112 13B0  
                         l7104 1346                           l7032 0EEA                           l5272 6D50  
                         l5264 6D0C                           l5432 6BE2                           l5424 6B98  
                         l5416 6B3E                           l5256 6FAC                           l5248 6FA4  
                         l5408 6632                           l4480 60A2                           l4472 6030  
                         l4464 5FCE                           l4456 5F8E                           l5344 6954  
                         l5336 68F0                           l5328 68B8                           l5280 6A54  
                         l5360 6810                           l5352 67D6                           l5450 7626  
                         l5442 75CA                           l4554 7532                           l4570 7252  
                         l4562 71BC                           l4298 5B20                           l4394 6738  
                         l4386 66FA                           l3842 50E0                           l3850 5136  
                         l3834 5092                           l3826 506E                           l3818 5052  
                         l3770 4ED2                           l3762 4EB4                           l3754 4E66  
                         l3746 4E30                           l3738 4E20                           l3690 4D5E  
                         l3682 4D34                           l3674 4D04                           l3930 5326  
                         l3922 52E8                           l3914 52B0                           l3906 526C  
                         l4538 5F0E                           l7210 196A                           l7202 18D2  
                         l7122 1492                           l7114 13DC                           l7050 0FAE  
                         l7042 0F32                           l3666 7572                           l5274 6D5C  
                         l5266 6D24                           l5434 6BFA                           l5426 6BA2  
                         l5418 6B5E                           l5258 6FAE                           l5370 64A8  
                         l4490 60FA                           l4482 60B4                           l4474 603A  
                         l4466 5FD8                           l4458 5FB4                           l5338 68FC  
                         l5290 6ABA                           l5282 6A76                           l5362 6838  
                         l5354 67EE                           l5346 6792                           l5452 7628  
                         l5444 75D4                           l4556 7534                           l4548 7520  
                         l4564 7202                           l4396 6788                           l4388 670A  
                         l3860 5188                           l3852 5146                           l3844 50EC  
                         l3836 50A0                           l3828 507E                           l3780 4F28  
                         l3772 4EF4                           l3764 4EB8                           l3756 4E82  
                         l3748 4E34                           l3692 4D64                           l3684 4D44  
                         l3676 4D12                           l3940 5378                           l3932 5332  
                         l3924 5300                           l3916 52BC                           l3908 528C  
                         l7300 2326                           l7220 1A1C                           l7212 197C  
                         l7204 190A                           l7124 14B2                           l7116 13EA  
                         l7132 1502                           l7108 137E                           l7060 1018  
                         l7052 0FBE                           l7044 0F54                           l7036 0F00  
                         l7028 0E82                           l3668 758E                           l5276 6D68  
                         l5268 6D2E                           l5436 6C12                           l5428 6BAE  
                         l5460 75E2                           l5380 64F8                           l5372 64C0  
                         l4492 6118                           l4484 60C4                           l4476 6052  
                         l4468 5FF8                           l5292 6AC6                           l5284 6A8E  
                         l5364 6850                           l5356 67F8                           l5348 67B4  
                         l5454 762A                           l5446 7614                           l5438 75B8  
                         l4558 7536                           l4574 725C                           l4398 678E  
                         l3870 51A6                           l3862 518E                           l3854 5156  
                         l3846 50FA                           l3838 50B6                           l3790 4F62  
                         l3782 4F36                           l3774 4F04                           l3766 4EC6  
                         l3758 4E92                           l3694 4D76                           l3686 4D46  
                         l3678 4D14                           l3950 53F6                           l3942 5388  
                         l3934 5342                           l3926 530C                           l3918 52C6  
                         l7310 23EC                           l7302 235A                           l7230 1A94  
                         l7222 1A34                           l7214 198C                           l7206 191A  
                         l7150 1582                           l7134 1512                           l7126 14CA  
                         l7118 141E                           l7062 1116                           l7054 0FCC  
                         l7046 0F76                           l7038 0F1C                           l5278 6D8E  
                         l5462 75E4                           l5198 7050                           l5470 7676  
                         l5390 6570                           l5382 6504                           l5374 64CA  
                         l4486 60D4                           l4494 611A                           l4478 6086  
                         l5294 6AD2                           l5286 6A98                           l5366 6868  
                         l5358 6804                           l5448 761E                           l5456 766A  
                         l4576 72A2                           l4568 720C                           l3864 5190  
                         l3856 5176                           l3848 5134                           l3792 4F64  
                         l3784 4F44                           l3768 4EC8                           l3696 4D78  
                         l3688 4D4E                           l3960 5470                           l3952 542C  
                         l3944 53A4                           l3936 534E                           l3928 5318  
                         l3880 51D4                           l7400 2D16                           l7320 25D6  
                         l7312 2420                           l7304 236A                           l7240 1BC2  
                         l7232 1AB0                           l7216 19F4                           l7208 1936  
                         l7152 15A6                           l7144 153A                           l7136 1520  
                         l7128 14EE                           l7080 120E                           l7072 11B4  
                         l7064 1182                           l7056 0FE8                           l5472 75F6  
                         l5464 75EE                           l5384 652C                           l5376 64E2  
                         l5368 6484                           l5392 658A                           l4488 60E4  
                         l4496 6130                           l5480 7410                           l5296 6AFA  
                         l5288 6AB0                           l3866 5196                           l3858 517A  
                         l3794 4F6E                           l3786 4F50                           l3778 4F18  
                         l3698 4D7E                           l3970 54D0                           l3962 5482  
                         l3954 543A                           l3946 53B0                           l3938 535E  
                         l3890 521A                           l3882 51E4                           l3874 51B8  
                         l7410 2E62                           l7402 2D4A                           l7330 26BE  
                         l7322 25E6                           l7314 24F2                           l7306 2384  
                         l7250 1CC8                           l7242 1BD2                           l7234 1AC0  
                         l7226 1A5C                           l7218 1A0C                           l7154 15B4  
                         l7162 15D2                           l7146 1550                           l7090 1276  
                         l7082 121C                           l7074 11D6                           l7066 119E  
                         l7058 0FFC                           l5474 75FC                           l5466 75F0  
                         l5458 75D8                           l5386 6544                           l5378 64EC  
                         l5394 65AE                           l5482 741C                           l5298 6B12  
                         l3868 51A4                           l3788 4F54                           l3796 4F74  
                         l3980 553E                           l3964 5490                           l3956 5458  
                         l3948 53CC                           l3892 5220                           l3884 51F4  
                         l3876 51C4                           l7420 2FD2                           l7412 2E96  
                         l7404 2DA2                           l7340 2800                           l7324 2600  
                         l7316 2518                           l7308 23B8                           l7260 1E34  
                         l7252 1D1C                           l7244 1BE2                           l7236 1B14  
                         l7228 1A80                           l7332 26F2                           l7148 1560  
                         l7092 1284                           l7084 1244                           l7076 11E4  
                         l7500 3AA4                           l5476 760A                           l5468 75F2  
                         l5388 655C                           l5396 65C6                           l5492 74F0  
                         l5484 7424                           l3798 4F9A                           l3990 55A6  
                         l3974 54FA                           l3982 5542                           l3966 5494  
                         l3958 5462                           l3894 5226                           l3886 5204  
                         l3878 51D2                           l7430 318A                           l7422 302A  
                         l7414 2ECA                           l7406 2DFA                           l7342 2834  
                         l7334 271C                           l7326 2634                           l7318 25A2  
                         l7270 1FC8                           l7262 1E68                           l7254 1D50  
                         l7246 1BFC                           l7238 1B8E                           l7190 175C  
                         l7182 1644                           l7166 15E8                           l7094 12D0  
                         l7510 3C5E                           l7502 3ADA                           l5398 65D0  
                         l5494 74F4                           l5486 742C                           l3992 55B6  
                         l3984 555C                           l3976 5506                           l3968 54A2  
                         l3896 5234                           l3888 520A                           l7440 3294  
                         l7432 31BE                           l7424 3082                           l7416 2F22  
                         l7408 2E2E                           l7344 2844                           l7336 2774  
                         l7328 268A                           l7280 2114                           l7272 2020  
                         l7264 1EC0                           l7256 1DA8                           l7248 1C56  
                         l7192 1790                           l7184 1678                           l7168 160C  
                         l7096 12E8                           l7088 125A                           l7520 3DE4  
                         l7512 3C94                           l7504 3B10                           l5496 7502  
                         l5488 743C                           l7600 453E                           l3994 55C4  
                         l3986 5570                           l3978 5514                           l3898 5236  
                         l7442 32D4                           l7434 31F2                           l7426 30FE  
                         l7418 2F7A                           l7354 286C                           l7338 27CC  
                         l7290 21DA                           l7282 2148                           l7274 2054  
                         l7266 1F18                           l7258 1E00                           l7194 17C4  
                         l7186 16D0                           l7178 162E                           l7530 3F9E  
                         l7522 3E84                           l7514 3D32                           l7506 3B44  
                         l7450 3302                           l5498 7506                           l7610 4550  
                         l7602 4542                           l3996 55C6                           l3988 558A  
                         l7444 32EC                           l7436 3202                           l7428 3156  
                         l7372 295E                           l7380 29E8                           l7356 2884  
                         l7364 2902                           l7292 220E                           l7284 217C  
                         l7276 2088                           l7268 1F70                           l7196 1874  
                         l7188 1704                           l7540 40A6                           l7532 3FD2  
                         l7524 3EB8                           l7516 3D68                           l7508 3B78  
                         l7460 33A0                           l7452 3316                           l7700 476C  
                         l7620 4570                           l7612 4558                           l7604 4542  
                         l3998 55CC                           l7438 3244                           l7390 2C50  
                         l7382 2A5A                           l7374 297C                           l7366 294A  
                         l7294 2242                           l7286 21B0                           l7278 20E0  
                         l7198 1884                           l7550 42DE                           l7542 418C  
                         l7534 4008                           l7526 3F22                           l7518 3DB0  
                         l7470 3462                           l7462 33AA                           l7454 332E  
                         l7710 482A                           l7702 4798                           l7630 4594  
                         l7622 4574                           l7614 4560                           l7606 4548  
                         l7392 2C84                           l7384 2A6A                           l7376 29D2  
                         l7296 2276                           l7288 21C0                           l7560 4498  
                         l7552 4312                           l7544 41C2                           l7536 403E  
                         l7528 3F6A                           l7480 3766                           l7472 3478  
                         l7464 33B4                           l7456 3354                           l7720 48E6  
                         l7712 483E                           l7704 47AA                           l7640 45A4  
                         l7632 459C                           l7624 457C                           l7616 4568  
                         l7608 454C                           l7394 2CB8                           l7386 2A8C  
                         l7298 22AA                           l7570 4500                           l7562 449E  
                         l7554 43B2                           l7546 4260                           l7538 4072  
                         l7490 3956                           l7482 3804                           l7474 34DE  
                         l7466 33E6                           l7458 337A                           l7810 4C66  
                         l7802 4C1C                           l7730 498E                           l7722 4912  
                         l7714 487E                           l7706 47D6                           l7650 45E4  
                         l7642 45A8                           l7634 45A4                           l7626 4584  
                         l7618 456C                           l7396 2CC8                           l7388 2C40  
                         l7572 4504                           l7564 44A2                           l7556 43E6  
                         l7548 4296                           l7492 398A                           l7484 383A  
                         l7476 34F4                           l7468 33FC                           l7820 4CB0  
                         l7812 4C72                           l7740 49FC                           l7732 49A8  
                         l7724 4926                           l7716 4892                           l7708 47EA  
                         l7660 461C                           l7652 45EC                           l7644 45B0  
                         l7636 45A4                           l7628 458C                           l7580 4510  
                         l7398 2CE2                           l7558 4450                           l7494 39F4  
                         l7486 3882                           l7478 3730                           l7822 4CD8  
                         l7806 4C34                           l7814 4C7A                           l7750 4A3C  
                         l7742 4A00                           l7726 4952                           l7718 48D2  
                         l7734 49C0                           l7670 467A                           l7662 4628  
                         l7654 45FE                           l7646 45CA                           l7638 45A4  
                         l7590 4530                           l7582 4518                           l7576 450C  
                         l7568 44B6                           l7496 3A3C                           l7488 38B6  
                         l7808 4C4E                           l7760 4A6E                           l7752 4A54  
                         l7816 4C8C                           l7736 49F0                           l7728 4966  
                         l7680 46D2                           l7672 4686                           l7664 4640  
                         l7656 4602                           l7648 45D6                           l7592 4534  
                         l7584 451C                           l7498 3A70                           l7818 4C9C  
                         l7770 4AD2                           l7762 4A82                           l7746 4A14  
                         l7738 49F8                           l7690 4724                           l7682 46EA  
                         l7674 469E                           l7666 464C                           l7658 4616  
                         l7594 4538                           l7586 4520                           l7844 70A0  
                         l7780 4B4E                           l7772 4AD8                           l7764 4A88  
                         l7756 4A5A                           l7748 4A2C                           l7692 4734  
                         l7676 46B2                           l7684 46F2                           l7668 4660  
                         l7596 453A                           l7588 4524                           l7790 4BAC  
                         l7782 4B66                           l7774 4B12                           l7766 4A94  
                         l7758 4A6A                           l7694 473C                           l7686 46F6  
                         l7678 46B8                           l7598 453C                           l7792 4BC0  
                         l7784 4B7A                           l7776 4B24                           l7768 4ABE  
                         l7696 4756                           l7688 4710                           l7794 4BD8  
                         l7786 4B8E                           l7778 4B3C                           l7698 475A  
                         l7796 4BEC                           l7798 4C04                           STR_1 0E71  
                         u3020 755A                           u3100 4DAE                           u3021 7556  
                         u3101 4DAA                           u3030 7570                           u3110 4DEA  
                         u3031 756C                           u3111 4DE6                           u4000 59DA  
                         u3200 4F04                           u3120 4DF8                           u3040 4D12  
                 _BAUD4CONbits 0EE9                           u4001 59D6                           u3201 4F00  
                         u3121 4DF4                           u3041 4D0E                           u4010 59EC  
                         u3210 4F36                           u3130 4E66                           u3050 4D24  
                         u4011 59E8                           u3211 4F32                           u3131 4E62  
                         u3051 4D20                           u4100 5BA4                           u4020 59FC  
                         u3300 507E                           u3220 4F44                           u3140 4E7E  
                         u3060 4D34                           u4101 5BA0                           u4021 59F8  
                         u3301 507A                           u3221 4F40                           u3141 4E78  
                         u3061 4D30                           u4110 5BC8                           u4030 5A40  
                         u3310 508E                           u3230 4F62                           u3150 4E80  
                         u3070 4D76                           u4111 5BC4                           u4031 5A3C  
                         u3311 508A                           u3231 4F5E                           u3071 4D72  
                         u4200 5CE8                           u4120 5BDE                           u4040 5A52  
                         u3400 5176                           u3320 50A0                           u3240 4F9A  
                         u3160 4EA8                           u3080 4D8C                           u4201 5CE4  
                         u4121 5BDA                           u4041 5A4E                           u3401 5172  
                         u3321 509C                           u3241 4F96                           u3161 4EA4  
                         u3081 4D88                           u4210 5D18                           u4130 5BFC  
                         u4050 5A62                           u3410 5188                           u3330 50B6  
                         u3250 4FE0                           u3170 4EC6                           u3090 4D9E  
                         _T2PR 0FBC                           u4211 5D14                           u4131 5BF8  
                         u4051 5A5E                           u3411 5184                           u3331 50B2  
                         u3251 4FDC                           u3171 4EC2                           u3091 4D9A  
                         u4220 5D46                           u4140 5C1C                           u4060 5AA2  
                         u3420 51A4                           u3340 50CC                           u3260 5016  
                         u3180 4EE6                           u4300 6184                           u3500 529C  
                         u4221 5D42                           u4141 5C18                           u4061 5A9E  
                         u3421 51A0                           u3341 50C8                           u3261 5012  
                         u3181 4EE2                           u4301 6180                           u3501 5298  
                         u4150 5C2E                           u4070 5AE2                           u4230 66BC  
                         u3350 50E0                           u3270 5026                           u3190 4EF4  
                         u4310 61E0                           u3510 5416                           u3430 51D2  
                         u4151 5C2A                           u4071 5ADE                           u4231 66B8  
                         u3351 50DC                           u3271 5022                           u3191 4EF0  
                         u4311 61DC                           u3431 51CE                           u5200 7168  
                         u4160 5C5C                           u4080 5B58                           u4240 66FA  
                         u3360 50FA                           u3280 5052                           u4320 6236  
                         u3600 558A                           u3520 5470                           u3440 51E4  
                         u4400 5FF8                           u5201 7160                           u4161 5C58  
                         u4081 5B54                           u4241 66F6                           u3361 50F6  
                         u3281 504E                           u4321 6232                           u3601 5586  
                         u3521 546C                           u3441 51E0                           u4401 5FF4  
                         u4170 5C72                           u4090 5B7A                           u4250 6718  
                         u3370 5134                           u3290 5062                           u4330 6280  
                         u3610 55C4                           u3530 5490                           u3450 51F4  
                         u4410 6018                           u4171 5C6E                           u4091 5B76  
                         u4251 6714                           u3371 5130                           u3291 505E  
                         u4331 627C                           u3611 55C0                           u3531 548C  
                         u3515 540C                           u3451 51F0                           u4411 6014  
                         u5220 7186                           u4180 5C86                           u4260 6738  
                         u3380 5146                           u4340 629E                           u3540 54A2  
                         u3460 5234                           u4500 5DDE                           u5140 6FD0  
                         u3620 6C3A                           u3700 6EA8                           u4420 604E  
                         u5221 717E                           u4181 5C82                           u4261 6734  
                         u3381 5142                           u4341 629A                           u3541 549E  
                         u3461 5230                           u4501 5DDA                           u5141 6FCC  
                         u3621 6C36                           u3701 6EA4                           u4421 6048  
                         u4190 5CA0                           u4270 6788                           u3390 5156  
                         u4350 62AE                           u3550 54D0                           u3470 5246  
                         u4510 5E36                           u5310 6D24                           u5150 6FF2  
                         u3630 6C54                           u3710 6EC6                           u4430 6050  
                         u4191 5C9C                           u4271 6784                           u3391 5152  
                         u4351 62AA                           u3551 54CC                           u3471 5242  
                         u4511 5E32                           u5311 6D20                           u5151 6FEE  
                         u3631 6C50                           u3711 6EC2                           u5240 71AA  
                         u4280 749A                           u4360 62BC                           u3560 54E6  
                         u3480 5256                           u4520 5E5E                           u5320 6D46  
                         u5160 7034                           u3640 6C7A                           u3720 6EDC  
                         u3800 6E20                           u4440 60B4                           u5400 69C6  
                         u5241 71A2                           u4281 7496                           u4361 62B8  
                         u3561 54E2                           u3481 5252                           u4521 5E5A  
                         u5321 6D42                           u5161 7030                           u3641 6C76  
                         u3721 6ED8                           u3801 6E1C                           u4441 60B0  
                         u5401 69C2                           u5218 716A                           u4370 62F6  
                         u4290 6176                           u3570 54FA                           u3490 528C  
                         u4530 5EB6                           u5330 6D8E                           u5170 704C  
                         u3650 6C98                           u3730 6F00                           u3810 74CA  
                         u4450 60C4                           u5410 6A10                           u4371 62F2  
                         u4291 6172                           u3571 54F6                           u3491 5288  
                         u4531 5EB2                           u5331 6D8A                           u5171 7048  
                         u3651 6C94                           u3731 6EFC                           u3811 74C6  
                         u4451 60C0                           u5411 6A0C                           u3820 73F8  
                         u4380 6304                           u3580 5514                           u4540 5F0E  
                         u3740 70FC                           u5340 6DA6                           u5180 7640  
                         u3660 6CB4                           u4460 60D4                           u5500 6850  
                         u5420 6A28                           u3821 73F0                           u4381 6300  
                         u3581 5510                           u4541 5F0A                           u3741 70F8  
                         u5341 6DA2                           u5181 763C                           u3661 6CB0  
                         u4461 60D0                           u5501 684C                           u5421 6A24  
                         u5238 7188                           u3590 555C                           u3910 5766  
                         u3750 711A                           u5510 64C0                           u3670 6CDA  
                         u4470 60E4                           u4390 5FB4                           u5190 73C4  
                         u5430 68B8                           u5350 6A8E                           u3591 5558  
                         u3911 5762                           u3751 7116                           u5511 64BC  
                         u3671 6CD6                           u4471 60E0                           u4391 5FB0  
                         u5191 73C0                           u5431 68B4                           u5351 6A8A  
                         u3920 579E                           u3840 5626                           u7200 0EEA  
                         u3760 7136                           u5600 6B98                           u5520 64E2  
                         u3680 6E74                           u4480 612C                           u5440 68DA  
                         u5360 6AB0                           u8000 4B24                           u3921 579A  
                         u3905 5726                           u3841 5622                           u7201 0EE6  
                         u3761 7132                           u5601 6B94                           u5521 64DE  
                         u3681 6E70                           u4481 6128                           u5441 68D6  
                         u5361 6AAC                           u8001 4B20                           u5258 71AC  
                         u4490 5D86                           u3930 5814                           u3906 5730  
                         u3850 5654                           u7210 0F1C                           u5610 6BE2  
                         u5530 652C                           u3690 6E8E                           u3770 6DB8  
                         u5450 6924                           u5370 6AFA                           u8010 4B4E  
                         u4555 5F28                           u4491 5D82                           u3931 5810  
                         u3907 5740                           u3851 5650                           u7211 0F18  
                         u5611 6BDE                           u5531 6528                           u3691 6E8A  
                         u3771 6DB4                           u5451 6920                           u5371 6AF6  
                         u8011 4B4A                           u3940 58B0                           u3860 5662  
                         u7300 1116                           u7220 0F54                           u5620 6BFA  
                         u5540 6544                           u3780 6DC8                           u5460 693C  
                         u5380 6B12                           u8020 4B7A                           u3941 58AC  
                         u3861 565E                           u7301 1112                           u7221 0F50  
                         u5621 6BF6                           u5541 6540                           u3781 6DC4  
                         u5461 6938                           u5381 6B0E                           u8021 4B76  
                         u3838 73FA                           u3950 5918                           u3870 56A4  
                         u7310 1182                           u7230 0F76                           u5550 65C6  
                         u5630 751E                           u3790 6DEE                           u5470 67CC  
                         u5390 69A4                           u8030 4BC0                           u3951 5914  
                         u3871 56A0                           u7311 117E                           u7231 0F72  
                         u5551 65C2                           u5631 751A                           u3791 6DEA  
                         u5471 67C8                           u5391 69A0                           u8031 4BBC  
                         u3960 592E                           u3880 56D2                           u7400 1346  
                         u7320 119E                           u7240 0FCC                           u5560 65E8  
                         u5480 67EE                           u8040 4BEC                           u3961 592A  
                         u3881 56CE                           u7401 1342                           u7321 119A  
                         u7241 0FC8                           u5561 65E4                           u5481 67EA  
                         u8041 4BE8                           u3890 56F4                           u7410 139A  
                         u7330 11D6                           u7250 0FE8                           u5570 6632  
                         u5490 6838                           u8050 4C18                           u3891 56F0  
                         u7411 1396                           u7331 11D2                           u7251 0FE4  
                         u5571 662E                           u5491 6834                           u8051 4C14  
                         u8107 45BC                           u7500 1550                           u7420 13B0  
                         u7340 11E4                           u7260 1018                           u3980 6334  
                         u5580 664A                           u8060 4C30                           u7501 154C  
                         u7421 13AC                           u7341 11E0                           u7261 1014  
                         u3981 6330                           u5581 6646                           u8061 4C2C  
                         u8117 466C                           u7510 1582                           u7430 13CC  
                         u7350 121C                           u3990 63FE                           u5590 6B76  
                         u8070 4C9C                           u3975 599A                           u7511 157E  
                         u7431 13C8                           u7351 1218                           u3991 63FA  
                         u5591 6B72                           u8207 69EE                           u8071 4C98  
                         u8127 46C4                           u7520 15A6                           u7440 13EA  
                         u7360 1276                           u8080 4CC4                           u7521 15A2  
                         u7441 13E6                           u7361 1272                           u8217 6A32  
                         u8081 4CBA                           u8137 499A                           u7610 2868  
                         u7530 15B4                           u7450 142E                           u7370 1284  
                         u7290 10DC                           u7611 2864                           u7531 15B0  
                         u7451 142A                           u7371 1280                           u7275 102E  
                         u8307 667E                           u8227 6816                           u8147 49CC  
                         u7620 2884                           u7540 160C                           u7460 1492  
                         u7380 12E8                           u7276 1038                           u7621 2880  
                         u7605 1C68                           u7541 1608                           u7461 148E  
                         u7381 12E4                           u7285 1088                           u7277 1048  
                         u8317 650A                           u8237 685A                           u8157 49E2  
                         u7630 28FE                           u7550 162A                           u7470 14CA  
                         u7390 1338                           u7286 1092                           u7631 28FA  
                         u7551 1626                           u7471 14C6                           u7391 1334  
                         u7295 10D2                           u7287 10A2                           u8327 654E  
                         u8247 6AD8                           u8167 4B9A                           u7640 294A  
                         u7560 1936                           u7480 1520                           u7800 34DE  
                         u7705 2B10                           u7641 2946                           u7561 1932  
                         u7481 151C                           u7801 34DA                           u8337 657A  
                         u8257 6B1C                           u8177 4C40                           u7730 2C40  
                         u7706 2B1A                           u7650 297C                           u7490 1536  
                         u7810 44B2                           u8098 4CC8                           u7731 2C3C  
                         u7715 2B68                           u7707 2B2A                           u7651 2978  
                         u7491 1532                           u7811 44AE                           u8347 6BC0  
                         u8267 6902                           u8187 4C82                           u7716 2B72  
                         u7660 29D2                           u7580 1A58                           u7820 4500  
                         u7900 47EA                           u7725 2C06                           u7717 2B82  
                         u7661 29CE                           u7581 1A54                           u7821 44FC  
                         u8357 6C04                           u8277 6946                           u8197 4CE4  
                         u7901 47E6                           u7726 2C10                           u7590 1A80  
                         u7910 483E                           u7830 45FE                           u7727 2C20  
                         u7591 1A7C                           u7575 19A2                           u8367 7016  
                         u8287 6610                           u7911 483A                           u7831 45FA  
                         u7760 3294                           u7680 2A8C                           u7576 19AC  
                         u7920 4892                           u7840 4640                           u7761 3290  
                         u7745 3214                           u7681 2A88                           u7577 19BC  
                         u8377 6D6E                           u8297 6654                           u7921 488E  
                         u7841 463C                           u7770 32EC                           u7930 48E6  
                         u7850 469E                           u7771 32E8                           u7755 325A  
                         u7675 2A18                           u8387 3322                           u7931 48E2  
                         u7851 469A                           u7756 3264                           u7676 2A22  
                         u7780 33E6                           u7940 4926                           u7860 46EA  
                         u8397 7310                           u7757 3274                           u7677 2A32  
                         u7781 33E2                           u7941 4922                           u7861 46E6  
                         u7790 3462                           u7950 4966                           u7870 4724  
                         u7695 2AA6                           u7791 345E                           u7951 4962  
                         u7871 4720                           u7696 2AB0                           u7960 4A10  
                         u7880 476C                           u7697 2AC0                           u7961 4A0C  
                         u7881 4768                           u7970 4A3C                           u7890 47AA  
                         u7971 4A38                           u7891 47A6                           u7980 4A6A  
                         u7981 4A66                           u7990 4ABE                           u7991 4ABA  
                  main@red_val 0200                           abs@a 0008                           _dbuf 01B8  
                         _cp_h 0E6D                           _cp_l 0E69                           _dp_h 0E09  
                         _dp_l 0E01                           _main 4510                           _prec 00EE  
                         _powf 0E82                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         btemp 005D                           _stop 6FB4                    main@timings 0278  
   __end_of_reverse_after_read 658A                           prodh 0FF4                           prodl 0FF3  
                         start 0024               __end_of_ADC_init 762E                ___fldiv@new_exp 003C  
       __end_of_color_read_Red 720C                __end_of_HighISR 0024                   ___param_bank 0000  
    invert_action@input_action 0004                 turn_left_90@mL 0019                 turn_left_90@mR 001B  
                        ??_abs 000A                   main@blue_val 0228                  ?_inch_forward 0019  
              __end_of___fladd 51B8                          ?_main 0001                          _ADPCH 0F5F  
              __end_of___fldiv 5D5A                __end_of___awdiv 6CEC                __end_of___flneg 74BC  
              __end_of___awmod 6F12                __end_of___flmul 55E2                          ?_powf 0060  
              __end_of___flsub 738C                          ?_stop 0015                ___awdiv@divisor 0004  
              __end_of___lwdiv 7156                          i2l500 765C                          i2l451 0020  
                        i2l497 7648                ___awdiv@counter 0006                   vfpfcnvrt@fmt 000D  
                        _TMR0H 0FD4                          _TMR0L 0FD3        __end_of_sendCharSerial4 7646  
   __end_of_I2C_2_Master_Start 769E     __end_of_I2C_2_Master_Write 766A                          _lg2_h 0E2D  
                        _lg2_l 0E29                          _flags 0058  __end_of_color_click_toggleLED 71BC  
                        _errno 00EA                          _ivln2 0E1D                          _fputc 6DA8  
              __end_of_ivln2_h 0E69                __end_of_ivln2_l 0E1D                          _two24 0E61  
              __end_of_scalbnf 5F8E                          _width 00EC                          _putch 769E  
                        main@i 02AB                          _sqrtf 55E2                          tablat 0FF5  
                        powf@i 0128                          powf@j 01A8                          powf@k 01A4  
                        powf@n 0188                          powf@r 0150                          powf@s 0158  
                        powf@t 01B0                          powf@u 017C                          powf@v 0180  
                        powf@w 0144                          powf@x 0060                          powf@y 0064  
                        powf@z 01B4                          ttemp5 005E                          ttemp6 0061  
                        ttemp7 0065                          status 0FD8                          wtemp8 005E  
              __end_of_sprintf 744C        __end_of_color_read_Blue 72AC          _I2C_2_Master_RepStart 7680  
              ?_color_read_Red 0006                __initialization 744C                   __end_of_cp_h 0E71  
                 __end_of_cp_l 0E6D                   __end_of_dp_h 0E11                   __end_of_dp_l 0E09  
                 __end_of_main 4CF8                   __end_of_powf 3302                   __end_of_stop 704E  
              turn_left_135@mL 0019                turn_left_135@mR 001B               main@action_to_do 02C0  
               ??_inch_forward 001D                  main@clear_val 023C                _get16bitTMR0val 75F6  
                       ??_main 00D1                         ??_powf 0068                         ??_stop 0019  
                __activetblptr 0003              decide_action@blue 00A5                   ?_setMotorPWM 000F  
                       ?_fputc 0002                         _ADRESH 0F64                         _CCPR1H 0FAA  
                       _CCPR2H 0FA6                         _CCPR3H 0F25                         _CCPR4H 0F21  
             ___awdiv@dividend 0002                         ?_putch 0001                         ?_sqrtf 0012  
   __end_of_reverse_one_square 668E                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RE4PPS 0E76                         _RD6PPS 0E70                         i2l5510 7658  
                main@green_val 0214                         _RG6PPS 0E88                         i2l5508 7648  
                       i2l5760 001A                         i2l5756 000A                         i2l5758 0018  
             ??_turn_right_135 001D                  vfpfcnvrt@done 0010                      ??_HighISR 0002  
     __end_of_color_click_init 7346                         _RX4PPS 0E15                         _TX4REG 0EE4  
             __end_of___xxtofl 6318                   ?_resetTimer0 0001                   _turn_left_90 6A54  
                ??_Timer0_init 0002                   _CCPTMRS0bits 0FAD                   vfprintf@cfmt 001A  
                       ___flge 668E                      ??___fladd 000A                         ___wmul 7572  
                    ??___fldiv 0033                      ??___awdiv 0006                      ??___flneg 0006  
                    ??___awmod 0006                      ??___flmul 001A                      ??___flsub 004C  
                    ??___lwdiv 000C                         clear_0 7452                         clear_1 745E  
                       clear_2 746A               ___awdiv@quotient 0008                ___awmod@divisor 0004  
                       isa$std 0001                ___awmod@counter 0006                         fputc@c 0002  
                    ??_scalbnf 0031                   __mediumconst 0000                         powf@s2 0190  
                       powf@t1 018C                         powf@t2 011C                         tblptrh 0FF7  
                       tblptrl 0FF6                         powf@y1 012C                         tblptru 0FF8  
                       powf@ax 0178                         powf@is 0198                         powf@hx 0168  
                    ?_ADC_init 0001                         powf@hy 0184                         powf@ix 01AC  
                       powf@iy 0194               ?_sendCharSerial4 0001                         powf@sn 0164  
                       putch@c 0001               __end_of_vfprintf 73CE                         stop@mL 0015  
                       stop@mR 0017                         sqrtf@i 001F                         sqrtf@m 002B  
                       sqrtf@q 0023                         sqrtf@r 002F                         sqrtf@s 001B  
                       sqrtf@t 0027              ??_initDCmotorsPWM 0004                         sqrtf@x 0012  
                    ??_sprintf 0020                     ___flge@ff1 004C                     ___flge@ff2 0050  
                 ___xxtofl@arg 0017                   ___xxtofl@exp 0016                   ___xxtofl@val 000D  
                   __accesstop 0060        __end_of__initialization 747A       __end_of_color_read_Clear 72FC  
                   ___flneg@f1 0002       __end_of_color_read_Green 725C         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 0001               ?_color_read_Blue 0006                _Interrupts_init 766A  
               __pcstackCOMRAM 0001        __end_of_get16bitTMR0val 7614                  __end_of_lg2_h 0E31  
                __end_of_lg2_l 0E2D       get16bitTMR0val@timer_val 0006                  __end_of_ivln2 0E21  
                __end_of_fputc 6E62                  __end_of_two24 0E65                  __end_of_putch 76A0  
                __end_of_sqrtf 59C0                     __end_of_L1 0E61                     __end_of_L2 0E5D  
                   __end_of_L3 0E59                     __end_of_L4 0E55                     __end_of_L5 0E51  
                   __end_of_L6 0E4D                     __end_of_P1 0E49                     __end_of_P2 0E45  
                   __end_of_P3 0E41                     __end_of_P4 0E3D                     __end_of_P5 0E39  
          __end_of_Timer0_init 75D8                     __end_of_bp 0E19                     __end_of_cp 0E25  
                   ??_ADC_init 0002                turn_right_90@mL 0019                turn_right_90@mR 001B  
                      ??_fputc 0005                        ??_putch 0002                        ??_sqrtf 0016  
                   __pbssBANK0 00D6                     __pbssBANK1 01B8                     __pbssBANK3 0300  
         __end_of_inch_forward 6C28              _color_writetoaddr 7598           reverse_one_square@mL 0019  
         reverse_one_square@mR 001B                   _T2CLKCONbits 0FBF             decide_action@green 00A1  
                      ?___flge 004C             decide_action@red_r 00A9             ?_color_writetoaddr 0004  
                      ?___wmul 0002             decide_action@total 0098           decide_action@green_r 00AD  
           _reverse_after_read 6484            ??_color_writetoaddr 0005                      ?___xxtofl 000D  
                      _SP4BRGH 0EE6                        _SP4BRGL 0EE5            ?_reverse_after_read 0019  
         reverse_after_read@mL 0019           reverse_after_read@mR 001B                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5        __end_of_Interrupts_init 7676         color_writetoaddr@value 0004  
             ??_color_read_Red 0008                  _turn_left_135 687E                        _HighISR 0008  
               main@pclear_val 02A0      __end_of_color_writetoaddr 75B8                      _ADREFbits 0F58  
           _I2C_2_Master_Start 7694                     _initUSART4 75D8             _I2C_2_Master_Write 765E  
               decide_action@i 009C                        __Hparam 0000           ??_reverse_after_read 001D  
                      __Lparam 0000              color_read_Red@tmp 000B                    _Timer0_init 75B8  
      sendStringSerial4@string 0003                  _turn_right_90 696A               ?_get16bitTMR0val 0002  
                      ___fladd 4CF8                        ___fldiv 59C0                        ___awdiv 6C28  
                      ___flneg 7484                        ___awmod 6E62                        ___flmul 51B8  
                      ___flsub 7346            ?_I2C_2_Master_Start 0001                        ___lwdiv 70E2  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 0017                   __psmallconst 0E00  
                      __pcinit 744C                        __ramtop 0E00                        __ptext0 4510  
                      __ptext1 696A                        __ptext2 6792                        __ptext3 6A54  
                      __ptext4 687E                        __ptext5 7410                        __ptext6 738C  
                      __ptext7 5F8E                        __ptext8 6DA8                        __ptext9 769E  
                    _T2CONbits 0FBD                        _ivln2_h 0E65                        _ivln2_l 0E19  
                   ??___xxtofl 0011                        _scalbnf 5D5A               ___awmod@dividend 0002  
                    _T2HLTbits 0FBE                  _RxBufWriteCnt 005C                        main@pmL 02C2  
                      main@pmR 02C4                        _sprintf 7410                        main@lum 02A8  
         ??_I2C_2_Master_Start 0003           ??_I2C_2_Master_Write 0003           end_of_initialization 747A  
   invert_action@output_action 0005                 ?_turn_left_135 0019          _color_click_toggleLED 7156  
                      fputc@fp 0004              ?_color_click_init 0001             ??_color_click_init 0006  
            main@lum_threshold 02A2                  _decide_action 3302                 ?_turn_right_90 0019  
                      powf@p_h 01A0                        powf@p_l 016C                        powf@s_h 0174  
                      powf@t_h 0170                        powf@s_l 0130                        powf@t_l 0134  
                      powf@z_h 0120                        powf@z_l 0124              __end_of_vfpfcnvrt 6164  
           _reverse_one_square 658A                        postdec2 0FDD                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE               vfpfcnvrt@convarg 0012  
                   ??_vfprintf 001A                        sqrtf@ix 0033                _initDCmotorsPWM 6F12  
                    _PORTBbits 0F8A                  _invert_action 704E            ?_reverse_one_square 0019  
           setMotorPWM@negDuty 0014                    ___fladd@grs 0011                  ___xxtofl@sign 0015  
                    _TRISAbits 0F81             setMotorPWM@posDuty 0013                      _TRISCbits 0F83  
                    _TRISDbits 0F84                      _TRISEbits 0F85                      _TRISFbits 0F86  
                    _TRISGbits 0F87                      _TRISHbits 0F88                    ___fldiv@grs 003E  
                  ___fldiv@rem 0037               fullSpeedAhead@mL 0015               fullSpeedAhead@mR 0017  
     color_writetoaddr@address 0005        ??_I2C_2_Master_RepStart 0003               ?_Interrupts_init 0001  
                  ___flmul@grs 001F           ??_reverse_one_square 001D                    _CCP1CONbits 0FAB  
            ?_color_read_Clear 0006                   _EUSART4RXbuf 00D6                   _EUSART4TXbuf 0300  
                  _CCP2CONbits 0FA7              ?_color_read_Green 0006                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0002  
               ?_decide_action 0001                     main@motorL 02AE                     main@motorR 02B7  
           ??_color_read_Clear 0008             ??_color_read_Green 0008                 __end_of___flge 6792  
               _fullSpeedAhead 6CEC                    vfpfcnvrt@ap 000E                    vfpfcnvrt@cp 0011  
                  vfpfcnvrt@fp 000C                 __end_of___wmul 7598                 ?_invert_action 0001  
                 _inch_forward 6B3E            color_read_Clear@tmp 000B            start_initialization 744C  
                  __end_of_lg2 0E35                    __end_of_abs 74F0                    __end_of_ovt 0E29  
                _TxBufWriteCnt 005A                ??_turn_left_135 001D         ?_color_click_toggleLED 0001  
             decide_action@red 009D                ??_turn_right_90 001D            color_read_Green@tmp 000B  
      __end_of_initDCmotorsPWM 6FB4                    vfprintf@fmt 0018         __end_of_fullSpeedAhead 6DA8  
                     ??___flge 0054               turn_right_135@mL 0019               turn_right_135@mR 001B  
                     ??___wmul 0006                      ___fladd@a 0006                      ___fladd@b 0002  
                    ___fldiv@a 002F                      ___fldiv@b 002B                      ___flmul@a 0016  
                    ___flmul@b 0012                    __pbssCOMRAM 0058                      ___flsub@a 0048  
                    ___flsub@b 0044                  __pcstackBANK0 0060                  __pcstackBANK1 0100  
                __pcstackBANK2 0200                       ?_HighISR 0001                ??_decide_action 0071  
            i2_sendCharSerial4 7646             ?i2_sendCharSerial4 0001               ___lwdiv@dividend 0008  
                 ?_Timer0_init 0001            decide_action@action 0097                ?_fullSpeedAhead 0015  
                    __pintcode 0008            decide_action@blue_r 00B1                       ?___fladd 0002  
                     ?___fldiv 002B                       ?___awdiv 0002                       ?___flneg 0002  
                     ?___awmod 0002                       ?___flmul 0012                       ?___flsub 0044  
              ??_invert_action 0002                       ?___lwdiv 0008            ??i2_sendCharSerial4 0001  
         I2C_2_Master_Read@ack 0004           I2C_2_Master_Read@tmp 0005                    __smallconst 0E00  
            _I2C_2_Master_Idle 754A              _I2C_2_Master_Init 7520                       ?_scalbnf 002B  
            _I2C_2_Master_Read 73CE              _I2C_2_Master_Stop 768A          decide_action@rgb_comp 0077  
                 _RxBufReadCnt 005B                       _ADC_init 7614             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0011  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000C       initDCmotorsPWM@PWMperiod 0002  
                     ?_sprintf 001B      __end_ofi2_sendCharSerial4 765E                      _powf$3060 014C  
                    _powf$3061 019C                      _powf$3062 0138                      _powf$3070 0110  
                    _powf$3071 0114                      _powf$3063 0100                      _powf$3072 0118  
                    _powf$3064 0104                      _powf$3065 0160                      _powf$3058 0148  
                    _powf$3066 013C                      _powf$3059 015C                      _powf$3067 0140  
                    _powf$3068 0108                      _powf$3069 010C              _sendStringSerial4 74F0  
          ??_I2C_2_Master_Idle 0002            ??_I2C_2_Master_Init 0002            ??_I2C_2_Master_Read 0003  
               ___wmul@product 0006                       _LATAbits 0F79                  ??_resetTimer0 0002  
          ??_I2C_2_Master_Stop 0003                       _LATCbits 0F7B                       _LATEbits 0F7D  
                     _LATGbits 0F7F                       _LATHbits 0F80                  ?_turn_left_90 0019  
                     _PIE0bits 0E29                       _PIE2bits 0E2B             ?_sendStringSerial4 0003  
                     _PIE4bits 0E2D                       _PIR4bits 0E37                       i2u565_40 7658  
                     i2u565_41 7654                       i2u593_40 0018                       i2u593_41 0014  
             ?_initDCmotorsPWM 0002              ??_sendCharSerial4 0002                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0005                       _SSP2STAT 0ED8                     powf@yisint 0154  
                    _vfpfcnvrt 5F8E                     _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 7572  
    __end_of_I2C_2_Master_Init 754A      __end_of_I2C_2_Master_Read 7410              ___wmul@multiplier 0002  
    __end_of_I2C_2_Master_Stop 7694                   setMotorPWM@m 000F    I2C_2_Master_Write@data_byte 0003  
        main@actions_completed 02AC              ??_color_read_Blue 0008                   _TxBufReadCnt 0059  
                   vfpfcnvrt@c 0016      __end_of_sendStringSerial4 7520  __end_of_I2C_2_Master_RepStart 768A  
           color_read_Blue@tmp 000B                 ??_turn_left_90 001D            __end_of_setMotorPWM 6484  
                 ??_initUSART4 0002                       __Hrparam 0000                     vfprintf@ap 0019  
                     __Lrparam 0000                     vfprintf@fp 0017                 _turn_right_135 6792  
          __end_of_resetTimer0 7680                     ?_vfpfcnvrt 000C                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4             _decide_action$3050 0073             _decide_action$3051 00B5  
           _decide_action$3052 00B9             _decide_action$3053 00BD             _decide_action$3054 00C1  
           _decide_action$3055 00C5             _decide_action$3056 00C9             _decide_action$3057 00CD  
                   sprintf@fmt 001D                       ___xxtofl 6164                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6        ??_color_click_toggleLED 0002                ___lwdiv@divisor 000A  
           __end_of_initUSART4 75F6                ___lwdiv@counter 000E                       __ptext10 74BC  
                     __ptext11 6E62                       __ptext20 6F12                       __ptext12 6C28  
                     __ptext21 6B3E                       __ptext13 74F0                       __ptext30 55E2  
                     __ptext22 6FB4                       __ptext14 762E                       __ptext31 5D5A  
                     __ptext23 75F6                       __ptext15 658A                       __ptext40 720C  
                     __ptext32 51B8                       __ptext24 6CEC                       __ptext16 6484  
                     __ptext41 725C                       __ptext33 6164                       __ptext25 6318  
                     __ptext17 7676                       __ptext50 7694                       __ptext42 72AC  
                     __ptext34 7346                       __ptext26 7572                       __ptext18 704E  
                     __ptext51 754A                       __ptext43 7680                       __ptext35 4CF8  
                     __ptext27 70E2                       __ptext19 75D8                       __ptext52 7520  
                     __ptext44 73CE                       __ptext36 7484                       __ptext28 3302  
                     __ptext53 75B8                       __ptext45 7156                       __ptext37 668E  
                     __ptext29 0E82                       __ptext54 766A                       __ptext46 72FC  
                     __ptext38 59C0                       __ptext55 7614                       __ptext47 7598  
                     __ptext39 71BC                       __ptext48 765E                       __ptext57 7646  
                     __ptext49 768A                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
           main@lost_detection 02A4         __end_of_turn_right_135 687E                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       int$flags 005D                       _vfprintf 738C  
                   _INTCONbits 0FF2              main@going_forward 02AA                    _setMotorPWM 6318  
            ??_get16bitTMR0val 0004                       scalbnf@n 002F                       scalbnf@u 0035  
                     scalbnf@x 002B                       scalbnf@y 0039                       intlevel2 0000  
        __end_of_turn_left_135 696A                      sprintf@ap 0020               ??_fullSpeedAhead 0019  
                  _resetTimer0 7676                ?_turn_right_135 0019          __end_of_turn_right_90 6A54  
                  ??_vfpfcnvrt 000F               _color_click_init 72FC                       sprintf@f 0021  
                     sprintf@s 001B           __end_of_turn_left_90 6B3E                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C              main@measured_time 02A6                 inch_forward@mL 0019  
               inch_forward@mR 001B                  ___fladd@signs 000E                     _TX4STAbits 0EE8  
              _sendCharSerial4 762E                   ___fladd@aexp 000F                   ___fladd@bexp 0010  
  i2sendCharSerial4@charToSend 0001          __end_of_decide_action 4510  
