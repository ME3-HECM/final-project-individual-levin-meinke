

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 12 16:12:16 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Generated 21/07/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F67K40 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     _TX4REG	set	3812
    76   000000                     _RC4STAbits	set	3815
    77   000000                     _SP4BRGH	set	3814
    78   000000                     _LATHbits	set	3968
    79   000000                     _TRISAbits	set	3969
    80   000000                     _TRISGbits	set	3975
    81   000000                     _SSP2CON2bits	set	3802
    82   000000                     _RX4PPS	set	3605
    83   000000                     _SSP2CLKPPS	set	3612
    84   000000                     _SSP2DATPPS	set	3613
    85   000000                     _ANSELDbits	set	3751
    86   000000                     _SSP2ADD	set	3798
    87   000000                     _SSP2CON1bits	set	3801
    88   000000                     _LATAbits	set	3961
    89   000000                     _LATGbits	set	3967
    90   000000                     _LATCbits	set	3963
    91   000000                     _LATEbits	set	3965
    92   000000                     _T2PR	set	4028
    93   000000                     _T2CONbits	set	4029
    94   000000                     _CCPR2H	set	4006
    95   000000                     _CCPR1H	set	4010
    96   000000                     _TRISCbits	set	3971
    97   000000                     _TRISDbits	set	3972
    98   000000                     _TRISEbits	set	3973
    99   000000                     _RC4REG	set	3811
   100   000000                     _SP4BRGL	set	3813
   101   000000                     _TX4STAbits	set	3816
   102   000000                     _BAUD4CONbits	set	3817
   103   000000                     _SSP2CON2	set	3802
   104   000000                     _CCPR4H	set	3873
   105   000000                     _CCPR3H	set	3877
   106   000000                     _SSP2STAT	set	3800
   107   000000                     _SSP2BUF	set	3797
   108   000000                     _PIE0bits	set	3625
   109   000000                     _PIE2bits	set	3627
   110   000000                     _RC7PPS	set	3689
   111   000000                     _RD5PPS	set	3695
   112   000000                     _RE2PPS	set	3700
   113   000000                     _RD6PPS	set	3696
   114   000000                     _RE4PPS	set	3702
   115   000000                     _RG6PPS	set	3720
   116   000000                     _ANSELAbits	set	3730
   117   000000                     _TMR0L	set	4051
   118   000000                     _TMR0H	set	4052
   119   000000                     _T0CON0bits	set	4053
   120   000000                     _T0CON1bits	set	4054
   121   000000                     _T2CLKCONbits	set	4031
   122   000000                     _T2HLTbits	set	4030
   123   000000                     _CCP1CONbits	set	4011
   124   000000                     _CCPTMRS0bits	set	4013
   125   000000                     _CCP2CONbits	set	4007
   126   000000                     _ADREFbits	set	3928
   127   000000                     _CCP3CONbits	set	3878
   128   000000                     _CCP4CONbits	set	3874
   129   000000                     _INTCONbits	set	4082
   130   000000                     _PIE4bits	set	3629
   131   000000                     _PIR0bits	set	3635
   132   000000                     _PIR2bits	set	3637
   133   000000                     _PIR4bits	set	3639
   134   000000                     _RC0PPS	set	3682
   135   000000                     _ADPCH	set	3935
   136   000000                     _ADRESH	set	3940
   137   000000                     _ADCON0bits	set	3936
   138                           
   139                           	psect	smallconst
   140   000E00                     __psmallconst:
   141                           	callstack 0
   142   000E00  00                 	db	0
   143   000E01                     STR_1:
   144                           
   145                           ; BSR set to: 14
   146   000E01  72                 	db	114	;'r'
   147   000E02  65                 	db	101	;'e'
   148   000E03  64                 	db	100	;'d'
   149   000E04  20                 	db	32
   150   000E05  3D                 	db	61	;'='
   151   000E06  20                 	db	32
   152   000E07  25                 	db	37
   153   000E08  64                 	db	100	;'d'
   154   000E09  20                 	db	32
   155   000E0A  0D                 	db	13
   156   000E0B  0A                 	db	10
   157   000E0C  00                 	db	0
   158   000E0D  00                 	db	0	; dummy byte at the end
   159   000000                     
   160                           ; #config settings
   161                           
   162                           	psect	cinit
   163   0014FC                     __pcinit:
   164                           	callstack 0
   165   0014FC                     start_initialization:
   166                           	callstack 0
   167   0014FC                     __initialization:
   168                           	callstack 0
   169                           
   170                           ; Clear objects allocated to BANK0 (112 bytes)
   171   0014FC  EE00  F060         	lfsr	0,__pbssBANK0
   172   001500  0E70               	movlw	112
   173   001502                     clear_0:
   174   001502  6AEE               	clrf	postinc0,c
   175   001504  06E8               	decf	wreg,f,c
   176   001506  E1FD               	bnz	clear_0
   177                           
   178                           ; Clear objects allocated to COMRAM (9 bytes)
   179   001508  EE00  F055         	lfsr	0,__pbssCOMRAM
   180   00150C  0E09               	movlw	9
   181   00150E                     clear_1:
   182   00150E  6AEE               	clrf	postinc0,c
   183   001510  06E8               	decf	wreg,f,c
   184   001512  E1FD               	bnz	clear_1
   185   001514                     end_of_initialization:
   186                           	callstack 0
   187   001514                     __end_of__initialization:
   188                           	callstack 0
   189   001514  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   190   001516  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   191   001518  0E00               	movlw	low (__Lsmallconst shr (0+16))
   192   00151A  6EF8               	movwf	tblptru,c
   193   00151C  0E0E               	movlw	high __Lsmallconst
   194   00151E  6EF7               	movwf	tblptrh,c
   195   001520  0100               	movlb	0
   196   001522  EF95  F008         	goto	_main	;jump to C main() function
   197                           
   198                           	psect	bssCOMRAM
   199   000055                     __pbssCOMRAM:
   200                           	callstack 0
   201   000055                     _width:
   202                           	callstack 0
   203   000055                     	ds	2
   204   000057                     _prec:
   205                           	callstack 0
   206   000057                     	ds	2
   207   000059                     _flags:
   208                           	callstack 0
   209   000059                     	ds	1
   210   00005A                     _TxBufReadCnt:
   211                           	callstack 0
   212   00005A                     	ds	1
   213   00005B                     _TxBufWriteCnt:
   214                           	callstack 0
   215   00005B                     	ds	1
   216   00005C                     _RxBufReadCnt:
   217                           	callstack 0
   218   00005C                     	ds	1
   219   00005D                     _RxBufWriteCnt:
   220                           	callstack 0
   221   00005D                     	ds	1
   222                           
   223                           	psect	bssBANK0
   224   000060                     __pbssBANK0:
   225                           	callstack 0
   226   000060                     _EUSART4TXbuf:
   227                           	callstack 0
   228   000060                     	ds	60
   229   00009C                     _dbuf:
   230                           	callstack 0
   231   00009C                     	ds	32
   232   0000BC                     _EUSART4RXbuf:
   233                           	callstack 0
   234   0000BC                     	ds	20
   235                           
   236                           	psect	cstackCOMRAM
   237   000001                     __pcstackCOMRAM:
   238                           	callstack 0
   239   000001                     ??_HighISR:
   240   000001                     
   241                           ; 1 bytes @ 0x0
   242   000001                     	ds	1
   243   000002                     ??_color_click_toggleLED:
   244   000002                     ??_I2C_2_Master_Idle:
   245   000002                     ?___awdiv:
   246                           	callstack 0
   247   000002                     ?___awmod:
   248                           	callstack 0
   249   000002                     sendCharSerial4@charToSend:
   250                           	callstack 0
   251   000002                     initDCmotorsPWM@PWMperiod:
   252                           	callstack 0
   253   000002                     ___awdiv@dividend:
   254                           	callstack 0
   255   000002                     ___awmod@dividend:
   256                           	callstack 0
   257   000002                     fputc@c:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x1
   261   000002                     	ds	1
   262   000003                     ??_I2C_2_Master_Read:
   263   000003                     I2C_2_Master_Write@data_byte:
   264                           	callstack 0
   265   000003                     sendStringSerial4@string:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0x2
   269   000003                     	ds	1
   270   000004                     color_writetoaddr@value:
   271                           	callstack 0
   272   000004                     I2C_2_Master_Read@ack:
   273                           	callstack 0
   274   000004                     fputc@fp:
   275                           	callstack 0
   276   000004                     ___awdiv@divisor:
   277                           	callstack 0
   278   000004                     ___awmod@divisor:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x3
   282   000004                     	ds	1
   283   000005                     ??_fputc:
   284   000005                     color_writetoaddr@address:
   285                           	callstack 0
   286   000005                     I2C_2_Master_Read@tmp:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x4
   290   000005                     	ds	1
   291   000006                     ??_color_click_init:
   292   000006                     ?_color_read_Red:
   293                           	callstack 0
   294   000006                     ___awdiv@counter:
   295                           	callstack 0
   296   000006                     ___awmod@counter:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0x5
   300   000006                     	ds	1
   301   000007                     ___awdiv@sign:
   302                           	callstack 0
   303   000007                     ___awmod@sign:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x6
   307   000007                     	ds	1
   308   000008                     ??_color_read_Red:
   309   000008                     ?_abs:
   310                           	callstack 0
   311   000008                     ___awdiv@quotient:
   312                           	callstack 0
   313   000008                     abs@a:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x7
   317   000008                     	ds	2
   318   00000A                     ??_abs:
   319                           
   320                           ; 1 bytes @ 0x9
   321   00000A                     	ds	1
   322   00000B                     color_read_Red@tmp:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0xA
   326   00000B                     	ds	1
   327   00000C                     vfpfcnvrt@fp:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0xB
   331   00000C                     	ds	1
   332   00000D                     vfpfcnvrt@fmt:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0xC
   336   00000D                     	ds	1
   337   00000E                     vfpfcnvrt@ap:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0xD
   341   00000E                     	ds	1
   342   00000F                     ??_vfpfcnvrt:
   343                           
   344                           ; 1 bytes @ 0xE
   345   00000F                     	ds	1
   346   000010                     vfpfcnvrt@done:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0xF
   350   000010                     	ds	1
   351   000011                     vfpfcnvrt@cp:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x10
   355   000011                     	ds	1
   356   000012                     vfpfcnvrt@convarg:
   357                           	callstack 0
   358                           
   359                           ; 4 bytes @ 0x11
   360   000012                     	ds	4
   361   000016                     vfpfcnvrt@c:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x15
   365   000016                     	ds	1
   366   000017                     ?_vfprintf:
   367                           	callstack 0
   368   000017                     vfprintf@fp:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x16
   372   000017                     	ds	1
   373   000018                     vfprintf@fmt:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x17
   377   000018                     	ds	1
   378   000019                     vfprintf@ap:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x18
   382   000019                     	ds	1
   383   00001A                     vfprintf@cfmt:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x19
   387   00001A                     	ds	1
   388   00001B                     ?_sprintf:
   389                           	callstack 0
   390   00001B                     sprintf@s:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x1A
   394   00001B                     	ds	1
   395   00001C                     sprintf@fmt:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x1B
   399   00001C                     	ds	3
   400   00001F                     sprintf@ap:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x1E
   404   00001F                     	ds	1
   405   000020                     sprintf@f:
   406                           	callstack 0
   407                           
   408                           ; 12 bytes @ 0x1F
   409   000020                     	ds	12
   410   00002C                     ??_main:
   411                           
   412                           ; 1 bytes @ 0x2B
   413   00002C                     	ds	2
   414   00002E                     main@red_val:
   415                           	callstack 0
   416                           
   417                           ; 20 bytes @ 0x2D
   418   00002E                     	ds	20
   419   000042                     main@pred_val:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x41
   423   000042                     	ds	1
   424   000043                     main@motorL:
   425                           	callstack 0
   426                           
   427                           ; 9 bytes @ 0x42
   428   000043                     	ds	9
   429   00004C                     main@motorR:
   430                           	callstack 0
   431                           
   432                           ; 9 bytes @ 0x4B
   433   00004C                     	ds	9
   434                           
   435 ;;
   436 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   437 ;;
   438 ;; *************** function _main *****************
   439 ;; Defined at:
   440 ;;		line 21 in file "main.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;  red_val        20   45[COMRAM] unsigned char [20]
   445 ;;  motorR          9   75[COMRAM] struct DC_motor
   446 ;;  motorL          9   66[COMRAM] struct DC_motor
   447 ;;  PWMcycle        2    0        unsigned int 
   448 ;;  pred_val        1   65[COMRAM] PTR unsigned char 
   449 ;;		 -> main@red_val(20), 
   450 ;;  pmR             1    0        PTR unsigned char 
   451 ;;		 -> main@motorR(9), 
   452 ;;  pmL             1    0        PTR unsigned char 
   453 ;;		 -> main@motorL(9), 
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   464 ;;      Locals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   465 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   466 ;;      Totals:        41       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   467 ;;Total ram usage:       41 bytes
   468 ;; Hardware stack levels required when called: 6
   469 ;; This function calls:
   470 ;;		_I2C_2_Master_Init
   471 ;;		_Timer0_init
   472 ;;		_color_click_init
   473 ;;		_color_click_toggleLED
   474 ;;		_color_read_Red
   475 ;;		_initDCmotorsPWM
   476 ;;		_initUSART4
   477 ;;		_sendStringSerial4
   478 ;;		_sprintf
   479 ;; This function is called by:
   480 ;;		Startup code after reset
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text0
   485   00112A                     __ptext0:
   486                           	callstack 0
   487   00112A                     _main:
   488                           	callstack 25
   489   00112A                     
   490                           ;main.c: 23:     Timer0_init();
   491   00112A  ECD1  F00A         	call	_Timer0_init	;wreg free
   492                           
   493                           ;main.c: 24:     I2C_2_Master_Init();
   494   00112E  ECA8  F00A         	call	_I2C_2_Master_Init	;wreg free
   495   001132                     
   496                           ;main.c: 25:     color_click_init();
   497   001132  EC0D  F00A         	call	_color_click_init	;wreg free
   498   001136                     
   499                           ;main.c: 26:     initDCmotorsPWM(99);
   500   001136  0E00               	movlw	0
   501   001138  6E03               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   502   00113A  0E63               	movlw	99
   503   00113C  6E02               	movwf	initDCmotorsPWM@PWMperiod^0,c
   504   00113E  EC40  F009         	call	_initDCmotorsPWM	;wreg free
   505   001142                     
   506                           ;main.c: 27:     initUSART4();
   507   001142  ECF3  F00A         	call	_initUSART4	;wreg free
   508   001146                     
   509                           ;main.c: 30:     color_click_toggleLED();
   510   001146  EC91  F009         	call	_color_click_toggleLED	;wreg free
   511   00114A                     
   512                           ;main.c: 38:     motorL.power=0;
   513   00114A  0E00               	movlw	0
   514   00114C  6E43               	movwf	main@motorL^0,c
   515   00114E                     
   516                           ;main.c: 39:     motorL.direction=1;
   517   00114E  0E01               	movlw	1
   518   001150  6E44               	movwf	(main@motorL+1)^0,c
   519   001152                     
   520                           ;main.c: 40:     motorL.brakemode=1;
   521   001152  0E01               	movlw	1
   522   001154  6E45               	movwf	(main@motorL+2)^0,c
   523   001156                     
   524                           ;main.c: 41:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   525   001156  0EAA               	movlw	170
   526   001158  6E48               	movwf	(main@motorL+5)^0,c
   527   00115A  0E0F               	movlw	15
   528   00115C  6E49               	movwf	(main@motorL+6)^0,c
   529   00115E                     
   530                           ;main.c: 42:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   531   00115E  0EA6               	movlw	166
   532   001160  6E4A               	movwf	(main@motorL+7)^0,c
   533   001162  0E0F               	movlw	15
   534   001164  6E4B               	movwf	(main@motorL+8)^0,c
   535   001166                     
   536                           ;main.c: 43:     motorL.PWMperiod=PWMcycle;
   537   001166  0E00               	movlw	0
   538   001168  6E47               	movwf	(main@motorL+4)^0,c
   539   00116A  0E63               	movlw	99
   540   00116C  6E46               	movwf	(main@motorL+3)^0,c
   541   00116E                     
   542                           ;main.c: 45:     motorR.power=0;
   543   00116E  0E00               	movlw	0
   544   001170  6E4C               	movwf	main@motorR^0,c
   545   001172                     
   546                           ;main.c: 46:     motorR.direction=1;
   547   001172  0E01               	movlw	1
   548   001174  6E4D               	movwf	(main@motorR+1)^0,c
   549   001176                     
   550                           ;main.c: 47:     motorR.brakemode=1;
   551   001176  0E01               	movlw	1
   552   001178  6E4E               	movwf	(main@motorR+2)^0,c
   553   00117A                     
   554                           ;main.c: 48:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   555   00117A  0E25               	movlw	37
   556   00117C  6E51               	movwf	(main@motorR+5)^0,c
   557   00117E  0E0F               	movlw	15
   558   001180  6E52               	movwf	(main@motorR+6)^0,c
   559   001182                     
   560                           ;main.c: 49:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   561   001182  0E21               	movlw	33
   562   001184  6E53               	movwf	(main@motorR+7)^0,c
   563   001186  0E0F               	movlw	15
   564   001188  6E54               	movwf	(main@motorR+8)^0,c
   565   00118A                     
   566                           ;main.c: 50:     motorR.PWMperiod=PWMcycle;
   567   00118A  0E00               	movlw	0
   568   00118C  6E50               	movwf	(main@motorR+4)^0,c
   569   00118E  0E63               	movlw	99
   570   001190  6E4F               	movwf	(main@motorR+3)^0,c
   571   001192                     
   572                           ;main.c: 57:     char red_val[20];;main.c: 58:     char *pred_val;;main.c: 59:     pred_
      +                          val = &red_val[0];
   573   001192  0E2E               	movlw	low main@red_val
   574   001194  6E42               	movwf	main@pred_val^0,c
   575   001196                     l1996:
   576                           
   577                           ;main.c: 63:         sprintf(red_val,"red = %d \r\n",color_read_Red());
   578   001196  0E2E               	movlw	low main@red_val
   579   001198  6E1B               	movwf	sprintf@s^0,c
   580   00119A  0E01               	movlw	low STR_1
   581   00119C  6E1C               	movwf	sprintf@fmt^0,c
   582   00119E  ECC4  F009         	call	_color_read_Red	;wreg free
   583   0011A2  C006  F01D         	movff	?_color_read_Red,?_sprintf+2
   584   0011A6  C007  F01E         	movff	?_color_read_Red+1,?_sprintf+3
   585   0011AA  EC4A  F00A         	call	_sprintf	;wreg free
   586   0011AE                     
   587                           ;main.c: 64:         sendStringSerial4(pred_val);
   588   0011AE  C042  F003         	movff	main@pred_val,sendStringSerial4@string
   589   0011B2  EC93  F00A         	call	_sendStringSerial4	;wreg free
   590   0011B6                     
   591                           ;main.c: 65:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   592   0011B6  0E52               	movlw	82
   593   0011B8  6E2D               	movwf	(??_main+1)^0,c
   594   0011BA  0E2B               	movlw	43
   595   0011BC  6E2C               	movwf	??_main^0,c
   596   0011BE  0E00               	movlw	0
   597   0011C0                     u1077:
   598   0011C0  2EE8               	decfsz	wreg,f,c
   599   0011C2  D7FE               	bra	u1077
   600   0011C4  2E2C               	decfsz	??_main^0,f,c
   601   0011C6  D7FC               	bra	u1077
   602   0011C8  2E2D               	decfsz	(??_main+1)^0,f,c
   603   0011CA  D7FA               	bra	u1077
   604   0011CC  D000               	nop2	
   605   0011CE  EFCB  F008         	goto	l1996
   606   0011D2  EF30  F000         	goto	start
   607   0011D6                     __end_of_main:
   608                           	callstack 0
   609                           
   610 ;; *************** function _sprintf *****************
   611 ;; Defined at:
   612 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;  s               1   26[COMRAM] PTR unsigned char 
   615 ;;		 -> main@red_val(20), 
   616 ;;  fmt             1   27[COMRAM] PTR const unsigned char 
   617 ;;		 -> STR_1(12), 
   618 ;; Auto vars:     Size  Location     Type
   619 ;;  f              12   31[COMRAM] struct _IO_FILE
   620 ;;  ret             2    0        int 
   621 ;;  ap              1   30[COMRAM] PTR void [1]
   622 ;;		 -> ?_sprintf(2), 
   623 ;; Return value:  Size  Location     Type
   624 ;;                  2   26[COMRAM] int 
   625 ;; Registers used:
   626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   633 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   635 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   636 ;;Total ram usage:       17 bytes
   637 ;; Hardware stack levels used: 1
   638 ;; Hardware stack levels required when called: 5
   639 ;; This function calls:
   640 ;;		_vfprintf
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text1
   647   001494                     __ptext1:
   648                           	callstack 0
   649   001494                     _sprintf:
   650                           	callstack 25
   651   001494  0E1D               	movlw	low (?_sprintf+2)
   652   001496  6E1F               	movwf	sprintf@ap^0,c
   653   001498  C01B  F020         	movff	sprintf@s,sprintf@f
   654   00149C  0E00               	movlw	0
   655   00149E  6E24               	movwf	(sprintf@f+4)^0,c
   656   0014A0  0E00               	movlw	0
   657   0014A2  6E23               	movwf	(sprintf@f+3)^0,c
   658   0014A4  0E00               	movlw	0
   659   0014A6  6E2B               	movwf	(sprintf@f+11)^0,c
   660   0014A8  0E00               	movlw	0
   661   0014AA  6E2A               	movwf	(sprintf@f+10)^0,c
   662   0014AC  0E20               	movlw	low sprintf@f
   663   0014AE  6E17               	movwf	vfprintf@fp^0,c
   664   0014B0  C01C  F018         	movff	sprintf@fmt,vfprintf@fmt
   665   0014B4  0E1F               	movlw	low sprintf@ap
   666   0014B6  6E19               	movwf	vfprintf@ap^0,c
   667   0014B8  EC2D  F00A         	call	_vfprintf	;wreg free
   668   0014BC  501B               	movf	sprintf@s^0,w,c
   669   0014BE  2423               	addwf	(sprintf@f+3)^0,w,c
   670   0014C0  6ED9               	movwf	fsr2l,c
   671   0014C2  6ADA               	clrf	fsr2h,c
   672   0014C4  6ADF               	clrf	indf2,c
   673   0014C6  0012               	return		;funcret
   674   0014C8                     __end_of_sprintf:
   675                           	callstack 0
   676                           
   677 ;; *************** function _vfprintf *****************
   678 ;; Defined at:
   679 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
   682 ;;		 -> sprintf@f(12), 
   683 ;;  fmt             1   23[COMRAM] PTR const unsigned char 
   684 ;;		 -> STR_1(12), 
   685 ;;  ap              1   24[COMRAM] PTR PTR void 
   686 ;;		 -> sprintf@ap(1), 
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  cfmt            1   25[COMRAM] PTR unsigned char 
   689 ;;		 -> STR_1(12), 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  2   22[COMRAM] int 
   692 ;; Registers used:
   693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   699 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   702 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   703 ;;Total ram usage:        4 bytes
   704 ;; Hardware stack levels used: 1
   705 ;; Hardware stack levels required when called: 4
   706 ;; This function calls:
   707 ;;		_vfpfcnvrt
   708 ;; This function is called by:
   709 ;;		_sprintf
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           	psect	text2
   714   00145A                     __ptext2:
   715                           	callstack 0
   716   00145A                     _vfprintf:
   717                           	callstack 25
   718   00145A                     
   719                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
   720   00145A  C018  F01A         	movff	vfprintf@fmt,vfprintf@cfmt
   721                           
   722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   723   00145E  EF39  F00A         	goto	l1856
   724   001462                     l1854:
   725                           
   726                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   727   001462  C017  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
   728   001466  0E1A               	movlw	low vfprintf@cfmt
   729   001468  6E0D               	movwf	vfpfcnvrt@fmt^0,c
   730   00146A  C019  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
   731   00146E  EC07  F007         	call	_vfpfcnvrt	;wreg free
   732   001472                     l1856:
   733                           
   734                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
   735   001472  C01A  FFF6         	movff	vfprintf@cfmt,tblptrl
   736   001476                     	if	0	;There is only one active tblptr byte
   737   001476                     	endif
   738   001476                     	if	0	;tblptru may be non-zero
   739   001476                     	endif
   740   001476                     	if	0	;tblptru may be non-zero
   741   001476                     	endif
   742   001476  0008               	tblrd		*
   743   001478  50F5               	movf	tablat,w,c
   744   00147A  0900               	iorlw	0
   745   00147C  A4D8               	btfss	status,2,c
   746   00147E  EF43  F00A         	goto	u1001
   747   001482  EF45  F00A         	goto	u1000
   748   001486                     u1001:
   749   001486  EF31  F00A         	goto	l1854
   750   00148A                     u1000:
   751   00148A                     
   752                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
   753   00148A  0E00               	movlw	0
   754   00148C  6E18               	movwf	(?_vfprintf+1)^0,c
   755   00148E  0E00               	movlw	0
   756   001490  6E17               	movwf	?_vfprintf^0,c
   757   001492  0012               	return		;funcret
   758   001494                     __end_of_vfprintf:
   759                           	callstack 0
   760                           
   761 ;; *************** function _vfpfcnvrt *****************
   762 ;; Defined at:
   763 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
   766 ;;		 -> sprintf@f(12), 
   767 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
   768 ;;		 -> vfprintf@cfmt(1), 
   769 ;;  ap              1   13[COMRAM] PTR PTR void 
   770 ;;		 -> sprintf@ap(1), 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  convarg         4   17[COMRAM] struct .
   773 ;;  c               1   21[COMRAM] unsigned char 
   774 ;;  cp              1   16[COMRAM] PTR unsigned char 
   775 ;;		 -> STR_1(12), 
   776 ;;  done            1   15[COMRAM] _Bool 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   786 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   787 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   789 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   790 ;;Total ram usage:       11 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; Hardware stack levels required when called: 3
   793 ;; This function calls:
   794 ;;		___awdiv
   795 ;;		___awmod
   796 ;;		_abs
   797 ;;		_fputc
   798 ;; This function is called by:
   799 ;;		_vfprintf
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text3
   804   000E0E                     __ptext3:
   805                           	callstack 0
   806   000E0E                     _vfpfcnvrt:
   807                           	callstack 25
   808   000E0E                     
   809                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   810   000E0E  500D               	movf	vfpfcnvrt@fmt^0,w,c
   811   000E10  6ED9               	movwf	fsr2l,c
   812   000E12  6ADA               	clrf	fsr2h,c
   813   000E14  CFDF FFF6          	movff	indf2,tblptrl
   814   000E18                     	if	0	;There is only one active tblptr byte
   815   000E18                     	endif
   816   000E18                     	if	0	;tblptru may be non-zero
   817   000E18                     	endif
   818   000E18                     	if	0	;tblptru may be non-zero
   819   000E18                     	endif
   820   000E18  0008               	tblrd		*
   821   000E1A  50F5               	movf	tablat,w,c
   822   000E1C  0A25               	xorlw	37
   823   000E1E  A4D8               	btfss	status,2,c
   824   000E20  EF14  F007         	goto	u901
   825   000E24  EF16  F007         	goto	u900
   826   000E28                     u901:
   827   000E28  EFCB  F007         	goto	l1844
   828   000E2C                     u900:
   829   000E2C                     
   830                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
   831   000E2C  500D               	movf	vfpfcnvrt@fmt^0,w,c
   832   000E2E  6ED9               	movwf	fsr2l,c
   833   000E30  6ADA               	clrf	fsr2h,c
   834   000E32  2ADF               	incf	indf2,f,c
   835   000E34                     
   836                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
   837   000E34  0E00               	movlw	0
   838   000E36  6E56               	movwf	(_width+1)^0,c
   839   000E38  0E00               	movlw	0
   840   000E3A  6E55               	movwf	_width^0,c
   841   000E3C  C055  F059         	movff	_width,_flags
   842   000E40                     
   843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
   844   000E40  6857               	setf	_prec^0,c
   845   000E42  6858               	setf	(_prec+1)^0,c
   846   000E44                     
   847                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
   848   000E44  500D               	movf	vfpfcnvrt@fmt^0,w,c
   849   000E46  6ED9               	movwf	fsr2l,c
   850   000E48  6ADA               	clrf	fsr2h,c
   851   000E4A  50DF               	movf	indf2,w,c
   852   000E4C  6E11               	movwf	vfpfcnvrt@cp^0,c
   853   000E4E                     
   854                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   855   000E4E  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   856   000E52                     	if	0	;There is only one active tblptr byte
   857   000E52                     	endif
   858   000E52                     	if	0	;tblptru may be non-zero
   859   000E52                     	endif
   860   000E52                     	if	0	;tblptru may be non-zero
   861   000E52                     	endif
   862   000E52  0008               	tblrd		*
   863   000E54  50F5               	movf	tablat,w,c
   864   000E56  0A64               	xorlw	100
   865   000E58  B4D8               	btfsc	status,2,c
   866   000E5A  EF31  F007         	goto	u911
   867   000E5E  EF33  F007         	goto	u910
   868   000E62                     u911:
   869   000E62  EF3F  F007         	goto	l1814
   870   000E66                     u910:
   871   000E66  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   872   000E6A                     	if	0	;There is only one active tblptr byte
   873   000E6A                     	endif
   874   000E6A                     	if	0	;tblptru may be non-zero
   875   000E6A                     	endif
   876   000E6A                     	if	0	;tblptru may be non-zero
   877   000E6A                     	endif
   878   000E6A  0008               	tblrd		*
   879   000E6C  50F5               	movf	tablat,w,c
   880   000E6E  0A69               	xorlw	105
   881   000E70  A4D8               	btfss	status,2,c
   882   000E72  EF3D  F007         	goto	u921
   883   000E76  EF3F  F007         	goto	u920
   884   000E7A                     u921:
   885   000E7A  EFC5  F007         	goto	l1840
   886   000E7E                     u920:
   887   000E7E                     l1814:
   888                           
   889                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
   890   000E7E  500E               	movf	vfpfcnvrt@ap^0,w,c
   891   000E80  6ED9               	movwf	fsr2l,c
   892   000E82  6ADA               	clrf	fsr2h,c
   893   000E84  0E02               	movlw	2
   894   000E86  26DF               	addwf	indf2,f,c
   895   000E88  5CDF               	subwf	indf2,w,c
   896   000E8A  6ED9               	movwf	fsr2l,c
   897   000E8C  6ADA               	clrf	fsr2h,c
   898   000E8E  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
   899   000E92  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
   900   000E96                     
   901                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
   902   000E96  500D               	movf	vfpfcnvrt@fmt^0,w,c
   903   000E98  6ED9               	movwf	fsr2l,c
   904   000E9A  6ADA               	clrf	fsr2h,c
   905   000E9C  2811               	incf	vfpfcnvrt@cp^0,w,c
   906   000E9E  6EDF               	movwf	indf2,c
   907   000EA0                     
   908                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
   909   000EA0  0E20               	movlw	32
   910   000EA2  6E16               	movwf	vfpfcnvrt@c^0,c
   911                           
   912                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
   913   000EA4  BE13               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
   914   000EA6  EF57  F007         	goto	u931
   915   000EAA  EF5A  F007         	goto	u930
   916   000EAE                     u931:
   917   000EAE  0E01               	movlw	1
   918   000EB0  EF5B  F007         	goto	u940
   919   000EB4                     u930:
   920   000EB4  0E00               	movlw	0
   921   000EB6                     u940:
   922   000EB6  6E10               	movwf	vfpfcnvrt@done^0,c
   923   000EB8                     l1820:
   924                           
   925                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
   926   000EB8  0616               	decf	vfpfcnvrt@c^0,f,c
   927   000EBA  5016               	movf	vfpfcnvrt@c^0,w,c
   928   000EBC  0F9C               	addlw	low _dbuf
   929   000EBE  6ED9               	movwf	fsr2l,c
   930   000EC0  6ADA               	clrf	fsr2h,c
   931   000EC2  C012  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
   932   000EC6  C013  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
   933   000ECA  0E00               	movlw	0
   934   000ECC  6E05               	movwf	(___awmod@divisor+1)^0,c
   935   000ECE  0E0A               	movlw	10
   936   000ED0  6E04               	movwf	___awmod@divisor^0,c
   937   000ED2  EC3D  F008         	call	___awmod	;wreg free
   938   000ED6  C002  F008         	movff	?___awmod,abs@a
   939   000EDA  C003  F009         	movff	?___awmod+1,abs@a+1
   940   000EDE  EC64  F00A         	call	_abs	;wreg free
   941   000EE2  5008               	movf	?_abs^0,w,c
   942   000EE4  0F30               	addlw	48
   943   000EE6  6EDF               	movwf	indf2,c
   944   000EE8                     
   945                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
   946   000EE8  C012  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
   947   000EEC  C013  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
   948   000EF0  0E00               	movlw	0
   949   000EF2  6E05               	movwf	(___awdiv@divisor+1)^0,c
   950   000EF4  0E0A               	movlw	10
   951   000EF6  6E04               	movwf	___awdiv@divisor^0,c
   952   000EF8  ECDB  F007         	call	___awdiv	;wreg free
   953   000EFC  C002  F012         	movff	?___awdiv,vfpfcnvrt@convarg
   954   000F00  C003  F013         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
   955   000F04                     
   956                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
   957   000F04  5012               	movf	vfpfcnvrt@convarg^0,w,c
   958   000F06  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
   959   000F08  B4D8               	btfsc	status,2,c
   960   000F0A  EF89  F007         	goto	u951
   961   000F0E  EF8B  F007         	goto	u950
   962   000F12                     u951:
   963   000F12  EF93  F007         	goto	l1828
   964   000F16                     u950:
   965   000F16  5016               	movf	vfpfcnvrt@c^0,w,c
   966   000F18  A4D8               	btfss	status,2,c
   967   000F1A  EF91  F007         	goto	u961
   968   000F1E  EF93  F007         	goto	u960
   969   000F22                     u961:
   970   000F22  EF5C  F007         	goto	l1820
   971   000F26                     u960:
   972   000F26                     l1828:
   973                           
   974                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
   975   000F26  5016               	movf	vfpfcnvrt@c^0,w,c
   976   000F28  B4D8               	btfsc	status,2,c
   977   000F2A  EF99  F007         	goto	u971
   978   000F2E  EF9B  F007         	goto	u970
   979   000F32                     u971:
   980   000F32  EFBA  F007         	goto	l1838
   981   000F36                     u970:
   982   000F36  5010               	movf	vfpfcnvrt@done^0,w,c
   983   000F38  B4D8               	btfsc	status,2,c
   984   000F3A  EFA1  F007         	goto	u981
   985   000F3E  EFA3  F007         	goto	u980
   986   000F42                     u981:
   987   000F42  EFBA  F007         	goto	l1838
   988   000F46                     u980:
   989   000F46                     
   990                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
   991   000F46  0616               	decf	vfpfcnvrt@c^0,f,c
   992   000F48  5016               	movf	vfpfcnvrt@c^0,w,c
   993   000F4A  0F9C               	addlw	low _dbuf
   994   000F4C  6ED9               	movwf	fsr2l,c
   995   000F4E  6ADA               	clrf	fsr2h,c
   996   000F50  0E2D               	movlw	45
   997   000F52  6EDF               	movwf	indf2,c
   998   000F54  EFBA  F007         	goto	l1838
   999   000F58                     l1834:
  1000                           
  1001                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1002   000F58  5016               	movf	vfpfcnvrt@c^0,w,c
  1003   000F5A  0F9C               	addlw	low _dbuf
  1004   000F5C  6ED9               	movwf	fsr2l,c
  1005   000F5E  6ADA               	clrf	fsr2h,c
  1006   000F60  50DF               	movf	indf2,w,c
  1007   000F62  6E0F               	movwf	??_vfpfcnvrt^0,c
  1008   000F64  500F               	movf	??_vfpfcnvrt^0,w,c
  1009   000F66  6E02               	movwf	fputc@c^0,c
  1010   000F68  6A03               	clrf	(fputc@c+1)^0,c
  1011   000F6A  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1012   000F6E  ECEB  F008         	call	_fputc	;wreg free
  1013   000F72  2A16               	incf	vfpfcnvrt@c^0,f,c
  1014   000F74                     l1838:
  1015                           
  1016                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1017   000F74  0E20               	movlw	32
  1018   000F76  1816               	xorwf	vfpfcnvrt@c^0,w,c
  1019   000F78  A4D8               	btfss	status,2,c
  1020   000F7A  EFC1  F007         	goto	u991
  1021   000F7E  EFC3  F007         	goto	u990
  1022   000F82                     u991:
  1023   000F82  EFAC  F007         	goto	l1834
  1024   000F86                     u990:
  1025   000F86  EFDA  F007         	goto	l1110
  1026   000F8A                     l1840:
  1027                           
  1028                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1029   000F8A  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1030   000F8C  6ED9               	movwf	fsr2l,c
  1031   000F8E  6ADA               	clrf	fsr2h,c
  1032   000F90  2ADF               	incf	indf2,f,c
  1033   000F92  EFDA  F007         	goto	l1110
  1034   000F96                     l1844:
  1035                           
  1036                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1037   000F96  500D               	movf	vfpfcnvrt@fmt^0,w,c
  1038   000F98  6ED9               	movwf	fsr2l,c
  1039   000F9A  6ADA               	clrf	fsr2h,c
  1040   000F9C  CFDF FFF6          	movff	indf2,tblptrl
  1041   000FA0                     	if	0	;There is only one active tblptr byte
  1042   000FA0                     	endif
  1043   000FA0                     	if	0	;tblptru may be non-zero
  1044   000FA0                     	endif
  1045   000FA0                     	if	0	;tblptru may be non-zero
  1046   000FA0                     	endif
  1047   000FA0  0008               	tblrd		*
  1048   000FA2  50F5               	movf	tablat,w,c
  1049   000FA4  6E02               	movwf	fputc@c^0,c
  1050   000FA6  6A03               	clrf	(fputc@c+1)^0,c
  1051   000FA8  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1052   000FAC  ECEB  F008         	call	_fputc	;wreg free
  1053   000FB0  EFC5  F007         	goto	l1840
  1054   000FB4                     l1110:
  1055   000FB4  0012               	return		;funcret
  1056   000FB6                     __end_of_vfpfcnvrt:
  1057                           	callstack 0
  1058                           
  1059 ;; *************** function _fputc *****************
  1060 ;; Defined at:
  1061 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  c               2    1[COMRAM] int 
  1064 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  1065 ;;		 -> sprintf@f(12), 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  2    1[COMRAM] int 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1077 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1079 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1080 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1081 ;;Total ram usage:        8 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; Hardware stack levels required when called: 2
  1084 ;; This function calls:
  1085 ;;		_putch
  1086 ;; This function is called by:
  1087 ;;		_vfpfcnvrt
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text4
  1092   0011D6                     __ptext4:
  1093                           	callstack 0
  1094   0011D6                     _fputc:
  1095                           	callstack 25
  1096   0011D6  5004               	movf	fputc@fp^0,w,c
  1097   0011D8  B4D8               	btfsc	status,2,c
  1098   0011DA  EFF1  F008         	goto	u851
  1099   0011DE  EFF3  F008         	goto	u850
  1100   0011E2                     u851:
  1101   0011E2  EFFB  F008         	goto	l1786
  1102   0011E6                     u850:
  1103   0011E6  5004               	movf	fputc@fp^0,w,c
  1104   0011E8  A4D8               	btfss	status,2,c
  1105   0011EA  EFF9  F008         	goto	u861
  1106   0011EE  EFFB  F008         	goto	u860
  1107   0011F2                     u861:
  1108   0011F2  EF00  F009         	goto	l1788
  1109   0011F6                     u860:
  1110   0011F6                     l1786:
  1111   0011F6  5002               	movf	fputc@c^0,w,c
  1112   0011F8  EC23  F00B         	call	_putch
  1113   0011FC  EF3F  F009         	goto	l1135
  1114   001200                     l1788:
  1115   001200  5004               	movf	fputc@fp^0,w,c
  1116   001202  6ED9               	movwf	fsr2l,c
  1117   001204  6ADA               	clrf	fsr2h,c
  1118   001206  0E0A               	movlw	10
  1119   001208  26D9               	addwf	fsr2l,f,c
  1120   00120A  50DE               	movf	postinc2,w,c
  1121   00120C  10DE               	iorwf	postinc2,w,c
  1122   00120E  B4D8               	btfsc	status,2,c
  1123   001210  EF0C  F009         	goto	u871
  1124   001214  EF0E  F009         	goto	u870
  1125   001218                     u871:
  1126   001218  EF27  F009         	goto	l1792
  1127   00121C                     u870:
  1128   00121C  5004               	movf	fputc@fp^0,w,c
  1129   00121E  6ED9               	movwf	fsr2l,c
  1130   001220  6ADA               	clrf	fsr2h,c
  1131   001222  0E0A               	movlw	10
  1132   001224  26D9               	addwf	fsr2l,f,c
  1133   001226  5004               	movf	fputc@fp^0,w,c
  1134   001228  6EE1               	movwf	fsr1l,c
  1135   00122A  6AE2               	clrf	fsr1h,c
  1136   00122C  0E03               	movlw	3
  1137   00122E  26E1               	addwf	fsr1l,f,c
  1138   001230  50DE               	movf	postinc2,w,c
  1139   001232  5CE6               	subwf	postinc1,w,c
  1140   001234  50E6               	movf	postinc1,w,c
  1141   001236  0A80               	xorlw	128
  1142   001238  6E09               	movwf	(??_fputc+4)^0,c
  1143   00123A  50DE               	movf	postinc2,w,c
  1144   00123C  0A80               	xorlw	128
  1145   00123E  5809               	subwfb	(??_fputc+4)^0,w,c
  1146   001240  B0D8               	btfsc	status,0,c
  1147   001242  EF25  F009         	goto	u881
  1148   001246  EF27  F009         	goto	u880
  1149   00124A                     u881:
  1150   00124A  EF3F  F009         	goto	l1135
  1151   00124E                     u880:
  1152   00124E                     l1792:
  1153   00124E  5004               	movf	fputc@fp^0,w,c
  1154   001250  6ED9               	movwf	fsr2l,c
  1155   001252  6ADA               	clrf	fsr2h,c
  1156   001254  0E03               	movlw	3
  1157   001256  26D9               	addwf	fsr2l,f,c
  1158   001258  50DF               	movf	indf2,w,c
  1159   00125A  6E05               	movwf	??_fputc^0,c
  1160   00125C  5004               	movf	fputc@fp^0,w,c
  1161   00125E  6ED9               	movwf	fsr2l,c
  1162   001260  6ADA               	clrf	fsr2h,c
  1163   001262  50DF               	movf	indf2,w,c
  1164   001264  2405               	addwf	??_fputc^0,w,c
  1165   001266  6ED9               	movwf	fsr2l,c
  1166   001268  6ADA               	clrf	fsr2h,c
  1167   00126A  C002  FFDF         	movff	fputc@c,indf2
  1168   00126E  5004               	movf	fputc@fp^0,w,c
  1169   001270  6ED9               	movwf	fsr2l,c
  1170   001272  6ADA               	clrf	fsr2h,c
  1171   001274  0E03               	movlw	3
  1172   001276  26D9               	addwf	fsr2l,f,c
  1173   001278  2ADE               	incf	postinc2,f,c
  1174   00127A  0E00               	movlw	0
  1175   00127C  22DD               	addwfc	postdec2,f,c
  1176   00127E                     l1135:
  1177   00127E  0012               	return		;funcret
  1178   001280                     __end_of_fputc:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _putch *****************
  1182 ;; Defined at:
  1183 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  c               1    wreg     unsigned char 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  c               1    0[COMRAM] unsigned char 
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1201 ;;Total ram usage:        0 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; Hardware stack levels required when called: 1
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_fputc
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text5
  1212   001646                     __ptext5:
  1213                           	callstack 0
  1214   001646                     _putch:
  1215                           	callstack 25
  1216   001646  0012               	return		;funcret
  1217   001648                     __end_of_putch:
  1218                           	callstack 0
  1219                           
  1220 ;; *************** function _abs *****************
  1221 ;; Defined at:
  1222 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  a               2    7[COMRAM] int 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;		None
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  2    7[COMRAM] int 
  1229 ;; Registers used:
  1230 ;;		wreg, status,2, status,0
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1238 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1239 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1240 ;;Total ram usage:        4 bytes
  1241 ;; Hardware stack levels used: 1
  1242 ;; Hardware stack levels required when called: 1
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_vfpfcnvrt
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text6
  1251   0014C8                     __ptext6:
  1252                           	callstack 0
  1253   0014C8                     _abs:
  1254                           	callstack 26
  1255   0014C8  BE09               	btfsc	(abs@a+1)^0,7,c
  1256   0014CA  EF69  F00A         	goto	u891
  1257   0014CE  EF6B  F00A         	goto	u890
  1258   0014D2                     u891:
  1259   0014D2  EF71  F00A         	goto	l1120
  1260   0014D6                     u890:
  1261   0014D6  C008  F008         	movff	abs@a,?_abs
  1262   0014DA  C009  F009         	movff	abs@a+1,?_abs+1
  1263   0014DE  EF7D  F00A         	goto	l1123
  1264   0014E2                     l1120:
  1265   0014E2  C008  F00A         	movff	abs@a,??_abs
  1266   0014E6  C009  F00B         	movff	abs@a+1,??_abs+1
  1267   0014EA  1E0A               	comf	??_abs^0,f,c
  1268   0014EC  1E0B               	comf	(??_abs+1)^0,f,c
  1269   0014EE  4A0A               	infsnz	??_abs^0,f,c
  1270   0014F0  2A0B               	incf	(??_abs+1)^0,f,c
  1271   0014F2  C00A  F008         	movff	??_abs,?_abs
  1272   0014F6  C00B  F009         	movff	??_abs+1,?_abs+1
  1273   0014FA                     l1123:
  1274   0014FA  0012               	return		;funcret
  1275   0014FC                     __end_of_abs:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function ___awmod *****************
  1279 ;; Defined at:
  1280 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  dividend        2    1[COMRAM] int 
  1283 ;;  divisor         2    3[COMRAM] int 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  sign            1    6[COMRAM] unsigned char 
  1286 ;;  counter         1    5[COMRAM] unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  2    1[COMRAM] int 
  1289 ;; Registers used:
  1290 ;;		wreg, status,2, status,0
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1297 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1299 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1300 ;;Total ram usage:        6 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; Hardware stack levels required when called: 1
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_vfpfcnvrt
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text7
  1311   00107A                     __ptext7:
  1312                           	callstack 0
  1313   00107A                     ___awmod:
  1314                           	callstack 26
  1315   00107A  0E00               	movlw	0
  1316   00107C  6E07               	movwf	___awmod@sign^0,c
  1317   00107E  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  1318   001080  EF46  F008         	goto	u790
  1319   001084  EF44  F008         	goto	u791
  1320   001088                     u791:
  1321   001088  EF4C  F008         	goto	l1754
  1322   00108C                     u790:
  1323   00108C  6C02               	negf	___awmod@dividend^0,c
  1324   00108E  1E03               	comf	(___awmod@dividend+1)^0,f,c
  1325   001090  B0D8               	btfsc	status,0,c
  1326   001092  2A03               	incf	(___awmod@dividend+1)^0,f,c
  1327   001094  0E01               	movlw	1
  1328   001096  6E07               	movwf	___awmod@sign^0,c
  1329   001098                     l1754:
  1330   001098  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  1331   00109A  EF53  F008         	goto	u800
  1332   00109E  EF51  F008         	goto	u801
  1333   0010A2                     u801:
  1334   0010A2  EF57  F008         	goto	l1758
  1335   0010A6                     u800:
  1336   0010A6  6C04               	negf	___awmod@divisor^0,c
  1337   0010A8  1E05               	comf	(___awmod@divisor+1)^0,f,c
  1338   0010AA  B0D8               	btfsc	status,0,c
  1339   0010AC  2A05               	incf	(___awmod@divisor+1)^0,f,c
  1340   0010AE                     l1758:
  1341   0010AE  5004               	movf	___awmod@divisor^0,w,c
  1342   0010B0  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  1343   0010B2  B4D8               	btfsc	status,2,c
  1344   0010B4  EF5E  F008         	goto	u811
  1345   0010B8  EF60  F008         	goto	u810
  1346   0010BC                     u811:
  1347   0010BC  EF84  F008         	goto	l1774
  1348   0010C0                     u810:
  1349   0010C0  0E01               	movlw	1
  1350   0010C2  6E06               	movwf	___awmod@counter^0,c
  1351   0010C4  EF68  F008         	goto	l1764
  1352   0010C8                     l1762:
  1353   0010C8  90D8               	bcf	status,0,c
  1354   0010CA  3604               	rlcf	___awmod@divisor^0,f,c
  1355   0010CC  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  1356   0010CE  2A06               	incf	___awmod@counter^0,f,c
  1357   0010D0                     l1764:
  1358   0010D0  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  1359   0010D2  EF6D  F008         	goto	u821
  1360   0010D6  EF6F  F008         	goto	u820
  1361   0010DA                     u821:
  1362   0010DA  EF64  F008         	goto	l1762
  1363   0010DE                     u820:
  1364   0010DE                     l1766:
  1365   0010DE  5004               	movf	___awmod@divisor^0,w,c
  1366   0010E0  5C02               	subwf	___awmod@dividend^0,w,c
  1367   0010E2  5005               	movf	(___awmod@divisor+1)^0,w,c
  1368   0010E4  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  1369   0010E6  A0D8               	btfss	status,0,c
  1370   0010E8  EF78  F008         	goto	u831
  1371   0010EC  EF7A  F008         	goto	u830
  1372   0010F0                     u831:
  1373   0010F0  EF7E  F008         	goto	l1770
  1374   0010F4                     u830:
  1375   0010F4  5004               	movf	___awmod@divisor^0,w,c
  1376   0010F6  5E02               	subwf	___awmod@dividend^0,f,c
  1377   0010F8  5005               	movf	(___awmod@divisor+1)^0,w,c
  1378   0010FA  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  1379   0010FC                     l1770:
  1380   0010FC  90D8               	bcf	status,0,c
  1381   0010FE  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  1382   001100  3204               	rrcf	___awmod@divisor^0,f,c
  1383   001102  2E06               	decfsz	___awmod@counter^0,f,c
  1384   001104  EF6F  F008         	goto	l1766
  1385   001108                     l1774:
  1386   001108  5007               	movf	___awmod@sign^0,w,c
  1387   00110A  B4D8               	btfsc	status,2,c
  1388   00110C  EF8A  F008         	goto	u841
  1389   001110  EF8C  F008         	goto	u840
  1390   001114                     u841:
  1391   001114  EF90  F008         	goto	l1778
  1392   001118                     u840:
  1393   001118  6C02               	negf	___awmod@dividend^0,c
  1394   00111A  1E03               	comf	(___awmod@dividend+1)^0,f,c
  1395   00111C  B0D8               	btfsc	status,0,c
  1396   00111E  2A03               	incf	(___awmod@dividend+1)^0,f,c
  1397   001120                     l1778:
  1398   001120  C002  F002         	movff	___awmod@dividend,?___awmod
  1399   001124  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  1400   001128  0012               	return		;funcret
  1401   00112A                     __end_of___awmod:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function ___awdiv *****************
  1405 ;; Defined at:
  1406 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  dividend        2    1[COMRAM] int 
  1409 ;;  divisor         2    3[COMRAM] int 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  quotient        2    7[COMRAM] int 
  1412 ;;  sign            1    6[COMRAM] unsigned char 
  1413 ;;  counter         1    5[COMRAM] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  2    1[COMRAM] int 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, status,0
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1423 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1424 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1426 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1427 ;;Total ram usage:        8 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; Hardware stack levels required when called: 1
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_vfpfcnvrt
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text8
  1438   000FB6                     __ptext8:
  1439                           	callstack 0
  1440   000FB6                     ___awdiv:
  1441                           	callstack 26
  1442   000FB6  0E00               	movlw	0
  1443   000FB8  6E07               	movwf	___awdiv@sign^0,c
  1444   000FBA  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  1445   000FBC  EFE4  F007         	goto	u730
  1446   000FC0  EFE2  F007         	goto	u731
  1447   000FC4                     u731:
  1448   000FC4  EFEA  F007         	goto	l1710
  1449   000FC8                     u730:
  1450   000FC8  6C04               	negf	___awdiv@divisor^0,c
  1451   000FCA  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  1452   000FCC  B0D8               	btfsc	status,0,c
  1453   000FCE  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  1454   000FD0  0E01               	movlw	1
  1455   000FD2  6E07               	movwf	___awdiv@sign^0,c
  1456   000FD4                     l1710:
  1457   000FD4  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  1458   000FD6  EFF1  F007         	goto	u740
  1459   000FDA  EFEF  F007         	goto	u741
  1460   000FDE                     u741:
  1461   000FDE  EFF7  F007         	goto	l1716
  1462   000FE2                     u740:
  1463   000FE2  6C02               	negf	___awdiv@dividend^0,c
  1464   000FE4  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  1465   000FE6  B0D8               	btfsc	status,0,c
  1466   000FE8  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  1467   000FEA  0E01               	movlw	1
  1468   000FEC  1A07               	xorwf	___awdiv@sign^0,f,c
  1469   000FEE                     l1716:
  1470   000FEE  0E00               	movlw	0
  1471   000FF0  6E09               	movwf	(___awdiv@quotient+1)^0,c
  1472   000FF2  0E00               	movlw	0
  1473   000FF4  6E08               	movwf	___awdiv@quotient^0,c
  1474   000FF6  5004               	movf	___awdiv@divisor^0,w,c
  1475   000FF8  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  1476   000FFA  B4D8               	btfsc	status,2,c
  1477   000FFC  EF02  F008         	goto	u751
  1478   001000  EF04  F008         	goto	u750
  1479   001004                     u751:
  1480   001004  EF2C  F008         	goto	l1738
  1481   001008                     u750:
  1482   001008  0E01               	movlw	1
  1483   00100A  6E06               	movwf	___awdiv@counter^0,c
  1484   00100C  EF0C  F008         	goto	l1724
  1485   001010                     l1722:
  1486   001010  90D8               	bcf	status,0,c
  1487   001012  3604               	rlcf	___awdiv@divisor^0,f,c
  1488   001014  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  1489   001016  2A06               	incf	___awdiv@counter^0,f,c
  1490   001018                     l1724:
  1491   001018  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  1492   00101A  EF11  F008         	goto	u761
  1493   00101E  EF13  F008         	goto	u760
  1494   001022                     u761:
  1495   001022  EF08  F008         	goto	l1722
  1496   001026                     u760:
  1497   001026                     l1726:
  1498   001026  90D8               	bcf	status,0,c
  1499   001028  3608               	rlcf	___awdiv@quotient^0,f,c
  1500   00102A  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  1501   00102C  5004               	movf	___awdiv@divisor^0,w,c
  1502   00102E  5C02               	subwf	___awdiv@dividend^0,w,c
  1503   001030  5005               	movf	(___awdiv@divisor+1)^0,w,c
  1504   001032  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  1505   001034  A0D8               	btfss	status,0,c
  1506   001036  EF1F  F008         	goto	u771
  1507   00103A  EF21  F008         	goto	u770
  1508   00103E                     u771:
  1509   00103E  EF26  F008         	goto	l1734
  1510   001042                     u770:
  1511   001042  5004               	movf	___awdiv@divisor^0,w,c
  1512   001044  5E02               	subwf	___awdiv@dividend^0,f,c
  1513   001046  5005               	movf	(___awdiv@divisor+1)^0,w,c
  1514   001048  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  1515   00104A  8008               	bsf	___awdiv@quotient^0,0,c
  1516   00104C                     l1734:
  1517   00104C  90D8               	bcf	status,0,c
  1518   00104E  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  1519   001050  3204               	rrcf	___awdiv@divisor^0,f,c
  1520   001052  2E06               	decfsz	___awdiv@counter^0,f,c
  1521   001054  EF13  F008         	goto	l1726
  1522   001058                     l1738:
  1523   001058  5007               	movf	___awdiv@sign^0,w,c
  1524   00105A  B4D8               	btfsc	status,2,c
  1525   00105C  EF32  F008         	goto	u781
  1526   001060  EF34  F008         	goto	u780
  1527   001064                     u781:
  1528   001064  EF38  F008         	goto	l1742
  1529   001068                     u780:
  1530   001068  6C08               	negf	___awdiv@quotient^0,c
  1531   00106A  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  1532   00106C  B0D8               	btfsc	status,0,c
  1533   00106E  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  1534   001070                     l1742:
  1535   001070  C008  F002         	movff	___awdiv@quotient,?___awdiv
  1536   001074  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  1537   001078  0012               	return		;funcret
  1538   00107A                     __end_of___awdiv:
  1539                           	callstack 0
  1540                           
  1541 ;; *************** function _sendStringSerial4 *****************
  1542 ;; Defined at:
  1543 ;;		line 38 in file "serial.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  string          1    2[COMRAM] PTR unsigned char 
  1546 ;;		 -> main@red_val(20), 
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1558 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1561 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1562 ;;Total ram usage:        1 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 2
  1565 ;; This function calls:
  1566 ;;		_sendCharSerial4
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text9
  1573   001526                     __ptext9:
  1574                           	callstack 0
  1575   001526                     _sendStringSerial4:
  1576                           	callstack 28
  1577   001526                     
  1578                           ;serial.c: 40:     while(*string != 0){
  1579   001526  EF9C  F00A         	goto	l1944
  1580   00152A                     l1940:
  1581                           
  1582                           ;serial.c: 41:   sendCharSerial4(*string++);
  1583   00152A  5003               	movf	sendStringSerial4@string^0,w,c
  1584   00152C  6ED9               	movwf	fsr2l,c
  1585   00152E  6ADA               	clrf	fsr2h,c
  1586   001530  50DF               	movf	indf2,w,c
  1587   001532  EC02  F00B         	call	_sendCharSerial4
  1588   001536  2A03               	incf	sendStringSerial4@string^0,f,c
  1589   001538                     l1944:
  1590                           
  1591                           ;serial.c: 40:     while(*string != 0){
  1592   001538  5003               	movf	sendStringSerial4@string^0,w,c
  1593   00153A  6ED9               	movwf	fsr2l,c
  1594   00153C  6ADA               	clrf	fsr2h,c
  1595   00153E  50DF               	movf	indf2,w,c
  1596   001540  A4D8               	btfss	status,2,c
  1597   001542  EFA5  F00A         	goto	u1011
  1598   001546  EFA7  F00A         	goto	u1010
  1599   00154A                     u1011:
  1600   00154A  EF95  F00A         	goto	l1940
  1601   00154E                     u1010:
  1602   00154E  0012               	return		;funcret
  1603   001550                     __end_of_sendStringSerial4:
  1604                           	callstack 0
  1605                           
  1606 ;; *************** function _sendCharSerial4 *****************
  1607 ;; Defined at:
  1608 ;;		line 31 in file "serial.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  charToSend      1    wreg     unsigned char 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  charToSend      1    1[COMRAM] unsigned char 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1626 ;;Total ram usage:        1 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 1
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_sendStringSerial4
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text10
  1637   001604                     __ptext10:
  1638                           	callstack 0
  1639   001604                     _sendCharSerial4:
  1640                           	callstack 28
  1641                           
  1642                           ;incstack = 0
  1643                           ;sendCharSerial4@charToSend stored from wreg
  1644   001604  6E02               	movwf	sendCharSerial4@charToSend^0,c
  1645   001606                     l329:
  1646   001606  010E               	movlb	14	; () banked
  1647   001608  A537               	btfss	55,2,b	;volatile
  1648   00160A  EF09  F00B         	goto	u321
  1649   00160E  EF0B  F00B         	goto	u320
  1650   001612                     u321:
  1651   001612  EF03  F00B         	goto	l329
  1652   001616                     u320:
  1653   001616                     
  1654                           ; BSR set to: 14
  1655                           ;serial.c: 33:     TX4REG = charToSend;
  1656   001616  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  1657   00161A                     
  1658                           ; BSR set to: 14
  1659   00161A  0012               	return		;funcret
  1660   00161C                     __end_of_sendCharSerial4:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function _initUSART4 *****************
  1664 ;; Defined at:
  1665 ;;		line 4 in file "serial.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1683 ;;Total ram usage:        0 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 1
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text11
  1694   0015E6                     __ptext11:
  1695                           	callstack 0
  1696   0015E6                     _initUSART4:
  1697                           	callstack 29
  1698   0015E6                     
  1699                           ;serial.c: 8:     RC0PPS = 0x12;
  1700   0015E6  0E12               	movlw	18
  1701   0015E8  010E               	movlb	14	; () banked
  1702   0015EA  6F62               	movwf	98,b	;volatile
  1703                           
  1704                           ;serial.c: 9:     RX4PPS = 0x11;
  1705   0015EC  0E11               	movlw	17
  1706   0015EE  6F15               	movwf	21,b	;volatile
  1707   0015F0                     
  1708                           ; BSR set to: 14
  1709                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  1710   0015F0  97E9               	bcf	233,3,b	;volatile
  1711   0015F2                     
  1712                           ; BSR set to: 14
  1713                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  1714   0015F2  95E8               	bcf	232,2,b	;volatile
  1715                           
  1716                           ;serial.c: 15:     SP4BRGL = 51;
  1717   0015F4  0E33               	movlw	51
  1718   0015F6  6FE5               	movwf	229,b	;volatile
  1719                           
  1720                           ;serial.c: 16:     SP4BRGH = 0;
  1721   0015F8  0E00               	movlw	0
  1722   0015FA  6FE6               	movwf	230,b	;volatile
  1723   0015FC                     
  1724                           ; BSR set to: 14
  1725                           ;serial.c: 19:     RC4STAbits.CREN = 1;
  1726   0015FC  89E7               	bsf	231,4,b	;volatile
  1727   0015FE                     
  1728                           ; BSR set to: 14
  1729                           ;serial.c: 20:     TX4STAbits.TXEN = 1;
  1730   0015FE  8BE8               	bsf	232,5,b	;volatile
  1731   001600                     
  1732                           ; BSR set to: 14
  1733                           ;serial.c: 21:     RC4STAbits.SPEN = 1;
  1734   001600  8FE7               	bsf	231,7,b	;volatile
  1735   001602                     
  1736                           ; BSR set to: 14
  1737   001602  0012               	return		;funcret
  1738   001604                     __end_of_initUSART4:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _initDCmotorsPWM *****************
  1742 ;; Defined at:
  1743 ;;		line 6 in file "dc_motor.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  PWMperiod       2    1[COMRAM] int 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1761 ;;Total ram usage:        2 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 1
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text12
  1772   001280                     __ptext12:
  1773                           	callstack 0
  1774   001280                     _initDCmotorsPWM:
  1775                           	callstack 29
  1776   001280                     
  1777                           ;dc_motor.c: 10:     RE2PPS=0x05;
  1778   001280  0E05               	movlw	5
  1779   001282  010E               	movlb	14	; () banked
  1780   001284  6F74               	movwf	116,b	;volatile
  1781                           
  1782                           ;dc_motor.c: 11:     RE4PPS=0x06;
  1783   001286  0E06               	movlw	6
  1784   001288  6F76               	movwf	118,b	;volatile
  1785                           
  1786                           ;dc_motor.c: 12:     RC7PPS=0x07;
  1787   00128A  0E07               	movlw	7
  1788   00128C  6F69               	movwf	105,b	;volatile
  1789                           
  1790                           ;dc_motor.c: 13:     RG6PPS=0x08;
  1791   00128E  0E08               	movlw	8
  1792   001290  6F88               	movwf	136,b	;volatile
  1793                           
  1794                           ;dc_motor.c: 16:     T2CONbits.CKPS=0b100;
  1795   001292  50BD               	movf	189,w,c	;volatile
  1796   001294  0B8F               	andlw	-113
  1797   001296  0940               	iorlw	64
  1798   001298  6EBD               	movwf	189,c	;volatile
  1799                           
  1800                           ;dc_motor.c: 17:     T2HLTbits.MODE=0b00000;
  1801   00129A  0EE0               	movlw	-32
  1802   00129C  16BE               	andwf	190,f,c	;volatile
  1803                           
  1804                           ;dc_motor.c: 18:     T2CLKCONbits.CS=0b0001;
  1805   00129E  50BF               	movf	191,w,c	;volatile
  1806   0012A0  0BF0               	andlw	-16
  1807   0012A2  0901               	iorlw	1
  1808   0012A4  6EBF               	movwf	191,c	;volatile
  1809                           
  1810                           ;dc_motor.c: 22:     T2PR=99;
  1811   0012A6  0E63               	movlw	99
  1812   0012A8  6EBC               	movwf	188,c	;volatile
  1813   0012AA                     
  1814                           ; BSR set to: 14
  1815                           ;dc_motor.c: 23:     T2CONbits.ON=1;
  1816   0012AA  8EBD               	bsf	189,7,c	;volatile
  1817                           
  1818                           ;dc_motor.c: 27:     CCPR1H=0;
  1819   0012AC  0E00               	movlw	0
  1820   0012AE  6EAA               	movwf	170,c	;volatile
  1821                           
  1822                           ;dc_motor.c: 28:     CCPR2H=0;
  1823   0012B0  0E00               	movlw	0
  1824   0012B2  6EA6               	movwf	166,c	;volatile
  1825                           
  1826                           ;dc_motor.c: 29:     CCPR3H=0;
  1827   0012B4  0E00               	movlw	0
  1828   0012B6  010F               	movlb	15	; () banked
  1829   0012B8  6F25               	movwf	37,b	;volatile
  1830                           
  1831                           ;dc_motor.c: 30:     CCPR4H=0;
  1832   0012BA  0E00               	movlw	0
  1833   0012BC  6F21               	movwf	33,b	;volatile
  1834                           
  1835                           ;dc_motor.c: 33:     CCPTMRS0bits.C1TSEL=0;
  1836   0012BE  0EFC               	movlw	-4
  1837   0012C0  16AD               	andwf	173,f,c	;volatile
  1838                           
  1839                           ;dc_motor.c: 34:     CCPTMRS0bits.C2TSEL=0;
  1840   0012C2  0EF3               	movlw	-13
  1841   0012C4  16AD               	andwf	173,f,c	;volatile
  1842                           
  1843                           ;dc_motor.c: 35:     CCPTMRS0bits.C3TSEL=0;
  1844   0012C6  0ECF               	movlw	-49
  1845   0012C8  16AD               	andwf	173,f,c	;volatile
  1846                           
  1847                           ;dc_motor.c: 36:     CCPTMRS0bits.C4TSEL=0;
  1848   0012CA  0E3F               	movlw	-193
  1849   0012CC  16AD               	andwf	173,f,c	;volatile
  1850   0012CE                     
  1851                           ; BSR set to: 15
  1852                           ;dc_motor.c: 39:     CCP1CONbits.FMT=1;
  1853   0012CE  88AB               	bsf	171,4,c	;volatile
  1854                           
  1855                           ;dc_motor.c: 40:     CCP1CONbits.CCP1MODE=0b1100;
  1856   0012D0  50AB               	movf	171,w,c	;volatile
  1857   0012D2  0BF0               	andlw	-16
  1858   0012D4  090C               	iorlw	12
  1859   0012D6  6EAB               	movwf	171,c	;volatile
  1860   0012D8                     
  1861                           ; BSR set to: 15
  1862                           ;dc_motor.c: 41:     CCP1CONbits.EN=1;
  1863   0012D8  8EAB               	bsf	171,7,c	;volatile
  1864   0012DA                     
  1865                           ; BSR set to: 15
  1866                           ;dc_motor.c: 43:     CCP2CONbits.FMT=1;
  1867   0012DA  88A7               	bsf	167,4,c	;volatile
  1868                           
  1869                           ;dc_motor.c: 44:     CCP2CONbits.CCP2MODE=0b1100;
  1870   0012DC  50A7               	movf	167,w,c	;volatile
  1871   0012DE  0BF0               	andlw	-16
  1872   0012E0  090C               	iorlw	12
  1873   0012E2  6EA7               	movwf	167,c	;volatile
  1874   0012E4                     
  1875                           ; BSR set to: 15
  1876                           ;dc_motor.c: 45:     CCP2CONbits.EN=1;
  1877   0012E4  8EA7               	bsf	167,7,c	;volatile
  1878   0012E6                     
  1879                           ; BSR set to: 15
  1880                           ;dc_motor.c: 47:     CCP3CONbits.FMT=1;
  1881   0012E6  8926               	bsf	38,4,b	;volatile
  1882                           
  1883                           ;dc_motor.c: 48:     CCP3CONbits.CCP3MODE=0b1100;
  1884   0012E8  5126               	movf	38,w,b	;volatile
  1885   0012EA  0BF0               	andlw	-16
  1886   0012EC  090C               	iorlw	12
  1887   0012EE  6F26               	movwf	38,b	;volatile
  1888   0012F0                     
  1889                           ; BSR set to: 15
  1890                           ;dc_motor.c: 49:     CCP3CONbits.EN=1;
  1891   0012F0  8F26               	bsf	38,7,b	;volatile
  1892   0012F2                     
  1893                           ; BSR set to: 15
  1894                           ;dc_motor.c: 51:     CCP4CONbits.FMT=1;
  1895   0012F2  8922               	bsf	34,4,b	;volatile
  1896                           
  1897                           ;dc_motor.c: 52:     CCP4CONbits.CCP4MODE=0b1100;
  1898   0012F4  5122               	movf	34,w,b	;volatile
  1899   0012F6  0BF0               	andlw	-16
  1900   0012F8  090C               	iorlw	12
  1901   0012FA  6F22               	movwf	34,b	;volatile
  1902   0012FC                     
  1903                           ; BSR set to: 15
  1904                           ;dc_motor.c: 53:     CCP4CONbits.EN=1;
  1905   0012FC  8F22               	bsf	34,7,b	;volatile
  1906                           
  1907                           ;dc_motor.c: 56:     RE2PPS=0x05;
  1908   0012FE  0E05               	movlw	5
  1909   001300  010E               	movlb	14	; () banked
  1910   001302  6F74               	movwf	116,b	;volatile
  1911                           
  1912                           ;dc_motor.c: 57:     RE4PPS=0x06;
  1913   001304  0E06               	movlw	6
  1914   001306  6F76               	movwf	118,b	;volatile
  1915                           
  1916                           ;dc_motor.c: 58:     RC7PPS=0x07;
  1917   001308  0E07               	movlw	7
  1918   00130A  6F69               	movwf	105,b	;volatile
  1919                           
  1920                           ;dc_motor.c: 59:     RG6PPS=0x08;
  1921   00130C  0E08               	movlw	8
  1922   00130E  6F88               	movwf	136,b	;volatile
  1923   001310                     
  1924                           ; BSR set to: 14
  1925                           ;dc_motor.c: 62:     TRISEbits.TRISE2=0;
  1926   001310  9485               	bcf	133,2,c	;volatile
  1927   001312                     
  1928                           ; BSR set to: 14
  1929                           ;dc_motor.c: 63:     TRISEbits.TRISE4=0;
  1930   001312  9885               	bcf	133,4,c	;volatile
  1931   001314                     
  1932                           ; BSR set to: 14
  1933                           ;dc_motor.c: 64:     TRISCbits.TRISC7=0;
  1934   001314  9E83               	bcf	131,7,c	;volatile
  1935   001316                     
  1936                           ; BSR set to: 14
  1937                           ;dc_motor.c: 65:     TRISGbits.TRISG6=0;
  1938   001316  9C87               	bcf	135,6,c	;volatile
  1939   001318                     
  1940                           ; BSR set to: 14
  1941                           ;dc_motor.c: 68:     LATEbits.LATE2=0;
  1942   001318  947D               	bcf	125,2,c	;volatile
  1943   00131A                     
  1944                           ; BSR set to: 14
  1945                           ;dc_motor.c: 69:     LATCbits.LATC7=0;
  1946   00131A  9E7B               	bcf	123,7,c	;volatile
  1947   00131C                     
  1948                           ; BSR set to: 14
  1949                           ;dc_motor.c: 70:     LATEbits.LATE4=0;
  1950   00131C  987D               	bcf	125,4,c	;volatile
  1951   00131E                     
  1952                           ; BSR set to: 14
  1953                           ;dc_motor.c: 71:     LATGbits.LATG6=0;
  1954   00131E  9C7F               	bcf	127,6,c	;volatile
  1955   001320                     
  1956                           ; BSR set to: 14
  1957   001320  0012               	return		;funcret
  1958   001322                     __end_of_initDCmotorsPWM:
  1959                           	callstack 0
  1960                           
  1961 ;; *************** function _color_read_Red *****************
  1962 ;; Defined at:
  1963 ;;		line 33 in file "color.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;  tmp             2   10[COMRAM] unsigned int 
  1968 ;; Return value:  Size  Location     Type
  1969 ;;                  2    5[COMRAM] unsigned int 
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0, cstack
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1979 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1980 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1981 ;;Total ram usage:        7 bytes
  1982 ;; Hardware stack levels used: 1
  1983 ;; Hardware stack levels required when called: 3
  1984 ;; This function calls:
  1985 ;;		_I2C_2_Master_Read
  1986 ;;		_I2C_2_Master_RepStart
  1987 ;;		_I2C_2_Master_Start
  1988 ;;		_I2C_2_Master_Stop
  1989 ;;		_I2C_2_Master_Write
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text13
  1996   001388                     __ptext13:
  1997                           	callstack 0
  1998   001388                     _color_read_Red:
  1999                           	callstack 27
  2000   001388                     
  2001                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  2002   001388  EC1E  F00B         	call	_I2C_2_Master_Start	;wreg free
  2003                           
  2004                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  2005   00138C  0E52               	movlw	82
  2006   00138E  EC0E  F00B         	call	_I2C_2_Master_Write
  2007                           
  2008                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  2009   001392  0EB6               	movlw	182
  2010   001394  EC0E  F00B         	call	_I2C_2_Master_Write
  2011                           
  2012                           ;color.c: 38:  I2C_2_Master_RepStart();
  2013   001398  EC14  F00B         	call	_I2C_2_Master_RepStart	;wreg free
  2014                           
  2015                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  2016   00139C  0E53               	movlw	83
  2017   00139E  EC0E  F00B         	call	_I2C_2_Master_Write
  2018                           
  2019                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  2020   0013A2  0E01               	movlw	1
  2021   0013A4  ECEC  F009         	call	_I2C_2_Master_Read
  2022   0013A8  6E08               	movwf	??_color_read_Red^0,c
  2023   0013AA  5008               	movf	??_color_read_Red^0,w,c
  2024   0013AC  6E0B               	movwf	color_read_Red@tmp^0,c
  2025   0013AE  6A0C               	clrf	(color_read_Red@tmp+1)^0,c
  2026                           
  2027                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2028   0013B0  0E00               	movlw	0
  2029   0013B2  ECEC  F009         	call	_I2C_2_Master_Read
  2030   0013B6  6E08               	movwf	??_color_read_Red^0,c
  2031   0013B8  5008               	movf	??_color_read_Red^0,w,c
  2032   0013BA  6E0A               	movwf	(??_color_read_Red+2)^0,c
  2033   0013BC  6A09               	clrf	(??_color_read_Red+1)^0,c
  2034   0013BE  500B               	movf	color_read_Red@tmp^0,w,c
  2035   0013C0  1009               	iorwf	(??_color_read_Red+1)^0,w,c
  2036   0013C2  6E0B               	movwf	color_read_Red@tmp^0,c
  2037   0013C4  500C               	movf	(color_read_Red@tmp+1)^0,w,c
  2038   0013C6  100A               	iorwf	(??_color_read_Red+2)^0,w,c
  2039   0013C8  6E0C               	movwf	(color_read_Red@tmp+1)^0,c
  2040                           
  2041                           ;color.c: 42:  I2C_2_Master_Stop();
  2042   0013CA  EC19  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2043   0013CE                     
  2044                           ;color.c: 43:  return tmp;
  2045   0013CE  C00B  F006         	movff	color_read_Red@tmp,?_color_read_Red
  2046   0013D2  C00C  F007         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2047   0013D6  0012               	return		;funcret
  2048   0013D8                     __end_of_color_read_Red:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function _I2C_2_Master_RepStart *****************
  2052 ;; Defined at:
  2053 ;;		line 30 in file "i2c.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; Hardware stack levels required when called: 2
  2074 ;; This function calls:
  2075 ;;		_I2C_2_Master_Idle
  2076 ;; This function is called by:
  2077 ;;		_color_read_Red
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text14
  2082   001628                     __ptext14:
  2083                           	callstack 0
  2084   001628                     _I2C_2_Master_RepStart:
  2085                           	callstack 27
  2086   001628                     
  2087                           ;i2c.c: 31:   I2C_2_Master_Idle();
  2088   001628  ECBD  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2089   00162C                     
  2090                           ;i2c.c: 32:   SSP2CON2bits.RSEN = 1;
  2091   00162C  010E               	movlb	14	; () banked
  2092   00162E  83DA               	bsf	218,1,b	;volatile
  2093   001630                     
  2094                           ; BSR set to: 14
  2095   001630  0012               	return		;funcret
  2096   001632                     __end_of_I2C_2_Master_RepStart:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function _I2C_2_Master_Read *****************
  2100 ;; Defined at:
  2101 ;;		line 45 in file "i2c.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  ack             1    wreg     unsigned char 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  ack             1    3[COMRAM] unsigned char 
  2106 ;;  tmp             1    4[COMRAM] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      unsigned char 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2118 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2119 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2120 ;;Total ram usage:        3 bytes
  2121 ;; Hardware stack levels used: 1
  2122 ;; Hardware stack levels required when called: 2
  2123 ;; This function calls:
  2124 ;;		_I2C_2_Master_Idle
  2125 ;; This function is called by:
  2126 ;;		_color_read_Red
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text15
  2131   0013D8                     __ptext15:
  2132                           	callstack 0
  2133   0013D8                     _I2C_2_Master_Read:
  2134                           	callstack 27
  2135                           
  2136                           ; BSR set to: 14
  2137                           ;incstack = 0
  2138                           ;I2C_2_Master_Read@ack stored from wreg
  2139   0013D8  6E04               	movwf	I2C_2_Master_Read@ack^0,c
  2140   0013DA                     
  2141                           ;i2c.c: 46:   unsigned char tmp;;i2c.c: 47:   I2C_2_Master_Idle();
  2142   0013DA  ECBD  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2143   0013DE                     
  2144                           ;i2c.c: 48:   SSP2CON2bits.RCEN = 1;
  2145   0013DE  010E               	movlb	14	; () banked
  2146   0013E0  87DA               	bsf	218,3,b	;volatile
  2147                           
  2148                           ;i2c.c: 49:   I2C_2_Master_Idle();
  2149   0013E2  ECBD  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2150   0013E6                     
  2151                           ;i2c.c: 50:   tmp = SSP2BUF;
  2152   0013E6  CED5 F005          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2153                           
  2154                           ;i2c.c: 51:   I2C_2_Master_Idle();
  2155   0013EA  ECBD  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2156   0013EE                     
  2157                           ;i2c.c: 52:   SSP2CON2bits.ACKDT = !ack;
  2158   0013EE  5004               	movf	I2C_2_Master_Read@ack^0,w,c
  2159   0013F0  B4D8               	btfsc	status,2,c
  2160   0013F2  EFFD  F009         	goto	u301
  2161   0013F6  EF01  F00A         	goto	u300
  2162   0013FA                     u301:
  2163   0013FA  6A03               	clrf	??_I2C_2_Master_Read^0,c
  2164   0013FC  2A03               	incf	??_I2C_2_Master_Read^0,f,c
  2165   0013FE  EF02  F00A         	goto	u318
  2166   001402                     u300:
  2167   001402  6A03               	clrf	??_I2C_2_Master_Read^0,c
  2168   001404                     u318:
  2169   001404  3A03               	swapf	??_I2C_2_Master_Read^0,f,c
  2170   001406  4603               	rlncf	??_I2C_2_Master_Read^0,f,c
  2171   001408  010E               	movlb	14	; () banked
  2172   00140A  51DA               	movf	218,w,b	;volatile
  2173   00140C  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
  2174   00140E  0BDF               	andlw	-33
  2175   001410  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
  2176   001412  6FDA               	movwf	218,b	;volatile
  2177   001414                     
  2178                           ; BSR set to: 14
  2179                           ;i2c.c: 53:   SSP2CON2bits.ACKEN = 1;
  2180   001414  89DA               	bsf	218,4,b	;volatile
  2181   001416                     
  2182                           ; BSR set to: 14
  2183                           ;i2c.c: 54:   return tmp;
  2184   001416  5005               	movf	I2C_2_Master_Read@tmp^0,w,c
  2185   001418                     
  2186                           ; BSR set to: 14
  2187   001418  0012               	return		;funcret
  2188   00141A                     __end_of_I2C_2_Master_Read:
  2189                           	callstack 0
  2190                           
  2191 ;; *************** function _color_click_toggleLED *****************
  2192 ;; Defined at:
  2193 ;;		line 47 in file "color.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2211 ;;Total ram usage:        1 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 1
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text16
  2222   001322                     __ptext16:
  2223                           	callstack 0
  2224   001322                     _color_click_toggleLED:
  2225                           	callstack 29
  2226   001322                     
  2227                           ;color.c: 48:     LATGbits.LATG0 = !LATGbits.LATG0;
  2228   001322  A07F               	btfss	127,0,c	;volatile
  2229   001324  EF96  F009         	goto	u341
  2230   001328  EF9A  F009         	goto	u340
  2231   00132C                     u341:
  2232   00132C  6A02               	clrf	??_color_click_toggleLED^0,c
  2233   00132E  2A02               	incf	??_color_click_toggleLED^0,f,c
  2234   001330  EF9B  F009         	goto	u358
  2235   001334                     u340:
  2236   001334  6A02               	clrf	??_color_click_toggleLED^0,c
  2237   001336                     u358:
  2238   001336  507F               	movf	127,w,c	;volatile
  2239   001338  1802               	xorwf	??_color_click_toggleLED^0,w,c
  2240   00133A  0BFE               	andlw	-2
  2241   00133C  1802               	xorwf	??_color_click_toggleLED^0,w,c
  2242   00133E  6E7F               	movwf	127,c	;volatile
  2243                           
  2244                           ;color.c: 49:     LATAbits.LATA3 = !LATAbits.LATA3;
  2245   001340  A679               	btfss	121,3,c	;volatile
  2246   001342  EFA5  F009         	goto	u361
  2247   001346  EFA9  F009         	goto	u360
  2248   00134A                     u361:
  2249   00134A  6A02               	clrf	??_color_click_toggleLED^0,c
  2250   00134C  2A02               	incf	??_color_click_toggleLED^0,f,c
  2251   00134E  EFAA  F009         	goto	u378
  2252   001352                     u360:
  2253   001352  6A02               	clrf	??_color_click_toggleLED^0,c
  2254   001354                     u378:
  2255   001354  4602               	rlncf	??_color_click_toggleLED^0,f,c
  2256   001356  4602               	rlncf	??_color_click_toggleLED^0,f,c
  2257   001358  4602               	rlncf	??_color_click_toggleLED^0,f,c
  2258   00135A  5079               	movf	121,w,c	;volatile
  2259   00135C  1802               	xorwf	??_color_click_toggleLED^0,w,c
  2260   00135E  0BF7               	andlw	-9
  2261   001360  1802               	xorwf	??_color_click_toggleLED^0,w,c
  2262   001362  6E79               	movwf	121,c	;volatile
  2263                           
  2264                           ;color.c: 50:     LATEbits.LATE7 = !LATEbits.LATE7;
  2265   001364  AE7D               	btfss	125,7,c	;volatile
  2266   001366  EFB7  F009         	goto	u381
  2267   00136A  EFBB  F009         	goto	u380
  2268   00136E                     u381:
  2269   00136E  6A02               	clrf	??_color_click_toggleLED^0,c
  2270   001370  2A02               	incf	??_color_click_toggleLED^0,f,c
  2271   001372  EFBC  F009         	goto	u398
  2272   001376                     u380:
  2273   001376  6A02               	clrf	??_color_click_toggleLED^0,c
  2274   001378                     u398:
  2275   001378  3202               	rrcf	??_color_click_toggleLED^0,f,c
  2276   00137A  3202               	rrcf	??_color_click_toggleLED^0,f,c
  2277   00137C  507D               	movf	125,w,c	;volatile
  2278   00137E  1802               	xorwf	??_color_click_toggleLED^0,w,c
  2279   001380  0B7F               	andlw	-129
  2280   001382  1802               	xorwf	??_color_click_toggleLED^0,w,c
  2281   001384  6E7D               	movwf	125,c	;volatile
  2282   001386  0012               	return		;funcret
  2283   001388                     __end_of_color_click_toggleLED:
  2284                           	callstack 0
  2285                           
  2286 ;; *************** function _color_click_init *****************
  2287 ;; Defined at:
  2288 ;;		line 5 in file "color.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, status,2, status,0, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2304 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2305 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2306 ;;Total ram usage:        1 bytes
  2307 ;; Hardware stack levels used: 1
  2308 ;; Hardware stack levels required when called: 4
  2309 ;; This function calls:
  2310 ;;		_I2C_2_Master_Init
  2311 ;;		_color_writetoaddr
  2312 ;; This function is called by:
  2313 ;;		_main
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text17
  2318   00141A                     __ptext17:
  2319                           	callstack 0
  2320   00141A                     _color_click_init:
  2321                           	callstack 26
  2322   00141A                     
  2323                           ;color.c: 7:     I2C_2_Master_Init();
  2324   00141A  ECA8  F00A         	call	_I2C_2_Master_Init	;wreg free
  2325   00141E                     
  2326                           ;color.c: 8:  color_writetoaddr(0x00, 0x01);
  2327   00141E  0E01               	movlw	1
  2328   001420  6E04               	movwf	color_writetoaddr@value^0,c
  2329   001422  0E00               	movlw	0
  2330   001424  ECE3  F00A         	call	_color_writetoaddr
  2331   001428                     
  2332                           ;color.c: 9:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2333   001428  0E3F               	movlw	63
  2334   00142A  6E06               	movwf	??_color_click_init^0,c
  2335   00142C  0E55               	movlw	85
  2336   00142E                     u1087:
  2337   00142E  2EE8               	decfsz	wreg,f,c
  2338   001430  D7FE               	bra	u1087
  2339   001432  2E06               	decfsz	??_color_click_init^0,f,c
  2340   001434  D7FC               	bra	u1087
  2341   001436  0000               	nop	
  2342   001438                     
  2343                           ;color.c: 10:  color_writetoaddr(0x00, 0x03);
  2344   001438  0E03               	movlw	3
  2345   00143A  6E04               	movwf	color_writetoaddr@value^0,c
  2346   00143C  0E00               	movlw	0
  2347   00143E  ECE3  F00A         	call	_color_writetoaddr
  2348   001442                     
  2349                           ;color.c: 11:  color_writetoaddr(0x01, 0xD5);
  2350   001442  0ED5               	movlw	213
  2351   001444  6E04               	movwf	color_writetoaddr@value^0,c
  2352   001446  0E01               	movlw	1
  2353   001448  ECE3  F00A         	call	_color_writetoaddr
  2354   00144C                     
  2355                           ;color.c: 14:     LATGbits.LATG0=0;
  2356   00144C  907F               	bcf	127,0,c	;volatile
  2357   00144E                     
  2358                           ;color.c: 15:     LATAbits.LATA3=0;
  2359   00144E  9679               	bcf	121,3,c	;volatile
  2360   001450                     
  2361                           ;color.c: 16:     LATEbits.LATE7=0;
  2362   001450  9E7D               	bcf	125,7,c	;volatile
  2363   001452                     
  2364                           ;color.c: 19:     TRISGbits.TRISG0=0;
  2365   001452  9087               	bcf	135,0,c	;volatile
  2366   001454                     
  2367                           ;color.c: 20:     TRISAbits.TRISA3=0;
  2368   001454  9681               	bcf	129,3,c	;volatile
  2369   001456                     
  2370                           ;color.c: 21:     TRISEbits.TRISE7=0;
  2371   001456  9E85               	bcf	133,7,c	;volatile
  2372   001458  0012               	return		;funcret
  2373   00145A                     __end_of_color_click_init:
  2374                           	callstack 0
  2375                           
  2376 ;; *************** function _color_writetoaddr *****************
  2377 ;; Defined at:
  2378 ;;		line 25 in file "color.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  address         1    wreg     unsigned char 
  2381 ;;  value           1    3[COMRAM] unsigned char 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  address         1    4[COMRAM] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2393 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2394 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2396 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2397 ;;Total ram usage:        2 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; Hardware stack levels required when called: 3
  2400 ;; This function calls:
  2401 ;;		_I2C_2_Master_Start
  2402 ;;		_I2C_2_Master_Stop
  2403 ;;		_I2C_2_Master_Write
  2404 ;; This function is called by:
  2405 ;;		_color_click_init
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text18
  2410   0015C6                     __ptext18:
  2411                           	callstack 0
  2412   0015C6                     _color_writetoaddr:
  2413                           	callstack 26
  2414                           
  2415                           ;incstack = 0
  2416                           ;color_writetoaddr@address stored from wreg
  2417   0015C6  6E05               	movwf	color_writetoaddr@address^0,c
  2418   0015C8                     
  2419                           ;color.c: 26:     I2C_2_Master_Start();
  2420   0015C8  EC1E  F00B         	call	_I2C_2_Master_Start	;wreg free
  2421                           
  2422                           ;color.c: 27:     I2C_2_Master_Write(0x52 | 0x00);
  2423   0015CC  0E52               	movlw	82
  2424   0015CE  EC0E  F00B         	call	_I2C_2_Master_Write
  2425                           
  2426                           ;color.c: 28:     I2C_2_Master_Write(0x80 | address);
  2427   0015D2  5005               	movf	color_writetoaddr@address^0,w,c
  2428   0015D4  0980               	iorlw	128
  2429   0015D6  EC0E  F00B         	call	_I2C_2_Master_Write
  2430                           
  2431                           ;color.c: 29:     I2C_2_Master_Write(value);
  2432   0015DA  5004               	movf	color_writetoaddr@value^0,w,c
  2433   0015DC  EC0E  F00B         	call	_I2C_2_Master_Write
  2434                           
  2435                           ;color.c: 30:     I2C_2_Master_Stop();
  2436   0015E0  EC19  F00B         	call	_I2C_2_Master_Stop	;wreg free
  2437   0015E4  0012               	return		;funcret
  2438   0015E6                     __end_of_color_writetoaddr:
  2439                           	callstack 0
  2440                           
  2441 ;; *************** function _I2C_2_Master_Write *****************
  2442 ;; Defined at:
  2443 ;;		line 40 in file "i2c.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  data_byte       1    wreg     unsigned char 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  data_byte       1    2[COMRAM] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2460 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2461 ;;Total ram usage:        1 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; Hardware stack levels required when called: 2
  2464 ;; This function calls:
  2465 ;;		_I2C_2_Master_Idle
  2466 ;; This function is called by:
  2467 ;;		_color_writetoaddr
  2468 ;;		_color_read_Red
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text19
  2473   00161C                     __ptext19:
  2474                           	callstack 0
  2475   00161C                     _I2C_2_Master_Write:
  2476                           	callstack 27
  2477                           
  2478                           ;incstack = 0
  2479                           ;I2C_2_Master_Write@data_byte stored from wreg
  2480   00161C  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
  2481   00161E                     
  2482                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2483   00161E  ECBD  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2484   001622                     
  2485                           ;i2c.c: 42:   SSP2BUF = data_byte;
  2486   001622  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2487   001626  0012               	return		;funcret
  2488   001628                     __end_of_I2C_2_Master_Write:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function _I2C_2_Master_Stop *****************
  2492 ;; Defined at:
  2493 ;;		line 35 in file "i2c.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; Hardware stack levels required when called: 2
  2514 ;; This function calls:
  2515 ;;		_I2C_2_Master_Idle
  2516 ;; This function is called by:
  2517 ;;		_color_writetoaddr
  2518 ;;		_color_read_Red
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text20
  2523   001632                     __ptext20:
  2524                           	callstack 0
  2525   001632                     _I2C_2_Master_Stop:
  2526                           	callstack 27
  2527   001632                     
  2528                           ;i2c.c: 36:   I2C_2_Master_Idle();
  2529   001632  ECBD  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2530   001636                     
  2531                           ;i2c.c: 37:   SSP2CON2bits.PEN = 1;
  2532   001636  010E               	movlb	14	; () banked
  2533   001638  85DA               	bsf	218,2,b	;volatile
  2534   00163A                     
  2535                           ; BSR set to: 14
  2536   00163A  0012               	return		;funcret
  2537   00163C                     __end_of_I2C_2_Master_Stop:
  2538                           	callstack 0
  2539                           
  2540 ;; *************** function _I2C_2_Master_Start *****************
  2541 ;; Defined at:
  2542 ;;		line 25 in file "i2c.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2560 ;;Total ram usage:        0 bytes
  2561 ;; Hardware stack levels used: 1
  2562 ;; Hardware stack levels required when called: 2
  2563 ;; This function calls:
  2564 ;;		_I2C_2_Master_Idle
  2565 ;; This function is called by:
  2566 ;;		_color_writetoaddr
  2567 ;;		_color_read_Red
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text21
  2572   00163C                     __ptext21:
  2573                           	callstack 0
  2574   00163C                     _I2C_2_Master_Start:
  2575                           	callstack 27
  2576   00163C                     
  2577                           ;i2c.c: 26:   I2C_2_Master_Idle();
  2578   00163C  ECBD  F00A         	call	_I2C_2_Master_Idle	;wreg free
  2579   001640                     
  2580                           ;i2c.c: 27:   SSP2CON2bits.SEN = 1;
  2581   001640  010E               	movlb	14	; () banked
  2582   001642  81DA               	bsf	218,0,b	;volatile
  2583   001644                     
  2584                           ; BSR set to: 14
  2585   001644  0012               	return		;funcret
  2586   001646                     __end_of_I2C_2_Master_Start:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function _I2C_2_Master_Idle *****************
  2590 ;; Defined at:
  2591 ;;		line 21 in file "i2c.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;Total ram usage:        1 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 1
  2612 ;; This function calls:
  2613 ;;		Nothing
  2614 ;; This function is called by:
  2615 ;;		_I2C_2_Master_Start
  2616 ;;		_I2C_2_Master_RepStart
  2617 ;;		_I2C_2_Master_Stop
  2618 ;;		_I2C_2_Master_Write
  2619 ;;		_I2C_2_Master_Read
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text22
  2624   00157A                     __ptext22:
  2625                           	callstack 0
  2626   00157A                     _I2C_2_Master_Idle:
  2627                           	callstack 27
  2628   00157A                     l70:
  2629   00157A  010E               	movlb	14	; () banked
  2630   00157C  B5D8               	btfsc	216,2,b	;volatile
  2631   00157E  EFC3  F00A         	goto	u11
  2632   001582  EFC5  F00A         	goto	u10
  2633   001586                     u11:
  2634   001586  EFBD  F00A         	goto	l70
  2635   00158A                     u10:
  2636   00158A                     
  2637                           ; BSR set to: 14
  2638   00158A  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2639   00158E  0E1F               	movlw	31
  2640   001590  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
  2641   001592  A4D8               	btfss	status,2,c
  2642   001594  EFCE  F00A         	goto	u21
  2643   001598  EFD0  F00A         	goto	u20
  2644   00159C                     u21:
  2645   00159C  EFBD  F00A         	goto	l70
  2646   0015A0                     u20:
  2647   0015A0                     
  2648                           ; BSR set to: 14
  2649   0015A0  0012               	return		;funcret
  2650   0015A2                     __end_of_I2C_2_Master_Idle:
  2651                           	callstack 0
  2652                           
  2653 ;; *************** function _I2C_2_Master_Init *****************
  2654 ;; Defined at:
  2655 ;;		line 4 in file "i2c.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;		None
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2673 ;;Total ram usage:        0 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; Hardware stack levels required when called: 1
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_color_click_init
  2680 ;;		_main
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text23
  2685   001550                     __ptext23:
  2686                           	callstack 0
  2687   001550                     _I2C_2_Master_Init:
  2688                           	callstack 28
  2689   001550                     
  2690                           ;i2c.c: 6:   SSP2CON1bits.SSPM= 0b1000;
  2691   001550  010E               	movlb	14	; () banked
  2692   001552  51D9               	movf	217,w,b	;volatile
  2693   001554  0BF0               	andlw	-16
  2694   001556  0908               	iorlw	8
  2695   001558  6FD9               	movwf	217,b	;volatile
  2696   00155A                     
  2697                           ; BSR set to: 14
  2698                           ;i2c.c: 7:   SSP2CON1bits.SSPEN = 1;
  2699   00155A  8BD9               	bsf	217,5,b	;volatile
  2700                           
  2701                           ;i2c.c: 8:   SSP2ADD = (64000000/(4*100000))-1;
  2702   00155C  0E9F               	movlw	159
  2703   00155E  6FD6               	movwf	214,b	;volatile
  2704   001560                     
  2705                           ; BSR set to: 14
  2706                           ;i2c.c: 11:   TRISDbits.TRISD5 = 1;
  2707   001560  8A84               	bsf	132,5,c	;volatile
  2708   001562                     
  2709                           ; BSR set to: 14
  2710                           ;i2c.c: 12:   TRISDbits.TRISD6 = 1;
  2711   001562  8C84               	bsf	132,6,c	;volatile
  2712   001564                     
  2713                           ; BSR set to: 14
  2714                           ;i2c.c: 13:   ANSELDbits.ANSELD5=0;
  2715   001564  9BA7               	bcf	167,5,b	;volatile
  2716   001566                     
  2717                           ; BSR set to: 14
  2718                           ;i2c.c: 14:   ANSELDbits.ANSELD6=0;
  2719   001566  9DA7               	bcf	167,6,b	;volatile
  2720                           
  2721                           ;i2c.c: 15:   SSP2DATPPS=0x1D;
  2722   001568  0E1D               	movlw	29
  2723   00156A  6F1D               	movwf	29,b	;volatile
  2724                           
  2725                           ;i2c.c: 16:   SSP2CLKPPS=0x1E;
  2726   00156C  0E1E               	movlw	30
  2727   00156E  6F1C               	movwf	28,b	;volatile
  2728                           
  2729                           ;i2c.c: 17:   RD5PPS=0x1C;
  2730   001570  0E1C               	movlw	28
  2731   001572  6F6F               	movwf	111,b	;volatile
  2732                           
  2733                           ;i2c.c: 18:   RD6PPS=0x1B;
  2734   001574  0E1B               	movlw	27
  2735   001576  6F70               	movwf	112,b	;volatile
  2736   001578                     
  2737                           ; BSR set to: 14
  2738   001578  0012               	return		;funcret
  2739   00157A                     __end_of_I2C_2_Master_Init:
  2740                           	callstack 0
  2741                           
  2742 ;; *************** function _Timer0_init *****************
  2743 ;; Defined at:
  2744 ;;		line 7 in file "timers.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2762 ;;Total ram usage:        0 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 1
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text24
  2773   0015A2                     __ptext24:
  2774                           	callstack 0
  2775   0015A2                     _Timer0_init:
  2776                           	callstack 29
  2777   0015A2                     
  2778                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  2779   0015A2  50D6               	movf	214,w,c	;volatile
  2780   0015A4  0B1F               	andlw	-225
  2781   0015A6  0940               	iorlw	64
  2782   0015A8  6ED6               	movwf	214,c	;volatile
  2783   0015AA                     
  2784                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  2785   0015AA  88D6               	bsf	214,4,c	;volatile
  2786                           
  2787                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  2788   0015AC  50D6               	movf	214,w,c	;volatile
  2789   0015AE  0BF0               	andlw	-16
  2790   0015B0  0908               	iorlw	8
  2791   0015B2  6ED6               	movwf	214,c	;volatile
  2792                           
  2793                           ;timers.c: 12:     T0CON0bits.T0OUTPS=0b000;
  2794   0015B4  0EF0               	movlw	-16
  2795   0015B6  16D5               	andwf	213,f,c	;volatile
  2796   0015B8                     
  2797                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
  2798   0015B8  88D5               	bsf	213,4,c	;volatile
  2799                           
  2800                           ;timers.c: 17:     TMR0H=0b00001011;
  2801   0015BA  0E0B               	movlw	11
  2802   0015BC  6ED4               	movwf	212,c	;volatile
  2803                           
  2804                           ;timers.c: 18:     TMR0L=0b11011011;
  2805   0015BE  0EDB               	movlw	219
  2806   0015C0  6ED3               	movwf	211,c	;volatile
  2807   0015C2                     
  2808                           ;timers.c: 20:     T0CON0bits.T0EN=1;
  2809   0015C2  8ED5               	bsf	213,7,c	;volatile
  2810   0015C4  0012               	return		;funcret
  2811   0015C6                     __end_of_Timer0_init:
  2812                           	callstack 0
  2813                           
  2814 ;; *************** function _HighISR *****************
  2815 ;; Defined at:
  2816 ;;		line 19 in file "interrupts.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2833 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2834 ;;Total ram usage:        1 bytes
  2835 ;; Hardware stack levels used: 1
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		Interrupt level 2
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	intcode
  2844   000008                     __pintcode:
  2845                           	callstack 0
  2846   000008                     _HighISR:
  2847                           	callstack 25
  2848                           
  2849                           ;incstack = 0
  2850   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2851   00000A                     
  2852                           ;interrupts.c: 22:  if(PIR2bits.C1IF){
  2853   00000A  010E               	movlb	14	; () banked
  2854   00000C  A135               	btfss	53,0,b	;volatile
  2855   00000E  EF0B  F000         	goto	i2u62_41
  2856   000012  EF0D  F000         	goto	i2u62_40
  2857   000016                     i2u62_41:
  2858   000016  EF21  F000         	goto	i2l1630
  2859   00001A                     i2u62_40:
  2860   00001A                     
  2861                           ; BSR set to: 14
  2862                           ;interrupts.c: 23:         LATHbits.LATH3 = !LATHbits.LATH3;
  2863   00001A  A680               	btfss	128,3,c	;volatile
  2864   00001C  EF12  F000         	goto	i2u63_41
  2865   000020  EF16  F000         	goto	i2u63_40
  2866   000024                     i2u63_41:
  2867   000024  6A01               	clrf	??_HighISR^0,c
  2868   000026  2A01               	incf	??_HighISR^0,f,c
  2869   000028  EF17  F000         	goto	i2u64_48
  2870   00002C                     i2u63_40:
  2871   00002C  6A01               	clrf	??_HighISR^0,c
  2872   00002E                     i2u64_48:
  2873   00002E  4601               	rlncf	??_HighISR^0,f,c
  2874   000030  4601               	rlncf	??_HighISR^0,f,c
  2875   000032  4601               	rlncf	??_HighISR^0,f,c
  2876   000034  5080               	movf	128,w,c	;volatile
  2877   000036  1801               	xorwf	??_HighISR^0,w,c
  2878   000038  0BF7               	andlw	-9
  2879   00003A  1801               	xorwf	??_HighISR^0,w,c
  2880   00003C  6E80               	movwf	128,c	;volatile
  2881   00003E                     
  2882                           ;interrupts.c: 27:         PIR2bits.C1IF=0;
  2883   00003E  010E               	movlb	14	; () banked
  2884   000040  9135               	bcf	53,0,b	;volatile
  2885   000042                     i2l1630:
  2886                           
  2887                           ; BSR set to: 14
  2888                           ;interrupts.c: 31:     if (PIR0bits.TMR0IF) {
  2889   000042  AB33               	btfss	51,5,b	;volatile
  2890   000044  EF26  F000         	goto	i2u65_41
  2891   000048  EF28  F000         	goto	i2u65_40
  2892   00004C                     i2u65_41:
  2893   00004C  EF2D  F000         	goto	i2l1636
  2894   000050                     i2u65_40:
  2895   000050                     
  2896                           ; BSR set to: 14
  2897                           ;interrupts.c: 34:         TMR0H=0b00001011;
  2898   000050  0E0B               	movlw	11
  2899   000052  6ED4               	movwf	212,c	;volatile
  2900                           
  2901                           ;interrupts.c: 35:         TMR0L=0b11011011;
  2902   000054  0EDB               	movlw	219
  2903   000056  6ED3               	movwf	211,c	;volatile
  2904   000058                     
  2905                           ; BSR set to: 14
  2906                           ;interrupts.c: 37:         PIR0bits.TMR0IF=0;
  2907   000058  9B33               	bcf	51,5,b	;volatile
  2908   00005A                     i2l1636:
  2909                           
  2910                           ; BSR set to: 14
  2911                           ;interrupts.c: 40:     if (PIR4bits.RC4IF) {
  2912   00005A  5137               	movf	55,w,b	;volatile
  2913   00005C                     
  2914                           ; BSR set to: 14
  2915   00005C  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2916   00005E  0011               	retfie		f
  2917   000060                     __end_of_HighISR:
  2918                           	callstack 0
  2919                           
  2920                           	psect	rparam
  2921   000000                     
  2922                           	psect	temp
  2923   00005E                     btemp:
  2924                           	callstack 0
  2925   00005E                     	ds	1
  2926   000000                     int$flags	set	btemp
  2927   000000                     wtemp8	set	btemp+1
  2928   000000                     ttemp5	set	btemp+1
  2929   000000                     ttemp6	set	btemp+4
  2930   000000                     ttemp7	set	btemp+8
  2931                           
  2932                           	psect	config
  2933                           
  2934                           ;Config register CONFIG1L @ 0x300000
  2935                           ;	External Oscillator mode Selection bits
  2936                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2937                           ;	Power-up default value for COSC bits
  2938                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2939   300000                     	org	3145728
  2940   300000  AA                 	db	170
  2941                           
  2942                           ;Config register CONFIG1H @ 0x300001
  2943                           ;	unspecified, using default values
  2944                           ;	Clock Out Enable bit
  2945                           ;	CLKOUTEN = 0x1, unprogrammed default
  2946                           ;	Clock Switch Enable bit
  2947                           ;	CSWEN = 0x1, unprogrammed default
  2948                           ;	Fail-Safe Clock Monitor Enable bit
  2949                           ;	FCMEN = 0x1, unprogrammed default
  2950   300001                     	org	3145729
  2951   300001  FF                 	db	255
  2952                           
  2953                           ;Config register CONFIG3L @ 0x300004
  2954                           ;	WDT Period Select bits
  2955                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2956                           ;	WDT operating mode
  2957                           ;	WDTE = OFF, WDT Disabled
  2958   300004                     	org	3145732
  2959   300004  9F                 	db	159
  2960                           
  2961                           ;Config register CONFIG3H @ 0x300005
  2962                           ;	unspecified, using default values
  2963                           ;	WDT Window Select bits
  2964                           ;	WDTCWS = 0x7, unprogrammed default
  2965                           ;	WDT input clock selector
  2966                           ;	WDTCCS = 0x7, unprogrammed default
  2967   300005                     	org	3145733
  2968   300005  FF                 	db	255
  2969                           tosu	equ	0xFFF
  2970                           tosh	equ	0xFFE
  2971                           tosl	equ	0xFFD
  2972                           stkptr	equ	0xFFC
  2973                           pclatu	equ	0xFFB
  2974                           pclath	equ	0xFFA
  2975                           pcl	equ	0xFF9
  2976                           tblptru	equ	0xFF8
  2977                           tblptrh	equ	0xFF7
  2978                           tblptrl	equ	0xFF6
  2979                           tablat	equ	0xFF5
  2980                           prodh	equ	0xFF4
  2981                           prodl	equ	0xFF3
  2982                           indf0	equ	0xFEF
  2983                           postinc0	equ	0xFEE
  2984                           postdec0	equ	0xFED
  2985                           preinc0	equ	0xFEC
  2986                           plusw0	equ	0xFEB
  2987                           fsr0h	equ	0xFEA
  2988                           fsr0l	equ	0xFE9
  2989                           wreg	equ	0xFE8
  2990                           indf1	equ	0xFE7
  2991                           postinc1	equ	0xFE6
  2992                           postdec1	equ	0xFE5
  2993                           preinc1	equ	0xFE4
  2994                           plusw1	equ	0xFE3
  2995                           fsr1h	equ	0xFE2
  2996                           fsr1l	equ	0xFE1
  2997                           bsr	equ	0xFE0
  2998                           indf2	equ	0xFDF
  2999                           postinc2	equ	0xFDE
  3000                           postdec2	equ	0xFDD
  3001                           preinc2	equ	0xFDC
  3002                           plusw2	equ	0xFDB
  3003                           fsr2h	equ	0xFDA
  3004                           fsr2l	equ	0xFD9
  3005                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      93
    BANK0           160      0     112
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pmL	PTR unsigned char  size(1) Largest target is 11
		 -> main@motorL(COMRAM[9]), 

    main@pmL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pmR	PTR unsigned char  size(1) Largest target is 11
		 -> main@motorR(COMRAM[9]), 

    main@pmR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    main@pmR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    main@pred_val	PTR unsigned char  size(1) Largest target is 20
		 -> main@red_val(COMRAM[20]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S1020DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    S1020DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    S2309$buffer	PTR unsigned char  size(2) Largest target is 0

    S2309$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(1) Largest target is 20
		 -> main@red_val(COMRAM[20]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> main@red_val(COMRAM[20]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhlll[1]), CCPR4H(BITBIGSFRllhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhlll[1]), CCPR3H(BITBIGSFRllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                45    45      0    4283
                                             43 COMRAM    41    41      0
                  _I2C_2_Master_Init
                        _Timer0_init
                   _color_click_init
              _color_click_toggleLED
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    15      4    3287
                                             26 COMRAM    17    13      4
                     _color_read_Red (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2936
                                             22 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    2586
                                             11 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     782
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    1     0      1     136
                                              2 COMRAM     1     0      1
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2      91
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      30
                                              2 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_toggleLED                                1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      15
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_click_toggleLED
   _color_read_Red
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _color_read_Red (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      70       5       70.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      5D       1       98.9%
BITBIGSFRllhllh     37      0       0      49        0.0%
BITBIGSFRllhhl      31      0       0      47        0.0%
BITBIGSFRllllh      2D      0       0      52        0.0%
BITBIGSFRlllllh     2A      0       0      60        0.0%
BITBIGSFRllllll     26      0       0      68        0.0%
BITBIGSFRhhlll      1E      0       0      38        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      44        0.0%
BITBIGSFRlllllh     14      0       0      53        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRlllllh     11      0       0      55        0.0%
BITBIGSFRhhlhh       E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllllh      B      0       0      66        0.0%
BITBIGSFRlllllh      9      0       0      54        0.0%
BITBIGSFRllhlll      8      0       0      50        0.0%
BITBIGSFRllhhhl      6      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      67        0.0%
BITBIGSFRlllllh      6      0       0      59        0.0%
BITBIGSFRlllllh      5      0       0      63        0.0%
BITBIGSFRlllllh      5      0       0      58        0.0%
BITBIGSFRllhhhh      3      0       0      45        0.0%
BITBIGSFRlllllh      3      0       0      57        0.0%
BITBIGSFRllhlh       2      0       0      48        0.0%
BITBIGSFRhhllh       2      0       0      37        0.0%
BITBIGSFRlllllh      1      0       0      62        0.0%
BITBIGSFRlllllh      1      0       0      61        0.0%
BITBIGSFRlllllh      1      0       0      65        0.0%
BITBIGSFRlllllh      1      0       0      64        0.0%
BITBIGSFRlhlh        1      0       0      42        0.0%
BITBIGSFRhhlhl       1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      56        0.0%
BITBIGSFRlllh        1      0       0      51        0.0%
BITBIGSFRhlhh        1      0       0      39        0.0%
BITBIGSFRhlhl        1      0       0      40        0.0%
BITBIGSFRlhh         1      0       0      41        0.0%
BITBIGSFRlhll        1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CD      69        0.0%
DATA                 0      0      CD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 12 16:12:16 2024

               _color_read_Red 1388                             l31 1458                             l40 1386  
                           l34 15E4                             l37 13D6                             l70 157A  
                           l73 15A0                             l82 163A                             l67 1578  
                           l76 1644                             l85 1626                             l79 1630  
                           l88 1418                             u10 158A                             u11 1586  
                           u20 15A0                             u21 159C                   ___awdiv@sign 0007  
                          l320 1602                            l139 1320                            l332 161A  
                          l237 15C4                            l329 1606                            l338 154E  
                          l625 1078                            l638 1128                            u300 1402  
                          u301 13FA                            u320 1616                            u321 1612  
                          u340 1334                            u341 132C                            u318 1404  
                          u360 1352                            u361 134A                            u380 1376  
                          u381 136E                            u358 1336                            u800 10A6  
                          u801 10A2                            u378 1354                            u730 0FC8  
                          u810 10C0                            u731 0FC4                            u811 10BC  
                          u740 0FE2                            u820 10DE                            u900 0E2C  
                          u741 0FDE                            u821 10DA                            u901 0E28  
                          u398 1378                            u750 1008                            u830 10F4  
                          u910 0E66                            u751 1004                            u831 10F0  
                          u911 0E62                            u760 1026                            u840 1118  
                          u920 0E7E                            u761 1022                            u841 1114  
                          u921 0E7A                            u770 1042                            u850 11E6  
                          u930 0EB4                            u771 103E                            u851 11E2  
                          u931 0EAE                            u780 1068                            u860 11F6  
                          u940 0EB6                            u781 1064                            u861 11F2  
                          u790 108C                            u870 121C                            u950 0F16  
                          u791 1088                            u871 1218                            u951 0F12  
                          u880 124E                            u960 0F26                            u881 124A  
                          u961 0F22                            u890 14D6                            u970 0F36  
                          u891 14D2                            u971 0F32                            u980 0F46  
                          u981 0F42                            u990 0F86                            u991 0F82  
                          _abs 14C8                   ___awmod@sign 0007                            wreg 0FE8  
                         l1110 0FB4                           l1120 14E2                           l2000 11B6  
                         l1123 14FA                           ?_abs 0008                           l1116 1492  
                         l1150 158A                           l1135 127E                           l1320 1564  
                         l1312 1550                           l1072 14C6                           l1322 1566  
                         l1314 155A                           l1250 163C                           l1330 13DA  
                         l1146 1646                           l1316 1560                           l1148 157A  
                         l1252 1640                           l1260 1636                           l1340 1416  
                         l1332 13DE                           l1318 1562                           l1254 161E  
                         l1334 13E6                           l1326 1628                           l1256 1622  
                         l1336 13EE                           l1328 162C                           l1344 1606  
                         l1258 1632                           l1338 1414                           l1346 1616  
                         l1460 15A2                           l1462 15AA                           l1470 15F0  
                         l1710 0FD4                           l1702 0FB6                           l1464 15B8  
                         l1472 15F2                           l1720 1008                           l1712 0FE2  
                         l1704 0FBA                           l1800 0E0E                           l1466 15C2  
                         l1386 1322                           l1474 15FC                           l1730 1042  
                         l1722 1010                           l1714 0FEA                           l1706 0FC8  
                         l1810 0E4E                           l1802 0E2C                           l1900 12E4  
                         l1476 15FE                           l1468 15E6                           l1740 1068  
                         l1732 104A                           l1724 1018                           l1716 0FEE  
                         l1708 0FD0                           l1820 0EB8                           l1812 0E66  
                         l1804 0E34                           l1910 1310                           l1902 12E6  
                         l1478 1600                           l1742 1070                           l1734 104C  
                         l1726 1026                           l1718 0FF6                           l1750 108C  
                         l1830 0F36                           l1822 0EE8                           l1814 0E7E  
                         l1806 0E40                           l1920 131A                           l1912 1312  
                         l1904 12F0                           l1736 1052                           l1728 102C  
                         l1760 10C0                           l1752 1094                           l1832 0F46  
                         l1824 0F04                           l1816 0E96                           l1840 0F8A  
                         l1808 0E44                           l1850 15C8                           l1922 131C  
                         l1914 1314                           l1906 12F2                           l1738 1058  
                         l1770 10FC                           l1762 10C8                           l1754 1098  
                         l1746 107A                           l1834 0F58                           l1826 0F16  
                         l1818 0EA0                           l1930 14A4                           l1924 131E  
                         l1916 1316                           l1908 12FC                           l1940 152A  
                         l1772 1102                           l1764 10D0                           l1756 10A6  
                         l1748 107E                           l1836 0F72                           l1828 0F26  
                         l1844 0F96                           l1852 145A                           l1932 14AC  
                         l1870 1442                           l1862 141A                           l1918 1318  
                         l1942 1536                           l1766 10DE                           l1774 1108  
                         l1758 10AE                           l1790 121C                           l1782 11D6  
                         l1838 0F74                           l1854 1462                           l1934 14BC  
                         l1926 1494                           l1880 1454                           l1872 144C  
                         l1864 141E                           l1944 1538                           l1776 1118  
                         l1768 10F4                           l1792 124E                           l1784 11E6  
                         l1856 1472                           l1928 149C                           l1960 1142  
                         l1882 1456                           l1874 144E                           l1866 1428  
                         l1890 1280                           l1938 1526                           l1778 1120  
                         l1786 11F6                           l1858 148A                           l1970 1152  
                         l1962 1146                           l1954 112A                           l1876 1450  
                         l1868 1438                           l1884 1388                           l1892 12AA  
                         l1796 14C8                           l1788 1200                           l1980 1172  
                         l1972 1156                           l1964 114A                           l1956 1132  
                         l1878 1452                           l1886 13CE                           l1894 12CE  
                         l1798 14D6                           l1990 1192                           l1982 1176  
                         l1974 115E                           l1966 114A                           l1958 1136  
                         l1896 12D8                           l1992 1192                           l1984 117A  
                         l1976 1166                           l1968 114E                           l1898 12DA  
                         l1994 1192                           l1986 1182                           l1978 116E  
                         l1996 1196                           l1988 118A                           l1998 11AE  
                         STR_1 0E01                           u1000 148A                           u1001 1486  
                         u1010 154E                           u1011 154A                           u1077 11C0  
                         u1087 142E                   _BAUD4CONbits 0EE9                           _T2PR 0FBC  
                  main@red_val 002E                           abs@a 0008                           _dbuf 009C  
                         _main 112A                           _prec 0057                           fsr1h 0FE2  
                         fsr2h 0FDA                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           btemp 005E                           start 0060  
       __end_of_color_read_Red 13D8                __end_of_HighISR 0060                   ___param_bank 0000  
                        ??_abs 000A                          ?_main 0001                          _ADPCH 0F5F  
              __end_of___awdiv 107A                __end_of___awmod 112A                ___awdiv@divisor 0004  
                        i2l283 005C                ___awdiv@counter 0006                   vfpfcnvrt@fmt 000D  
                        _TMR0H 0FD4                          _TMR0L 0FD3        __end_of_sendCharSerial4 161C  
   __end_of_I2C_2_Master_Start 1646     __end_of_I2C_2_Master_Write 1628                          _flags 0059  
__end_of_color_click_toggleLED 1388                          _fputc 11D6                   main@pred_val 0042  
                        _width 0055                          _putch 1646                          tablat 0FF5  
                        ttemp5 005F                          ttemp6 0062                          ttemp7 0066  
                        status 0FD8                          wtemp8 005F                __end_of_sprintf 14C8  
        _I2C_2_Master_RepStart 1628                ?_color_read_Red 0006                __initialization 14FC  
                 __end_of_main 11D6                         ??_main 002C                  __activetblptr 0001  
                       ?_fputc 0002                         _ADRESH 0F64                         _CCPR1H 0FAA  
                       _CCPR2H 0FA6                         _CCPR3H 0F25                         _CCPR4H 0F21  
             ___awdiv@dividend 0002                         ?_putch 0001                         _RC0PPS 0E62  
                       _RC4REG 0EE3                         _RE2PPS 0E74                         _RD5PPS 0E6F  
                       _RC7PPS 0E69                         _RE4PPS 0E76                         _RD6PPS 0E70  
                       i2l1630 0042                         i2l1632 0050                         i2l1624 000A  
                       i2l1634 0058                         i2l1626 001A                         i2l1636 005A  
                       i2l1628 003E                         _RG6PPS 0E88                  vfpfcnvrt@done 0010  
                    ??_HighISR 0001       __end_of_color_click_init 145A                         _RX4PPS 0E15  
                       _TX4REG 0EE4                  ??_Timer0_init 0002                   _CCPTMRS0bits 0FAD  
                 vfprintf@cfmt 001A                      ??___awdiv 0006                      ??___awmod 0006  
                       clear_0 1502                         clear_1 150E               ___awdiv@quotient 0008  
              ___awmod@divisor 0004                         isa$std 0001                ___awmod@counter 0006  
                       fputc@c 0002                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 1494              ??_initDCmotorsPWM 0004  
                    ??_sprintf 001F                     __accesstop 0060        __end_of__initialization 1514  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001                 __pcstackCOMRAM 0001  
                __end_of_fputc 1280                  __end_of_putch 1648            __end_of_Timer0_init 15C6  
                      ??_fputc 0005                        ??_putch 0002                     __pbssBANK0 0060  
            _color_writetoaddr 15C6                   _T2CLKCONbits 0FBF             ?_color_writetoaddr 0004  
          ??_color_writetoaddr 0005                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
                      i2u62_40 001A                        i2u62_41 0016                        i2u63_40 002C  
                      i2u63_41 0024                        i2u65_40 0050                        i2u64_48 002E  
                      i2u65_41 004C                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0004               ??_color_read_Red 0008                        _HighISR 0008  
    __end_of_color_writetoaddr 15E6                      _ADREFbits 0F58             _I2C_2_Master_Start 163C  
                   _initUSART4 15E6             _I2C_2_Master_Write 161C                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000B                    _Timer0_init 15A2  
      sendStringSerial4@string 0003                        ___awdiv 0FB6                        ___awmod 107A  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0017  
                 __psmallconst 0E00                        __pcinit 14FC                        __ramtop 0E00  
                      __ptext0 112A                        __ptext1 1494                        __ptext2 145A  
                      __ptext3 0E0E                        __ptext4 11D6                        __ptext5 1646  
                      __ptext6 14C8                        __ptext7 107A                        __ptext8 0FB6  
                      __ptext9 1526                      _T2CONbits 0FBD               ___awmod@dividend 0002  
                    _T2HLTbits 0FBE                  _RxBufWriteCnt 005D                        _sprintf 1494  
         ??_I2C_2_Master_Start 0003           ??_I2C_2_Master_Write 0003           end_of_initialization 1514  
        _color_click_toggleLED 1322                        fputc@fp 0004              ?_color_click_init 0001  
           ??_color_click_init 0006              __end_of_vfpfcnvrt 0FB6                        postdec2 0FDD  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0012                     ??_vfprintf 001A                _initDCmotorsPWM 1280  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISGbits 0F87       color_writetoaddr@address 0005  
      ??_I2C_2_Master_RepStart 0003                    _CCP1CONbits 0FAB                   _EUSART4RXbuf 00BC  
                 _EUSART4TXbuf 0060                    _CCP2CONbits 0FA7                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0002  
                   main@motorL 0043                     main@motorR 004C                    vfpfcnvrt@ap 000E  
                  vfpfcnvrt@cp 0011                    vfpfcnvrt@fp 000C            start_initialization 14FC  
                  __end_of_abs 14FC                  _TxBufWriteCnt 005B         ?_color_click_toggleLED 0001  
      __end_of_initDCmotorsPWM 1322                    vfprintf@fmt 0018                    __pbssCOMRAM 0055  
                     ?_HighISR 0001                   ?_Timer0_init 0001                      __pintcode 0008  
                     ?___awdiv 0002                       ?___awmod 0002           I2C_2_Master_Read@ack 0004  
         I2C_2_Master_Read@tmp 0005                    __smallconst 0E00              _I2C_2_Master_Idle 157A  
            _I2C_2_Master_Init 1550              _I2C_2_Master_Read 13D8              _I2C_2_Master_Stop 1632  
                 _RxBufReadCnt 005C             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001       initDCmotorsPWM@PWMperiod 0002  
                     ?_sprintf 001B              _sendStringSerial4 1526            ??_I2C_2_Master_Idle 0002  
          ??_I2C_2_Master_Init 0002            ??_I2C_2_Master_Read 0003                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0003                       _LATCbits 0F7B                       _LATEbits 0F7D  
                     _LATGbits 0F7F                       _LATHbits 0F80                       _PIE0bits 0E29  
                     _PIE2bits 0E2B             ?_sendStringSerial4 0003                       _PIE4bits 0E2D  
                     _PIR0bits 0E33                       _PIR2bits 0E35                       _PIR4bits 0E37  
             ?_initDCmotorsPWM 0002              ??_sendCharSerial4 0002                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                      _vfpfcnvrt 0E0E  
                   _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 15A2      __end_of_I2C_2_Master_Init 157A  
    __end_of_I2C_2_Master_Read 141A      __end_of_I2C_2_Master_Stop 163C    I2C_2_Master_Write@data_byte 0003  
                 _TxBufReadCnt 005A                     vfpfcnvrt@c 0016      __end_of_sendStringSerial4 1550  
__end_of_I2C_2_Master_RepStart 1632                   ??_initUSART4 0002                       __Hrparam 0000  
                   vfprintf@ap 0019                       __Lrparam 0000                     vfprintf@fp 0017  
                 __Lsmallconst 0E00                     ?_vfpfcnvrt 000C                     _ANSELAbits 0E92  
                   _ANSELDbits 0EA7                     sprintf@fmt 001C                     _T0CON0bits 0FD5  
                   _T0CON1bits 0FD6        ??_color_click_toggleLED 0002             __end_of_initUSART4 1604  
                     __ptext10 1604                       __ptext11 15E6                       __ptext20 1632  
                     __ptext12 1280                       __ptext21 163C                       __ptext13 1388  
                     __ptext22 157A                       __ptext14 1628                       __ptext23 1550  
                     __ptext15 13D8                       __ptext24 15A2                       __ptext16 1322  
                     __ptext17 141A                       __ptext18 15C6                       __ptext19 161C  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       int$flags 005E                       _vfprintf 145A  
                   _INTCONbits 0FF2                       intlevel2 0000                      sprintf@ap 001F  
                  ??_vfpfcnvrt 000F               _color_click_init 141A                       sprintf@f 0020  
                     sprintf@s 001B                     _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C  
                   _TX4STAbits 0EE8                _sendCharSerial4 1604  
